#
# Welcome to PhotoStructure! These are the settings for version 2023.11.0.
#
# Please see https://photostructure.com/environment-variables for more
# information about using environment variables with PhotoStructure.
#
# As of version 2.1, ".env" files (like this one) can be imported by
# PhotoStructure, but requires extra configuration. See
# https://photostructure.com/faq/environment-variables/#PS_ENV_FILE for
# details.


#
# The following settings categories are stored in the system settings.toml:
#
# * System.Cache
# * System.Desktops
# * System.Filesystem
# * System.Logging
# * System.Networking
# * System.Paths
# * System.Processes
# * System.Security
# * System.Tools
#
# The following settings categories are stored in the library settings.toml:
#
# * Library.Auth
# * Library.Color
# * Library.Db
# * Library.Deduping
# * Library.Events
# * Library.Filters
# * Library.HealthChecks
# * Library.Parsing
# * Library.Previews
# * Library.Privacy
# * Library.Reporting
# * Library.Sidecars
# * Library.Subscriptions
# * Library.Sync
# * Library.Tagging
# * Library.Updates
# * Library.Video
# * Library.Volumes
# * Library.Web
#
# Please visit https://forum.photostructure.com if you find anything that may
# be a bug or have any questions, ideas, or feedback. We'd love to hear from
# you!


# -------------
# PS_CONFIG_DIR
# -------------
#
# If the environment variable PS_CONFIG_DIR is set, PhotoStructure will use
# that value as your system configuration directory.
#
# This is an advanced setting--we recommend using the default value, if
# possible.
#
# If the PS_CONFIG_DIR environment variable is not set, the default is
# specific to your operating system:
#
# - On Docker: "/ps/config" if that bind-mount exists, otherwise
# "/ps/library/.photostructure/docker-config".
#
# - On Linux: firstNonBlank([$XDG_DATA_HOME, $XDG_CONFIG_HOME,
# "$HOME/.config"]) + "/PhotoStructure"
#
# - On macOS: "$HOME/Library/Application Support/PhotoStructure"
#
# - On Windows: "$APPDATA/PhotoStructure" ($APPDATA is normally set to
# $HOME/AppData/Roaming)


# -----------
# PS_ENV_FILE
# -----------
#
# If set, PhotoStructure will attempt to read the .env file specified by this
# environment variable.
#
# This must be a full pathname.
#
# Any value set by this file will override values in settings.toml files.
#
# See
# https://photostructure.com/faq/environment-variables/#alternative-coming-in-v21-support-for-env-files
# for details.



##############################################################################
#
# Settings for System.paths:
#

# --------------------------
# PS_CONFIG_DIR or configDir
# --------------------------
#
# This is the system configuration directory. This can't be overridden in the
# system settings.toml, as it's used to _find_ the system settings.toml! This
# setting is here for documentation, and to allow the PS_CONFIG_DIR
# environment variable to override the default setting.
#
# PhotoStructure's system configuration directory defaults to:
#
# - Windows: %APPDATA%\PhotoStructure (%APPDATA% is normally set to
# %HOME%/AppData/Roaming)
#
# - macOS: ~/Library/Application Support/PhotoStructure
#
# - Linux: ${XDG_CONFIG_DIR:$HOME/.config}/PhotoStructure.
#
# This setting is transient and only set via environment variables.
#
#
# PS_CONFIG_DIR="/home/mrm/.config/PhotoStructure-test"


# ------------------------------------------------
# PS_COPY_ASSETS_TO_LIBRARY or copyAssetsToLibrary
# ------------------------------------------------
#
# Should PhotoStructure copy photos and videos to your PhotoStructure Library?
# This setting holds the value for the welcome page's "May PhotoStructure
# organize your photos and videos?" section, and is called "automatic
# organization" on the website.
#
# Read more about this setting here:
# https://photostructure.com/getting-started/automatic-library-organization/ .
#
# PS_COPY_ASSETS_TO_LIBRARY="true"


# ----------------------------
# PS_LIBRARY_DIR or libraryDir
# ----------------------------
#
# This is the absolute path to your PhotoStructure library. If missing, or set
# to an empty string, the welcome page will be shown when PhotoStructure
# launches. Use native file separators (so on windows, use back-slashes).
#
# Aliases: "PS_LIBRARY_PATH or PS_LIBRARY"
#
# PS_LIBRARY_DIR=""


# -----------------------------------
# PS_SCAN_ALL_DRIVES or scanAllDrives
# -----------------------------------
#
# Should PhotoStructure scan all folders on all drives available to this
# computer for photos and videos?
#
# PS_SCAN_ALL_DRIVES="true"


# --------------------------
# PS_SCAN_PATHS or scanPaths
# --------------------------
#
# This holds an array of absolute paths to scan for assets. If you are setting
# this via an environment variable, you may use either standard PATH
# formatting, like `PS_SCAN_PATHS="/path/one:/path/two"`, or use JSON
# encoding, like `PS_SCAN_PATHS='["/path/one","/path/two"]'`.
#
# Aliases: "PS_SCAN_PATH"
#
# PS_SCAN_PATHS="[]"


# -----------------------------------
# PS_ARGV_SCAN_PATHS or argvScanPaths
# -----------------------------------
#
# This holds an array of absolute paths provided on the command line to
# import. This overrides "scanPaths", and should always be scanned for
# changes. See https://forum.photostructure.com/t/1597/4 . For internal use
# only.
#
# This setting is transient and only set via environment variables.
#
#
# PS_ARGV_SCAN_PATHS="[]"


# ------------------------
# PS_CACHE_DIR or cacheDir
# ------------------------
#
# Where would you like PhotoStructure's scratch file directory? This must be a
# fast, local disk with several gigabytes free.
#
# Note that if PS_FORCE_LOCAL_DB_REPLICA is enabled, the local DB replica will
# be stored in this directory while PhotoStructure is running: don't delete
# it!
#
# If this is set to /tmp PhotoStructure will write to a user-specific
# /tmp/.photostructure-cache-$UID directory.
#
# PS_CACHE_DIR="$HOME/.cache/photostructure"


# ------------------------------------------------
# PS_FORCE_LOCAL_DB_REPLICA or forceLocalDbReplica
# ------------------------------------------------
#
# Libraries on remote filesystems can suffer from bad performance and
# inconsistent transactions due to slow file I/O and missing file locking
# mechanics. When opening libraries on remote filesystems, or if this setting
# is `true`, PhotoStructure will copy the library database to the `cacheDir`
# and perform I/O against this local replica. Changes made to the local db
# replica are then periodically copied back to the remote library.
#
# If you've overridden this value in the past, know that v23.5 and after
# should automatically set this to the correct value for you.
#
# For more details, see
# https://forum.photostructure.com/t/whats-force-local-db-replica/837 and
# https://photostructure.com/about/2023-release-notes/#-sqlite-improvements .
#
# PS_FORCE_LOCAL_DB_REPLICA="false"


# --------------------------------
# PS_ORIGINALS_DIR or originalsDir
# --------------------------------
#
# This is the directory that PhotoStructure uses to store original images when
# "copyAssetsToLibrary" is enabled. Absolute paths are supported. Relative
# paths are evaluated from your libraryDir. This setting defaults to ".",
# which is the same as your PhotoStructure library directory, unless you are
# on docker, and a /ps/originals directory exists.
#
# If you open your PhotoStructure library on a different computer, and that
# computer doesn't have access to your originals volume, full-screen zoom
# won't work, and non-transcoded videos will not play.
#
# This system setting needs to be set appropriately on different computers (it
# won't be set automatically!)
#
# If you have a large library and want to use an SSD, we recommend you set
# your libraryDir to your SSD, and use this setting to store your originals on
# a larger volume, rather than using the "previewsDir" setting.
#
# See https://forum.photostructure.com/t/hybrid-photostructure-libraries/775
# and
# https://forum.photostructure.com/t/new-easy-mode-for-docker-coming-in-v2-1/1278/6?u=mrm
# .
#
# Aliases: "PS_ORIGINAL_DIR"
#
# PS_ORIGINALS_DIR="."


# ----------------------
# PS_PID_FILE or pidFile
# ----------------------
#
# This is the absolute path to the PID file for the main process. This is
# optional and only used by PhotoStructure for Servers. Make sure the UID/GID
# that PhotoStructure runs as can read and write to this file.
#
# Aliases: "PIDFILE"
#
# PS_PID_FILE=""


# ------------------------------
# PS_PREVIEWS_DIR or previewsDir
# ------------------------------
#
# This is the directory that PhotoStructure uses to store preview images. This
# defaults to the ".photostructure/previews" directory inside your
# PhotoStructure library. Absolute paths here are supported, but if you keep
# your library and previews directory separated, take care when you open your
# library on different computers, as this setting needs to be adjusted for
# those computers as well.
#
# NOTE: "originalDirs" is recommended instead of this setting; If you get
# "previewsDir" wrong, your library won't work. If you get "originalsDir"
# wrong, you just break full-screen asset zooming and playback for
# non-transcoded videos.
#
# See https://forum.photostructure.com/t/hybrid-photostructure-libraries/775 .
#
# PS_PREVIEWS_DIR=".photostructure/previews"


# -------------------------------------
# PS_SCAN_MY_PICTURES or scanMyPictures
# -------------------------------------
#
# NOTE: this setting has been deprecated and will be removed in a future
# version of PhotoStructure.
#
# If set, PhotoStructure will automatically add your pictures directory to
# your "scanPaths" setting and then flip this setting back to false. Add your
# Pictures directory directly to your scanPaths setting instead.
#
# PS_SCAN_MY_PICTURES="false"



##############################################################################
#
# Settings for System.desktops:
#

# ----------------------------------------
# PS_AUTO_HIDE_MENU_BAR or autoHideMenuBar
# ----------------------------------------
#
# If true, PhotoStructure for Desktops on Windows and Linux will auto hide the
# menu bar unless the Alt key is pressed.
#
# PS_AUTO_HIDE_MENU_BAR="false"


# ---------------------------------
# PS_HIDE_ON_LAUNCH or hideOnLaunch
# ---------------------------------
#
# If true, PhotoStructure for Desktops will not open the main window when
# launched. The tray icon will still be visible.
#
# This setting is ignored by PhotoStructure for Server editions.
#
# PS_HIDE_ON_LAUNCH="false"


# ----------------------------------------------
# PS_PAUSE_SYNC_ON_BATTERY or pauseSyncOnBattery
# ----------------------------------------------
#
# If true, PhotoStructure for Desktops will pause sync when the system is on
# battery power.
#
# This setting is ignored by PhotoStructure for Server editions.
#
# PS_PAUSE_SYNC_ON_BATTERY="false"



##############################################################################
#
# Settings for System.filesystem:
#

# -------------------------------------------------
# PS_ALLOW_FILESYSTEM_SLEEP or allowFilesystemSleep
# -------------------------------------------------
#
# If true, PhotoStructure will set disable a handful of other settings which
# will allow the OS to put the filesystem to sleep when it's idle. This can
# save power, but can also cause PhotoStructure to miss file changes.
#
# This sets sharedStatePollMs=0 and dbFsLockStaleMs=0.
#
# PS_ALLOW_FILESYSTEM_SLEEP="false"


# -------------------------------------------------------
# PS_EXCLUDED_FILESYSTEM_TYPES or excludedFilesystemTypes
# -------------------------------------------------------
#
# Volumes with these filesystem types will never be scanned or imported.
#
# These are only relevant to Linux and macOS systems.
#
# Aliases: "PS_IGNORED_FILESYSTEM_TYPES"
#
# PS_EXCLUDED_FILESYSTEM_TYPES="[\"cgmfs\",\"cgroup\",\"debugfs\",\"devfs\",\"devtmpfs\",\"sunrpc\",\"sysfs\",\"tracefs\",\"udev\"]"


# ---------------------------------------------------------------
# PS_EXCLUDED_MOUNTPOINT_BASENAMES or excludedMountpointBasenames
# ---------------------------------------------------------------
#
# PhotoStructure won't descend into mountpoints that match these names.
#
# PS_EXCLUDED_MOUNTPOINT_BASENAMES="[\"#snapshot\"]"


# -------------------------------------------------------
# PS_EXCLUDED_MOUNTPOINT_PATHS or excludedMountpointPaths
# -------------------------------------------------------
#
# PhotoStructure won't descend into mountpoints that match these paths.
#
# Aliases: "PS_IGNORED_MOUNTPOINTS"
#
# PS_EXCLUDED_MOUNTPOINT_PATHS="[\"/dev/shm\",\"/run\",\"/run/lock\",\"/run/qemu\",\"/run/snapd/ns\",\"/tmp\",\"/var/tmp\"]"


# -------------------------------------------------------
# PS_EXCLUDED_ROOT_DIRECTORIES or excludedRootDirectories
# -------------------------------------------------------
#
# PhotoStructure won't descend into these root directories looking for assets.
#
# PS_EXCLUDED_ROOT_DIRECTORIES="[\"boot\",\"efi\",\"etc\",\"lib\",\"proc\",\"snap\",\"sys\",\"tmp\"]"


# -----------------------------
# PS_MOUNTPOINTS or mountpoints
# -----------------------------
#
# If set, this value will be used instead of the cross-platform mountpoints()
# method. Normally only for internal use.
#
# PS_MOUNTPOINTS="[]"


# -----------------------------------------
# PS_MOUNTPOINTS_TTL_MS or mountpointsTtlMs
# -----------------------------------------
#
# How frequently should PhotoStructure scan for new volumes (so PhotoStructure
# can detect when drives are inserted or ejected)? Shorter than 10-15 seconds
# may cause issues on Windows. A value of 0 will cache indefinitely. This
# defaults to 15 minutes on Windows, which relies on polling. On Linux and
# macOS this is set to 0 because findmnt/gio and diskutil notify mountpoint
# changes without polling.
#
# PS_MOUNTPOINTS_TTL_MS="1m"


# ---------------------------------------------------
# PS_REMOTE_FILESYSTEM_TYPES or remoteFilesystemTypes
# ---------------------------------------------------
#
# Filesystems with these types should always be considered "remote".
#
# PS_REMOTE_FILESYSTEM_TYPES="[\"sshfs\",\"s3fs\"]"


# -------------------------------------------------
# PS_RETAIN_FILE_BIRTHTIMES or retainFileBirthtimes
# -------------------------------------------------
#
# Should PhotoStructure try to retain file "birth" times (also known as
# "creation" times) when it copies files? If enabled, note that this is a
# best-effort approach--Linux and some remote filesystems (like SMB) do not
# support this feature.
#
# PS_RETAIN_FILE_BIRTHTIMES="true"


# -----------------------------------
# PS_STAT_TIMEOUT_MS or statTimeoutMs
# -----------------------------------
#
# Filesystem traversal can be dangerous business with scratched CDROMs and old
# busted hard drives. To prevent PhotoStructure from getting "stuck" when
# trying to read these devices, it will timeout directory iteration if stat()
# or readdir() exceeds this value. The default of 30 seconds should cover most
# issues with spun-down hard drives and NAS/WAN latency.
#
# PS_STAT_TIMEOUT_MS="30s"


# -----------------------------
# PS_USE_FS_WATCH or useFsWatch
# -----------------------------
#
# If true, PhotoStructure will use the native filesystem watch APIs to detect
# file changes. This is the default and recommended setting. If false,
# PhotoStructure will poll the filesystem for changes instead. This is not
# recommended, but may be useful if you're running PhotoStructure on an OS or
# filesystem that doesn't support change notifications, like some network
# filesystems.
#
# See https://nodejs.org/api/fs.html#availability for more information.
#
# PS_USE_FS_WATCH="true"


# ----------------------------------------------
# PS_VALIDATE_MOUNTPOINTS or validateMountpoints
# ----------------------------------------------
#
# When true, PhotoStructure ignores volumes whose mountpoints do not exist. If
# any volumes are unhealthy, though, this may wedge volume handlers.
#
# PS_VALIDATE_MOUNTPOINTS="true"


# ------------------------------------------------
# PS_VOLUME_METADATA_TTL_MS or volumeMetadataTtlMs
# ------------------------------------------------
#
# How frequently should PhotoStructure reload volume metadata (like
# bytes-free, which is used in a health check)? Values less than a minute are
# not necessary. A value of 0 will cache indefinitely.
#
# PS_VOLUME_METADATA_TTL_MS="15m"


# ---------------------------------------
# PS_WATCH_DEBOUNCE_MS or watchDebounceMs
# ---------------------------------------
#
# How long to wait for a file to "settle down" and stop changing before the
# file watcher notifies listeners that the file changed. Some applications
# (like PhotoStructure) use work-in-progress "atomic" writes, but many
# applications overwrite in-place, which can cause the file watcher to see
# incomplete results until the write process is complete.
#
# The default is 500ms (½ second) to handle slow remote NASes and slow-writing
# applications.
#
# Set to 0 to disable.
#
# PS_WATCH_DEBOUNCE_MS="500ms"



##############################################################################
#
# Settings for System.cache:
#

# ------------------------------------
# PS_FS_CACHE_SLOW_MS or fsCacheSlowMs
# ------------------------------------
#
# If a cache entry takes longer than this value to compute, cache results for
# later reuse to the filesystem.
#
# The default is very short, under the assumption that cache filesystem
# read/writes are <10ms.
#
# Set this to 0 to never cache to the filesystem.
#
# PS_FS_CACHE_SLOW_MS="25ms"


# ---------------------------------
# PS_IMAGE_CACHE_MS or imageCacheMs
# ---------------------------------
#
# Assets requiring conversion may need intermediary file storage as they are
# imported. These intermediary files only need to live as long as the import
# process for that asset. Too short of a time will result in this conversion
# work being re-done during import. Too long of a time will result in
# additional diskspace in your cache directory being consumed.
#
# PS_IMAGE_CACHE_MS="15m"


# -------------------------------------
# PS_READDIR_CACHE_MS or readdirCacheMs
# -------------------------------------
#
# readdir() can take a long time over slow network shares and when directories
# are very large. This setting controls how long to cache readdir results that
# are slow (which take >= .5 seconds). Too short of a time will result in low
# cache hit rates, and very slow imports for these problematic directories.
# Too long of a time will result in PhotoStructure not seeing changes made to
# these directories.
#
# Set to 0 to disable readdir() caching.
#
# PS_READDIR_CACHE_MS="5m"


# ------------------------------------------------------
# PS_READDIR_SIZE_CACHE_THRESH or readdirSizeCacheThresh
# ------------------------------------------------------
#
# If readdir() has more than this number of child elements, always cache it.
#
# Set to 0 to disable readdir() caching.
#
# PS_READDIR_SIZE_CACHE_THRESH="1024"



##############################################################################
#
# Settings for System.logging:
#

# ------------------------
# PS_LOG_COLOR or logColor
# ------------------------
#
# Output all logs with terminal escape codes to colorize output. If NO_COLOR=1
# or TERM=dumb or TERM=unknown, this defaults to false. See
# https://no-color.org/ .
#
# PS_LOG_COLOR="true"


# ------------------------------------
# PS_LOG_COMPRESSION or logCompression
# ------------------------------------
#
# Should log files be compressed as they are rotated?
#
# PS_LOG_COMPRESSION="true"


# ---------------------------------------
# PS_LOG_CONTEXT_LIMIT or logContextLimit
# ---------------------------------------
#
# PhotoStructure will only log, at most, this number of elements or key/value
# pairs.
#
# PS_LOG_CONTEXT_LIMIT="64"


# --------------------
# PS_LOG_DIR or logDir
# --------------------
#
# Determines the directory that log files will be written to.
#
# PS_LOG_DIR="$HOME/.config/PhotoStructure/logs"


# ------------------------
# PS_LOG_LEVEL or logLevel
# ------------------------
#
# Determines which level of log messages are emitted to log files. May be
# "debug", "info", "warn", "error", "fatal", or several log level directives
# followed by a context (like "debug:web").
#
# Aliases: "PS_LOG, LOG or LOG_LEVEL"
#
# PS_LOG_LEVEL="warn"


# --------------------------
# PS_LOG_SERVER or logServer
# --------------------------
#
# Format as hostname:port or ip_address:port.
#
# If set, processes will emit log entries, formatted as GELF and separated by
# null bytes, via TCP.
#
# If this is set, the default PS_LOG_LEVEL drops from "error" to "info".
#
# See https://docs.greylog.org/v1/docs/gelf .
#
# PS_LOG_SERVER=""


# -------------------------------------
# PS_LOG_SERVER_LEVEL or logServerLevel
# -------------------------------------
#
# This is the log level used to filter logs before sending them to
# "PS_LOG_SERVER".
#
# If unset, we'll use the value of "PS_LOG_LEVEL".
#
# PS_LOG_SERVER_LEVEL="warn"


# --------------------
# PS_LOG_SQL or logSql
# --------------------
#
# Log SQL queries to the default log level. **Enabling this negatively impacts
# performance.**.
#
# This defaults to false.
#
# PS_LOG_SQL="false"


# --------------------------
# PS_LOG_STDOUT or logStdout
# --------------------------
#
# Log to stdout? This should be false unless you're running a service by hand.
#
# This setting is transient and only set via environment variables.
#
#
# Aliases: "LOG_STDOUT or PS_STDOUT"
#
# PS_LOG_STDOUT="false"


# ---------------------------
# PS_LOG_WEB_DIR or logWebDir
# ---------------------------
#
# Determines the directory that log files will be written to. If unset, will
# use logDir.
#
# PS_LOG_WEB_DIR=""


# -------------------------------------
# PS_LOG_WEB_REQUESTS or logWebRequests
# -------------------------------------
#
# Write an access log for all web requests?
#
# PS_LOG_WEB_REQUESTS="false"


# -----------------
# PS_QUIET or quiet
# -----------------
#
# If true, the main service won't emit lifecycle messages to stdout. Note that
# logStdout=true or logTail=true will override quiet=true.
#
# PS_QUIET="false"


# ------------------------
# PS_TAIL_LOGS or tailLogs
# ------------------------
#
# Output all logs from currently running PhotoStructure processes? This should
# be false unless you're running a service by hand.
#
# This setting is transient and only set via environment variables.
#
#
# PS_TAIL_LOGS="false"



##############################################################################
#
# Settings for System.networking:
#

# -----------------------
# PS_HOSTNAME or hostname
# -----------------------
#
# If set, this overrides the local hostname. Useful under docker and when OSes
# change hostnames due to networking bugs (see macOS).
#
# PS_HOSTNAME=""


# ------------------------
# PS_HTTP_PORT or httpPort
# ------------------------
#
# Network port for HTTP access to your PhotoStructure library.
#
# PS_HTTP_PORT="1787"


# -------------------------
# PS_LOCALHOST or localhost
# -------------------------
#
# If "exposeNetworkWithoutAuth" is false, what value should PhotoStructure use
# for localhost? (Some firewalls are OK with "127.0.0.1", some require
# "localhost"). See https://letsencrypt.org/docs/certificates-for-localhost/
# and https://photostructure.com/faq/troubleshooting/#windows-firewall-issues
# .
#
# PS_LOCALHOST="127.0.0.1"



##############################################################################
#
# Settings for System.processes:
#

# -----------------------------------------
# PS_COMMAND_TIMEOUT_MS or commandTimeoutMs
# -----------------------------------------
#
# How long should PhotoStructure wait for a command that touches the
# filesystem (and doesn't do anything computationally expensive)? Note that
# external hard drives can take 10-15 seconds to spin up, and antivirus apps
# can hang for tens of seconds on slow machines, so values less than the
# default may result in undesired timeouts.
#
# PS_COMMAND_TIMEOUT_MS="12s"


# -------------------------------------
# PS_CPU_BUSY_PERCENT or cpuBusyPercent
# -------------------------------------
#
# This setting is a rough goal for PhotoStructure to load the system during
# library synchronization. A higher value here will allow PhotoStructure to
# run more tasks in parallel, but may impact your system's responsiveness.
#
# Under normal circumstances, setting this to any value over 100 will result
# in full CPU saturation, and is not recommended, as it will cause spurious
# timeouts leading to some percentage of failed imports.
#
# While syncing, PhotoStructure will not dequeue sync file jobs if the current
# system busy percent exceeds this value.
#
# Setting this value to 0 will run the sync process in "single-process
# mode"--no external worker processes will be spun up by the "sync" process,
# and file imports will be done serially.
#
# Minimum value: 0
# Maximum value: 500
# Aliases: "PS_CPU_LOAD_PERCENT"
#
# PS_CPU_BUSY_PERCENT="75"


# ----------------------------------------------------
# PS_EXIFTOOL_PROCS_PER_CHILD or exiftoolProcsPerChild
# ----------------------------------------------------
#
# Each PhotoStructure process spins up an ExifTool when needed. Note that the
# "web" and "sync" services use exiftool, so the total number of exiftool
# processes will be several times larger than this value. If this is unset,
# this will default to roughly 50% of the number of supported concurrent
# imports.
#
# PS_EXIFTOOL_PROCS_PER_CHILD=""


# ---------------------------------------------------------
# PS_FATAL_ERROR_RATE_PER_MINUTE or fatalErrorRatePerMinute
# ---------------------------------------------------------
#
# If PhotoStructure sees errors at a higher rate per minute than this setting,
# PhotoStructure will shut down. If this value is too high, PhotoStructure may
# look busy, but it's just busy failing. If this value is set too low,
# temporary errors (due to network flakiness or USB hiccups) might shut down
# PhotoStructure needlessly.
#
# PS_FATAL_ERROR_RATE_PER_MINUTE="20"


# -------------------------------------------------
# PS_MAX_CONCURRENT_IMPORTS or maxConcurrentImports
# -------------------------------------------------
#
# How many imports can PhotoStructure schedule concurrently? This will be
# clamped between 1 and 32.
#
# If not set, a sensible value will be computed based on "cpuLoadPercent".
#
# If set explicitly, this and "sharpThreadsPerProcess" will override
# "cpuLoadPercent" and "maxConcurrentImportsWhenRemote" settings.
#
# Aliases: "PS_MAX_SYNC_FILE_JOBS"
#
# PS_MAX_CONCURRENT_IMPORTS=""


# -----------------------------------------------------------------------
# PS_MAX_CONCURRENT_IMPORTS_WHEN_REMOTE or maxConcurrentImportsWhenRemote
# -----------------------------------------------------------------------
#
# How many concurrent files can be imported if the library is on a remote
# volume? This defaults to 2 to try to avoid overwhelming HDD I/O on the
# remote NAS. If this is larger than (cpus.length * cpuLoadPercent) or max
# child processes given available memory, this value will be ignored.
#
# Aliases: "PS_MAX_SYNC_FILE_JOBS_WHEN_REMOTE"
#
# PS_MAX_CONCURRENT_IMPORTS_WHEN_REMOTE="2"


# -------------------------------
# PS_MAX_MEMORY_MB or maxMemoryMb
# -------------------------------
#
# PhotoStructure will restart services if they use more than this value
# (measured in megabytes, or 1,000,000 bytes). Note that this is not the
# allocated memory. See maxRssMemoryMb for total allocated.
#
# Set to 0 to deactivate this check.
#
# PS_MAX_MEMORY_MB="500"


# ----------------------------
# PS_MAX_RETRIES or maxRetries
# ----------------------------
#
# If a task has an error, how many times should we retry before giving up?
#
# If you have a flaky network, this can help ensure imports are comprehensive.
#
# Set this to 0 to disable retries.
#
# PS_MAX_RETRIES="1"


# ----------------------------------------------
# PS_MAX_TASKS_PER_PROCESS or maxTasksPerProcess
# ----------------------------------------------
#
# PhotoStructure will recycle threads and worker processes after they handle
# this number of requests. Smaller values may reduce overall memory pressure.
# Larger values amortize startup costs over fewer restarts.
#
# Minimum value: 1
# Maximum value: 5000
#
# PS_MAX_TASKS_PER_PROCESS="500"


# -----------------------------------------------------------
# PS_MIN_DELAY_BETWEEN_RETRIES_MS or minDelayBetweenRetriesMs
# -----------------------------------------------------------
#
# If a task has an error, should we wait a bit before retrying? This may help
# temper error cascades.
#
# Aliases: "PS_MIN_DELAY_BETWEEN_SPAWN_MILLIS"
#
# PS_MIN_DELAY_BETWEEN_RETRIES_MS="250ms"


# -------------------------------------------------------
# PS_MIN_DELAY_BETWEEN_SPAWN_MS or minDelayBetweenSpawnMs
# -------------------------------------------------------
#
# The shorter this time is, the faster PhotoStructure will ramp up parallelism
# at the start of a sync. Having a larger value here mitigates initial system
# load from forking. See
# https://photostructure.github.io/batch-cluster.js/classes/BatchClusterOptions.html#minDelayBetweenSpawnMillis
# .
#
# Aliases: "PS_MIN_DELAY_BETWEEN_SPAWN_MILLIS"
#
# PS_MIN_DELAY_BETWEEN_SPAWN_MS="1s500ms"


# ------------------------------------
# PS_MIN_DISK_FREE_GB or minDiskFreeGb
# ------------------------------------
#
# PhotoStructure will pause processing if the GB free on the disk that your
# library is stored on drops below this value. The value provided here will be
# multiplied by 1000^3. Note that many OSes will corrupt themselves when disks
# fill up, and SSDs can fail as they approach full capacity. A value of less
# than 8 may be unsafe (due to hibernation and OS update files).
#
# Set this value to 0 to disable free disk space health checks.
#
# PS_MIN_DISK_FREE_GB="16"


# --------------------------------------------------------------------------
# PS_MIN_TIME_BETWEEN_SERVICE_RESTARTS_MS or minTimeBetweenServiceRestartsMs
# --------------------------------------------------------------------------
#
# If a service (like web or sync) is restarted due to an error, how many
# milliseconds must elapse before another restart is allowed? This helps
# prevent system load due to service flapping.
#
# PS_MIN_TIME_BETWEEN_SERVICE_RESTARTS_MS="7s"


# ------------------------------
# PS_PROBATION_MS or probationMs
# ------------------------------
#
# Normally when subsystems crash, PhotoStructure restarts them after a delay.
# Unfortunately, if there is a persistent error, this means PhotoStructure
# keeps trying something that won't ever work; it looks busy, but it's just
# busy failing. To prevent this situation, PhotoStructure will shut down if
# there are high error rates within 2 minutes of starting. (2 minutes should
# be long enough to spin up the web process, sync process, and import at least
# one pending file). Setting this to 0 will prevent PhotoStructure from
# exiting due to high error rates.
#
# PS_PROBATION_MS="2m"


# --------------------------------------
# PS_PROCESS_PRIORITY or processPriority
# --------------------------------------
#
# By default, PhotoStructure runs child processes with a "below normal"
# priority, so your system remains usable while imports run. Changing this
# value to "normal" or "above normal" may speed up imports but cause your
# system to be unresponsive. Changing this value to "idle" may prevent imports
# from running at all.
#
# For Linux and macOS systems, see
# https://en.wikipedia.org/wiki/Nice_%28Unix%29 .
#
# For Windows, see
# https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processpriorityclass?view=netframework-4.8
# .
#
# Valid values: [
#   "Normal",
#   "BelowNormal",
#   "Idle",
#   "Low"
# ]
#
# PS_PROCESS_PRIORITY="BelowNormal"


# ----------------------------------------------
# PS_SENSITIVE_ENV_REG_EXP or sensitiveEnvRegExp
# ----------------------------------------------
#
# PhotoStructure spawns several external processes, including "exiftool" and
# "ffmpeg".
#
# PhotoStructure filters out environment keys  that are likely to contain
# sensitive information (like API access tokens or passwords) from these child
# processes so they aren't accidentally logged or accessible by external
# tools.
#
# This regex is applied case-insensitively.
#
# PS_SENSITIVE_ENV_REG_EXP="key(?!word)|aws_|npm_|pass|private|secret|token"


# ------------------------------------------------------
# PS_SHARP_THREADS_PER_PROCESS or sharpThreadsPerProcess
# ------------------------------------------------------
#
# How many image processing threads can be spun per process?
#
# If set to 0 (the default), PhotoStructure will pick an optimal value based
# on available memory and CPU cores.
#
# Minimum value: 0
# Maximum value: 8
# Aliases: "PS_SHARP_THREADS_PER_JOB"
#
# PS_SHARP_THREADS_PER_PROCESS="0"


# -------------------------------------------
# PS_SHORT_PROCESS_NAMES or shortProcessNames
# -------------------------------------------
#
# Should PhotoStructure name its own processes "PhotoStructure" + the name of
# the sub-process, or abbreviated "phstr"? This defaults to false on
# PhotoStructure for Desktops and true everywhere else.
#
# PS_SHORT_PROCESS_NAMES="true"


# -----------------------------------
# PS_STREAM_FLUSH_MS or streamFlushMs
# -----------------------------------
#
# See
# https://photostructure.github.io/batch-cluster.js/classes/BatchClusterOptions.html#streamFlushMillis
# .
#
# Aliases: "PS_STREAM_FLUSH_MILLIS"
#
# PS_STREAM_FLUSH_MS="30ms"


# --------------------------------------------
# PS_SYNC_EXIT_TIMEOUT_MS or syncExitTimeoutMs
# --------------------------------------------
#
# Wait at most this time for sync to shut down cleanly. This needs to be long
# enough to possibly copy the library database back to the remote filesystem
# if your library is stored on a network drive. Set to 0 to disable this
# timeout.
#
# PS_SYNC_EXIT_TIMEOUT_MS="2m"


# -------------------------------------------------
# PS_TIMEOUT_THROTTLE_COEFF or timeoutThrottleCoeff
# -------------------------------------------------
#
# When timeouts are detected, PhotoStructure throttles back concurrency
# automatically, with the assumption that some system is currently being
# overwhelmed and that less load should result in fewer failures due to
# timeouts.
#
# Specifically, concurrency will be set to 1 / current rate of timeouts per
# minute over the past several minutes.
#
# Throttling will be more aggressive as this value approaches 0. For example a
# value of 0.1 will be very aggressive throttling. A value of 8 will only slow
# down sync after many soft timeouts.
#
# Disable throttling by setting to 0.
#
# PS_TIMEOUT_THROTTLE_COEFF="1"



##############################################################################
#
# Settings for System.security:
#

# --------------------------------
# PS_CSP_DIRECTIVE or cspDirective
# --------------------------------
#
# If you're seeing CSP errors with older browsers, add your
# externally-available base URL to this setting, and it will be appended to
# the CSP directives. See
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src
# .
#
# PS_CSP_DIRECTIVE=""


# -----------------------------------
# PS_CSP_REPORT_ONLY or cspReportOnly
# -----------------------------------
#
# DANGEROUS: do not enforce, and only report CSP violations. This should only
# be set to true temporarily to assist in debugging. See
# https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP .
#
# PS_CSP_REPORT_ONLY="false"


# ---------------------------------------------------------
# PS_DISABLED_HELMET_MIDDLEWARE or disabledHelmetMiddleware
# ---------------------------------------------------------
#
# What Helmet middleware should PhotoStructure disable?
#
# By default, PhotoStructure enables all middleware, but if your reverse proxy
# is handling HTTP headers, you may want to remove some of Helmet's
# functionality.
#
# Disable all middleware by using the value "all", but know that CSP
# management is handled by the "cspDirective" and "cspReportOnly" settings.
#
# See https://github.com/helmetjs/helmet#reference .
#
# Valid values: [
#   "all",
#   "contentSecurityPolicy",
#   "crossOriginEmbedderPolicy",
#   "crossOriginOpenerPolicy",
#   "crossOriginResourcePolicy",
#   "dnsPrefetchControl",
#   "expectCt",
#   "frameguard",
#   "hidePoweredBy",
#   "hsts",
#   "ieNoOpen",
#   "noSniff",
#   "originAgentCluster",
#   "permittedCrossDomainPolicies",
#   "referrerPolicy",
#   "xssFilter"
# ]
#
# PS_DISABLED_HELMET_MIDDLEWARE="[]"


# ----------------------------------------------------------
# PS_EXPOSE_NETWORK_WITHOUT_AUTH or exposeNetworkWithoutAuth
# ----------------------------------------------------------
#
# Normally the web service is only accessible to the computer running
# PhotoStructure. Setting this to true will expose your library to all
# computers on your network. You should own or trust all systems on that
# network, as there is no auth in PhotoStructure currently. Future versions of
# PhotoStructure will add authorization mechanisms, at which point this
# setting will be deleted.
#
# **Don't enable this unless you know what you are doing**.
#
# PS_EXPOSE_NETWORK_WITHOUT_AUTH="false"


# ----------------------------
# PS_TRUST_PROXY or trustProxy
# ----------------------------
#
# What reverse proxies should PhotoStructure "trust"? See
# <http://expressjs.com/en/guide/behind-proxies.html>.
#
# This setting should either be "false" (don't trust any proxies), "loopback",
# (only trust loopback/localhost), a single subnet (like "192.168.1.0/24"), or
# a comma-delimited set of subnets.
#
# PS_TRUST_PROXY="loopback"


# -------------------------------------------------------
# PS_UPGRADE_INSECURE_REQUESTS or upgradeInsecureRequests
# -------------------------------------------------------
#
# May PhotoStructure send the Upgrade-Insecure-Requests header? PhotoStructure
# will set the default to true automatically if it sees _any_ request is via
# https.
#
# Set this explicitly to false if you access PhotoStructure via both http
# (inside your LAN) and https (outside your LAN).
#
# PS_UPGRADE_INSECURE_REQUESTS="false"



##############################################################################
#
# Settings for System.tools:
#

# ----------------------------------
# PS_DCRAW_EMU_PATH or dcraw_emuPath
# ----------------------------------
#
# This should be the absolute, native path to the "dcraw_emu" binary on this
# system. If this is set to "dcraw_emu", PhotoStructure will search your
# $PATH. See https://www.libraw.org/docs/Samples-LibRaw.html .
#
# PS_DCRAW_EMU_PATH="dcraw_emu"


# ----------------------------
# PS_ENABLE_SIMD or enableSIMD
# ----------------------------
#
# Should PhotoStructure enable SIMD extensions when running image operations?
# This defaults to false on macOS and Raspberry Pis due to instability on
# those platforms.
#
# PS_ENABLE_SIMD="true"


# ---------------------------------------
# PS_ENABLE_VIPS_CACHE or enableVipsCache
# ---------------------------------------
#
# Should PhotoStructure enable VIPS caching, which may help speed up image
# operations? Note that this increases memory usage, and cache hit rates are
# low.
#
# PS_ENABLE_VIPS_CACHE="false"


# ----------------------------
# PS_FFMPEG_PATH or ffmpegPath
# ----------------------------
#
# This should be the absolute, native path to the "ffmpeg" binary on this
# system. If this is set to "ffmpeg", PhotoStructure will search your $PATH.
# See https://photostructure.com/getting-started/video-support/ .
#
# PS_FFMPEG_PATH="ffmpeg"


# ---------------------------------------
# PS_HEIF_CONVERT_PATH or heifConvertPath
# ---------------------------------------
#
# This should be the absolute, native path to the "heif-convert" binary on
# this system. If this is set to "heif-convert", PhotoStructure will search
# your $PATH. See https://photostructure.com/getting-started/heif-support/ .
#
# PS_HEIF_CONVERT_PATH="heif-convert"


# -------------------------------------
# PS_POWER_SHELL_ARGS or powerShellArgs
# -------------------------------------
#
# The following are the default arguments added to spin up PowerShell on
# Windows devices.
#
# See
# https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_powershell_exe?view=powershell-5.1
# for all arguments that PowerShell.exe accepts.
#
# See
# https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-5.1
# for a description of Bypass.
#
# See
# https://forum.photostructure.com/t/eliminate-powershell-profile-and-execution-policy-related-errors/184
# for more details about why this needs to be configurable.
#
# (Versions prior to v1.0.0 only specified "-NoLogo").
#
# PS_POWER_SHELL_ARGS="[\"-NoLogo\",\"-NoProfile\",\"-ExecutionPolicy\",\"Bypass\"]"


# -------------------------------------------
# PS_POWER_SHELL_CULTURE or powerShellCulture
# -------------------------------------------
#
# If set to a non-blank value, PhotoStructure on Windows machines will set
# PowerShell's `[System.Threading.Thread]::CurrentThread.CurrentCulture` to
# this value. This allows PhotoStructure to parse PowerShell output reliably.
#
# PS_POWER_SHELL_CULTURE="en-US"


# ---------------------------------------
# PS_POWER_SHELL_PROCS or powerShellProcs
# ---------------------------------------
#
# How many PowerShell child processes may each PhotoStructure process run?
# Defaults to max(2, (maxCpus() / 4)).
#
# PS_POWER_SHELL_PROCS="2"


# ---------------------------------------------------------
# PS_SHOW_FILE_IN_FOLDER_COMMAND or showFileInFolderCommand
# ---------------------------------------------------------
#
# If set, the first argument will be used as a command (or path to command),
# and the subsequent arguments (if present) will be used as arguments. The
# native path to the file or the file: URI will be appended, based on the
# value given to the "showFileInFolderUsesFileUri" setting. If this is set to
# an empty array, the default tool for your platform will be used instead:
# "nautilus -s" on linux, "open -R" on mac, and "explorer /select" on Windows.
#
# This is provided to support Linux desktops that don't use Gnome.
#
# PS_SHOW_FILE_IN_FOLDER_COMMAND="[]"


# -------------------------------------------------------------------
# PS_SHOW_FILE_IN_FOLDER_USES_FILE_URI or showFileInFolderUsesFileUri
# -------------------------------------------------------------------
#
# Does the showFileInFolderCommand expect a file: URI to the file? If this is
# false, the native path will be appended instead.
#
# PS_SHOW_FILE_IN_FOLDER_USES_FILE_URI="true"


# ----------------------------------------------------------------
# PS_SHOW_FILE_IN_FOLDER_USES_THUNAR or showFileInFolderUsesThunar
# ----------------------------------------------------------------
#
# If we're on Linux, should we use Thunar (via dbus) to "show file in folder"?
#
# PS_SHOW_FILE_IN_FOLDER_USES_THUNAR="false"


# --------------------------
# PS_TOOL_PATHS or toolPaths
# --------------------------
#
# These paths are appended to the PATH to ensure PhotoStructure can find and
# run external tools like ffmpeg. Use your operating system's separator to
# separate paths (":" for mac and linux, ";" for windows).
#
# PS_TOOL_PATHS="[\"/usr/local/bin\",\"/usr/local/sbin\",\"/usr/lib/libraw\",\"/opt/local/bin\",\"/opt/local/sbin\",\"/usr/sbin\",\"/usr/bin\",\"/sbin\",\"/bin\"]"



##############################################################################
#
# Settings for Library.auth:
#

# -----------------------------------------------
# PS_ARGON_2_MEMORY_COST_MB or argon2MemoryCostMB
# -----------------------------------------------
#
# PhotoStructure encrypts user passwords with Argon2. This value sets the
# Argon2 "memory" cost parameter, and is specified in megabytes. Each parallel
# thread will consume this amount of RAM: don't exceed your system memory.
#
# PS_ARGON_2_MEMORY_COST_MB="64"


# -------------------------------------------
# PS_ARGON_2_PARALLELISM or argon2Parallelism
# -------------------------------------------
#
# PhotoStructure encrypts user passwords with Argon2. This value sets the
# Argon2 "parallelism" parameter. RAM consumption will be ((this value) ×
# argon2MemoryCost) KB of RAM: don't exceed your system memory.
#
# PS_ARGON_2_PARALLELISM="1"


# --------------------------------------
# PS_ARGON_2_TIME_COST or argon2TimeCost
# --------------------------------------
#
# PhotoStructure encrypts user passwords with Argon2. This value sets the
# Argon2 "time" cost parameter.
#
# PS_ARGON_2_TIME_COST="8"


# ----------------------------------
# PS_ENABLE_ARCHIVE or enableArchive
# ----------------------------------
#
# If true, the "Archive" button in Asset views will be visible and enabled for
# all visitors.
#
# PS_ENABLE_ARCHIVE="true"


# --------------------------------
# PS_ENABLE_DELETE or enableDelete
# --------------------------------
#
# If true, the "Delete" button in Asset views will be visible and enabled for
# all visitors.
#
# This is a temporary setting until PhotoStructure enforces
# authentication/authorization.
#
# PS_ENABLE_DELETE="true"


# -----------------------------------------
# PS_ENABLE_EMPTY_TRASH or enableEmptyTrash
# -----------------------------------------
#
# If true, the "Empty Trash" button will be enabled for all visitors.
#
# Until PhotoStructure has visitor user levels, if you don't trust all your
# users, disable this!
#
# This setting is disabled by default if exposeNetworkWithoutAuth is true.
#
# This is a temporary setting until PhotoStructure enforces
# authentication/authorization.
#
# PS_ENABLE_EMPTY_TRASH="true"


# --------------------------------
# PS_ENABLE_REMOVE or enableRemove
# --------------------------------
#
# If true, the "Remove asset" button in Asset views will be visible and
# enabled for all visitors.
#
# This is a temporary setting until PhotoStructure enforces
# authentication/authorization.
#
# PS_ENABLE_REMOVE="true"


# ---------------------------------------------
# PS_ENABLE_REMOVE_ASSETS or enableRemoveAssets
# ---------------------------------------------
#
# If true, the "Remove Assets" buttons will be visible and enabled for all
# visitors.
#
# Until PhotoStructure has visitor user levels, if you don't trust all your
# users, disable this!
#
# This setting is disabled by default if exposeNetworkWithoutAuth is true.
#
# This is a temporary setting until PhotoStructure enforces
# authentication/authorization.
#
# PS_ENABLE_REMOVE_ASSETS="true"


# -------------------------------------
# PS_TRY_SOFT_DELETES or trySoftDeletes
# -------------------------------------
#
# If true, "Empty Trash" will _try_ to move files into the "Trash can" or
# "Recycle bin", when possible. If moving a file into the trash can fails (due
# to permissions or filesystem functionality), the file will be "hard" deleted
# (or "unlinked"). This setting defaults to false on docker.
#
# PS_TRY_SOFT_DELETES="true"



##############################################################################
#
# Settings for Library.color:
#

# ------------------------------------------------
# PS_DOMINANT_COLOR_DELTA_E or dominantColorDeltaE
# ------------------------------------------------
#
# What delta_e algorithm should PhotoStructure use to determine color
# differences? cie76 is quick but inaccurate. cie94 is more accurate than
# cie76 but 6x more computationally expensive than cie76. ciede2000 is best,
# but 4-6x more expensive than cie94.
#
# Valid values: [
#   "cie76",
#   "cie94",
#   "ciede2000"
# ]
# Aliases: "PS_DELTA_E"
#
# PS_DOMINANT_COLOR_DELTA_E="ciede2000"


# --------------------------------------------------------------
# PS_DOMINANT_COLOR_GREY_THRESHOLD or dominantColorGreyThreshold
# --------------------------------------------------------------
#
# May PhotoStructure ignore pixels that are greyscale, or "desaturated," when
# looking for dominant colors? Larger values will result in only saturated
# colors being considered for dominant colors. A pixel color will be removed
# if its absolute a* and b* values in CIELAB space sum to less than this
# value.
#
# Set this to 0 to include greys in dominant colors, but note that this tends
# to reduce image deduplication effectiveness, as most natural-tone images
# contain a good deal of greyscales, which results in false matches.
#
# Minimum value: 0
# Maximum value: 80
# Aliases: "PS_MODE_GREY"
#
# PS_DOMINANT_COLOR_GREY_THRESHOLD="11"


# --------------------------------------------------------
# PS_DOMINANT_COLOR_KMEANS_RUNS or dominantColorKmeansRuns
# --------------------------------------------------------
#
# PhotoStructure uses k-means clustering to extract dominant colors from your
# images.
#
# Larger values will allow PhotoStructure to run k-means with more random
# seeds and different pre-merged k values, which should result in higher
# quality results.
#
# Using 0 will revert to posterizing the image and using the top-n colors,
# which is fast and deterministic, but has lower quality results.
#
# Changing this value will subtly change many image's dominant color lists.
#
# This defaults to 0 run when "quickSyncMode" is enabled.
#
# Minimum value: 0
# Maximum value: 64
# Aliases: "PS_MODE_RUNS"
#
# PS_DOMINANT_COLOR_KMEANS_RUNS="7"


# ----------------------------------------------------------------
# PS_DOMINANT_COLOR_MERGE_THRESHOLD or dominantColorMergeThreshold
# ----------------------------------------------------------------
#
# The best dominant color cluster centroids may be quite similar.
# PhotoStructure will merge centroids if their Δe is less than this value.
# Larger values will result in more different dominant colors, but those may
# not be as accurate.
#
# Minimum value: 0
# Maximum value: 32
#
# PS_DOMINANT_COLOR_MERGE_THRESHOLD="10"


# -----------------------------------------------
# PS_DOMINANT_COLOR_PIXELS or dominantColorPixels
# -----------------------------------------------
#
# PhotoStructure downsamples images to contain this number of pixels, converts
# each pixel into CIELAB space, and then runs k-means clustering to extract
# dominant colors. Larger values will be slower to process, but will result in
# more accurate dominant colors. Smaller values will be faster, but may result
# in inaccurate dominant colors.
#
# Minimum value: 256
# Maximum value: 4096
# Aliases: "PS_MODE_PIXELS"
#
# PS_DOMINANT_COLOR_PIXELS="1024"



##############################################################################
#
# Settings for Library.db:
#

# ------------------------------------------
# PS_DB_AUTO_VACUUM_MODE or dbAutoVacuumMode
# ------------------------------------------
#
# SQLite can auto-vacuum your library database, which ensures the database
# stays performant. If this is set to NONE, PhotoStructure will periodically
# run vacuum and optimizations from the sync process. For details,
# https://sqlite.org/pragma.html#pragma_auto_vacuum .
#
# Valid values: [
#   "NONE",
#   "FULL",
#   "INCREMENTAL"
# ]
#
# PS_DB_AUTO_VACUUM_MODE="INCREMENTAL"


# --------------------------------------------------------
# PS_DB_BACKUP_INTERVAL_MINUTES or dbBackupIntervalMinutes
# --------------------------------------------------------
#
# This setting was replaced by "dbBackupIntervalMs".
#
# Minimum value: 0.5
# Maximum value: 1440
#
# PS_DB_BACKUP_INTERVAL_MINUTES="30"


# ----------------------------------------------
# PS_DB_BACKUP_INTERVAL_MS or dbBackupIntervalMs
# ----------------------------------------------
#
# How frequently should PhotoStructure backup your library database?
#
# PS_DB_BACKUP_INTERVAL_MS="30m"


# ---------------------------------------------------------
# PS_DB_BACKUP_REMOTE_ON_SUSPEND or dbBackupRemoteOnSuspend
# ---------------------------------------------------------
#
# Run a database backup when system suspend is requested and the database is
# on a remote volume.
#
# Aliases: "PS_BACKUP_REMOTE_DB_ON_SUSPEND"
#
# PS_DB_BACKUP_REMOTE_ON_SUSPEND="true"


# ------------------------------------------------------
# PS_DB_BACKUP_RETENTION_COUNT or dbBackupRetentionCount
# ------------------------------------------------------
#
# How many prior backups should PhotoStructure retain? These will typically be
# 10-500 MB, depending on the size of your library.
#
# We don't retain that many backups by default because they get stale pretty
# quickly, as they fall out of sync with your filesystem and previews
# directory contents.
#
# Minimum value: 1
# Maximum value: 128
# Aliases: "PS_DB_BACKUPS_COUNT"
#
# PS_DB_BACKUP_RETENTION_COUNT="3"


# --------------------------------------------
# PS_DB_BATCH_SELECT_SIZE or dbBatchSelectSize
# --------------------------------------------
#
# How many objects can be selected at at time? The default should be fine.
# (Exposed for performance tests).
#
# Minimum value: 1
# Maximum value: 900
#
# PS_DB_BATCH_SELECT_SIZE="128"


# --------------------------------------------
# PS_DB_BATCH_UPSERT_SIZE or dbBatchUpsertSize
# --------------------------------------------
#
# How many objects can be upserted at at time? The default should be fine.
# (Exposed for performance tests).
#
# Minimum value: 1
# Maximum value: 500
#
# PS_DB_BATCH_UPSERT_SIZE="16"


# ----------------------------------------
# PS_DB_BUSY_TIMEOUT_MS or dbBusyTimeoutMs
# ----------------------------------------
#
# SQLite can time out requests if the db file is unavailable. PhotoStructure
# will retry those requests (up to `maxBusyDbMs`). A shorter time may help
# overall throughput, but may require more work done in retry logic. A longer
# time may be better for slower machines and slower disks. Note that setting
# this value to be lower than disk I/O latency (~1ms-100ms) will cause all
# database queries to fail.
#
# PS_DB_BUSY_TIMEOUT_MS="2s"


# ------------------------------------
# PS_DB_CACHE_SIZE_MB or dbCacheSizeMb
# ------------------------------------
#
# This value will be used for SQLite's cache_size PRAGMA. The cache_size
# pragma should ideally be set such that the whole DB can be in memory. Note
# that PhotoStructure automatically increases this value to accommodate your
# library as it gets larger, if there is sufficient memory, so this setting is
# only a lower bound. See https://sqlite.org/pragma.html#pragma_cache_size for
# more information.
#
# PS_DB_CACHE_SIZE_MB="128"


# -------------------------------------
# PS_DB_FORCE_RECOVER or dbForceRecover
# -------------------------------------
#
# SQLite databases can sometimes be repaired with SQLite's .recover tooling.
# Set this to true to have PhotoStructure attempt a .recover on startup.
#
# This can take a while to perform, especially on large libraries or slow
# computers: don't set this value to true normally.
#
# See https://sqlite.org/recovery.html .
#
# This setting is transient and only set via environment variables.
#
#
# Aliases: "PS_DB_FORCE_REBUILD"
#
# PS_DB_FORCE_RECOVER="false"


# --------------------------------------------------
# PS_DB_INVALID_FK_THRESHOLD or dbInvalidFKThreshold
# --------------------------------------------------
#
# When PhotoStructure runs a database recovery, it will check for foreign key
# violations. If there are fewer than this number of invalid rows,
# PhotoStructure will drop those rows, with the hope that the next sync will
# finish the recovery.
#
# Set this to 0 to disable this recovery step, which will make any foreign key
# violation fatal.
#
# PS_DB_INVALID_FK_THRESHOLD="64"


# ----------------------------------------
# PS_DB_PAGE_SIZE_BYTES or dbPageSizeBytes
# ----------------------------------------
#
# This value will be used for SQLite's page_size PRAGMA. A default of 4k
# should be OK. This must be a power of 2. See
# https://sqlite.org/pragma.html#pragma_page_size for more information.
#
# PS_DB_PAGE_SIZE_BYTES="4096"


# ---------------------------------
# PS_DB_REPAIR_MODE or dbRepairMode
# ---------------------------------
#
# PhotoStructure will automatically attempt to repair library databases that
# don't pass validation tests. SQLite has two repair strategies:
#
# - "dump", which will recover from minor errors and normally retains the
# current schema
#
# - "recover", which will recover as much data as possible from corrupt db.
# Unfortunately, this can result in an invalid and unusable schema, which is
# why PhotoStructure defaults to "dump".
#
# Note that PhotoStructure validates the schema after a repair, and will
# report via logs and the health check system if there are any issues.
#
# Valid values: [
#   "dump",
#   "recover"
# ]
#
# PS_DB_REPAIR_MODE="dump"


# --------------------------
# PS_DB_RETRIES or dbRetries
# --------------------------
#
# If SQLITE_BUSY is encountered, how many times should an operation be retried
# before giving up?
#
# PS_DB_RETRIES="20"


# -------------------------------------------
# PS_DB_SYNCHRONOUS_MODE or dbSynchronousMode
# -------------------------------------------
#
# Change SQLite's synchronous mode.
#
# "OFF" will cause data corruption. "FULL" and "EXTRA" may be required if
# you're seeing dataloss.
#
# See https://sqlite.org/pragma.html#pragma_synchronous .
#
# Valid values: [
#   "OFF",
#   "NORMAL",
#   "FULL",
#   "EXTRA"
# ]
#
# PS_DB_SYNCHRONOUS_MODE="NORMAL"


# ------------------------------------------------
# PS_DB_WAL_AUTO_CHECKPOINT or dbWalAutoCheckpoint
# ------------------------------------------------
#
# The write-ahead log of your PhotoStructure library database is checkpointed
# periodically by the sync subprocess.
#
# - Choosing 0 will disable SQLite's built-in automatic PASSIVE checkpointing.
#
# See https://sqlite.org/pragma.html#pragma_wal_autocheckpoint .
#
# PS_DB_WAL_AUTO_CHECKPOINT="1000"


# ------------------------------------------------
# PS_DB_WAL_CHECKPOINT_TYPE or dbWalCheckpointType
# ------------------------------------------------
#
# The write-ahead log of your PhotoStructure library database is checkpointed
# periodically.
#
# - Choosing 0 will disable SQLite's built-in automatic PASSIVE checkpointing.
#
# - PASSIVE, FULL, RESTART, and TRUNCATE values will enable.
#
# See https://sqlite.org/pragma.html#pragma_wal_checkpoint .
#
# Valid values: [
#   "AUTO",
#   "PASSIVE",
#   "FULL",
#   "RESTART",
#   "TRUNCATE"
# ]
#
# PS_DB_WAL_CHECKPOINT_TYPE="TRUNCATE"


# --------------------------------
# PS_MAX_BUSY_DB_MS or maxBusyDbMs
# --------------------------------
#
# SQLite supports concurrent readers but concurrent writers may collide,
# causing a LOCKED or BUSY error. PhotoStructure will retry the db operation
# for maxBusyDbMs milliseconds. This defaults to 45 seconds to accommodate
# slow hard drive spinups and VACUUM write locks.
#
# PS_MAX_BUSY_DB_MS="45s"



##############################################################################
#
# Settings for Library.deduping:
#

# ------------------------------------------------------------------------
# PS_ALLOW_FUZZY_DATE_IMAGE_HASH_MATCHES or allowFuzzyDateImageHashMatches
# ------------------------------------------------------------------------
#
# For images that don't have a reliable precise captured-at time (say, from
# "stat" or datestamp from pathname), can we aggregate assets purely by exact
# image hash matches?
#
# See https://forum.photostructure.com/t/deduplicate-shenanigans/1732/11 for
# more details.
#
# PS_ALLOW_FUZZY_DATE_IMAGE_HASH_MATCHES="false"


# ----------------------------------------
# PS_ASSET_AGGREGATION or assetAggregation
# ----------------------------------------
#
# How should assets be aggregated?
#
# - "union" will allow asset file variants to join an asset if they match
# *any* existing variant.
#
# - "intersection" will only allow asset file variants to join an asset if
# they match *all* existing variants.
#
# Versions prior to 2.1 defaulted to "union" behavior.
#
# Valid values: [
#   "union",
#   "intersection"
# ]
#
# PS_ASSET_AGGREGATION="intersection"


# -------------------------------------------------
# PS_CHECK_BASENAME_MATCHES or checkBasenameMatches
# -------------------------------------------------
#
# Most cameras take JPG/RAW pairs with matching basenames (so "P01234" for
# "P01234.JPG"). When PhotoStructure is trying to find matching assets for a
# given file, may it check assets that have matching basename file variants?
#
# Note that image hash and other asset file comparisons will still be
# performed before determining a given asset is a match.
#
# PS_CHECK_BASENAME_MATCHES="true"


# --------------------------------------------------------
# PS_DATES_BEFORE_ARE_ESTIMATED or datesBeforeAreEstimated
# --------------------------------------------------------
#
# PhotoStructure automatically interprets captured-at timestamps before this
# ISO-formatted datestamp as "estimated." PhotoStructure also considers
# timestamps whose minutes, seconds, and milliseconds are all 0 as
# "estimated."
#
# When assets have an estimated captured-at time, tighter image correlation is
# required to prevent different images as being incorrectly aggregated into
# the same asset.
#
# The default value is the release date for the Nikon Coolpix 950, which was
# one of the first prosumer digital cameras with ~2MP resolution.
#
# PS_DATES_BEFORE_ARE_ESTIMATED="1999-02-15"


# --------------------------------------------------------
# PS_FUZZY_DATE_PRECISION_COEFF or fuzzyDatePrecisionCoeff
# --------------------------------------------------------
#
# When comparing "captured-at" dates that aren't from reliable metadata tags,
# what coefficient should be applied to the inferred precision of those dates?
# Larger values will mean PhotoStructure will consider these "fuzzy" dates to
# be less precise, and expand the date range when searching for matching
# assets. Set to 1 to disable this feature.
#
# PS_FUZZY_DATE_PRECISION_COEFF="2"


# -------------------------------------
# PS_GPS_ERROR_METERS or gpsErrorMeters
# -------------------------------------
#
# What's the maximum number of meters between GPS fixpoints that should be
# considered equivalent locations? Note that JPG+RAW pairs from smartphones
# frequently have different GPS locations due to one being recorded from a
# rough WiFi fix, and another from aGPS.
#
# GPS position error is ~10-100m. Cellular position error is ~500-750m.
#
# PS_GPS_ERROR_METERS="500"


# -------------------------------------------------------
# PS_GREYSCALE_COLOR_THRESHOLD or greyscaleColorThreshold
# -------------------------------------------------------
#
# Many "black and white" images, which scanned, actually include color
# information, especially if the source has yellowed with age. PhotoStructure
# determines if an image is "greyscale" if the standard deviation of a* plus
# the standard deviation of b* values is less than this value. By only looking
# at standard deviation, we can categorize sepia photos as "greyscale."
# Smaller values are stricter.
#
# Minimum value: 0
# Maximum value: 128
#
# PS_GREYSCALE_COLOR_THRESHOLD="3"


# ---------------------------------------------------------------------------
# PS_IMAGE_HASH_DIFFERENT_MIMETYPES_DELTA or imageHashDifferentMimetypesDelta
# ---------------------------------------------------------------------------
#
# This setting's value is added to "minImageCoeffPct" and "minColorCoeffPct"
# when file mimetypes don't match. It defaults to a negative value because RAW
# and JPEG formats frequently raster slightly different image hashes,
# requiring a more lax threshold to match JPG+RAW pairs. Set to 0 to disable
# this delta.
#
# Minimum value: -100
# Maximum value: 100
#
# PS_IMAGE_HASH_DIFFERENT_MIMETYPES_DELTA="-15"


# ---------------------------------------------------------
# PS_IMAGE_HASH_FUZZY_DATE_DELTA or imageHashFuzzyDateDelta
# ---------------------------------------------------------
#
# This setting's value is added to "minImageCoeffPct" and "minColorCoeffPct"
# when captured-at dates have low precision. It defaults to a positive value
# so we are more strict about merging images with inaccurate dates. Set to 0
# to disable this delta.
#
# Minimum value: -100
# Maximum value: 100
#
# PS_IMAGE_HASH_FUZZY_DATE_DELTA="12"


# --------------------------------------------------------
# PS_IMAGE_HASH_GREYSCALE_DELTA or imageHashGreyscaleDelta
# --------------------------------------------------------
#
# This setting's value is added to "minImageCoeffPct" when either image is
# essentially greyscale. It defaults to a positive value so we are more strict
# about merging greyscale images. We also don't have color correlation to help
# us, so a more strict threshold is warranted.
#
# Minimum value: -100
# Maximum value: 100
#
# PS_IMAGE_HASH_GREYSCALE_DELTA="10"


# --------------------------------------------------------------------
# PS_MAX_CONTEMPORARY_ADOPTION_ASSETS or maxContemporaryAdoptionAssets
# --------------------------------------------------------------------
#
# To handle photos and videos with "fuzzy" captured-at times (those that are
# missing second, minute, hour, or even day resolution), how many
# previously-imported assets with nearby captured-at times should
# PhotoStructure look for in your library to find an adoption candidate?
#
# Monitor the "sync.AssetFileFinder.assetByCapturedAtOrImageHash" timer to see
# how long adoption is taking on your machine.
#
# Higher values will slow down imports, but may result in more accurate
# de-duplication results.
#
# PS_MAX_CONTEMPORARY_ADOPTION_ASSETS="512"


# --------------------------------------------------------------------------------------------
# PS_MIN_CAPTURED_AT_PRECISION_DIFFERENT_MIMETYPES or
# minCapturedAtPrecisionDifferentMimetypes
# --------------------------------------------------------------------------------------------
#
# Some cameras store JPEG+RAW pairs with slightly different captured-at times
# (!!). To ensure these are merged properly, we need to allow for these
# discrepancies. This setting controls how many milliseconds of difference we
# allow between captured-at times for different mimetypes. Set to 0 to disable
# this feature.
#
# PS_MIN_CAPTURED_AT_PRECISION_DIFFERENT_MIMETYPES="1500"


# ---------------------------------------------------------------
# PS_MIN_CAPTURED_AT_PRECISION_STAT or minCapturedAtPrecisionStat
# ---------------------------------------------------------------
#
# If a captured-at time is low quality (using the mtime or birthtime of the
# file), what should PhotoStructure use as the "minimum" precision for that
# time? This is used to determine how much "fuzziness" to allow when comparing
# captured-at times during assert aggregation. Set to 0 to disable this
# feature.
#
# PS_MIN_CAPTURED_AT_PRECISION_STAT="60000"


# ------------------------------------------
# PS_MIN_COLOR_COEFF_PCT or minColorCoeffPct
# ------------------------------------------
#
# Given two sets of dominant colors, this is the average percent that those
# sets correlate with eachother. A higher number requires stronger dominant
# color correlation. 100 (or 100%) requires exact dominant color correlation.
# A value of less than 50% indicates fairly low correlation of dominant
# colors, and can lead to false positives.
#
# Minimum value: 0
# Maximum value: 100
#
# PS_MIN_COLOR_COEFF_PCT="73"


# -----------------------------------------------------------------
# PS_MIN_EXPOSURE_SETTINGS_COEFF_PCT or minExposureSettingsCoeffPct
# -----------------------------------------------------------------
#
# This is the minimum similarity coefficient between exposure setting values
# two images must be to be considered equivalent. Many cameras actually report
# different exposure setting values between JPG and RAW: values within 90% of
# each other should avoid false-positives.
#
# Minimum value: 0
# Maximum value: 100
#
# PS_MIN_EXPOSURE_SETTINGS_COEFF_PCT="90"


# ------------------------------------------
# PS_MIN_IMAGE_COEFF_PCT or minImageCoeffPct
# ------------------------------------------
#
# This setting controls how aggressively images are merged with each other,
# and is the minimum image hash similarity coefficient for images to be
# considered equivalent when their date is accurate, their mimetypes match,
# and are in color.
#
# This value is applied when the captured-at date has a non-zero minute,
# second, or millisecond, and was captured after "datesBeforeAreEstimated," so
# the timestamp is considered to have high precision.
#
# 100 (or 100%) requires exact image correlation is not recommended due to
# causing false negative matches.
#
# A value of less than 50% is fairly low image correlation, and can lead to
# false positive matches.
#
# Minimum value: 0
# Maximum value: 100
#
# PS_MIN_IMAGE_COEFF_PCT="70"


# -------------------------------------------------------------------
# PS_MIN_MATCHES_WITHOUT_IMAGE_HASHES or minMatchesWithoutImageHashes
# -------------------------------------------------------------------
#
# If "useImageHashes" is true, this is ignored. This is a "backstop" that
# allows files to be aggregated together if their metadata is equal "enough."
# As of Sept 2022, there are 5 metadata classes to match: "cameraId",
# "lensId", "imageId", "exposureSettings", and "geohash". All of these
# "classes" pull from several individual tags. Note that if any of these
# classes _don't_ match, the files will always be considered to be from
# different assets.
#
# PS_MIN_MATCHES_WITHOUT_IMAGE_HASHES="3"


# ------------------------------------
# PS_STRICT_DEDUPING or strictDeduping
# ------------------------------------
#
# How strict should PhotoStructure de-duplicate files? If this is false, we
# consider files to be equivalent if sufficient metadata matches (even if the
# image hash is different). If this is true, we will always compare image
# hashes. NOTE: This will most likely cause RAW and JPEG pairs to not always
# merge to the same asset, especially if your camera uses extensive
# computational imagery. ALSO NOTE: If this is true, "useImageHashes" will be
# forced to true, and the "*corr*" and "*coeffPct" settings will be set to 95.
#
# PS_STRICT_DEDUPING="false"


# -------------------------------------
# PS_USE_IMAGE_HASHES or useImageHashes
# -------------------------------------
#
# Building image hashes slows down imports, but supports more robust asset
# merging heuristics, and allows for dominant color tagging and browsing. If
# you set this from false to true, and you'd previously imported new assets,
# you may want to rebuild your library to re-aggregate your assets.
#
# PS_USE_IMAGE_HASHES="true"



##############################################################################
#
# Settings for Library.events:
#

# -------------------------------------
# PS_SHARED_STATE_DIR or sharedStateDir
# -------------------------------------
#
# PhotoStructure uses a set of JSON files to relay messages between processes
# (rather than an RPC mesh, socket, or named pipe, whose device types isn't
# supported on some filesystem types). This directory must be readable and
# writable.
#
# PS_SHARED_STATE_DIR="$HOME/.config/PhotoStructure/shared-state"


# --------------------------------------------
# PS_SHARED_STATE_POLL_MS or sharedStatePollMs
# --------------------------------------------
#
# The "sharedStateFile" is watched for changes using your OS'es filesystem
# watch functionality: for most setups, this will result in almost
# instantaneous event propagation. Some filesystems don't support filesystem
# watching, or miss file edits, so we _also_ manually check for file changes
# every "sharedStatePollMs" milliseconds. This defaults to 7 seconds, but know
# that this will prevent the "PS_CONFIG_DIR" hard drive from spinning down and
# going to sleep.
#
# See the "allowFilesystemSleep" for other related settings.
#
# Set this setting to 0 to disable state polling.
#
# PS_SHARED_STATE_POLL_MS="7s"


# -----------------------------------------------------------
# PS_SHARED_STATE_TASK_TIMEOUT_MS or sharedStateTaskTimeoutMs
# -----------------------------------------------------------
#
# How long should PhotoStructure wait for shared-state tasks to be completed
# before timing out and giving up?
#
# PS_SHARED_STATE_TASK_TIMEOUT_MS="5m"



##############################################################################
#
# Settings for Library.filters:
#

# -------------------------------------------
# PS_DISABLE_ALL_FILTERS or disableAllFilters
# -------------------------------------------
#
# Setting this to true will force all other filter settings to their most
# permissive value. Note that this also disables file validation tests and the
# file SHA blocklist, so corrupt files and previously removed files will be
# attempted to be imported as well.
#
# If you have to resort to using this setting, please consider hopping onto
# the PhotoStructure Forum or PhotoStructure Discord and describe your
# situation.
#
# PS_DISABLE_ALL_FILTERS="false"


# ---------------------------------------
# PS_EXCLUDE_GLOBS_ADD or excludeGlobsAdd
# ---------------------------------------
#
# This setting adds glob patterns for files and directories that should be
# excluded from your library.
#
# These patterns will be added to PhotoStructure's default set of (several
# hundred!) exclusion globs.
#
# See https://forum.photostructure.com/t/1458 for details.
#
# PS_EXCLUDE_GLOBS_ADD="[]"


# -----------------------------------------
# PS_EXCLUDE_GLOBS_OMIT or excludeGlobsOmit
# -----------------------------------------
#
# PhotoStructure has several hundred default "exclusion globs" to avoid
# scanning system and application directories and otherwise irrelevant
# directories and files.
#
# If you don't like one or two of them, add them here, and they will be
# removed from the excluded globs list.
#
# If you don't want ANY of the default exclusion globs, see
# "excludeGlobsOmitDefaults".
#
# See https://forum.photostructure.com/t/1458 for details.
#
# PS_EXCLUDE_GLOBS_OMIT="[]"


# ----------------------------------------------------------
# PS_EXCLUDE_GLOBS_OMIT_DEFAULTS or excludeGlobsOmitDefaults
# ----------------------------------------------------------
#
# Setting this to true will omit ALL default exclusion globs, and is
# equivalent to providing all default exclusion globs to the
# "excludeGlobsOmit" setting. You're then free to add whatever exclusion globs
# you want, using the "excludeGlobsAdd" setting.
#
# Aliases: "PS_OMIT_DEFAULT_EXCLUDE_GLOBS or PS_DISABLE_IGNORABLE_FILTERS"
#
# PS_EXCLUDE_GLOBS_OMIT_DEFAULTS="false"


# -------------------------------------------------
# PS_GLOBS_CASE_INSENSITIVE or globsCaseInsensitive
# -------------------------------------------------
#
# Should "globs" match case-insensitively?
#
# PS_GLOBS_CASE_INSENSITIVE="true"


# -------------------------------
# PS_IMAGE_FAIL_ON or imageFailOn
# -------------------------------
#
# How sensitive should PhotoStructure be with warnings or errors when loading
# images?
#
# Use "none" to try loading images with best efforts, even if the file may be
# corrupt.
#
# Use "warning" to be conservative--any defects in the image will prevent it
# from being imported.
#
# The default, "truncated," will allow images with minor encoding defects to
# be imported.
#
# Valid values: [
#   "none",
#   "truncated",
#   "error",
#   "warning"
# ]
#
# PS_IMAGE_FAIL_ON="truncated"


# ----------------------------------------
# PS_KEYWORD_BLOCKLIST or keywordBlocklist
# ----------------------------------------
#
# Any asset that contains any of these keywords will be excluded from your
# library. Set this to an empty array to disable this feature.
#
# PS_KEYWORD_BLOCKLIST="[\"private\"]"


# -----------------------------------------------------
# PS_MAX_ASSET_FILE_SIZE_BYTES or maxAssetFileSizeBytes
# -----------------------------------------------------
#
# What's the maximum photo or video size you want imported into your library?
# (This can prevent movies from being pulled into and filling up your
# library). A value of 0 will disable this filter.
#
# Aliases: "PS_MAX_ASSET_SIZE_BYTES, PS_MAX_ASSET_SIZE or
# PS_MAX_FILE_SIZE_BYTES"
#
# PS_MAX_ASSET_FILE_SIZE_BYTES="500000000"


# ------------------------------------------------
# PS_MAX_VIDEO_DURATION_SEC or maxVideoDurationSec
# ------------------------------------------------
#
# What's the maximum length a video can be and still be imported? If this is
# set to 0 or unset, no maximum duration limit will be applied.
#
# PS_MAX_VIDEO_DURATION_SEC=""


# -----------------------------------------------------
# PS_MIN_ASSET_FILE_SIZE_BYTES or minAssetFileSizeBytes
# -----------------------------------------------------
#
# What's the minimum photo or video size you want imported into your library?
#
# This setting can prevent small GIFs and screenshots from being imported.
#
# Values less than 1000 will be ignored.
#
# A 20-year-old 1600x1200 JPEG at 50% quality is more than 150k, so 50k is a
# very conservative default.
#
# Aliases: "PS_MIN_ASSET_SIZE_BYTES, PS_MIN_ASSET_SIZE or
# PS_MIN_FILE_SIZE_BYTES"
#
# PS_MIN_ASSET_FILE_SIZE_BYTES="50000"


# -------------------------------------------
# PS_MIN_IMAGE_DIMENSION or minImageDimension
# -------------------------------------------
#
# What's the minimum number of pixels an image's dimensions must meet or
# exceed to be imported? Note that this value is applied to both the height
# and width of the image. The default comes from the VGA standard of 640x480.
# If this is set to 0, no minimum resolution filter will be applied to photos.
#
# PS_MIN_IMAGE_DIMENSION="480"


# -------------------------------------------
# PS_MIN_VIDEO_DIMENSION or minVideoDimension
# -------------------------------------------
#
# What's the minimum number of pixels a video's dimensions must meet or exceed
# to be imported? Note that this value is applied to both the height and width
# of the video. The default comes from the QVGA standard of 320x240. If this
# is set to 0, no minimum resolution filter will be applied to videos.
#
# PS_MIN_VIDEO_DIMENSION="240"


# ------------------------------------------------
# PS_MIN_VIDEO_DURATION_SEC or minVideoDurationSec
# ------------------------------------------------
#
# What's the minimum number of seconds for a video to be imported? If this is
# set to 0 or unset, no minimum duration limit will be applied.
#
# PS_MIN_VIDEO_DURATION_SEC="2"


# ----------------------------------------------------
# PS_REJECT_RATINGS_LESS_THAN or rejectRatingsLessThan
# ----------------------------------------------------
#
# Files with a metadata rating that is less than this value will not be
# imported into your library. Set to -100 to disable this filter.
#
# PS_REJECT_RATINGS_LESS_THAN="0"


# -----------------------------------------
# PS_REQUIRE_MAKE_MODEL or requireMakeModel
# -----------------------------------------
#
# PhotoStructure can require images to have EXIF tags for Make and Model. This
# prevents unwanted preview images from other photo apps and screenshots from
# being imported. If you have images you want in your library that don't have
# these tags, set this to false. Note that this is ignored for video files, as
# those files seldom have Make and Model set (and would prevent most video
# files from being imported).
#
# PS_REQUIRE_MAKE_MODEL="false"


# ---------------------------------------------------
# PS_RESPECT_FILE_EXTENSIONS or respectFileExtensions
# ---------------------------------------------------
#
# Normally PhotoStructure uses file extensions (like .JPEG or .MP4) to perform
# initial file filtering, rather than examining the content of the file to
# determine the file format (or "mimetype"). If you have files that don't use
# valid file extensions, you can set this to false, but know that file imports
# will be slower.
#
# PS_RESPECT_FILE_EXTENSIONS="true"


# --------------------------------------------------------------------
# PS_SIBLING_INFERENCE_BASENAME_COEFF or siblingInferenceBasenameCoeff
# --------------------------------------------------------------------
#
# What's the minimum case-insensitive Sørensen–Dice similarity index between
# file basenames, without the extension, to be used for sibling inference?
#
# 0 will accept all siblings, 1 will only accept exact matches.
#
# PS_SIBLING_INFERENCE_BASENAME_COEFF="0.6"


# ---------------------------------------------
# PS_VALIDATE_JPEG_IMAGES or validateJpegImages
# ---------------------------------------------
#
# Should JPEG photos be validated before importing? If a JPEG has any decoding
# errors, and this setting is true, that file will not be imported into your
# library. Enabling this feature slows down imports.
#
# PS_VALIDATE_JPEG_IMAGES="true"


# ---------------------------------------------------------
# PS_VALIDATE_MIMETYPE_SKIPLIST or validateMimetypeSkiplist
# ---------------------------------------------------------
#
# If a file's mimetype matches any of these values, it will be imported
# without being validated. This is useful for files from cameras that may
# render RAW image formats that are not supported by LibRaw (yet). Note that
# this setting is case-insensitive.
#
# PS_VALIDATE_MIMETYPE_SKIPLIST="[\"image/x-panasonic-rw2\"]"


# -------------------------------------------
# PS_VALIDATE_RAW_IMAGES or validateRawImages
# -------------------------------------------
#
# Should raw-format images (like NEF, CR2, ARW, and ORF) be validated before
# importing? If an image has any decoding errors, and this setting is true,
# that file will not be imported into your library.
#
# Note that more recent cameras may use a raw encoding that isn't supported
# yet (like CR3), but PhotoStructure may still be able to import those files
# if full-resolution embedded images are present.
#
# See the Enabling this feature slows down imports.
#
# PS_VALIDATE_RAW_IMAGES="true"


# ------------------------------------
# PS_VALIDATE_VIDEOS or validateVideos
# ------------------------------------
#
# Should videos be validated before importing? If a video has any decoding
# errors, and this setting is true, that file will not be imported into your
# library. Enabling this feature slows down imports, as videos must be fully
# decoded (or "played") to be validated.
#
# PS_VALIDATE_VIDEOS="false"


# ---------------------------------------------------------
# PS_VALIDATION_ERROR_ALLOWLIST or validationErrorAllowlist
# ---------------------------------------------------------
#
# All validation errors that match any of these values they will be ignored,
# EVEN IF they match a "validationErrorBlocklist" pattern, so all of these
# patterns should be specific enough to not cause false-negatives.
#
# Note the patterns are case-insensitive, will be converted into a regular
# expression, and only need to partially match the error message.
#
# Also see "validationErrorBlocklist".
#
# PS_VALIDATION_ERROR_ALLOWLIST="[\"warning: ignored non-standard
# exif\",\"invalid SOS parameters for sequential jpeg\",\"referenced qt
# chapter track not found\",\"non monotonically increasing dts\"]"


# ---------------------------------------------------------
# PS_VALIDATION_ERROR_BLOCKLIST or validationErrorBlocklist
# ---------------------------------------------------------
#
# If any of the following patterns match a validation error found in a photo
# or video, and *doesn't* match any of the patterns in the
# validationErrorAllowlist, the file will be considered corrupt and not be
# imported into your library.
#
# Note the patterns are case-insensitive, will be converted into a regular
# expression, and only need to partially match the error message, so, for
# example, a value of "caution" will ignore any error message that contains
# the string (not the word!) "caution".
#
# Also see "validationErrorAllowlist".
#
# PS_VALIDATION_ERROR_BLOCKLIST="[\"cannot decode\",\"cannot determine format
# of input stream\",\"corrupt\",\"error while
# decoding\",\"failed\",\"invalid\",\"not a jpeg file\",\"not raw
# file\",\"nothing was written into output file\",\"partial file\",\"premature
# end of .*?file\",\"unsupported file format\"]"



##############################################################################
#
# Settings for Library.healthchecks:
#

# ----------------------------------------------
# PS_SKIP_HEALTH_CHECK_IDS or skipHealthCheckIds
# ----------------------------------------------
#
# List of health check IDs to skip. Note that windows skips the
# 'proc-not-superuser' check by default, as most people on Windows run as an
# admin user.
#
# Valid values: [
#   "library-db",
#   "library-directories",
#   "library-free-space",
#   "library-nothing-to-sync",
#   "ps-version",
#   "media-directories",
#   "nodejs-version",
#   "proc-memory-use",
#   "proc-not-in-dmg",
#   "proc-not-superuser",
#   "settings-env",
#   "settings-library",
#   "settings-system",
#   "sync-paused",
#   "system-load",
#   "system-version",
#   "system-volumes",
#   "tools-exiftool",
#   "tools-heif",
#   "tools-powershell",
#   "tools-sqlite-version",
#   "tools-video",
#   "volume-uuids"
# ]
#
# PS_SKIP_HEALTH_CHECK_IDS="[]"



##############################################################################
#
# Settings for Library.parsing:
#

# ------------------------------------------
# PS_BACKFILL_TIMEZONES or backfillTimezones
# ------------------------------------------
#
# Should we try to backfill timezones for date-times that don't have them? If
# set to true, and {@link defaultVideosToUTC} is also true, we'll try
# backfilling timezones for date-times that are UTC, as well.
#
# Setting this to false removes **all** timezone inference--only those
# date-times with an explicit offset will have a defined timezone.
#
# Prior versions of exiftool-vendored would use the file's ".tz" as a backstop
# even if this was set to false.
#
# As of version 2023.10, this now defaults to true, as it's more likely to be
# what people expect.
#
# PS_BACKFILL_TIMEZONES="true"


# ------------------------
# PS_BAD_DATES or badDates
# ------------------------
#
# The following ISO values will be ignored when extracting a file's
# captured-at time. See
# https://forum.photostructure.com/t/photostructure-ignored-the-date-metadata-of-some-photos-marked-them-as-taken-in-2002/340/8
# and https://forum.photostructure.com/t/incorrect-date-assigned-to-photo/419
# .
#
# PS_BAD_DATES="[\"2002-12-08T12:00:00\"]"


# -------------------------------------
# PS_CAPTURED_AT_TAGS or capturedAtTags
# -------------------------------------
#
# The following tags are examined to determine when a file was captured at.
#
# The tag with the oldest valid value is returned: order here doesn't matter.
#
# If none of these tags have a valid datetime stamp, PhotoStructure will fall
# back to "capturedAtTagsFallback" tags.
#
# See https://photostructure.com/faq/captured-at/ for details.
#
# PS_CAPTURED_AT_TAGS="[\"CreationDate\",\"DateTimeOriginal\",\"SubSecDateTimeOriginal\",\"DateTimeDigitized\",\"OriginalCreateDateTime\",\"DigitalCreationDateTime\"]"


# ------------------------------------------------------
# PS_CAPTURED_AT_TAGS_FALLBACK or capturedAtTagsFallback
# ------------------------------------------------------
#
# If none of the "capturedAtTags" have a valid value, PhotoStructure will
# fallback to look at these tags. These tags are only "fallbacks" as they
# sometimes contain spurious values.
#
# See https://photostructure.com/faq/captured-at/ for details.
#
# PS_CAPTURED_AT_TAGS_FALLBACK="[\"SubSecCreateDate\",\"SubSecMediaCreateDate\",\"SubSecModifyDate\",\"CreateDate\",\"MediaCreateDate\",\"ModifyDate\",\"DateTime\",\"DateTimeCreated\",\"photoTakenTime\",\"TrackCreateDate\",\"CreationTime\"]"


# ----------------------------------------
# PS_DEFAULT_COPYRIGHT or defaultCopyright
# ----------------------------------------
#
# If PhotoStructure doesn't find a value for Copyright in a source image or
# source video, it will apply the given string as the copyright holder.
#
# This has no default.
#
# PS_DEFAULT_COPYRIGHT=""


# ----------------------------------------------
# PS_DEFAULT_VIDEOS_TO_UTC or defaultVideosToUTC
# ----------------------------------------------
#
# Should video created-at times be assumed to be in UTC? Most cameras use UTC
# (even if the timezone is set in the camera!). Set this to false to revert to
# pre-v2.1 behavior.
#
# PS_DEFAULT_VIDEOS_TO_UTC="true"


# -----------------------------------------------------
# PS_ENABLE_SIBLING_INFERENCE or enableSiblingInference
# -----------------------------------------------------
#
# NOTE: this setting has been deprecated and will be removed in a future
# version of PhotoStructure.
#
# This setting has been replaced by the "siblingInference" setting. "true" is
# equivalent to "auto", and "false" is equivalent to "never".
#
# PS_ENABLE_SIBLING_INFERENCE="true"


# --------------------------------------------------
# PS_EXTRA_DATE_TIME_FORMATS or extraDateTimeFormats
# --------------------------------------------------
#
# These formats are used to parse datetime strings in EXIF metadata and in
# file pathnames. See
# https://moment.github.io/luxon/#/formatting?id=table-of-tokens for a
# description of these tokens.
#
# PS_EXTRA_DATE_TIME_FORMATS="[\"y-M-d 'at' H.m.s\",\"y-M-d H-m-s\",\"y-MM-dd
# HH-mm-ss\",\"y-MMM-d HH-mm-ss\",\"y-MMM-dd HH-mm-ss\",\"y-MMMM-d
# HH-mm-ss\",\"y-MMMM-dd HH-mm-ss\",\"y-MM-dd
# HHmmss\",\"yMMdd_HHmmss\",\"yMMdd-HHmmss\",\"y_MMdd_HHmmss\",\"MM.dd.yyyy
# HH:mm:ss\",\"F\",\"FF\"]"


# -----------------------------------------
# PS_FUZZY_DATE_PARSING or fuzzyDateParsing
# -----------------------------------------
#
# When enabled, PhotoStructure will first attempt to parse datetime strings
# with strict ISO-compliant parsers, and then use additional, "fuzzy" datetime
# parsers. When disabled, only ISO-compliant parsers are used.
#
# PS_FUZZY_DATE_PARSING="true"


# -----------------------------------------
# PS_FUZZY_YEAR_PARSING or fuzzyYearParsing
# -----------------------------------------
#
# When enabled, PhotoStructure will use directories starting with a number
# that looks year-like (four digits, 1826-the present) to infer the
# captured-at time, if all other date parsers have failed. Note that setting
# this to true "forces" the "fuzzyDateParsing" setting to be true.
#
# To elaborate: PhotoStructure first looks for metadata with a date, then
# looks for an ISO-compliant YMD timestamp in the filename or path, and then,
# if "fuzzyDateParsing" or this setting is enabled, a YMD or YM datestamp, and
# then finally, if this setting is enabled, it looks for a directory that
# begins with a number that is between 1826-2020.
#
# PS_FUZZY_YEAR_PARSING="false"


# ----------------------------------------------------------------
# PS_INFER_TIMEZONE_FROM_DATESTAMPS or inferTimezoneFromDatestamps
# ----------------------------------------------------------------
#
# We always look at {@link Tags.TimeZone}, {@link Tags.OffsetTime}, {@link
# Tags.TimeZoneOffset}, {@link Tags.OffsetTimeOriginal}, {@link
# Tags.OffsetTimeDigitized}, and GPS metadata to infer the timezone.
#
# If these strategies fail, and this is enabled, we'll try to infer the
# timezone from non-UTC datestamps included in the {@link capturedAtTags} and
# {@link capturedAtTagsFallback} settings.
#
# This defaults to true as of version 2023.10.
#
# PS_INFER_TIMEZONE_FROM_DATESTAMPS="true"


# --------------------------
# PS_LENS_MAKES or lensMakes
# --------------------------
#
# Used to extract and parse lens metadata (useful when Google Takeout has
# stripped metadata).
#
# PS_LENS_MAKES="[\"7artisans\",\"Bower\",\"Canon\",\"Carl
# Zeiss\",\"Cosina\",\"Fuji\",\"Fujifilm\",\"Goerz\",\"Hasselblad\",\"Hirox\",\"Hoya\",\"Kodak\",\"Konica\",\"Leica\",\"Leidolf\",\"Lensbaby\",\"Lumix\",\"Meike\",\"Meopta\",\"Minolta\",\"Neewer\",\"Nikon\",\"Olympus\",\"Opteka\",\"Panasonic\",\"Pentacon\",\"Pentax\",\"Ricoh\",\"Rodenstock\",\"Rokinon\",\"Ross\",\"Samsung\",\"Samyang\",\"Seiko\",\"Sigma\",\"Silor\",\"Soligor\",\"Sony\",\"Sunpak\",\"Tamron\",\"Tiffen\",\"Tokina\",\"Topcon\",\"Venus\",\"Voigtländer\",\"Wray\",\"Yongnuo\",\"Zeiss\",\"Zhong
# Yi\",\"Zuiko\"]"


# ----------------------------
# PS_LIKE_RATING or likeRating
# ----------------------------
#
# What's the minimum "rating" for an asset to be considered "liked"?
#
# Know that metadata "ratings" are stored in both EXIF and XMP "Rating" and
# "RatingPercent" tags. Ratings are typically encoded as a value between -1
# and 5 (where -1 is used by some DAMs to mark "rejected").
#
# PhotoStructure will prefer the XMP Rating tag.
#
# If the only tag with a rating is a "RatingPercent", it will be converted to
# a 5-point scale.
#
# If you want only ratings of 5 to be considered a "liked" asset, set this to
# 5.
#
# This value will be used when assets are liked via the PhotoStructure UI.
#
# Note that PhotoStructure doesn't import assets with a negative Rating (to
# respect the "rejected" rating).
#
# PS_LIKE_RATING="3"


# ---------------------------------
# PS_MIN_VALID_YEAR or minValidYear
# ---------------------------------
#
# If PhotoStructure encounters a year that is less than this value, it will
# consider that source to be invalid and look elsewhere for the captured-at
# date for that given file.
#
# For what it's worth, 1826 is the first year a photograph was captured (see
# https://en.wikipedia.org/wiki/History_of_photography ), and KODAK Brownies
# were available in 1900 (see https://en.wikipedia.org/wiki/Kodak_Brownie ).
#
# You should set this to the earliest year you expect to find in your library.
#
# PS_MIN_VALID_YEAR="1920"


# ----------------------------------------
# PS_SIBLING_INFERENCE or siblingInference
# ----------------------------------------
#
# When enabled, and the "captured-at" time, Make, or Model isn't found in
# metadata, PhotoStructure will try to use nearby files to "fill in the
# blanks." If this is set to "auto", this is disabled automatically for slow
# directories. If this is set to "always", even files in slow directories will
# have tag inference, when necessary. Set to "never" to disable.
#
# Valid values: [
#   "never",
#   "always",
#   "auto"
# ]
#
# PS_SIBLING_INFERENCE="auto"


# ----------------------------------------------
# PS_TWO_DIGIT_CUTOFF_YEAR or twoDigitCutoffYear
# ----------------------------------------------
#
# If "yy" is used in extraDateTimeFormats, and a year is only 2 digits, what
# threshold value should be used to consider the date to be in the 1900s vs
# 2000s?
#
# As an example, a value of "50" would make "49" be interpreted as 1949, and
# "50" as 2050.
#
# See
# https://moment.github.io/luxon/api-docs/index.html#settingstwodigitcutoffyear
# for details.
#
# This defaults to 3 years in the future (modulus 100) and is updated
# automatically.
#
# PS_TWO_DIGIT_CUTOFF_YEAR="26"


# ----------------------------------------------------------------
# PS_USE_LIBRARY_DIRS_TO_INFER_DATES or useLibraryDirsToInferDates
# ----------------------------------------------------------------
#
# When enabled, and the "captured-at" time isn't found in metadata,
# PhotoStructure will also look for the captured-at datetime encoded in file
# paths *for files that are in your PhotoStructure library. This defaults to
# false, as prior versions of PhotoStructure may have placed files into
# incorrect datestamped directories.
#
# PS_USE_LIBRARY_DIRS_TO_INFER_DATES="false"


# --------------------
# PS_USE_MWG or useMWG
# --------------------
#
# Enable Metadata Working Group composite tag reading and writing. See
# https://exiftool.org/TagNames/MWG.html for details.
#
# PS_USE_MWG="true"


# ---------------------------------------------------
# PS_USE_PATHS_TO_INFER_DATES or usePathsToInferDates
# ---------------------------------------------------
#
# When enabled, and the "captured-at" time isn't found in metadata,
# PhotoStructure will also look for the captured-at datetime encoded in file
# paths.
#
# PS_USE_PATHS_TO_INFER_DATES="true"


# -------------------------------------------------
# PS_USE_STAT_TO_INFER_DATES or useStatToInferDates
# -------------------------------------------------
#
# When enabled, and the "captured-at" time isn't found in metadata,
# PhotoStructure will also look for the captured-at datetime encoded in the
# file "birthtime" (on Windows), or the lesser value of "mtime" and "ctime"
# (on macOS and Linux). Note that these values are not very reliable, as file
# transfers and backups frequently don't retain these values correctly.
#
# PS_USE_STAT_TO_INFER_DATES="true"


# ----------------------------------------------------------------------------
# PS_WRITE_INFERRED_TAGS_TO_LIBRARY_COPIES or writeInferredTagsToLibraryCopies
# ----------------------------------------------------------------------------
#
# When enabled, inferred metadata will be stored as _actual_ metadata in the
# library copy.
#
# PS_WRITE_INFERRED_TAGS_TO_LIBRARY_COPIES="true"



##############################################################################
#
# Settings for Library.previews:
#

# ---------------------------------
# PS_DCRAW_EMU_ARGS or dcrawEmuArgs
# ---------------------------------
#
# What options do you want to pass to dcraw_emu? Note that "-T -o 1 -j -Z -"
# will always be added (as we need TIFF, sRGB, raw pixels send to stdout). The
# "-h" arg will be added if the preview image needed is less than half the
# resolution of the original.
#
# Run "dcraw_emu" with no arguments to get usage help.
#
# "-q 1" sets interpolation quality to "0".
#
# "-H 2" turns on highlight blending.
#
# "-w" uses the camera-set white balance.
#
# Note: changing these values can dramatically (> 10x!) increase the time it
# takes to render RAW images.
#
# PS_DCRAW_EMU_ARGS="[\"-q\",\"0\",\"-w\"]"


# ----------------------------------------
# PS_EMBEDDED_PREVIEWS or embeddedPreviews
# ----------------------------------------
#
# For larger source images that are greater than 15MP, what embedded image
# preview tags should be used when present? Using these embedded images speeds
# up image preview generation, but if the embedded image doesn't match the
# full-sized image, the image preview will be incorrect.
#
# Set this to an empty array to disable using embedded previews.
#
# PS_EMBEDDED_PREVIEWS="[\"PreviewImage\",\"PreviewTIFF\",\"JpgFromRaw\",\"JpgFromRaw2\"]"


# --------------------------------------------
# PS_EMBEDDED_THUMBNAILS or embeddedThumbnails
# --------------------------------------------
#
# Should embedded image thumbnails be used when available? This speeds up
# image hashing, but if the embedded image thumbnail doesn't match the
# full-sized image, the image hash will be incorrect.
#
# Set this to an empty array to disable using embedded previews.
#
# PS_EMBEDDED_THUMBNAILS="[\"ThumbnailImage\",\"ThumbnailTIFF\"]"


# ---------------------------------------------
# PS_ICC_PROFILE_MAPPINGS or iccProfileMappings
# ---------------------------------------------
#
# Maps an original image profile to a filename stored in the "icc" directory.
# See that directory's _info.md for more information about this settings.
#
# PS_ICC_PROFILE_MAPPINGS="[\"Display
# P3:DisplayP3Compat-v2-magic.icc\",\"Adobe RGB:AdobeCompat-v2.icc\"]"


# -----------------------------------------------
# PS_INCLUDED_PREVIEW_TAGS or includedPreviewTags
# -----------------------------------------------
#
# If "includePreviewTags" is true, what tags should PhotoStructure retain when
# building preview images? A partial list of tags is here:
# https://photostructure.github.io/exiftool-vendored.js/interfaces/Tags.html .
# Note that not all files contain all (or even some!) of those tags.
#
# - "capturedAt" is a special meta-tag which will retain whatever tag contains
# the "best" time that PhotoStructure could find that encoded the date and
# time when the image was captured, and will store that value in
# DateTimeOriginal.
#
# - "exposureSettings" is a special meta-tag that will retain shutter time
# (ExposureTime), aperture (FNumber), and ISO (ISOSpeed) metadata (but may be
# encoded with different values).
#
# - including "GPSLatitude" and "GPSLongitude" will mean previews will contain
# location metadata if the source image had location metadata.
#
# PS_INCLUDED_PREVIEW_TAGS="[\"AttributionName\",\"AttributionURL\",\"capturedAt\",\"Copyright\",\"exposureSettings\",\"GPSLatitude\",\"GPSLongitude\",\"License\",\"Make\",\"Model\",\"Permits\",\"Prohibits\",\"Rating\",\"Requires\",\"Source\"]"


# ---------------------------------------------
# PS_INCLUDE_PREVIEW_TAGS or includePreviewTags
# ---------------------------------------------
#
# By default, PhotoStructure strips all metadata from preview images. This
# both saves space, and reduces disk I/O during preview generation. If this
# setting is enabled, all "includedPreviewTags" will be restored in preview
# images that are more than 1 megapixel. If this setting is enabled, each
# preview image will be written to twice (once for the image and once for the
# metadata), so imports will be slower.
#
# PS_INCLUDE_PREVIEW_TAGS="false"


# -------------------------------------------
# PS_MAX_EMBEDDED_BUFFER or maxEmbeddedBuffer
# -------------------------------------------
#
# PhotoStructure tries to use embedded images for preview generation to
# minimize work. For smaller images, we can directly pipe the buffer from the
# embedded image into our image pipeline, but for larger images, it can be
# faster to use an intermediary file stored on the cache drive. Larger values
# will reduce disk I/O but increase memory and CPU consumption. Set this to 0
# to force all previews to be written to the cache dir.
#
# This defaults to 1 MB on Windows due to slow disk I/O on that platform.
#
# PS_MAX_EMBEDDED_BUFFER="250000"


# ----------------------------------------
# PS_PREVIEW_MINIMIZED or previewMinimized
# ----------------------------------------
#
# Should preview JPEGs be optimized? If set, preview generation can take 50%
# longer, but can result in up to ~30% smaller images. This saves disk space
# and network transport time.
#
# This setting controls the "mozjpeg" option: see
# https://sharp.pixelplumbing.com/api-output#jpeg for details.
#
# This automatically defaults to true if at least 4 CPU cores are present.
#
# Aliases: "PS_JPEG_MINIMIZED"
#
# PS_PREVIEW_MINIMIZED="true"


# --------------------------------------------
# PS_PREVIEW_PROGRESSIVE or previewProgressive
# --------------------------------------------
#
# Should preview JPEGs be progressively encoded? If set, thumbnails will take
# ~15% longer to generate, but FHD/QHD/UHD previews will be smaller.
#
# Aliases: "PS_PROGRESSIVE or PS_JPEG_PROGRESSIVE"
#
# PS_PREVIEW_PROGRESSIVE="true"


# ------------------------------------
# PS_PREVIEW_QUALITY or previewQuality
# ------------------------------------
#
# JPEG output quality for previews. Smaller values produce smaller images with
# lower quality. The default value of 80 strikes a balance that has almost no
# noticeable compression artifacts, yet still compresses images reasonably
# well. Depending on image content, values less than 50-70 can produce
# noticeable artifacts.
#
# Minimum value: 10
# Maximum value: 100
# Aliases: "PS_JPEG_QUALITY"
#
# PS_PREVIEW_QUALITY="80"


# --------------------------------------------
# PS_PREVIEW_RESOLUTIONS or previewResolutions
# --------------------------------------------
#
# This controls the resolutions that PhotoStructure creates for every asset.
# Note that resolutions will be skipped if there already is a preview value
# with <= 2.5x pixel count, so even though there are a lot of sizes here,
# you'll only see 3-4 images on your disk per asset.
#
# See https://en.wikipedia.org/wiki/Graphics_display_resolution for a
# description of these resolution codes.
#
# Valid values: [
#   "uhd8k",
#   "uhd5k",
#   "uhd4k",
#   "qhd",
#   "fhd",
#   "hd",
#   "wvga",
#   "qvga",
#   "qqvga"
# ]
#
# PS_PREVIEW_RESOLUTIONS="[\"uhd4k\",\"qhd\",\"fhd\",\"hd\",\"wvga\",\"qvga\",\"qqvga\"]"


# ------------------------------------
# PS_PREVIEW_SHARPEN or previewSharpen
# ------------------------------------
#
# Should previews be sharpened? This can make the images "pop" a bit more, but
# almost doubles the time it takes to make the thumbnails.
#
# Aliases: "PS_SHARPEN"
#
# PS_PREVIEW_SHARPEN="false"


# --------------------------------
# PS_SKIP_PREVIEWS or skipPreviews
# --------------------------------
#
# Only used for tests.
#
# PS_SKIP_PREVIEWS="false"


# -----------------------------------------------
# PS_SQUARE_THUMB_STRATEGY or squareThumbStrategy
# -----------------------------------------------
#
# When PhotoStructure crops images and videos to square thumbnails, it needs
# to crop non-square images to a square. The default, "attention," focuses on
# faces and higher image energy, but is more expensive than simply cropping to
# the center of the image (which is faster, but will mean less-nice cropping,
# where faces are chopped in half). More details are available here:
# https://sharp.pixelplumbing.com/api-resize .
#
# Valid values: [
#   "center",
#   "entropy",
#   "attention"
# ]
#
# PS_SQUARE_THUMB_STRATEGY="attention"


# -----------------------------------------------
# PS_VARIANT_SORT_CRITERIA or variantSortCriteria
# -----------------------------------------------
#
# How should PhotoStructure pick the "best" asset file variant for a given
# asset? You may reorder the default fields. Only "resolution", "fileSize",
# "mtime", "schemeIdx", "isCover", "count", and "isBrowserSupported" are
# understood: other field names will be ignored. Details about these fields
# are here:
# https://photostructure.com/faq/what-do-you-mean-by-dedupe/#how-does-photostructure-pick-which-file-to-show
# .
#
# Valid values: [
#   "resolution",
#   "schemeIdx",
#   "capturedAtPrecision",
#   "metadataCoverage",
#   "isBrowserSupported",
#   "mtime",
#   "isCover",
#   "count",
#   "fileSize",
#   "basename",
#   "parentBasename",
#   "uri"
# ]
# Aliases: "PS_ASSET_FILE_SORT_CRITERIA"
#
# PS_VARIANT_SORT_CRITERIA="[\"resolution\",\"schemeIdx\",\"capturedAtPrecision\",\"metadataCoverage\",\"isBrowserSupported\",\"mtime\",\"isCover\",\"count\",\"fileSize\",\"basename\",\"parentBasename\",\"uri\"]"


# ----------------------------------------------------------
# PS_VARIANT_SORT_CRITERIA_POWER or variantSortCriteriaPower
# ----------------------------------------------------------
#
# Variant sort criteria "resolution" and "fileSize" are scaled down to ignore
# irrelevant differences. Scalars are raised to this power to reduce them, so
# a value of 1 means the criterion is unchanged from the "raw" value. Smaller
# values for this setting let _larger_ differences be ignored.
#
# Minimum value: 0.000001
# Maximum value: 1
#
# PS_VARIANT_SORT_CRITERIA_POWER="0.16666666666666666"


# ----------------------------------------
# PS_VIDEO_FRAME_AT_SEC or videoFrameAtSec
# ----------------------------------------
#
# When capturing a frame from videos for thumbnails, how many seconds should
# be passed over before capturing a frame? A value of 0 means capture from the
# start of the video. Frequently, though, videos start out of focus, so we
# default to 1.5 for better frame clarity.
#
# Note that if a video is shorter than this value, the frame will be captured
# from the middle of the video.
#
# PS_VIDEO_FRAME_AT_SEC="1.5"



##############################################################################
#
# Settings for Library.privacy:
#

# -------------------------------------
# PS_ALLOW_USER_AGENT or allowUserAgent
# -------------------------------------
#
# Can PhotoStructure include a User-Agent header that includes  basic
# installation information when it makes external requests, like for the
# version update check?
#
# See
# https://forum.photostructure.com/t/new-in-v2023-10-automated-photostructure-version-checking/1956
# for details.
#
# PS_ALLOW_USER_AGENT="true"


# --------------------
# PS_OPT_OUT or optOut
# --------------------
#
# If set to true, your library will not originate external network requests.
#
# This is a "meta" setting that currently sets "reportErrors=false",
# "autoUpdateCheck=false", and "allowUserAgent=false".This setting will be
# kept up to date with any other feature that could result in an external
# network request (like, for example, reverse geocoding).
#
# Technically speaking, this is **not** the same as "DNT" (Do Not Track) or
# "GPC" (Global Privacy Control), because PhotoStructure, Inc. **never shares
# or sells any user telemetry or data** (so "DNT" is always _technically_
# true!), but we check and respect both DNT and GPC as aliases for this
# setting.
#
# See https://photostructure.com/legal/privacy/ for more details about
# PhotoStructure's privacy policies.
#
# Aliases: "PS_DO_NOT_TRACK, DNT or GPC"
#
# PS_OPT_OUT="false"



##############################################################################
#
# Settings for Library.reporting:
#

# -----------------
# PS_EMAIL or email
# -----------------
#
# If set, this email will be used for license subscriptions and added to error
# reports, so we can contact you to help debug the issue. It is not required.
# Setting a value here does not subscribe you to any marketing emails.
#
# PS_EMAIL=""


# --------------------------------
# PS_REPORT_ERRORS or reportErrors
# --------------------------------
#
# If true, PhotoStructure will send crash reports when it encounters errors.
# Crash reports may include the path to the file that caused an error, system
# metadata, and recent log messages.
#
# PS_REPORT_ERRORS="true"


# ----------------------------------------
# PS_MAX_ERRORS_PER_DAY or maxErrorsPerDay
# ----------------------------------------
#
# Set this to zero to remove all bugs in PhotoStructure.
#
# HUR HUR #DADJOKE
#
# If your system generates more than this number of errors in the course of a
# day, the subsequent error reports will not be reported.
#
# PS_MAX_ERRORS_PER_DAY="3"



##############################################################################
#
# Settings for Library.sidecars:
#

# ---------------------------------------------
# PS_DEFAULT_SIDECAR_TYPE or defaultSidecarType
# ---------------------------------------------
#
# What type of sidecar file do you want to generate for non-destructive edits?
#
# - "XMP" is a popular and well-adopted format.
#
# -"MIE" is defined at https://exiftool.org/TagNames/MIE.html .
#
# - "EXIF" and "EXV" should only be used if required, as they have substantial
# limitations.
#
# Case is preserved.
#
# PS_DEFAULT_SIDECAR_TYPE="xmp"


# ----------------------------------------------------------------------
# PS_MATCH_SIDECARS_CASE_INSENSITIVELY or matchSidecarsCaseInsensitively
# ----------------------------------------------------------------------
#
# If set to true, PhotoStructure will look for sidecar files that match file
# basenames (with or without the file extension), regardless of case (for
# example: "IMAGE.XMP" will be a sidecar for "image.jpg").
#
# If set to false, sidecars must match case (so only "image.jpg.xmp" and
# "image.xmp" will match for "image.jpg").
#
# PS_MATCH_SIDECARS_CASE_INSENSITIVELY="true"


# -------------------------------------------------
# PS_MATCH_SIDECARS_FUZZILY or matchSidecarsFuzzily
# -------------------------------------------------
#
# If set to true, PhotoStructure will look for sidecar files that match the
# basename of the asset, plus some common suffixes (like "-edit", "-edited",
# or variant copies, like "-2").
#
# This setting only impacts .XMP, .MIE, and .EXIF sidecars.
#
# Note that PhotoStructure always matches .JSON files fuzzily, as that is
# required to handle Google Takeouts properly.
#
# PS_MATCH_SIDECARS_FUZZILY="false"


# -----------------------------------------------
# PS_SIDECAR_TAG_BLOCKLIST or sidecarTagBlocklist
# -----------------------------------------------
#
# Many applications don't read metadata from sidecars, which can make some
# tags, like Orientation or Rating, not seem to work properly in other
# applications. This setting is ignored if writeMetadataToSidecarsIfImage,
# writeMetadataToSidecarsIfVideo, and writeMetadataToSidecarsIfSidecarExists
# are all set to false.
#
# PS_SIDECAR_TAG_BLOCKLIST="[\"Orientation\"]"


# ------------------------------------------------------------------------
# PS_WRITE_METADATA_TO_SIDECARS_IF_IMAGE or writeMetadataToSidecarsIfImage
# ------------------------------------------------------------------------
#
# If set to true, PhotoStructure will write metadata changes made to images
# into sidecars. If set to false, PhotoStructure will overwrite original
# images with metadata changes.
#
# PS_WRITE_METADATA_TO_SIDECARS_IF_IMAGE="true"


# -----------------------------------------------------------------------------------------
# PS_WRITE_METADATA_TO_SIDECARS_IF_SIDECAR_EXISTS or
# writeMetadataToSidecarsIfSidecarExists
# -----------------------------------------------------------------------------------------
#
# If set to true, PhotoStructure will write metadata changes into sidecars if
# the file already has a sidecar and the tag is not in the
# sidecarTagBlocklist.
#
# PS_WRITE_METADATA_TO_SIDECARS_IF_SIDECAR_EXISTS="true"


# ------------------------------------------------------------------------
# PS_WRITE_METADATA_TO_SIDECARS_IF_VIDEO or writeMetadataToSidecarsIfVideo
# ------------------------------------------------------------------------
#
# If set to true, PhotoStructure will write metadata changes made to videos
# into sidecars. If set to false, PhotoStructure will overwrite original
# videos with metadata changes. This defaults to false, as most software does
# not use sidecars except for images.
#
# PS_WRITE_METADATA_TO_SIDECARS_IF_VIDEO="false"



##############################################################################
#
# Settings for Library.subscriptions:
#

# ---------------------------------------------
# PS_AUTO_REFRESH_LICENSE or autoRefreshLicense
# ---------------------------------------------
#
# PhotoStructure uses cryptographically signed licenses to locally store your
# current plan subscription status. These licenses are only valid for the
# current subscription period, and must be refreshed when your subscription
# renews or converts from a free trial to a paid subscription. To minimize the
# hassle of license renewals, PhotoStructure can automatically renew expired
# licenses in the background.
#
# If the current license has expired and this value is true, PhotoStructure
# will make one secure POST request to https://account.photostructure.com/
# that contains several lossy one-way hashes of current system metadata. We
# hash all identifying metadata to only 15 characters to alleviate any privacy
# concerns. If your plan subscription is active, a new license will be added
# to your library.
#
# Set this to false and set the "reportErrors" setting to false if you don't
# want PhotoStructure "phoning home" for any reason.
#
# Note that if this is disabled, license renewals will require manual
# intervention: click "Upgrade" from the main menu, pick your plan,
# authenticate, and the license will automatically refresh.
#
# PS_AUTO_REFRESH_LICENSE="true"


# -------------------
# PS_COUPON or coupon
# -------------------
#
# Coupon to automatically apply during subscription setup. This value will be
# ignored if you've already gone through the subscription setup flow.
#
# The example value is a valid coupon code: thanks for reading!)
#
# Note that you can apply a coupon after your free trial starts by visiting
# https://account.photostructure.com .
#
# PS_COUPON=""


# ---------------------
# PS_LICENSE or license
# ---------------------
#
# Subscription licenses are normally saved automatically into both your
# library and system configuration directories. This setting just provides
# users with an alternative way to provide a license, if it's more convenient.
# Any value provided to this setting will be considered in addition to
# existing license files when PhotoStructure is trying to find the "best"
# license available.
#
# PS_LICENSE=""


# --------------------------------------------
# PS_PICK_PLAN_ON_WELCOME or pickPlanOnWelcome
# --------------------------------------------
#
# If set to true, the welcome page flow will redirect to
# https://account.photostructure.com/plans to have you pick between a "PLUS"
# and "LITE" plan. If set to false, the welcome page will continue directly to
# the settings page with a "LITE" plan. You can still upgrade to a paid plan
# later from the main menu or the about page, even if this is false.
#
# PS_PICK_PLAN_ON_WELCOME="true"


# ---------------------------------------------------
# PS_SUBSCRIPTION_TIMEOUT_MS or subscriptionTimeoutMs
# ---------------------------------------------------
#
# How long can PhotoStructure spend trying to gather system metadata and
# validating subscription licenses? This is fairly short, as the user is
# presumably waiting for PhotoStructure to spin up. If you have a slow system,
# you may want to increase this value.
#
# PS_SUBSCRIPTION_TIMEOUT_MS="7s"



##############################################################################
#
# Settings for Library.sync:
#

# -----------------------------------------------
# PS_ASSET_PATHNAME_FORMAT or assetPathnameFormat
# -----------------------------------------------
#
# If you opt into "automatic organization" (see the setting
# "copyAssetsToLibrary"), they will be copied into <originals
# directory>/<result of assetPathnameFormat>.
#
# - See the originalsDir system setting for what your <originals directory> is
# (it defaults to your library root directory).
#
# - Please encode this path with forward-slashes, even if you're on Windows.
#
# - If any patterns resolve to including forward-slashes, know that will be
# interpreted as subdirectories.
#
# - If you want to add a static path, escape the pathname with single quotes
# (like "'photos'/y/MM/dd").
#
# - The result of this will always be interpreted as a relative path from your
# PhotoStructure originals directory.
#
# - Use token "BASE" as a shorthand for the original basename ("photo.jpg" for
# "/path/to/photo.jpg").
#
# - Use token "NAME" as a shorthand for the original filename, without the
# file extension ("photo" for "/path/to/photo.jpg").
#
# - Use token "PARENT" as a shorthand for the original file's parent directory
# name ("to" for "/path/to/photo.jpg").
#
# - Use token "GRANDPARENT" as a shorthand for the original file's grandparent
# directory name ("path" for "/path/to/photo.jpg").
#
# - Use token "EXT" for the filename's extension without the "." prefix (like
# "jpg" for "/path/to/photo.jpg").
#
# - Use token "ISO" as a shorthand for "yyyy-MM-dd'T'HH:mm:ss.SSSZZ".
#
# - You can escape other static text by wrapping with single quotes.
#
# - For other tokens, see
# https://moment.github.io/luxon/#/formatting?id=table-of-tokens .
#
# - See
# https://forum.photostructure.com/t/how-to-change-the-naming-structure/1184/2?u=mrm
# for more details.
#
# PS_ASSET_PATHNAME_FORMAT="y/y-MM-dd/BASE"


# --------------------------------------------------------------------------
# PS_ASSET_SUBDIRECTORY_DATESTAMP_FORMAT or assetSubdirectoryDatestampFormat
# --------------------------------------------------------------------------
#
# NOTE: this setting has been deprecated and will be removed in a future
# version of PhotoStructure.
#
# This setting has been replaced by "assetPathnameFormat".
#
# If this setting is provided, and assetPathnameFormat is _not_ provided, we
# will give assetPathnameFormat the value of this setting + "/BASE".
#
# Aliases: "PS_ASSET_SUBDIR_FORMAT"
#
# PS_ASSET_SUBDIRECTORY_DATESTAMP_FORMAT=""


# -------------------------------------------------------
# PS_COPY_TO_LIBRARY_MIME_TYPES or copyToLibraryMimeTypes
# -------------------------------------------------------
#
# When "automatic organization" is enabled, files whose mimetypes are included
# in this list will be copied into your originals directory.
#
# Note that MIME types can include an asterisk to do glob-matching.
#
# See the related system setting "copyAssetsToLibrary".
#
# A list of MIME types are here:
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types
# .
#
# PS_COPY_TO_LIBRARY_MIME_TYPES="[\"image/*\",\"video/*\"]"


# -------------------------------------
# PS_DROP_WORK_QUEUES or dropWorkQueues
# -------------------------------------
#
# When set, all files will be visited, even if the asset seems in sync with
# the filesystem.
#
# This setting is transient and only set via environment variables.
#
#
# PS_DROP_WORK_QUEUES="false"


# ----------------------------------------------------------------------
# PS_EXCLUDE_NO_MEDIA_ASSETS_ON_REBUILD or excludeNoMediaAssetsOnRebuild
# ----------------------------------------------------------------------
#
# Should previously-imported assets that are found to have *any* files in
# NoMedia directories be excluded from your library?
#
# PS_EXCLUDE_NO_MEDIA_ASSETS_ON_REBUILD="true"


# ---------------------------------
# PS_EXIT_WHEN_DONE or exitWhenDone
# ---------------------------------
#
# When set, the sync process will exit after jobs are completed (used
# internally and for tests).
#
# This setting is transient and only set via environment variables.
#
#
# PS_EXIT_WHEN_DONE="false"


# -----------------------------------------------
# PS_FORCE_REBUILD_LIBRARY or forceRebuildLibrary
# -----------------------------------------------
#
# When set, all files in your library will be re-imported (caution: slow!).
#
# This setting is transient and only set via environment variables.
#
#
# Aliases: "PS_REBUILD"
#
# PS_FORCE_REBUILD_LIBRARY="false"


# -------------------------------------------------
# PS_FORCE_REBUILD_PREVIEWS or forceRebuildPreviews
# -------------------------------------------------
#
# When set, previews and transcoded videos will always be rebuilt.
#
# This setting is transient and only set via environment variables.
#
#
# PS_FORCE_REBUILD_PREVIEWS="false"


# --------------------------
# PS_FORCE_SYNC or forceSync
# --------------------------
#
# When set, all files will be visited, even if the asset seems in sync with
# the filesystem.
#
# This setting is transient and only set via environment variables.
#
#
# PS_FORCE_SYNC="false"


# ----------------------------------------------------------
# PS_MAX_DUPLICATE_PATH_ELEMENTS or maxDuplicatePathElements
# ----------------------------------------------------------
#
# How many times can a given path element exist in a directory before it is
# considered within an infinite filesystem loop, and should be skipped from
# import?
#
# PS_MAX_DUPLICATE_PATH_ELEMENTS="7"


# ----------------------------------------------
# PS_NO_ASSET_FILE_UPDATES or noAssetFileUpdates
# ----------------------------------------------
#
# Should outdated AssetFiles be ignored on startup? (Only used for tests).
#
# This setting is transient and only set via environment variables.
#
#
# PS_NO_ASSET_FILE_UPDATES="false"


# -------------------------------------
# PS_NO_ASSET_UPDATES or noAssetUpdates
# -------------------------------------
#
# Should outdated Assets be ignored on startup? (Only used for tests).
#
# This setting is transient and only set via environment variables.
#
#
# PS_NO_ASSET_UPDATES="false"


# -------------------------------------
# PS_NO_MODEL_UPDATES or noModelUpdates
# -------------------------------------
#
# When set, skip any pending library database updates (only used for tests).
#
# This setting is transient and only set via environment variables.
#
#
# PS_NO_MODEL_UPDATES="false"


# ----------------------------------------------
# PS_ONLY_NATIVE_FILE_COPY or onlyNativeFileCopy
# ----------------------------------------------
#
# Should PhotoStructure skip the built-in file copy code, and only use the "OS
# native" file copy mechanism?
#
# PhotoStructure is typically faster than native file copies by 2x or more.
#
# If true, PhotoStructure will use "cp" on macOS and Linux, and PowerShell
# "Copy-Item" on Windows.
#
# PS_ONLY_NATIVE_FILE_COPY="false"


# ------------------------------------------
# PS_OVERWRITE_ORIGINAL or overwriteOriginal
# ------------------------------------------
#
# Should changes made through the UI, like rotations, captions, and keywords,
# overwrite the original file? This is potentially dangerous, as your original
# may be lost if the disk has errors, or there are issues in rewriting the
# file contents. If this is set to false, the original file will be retained
# in the same directory. "image.jpg" will be stored as "image_original.jpg".
#
# PS_OVERWRITE_ORIGINAL="false"


# ---------------------------------------------------
# PS_PROGRESS_RETENTION_DAYS or progressRetentionDays
# ---------------------------------------------------
#
# How many days of sync progress should we keep around in the database before
# it's removed?
#
# PS_PROGRESS_RETENTION_DAYS="180"


# -------------------------------------------
# PS_PROGRESS_STALE_DAYS or progressStaleDays
# -------------------------------------------
#
# When sync starts, it tries to pick up where it was previously, but this
# doesn't make sense if the prior work was done a while ago, as it is more
# likely that the filesystem has changed since.
#
# PS_PROGRESS_STALE_DAYS="6"


# -----------------------------------
# PS_QUICK_SYNC_MODE or quickSyncMode
# -----------------------------------
#
# Should PhotoStructure disable a bunch of features to make imports faster?
# Note that this disables image validation, video transcoding, image hashing
# (required for good deduplication), metadata inference, and more efficient
# preview encoding. It is true by default on Raspberry Pis and false
# everywhere else.
#
# PS_QUICK_SYNC_MODE="false"


# ----------------------------------------------
# PS_RESYNC_ASSET_ON_VISIT or resyncAssetOnVisit
# ----------------------------------------------
#
# Should Assets be automatically re-synchronized whenever their info panel is
# viewed? This can make sure Assets are in-sync with the filesystem, but this
# can slow down current imports, and add load to slower computers. This
# defaults to true only if the current machine has >= 8 CPUs.
#
# PS_RESYNC_ASSET_ON_VISIT="true"


# ----------------------------------
# PS_RETRY_ENQUEUED or retryEnqueued
# ----------------------------------
#
# After finishing a directory sync, should PhotoStructure look at recent
# sync-reports and retry files that are "stuck" in "enqueued" state?
#
# This shouldn't be necessary, but it's a backstop to ensure syncs are
# comprehensive.
#
# PS_RETRY_ENQUEUED="true"


# -----------------------------------------
# PS_SCAN_LIBRARY_FIRST or scanLibraryFirst
# -----------------------------------------
#
# Should PhotoStructure scan your library before all other paths are
# synchronized?
#
# This defaults to true if you are using automatic organization, to make sure
# existing files in your library are in sync with your library database. This
# prevents additional copies of the same SHA being copied into your library
# directory if you have automatic organization enabled.
#
# Aliases: "PS_SYNC_LIBRARY_FIRST"
#
# PS_SCAN_LIBRARY_FIRST="true"


# ---------------------------------------
# PS_SCAN_LIBRARY_LAST or scanLibraryLast
# ---------------------------------------
#
# Should PhotoStructure scan your library after all other paths are
# synchronized?
#
# Aliases: "PS_SYNC_LIBRARY_LAST"
#
# PS_SCAN_LIBRARY_LAST="false"


# ------------------------------
# PS_START_PAUSED or startPaused
# ------------------------------
#
# Should processing be paused by default when PhotoStructure starts? You'll
# have to manually resume processing via the system tray or nav menu.
#
# PS_START_PAUSED="false"


# ----------------------------------------------------
# PS_SYNC_CHANGED_INTERVAL_MS or syncChangedIntervalMs
# ----------------------------------------------------
#
# This value controls both how often the sync process discovers new or changed
# files for any given volume.
#
# Note that this value is the duration between the last completion time and
# when the next sync should be scheduled.
#
# WARNING: Setting this value to a small value will mean PhotoStructure is
# constantly scanning your disks, which will add wear and tear and possibly
# reduce the lifespan of your storage media.
#
# PS_SYNC_CHANGED_INTERVAL_MS="1w"


# -------------------------------------------
# PS_SYNC_INTERVAL_HOURS or syncIntervalHours
# -------------------------------------------
#
# NOTE: this setting has been deprecated and will be removed in a future
# version of PhotoStructure.
#
# This setting has been replaced by "syncNewIntervalMs" and
# "syncChangedIntervalMs".
#
# PS_SYNC_INTERVAL_HOURS=""


# --------------------------------------------
# PS_SYNC_NEW_INTERVAL_MS or syncNewIntervalMs
# --------------------------------------------
#
# This value controls both how often the sync process discovers new files for
# any given volume.
#
# Note that this value is the duration between the last completion time and
# when the next sync should be scheduled.
#
# WARNING: Setting this value to a small value will mean PhotoStructure is
# constantly scanning your disks, which will add wear and tear and possibly
# reduce the lifespan of your storage media.
#
# PS_SYNC_NEW_INTERVAL_MS="1d"


# --------------------------------------------
# PS_SYNC_REPORT_MAX_ROWS or syncReportMaxRows
# --------------------------------------------
#
# Some software can't open large CSVs, so PhotoStructure will start a new sync
# report if the rows exceed this value. Excel and LibreOffice can open
# million-row CSVs, so that's our default.
#
# PS_SYNC_REPORT_MAX_ROWS="1000000"


# -------------------------------------
# PS_SYNC_REPORTS_DIR or syncReportsDir
# -------------------------------------
#
# Detailed reports for every sync are stored in this directory, which defaults
# to ".photostructure/sync-reports" within your PhotoStructure library.
# Absolute paths here are supported.
#
# PS_SYNC_REPORTS_DIR=".photostructure/sync-reports"


# -----------------------------------
# PS_TASK_TIMEOUT_MS or taskTimeoutMs
# -----------------------------------
#
# What's the longest time it can validly take to fetch a file SHA, generate
# image previews for an asset, compute an image hash, or extract tags for a
# file?
#
# On a reasonable server and disk, these tasks should take a handful of
# seconds, but the default allows for a (busy!) RPi on a slow, remote disk to
# not timeout.
#
# Aliases: "PS_TASK_TIMEOUT_MILLIS"
#
# PS_TASK_TIMEOUT_MS="2m"


# -----------------------------------------
# PS_VERIFY_FILE_COPIES or verifyFileCopies
# -----------------------------------------
#
# Should PhotoStructure verify all file copies by comparing SHAs of the source
# and destination? This shouldn't be necessary on most OSes and filesystems,
# and slows down library imports.
#
# PS_VERIFY_FILE_COPIES="true"


# ----------------------------------------------------------------------
# PS_WRITE_SOURCE_TAG_TO_LIBRARY_COPIES or writeSourceTagToLibraryCopies
# ----------------------------------------------------------------------
#
# Should PhotoStructure write to the "Source" tag add metadata to assets
# copied into your library that includes the path where the file was
# originally found? This defaults to false to prevent adding sidecars to every
# file in your library.
#
# PS_WRITE_SOURCE_TAG_TO_LIBRARY_COPIES="false"



##############################################################################
#
# Settings for Library.tagging:
#

# -----------------------------------------
# PS_EXCLUDED_ROOT_TAGS or excludedRootTags
# -----------------------------------------
#
# Keywords starting with the given roots will be omitted from your
# PhotoStructure library. Changing this value requires a library rebuild.
#
# PS_EXCLUDED_ROOT_TAGS="[\"http:\",\"https:\",\"file:\"]"


# ------------------------------------------
# PS_KEYWORD_DELIMITERS or keywordDelimiters
# ------------------------------------------
#
# PhotoStructure splits apart keywords, by default, when they are delimited by
# a comma or semicolon. For example, "car, blue, tree" will be interpreted as
# having the keywords "car", "blue", and "tree".
#
# Note that some software doesn't encode lists of keywords properly, so we
# have to include the comma and semicolon by default to handle these cases:
# but this makes keywords that contain a comma be split incorrectly. If the
# files in your library don't have this encoding issue, you can replace this
# setting with just an empty string to disable splitting.
#
# See
# https://forum.photostructure.com/t/incorrect-handling-of-keywords-with-comma/992
# for more discussion.
#
# After changing this value, you must force-resync your library for the
# changes to take affect.
#
# PS_KEYWORD_DELIMITERS=",;"


# ---------------------------------------------------
# PS_KEYWORD_PATH_SEPARATORS or keywordPathSeparators
# ---------------------------------------------------
#
# PhotoStructure interprets keywords as hierarchical if a path separator
# character is found in a keyword. This allows for tags like
# "Family/Einstein/Albert", "Flora|Fruit|Orange", "Objects⊃Tools⊃Hammer", or
# "Fauna>Oceanic>Pelican". By default, these separators are the forward-slash,
# vertical-bar, and greater-than characters. If you don't want to interpret
# keywords as hierarchical, change this value to an empty string (""). After
# changing this value, you must force-resync your entire library for the
# changes to take affect.
#
# PS_KEYWORD_PATH_SEPARATORS="/|>⊃"


# --------------------------------------------
# PS_KEYWORD_REPARENTING or keywordReparenting
# --------------------------------------------
#
# How should PhotoStructure handle hierarchical keywords?
#
# If this is set to "move", PhotoStructure will try to put hierarchical
# keywords into their "correct" root tag, like "Who," "Album," or "Where."
#
# If this is set to "retain," PhotoStructure will always place hierarchical
# keywords under the "Keyword" root tag.
#
# If this is set to "copy," PhotoStructure will add both the "correct" root
# tag _and_ the "Keyword" tag. For example, "Person|Doe|Jane" will be tagged
# as "Who|Doe|Jane" as well as "Keyword|Person|Doe|Jane".
#
# See https://forum.photostructure.com/t/prefix-for-keywords-tag/499 for
# details.
#
# Valid values: [
#   "move",
#   "copy",
#   "retain"
# ]
#
# PS_KEYWORD_REPARENTING="move"


# ------------------------------
# PS_KEYWORD_TAGS or keywordTags
# ------------------------------
#
# PhotoStructure should look in the following tags for keywords. Note that
# these values are case-sensitive.
#
# PS_KEYWORD_TAGS="[\"CatalogSets\",\"Categories\",\"HierarchicalSubject\",\"Keywords\",\"LastKeywordXMP\",\"Subject\",\"TagsList\",\"XPKeywords\"]"


# -----------------------------------------
# PS_OMIT_ANCESTOR_TAGS or omitAncestorTags
# -----------------------------------------
#
# PhotoStructure's hierarchical tags assume implicit inheritance: that is, if
# you tag an asset with "nature/sky", "nature" is implicitly assumed.
#
# If this setting is true, PhotoStructure will omit tags that are already
# inferred from deeper descendant tags--that is, if an asset is tagged with
# "nature/sky" and "nature", and this setting is true, the "nature" tag will
# be omitted.
#
# PS_OMIT_ANCESTOR_TAGS="true"


# -------------------------------------
# PS_RECOUNT_ALL_TAGS or recountAllTags
# -------------------------------------
#
# Should all tags be recounted? PhotoStructure normally only recounts tags
# that have had assets recently added or removed, unless there are more than
# 20 changed tags.
#
# This setting is transient and only set via environment variables.
#
#
# PS_RECOUNT_ALL_TAGS="false"


# --------------------------------------------------
# PS_ROOT_TAG_ALBUMS_ALIASES or rootTagAlbumsAliases
# --------------------------------------------------
#
# List hierarchical tag roots that PhotoStructure should interpret to be album
# names. This is matched case-insensitively.
#
# PS_ROOT_TAG_ALBUMS_ALIASES="[\"Album\",\"Albums\"]"


# ------------------------------------------------------
# PS_ROOT_TAG_KEYWORDS_ALIASES or rootTagKeywordsAliases
# ------------------------------------------------------
#
# List hierarchical tag roots that PhotoStructure should interpret to be
# keywords. This is matched case-insensitively.
#
# PS_ROOT_TAG_KEYWORDS_ALIASES="[\"Keyword\",\"Keywords\",\"Tag\",\"Tags\"]"


# --------------------------------------------
# PS_ROOT_TAG_WHO_ALIASES or rootTagWhoAliases
# --------------------------------------------
#
# When hierarchical tag values are found with any of these root names
# PhotoStructure will replace the root with "Who".
#
# For example, using default values, "People/Jane Doe" will be replaced with
# "Who/Jane Doe" (or "Who/Doe/Jane", if tagNamesFormatter="family/given").
#
# Digicam uses "People". This is matched case-insensitively.
#
# Aliases: "PS_TAG_WHO_SYNONYMS"
#
# PS_ROOT_TAG_WHO_ALIASES="[\"Person\",\"People\",\"Face\",\"Faces\"]"


# ---------------------------------
# PS_TAG_ALBUM_DATE or tagAlbumDate
# ---------------------------------
#
# If you have enabled "tagAlbumFromJson", what's the name of the field encoded
# in the album file? Object hierarchies are separated with a ".".
#
# PS_TAG_ALBUM_DATE="albumData.date"


# -----------------------------------------------
# PS_TAG_ALBUM_DESCRIPTION or tagAlbumDescription
# -----------------------------------------------
#
# If you have enabled "tagAlbumFromJson", what's the name of the field encoded
# in the album file? Object hierarchies are separated with a ".".
#
# PS_TAG_ALBUM_DESCRIPTION="albumData.description"


# -------------------------------------------
# PS_TAG_ALBUM_FILENAMES or tagAlbumFilenames
# -------------------------------------------
#
# PhotoStructure will look for files in the same directory with these names
# for album metadata. This can be JSON, XMP, MIE, or EXIF encoded, and is
# case-sensitive.
#
# Set this to an empty array ("[]") to disable this feature.
#
# Aliases: "PS_TAG_ALBUM_JSON_FILENAMES"
#
# PS_TAG_ALBUM_FILENAMES="[\"metadata.json\"]"


# -------------------------------------------
# PS_TAG_ALBUMS_EXCLUDED or tagAlbumsExcluded
# -------------------------------------------
#
# For "metadata.json" albums, some are automatically generated. If the title
# or description includes any given string, it will be ignored.
#
# PS_TAG_ALBUMS_EXCLUDED="[\"Album for automatically uploaded content\"]"


# -----------------------------------
# PS_TAG_ALBUM_TITLE or tagAlbumTitle
# -----------------------------------
#
# If you have enabled "tagAlbumFromJson", what's the name of the field encoded
# in the album file? Object hierarchies are separated with a ".".
#
# PS_TAG_ALBUM_TITLE="albumData.title"


# ----------------------------------------------------------
# PS_TAG_ALBUM_TITLE_HIERARCHIES or tagAlbumTitleHierarchies
# ----------------------------------------------------------
#
# If true, album titles will be split as hierarchical keywords. If false,
# album titles will not be split, and all albums will be under the "Albums"
# root tag.
#
# PS_TAG_ALBUM_TITLE_HIERARCHIES="false"


# --------------------------
# PS_TAG_CAMERA or tagCamera
# --------------------------
#
# Should assets be tagged with cameras' make and model?
#
# PS_TAG_CAMERA="true"


# ----------------------------------------
# PS_TAG_DATE_FROM_STAT or tagDateFromStat
# ----------------------------------------
#
# Should PhotoStructure tag assets with a date if the captured at time was
# only found in filesystem metadata? Filesystem metadata is not as reliable as
# EXIF metadata, as it can be changed arbitrarily when files are backed up.
#
# PS_TAG_DATE_FROM_STAT="true"


# ------------------------------------------
# PS_TAG_DISPLAY_NAME_FS or tagDisplayNameFS
# ------------------------------------------
#
# What should PhotoStructure call the "root" tag for browsing by filesystem
# paths? Note that this value is only for the UI, and will update the
# "_displayName" of the /fs/ tag: this value won't change the URL path from be
# "/tag/fs/.../". Reasonable options that have been suggested include
# "Folder", "Directory", "Drive", "File", "Path", "Volume", or "Computer".
#
# PS_TAG_DISPLAY_NAME_FS="Folder"


# -------------------------------------------------------
# PS_TAG_DISPLAY_NAME_FS_LABELS or tagDisplayNameFSLabels
# -------------------------------------------------------
#
# Should PhotoStructure use volume labels, if available, as display names for
# filesystem tags? As an example, instead of showing "Folder / D:", you'd see
# "Folder / Photo backup #3" (or whatever the label D: has).
#
# PS_TAG_DISPLAY_NAME_FS_LABELS="true"


# ---------------------------------------------------
# PS_TAG_DISPLAY_NAME_FS_ROOT or tagDisplayNameFSRoot
# ---------------------------------------------------
#
# On POSIX systems, how should PhotoStructure reference the "root" directory
# (/)? "/" is a bit confusing, so "root" may be less confusing? Also see
# "tagDisplayNameFSRootWithHostname".
#
# PS_TAG_DISPLAY_NAME_FS_ROOT="root"


# -----------------------------------------------------------------------------
# PS_TAG_DISPLAY_NAME_FS_ROOT_WITH_HOSTNAME or
# tagDisplayNameFSRootWithHostname
# -----------------------------------------------------------------------------
#
# On non-docker hosts (which typically don't have reliable hostnames), should
# the root directory tag have the hostname appended?
#
# PS_TAG_DISPLAY_NAME_FS_ROOT_WITH_HOSTNAME="true"


# -------------------------------------
# PS_TAG_FACE_REGIONS or tagFaceRegions
# -------------------------------------
#
# Picasa and other software supports embedding face names within
# "RegionInfo.RegionList.Name" metadata. If this setting is enabled, and
# "RegionInfo.RegionList.Type" is "Face", PhotoStructure will import these
# tags under "Who".
#
# PS_TAG_FACE_REGIONS="true"


# -------------------------------
# PS_TAG_FILE_TYPE or tagFileType
# -------------------------------
#
# Should assets be tagged with their file type (like "Type/Image/JPEG")?
#
# Aliases: "PS_TAG_TYPE"
#
# PS_TAG_FILE_TYPE="true"


# ------------------------------------------
# PS_TAG_FULL_LENS_MODEL or tagFullLensModel
# ------------------------------------------
#
# Should PhotoStructure tag assets with the full lens model (like "Canon EF-M
# 15-45mm f/3.5-6.3 IS STM") or a just the lens information ("15-45mm
# f/3.5-6.3")? (If you change this value, you'll need to "Rebuild" your
# library to make the setting take effect).
#
# PS_TAG_FULL_LENS_MODEL="true"


# ---------------------------------
# PS_TAG_JSON_FACES or tagJsonFaces
# ---------------------------------
#
# Google Takeout provides .json sidecars that may contain the names of the
# people (or pets) found in the image. Should PhotoStructure import these tags
# under "Who"?.
#
# PS_TAG_JSON_FACES="true"


# --------------------------------------------------------
# PS_TAG_KEYWORDS_FROM_METADATA or tagKeywordsFromMetadata
# --------------------------------------------------------
#
# Should assets be tagged with keywords extracted from file metadata, as well
# as sidecar metadata?
#
# PS_TAG_KEYWORDS_FROM_METADATA="true"


# ------------------------------------------------
# PS_TAG_KEYWORDS_FROM_PATH or tagKeywordsFromPath
# ------------------------------------------------
#
# Should assets be tagged with keywords extracted from file pathnames?
#
# PS_TAG_KEYWORDS_FROM_PATH="true"


# ----------------------
# PS_TAG_LENS or tagLens
# ----------------------
#
# Should assets be tagged with lens' make and model?
#
# PS_TAG_LENS="true"


# -----------------------------------------------------------------
# PS_TAG_NAMES_CAPITALIZED_AS_FAMILY or tagNamesCapitalizedAsFamily
# -----------------------------------------------------------------
#
# Assume uppercased names are family names (this is common practice in
# geneology).
#
# PS_TAG_NAMES_CAPITALIZED_AS_FAMILY="true"


# ----------------------------------------------------
# PS_TAG_NAMES_DEFAULT_FAMILY or tagNamesDefaultFamily
# ----------------------------------------------------
#
# If a name is missing a family name, if this value is not blank, it will be
# provided as a default. If this value is blank, the name tag will be
# Who/given. Note that this setting is only used if "tagNamesFormatter" is set
# to "family/given".
#
# PS_TAG_NAMES_DEFAULT_FAMILY="-"


# --------------------------------------------------------
# PS_TAG_NAMES_FAMILY_SURROUNDS or tagNamesFamilySurrounds
# --------------------------------------------------------
#
# This setting contains pairs of characters. When name portions are surrounded
# by these pairs, the contents will be added as a family name. As an example,
# if you use the default "()", then "Michelle LaVaughn (Robinson) Obama" will
# be name tagged with both "Who/Robinson/Michelle LaVaughn" and
# "Who/Obama/Michell LaVaugn". This setting is used by the "tagNamesFormatter"
# if it is set to "family/given".
#
# PS_TAG_NAMES_FAMILY_SURROUNDS="[\"()\"]"


# -------------------------------------------
# PS_TAG_NAMES_FORMATTER or tagNamesFormatter
# -------------------------------------------
#
# How should PhotoStructure format the "Who" tags for assets whose files are
# tagged with "people" strings?
#
# - "as-is" will tag names directly to "Who", so, "Who/Albert Einstein".
#
# - "family/given" will tag "Who/Einstein/Albert" (for regions that provide
# given names first).
#
# - "family/fullname" will tag "Who/Einstein/Albert Einstein".
#
# The default is "as-is," because discerning given and family names aren't
# reliably inferable.
#
# See https://en.wikipedia.org/wiki/Personal_name#Name_order .
#
# Valid values: [
#   "as-is",
#   "family/given",
#   "family/fullname"
# ]
#
# PS_TAG_NAMES_FORMATTER="as-is"


# -----------------------------------
# PS_TAG_NAMES_GIVEN or tagNamesGiven
# -----------------------------------
#
# List all given names you expect in tags that are not single words.
# Hyphenated given names (like "Rose-Ann") do not need to be listed here. If
# your language doesn't separate family names and given names with whitespace,
# either include all given names, or include all familyNames (whatever's
# easier for you). This setting is used by the "tagNamesFormatter" if it is
# set to "family/given".
#
# PS_TAG_NAMES_GIVEN="[]"


# ------------------------------------------------------
# PS_TAG_NAMES_GIVEN_SURROUNDS or tagNamesGivenSurrounds
# ------------------------------------------------------
#
# This setting contains pairs of characters. When name portions are surrounded
# by these pairs, the contents will be added to the end of the given name with
# the surrounds retained. As an example, if you use the defaults of "[]" and
# double-quotes, then "Joe "Joey" Smith" will be name tagged with
# Who/Smith/Joe "Joey". This setting is used by the "tagNamesFormatter" if it
# is set to "family/given".
#
# PS_TAG_NAMES_GIVEN_SURROUNDS="[\"[]\",\"\\\"\\\"\"]"


# ---------------------------------------
# PS_TAG_NAMES_LEXICAL or tagNamesLexical
# ---------------------------------------
#
# Assume any name with a comma is in "lexical name order", which is always
# "lastname, given name(s)". If the given name is found to be "sr.", "senior",
# "jr.", or "junior", the name will be considered to be in western order
# ($givenNames $familyName, $modifier), and the $modifier will be added to the
# $givenNames. If this is set to false, commas are ignored.
#
# PS_TAG_NAMES_LEXICAL="true"


# -----------------------------------
# PS_TAG_NAMES_ORDER or tagNamesOrder
# -----------------------------------
#
# How should PhotoStructure parse people's names? Note that this setting is
# only used if "tagNamesFormatter" is set to "family/given". See
# https://en.wikipedia.org/wiki/Personal_name#Name_order .
#
# Valid values: [
#   "western",
#   "eastern"
# ]
#
# PS_TAG_NAMES_ORDER="western"


# --------------------------------------------------------
# PS_TAG_NAMES_SURNAME_PREFIXES or tagNamesSurnamePrefixes
# --------------------------------------------------------
#
# List all family name prefixes to be considered part of the family name.
# These are matched case-insensitively. This setting is used by the
# "tagNamesFormatter" if it is set to "family/given".
#
# PS_TAG_NAMES_SURNAME_PREFIXES="[\"A\",\"D’\",\"Da\",\"De la\",\"De
# las\",\"De\",\"Del\",\"Della\",\"Den\",\"Des\",\"Di\",\"Du\",\"La\",\"Las\",\"Le\",\"Li\",\"Lo\",\"Mc\",\"Mac\",\"op
# de\",\"ten\",\"ter\",\"Van ‘t\",\"van de\",\"van der\",\"van\",\"von
# der\",\"von\",\"z\",\"zu\"]"


# -----------------------------------------
# PS_TAG_NAMES_SURNAMES or tagNamesSurnames
# -----------------------------------------
#
# List all family names you expect in tags that are not single words that are
# found at the end of a tagged name. Hyphenated family names (like
# "Ocasio-Cortez") do not need to be listed here: only compound family names,
# and if your language doesn't separate family names with whitespace. In the
# latter case, either include all family names, or include all givenNames
# (whatever's easier for you). This setting is used by the "tagNamesFormatter"
# if it is set to "family/given".
#
# PS_TAG_NAMES_SURNAMES="[]"


# --------------------
# PS_TAG_YMD or tagYMD
# --------------------
#
# Should assets be tagged with "When > Year" (the "y" option), or "When > Year
# > Month" (the "ym" option), or "When > Year > Month > Day" (the "ymd"
# option)? Setting this to "" will disable date tagging.
#
# Valid values: [
#   "y",
#   "ym",
#   "ymd",
#   ""
# ]
#
# PS_TAG_YMD="ym"


# ----------------------
# PS_WHO_TAGS or whoTags
# ----------------------
#
# This is a list of tags that will be examined for strings or string arrays.
# All values associated to these fields will be interpreted as names. Note
# that "dotted notation" is supported.
#
# Aliases: "PS_TAG_WHO_NAMES"
#
# PS_WHO_TAGS="[\"People\",\"PersonInImage\",\"PersonInImageWDetails.PersonName\",\"PersonInImageName\",\"RegionInfoMP.Regions.PersonDisplayName\"]"



##############################################################################
#
# Settings for Library.updates:
#

# ---------------------------------------
# PS_AUTO_UPDATE_CHECK or autoUpdateCheck
# ---------------------------------------
#
# While running, PhotoStructure will check periodically for updates.
#
# See
# https://forum.photostructure.com/t/new-in-v2023-10-automated-photostructure-version-checking/1956
# for details.
#
# Set this to "false" to disable automatic update checking.
#
# PS_AUTO_UPDATE_CHECK="true"


# ----------------------------------
# PS_UPDATE_CHANNEL or updateChannel
# ----------------------------------
#
# TL:DR; keep this on "stable". This setting controls which builds of
# PhotoStructure you are eligible to update to, and on desktops, this upgrade
# is automated.
#
# Please note that "prealpha" and "alpha" builds may not even launch, and
# "beta" builds have not been thoroughly tested. See
# https://forum.photostructure.com/t/alpha-beta-stable-and-latest-what-should-you-use/274
# for details.
#
# Valid values: [
#   "prealpha",
#   "alpha",
#   "beta",
#   "stable"
# ]
#
# PS_UPDATE_CHANNEL="prealpha"



##############################################################################
#
# Settings for Library.video:
#

# -------------------------------------------------------------
# PS_DO_NOT_TRANSCODE_AUDIO_CODECS or doNotTranscodeAudioCodecs
# -------------------------------------------------------------
#
# Videos are transcoded when the "transcodeVideos" is set to true and is not
# one of the following audio codecs. The audio codec is stored in the
# "AudioCodec" tag.
#
# PS_DO_NOT_TRANSCODE_AUDIO_CODECS="[\"mp4a\",\"sowt\"]"


# ---------------------------------------------------------
# PS_DO_NOT_TRANSCODE_MIME_TYPES or doNotTranscodeMimeTypes
# ---------------------------------------------------------
#
# Videos are transcoded when the "transcodeVideos" is set to true and is not
# one of the following MIME types.
#
# See https://www.iana.org/assignments/media-types/media-types.xhtml#video for
# a complete list.
#
# If you are setting this via an environment variable, you can separate the
# values either like a PATH (like "video/quicktime:video/mp4") or use JSON
# encoding (like "['video/quicktime','video/mp4']").
#
# PS_DO_NOT_TRANSCODE_MIME_TYPES="[\"video/quicktime\",\"video/mp4\",\"video/mpv\",\"video/mp2t\"]"


# -------------------------------------------------------------
# PS_DO_NOT_TRANSCODE_VIDEO_CODECS or doNotTranscodeVideoCodecs
# -------------------------------------------------------------
#
# Videos are transcoded when the "transcodeVideos" is set to true and is not
# one of the following video codecs. The video codec may be stored in the
# "VideoCodec", "CompressorID", or "CompressorName" tags.
#
# PS_DO_NOT_TRANSCODE_VIDEO_CODECS="[\"avc1\"]"


# ------------------------------------------------------
# PS_FFMPEG_AVC_TRANSCODE_ARGS or ffmpegAvcTranscodeArgs
# ------------------------------------------------------
#
# The following are the default arguments added to transcode requests made to
# ffmpeg, when ffmpeg is available. The following arguments will follow
# "ffmpeg -loglevel error -threads T -i INPUT_FILE_PATH" (where T is replaced
# by ~half the available CPU threads, and INPUT_FILE_PATH is the full native
# pathname to the source video).
#
# If your videos are in high colorspace like bt2020, you may want to remove
# the "-vf" and "colorspace=all=bt709:iall=bt709:itrc=srgb" options, but this
# may cause rendering issues on SDR displays. See
# https://forum.photostructure.com/t/1003/3 for more details.
#
# CAUTION: this is an advanced setting. Invalid values may cause videos that
# require transcoding to not be imported, or not be viewable on some browsers.
#
# Aliases: "PS_FFMPEG_TRANSCODE_ARGS"
#
# PS_FFMPEG_AVC_TRANSCODE_ARGS="[\"-c:a\",\"aac\",\"-c:v\",\"libx264\",\"-pix_fmt\",\"yuv420p\",\"-vf\",\"colorspace=all=bt2020:iall=bt601-6-625:fast=1\",\"-color_range\",\"1\",\"-colorspace\",\"1\",\"-color_primaries\",\"1\",\"-movflags\",\"+faststart\"]"


# ----------------------------------
# PS_FFMPEG_HWACCEL or ffmpegHwaccel
# ----------------------------------
#
# FFmpeg supports both software and hardware encoders. Valid values include
# "auto" (which should "just work" for everyone), "h264_nvenc" for GPUs,
# "cuda" for NVIDIA GPUs, "dxva2" or "d3d11va" for Windows, or use "disable"
# to omit this argument.
#
# Run "ffmpeg -hwaccels" to see supported acceleration methods.
#
# Note that some hardware acceleration is only relevant for a handful of video
# codecs, so what might help for one transcode may not for another.
#
# Note that PhotoStructure will automatically retry "disable" if there are
# hwaccel errors.
#
# See
# https://forum.photostructure.com/t/hardware-accelerated-encoding-transcoding/166>,
# https://trac.ffmpeg.org/wiki/HWAccelIntro , and
# <https://github.com/NVIDIA/nvidia-docker for more details.
#
# PS_FFMPEG_HWACCEL="disable"


# ---------------------------------------
# PS_FFMPEG_SCALE_TYPE or ffmpegScaleType
# ---------------------------------------
#
# What style of resize works for your version of ffmpeg?
#
# "vf" will use "-vf scale=WxH"
#
# "s" will use "-s WxH".
#
# The default should be fine: only very old versions should use "s".
#
# Valid values: [
#   "vf",
#   "s"
# ]
#
# PS_FFMPEG_SCALE_TYPE="vf"


# ----------------------------------
# PS_FFMPEG_THREADS or ffmpegThreads
# ----------------------------------
#
# When transcoding videos, what value should we give to "ffmpeg -threads"?
#
# Note that there are vanishing returns here: there's a substantial benefit to
# 2 threads versus 1 thread, but 4 vs 8 threads only fractionally improves
# transcode time while increasing CPU time linearly. The default is clamp(1,
# 6, ($CPU_COUNT * $cpuBusyPercent) / 4).
#
# PS_FFMPEG_THREADS=""


# -------------------------------------------------
# PS_TRANSCODE_BITRATE_QVGA or transcodeBitrateQVGA
# -------------------------------------------------
#
# What max bitrate should PhotoStructure encode QVGA (320 × 240) videos?
# Videos with resolutions between QVGA and UHD will use an interpolated value
# between these two settings, and will not exceed the encoded bitrate of the
# original video. This value is in kilobytes per second.
#
# PS_TRANSCODE_BITRATE_QVGA="800"


# -----------------------------------------------
# PS_TRANSCODE_BITRATE_UHD or transcodeBitrateUHD
# -----------------------------------------------
#
# What max bitrate should PhotoStructure encode UHD (3840 × 2160) videos?
# Videos with resolutions between QVGA and UHD will use an interpolated value
# between these two settings, and will not exceed the encoded bitrate of the
# original video. This value is in kilobytes per second.
#
# PS_TRANSCODE_BITRATE_UHD="18000"


# ---------------------------------------------
# PS_TRANSCODE_FRAME_RATE or transcodeFrameRate
# ---------------------------------------------
#
# If set, transcoded videos will be bounded to this framerate. Videos that are
# lower than this framerate will retain their original (lower) framerate.
#
# Note that framerate reduction does not reduce the final transcoded video
# size linearly: it may only reduce file sizes by ~20% to go from 60 FPS to 30
# FPS.
#
# Unset this or set to 0 to disable bounded framerates.
#
# PS_TRANSCODE_FRAME_RATE=""


# ---------------------------------------
# PS_TRANSCODE_MAX_DIM or transcodeMaxDim
# ---------------------------------------
#
# If a video that needs transcoding exceeds this setting's value, the
# transcoded version will be downsampled such that the long side will equal
# this setting. A value of 1920 is good for 1080p, and 1280 would transcode to
# 720p resolution.
#
# Set this to 0 to disable this setting.
#
# PS_TRANSCODE_MAX_DIM="1920"


# -----------------------------------------------
# PS_TRANSCODE_TIMEOUT_BPS or transcodeTimeoutBps
# -----------------------------------------------
#
# PhotoStructure sets asset file processing timeouts to avoid getting "stuck"
# when importing problematic files. This setting is the expected worst-case
# for transcoding, in source video file bytes processed per second. Set this
# value to 0 to disable video transcode timeouts.
#
# PS_TRANSCODE_TIMEOUT_BPS="50000"


# --------------------------------------
# PS_TRANSCODE_VIDEOS or transcodeVideos
# --------------------------------------
#
# Should videos that are not in a browser-supported format be transcoded
# during import? Note that this is a plus-only feature. FFmpeg must be
# installed. Note that this *dramatically* slows down imports, and
# *dramatically* increases the disk space your library will need to use, but
# allows you to see videos that aren't directly supported by your browser. If
# this is set to false, your browser will only render videos directly
# supported by your OS.
#
# Aliases: "PS_TRANSCODE_VIDEO"
#
# PS_TRANSCODE_VIDEOS="true"



##############################################################################
#
# Settings for Library.volumes:
#

# ------------------------------------------------
# PS_READ_VOLUME_UUID_FILES or readVolumeUuidFiles
# ------------------------------------------------
#
# When true, PhotoStructure uses ".uuid" files found in the root directory of
# volumes as the volume universally unique identifier (UUID), which supports
# cross-host and cross-OS library portability. Set this to false if you don't
# want PhotoStructure to read these ".uuid" files.
#
# Note that "globally unique identifier," or "GUID," is synonymous with "UUID"
# in this case. Microsoft tends to use the term "GUID" instead of "UUID."
#
# See https://photostructure.com/faq/what-is-a-volume for more information.
#
# PS_READ_VOLUME_UUID_FILES="true"


# ------------------------------------------------
# PS_VOLUME_UUID_FILE_PATHS or volumeUuidFilePaths
# ------------------------------------------------
#
# PhotoStructure will append these paths to all mountpoints to look for
# previously-set volume universally unique identifiers (UUIDs). The first item
# in this list that exists will be used, and if "writeVolumeUuidFiles" is
# true, the first item in this list will be used to write the volume UUID
# (which will be the partition UUID, if available, or a random UUID if not
# available). Windows users should use a forward slash as a path separator.
#
# PS_VOLUME_UUID_FILE_PATHS="[\".uuid\",\"System Volume
# Information/IndexerVolumeGuid\"]"


# --------------------------------------------------
# PS_WRITE_VOLUME_UUID_FILES or writeVolumeUuidFiles
# --------------------------------------------------
#
# When true, PhotoStructure (tries to) write files with universally unique
# identifiers into the root directory of volumes, which enables cross-host
# library portability. Set this to false if you don't want PhotoStructure to
# try to write these ".uuid" files. See
# https://photostructure.com/faq/what-is-a-volume for more information.
#
# PS_WRITE_VOLUME_UUID_FILES="true"


# -------------------------------------------------------------------------------
# PS_WRITE_VOLUME_UUID_MOUNTPOINT_BLOCKLIST or
# writeVolumeUuidMountpointBlocklist
# -------------------------------------------------------------------------------
#
# Never try to write a volume UUID file to these directories.
#
# PS_WRITE_VOLUME_UUID_MOUNTPOINT_BLOCKLIST="[\"sshfs\",\"s3fs\"]"



##############################################################################
#
# Settings for Library.web:
#

# -----------------------------------------------
# PS_DEFAULT_HOMEPAGE_PATH or defaultHomepagePath
# -----------------------------------------------
#
# Should the /site.webmanifest send you to "/splash", or just directly to the
# home page, "/tag"?
#
# (IMHO /splash is more fun, but it slows down getting to the home page).
#
# Valid values: [
#   "/tag",
#   "/splash"
# ]
#
# PS_DEFAULT_HOMEPAGE_PATH="/tag"


# --------------------------------------------------
# PS_FAST_FORWARD_EMPTY_TAGS or fastForwardEmptyTags
# --------------------------------------------------
#
# When browsing tags in the UI, should tags that only have one child tag and
# no direct assets be skipped, or "fast-forwarded," over? See
# https://forum.photostructure.com/t/volume-id-shows-as-a-tag/754/5 for
# context.
#
# PS_FAST_FORWARD_EMPTY_TAGS="true"


# -------------------------------------
# PS_HIDDEN_HOME_TAGS or hiddenHomeTags
# -------------------------------------
#
# The given root tags will be omitted from the home page. (Valid values
# include "When", "Camera", "Lens", "Type", "Fs", and "Keyword").
#
# PS_HIDDEN_HOME_TAGS="[\"Type\"]"


# ----------------------------------------
# PS_LAZY_LOAD_EXTRA_VH or lazyLoadExtraVh
# ----------------------------------------
#
# PhotoStructure only loads photos as they come close to the viewport. This
# setting determines what "close to the viewport" means, and is measured in
# "vh" units, or percentage points of your visitor's browsers view height.
#
# The default is 50, so approximately the next 50% of the screen will be
# pre-loaded before the user scrolls.
#
# If you have fast hardware and fast network, you could try bumping this up to
# 200.
#
# If you have very slow network, you might want to set this to 0.
#
# PS_LAZY_LOAD_EXTRA_VH="50"


# ------------------------------------------
# PS_MIN_STREAM_CORR_PCT or minStreamCorrPct
# ------------------------------------------
#
# Streams (shown on the asset page) are coalesced when the dice coefficient of
# their contents are greater than this value. A value of 100 requires streams
# to match exactly. A value of ~50 allows streams with a couple differences to
# be considered the "same" stream.
#
# Minimum value: 1
# Maximum value: 100
#
# PS_MIN_STREAM_CORR_PCT="50"


# --------------------------------------------------
# PS_OPEN_GRAPH_TARGET_WIDTH or openGraphTargetWidth
# --------------------------------------------------
#
# When generating OpenGraph header metadata, include the preview image closest
# to this number of pixels wide.
#
# See https://forum.photostructure.com/t/image-thumbnail-in-link-preview/1950
# for details.
#
# PS_OPEN_GRAPH_TARGET_WIDTH="800"


# ------------------------------------------
# PS_PLACEHOLDER_THUMBS or placeholderThumbs
# ------------------------------------------
#
# Render missing asset previews as placeholder images (only useful for
# customer support).
#
# This setting is transient and only set via environment variables.
#
#
# PS_PLACEHOLDER_THUMBS="false"

