{"version":3,"file":"info.js","mappings":"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CA,CACE,QACA,MACA,MACA,OACA,MACA,OACA,MACA,KACA,YACA,QACA,WACA,SACA,SACA,MACA,MACA,MACA,MACA,YACA,MACA,QAEF,qBAGFA,EACE,OACA,CACE,OACA,SACA,MACA,SACA,KACA,OACA,MACA,MACA,OACA,OACA,MACA,UACA,cACA,OAEF,sBAIFA,EACE,UACA,CACE,iBACA,uBACA,WACA,wBACA,QACA,qBACA,sBACA,aACA,SACA,WACA,uBACA,YACA,QACA,MACA,gBACA,UACA,cACA,SACA,UACA,YACA,eACA,SACA,YACA,aACA,eACA,wBACA,wBACA,kBACA,gBACA,YACA,cACA,eACA,iBACA,yBACA,mBACA,YACA,eACA,sBACA,oBACA,UACA,WACA,wBACA,gBACA,mBACA,OACA,wBACA,aACA,MACA,eACA,cACA,UACA,QACA,aACA,aACA,WACA,aACA,mBACA,gBACA,gBACA,qBACA,mBACA,oBACA,MACA,SACA,OACA,kBACA,oBACA,UACA,mBACA,WACA,YACA,aACA,eACA,gBACA,WACA,iBACA,kBACA,eACA,OACA,qBACA,WACA,gBACA,gBACA,gBACA,oBACA,sBACA,oBACA,gBACA,UACA,cACA,qBACA,0BACA,eACA,OACA,oBACA,kBACA,cACA,yBACA,WACA,oBACA,wBACA,SACA,YACA,YACA,WACA,UACA,OACA,eACA,UACA,eACA,gBACA,wBACA,qBACA,UACA,WACA,WACA,SACA,SACA,aACA,YACA,yBACA,mBACA,eACA,eACA,sBACA,mBACA,kBACA,iBACA,MACA,YACA,gBACA,YACA,QACA,UACA,mBACA,oBACA,gBACA,gBACA,QACA,kBACA,YACA,UACA,OAEF,iBAIFA,EAAoB,WAAY,CAAC,QAAS,UAAW,iBAGrDA,EACE,SACA,CACE,MACA,KACA,OACA,UACA,MACA,UACA,OACA,WACA,MACA,WACA,QACA,QAEF,QAGFA,EACE,OACA,CAAC,QAAS,UAAW,UAAW,YAAa,OAC7C,QAEFA,EACE,MACA,CACE,aACA,MACA,MACA,MA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CAQxC,eAEA,mBACA,yBAEA,oBAEA,yBAEA,4IC3DW,EAAAH,2BAAiD,CAC5D,kBACA,iBACA,aACA,YACA,mBACA,cACA,eACA,UACA,OACA,QAEA,UACA,YACA,SACA,WAEA,iHCjBW,EAAAU,iBAAmB,CAC9B,YACA,QACA,QACA,aACA,SACA,OACA,WACA,QACA,aACA,QACA,OACA,QACA,SACA,QACA,UACA,WACA,QACA,QACA,SACA,UACA,SACA,QACA,UACA,SACA,YACA,WACA,SACA,QACA,aACA,UACA,OACA,UACA,UACA,QACA,QACA,QACA,UACA,OACA,SACA,SACA,SACA,SACA,SACA,QACA,cACA,OACA,UACA,QACA,WACA,qICnDF,iBACA,WACA,WACA,WACA,WAGA,SAAgBv/C,EAAmBlsG,GACjC,MAAO,CAACA,GAAGwyC,SAAUxyC,GAAG84D,SAAU94D,GAAG41J,cAAe51J,GAAG61J,eAAezoJ,KACpE,EAAA6D,IAEJ,CAJA,uBAMA,iBAAO1M,eACLw7H,GAEA,GAAkB,MAAdA,EAAoB,OACxB,MAAM/3E,EAAK,EAAArsC,UAAUC,IAAImkH,GACnB/J,QAAW,IAAApqB,cAAa5jD,GAC9B,OAAU,MAANguE,IAAe,IAAAroF,iBAAgBqoF,GAE5B9pB,QADS,IAAAV,aAAYxjD,GAAI,SADhC,CAGF,knBCvBA,eAQA,cACA,cACA,UACA,WACA,WACA,WACA,WAEA,WACA,WAWA,UACA,WACA,WACA,WACA,UACA,WACA,WAIA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEA,WAKA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEA,WACA,WACA,WACA,WAEA,WAGM/4C,IAAS,IAAAxH,OAAK,KAAM,IAAA4K,UAAS,mBAEnC,IAAIyjJ,IAAwB,EAE5B,gCAAqCvwJ,GACnCuwJ,GAAwBvwJ,CAC1B,EAEA,4BAAiCxF,GAG/B,OADA,EAAA+R,SAASs0I,sBAAsBtlH,SAAW/gC,EACnCg2J,IACT,EAYA,MAAMC,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,gBACA,gGAEDA,OACC,eACA,4DAEDA,OACC,sBACA,qHAEDA,OACC,cACA,qEAEDA,OACC,aACA,yFAEDA,OAAO,aAAc,mDACrBA,OACC,iBACA,6KAEDA,OACC,kBACA,4KACA,CAAC/tC,EAAK9O,IAASA,EAAKjM,OAAO,CAAC+a,KAC5B,IAED+tC,OACC,iBACA,8HAEDA,OACC,eACA,2GAEDA,OAAO,SAAU,sDACjBA,OACC,wBACA,0EAEDA,OACC,gBACA,yEAEDA,OACC,qBACA,kFAEDA,OACC,yBACA,uDAEDA,OACC,qBACA,4HAEDA,OACC,2BACA,gDAEDA,OAAO,WAAY,uCACnBA,OACC,aACA,sDAEDA,OAAO,gBAAiB,0BACxBA,OACC,UACA,kEAEDA,OAAO,YAAa,qCAEzBI,WAAY,WAEZ,yLCxFF,oBACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAIA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,WAMA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,WACA,WAMA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEA,YASA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,YACA,YA0XA,MAAOllD,iBACL,UAzXFA,iBACE,MAAMgL,EAAM,IAAI,EAAAylM,IACd,GAAA/2K,aAAav+B,KACb,YACA,CACE,kHACA,sDACA,iGACA,uDACA0a,KAAK,OAENzE,IAAI,GAAAo/L,SAAU,EAAAtqJ,iBAAkB,GAAAo2I,QAAS,EAAAh3I,WACzCjuD,QAEGoiB,EAAOzO,EAAIyO,OACXi3L,GAAY,IAAAv/L,MAAKnG,EAAIskB,MACrBw/J,GAAO,IAAAvnK,QAAO9N,EAAKq1K,MACnB6hB,GAAY,IAAAppL,QAAO9N,EAAK+D,OAExBiqI,GAAiB,IAAAlgI,QAAO9N,EAAKguI,gBAC/BA,IACF,EAAAl6I,SAASk6I,eAAelrH,UAAW,GAErC,MAAMm5D,E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","sources":["webpack://@photostructure/library/../core/node_modules/paseto/lib/errors.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/general/decode.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/general/index.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/apply_options.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/assert_payload.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/base64url.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/check_footer.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/check_payload.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/crypto_worker.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/is_object.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/le64.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/ms.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/pack.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/pae.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/parse_paseto_payload.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/random_bytes.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/sign.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/symmetric_key_check.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/timing_safe_equal.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/help/verify.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/index.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v1/decrypt.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v1/encrypt.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v1/index.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v1/key.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v1/sign.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v1/verify.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v2/index.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v2/key.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v2/sign.js","webpack://@photostructure/library/../core/node_modules/paseto/lib/v2/verify.js","webpack://@photostructure/library/../core/AppName.ts","webpack://@photostructure/library/../core/Array.ts","webpack://@photostructure/library/../core/BatchClusterObserver.ts","webpack://@photostructure/library/../core/BoundedList.ts","webpack://@photostructure/library/../core/Buffer.ts","webpack://@photostructure/library/../core/CaseInsensitiveMap.ts","webpack://@photostructure/library/../core/CaseInsensitiveValued.ts","webpack://@photostructure/library/../core/Chalk.ts","webpack://@photostructure/library/../core/CountingSet.ts","webpack://@photostructure/library/../core/DefaultSensitiveEnvRegexPattern.ts","webpack://@photostructure/library/../core/EditionName.ts","webpack://@photostructure/library/../core/Elapsed.ts","webpack://@photostructure/library/../core/EnvTokens.ts","webpack://@photostructure/library/../core/Eql.ts","webpack://@photostructure/library/../core/ExamplesDir.ts","webpack://@photostructure/library/../core/ExamplesNativePath.ts","webpack://@photostructure/library/../core/ExtensibleFunction.ts","webpack://@photostructure/library/../core/FifoCache.ts","webpack://@photostructure/library/../core/FifoCacheAsync.ts","webpack://@photostructure/library/../core/FifoSet.ts","webpack://@photostructure/library/../core/Fixed.ts","webpack://@photostructure/library/../core/GeoHash.ts","webpack://@photostructure/library/../core/Halt.ts","webpack://@photostructure/library/../core/HashBits.ts","webpack://@photostructure/library/../core/IsSuspended.ts","webpack://@photostructure/library/../core/JSON.ts","webpack://@photostructure/library/../core/Lazy.ts","webpack://@photostructure/library/../core/Locale.ts","webpack://@photostructure/library/../core/LogStartup.ts","webpack://@photostructure/library/../core/Logger.ts","webpack://@photostructure/library/../core/Map.ts","webpack://@photostructure/library/../core/MemoizedFunc.ts","webpack://@photostructure/library/../core/Memory.ts","webpack://@photostructure/library/../core/NoColor.ts","webpack://@photostructure/library/../core/NodeEnv.ts","webpack://@photostructure/library/../core/NodeVersion.ts","webpack://@photostructure/library/../core/Number.ts","webpack://@photostructure/library/../core/Object.ts","webpack://@photostructure/library/../core/OperatingSystem.ts","webpack://@photostructure/library/../core/PhotoStructureVersion.ts","webpack://@photostructure/library/../core/PhotoStructureVersions.ts","webpack://@photostructure/library/../core/Pid.ts","webpack://@photostructure/library/../core/Pids.ts","webpack://@photostructure/library/../core/PriorityClass.ts","webpack://@photostructure/library/../core/Ps.ts","webpack://@photostructure/library/../core/Random.ts","webpack://@photostructure/library/../core/RateLimited.ts","webpack://@photostructure/library/../core/RegExp.ts","webpack://@photostructure/library/../core/Renice.ts","webpack://@photostructure/library/../core/ServiceNames.ts","webpack://@photostructure/library/../core/Set.ts","webpack://@photostructure/library/../core/SetServiceName.ts","webpack://@photostructure/library/../core/Shim0.ts","webpack://@photostructure/library/../core/Shim1.ts","webpack://@photostructure/library/../core/ShortCommandTimeoutMs.ts","webpack://@photostructure/library/../core/SortedSet.ts","webpack://@photostructure/library/../core/StartTs.ts","webpack://@photostructure/library/../core/Stdout.ts","webpack://@photostructure/library/../core/StdoutEnded.ts","webpack://@photostructure/library/../core/StdoutWrite.ts","webpack://@photostructure/library/../core/String.ts","webpack://@photostructure/library/../core/StringCase.ts","webpack://@photostructure/library/../core/StringHash.ts","webpack://@photostructure/library/../core/StringNormalizer.ts","webpack://@photostructure/library/../core/StringSimilarity.ts","webpack://@photostructure/library/../core/StringifySorted.ts","webpack://@photostructure/library/../core/TTLMap.ts","webpack://@photostructure/library/../core/TTLSet.ts","webpack://@photostructure/library/../core/TestLibraryDirPrefix.ts","webpack://@photostructure/library/../core/UID.ts","webpack://@photostructure/library/../core/UserInfo.ts","webpack://@photostructure/library/../core/Ver.ts","webpack://@photostructure/library/../core/Version.ts","webpack://@photostructure/library/../core/WeakCache.ts","webpack://@photostructure/library/../core/WinDate.ts","webpack://@photostructure/library/../core/asset-file/AssetFileAggregator.ts","webpack://@photostructure/library/../core/asset-file/AssetFileComparator.ts","webpack://@photostructure/library/../core/asset-file/AssetFileFactory.ts","webpack://@photostructure/library/../core/asset-file/AssetFileSorter.ts","webpack://@photostructure/library/../core/asset-file/IAssetFile.ts","webpack://@photostructure/library/../core/async/AbortError.ts","webpack://@photostructure/library/../core/async/Debounce.ts","webpack://@photostructure/library/../core/async/Deferred.ts","webpack://@photostructure/library/../core/async/Endable.ts","webpack://@photostructure/library/../core/async/EndableInterval.ts","webpack://@photostructure/library/../core/async/EndableWrapper.ts","webpack://@photostructure/library/../core/async/Exit.ts","webpack://@photostructure/library/../core/async/Later.ts","webpack://@photostructure/library/../core/async/LazyAsync.ts","webpack://@photostructure/library/../core/async/MemoizedAsyncFunc.ts","webpack://@photostructure/library/../core/async/OneAtATime.ts","webpack://@photostructure/library/../core/async/Postrun.ts","webpack://@photostructure/library/../core/async/Promise.ts","webpack://@photostructure/library/../core/async/PromiseTimer.ts","webpack://@photostructure/library/../core/async/Promises.ts","webpack://@photostructure/library/../core/async/SerialLaterQueue.ts","webpack://@photostructure/library/../core/async/ThenOrTimeout.ts","webpack://@photostructure/library/../core/async/TimeoutHandler.ts","webpack://@photostructure/library/../core/async/Timers.ts","webpack://@photostructure/library/../core/async/until.ts","webpack://@photostructure/library/../core/child/ChildEnv.ts","webpack://@photostructure/library/../core/child/ChildProcess.ts","webpack://@photostructure/library/../core/child/WatchedChild.ts","webpack://@photostructure/library/../core/ciSafePath.ts","webpack://@photostructure/library/../core/cli/CLI.ts","webpack://@photostructure/library/../core/cli/CliConstants.ts","webpack://@photostructure/library/../core/cli/CliWrap.ts","webpack://@photostructure/library/../core/cli/ColorArgs.ts","webpack://@photostructure/library/../core/cli/DescriptionFooter.ts","webpack://@photostructure/library/../core/cli/IsDaemon.ts","webpack://@photostructure/library/../core/cli/VerifyUidGid.ts","webpack://@photostructure/library/../core/cli/WriteSettingsArg.ts","webpack://@photostructure/library/../core/color/ColorNames.ts","webpack://@photostructure/library/../core/color/Colorspace.ts","webpack://@photostructure/library/../core/color/CrayonColors.ts","webpack://@photostructure/library/../core/color/DarkWikipediaColors.ts","webpack://@photostructure/library/../core/color/DeltaE.ts","webpack://@photostructure/library/../core/color/DominantColor.ts","webpack://@photostructure/library/../core/color/DominantColorCorrelation.ts","webpack://@photostructure/library/../core/color/DominantColors.ts","webpack://@photostructure/library/../core/color/Greys.ts","webpack://@photostructure/library/../core/color/Lab.ts","webpack://@photostructure/library/../core/color/LightWikipediaColors.ts","webpack://@photostructure/library/../core/color/ModeBits.ts","webpack://@photostructure/library/../core/color/ModeCount.ts","webpack://@photostructure/library/../core/color/ModeData.ts","webpack://@photostructure/library/../core/color/RGB.ts","webpack://@photostructure/library/../core/date/Date.ts","webpack://@photostructure/library/../core/date/DateInterval.ts","webpack://@photostructure/library/../core/date/Dated.ts","webpack://@photostructure/library/../core/date/DatedToMillis.ts","webpack://@photostructure/library/../core/date/DefaultDateTimeFormats.ts","webpack://@photostructure/library/../core/date/DurationCodec.ts","webpack://@photostructure/library/../core/date/DurationFormat.ts","webpack://@photostructure/library/../core/date/ExifDateTime.ts","webpack://@photostructure/library/../core/date/ExtendedDate.ts","webpack://@photostructure/library/../core/date/Filestamp.ts","webpack://@photostructure/library/../core/date/FuzzyDate.ts","webpack://@photostructure/library/../core/date/FuzzyDateParser.ts","webpack://@photostructure/library/../core/date/GetDateField.ts","webpack://@photostructure/library/../core/date/HasTime.ts","webpack://@photostructure/library/../core/date/IsDateTime.ts","webpack://@photostructure/library/../core/date/Localtime.ts","webpack://@photostructure/library/../core/date/Month.ts","webpack://@photostructure/library/../core/date/Timezone.ts","webpack://@photostructure/library/../core/date/ValidDate.ts","webpack://@photostructure/library/../core/date/getZoneName.ts","webpack://@photostructure/library/../core/db/AutoVacuumModes.ts","webpack://@photostructure/library/../core/db/CacheDbDir.ts","webpack://@photostructure/library/../core/db/CheckLocalDbReplica.ts","webpack://@photostructure/library/../core/db/CheckpointTypes.ts","webpack://@photostructure/library/../core/db/DbBackupCold.ts","webpack://@photostructure/library/../core/db/DbRetries.ts","webpack://@photostructure/library/../core/db/MkDb.ts","webpack://@photostructure/library/../core/db/RepairModes.ts","webpack://@photostructure/library/../core/db/SQLiteFiles.ts","webpack://@photostructure/library/../core/db/SQLiteReadWrite.ts","webpack://@photostructure/library/../core/db/SQLiteSuffixes.ts","webpack://@photostructure/library/../core/db/SQLiteVersion.ts","webpack://@photostructure/library/../core/db/Schemas.ts","webpack://@photostructure/library/../core/db/SynchronousModes.ts","webpack://@photostructure/library/../core/dir/CacheDir.ts","webpack://@photostructure/library/../core/dir/ConfigDir.ts","webpack://@photostructure/library/../core/dir/DefaultApplePhotosLibrary.ts","webpack://@photostructure/library/../core/dir/DefaultDockerLibraryDir.ts","webpack://@photostructure/library/../core/dir/DefaultLibraryDir.ts","webpack://@photostructure/library/../core/dir/DesktopConfigDir.ts","webpack://@photostructure/library/../core/dir/EnvConfigDir.ts","webpack://@photostructure/library/../core/dir/FirstDir.ts","webpack://@photostructure/library/../core/dir/HomeDir.ts","webpack://@photostructure/library/../core/dir/InHiddenPhotoStructureDir.ts","webpack://@photostructure/library/../core/dir/IsLibraryDir.ts","webpack://@photostructure/library/../core/dir/LibraryDir.ts","webpack://@photostructure/library/../core/dir/LibraryDirs.ts","webpack://@photostructure/library/../core/dir/LogDir.ts","webpack://@photostructure/library/../core/dir/PicturesDir.ts","webpack://@photostructure/library/../core/env/DevEnvFlags.ts","webpack://@photostructure/library/../core/env/Env.ts","webpack://@photostructure/library/../core/env/EnvKeys.ts","webpack://@photostructure/library/../core/env/EnvName.ts","webpack://@photostructure/library/../core/env/GetEnv.ts","webpack://@photostructure/library/../core/error/Error.ts","webpack://@photostructure/library/../core/error/ErrorCodes.ts","webpack://@photostructure/library/../core/error/ErrorFlags.ts","webpack://@photostructure/library/../core/error/ErrorTypes.ts","webpack://@photostructure/library/../core/error/InternalError.ts","webpack://@photostructure/library/../core/error/OnError.ts","webpack://@photostructure/library/../core/error/WrappedError.ts","webpack://@photostructure/library/../core/error/stack.ts","webpack://@photostructure/library/../core/event/BroadcastEvent.ts","webpack://@photostructure/library/../core/event/CapturingEventEmitter.ts","webpack://@photostructure/library/../core/event/DefaultSharedStateDir.ts","webpack://@photostructure/library/../core/event/EventEmitter.ts","webpack://@photostructure/library/../core/event/IsSyncing.ts","webpack://@photostructure/library/../core/event/PhotoStructureEvents.ts","webpack://@photostructure/library/../core/event/SharedState.ts","webpack://@photostructure/library/../core/event/TaskProcessor.ts","webpack://@photostructure/library/../core/event/UpdateReadyToInstall.ts","webpack://@photostructure/library/../core/fs/Access.ts","webpack://@photostructure/library/../core/fs/ActualPath.ts","webpack://@photostructure/library/../core/fs/Ancestors.ts","webpack://@photostructure/library/../core/fs/BaseFile.ts","webpack://@photostructure/library/../core/fs/BaseFilePredicates.ts","webpack://@photostructure/library/../core/fs/CRLF.ts","webpack://@photostructure/library/../core/fs/CachedirTag.ts","webpack://@photostructure/library/../core/fs/DefaultPaths.ts","webpack://@photostructure/library/../core/fs/DirWatcher.ts","webpack://@photostructure/library/../core/fs/DirectoryEntry.ts","webpack://@photostructure/library/../core/fs/EnsureNew.ts","webpack://@photostructure/library/../core/fs/Excluded.ts","webpack://@photostructure/library/../core/fs/FileCache.ts","webpack://@photostructure/library/../core/fs/FileCleanup.ts","webpack://@photostructure/library/../core/fs/FileExt.ts","webpack://@photostructure/library/../core/fs/FileStats.ts","webpack://@photostructure/library/../core/fs/FileType.ts","webpack://@photostructure/library/../core/fs/FsAdvisoryLocks.ts","webpack://@photostructure/library/../core/fs/FsLock.ts","webpack://@photostructure/library/../core/fs/FsLockDir.ts","webpack://@photostructure/library/../core/fs/FsWatcher.ts","webpack://@photostructure/library/../core/fs/FuzzyNames.ts","webpack://@photostructure/library/../core/fs/GrepReader.ts","webpack://@photostructure/library/../core/fs/Gzip.ts","webpack://@photostructure/library/../core/fs/Hash.ts","webpack://@photostructure/library/../core/fs/Hidden.ts","webpack://@photostructure/library/../core/fs/IgnorableMountpoint.ts","webpack://@photostructure/library/../core/fs/JpegExts.ts","webpack://@photostructure/library/../core/fs/JsonFileStore.ts","webpack://@photostructure/library/../core/fs/LineReader.ts","webpack://@photostructure/library/../core/fs/MkNoMedia.ts","webpack://@photostructure/library/../core/fs/NoMedia.ts","webpack://@photostructure/library/../core/fs/Path.ts","webpack://@photostructure/library/../core/fs/PathTo.ts","webpack://@photostructure/library/../core/fs/PosixFile.ts","webpack://@photostructure/library/../core/fs/PosixFileFilters.ts","webpack://@photostructure/library/../core/fs/PosixNative.ts","webpack://@photostructure/library/../core/fs/ProjectPath.ts","webpack://@photostructure/library/../core/fs/ReadFile.ts","webpack://@photostructure/library/../core/fs/ReadFilePart.ts","webpack://@photostructure/library/../core/fs/ReadLines.ts","webpack://@photostructure/library/../core/fs/ReadableBuffer.ts","webpack://@photostructure/library/../core/fs/Readdir.ts","webpack://@photostructure/library/../core/fs/SeemsLikeSymlinkLoop.ts","webpack://@photostructure/library/../core/fs/SimpleDirent.ts","webpack://@photostructure/library/../core/fs/SimpleFile.ts","webpack://@photostructure/library/../core/fs/Stat.ts","webpack://@photostructure/library/../core/fs/StatSync.ts","webpack://@photostructure/library/../core/fs/StatTimeout.ts","webpack://@photostructure/library/../core/fs/StreamChunker.ts","webpack://@photostructure/library/../core/fs/StreamEnded.ts","webpack://@photostructure/library/../core/fs/Streams.ts","webpack://@photostructure/library/../core/fs/SyncReport.ts","webpack://@photostructure/library/../core/fs/Tools.ts","webpack://@photostructure/library/../core/fs/Touch.ts","webpack://@photostructure/library/../core/fs/UIDStore.ts","webpack://@photostructure/library/../core/fs/Unlink.ts","webpack://@photostructure/library/../core/fs/WIP.ts","webpack://@photostructure/library/../core/fs/WritableToBuffer.ts","webpack://@photostructure/library/../core/fs/WriteFile.ts","webpack://@photostructure/library/../core/fs/zcat.ts","webpack://@photostructure/library/../core/health/ExiftoolHealthCheck.ts","webpack://@photostructure/library/../core/health/ExternalDirsHealthCheck.ts","webpack://@photostructure/library/../core/health/HealthCheck.ts","webpack://@photostructure/library/../core/health/HealthCheckIds.ts","webpack://@photostructure/library/../core/health/HealthCheckSetup.ts","webpack://@photostructure/library/../core/health/HeifHealthCheck.ts","webpack://@photostructure/library/../core/health/LibraryAdminLinks.ts","webpack://@photostructure/library/../core/health/LibraryDirectoriesCheck.ts","webpack://@photostructure/library/../core/health/LibraryFreeSpaceCheck.ts","webpack://@photostructure/library/../core/health/MemoryHealthCheck.ts","webpack://@photostructure/library/../core/health/NodeHealthCheck.ts","webpack://@photostructure/library/../core/health/NotInDMGHealthCheck.ts","webpack://@photostructure/library/../core/health/PowerShellHealthCheck.ts","webpack://@photostructure/library/../core/health/SQLiteVersionHealthCheck.ts","webpack://@photostructure/library/../core/health/SecurityHealthCheck.ts","webpack://@photostructure/library/../core/health/SettingsEnvHealthCheck.ts","webpack://@photostructure/library/../core/health/SettingsLibraryHealthCheck.ts","webpack://@photostructure/library/../core/health/SettingsSystemHealthCheck.ts","webpack://@photostructure/library/../core/health/SystemLoadHealthCheck.ts","webpack://@photostructure/library/../core/health/VideoHealthCheck.ts","webpack://@photostructure/library/../core/health/VolumeHealthCheck.ts","webpack://@photostructure/library/../core/img/AssetPreviewBuilder.ts","webpack://@photostructure/library/../core/img/AssetPreviewInfo.ts","webpack://@photostructure/library/../core/img/AssetPreviews.ts","webpack://@photostructure/library/../core/img/CropStrategies.ts","webpack://@photostructure/library/../core/img/DCTHash.ts","webpack://@photostructure/library/../core/img/Dimensions.ts","webpack://@photostructure/library/../core/img/FileDimensions.ts","webpack://@photostructure/library/../core/img/FitSizes.ts","webpack://@photostructure/library/../core/img/Heif.ts","webpack://@photostructure/library/../core/img/HeifConvert.ts","webpack://@photostructure/library/../core/img/HeifFilter.ts","webpack://@photostructure/library/../core/img/ImageCache.ts","webpack://@photostructure/library/../core/img/ImageHash.ts","webpack://@photostructure/library/../core/img/ImageHashComparison.ts","webpack://@photostructure/library/../core/img/ImageSize.ts","webpack://@photostructure/library/../core/img/IncludePreviewTags.ts","webpack://@photostructure/library/../core/img/MeanDiffHash.ts","webpack://@photostructure/library/../core/img/Previews.ts","webpack://@photostructure/library/../core/img/Ratio.ts","webpack://@photostructure/library/../core/img/RawInfo.ts","webpack://@photostructure/library/../core/img/Reducers.ts","webpack://@photostructure/library/../core/img/Sharp.ts","webpack://@photostructure/library/../core/img/SharpFailOn.ts","webpack://@photostructure/library/../core/img/SharpReadable.ts","webpack://@photostructure/library/../core/img/SyncFileTimeout.ts","webpack://@photostructure/library/../core/img/ValidFile.ts","webpack://@photostructure/library/../core/img/ValidationErrors.ts","webpack://@photostructure/library/../core/img/Video.ts","webpack://@photostructure/library/../core/img/ffmpeg.ts","webpack://@photostructure/library/../core/img/jpegtran.ts","webpack://@photostructure/library/../core/img/libraw.ts","webpack://@photostructure/library/../core/img/sips.ts","webpack://@photostructure/library/../core/img/vlc.ts","webpack://@photostructure/library/../core/licensing/BrotliDecode.ts","webpack://@photostructure/library/../core/licensing/L.ts","webpack://@photostructure/library/../core/licensing/Licensing.ts","webpack://@photostructure/library/../core/licensing/Paseto.ts","webpack://@photostructure/library/../core/licensing/SystemIdSchemes.ts","webpack://@photostructure/library/../core/licensing/SystemIds.ts","webpack://@photostructure/library/../core/licensing/UserTimeoutMs.ts","webpack://@photostructure/library/../core/log/ColoredLogFormatter.ts","webpack://@photostructure/library/../core/log/ConsoleLogger.ts","webpack://@photostructure/library/../core/log/ContextualLogger.ts","webpack://@photostructure/library/../core/log/CurrentFileLogger.ts","webpack://@photostructure/library/../core/log/DefaultLogFormatter.ts","webpack://@photostructure/library/../core/log/GelfLogFormatter.ts","webpack://@photostructure/library/../core/log/LogBroadcaster.ts","webpack://@photostructure/library/../core/log/LogCommon.ts","webpack://@photostructure/library/../core/log/LogDir.ts","webpack://@photostructure/library/../core/log/LogDirCleanup.ts","webpack://@photostructure/library/../core/log/LogEntry.ts","webpack://@photostructure/library/../core/log/LogFilter.ts","webpack://@photostructure/library/../core/log/LogFilterImpl.ts","webpack://@photostructure/library/../core/log/LogLevel.ts","webpack://@photostructure/library/../core/log/LogMeta.ts","webpack://@photostructure/library/../core/log/LogTail.ts","webpack://@photostructure/library/../core/log/LogTailEntries.ts","webpack://@photostructure/library/../core/log/LogWriter.ts","webpack://@photostructure/library/../core/log/PlaintextLogFormatter.ts","webpack://@photostructure/library/../core/log/ReadLogEntries.ts","webpack://@photostructure/library/../core/log/RecentLogs.ts","webpack://@photostructure/library/../core/log/SetupLogger.ts","webpack://@photostructure/library/../core/math/Average.ts","webpack://@photostructure/library/../core/math/Bits.ts","webpack://@photostructure/library/../core/math/Kmeans.ts","webpack://@photostructure/library/../core/math/Lerp.ts","webpack://@photostructure/library/../core/math/Matrix.ts","webpack://@photostructure/library/../core/math/PRNG.ts","webpack://@photostructure/library/../core/math/Radix.ts","webpack://@photostructure/library/../core/math/Rate.ts","webpack://@photostructure/library/../core/math/SquareMatrix.ts","webpack://@photostructure/library/../core/math/UUID.ts","webpack://@photostructure/library/../core/math/Vector.ts","webpack://@photostructure/library/../core/math/b64.ts","webpack://@photostructure/library/../core/net/Hostname.ts","webpack://@photostructure/library/../core/net/ip.ts","webpack://@photostructure/library/../core/net/nslookup.ts","webpack://@photostructure/library/../core/net/ping.ts","webpack://@photostructure/library/../core/platform/IsPacked.ts","webpack://@photostructure/library/../core/platform/Platform.ts","webpack://@photostructure/library/../core/platform/isDocker.ts","webpack://@photostructure/library/../core/platform/isRaspberryPi.ts","webpack://@photostructure/library/../core/predicates/PredicateNames.ts","webpack://@photostructure/library/../core/predicates/Predicates.ts","webpack://@photostructure/library/../core/predicates/SyncPredicates.ts","webpack://@photostructure/library/../core/progress/ProgressEvt.ts","webpack://@photostructure/library/../core/progress/ProgressObserver.ts","webpack://@photostructure/library/../core/progress/PullProgressObserver.ts","webpack://@photostructure/library/../core/progress/PushProgressObserver.ts","webpack://@photostructure/library/../core/pwsh/PowerShell.ts","webpack://@photostructure/library/../core/settings/AggregateTypes.ts","webpack://@photostructure/library/../core/settings/AssetFileSortCriteria.ts","webpack://@photostructure/library/../core/settings/BooleanSetting.ts","webpack://@photostructure/library/../core/settings/BoundedFloatSetting.ts","webpack://@photostructure/library/../core/settings/BoundedIntegerSetting.ts","webpack://@photostructure/library/../core/settings/ColorDistanceFunctions.ts","webpack://@photostructure/library/../core/settings/DominantColorKmeansRunsDefault.ts","webpack://@photostructure/library/../core/settings/DominantColorPixelsDefault.ts","webpack://@photostructure/library/../core/settings/DurationSetting.ts","webpack://@photostructure/library/../core/settings/FloatSetting.ts","webpack://@photostructure/library/../core/settings/ForceContext.ts","webpack://@photostructure/library/../core/settings/IntegerSetting.ts","webpack://@photostructure/library/../core/settings/MetaSettings.ts","webpack://@photostructure/library/../core/settings/OptionalFileSetting.ts","webpack://@photostructure/library/../core/settings/OptionalFloatSetting.ts","webpack://@photostructure/library/../core/settings/OptionalIntegerSetting.ts","webpack://@photostructure/library/../core/settings/OptionalStringSetting.ts","webpack://@photostructure/library/../core/settings/PathToLibraryAsset.ts","webpack://@photostructure/library/../core/settings/PsEnvNames.ts","webpack://@photostructure/library/../core/settings/Setting.ts","webpack://@photostructure/library/../core/settings/Settings.ts","webpack://@photostructure/library/../core/settings/SettingsDefaults.ts","webpack://@photostructure/library/../core/settings/SettingsIO.ts","webpack://@photostructure/library/../core/settings/SettingsToml.ts","webpack://@photostructure/library/../core/settings/StringArraySetting.ts","webpack://@photostructure/library/../core/settings/StringEnumSetting.ts","webpack://@photostructure/library/../core/settings/StringEnumsSetting.ts","webpack://@photostructure/library/../core/settings/StringSetting.ts","webpack://@photostructure/library/../core/settings/SystemSettings.ts","webpack://@photostructure/library/../core/settings/TagInferenceSettingValues.ts","webpack://@photostructure/library/../core/settings/Toml.ts","webpack://@photostructure/library/../core/settings/TomlStringify.ts","webpack://@photostructure/library/../core/settings/UpgradeChannels.ts","webpack://@photostructure/library/../core/settings/ValueToS.ts","webpack://@photostructure/library/../core/settings/VerifyPsEnvSettings.ts","webpack://@photostructure/library/../core/settings/WrapComments.ts","webpack://@photostructure/library/../core/tags/Bitrate.ts","webpack://@photostructure/library/../core/tags/Bname.ts","webpack://@photostructure/library/../core/tags/CapturedAt.ts","webpack://@photostructure/library/../core/tags/DateTagFormats.ts","webpack://@photostructure/library/../core/tags/DefaultCapturedAtTags.ts","webpack://@photostructure/library/../core/tags/DefaultIncludedPreviewTags.ts","webpack://@photostructure/library/../core/tags/DefaultLensMakes.ts","webpack://@photostructure/library/../core/tags/Duration.ts","webpack://@photostructure/library/../core/tags/ExifTool.ts","webpack://@photostructure/library/../core/tags/ExifUid.ts","webpack://@photostructure/library/../core/tags/ExifUnset.ts","webpack://@photostructure/library/../core/tags/ExposureSettings.ts","webpack://@photostructure/library/../core/tags/ExtType.ts","webpack://@photostructure/library/../core/tags/FileTypes.ts","webpack://@photostructure/library/../core/tags/History.ts","webpack://@photostructure/library/../core/tags/InferTimezone.ts","webpack://@photostructure/library/../core/tags/JsonSidecar.ts","webpack://@photostructure/library/../core/tags/KeywordReparentingStrategies.ts","webpack://@photostructure/library/../core/tags/KeywordTags.ts","webpack://@photostructure/library/../core/tags/LensMakeModel.ts","webpack://@photostructure/library/../core/tags/MakeModel.ts","webpack://@photostructure/library/../core/tags/MergedTags.ts","webpack://@photostructure/library/../core/tags/MimeTypes.ts","webpack://@photostructure/library/../core/tags/NameTagFormats.ts","webpack://@photostructure/library/../core/tags/NameTagOrders.ts","webpack://@photostructure/library/../core/tags/Names.ts","webpack://@photostructure/library/../core/tags/Orientation.ts","webpack://@photostructure/library/../core/tags/Rating.ts","webpack://@photostructure/library/../core/tags/ReadMimeType.ts","webpack://@photostructure/library/../core/tags/Sidecars.ts","webpack://@photostructure/library/../core/tags/SizeInfo.ts","webpack://@photostructure/library/../core/tags/TagInference.ts","webpack://@photostructure/library/../core/tags/TagPaths.ts","webpack://@photostructure/library/../core/tags/TitleDescription.ts","webpack://@photostructure/library/../core/uri/FileURI.ts","webpack://@photostructure/library/../core/uri/URI.ts","webpack://@photostructure/library/../core/uri/UriNormalization.ts","webpack://@photostructure/library/../core/uri/psfile.ts","webpack://@photostructure/library/../core/uri/pslib.ts","webpack://@photostructure/library/../core/uri/psnet.ts","webpack://@photostructure/library/../core/uri/volsha.ts","webpack://@photostructure/library/../core/volumes/AssetMountpoint.ts","webpack://@photostructure/library/../core/volumes/CurrentVolumes.ts","webpack://@photostructure/library/../core/volumes/DefaultExcludedLinuxRoots.ts","webpack://@photostructure/library/../core/volumes/DefaultIgnorableFilesystemTypes.ts","webpack://@photostructure/library/../core/volumes/DfPosix.ts","webpack://@photostructure/library/../core/volumes/DfPosixRaw.ts","webpack://@photostructure/library/../core/volumes/DfWin.ts","webpack://@photostructure/library/../core/volumes/Gio.ts","webpack://@photostructure/library/../core/volumes/LazyFsAsync.ts","webpack://@photostructure/library/../core/volumes/LocalVolumesLinux.ts","webpack://@photostructure/library/../core/volumes/LocalVolumesMac.ts","webpack://@photostructure/library/../core/volumes/Mountpoints.ts","webpack://@photostructure/library/../core/volumes/MountpointsPosix.ts","webpack://@photostructure/library/../core/volumes/MountpointsWin.ts","webpack://@photostructure/library/../core/volumes/PosixVolumes.ts","webpack://@photostructure/library/../core/volumes/RemoteVolumesPosix.ts","webpack://@photostructure/library/../core/volumes/RemoteVolumesWin.ts","webpack://@photostructure/library/../core/volumes/VolumeTtls.ts","webpack://@photostructure/library/../core/volumes/VolumeUUID.ts","webpack://@photostructure/library/../core/volumes/Volumes.ts","webpack://@photostructure/library/../core/volumes/WriteVolumeUuid.ts","webpack://@photostructure/library/../core/web/HelmetPlugins.ts","webpack://@photostructure/library/../core/web/UriToTagPath.ts","webpack://@photostructure/library/../core/web/WebUrls.ts","webpack://@photostructure/library/../core/words/Cuss.ts","webpack://@photostructure/library/../core/words/Leet.ts","webpack://@photostructure/library/../core/work/CpuInfo.ts","webpack://@photostructure/library/../core/work/CpuUsage.ts","webpack://@photostructure/library/../core/work/FreeMem.ts","webpack://@photostructure/library/../core/work/IsPaused.ts","webpack://@photostructure/library/../core/work/MaxCpus.ts","webpack://@photostructure/library/../core/work/WorkTimeout.ts","webpack://@photostructure/library/../fe/Array.ts","webpack://@photostructure/library/../fe/ArrayCopy.ts","webpack://@photostructure/library/../fe/ArraySort.ts","webpack://@photostructure/library/../fe/AsPromise.ts","webpack://@photostructure/library/../fe/AssetUrls.ts","webpack://@photostructure/library/../fe/AsyncRetry.ts","webpack://@photostructure/library/../fe/At.ts","webpack://@photostructure/library/../fe/BabyMarkdown.ts","webpack://@photostructure/library/../fe/Blank.ts","webpack://@photostructure/library/../fe/Boolean.ts","webpack://@photostructure/library/../fe/Clone.ts","webpack://@photostructure/library/../fe/Date.ts","webpack://@photostructure/library/../fe/DeepEql.ts","webpack://@photostructure/library/../fe/Defer.ts","webpack://@photostructure/library/../fe/Delay.ts","webpack://@photostructure/library/../fe/Dimensions.ts","webpack://@photostructure/library/../fe/Eql.ts","webpack://@photostructure/library/../fe/Error.ts","webpack://@photostructure/library/../fe/Fit.ts","webpack://@photostructure/library/../fe/Flatten.ts","webpack://@photostructure/library/../fe/FmtDuration.ts","webpack://@photostructure/library/../fe/FmtList.ts","webpack://@photostructure/library/../fe/HealthChecks.ts","webpack://@photostructure/library/../fe/ImageReducers.ts","webpack://@photostructure/library/../fe/ImageSizes.ts","webpack://@photostructure/library/../fe/Iterable.ts","webpack://@photostructure/library/../fe/JSON.ts","webpack://@photostructure/library/../fe/Latch.ts","webpack://@photostructure/library/../fe/Lazy.ts","webpack://@photostructure/library/../fe/Map.ts","webpack://@photostructure/library/../fe/Maybe.ts","webpack://@photostructure/library/../fe/MultiMap.ts","webpack://@photostructure/library/../fe/NodeOrBrowser.ts","webpack://@photostructure/library/../fe/Number.ts","webpack://@photostructure/library/../fe/Object.ts","webpack://@photostructure/library/../fe/Opt.ts","webpack://@photostructure/library/../fe/PRNG.ts","webpack://@photostructure/library/../fe/Pad.ts","webpack://@photostructure/library/../fe/ParseMaybe.ts","webpack://@photostructure/library/../fe/Pluralize.ts","webpack://@photostructure/library/../fe/Primitive.ts","webpack://@photostructure/library/../fe/Promise.ts","webpack://@photostructure/library/../fe/PromiseState.ts","webpack://@photostructure/library/../fe/Random.ts","webpack://@photostructure/library/../fe/RegExp.ts","webpack://@photostructure/library/../fe/Rotation.ts","webpack://@photostructure/library/../fe/RunStateEnum.ts","webpack://@photostructure/library/../fe/ServiceNames.ts","webpack://@photostructure/library/../fe/SplitFirst.ts","webpack://@photostructure/library/../fe/StrEnum.ts","webpack://@photostructure/library/../fe/String.ts","webpack://@photostructure/library/../fe/ThenOrTimeout.ts","webpack://@photostructure/library/../fe/Thunk.ts","webpack://@photostructure/library/../fe/TimeoutError.ts","webpack://@photostructure/library/../fe/URI.ts","webpack://@photostructure/library/../fe/URLSearchParams.ts","webpack://@photostructure/library/../fe/Units.ts","webpack://@photostructure/library/../fe/UnreachableCaseError.ts","webpack://@photostructure/library/../fe/UnrefTimeout.ts","webpack://@photostructure/library/../fe/UserAgent.ts","webpack://@photostructure/library/../fe/UserAgents.ts","webpack://@photostructure/library/../fe/api/ID.ts","webpack://@photostructure/library/../fe/api/Subscriptions.ts","webpack://@photostructure/library/../fe/api/Tag.ts","webpack://@photostructure/library/../fe/app/FullPaths.ts","webpack://@photostructure/library/../fe/isError.ts","webpack://@photostructure/library/../fe/isFunction.ts","webpack://@photostructure/library/../fe/toA.ts","webpack://@photostructure/library/../fe/toErr.ts","webpack://@photostructure/library/../fe/toS.ts","webpack://@photostructure/library/./Cleanup.ts","webpack://@photostructure/library/./Library.ts","webpack://@photostructure/library/./LibraryFileFilters.ts","webpack://@photostructure/library/./SetVolumesTTL.ts","webpack://@photostructure/library/./StatsDbDir.ts","webpack://@photostructure/library/./SuggestedLibraryDir.ts","webpack://@photostructure/library/./SystemInfo.ts","webpack://@photostructure/library/./cli/LogArgs.ts","webpack://@photostructure/library/./curators/AlbumTagger.ts","webpack://@photostructure/library/./curators/AssetTagger.ts","webpack://@photostructure/library/./curators/CameraTagger.ts","webpack://@photostructure/library/./curators/DateTagger.ts","webpack://@photostructure/library/./curators/FilePathTagger.ts","webpack://@photostructure/library/./curators/KeywordTagger.ts","webpack://@photostructure/library/./curators/LensTagger.ts","webpack://@photostructure/library/./curators/Taggers.ts","webpack://@photostructure/library/./curators/TypeTagger.ts","webpack://@photostructure/library/./curators/WhoTagger.ts","webpack://@photostructure/library/./db/Db.ts","webpack://@photostructure/library/./db/DbModelJanitor.ts","webpack://@photostructure/library/./db/DbModelSetup.ts","webpack://@photostructure/library/./db/DbRequest.ts","webpack://@photostructure/library/./db/DbSchemaValid.ts","webpack://@photostructure/library/./db/DbSetupErrors.ts","webpack://@photostructure/library/./db/DbValued.ts","webpack://@photostructure/library/./db/DedupeTags.ts","webpack://@photostructure/library/./db/Knex.ts","webpack://@photostructure/library/./db/Migration.ts","webpack://@photostructure/library/./db/Migrations.ts","webpack://@photostructure/library/./db/SQLite.ts","webpack://@photostructure/library/./db/SqlQuery.ts","webpack://@photostructure/library/./db/TableInfo.ts","webpack://@photostructure/library/./db/WithDb.ts","webpack://@photostructure/library/./health/DbModelHealthCheck.ts","webpack://@photostructure/library/./health/LibraryHealthChecks.ts","webpack://@photostructure/library/./health/SyncHealthCheck.ts","webpack://@photostructure/library/./health/VolumeUuidHealthCheck.ts","webpack://@photostructure/library/./info.ts","webpack://@photostructure/library/./info/InfoArgs.ts","webpack://@photostructure/library/./info/InfoCLI.ts","webpack://@photostructure/library/./info/InfoImpl.ts","webpack://@photostructure/library/./model/Asset.ts","webpack://@photostructure/library/./model/AssetFile.ts","webpack://@photostructure/library/./model/AssetId.ts","webpack://@photostructure/library/./model/AssetRevision.ts","webpack://@photostructure/library/./model/AssetTag.ts","webpack://@photostructure/library/./model/ChangedTag.ts","webpack://@photostructure/library/./model/DateTagNormalizer.ts","webpack://@photostructure/library/./model/Heartbeat.ts","webpack://@photostructure/library/./model/MaintenanceTasks.ts","webpack://@photostructure/library/./model/Model.ts","webpack://@photostructure/library/./model/ModelDb.ts","webpack://@photostructure/library/./model/ModelJson.ts","webpack://@photostructure/library/./model/ModelOps.ts","webpack://@photostructure/library/./model/Operation.ts","webpack://@photostructure/library/./model/Progress.ts","webpack://@photostructure/library/./model/ProgressMeta.ts","webpack://@photostructure/library/./model/ShaBlocklist.ts","webpack://@photostructure/library/./model/Tag.ts","webpack://@photostructure/library/./model/TagFts.ts","webpack://@photostructure/library/./model/TaggedAssetStream.ts","webpack://@photostructure/library/./model/TimestampedModel.ts","webpack://@photostructure/library/./stats/StatsDb.ts","webpack://@photostructure/library/./stats/StatsDbJanitor.ts","webpack://@photostructure/library/./sync-file/AssetFileFinder.ts","webpack://@photostructure/library/./sync-file/AssetFileRepository.ts","webpack://@photostructure/library/./sync/PathsToSync.ts","webpack://@photostructure/library/./sync/SyncPaths.ts","webpack://@photostructure/library/./sync/UriPath.ts","webpack://@photostructure/library/./tag/TagFtsFns.ts","webpack://@photostructure/library/./tag/TagSql.ts","webpack://@photostructure/library/external commonjs \"@iarna/toml\"","webpack://@photostructure/library/external commonjs \"@parcel/watcher\"","webpack://@photostructure/library/external commonjs \"@photostructure/tz-lookup\"","webpack://@photostructure/library/external commonjs \"assert\"","webpack://@photostructure/library/external commonjs \"batch-cluster\"","webpack://@photostructure/library/external commonjs \"better-sqlite3\"","webpack://@photostructure/library/external commonjs \"commander\"","webpack://@photostructure/library/external commonjs \"events\"","webpack://@photostructure/library/external commonjs \"exiftool-vendored\"","webpack://@photostructure/library/external commonjs \"exiftool-vendored/dist/Timezones\"","webpack://@photostructure/library/external commonjs \"fast-xml-parser\"","webpack://@photostructure/library/external commonjs \"file-type\"","webpack://@photostructure/library/external commonjs \"fs-extra\"","webpack://@photostructure/library/external commonjs \"he\"","webpack://@photostructure/library/external commonjs \"knex\"","webpack://@photostructure/library/external commonjs \"luxon\"","webpack://@photostructure/library/external commonjs \"ml-kmeans\"","webpack://@photostructure/library/external commonjs \"papaparse\"","webpack://@photostructure/library/external commonjs \"picomatch\"","webpack://@photostructure/library/external commonjs \"platform-folders\"","webpack://@photostructure/library/external commonjs \"plist\"","webpack://@photostructure/library/external commonjs \"process\"","webpack://@photostructure/library/external commonjs \"punycode\"","webpack://@photostructure/library/external commonjs \"semver\"","webpack://@photostructure/library/external commonjs \"sharp\"","webpack://@photostructure/library/external commonjs \"trash\"","webpack://@photostructure/library/external commonjs \"type-detect\"","webpack://@photostructure/library/external commonjs \"util\"","webpack://@photostructure/library/external commonjs \"utimes\"","webpack://@photostructure/library/external node-commonjs \"child_process\"","webpack://@photostructure/library/external node-commonjs \"crypto\"","webpack://@photostructure/library/external node-commonjs \"dns\"","webpack://@photostructure/library/external node-commonjs \"fs\"","webpack://@photostructure/library/external node-commonjs \"fs/promises\"","webpack://@photostructure/library/external node-commonjs \"net\"","webpack://@photostructure/library/external node-commonjs \"node:fs/promises\"","webpack://@photostructure/library/external node-commonjs \"node:os\"","webpack://@photostructure/library/external node-commonjs \"node:path/posix\"","webpack://@photostructure/library/external node-commonjs \"node:process\"","webpack://@photostructure/library/external node-commonjs \"os\"","webpack://@photostructure/library/external node-commonjs \"path\"","webpack://@photostructure/library/external node-commonjs \"stream\"","webpack://@photostructure/library/external node-commonjs \"stream/promises\"","webpack://@photostructure/library/external node-commonjs \"timers\"","webpack://@photostructure/library/external node-commonjs \"zlib\"","webpack://@photostructure/library/webpack/bootstrap","webpack://@photostructure/library/webpack/runtime/node module decorator","webpack://@photostructure/library/webpack/startup"],"sourcesContent":["const CODES = {\n  PasetoNotSupported: 'ERR_PASETO_NOT_SUPPORTED',\n  PasetoDecryptionFailed: 'ERR_PASETO_DECRYPTION_FAILED',\n  PasetoInvalid: 'ERR_PASETO_INVALID',\n  PasetoVerificationFailed: 'ERR_PASETO_VERIFICATION_FAILED',\n  PasetoClaimInvalid: 'ERR_PASETO_CLAIM_INVALID',\n  PasetoWorkerFailure: 'ERR_PASETO_WORKER_FAILURE'\n}\n\nclass PasetoError extends Error {\n  constructor (message) {\n    super(message)\n    this.name = this.constructor.name\n    this.code = CODES[this.constructor.name]\n    Error.captureStackTrace(this, this.constructor)\n  }\n}\n\nmodule.exports.PasetoError = PasetoError\n\nmodule.exports.PasetoNotSupported = class PasetoNotSupported extends PasetoError {}\nmodule.exports.PasetoDecryptionFailed = class PasetoDecryptionFailed extends PasetoError {}\nmodule.exports.PasetoInvalid = class PasetoInvalid extends PasetoError {}\nmodule.exports.PasetoVerificationFailed = class PasetoVerificationFailed extends PasetoError {}\nmodule.exports.PasetoClaimInvalid = class PasetoClaimInvalid extends PasetoError {}\nmodule.exports.PasetoWorkerFailure = class PasetoWorkerFailure extends PasetoError {}\n","const { PasetoInvalid, PasetoNotSupported } = require('../errors')\nconst { decode } = require('../help/base64url')\nconst parsePayload = require('../help/parse_paseto_payload')\n\nmodule.exports = (token, /* second arg is private API */{ parse = true } = {}) => {\n  if (typeof token !== 'string') {\n    throw new TypeError('token must be a string')\n  }\n\n  const {\n    0: version,\n    1: purpose,\n    2: payload,\n    3: footer,\n    length\n  } = token.split('.')\n\n  if (length !== 3 && length !== 4) {\n    throw new PasetoInvalid('token value is not a PASETO formatted value')\n  }\n\n  if (version !== 'v1' && version !== 'v2') {\n    throw new PasetoNotSupported('unsupported PASETO version')\n  }\n\n  if (purpose !== 'local' && purpose !== 'public') {\n    throw new PasetoNotSupported('unsupported PASETO purpose')\n  }\n\n  const result = { footer: footer ? decode(footer) : undefined, payload: undefined, version, purpose }\n\n  if (purpose === 'local') {\n    return result\n  }\n\n  const sigLength = version === 'v1' ? 256 : 64\n\n  let raw\n  try {\n    raw = decode(payload).slice(0, -sigLength)\n  } catch (err) {\n    throw new PasetoInvalid('token value is not a PASETO formatted value')\n  }\n\n  if (!parse) {\n    result.payload = raw\n  } else {\n    result.payload = parsePayload(raw)\n  }\n\n  return result\n}\n","const decode = require('./decode')\n\nmodule.exports = { decode }\n","const ms = require('../help/ms')\n\nmodule.exports = ({\n  audience, expiresIn, iat = true, issuer, jti, kid, notBefore, now = new Date(), subject\n}, payload) => {\n  if (!(now instanceof Date) || !now.getTime()) {\n    throw new TypeError('options.now must be a valid Date object')\n  }\n\n  const unix = now.getTime()\n\n  if (iat !== undefined) {\n    if (typeof iat !== 'boolean') {\n      throw new TypeError('options.iat must be a boolean')\n    }\n\n    if (iat) {\n      payload.iat = new Date(unix)\n    }\n  }\n\n  if (expiresIn !== undefined) {\n    if (typeof expiresIn !== 'string') {\n      throw new TypeError('options.expiresIn must be a string')\n    }\n\n    payload.exp = new Date(unix + ms(expiresIn))\n  }\n\n  if (notBefore !== undefined) {\n    if (typeof notBefore !== 'string') {\n      throw new TypeError('options.notBefore must be a string')\n    }\n\n    payload.nbf = new Date(unix + ms(notBefore))\n  }\n\n  if (audience !== undefined) {\n    if (typeof audience !== 'string') {\n      throw new TypeError('options.audience must be a string')\n    }\n\n    payload.aud = audience\n  }\n\n  if (issuer !== undefined) {\n    if (typeof issuer !== 'string') {\n      throw new TypeError('options.issuer must be a string')\n    }\n\n    payload.iss = issuer\n  }\n\n  if (subject !== undefined) {\n    if (typeof subject !== 'string') {\n      throw new TypeError('options.subject must be a string')\n    }\n\n    payload.sub = subject\n  }\n\n  if (kid !== undefined) {\n    if (typeof kid !== 'string') {\n      throw new TypeError('options.kid must be a string')\n    }\n\n    payload.kid = kid\n  }\n\n  if (jti !== undefined) {\n    if (typeof jti !== 'string') {\n      throw new TypeError('options.jti must be a string')\n    }\n\n    payload.jti = jti\n  }\n\n  return payload\n}\n","const { PasetoClaimInvalid } = require('../errors')\nconst ms = require('./ms')\n\nmodule.exports = ({\n  ignoreExp, ignoreNbf, ignoreIat, maxTokenAge, subject, issuer, clockTolerance, audience, now = new Date()\n}, payload) => {\n  if (!(now instanceof Date) || !now.getTime()) {\n    throw new TypeError('options.now must be a valid Date object')\n  }\n\n  const unix = now.getTime()\n\n  // iss\n  if ('iss' in payload && typeof payload.iss !== 'string') {\n    throw new PasetoClaimInvalid('payload.iss must be a string')\n  }\n\n  if (issuer !== undefined) {\n    if (typeof issuer !== 'string') {\n      throw new TypeError('options.issuer must be a string')\n    }\n\n    if (payload.iss !== issuer) {\n      throw new PasetoClaimInvalid('issuer mismatch')\n    }\n  }\n\n  // sub\n  if ('sub' in payload && typeof payload.sub !== 'string') {\n    throw new PasetoClaimInvalid('payload.sub must be a string')\n  }\n\n  if (subject !== undefined) {\n    if (typeof subject !== 'string') {\n      throw new TypeError('options.subject must be a string')\n    }\n\n    if (payload.sub !== subject) {\n      throw new PasetoClaimInvalid('subject mismatch')\n    }\n  }\n\n  // aud\n  if ('aud' in payload && typeof payload.aud !== 'string') {\n    throw new PasetoClaimInvalid('payload.aud must be a string')\n  }\n\n  if (audience !== undefined) {\n    if (typeof audience !== 'string') {\n      throw new TypeError('options.audience must be a string')\n    }\n\n    if (payload.aud !== audience) {\n      throw new PasetoClaimInvalid('audience mismatch')\n    }\n  }\n\n  if (clockTolerance !== undefined && typeof clockTolerance !== 'string') {\n    throw new TypeError('options.clockTolerance must be a string')\n  }\n\n  const tolerance = clockTolerance ? ms(clockTolerance) : 0\n\n  // iat\n  let iat\n  if ('iat' in payload) {\n    if (typeof payload.iat !== 'string') {\n      throw new PasetoClaimInvalid('payload.iat must be a string')\n    }\n    iat = new Date(payload.iat).getTime()\n    if (!iat) {\n      throw new PasetoClaimInvalid('payload.iat must be a valid ISO8601 string')\n    }\n    if (!ignoreIat) {\n      if (iat > unix + tolerance) {\n        throw new PasetoClaimInvalid('token issued in the future')\n      }\n    }\n  }\n\n  // nbf\n  if ('nbf' in payload) {\n    if (typeof payload.nbf !== 'string') {\n      throw new PasetoClaimInvalid('payload.nbf must be a string')\n    }\n    const nbf = new Date(payload.nbf).getTime()\n    if (!nbf) {\n      throw new PasetoClaimInvalid('payload.nbf must be a valid ISO8601 string')\n    }\n    if (!ignoreNbf) {\n      if (nbf > unix + tolerance) {\n        throw new PasetoClaimInvalid('token is not active yet')\n      }\n    }\n  }\n\n  // exp\n  if ('exp' in payload) {\n    if (typeof payload.exp !== 'string') {\n      throw new PasetoClaimInvalid('payload.exp must be a string')\n    }\n    const exp = new Date(payload.exp).getTime()\n    if (!exp) {\n      throw new PasetoClaimInvalid('payload.exp must be a valid ISO8601 string')\n    }\n    if (!ignoreExp) {\n      if (exp <= unix - tolerance) {\n        throw new PasetoClaimInvalid('token is expired')\n      }\n    }\n  }\n\n  // maxTokenAge\n  if (maxTokenAge !== undefined) {\n    if (typeof maxTokenAge !== 'string') {\n      throw new TypeError('options.maxTokenAge must be a string')\n    }\n\n    if (!('iat' in payload)) {\n      throw new PasetoClaimInvalid('missing iat claim')\n    }\n\n    if (iat + ms(maxTokenAge) < unix + tolerance) {\n      throw new PasetoClaimInvalid('maxTokenAge exceeded')\n    }\n  }\n}\n","if (Buffer.isEncoding('base64url')) {\n  module.exports.encode = (input) => Buffer.from(input).toString('base64url')\n} else {\n  module.exports.encode = (input) =>\n    input.toString('base64').replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n}\n\nmodule.exports.decode = (input) => Buffer.from(input, 'base64')\n","const isObject = require('./is_object')\n\nmodule.exports = function checkFooter (footer) {\n  if (typeof footer === 'undefined') {\n    return Buffer.from('')\n  }\n\n  if (Buffer.isBuffer(footer)) {\n    return footer\n  }\n\n  if (isObject(footer)) {\n    return Buffer.from(JSON.stringify(footer), 'utf8')\n  }\n\n  if (typeof footer !== 'string') {\n    throw new TypeError('options.footer must be a string, Buffer, or a plain object')\n  }\n\n  return Buffer.from(footer, 'utf8')\n}\n","const applyOptions = require('./apply_options')\nconst isObject = require('./is_object')\nconst deepClone = payload => JSON.parse(JSON.stringify(payload))\n\nmodule.exports = (payload, options) => {\n  if (Buffer.isBuffer(payload)) {\n    if (Object.keys(options).length !== 0) {\n      throw new TypeError('options cannot contain claims when payload is a Buffer')\n    }\n\n    return payload\n  }\n  if (!isObject(payload)) {\n    throw new TypeError('payload must be a Buffer or a plain object')\n  }\n\n  payload = deepClone(payload)\n  payload = applyOptions(options, payload)\n  return Buffer.from(JSON.stringify(payload), 'utf-8')\n}\n","const crypto = require('crypto')\nconst util = require('util')\nconst { PasetoWorkerFailure } = require('../errors')\n\nconst pae = require('./pae')\nlet hkdf\nif (crypto.hkdf) {\n  const pHkdf = util.promisify(crypto.hkdf)\n  hkdf = (key, length, salt, info) => pHkdf('sha384', key, salt, info, length)\n} else {\n  hkdf = (key, length, salt, info) => {\n    const prk = methods.hmac('sha384', key, salt)\n\n    const u = Buffer.from(info)\n\n    let t = Buffer.from('')\n    let lb = Buffer.from('')\n    let i\n\n    for (let bi = 1; Buffer.byteLength(t) < length; ++i) {\n      i = Buffer.from(String.fromCharCode(bi))\n      const inp = Buffer.concat([lb, u, i])\n\n      lb = methods.hmac('sha384', inp, prk)\n      t = Buffer.concat([t, lb])\n    }\n\n    const orm = Buffer.from(t).slice(0, length)\n    return orm\n  }\n}\n\nconst pack = require('./pack')\nconst timingSafeEqual = require('./timing_safe_equal')\n\nconst methods = {\n  async 'aes-256-ctr-hmac-sha-384-encrypt' (m, f, k, nonce) {\n    let n = methods.hmac('sha384', m, nonce)\n    n = n.slice(0, 32)\n    f = Buffer.from(f)\n\n    const salt = n.slice(0, 16)\n    const [ek, ak] = await Promise.all([\n      hkdf(k, 32, salt, 'paseto-encryption-key'),\n      hkdf(k, 32, salt, 'paseto-auth-key-for-aead')\n    ])\n\n    const c = methods.encrypt('aes-256-ctr', m, ek, n.slice(16))\n    const preAuth = pae('v1.local.', n, c, f)\n    const t = methods.hmac('sha384', preAuth, ak)\n\n    return pack('v1.local.', [n, c, t], f)\n  },\n  async 'aes-256-ctr-hmac-sha-384-decrypt' (raw, f, k) {\n    const n = raw.slice(0, 32)\n    const t = raw.slice(-48)\n    const c = raw.slice(32, -48)\n\n    const salt = n.slice(0, 16)\n    const [ek, ak] = await Promise.all([\n      hkdf(k, 32, salt, 'paseto-encryption-key'),\n      hkdf(k, 32, salt, 'paseto-auth-key-for-aead')\n    ])\n\n    const preAuth = pae('v1.local.', n, c, f)\n\n    const t2 = methods.hmac('sha384', preAuth, ak)\n    const payload = methods.decrypt('aes-256-ctr', c, ek, n.slice(16))\n\n    if (!timingSafeEqual(t, t2) || !payload) {\n      return false\n    }\n\n    return payload\n  },\n  hmac (alg, payload, key) {\n    const hmac = crypto.createHmac(alg, key)\n    hmac.update(payload)\n    return hmac.digest()\n  },\n  verify (alg, payload, key, signature) {\n    return crypto.verify(alg, payload, key, signature)\n  },\n  sign (alg, payload, key) {\n    return crypto.sign(alg, payload, key)\n  },\n  encrypt (cipher, cleartext, key, iv) {\n    const encryptor = crypto.createCipheriv(cipher, key, iv)\n    return Buffer.concat([encryptor.update(cleartext), encryptor.final()])\n  },\n  decrypt (cipher, ciphertext, key, iv) {\n    const decryptor = crypto.createDecipheriv(cipher, key, iv)\n    return Buffer.concat([decryptor.update(ciphertext), decryptor.final()])\n  }\n}\n\nmodule.exports = methods","module.exports = input => !!input && input.constructor === Object\n","const { PasetoNotSupported } = require('../errors')\n\nmodule.exports = (n) => {\n  if (!Number.isSafeInteger(n)) {\n    throw new PasetoNotSupported('message is too long for Node.js to safely process')\n  }\n\n  const up = ~~(n / 0xFFFFFFFF)\n  const dn = (n % 0xFFFFFFFF) - up\n\n  const buf = Buffer.allocUnsafe(8)\n\n  buf.writeUInt32LE(up, 4)\n  buf.writeUInt32LE(dn, 0)\n\n  return buf\n}\n","const second = 1000\nconst minute = second * 60\nconst hour = minute * 60\nconst day = hour * 24\nconst week = day * 7\nconst year = day * 365.25\n\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i\n\nmodule.exports = (str) => {\n  const matched = REGEX.exec(str)\n\n  if (!matched) {\n    throw new TypeError(`invalid time period format (\"${str}\")`)\n  }\n\n  const value = parseFloat(matched[1])\n  const unit = matched[2].toLowerCase()\n\n  switch (unit) {\n    case 'sec':\n    case 'secs':\n    case 'second':\n    case 'seconds':\n    case 's':\n      return Math.round(value * second)\n    case 'minute':\n    case 'minutes':\n    case 'min':\n    case 'mins':\n    case 'm':\n      return Math.round(value * minute)\n    case 'hour':\n    case 'hours':\n    case 'hr':\n    case 'hrs':\n    case 'h':\n      return Math.round(value * hour)\n    case 'day':\n    case 'days':\n    case 'd':\n      return Math.round(value * day)\n    case 'week':\n    case 'weeks':\n    case 'w':\n      return Math.round(value * week)\n    case 'year':\n    case 'years':\n    case 'yr':\n    case 'yrs':\n    case 'y':\n      return Math.round(value * year)\n  }\n}\n","const { encode } = require('./base64url')\n\nmodule.exports = function pack (header, payload, footer) {\n  if (footer.length !== 0) {\n    return `${header}${encode(Buffer.concat(payload))}.${encode(footer)}`\n  }\n\n  return `${header}${encode(Buffer.concat(payload))}`\n}\n","const le64 = require('./le64')\n\nmodule.exports = (...pieces) => {\n  let accumulator = le64(pieces.length)\n  for (let piece of pieces) {\n    piece = Buffer.from(piece, 'utf8')\n    const len = le64(Buffer.byteLength(piece))\n    accumulator = Buffer.concat([accumulator, len, piece])\n  }\n  return accumulator\n}\n","const { PasetoInvalid } = require('../errors')\n\nconst { strict: assert } = require('assert')\nconst isObject = require('./is_object')\n\nmodule.exports = (payload) => {\n  try {\n    const parsed = JSON.parse(payload)\n    assert(isObject(parsed))\n    return parsed\n  } catch (err) {\n    throw new PasetoInvalid('All PASETO payloads MUST be a JSON object')\n  }\n}\n","const crypto = require('crypto')\nconst { promisify } = require('util')\n\nconst randomFill = promisify(crypto.randomFill)\n\nmodule.exports = async function randomBytes (bytes) {\n  const buf = Buffer.allocUnsafe(bytes)\n  return randomFill(buf)\n}\n","const { sign } = require('./crypto_worker')\n\nconst pae = require('./pae')\nconst pack = require('./pack')\n\nmodule.exports = async function signPaseto (h, m, f, alg, key, expectedSigLength) {\n  const m2 = pae(h, m, f)\n  const sig = await sign(alg, m2, key)\n\n  if (sig.length !== expectedSigLength) {\n    throw new TypeError(`invalid ${h.slice(0, -1)} signing key bit length`)\n  }\n\n  return pack(h, [m, sig], f)\n}\n","const { createSecretKey, KeyObject } = require('crypto')\n\nmodule.exports = function checkKey (header, key) {\n  if (!(key instanceof KeyObject)) {\n    key = createSecretKey(key)\n  }\n\n  if (key.type !== 'secret' || key.symmetricKeySize !== 32) {\n    throw new TypeError(`${header} secret key must be 32 bytes long symmetric key`)\n  }\n\n  return key\n}\n","const { timingSafeEqual: TSE } = require('crypto')\n\nconst paddedBuffer = (input, length) => {\n  if (input.length === length) {\n    return input\n  }\n\n  const buffer = Buffer.alloc(length)\n  input.copy(buffer)\n  return buffer\n}\n\nconst timingSafeEqual = (a, b) => {\n  const length = Math.max(a.length, b.length)\n  return TSE(paddedBuffer(a, length), paddedBuffer(b, length))\n}\n\nmodule.exports = timingSafeEqual\n","const { PasetoInvalid, PasetoVerificationFailed } = require('../errors')\n\nconst { decode } = require('./base64url')\nconst { verify } = require('./crypto_worker')\nconst pae = require('./pae')\n\nmodule.exports = async function verifyPaseto (h, token, alg, sigLength, key) {\n  if (typeof token !== 'string') {\n    throw new TypeError('token must be a string')\n  }\n\n  if (token.substr(0, h.length) !== h) {\n    throw new PasetoInvalid(`token is not a ${h.slice(0, -1)} token`)\n  }\n\n  const { 0: b64ms, 1: b64f, length } = token.substr(h.length).split('.')\n  if (length !== 1 && length !== 2) {\n    throw new PasetoInvalid('token value is not a PASETO formatted value')\n  }\n\n  let f\n  let ms\n\n  try {\n    ms = decode(b64ms)\n    f = decode(b64f || '')\n  } catch (err) {\n    throw new PasetoInvalid('token value is not a PASETO formatted value')\n  }\n\n  const m = ms.slice(0, -sigLength)\n  const s = ms.slice(-sigLength)\n  const m2 = pae(h, m, f)\n\n  const valid = await verify(alg, m2, key, s)\n\n  if (!valid) {\n    throw new PasetoVerificationFailed('invalid signature')\n  }\n\n  return {\n    m,\n    footer: f.length ? f : undefined\n  }\n}\n","const errors = require('./errors')\nconst V1 = require('./v1')\nconst V2 = require('./v2')\n\nconst { decode } = require('./general')\n\nmodule.exports = { decode, V1, V2, errors }\n","const { decode } = require('../help/base64url')\nconst { 'aes-256-ctr-hmac-sha-384-decrypt': decrypt } = require('../help/crypto_worker')\nconst { PasetoDecryptionFailed, PasetoInvalid } = require('../errors')\nconst assertPayload = require('../help/assert_payload')\nconst checkKey = require('../help/symmetric_key_check').bind(undefined, 'v1.local')\nconst parse = require('../help/parse_paseto_payload')\n\nconst h = 'v1.local.'\n\nmodule.exports = async function v1Decrypt (token, key, { complete = false, buffer = false, ...options } = {}) {\n  if (typeof token !== 'string') {\n    throw new TypeError(`token must be a string, got: ${typeof token}`)\n  }\n\n  key = checkKey(key)\n\n  if (token.substr(0, h.length) !== h) {\n    throw new PasetoInvalid('token is not a v1.local PASETO')\n  }\n\n  const { 0: b64, 1: b64f = '', length } = token.substr(h.length).split('.')\n  if (length > 2) {\n    throw new PasetoInvalid('token value is not a PASETO formatted value')\n  }\n\n  const f = decode(b64f)\n  const raw = decode(b64)\n  const k = key.export()\n\n  const m = await decrypt(raw, f, k)\n  if (!m) {\n    throw new PasetoDecryptionFailed('decryption failed')\n  }\n\n  if (buffer) {\n    if (Object.keys(options).length !== 0) {\n      throw new TypeError('options cannot contain claims when options.buffer is true')\n    }\n    if (complete) {\n      return { payload: m, footer: f.length ? f : undefined, version: 'v2', purpose: 'local' }\n    }\n\n    return m\n  }\n\n  const payload = parse(m)\n\n  assertPayload(options, payload)\n\n  if (complete) {\n    return { payload, footer: f.length ? f : undefined, version: 'v1', purpose: 'local' }\n  }\n\n  return payload\n}\n","const checkFooter = require('../help/check_footer')\nconst checkKey = require('../help/symmetric_key_check').bind(undefined, 'v1.local')\nconst checkPayload = require('../help/check_payload')\nconst randomBytes = require('../help/random_bytes')\nconst { 'aes-256-ctr-hmac-sha-384-encrypt': encrypt } = require('../help/crypto_worker')\n\nmodule.exports = async function v1Encrypt (payload, key, { footer, nonce, ...options } = {}) {\n  const m = checkPayload(payload, options)\n  key = checkKey(key)\n  const f = checkFooter(footer)\n\n  const k = key.export()\n\n  if ((nonce && process.env.NODE_ENV !== 'test') || !nonce) {\n    nonce = await randomBytes(32)\n  }\n\n  return encrypt(m, f, k, nonce)\n}\n","const sign = require('./sign')\nconst verify = require('./verify')\nconst encrypt = require('./encrypt')\nconst decrypt = require('./decrypt')\nconst generateKey = require('./key')\n\nmodule.exports = { sign, verify, encrypt, decrypt, generateKey }\n","const crypto = require('crypto')\nconst { promisify } = require('util')\n\nconst { PasetoNotSupported } = require('../errors')\nconst randomBytes = require('../help/random_bytes')\n\nconst generateKeyPair = promisify(crypto.generateKeyPair)\n\nconst LOCAL_KEY_LENGTH = 32\nconst PUBLIC_KEY_ARGS = ['rsa', { modulusLength: 2048 }]\n\nasync function generateKey (purpose) {\n  switch (purpose) {\n    case 'local':\n      return crypto.createSecretKey(await randomBytes(LOCAL_KEY_LENGTH))\n    case 'public': {\n      const { privateKey } = await generateKeyPair(...PUBLIC_KEY_ARGS)\n      return privateKey\n    }\n    default:\n      throw new PasetoNotSupported('unsupported v1 purpose')\n  }\n}\n\nmodule.exports = generateKey\n","const {\n  constants: {\n    RSA_PKCS1_PSS_PADDING: padding,\n    RSA_PSS_SALTLEN_DIGEST: saltLength\n  },\n  createPrivateKey,\n  KeyObject\n} = require('crypto')\n\nconst checkFooter = require('../help/check_footer')\nconst checkPayload = require('../help/check_payload')\nconst sign = require('../help/sign')\n\nfunction checkKey (key) {\n  if (!(key instanceof KeyObject)) {\n    key = createPrivateKey(key)\n  }\n\n  if (key.type !== 'private' || key.asymmetricKeyType !== 'rsa') {\n    throw new TypeError('v1.public signing key must be a private RSA key')\n  }\n\n  return key\n}\n\nmodule.exports = async function v1Sign (payload, key, { footer, ...options } = {}) {\n  const m = checkPayload(payload, options)\n  const f = checkFooter(footer)\n  key = checkKey(key)\n  return sign('v1.public.', m, f, 'sha384', { key, padding, saltLength }, 256)\n}\n","const {\n  constants: {\n    RSA_PKCS1_PSS_PADDING: padding,\n    RSA_PSS_SALTLEN_DIGEST: saltLength\n  },\n  createPublicKey,\n  KeyObject\n} = require('crypto')\n\nconst assertPayload = require('../help/assert_payload')\nconst parse = require('../help/parse_paseto_payload')\nconst verify = require('../help/verify')\n\nfunction checkKey (key) {\n  if (!(key instanceof KeyObject) || key.type === 'private') {\n    key = createPublicKey(key)\n  }\n\n  if (key.type !== 'public' || key.asymmetricKeyType !== 'rsa') {\n    throw new TypeError('v1.public verify key must be a public RSA key')\n  }\n\n  return key\n}\n\nmodule.exports = async function v1Verify (token, key, { complete = false, buffer = false, ...options } = {}) {\n  key = checkKey(key)\n\n  const { m, footer } = await verify('v1.public.', token, 'sha384', 256, { key, padding, saltLength })\n\n  if (buffer) {\n    if (complete) {\n      return { payload: m, footer, version: 'v2', purpose: 'public' }\n    }\n\n    return m\n  }\n\n  const payload = parse(m)\n  assertPayload(options, payload)\n\n  if (complete) {\n    return { payload, footer, version: 'v1', purpose: 'public' }\n  }\n\n  return payload\n}\n","const sign = require('./sign')\nconst verify = require('./verify')\nconst generateKey = require('./key')\n\nmodule.exports = { sign, verify, generateKey }\n","const crypto = require('crypto')\nconst { promisify } = require('util')\n\nconst { PasetoNotSupported } = require('../errors')\n\nconst generateKeyPair = promisify(crypto.generateKeyPair)\n\nasync function generateKey (purpose) {\n  switch (purpose) {\n    case 'public': {\n      const { privateKey } = await generateKeyPair('ed25519')\n      return privateKey\n    }\n    default:\n      throw new PasetoNotSupported('unsupported v2 purpose')\n  }\n}\n\nmodule.exports = generateKey\n","const {\n  createPrivateKey,\n  KeyObject\n} = require('crypto')\n\nconst checkFooter = require('../help/check_footer')\nconst checkPayload = require('../help/check_payload')\nconst sign = require('../help/sign')\n\nfunction checkKey (key) {\n  if (!(key instanceof KeyObject)) {\n    key = createPrivateKey(key)\n  }\n\n  if (key.type !== 'private' || key.asymmetricKeyType !== 'ed25519') {\n    throw new TypeError('v2.public signing key must be a private ed25519 key')\n  }\n\n  return key\n}\n\nmodule.exports = async function v2Sign (payload, key, { footer, ...options } = {}) {\n  const m = checkPayload(payload, options)\n  key = checkKey(key)\n  const f = checkFooter(footer)\n  return sign('v2.public.', m, f, undefined, key, 64)\n}\n","const {\n  createPublicKey,\n  KeyObject\n} = require('crypto')\n\nconst assertPayload = require('../help/assert_payload')\nconst parse = require('../help/parse_paseto_payload')\nconst verify = require('../help/verify')\n\nfunction checkKey (key) {\n  if (!(key instanceof KeyObject) || key.type === 'private') {\n    key = createPublicKey(key)\n  }\n\n  if (key.type !== 'public' || key.asymmetricKeyType !== 'ed25519') {\n    throw new TypeError('v2.public verify key must be a public ed25519 key')\n  }\n\n  return key\n}\n\nmodule.exports = async function v2Verify (token, key, { complete = false, buffer = false, ...options } = {}) {\n  key = checkKey(key)\n\n  const { m, footer } = await verify('v2.public.', token, undefined, 64, key)\n\n  if (buffer) {\n    if (complete) {\n      return { payload: m, footer, version: 'v2', purpose: 'public' }\n    }\n\n    return m\n  }\n\n  const payload = parse(m)\n  assertPayload(options, payload)\n\n  if (complete) {\n    return { payload, footer, version: 'v2', purpose: 'public' }\n  }\n\n  return payload\n}\n","import { lazy } from \"../core/Lazy\"\nimport { isProd, nodeEnv } from \"./NodeEnv\"\nimport { version } from \"./Version\"\n\nexport const SimpleAppName = \"PhotoStructure\"\nexport const SimpleShortAppName = \"phstr\" // < phstr.com redirects to photostructure.com\nexport const SimpleAppNameLC = SimpleAppName.toLowerCase()\n\nexport const AppName = lazy(() => SimpleAppName + (isProd ? \"\" : `-${nodeEnv}`))\nexport const AppNameVersion = lazy(() => AppName() + \" \" + version)\n","import {\n  compact,\n  isEmpty,\n  isNotEmpty,\n  primitiveValueOfOrElse,\n  remove,\n  stepRange,\n  uniqBy\n} from \"../fe/Array\"\nimport { copyArrayTo } from \"../fe/ArrayCopy\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { notBlank } from \"../fe/Blank\"\nimport { eql } from \"../fe/Eql\"\nimport { stringify } from \"../fe/JSON\"\nimport { Defined, defined, map, mapOr } from \"../fe/Maybe\"\nimport { Maybe, MaybeNull, PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { times } from \"../fe/Number\"\nimport { tap } from \"../fe/Object\"\nimport { Comparable, Primitivable, Primitive, gt, lt } from \"../fe/Primitive\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { Thunk } from \"../fe/Thunk\"\nimport { toA } from \"../fe/toA\"\nimport { stringifySorted } from \"./StringifySorted\"\n\n// TODO: INLINE\nexport { diff, remove } from \"../fe/Array\"\n\n/**\n * `minuend - subtrahend`, using eql() to compare elements.\n *\n * @template T must have a .valueOf() implementation\n * @param {T[]} minuend (haystack)\n * @param {T[]} subtrahend (needles)\n * @returns {T[]} values in `minuend` that, according to `eql()`, are\n * not in `subtrahend`. Neither arg is mutated.\n */\nexport function diffEql<T>(minuend: T[], subtrahend: T[]): T[] {\n  return minuend.filter(ea => !subtrahend.some(eb => eql(ea, eb)))\n}\n\n// Extract the element type of an array:\nexport type ElementType<T extends readonly unknown[]> = T[number]\n// type T = ElementType<SomeArrayType[]>\n\n/**\n * @return true iff all `objects` are neither `undefined` nor `null`. Note\n * that `[]` returns true.\n */\nexport function allDefined<T>(\n  arr: MaybeNull<MaybeNull<T>[]>\n): arr is Defined<T>[] {\n  return defined(arr) && arr.every(defined)\n}\n\nexport function mapAllDefined<T, U>(\n  arr: MaybeNull<MaybeNull<T>[]>,\n  f: (t: T[]) => U\n): Maybe<U> {\n  return allDefined(arr) ? f(arr) : undefined\n}\n\nexport function mapAll<T, V>(\n  arr: MaybeNull<MaybeNull<T>[]>,\n  f: (ea: T[]) => V\n): Maybe<V> {\n  return allDefined(arr) ? f(arr) : undefined\n}\n\n/**\n * @return true iff all `objects` are `undefined` or `null`\n */\nexport function allNotDefined(objects: any[]): boolean {\n  return objects == null || objects.every(ea => ea == null)\n}\n\nexport function allNotBlank(...arr: MaybeNull<any>[]): boolean {\n  return arr != null && arr.every(notBlank)\n}\n\n/**\n * @return true iff any `objects` are `undefined` or `null`. Note that `[]`\n * returns false (as there aren't not-defined instances).\n */\nexport function anyNotDefined(objects: any[]): boolean {\n  return objects == null || objects.some(ea => ea == null)\n}\n\nexport function anyDefined(objects: any[]): boolean {\n  return objects != null && objects.some(ea => ea != null)\n}\n\nexport async function findAsync<T>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T) => MaybeSyncOrAsync<boolean>\n): PromiseMaybe<T> {\n  for (const ea of toA(arr)) {\n    if (ea != null && true === (await f(ea))) return ea\n  }\n  return\n}\n\nexport async function findLastAsync<T>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T) => MaybeSyncOrAsync<boolean>\n): PromiseMaybe<T> {\n  arr = toA(arr)\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const ea = arr[i]\n    if (ea != null && true === (await f(ea))) return ea\n  }\n  return\n}\n\n/**\n * @return the first non-`null` result of `f`, or if `f` is omitted, the first\n * non-null value in `arr`.\n */\nexport function first<T, R>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T) => MaybeNull<R>\n): Maybe<R> {\n  // PERF: avoid compact() to avoid creating a new array\n  if (arr != null) {\n    for (const ea of toA(arr)) {\n      if (ea != null) {\n        const r = f(ea)\n        if (r != null) {\n          return r\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * Return the first result from `f` that is defined.\n * @see Array#first\n * @see Later#firstDefinedLater\n */\nexport async function firstAsync<T, R>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T, index: number) => SyncOrAsync<MaybeNull<R>>\n): PromiseMaybe<R> {\n  if (arr != null) {\n    let index = -1\n    for (const t of arr) {\n      index++\n      try {\n        if (t != null) {\n          const r = await f(t, index)\n          if (r != null) {\n            return r\n          }\n        }\n      } catch (err) {\n        //\n      }\n    }\n  }\n  return undefined\n}\n\n/**\n * @see Later#firstDefinedLater\n */\nexport function firstNonEmptyThunk<T>(\n  ...thunks: Thunk<Maybe<T[]>>[]\n): Maybe<T[]> {\n  for (const t of thunks) {\n    const arr = t()\n    if (isNotEmpty(arr)) {\n      return arr\n    }\n  }\n  return\n}\n\n/**\n * @return the last value in the array that satisfies the predicate\n */\nexport function findFromIndex<T>(\n  arr: T[],\n  predicate: (t: T) => boolean,\n  fromIndex: number\n): Maybe<number> {\n  for (let i = fromIndex; i <= arr.length - 1; i++) {\n    if (predicate(arr[i])) return i\n  }\n  return\n}\n\n/**\n * @return the last value in the array that satisfies the predicate\n */\nexport function findLast<T>(arr: T[], predicate: (t: T) => boolean): Maybe<T> {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) return arr[i]\n  }\n  return\n}\n\n/**\n * @return the last index in the array that satisfies the predicate\n */\nexport function findLastIndex<T>(\n  arr: T[],\n  predicate: (t: T) => boolean\n): number {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) return i\n  }\n  return -1\n}\n\nexport function concat<T>(...arrs: (MaybeNull<T> | MaybeNull<T>[])[]): T[] {\n  const arr: T[] = []\n  for (const ea of arrs) {\n    if (Array.isArray(ea)) {\n      for (const elem of ea) {\n        if (elem != null) arr.push(elem)\n      }\n    } else if (ea != null) {\n      arr.push(ea)\n    }\n  }\n  return arr\n}\n\nexport function moveToEnd<T>(arr: T[], element: T): T[] {\n  remove(arr, element)\n  arr.push(element)\n  return arr\n}\n\nexport function moveIndexToEnd<T>(arr: T[], index: number): T[] {\n  const moved = arr[index]\n  if (moved == null) return arr\n  arr.push(moved)\n  for (let i = index; i < arr.length - 1; i++) {\n    arr[i] = arr[i + 1]\n  }\n  arr.length = arr.length - 1\n  return arr\n}\n\n/**\n * @template T must have a .valueOf() implementation\n * @return the values in both `a` and `b`\n */\nexport function intersection<T>(\n  a: T[],\n  b: T[],\n  valueOf: (t: T) => Primitive = primitiveValueOfOrElse\n): T[] {\n  const s = new Set(b.map(valueOf))\n  return a.filter(ea => s.has(valueOf(ea)))\n}\n\nexport function diceCoeff<T>(\n  a: T[],\n  b: T[],\n  valueOf: (t: T) => Primitive = primitiveValueOfOrElse\n): number {\n  if (isEmpty(a) && isEmpty(b)) return 1\n  return (intersection(a, b, valueOf).length * 2) / (a.length + b.length)\n}\n\n/**\n * @return true iff all elements in `a` are in `b` and all elements in `b` are\n * in `a`. Order is ignored. Elements must be sortable, however.\n */\nexport function eqlUnordered(a: Maybe<any[]>, b: Maybe<any[]>): boolean {\n  return a == null || b == null\n    ? false\n    : zip(sortBy(a, stringifySorted), sortBy(b, stringifySorted)).every(\n        ([x, y]) => eql(x, y)\n      )\n}\n\n/**\n * Remove the first item from `arr` where the `predicate` returns `true`.\n * @return the element removed from `arr`\n */\nexport function removeFirst<T>(\n  arr: T[],\n  predicate: (item: T, index: number, sourceArray: T[]) => boolean\n): Maybe<T> {\n  const idx = arr.findIndex(predicate)\n  return idx >= 0 ? arr.splice(idx, 1)[0] : undefined\n}\n\nexport function uniqInPlace<T>(\n  arr: T[],\n  f: (t: T) => Maybe<Primitive> = ea => stringify(ea)\n): void {\n  copyArrayTo(uniqBy(arr, f), arr)\n}\n\nexport function partition<T>(\n  arr: Iterable<T>,\n  filter: (t: T, index: number) => boolean\n): [T[], T[]] {\n  const accept: T[] = []\n  const reject: T[] = []\n  let i = 0\n  for (const ea of arr) {\n    ;(filter(ea, i++) ? accept : reject).push(ea)\n  }\n  return [accept, reject]\n}\n\nexport function isUniq<T extends Comparable>(t: T[]): boolean {\n  return t.every((ea, i) => t.indexOf(ea) === i)\n}\n\n/**\n * `Uniq -c`: return unique strings and their count\n */\nexport function uniqCount<T extends Primitive>(\n  arr: T[]\n): { t: T; count: number }[] {\n  return _uniqCount(arr.sort())\n}\n\nfunction _uniqCount<T extends Primitive>(\n  sortedArr: T[]\n): { t: T; count: number }[] {\n  if (sortedArr == null || sortedArr.length === 0) return []\n  const t = sortedArr[0]\n  const lastElem = sortedArr.lastIndexOf(t)\n  return [\n    { t, count: lastElem + 1 },\n    ..._uniqCount(sortedArr.slice(lastElem + 1))\n  ]\n}\n\nexport function mapCompact<T, R>(\n  arr: MaybeNull<T>[],\n  f: (t: T) => Maybe<R>\n): R[] {\n  return compact(compact(arr).map(f))\n}\n\nexport function toMapEntries<T, K, V>(\n  arr: T[],\n  f: (t: T) => MaybeNull<[K, V]>\n): Map<K, V> {\n  return new Map<K, V>(arr.map(f).filter(defined) as [K, V][])\n}\n\nexport function flatMap<T, U>(arr: T[], f: (t: T) => Maybe<Maybe<U>[]>): U[] {\n  return arr.reduce(\n    (prev: U[], curr: T) => prev.concat(...compact(f(curr))),\n    []\n  )\n}\n\nexport function retainLastN<T>(arr: T[], length: number): T[] {\n  if (arr.length > length) {\n    arr.splice(0, arr.length - length)\n  }\n  return arr\n}\n\nexport function retainFirstN<T>(arr: T[], length: number): T[] {\n  arr.length = Math.min(arr.length, length)\n  return arr\n}\n\nexport function zip<T1, T2>(arr1: T1[], arr2: T2[]): [T1, T2][]\nexport function zip<T1, T2, T3>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[]\n): [T1, T2, T3][]\nexport function zip<T1, T2, T3, T4>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[]\n): [T1, T2, T3, T4][]\nexport function zip<T1, T2, T3, T4, T5>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[],\n  arr5: T5[]\n): [T1, T2, T3, T4, T5][]\nexport function zip<T1, T2, T3, T4, T5, T6>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[],\n  arr5: T5[],\n  arr6: T6[]\n): [T1, T2, T3, T4, T5, T6][]\n// YAY TYPING IS FUN\nexport function zip<T1, T2, T3, T4, T5, T6, T7>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[],\n  arr5: T5[],\n  arr6: T6[],\n  arr7: T7[]\n): [T1, T2, T3, T4, T5, T6, T7][]\nexport function zip<T1, T2, T3, T4, T5, T6, T7, T8>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[],\n  arr5: T5[],\n  arr6: T6[],\n  arr7: T7[],\n  arr8: T8[]\n): [T1, T2, T3, T4, T5, T6, T7, T8][]\n\nexport function zip<T>(...arrarr: T[][]): Maybe<T>[][] {\n  const len = Math.max(...arrarr.map(ea => ea?.length ?? 0))\n  return times(len, i => arrarr.map(ea => ea?.[i]))\n}\n\nexport function flatZip<T>(...arrarr: T[][]): Maybe<T>[] {\n  const len = Math.max(...arrarr.map(ea => ea?.length ?? 0))\n  const r: T[] = []\n  times(len, i => arrarr.map(ea => r.push(ea?.[i])))\n  return r\n}\n\nexport function unFlatZip<T>(arr: T[] | Buffer, n: number): number[][] {\n  const len = arr.length / n\n  if (len !== Math.round(len))\n    throw new Error(\n      \"unFlatZip(): bad input array length \" +\n        stringify({ arr_length: arr.length, n })\n    )\n  const results = times(n, () => new Array(len))\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < n; j++) {\n      results[j][i] = arr[i * n + j]\n    }\n  }\n  return results\n}\n\n/**\n * Given [A,B,C], return [A], [A,B], [A,B,C]\n */\nexport function ancestry<T>(arr: T[]): T[][] {\n  return times(arr.length, i => arr.slice(0, i + 1))\n}\n\nexport function min<T extends Primitivable>(arr: MaybeNull<T>[]): Maybe<T> {\n  return arr[leastIndex(arr)] as Maybe<T>\n}\n\n/**\n * Return the first index into `arr` holding the least value (using `valueOf`\n * of T)\n */\nexport function leastIndex<T extends Primitivable>(\n  arr: MaybeNull<T>[]\n): number {\n  return leastIndexBy(arr, ea => ea.valueOf())\n}\n\nexport function max<T extends Primitivable>(arr: MaybeNull<T>[]): Maybe<T> {\n  return arr[greatestIndex(arr)] as Maybe<T>\n}\n\n/**\n * Return the first index into `arr` holding the largest value (using `valueOf`\n * of T)\n */\nexport function greatestIndex<T extends Primitivable>(\n  arr: MaybeNull<T>[]\n): number {\n  return greatestIndexBy(arr, ea => ea.valueOf())\n}\n\nexport function leastIndexBy<T>(\n  arr: MaybeNull<T>[],\n  valueOf: (t: T) => Maybe<Comparable>\n): number {\n  return estIndex(arr, valueOf, (a, b) => lt(a, b))\n}\n\nexport function greatestIndexBy<T>(\n  arr: MaybeNull<T>[],\n  valueOf: (t: T) => Maybe<Comparable>\n): number {\n  return estIndex(arr, valueOf, (a, b) => gt(a, b))\n}\n\nexport function leastBy<T>(\n  arr: Maybe<MaybeNull<T>[]>,\n  valueOf: (t: T) => Maybe<Comparable>\n): Maybe<T> {\n  return isEmpty(arr)\n    ? undefined\n    : (arr[leastIndexBy(arr, valueOf)] as Maybe<T>)\n}\n\nexport function least<T extends Comparable>(\n  arr: Maybe<MaybeNull<T>[]>\n): Maybe<T> {\n  return leastBy(arr, ea => ea)\n}\n\nexport function greatestBy<T>(\n  arr: Maybe<MaybeNull<T>[]>,\n  valueOf: (t: T) => Maybe<Comparable>\n): Maybe<T> {\n  return isEmpty(arr)\n    ? undefined\n    : (arr[greatestIndexBy(arr, valueOf)] as Maybe<T>)\n}\n\nfunction estIndex<T>(\n  arr: MaybeNull<T>[],\n  valueOf: (t: T) => Maybe<Comparable>,\n  cmp: (a: Comparable, b: Comparable) => boolean\n): number {\n  return estIndexCtx(arr, valueOf, cmp).index\n}\n\nexport function leastByCtx<T, C extends Comparable>(\n  arr: Maybe<MaybeNull<T>[]>,\n  valueOf: (t: T) => Maybe<C>\n): Maybe<{ result: T; index: number; value: C }> {\n  const ctx = estIndexCtx(arr ?? [], valueOf, lt)\n  return arr == null || ctx == null || ctx.index < 0 || ctx.value == null\n    ? undefined\n    : { result: arr[ctx.index]!, index: ctx.index, value: ctx.value }\n}\n\nfunction estIndexCtx<T, C extends Comparable>(\n  arr: MaybeNull<T>[],\n  valueOf: (t: T) => Maybe<C>,\n  cmp: (a: C, b: C) => boolean\n): { index: number; value: Maybe<C> } {\n  if (isEmpty(arr)) return { index: -1, value: undefined }\n\n  let result = -1\n  let value: Maybe<C>\n\n  for (let i = 0; i < arr.length; i++) {\n    const ea = arr[i]\n    if (ea != null) {\n      const v = valueOf(ea)\n      if (v != null) {\n        if (value == null || cmp(v, value) === true) {\n          result = i\n          value = v\n        }\n      }\n    }\n  }\n  return { index: result, value }\n}\n\nexport interface ArrayLike<T> {\n  length: number\n  [index: number]: Maybe<T>\n}\n\nexport function reverse<T extends ArrayLike<any>>(arr: T): T {\n  const r = []\n  for (let i = arr.length - 1; i >= 0; i--) {\n    r.push(arr[i])\n  }\n  return r as any\n}\n\nexport function batches<T>(arr: T[], batchsize: number): T[][] {\n  if (batchsize < 1) batchsize = 1\n  return stepRange(0, arr.length, Math.round(batchsize), i =>\n    arr.slice(i, i + batchsize)\n  )\n}\n\nexport function collectBatched<T1, T2>(\n  arr: T1[],\n  batchSize: number,\n  f: (batch: T1[]) => Maybe<Maybe<T2>[]>\n): T2[] {\n  const result: T2[] = []\n  for (const batchArr of batches(compact(toA(arr)), batchSize)) {\n    result.push(...compact(f(batchArr)))\n  }\n  return result\n}\n\nexport async function collectBatchedAsync<T1, T2>(\n  arr: T1[],\n  batchSize: number,\n  f: (batch: T1[]) => PromiseMaybe<Maybe<T2>[]>\n): Promise<T2[]> {\n  const result: T2[] = []\n  for (const batchArr of batches(compact(toA(arr)), batchSize)) {\n    result.push(...compact(await f(batchArr)))\n  }\n  return result\n}\n\nexport function contextFilter<T>(\n  arr: T[],\n  predicate: (t: T, idx: number, lastPass: Maybe<T>) => boolean\n): T[] {\n  let lastPass: Maybe<T>\n  return arr.filter((ea, idx) =>\n    tap(predicate(ea, idx, lastPass), result => {\n      if (result) lastPass = ea\n    })\n  )\n}\n\nexport function clusterSome<T>(arr: T[], cmp: (a: T, b: T) => boolean): T[][] {\n  const result: T[][] = []\n  for (const ea of arr) {\n    const prior = result.find(ea2 => ea2.some(ea3 => cmp(ea, ea3)))\n    if (prior) prior.push(ea)\n    else result.push([ea])\n  }\n  return result\n}\n\nexport function clusterEvery<T>(arr: T[], cmp: (a: T, b: T) => boolean): T[][] {\n  const result: T[][] = []\n  for (const ea of arr) {\n    const prior = result.find(ea2 => ea2.every(ea3 => cmp(ea, ea3)))\n    if (prior) prior.push(ea)\n    else result.push([ea])\n  }\n  return result\n}\n\nexport async function clusterAsync<T>(\n  arr: T[],\n  cmp: (a: T, b: T) => SyncOrAsync<boolean>\n): Promise<NonNullable<T>[][]> {\n  const result: NonNullable<T>[][] = []\n  outer: for (const ea of arr) {\n    for (const resultArr of result) {\n      if (\n        ea != null &&\n        (await everyAsync(resultArr, prior => cmp(ea, prior)))\n      ) {\n        resultArr.push(ea)\n        continue outer\n      }\n    }\n    if (ea != null) result.push([ea])\n  }\n  return result\n}\n\n/**\n * Return if any `f` returns true.\n * @see Array#some\n */\nexport async function someAsync<T>(\n  arr: T[],\n  f: (t: T, index: number) => SyncOrAsync<boolean>\n): Promise<boolean> {\n  if (arr != null) {\n    for (let i = 0; i < arr.length; i++) {\n      if (await f(arr[i], i)) return true\n    }\n  }\n  return false\n}\n\n/**\n * Return if every `f` returns true.\n * @see Array#every\n */\nexport async function everyAsync<T>(\n  arr: T[],\n  f: (t: T, index: number) => SyncOrAsync<boolean>\n): Promise<boolean> {\n  return isEmpty(arr) || (await Promise.all(arr.map(f))).every(ea => ea)\n}\n\nexport function firstIndexNearest<T>({\n  arr,\n  fromIndex,\n  pred,\n  maxDelta\n}: {\n  arr: T[]\n  fromIndex: number\n  pred: (t: T, index: number) => boolean\n  maxDelta: number\n}): Maybe<number> {\n  for (let i = 1; i < Math.min(maxDelta + 1, arr.length); i++) {\n    {\n      const before = fromIndex - i\n      if (before >= 0 && true === map(arr[before], ea => pred(ea, before))) {\n        return before\n      }\n    }\n    {\n      const after = fromIndex + i\n      if (after < arr.length && pred(arr[after]!, after)) return after\n    }\n  }\n  return\n}\n\nexport function dupes<T extends Primitive>(arr: Maybe<T>[]) {\n  const mm = new Map<T, number>()\n  for (const ea of arr) {\n    if (ea != null)\n      mm.set(\n        ea,\n        mapOr(mm.get(ea), i => i + 1, 1)\n      )\n  }\n  return toA(mm.entries()).filter(([, v]) => v > 1)\n}\n\nexport function leftPadArray<T>(arr: T[], minLength: number, pad: T) {\n  if (arr.length < minLength) {\n    arr.unshift(...times(minLength - arr.length, () => pad))\n  }\n  return arr\n}\n","import {\n  BatchCluster,\n  BatchClusterEmitter,\n  BatchClusterOptions\n} from \"batch-cluster\"\nimport { ExifTool } from \"exiftool-vendored\"\nimport process from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { minuteMs, secondMs } from \"../fe/Date\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0 } from \"../fe/Number\"\nimport { TimeoutError } from \"../fe/TimeoutError\"\nimport { toS } from \"../fe/toS\"\nimport { mkLogger } from \"./Logger\"\nimport { Pids, addPid } from \"./Pids\"\nimport { renice } from \"./Renice\"\nimport { ShortCommandTimeoutMs } from \"./ShortCommandTimeoutMs\"\nimport { EndableRank, EndableRanks, ending } from \"./async/Endable\"\nimport { EndableWrapper } from \"./async/EndableWrapper\"\nimport { onTimeout } from \"./async/TimeoutHandler\"\nimport { errorToS } from \"./error/Error\"\nimport { FatalErrorFlag } from \"./error/ErrorFlags\"\nimport { isIgnorableError } from \"./error/ErrorTypes\"\nimport { onError } from \"./error/OnError\"\nimport { isWin } from \"./platform/Platform\"\nimport { Settings } from \"./settings/Settings\"\nimport { commandTimeoutMs } from \"./volumes/VolumeTtls\"\n\n// TODO: move to ./proc/? ./bc/?\n/**\n * Rather than extend ExifTool or BatchCluster, just facade it to be an\n * Endable\n */\nexport class BatchClusterObserver<\n  T extends ExifTool | BatchCluster\n> extends EndableWrapper {\n  lastStartError: Maybe<Error>\n  lastInternalError: Maybe<Error>\n  lastTaskError: Maybe<Error>\n\n  constructor(\n    name: string,\n    readonly t: T,\n    rank: EndableRank = EndableRanks.service\n  ) {\n    super(\n      `proc.BatchClusterObserver(${name})`,\n      () => this.t.end(),\n      rank,\n      name === \"worker\" ? commandTimeoutMs() : ShortCommandTimeoutMs\n    )\n    // TODO: TYPESCRIPT SITS: this cast shouldn't be necessary\n    const bce: Pick<BatchClusterEmitter, \"on\"> = t\n    bce.on(\"childStart\", async bp => {\n      if (bp.pid == null) {\n        this.onError(\"No PID returned for \" + name, new TimeoutError())\n        return\n      }\n      this.logger.info(\"Started child process\", { pid: bp.pid })\n      renice(bp.pid).catch(err => this.onError(\"renice failed\", err))\n      addPid(\n        {\n          pid: bp.pid,\n          ppid: process.pid,\n          cmd: name,\n          maxAgeMs: t.options.maxProcAgeMillis + minuteMs\n        },\n        new Date()\n      )?.catch(err => this.onError(\"addPid failed for \" + name, err))\n    })\n    bce.on(\"startError\", error => {\n      this.lastStartError = error\n      this.onError(\"failed to start\", error)\n    })\n    bce.on(\"taskError\", (error, task) => {\n      if (errorToS(error).match(/timeout/) != null) onTimeout()\n      this.lastTaskError = error\n      this.onError(\"failed to run \" + map(task, ea => ea.command), error)\n    })\n    bce.on(\"fatalError\", error => {\n      this.onError(\"on(fatalError)\" + FatalErrorFlag, error)\n    })\n    bce.on(\"internalError\", error => {\n      this.lastInternalError = error\n      this.onError(\"internal error\", error)\n    })\n    bce.on(\"noTaskData\", (stdout, stderr, proc) => {\n      // This is probably due to streamFlushMillis being too aggressive.\n      const prior = t.options.streamFlushMillis\n      // Bump up the streamFlushMillis if it's not \"too big\" already, to try to\n      // avoid this in the future:\n      if (prior < secondMs) {\n        t.options.streamFlushMillis += 100\n        this.logger.warn(\"on(noTaskData): bumping up streamFlushMillis.\", {\n          prior,\n          new: t.options.streamFlushMillis,\n          stout: toS(stdout),\n          stderr: toS(stderr),\n          child_pid: proc?.pid\n        })\n      }\n    })\n    bce.on(\"endError\", err => {\n      this.logger.error(\"observeBatchCluster.endError()\", err)\n    })\n    bce.on(\"childEnd\", cp => {\n      if (gt0(cp?.pid)) {\n        this.logger.info(\"on(childExit)\", cp.pid)\n        void Pids.instance()?.onKill(cp.pid)\n      }\n    })\n  }\n\n  onError(reason: string, error: Error): void {\n    // Avoid stack overflow on end (where end error asks services to shut down,\n    // which causes an end error, which ...)\n    if (!this.t.ended && !ending() && isIgnorableError(error) === false) {\n      onError(this.name + \": \" + reason, error)\n    } else {\n      this.logger.warn(\"onError() (ending or ignorable): \" + reason, error)\n    }\n  }\n}\n\nexport function batchClusterOptions(\n  maxProcs: number,\n  loggerName: string\n): Partial<BatchClusterOptions> {\n  return {\n    maxProcs,\n    // Shut down idle procs after a minute or two (longer on Windows because\n    // forking is so expensive)\n    maxIdleMsPerProcess: (isWin ? 3 : 1) * minuteMs,\n    maxTasksPerProcess: Settings.maxTasksPerProcess.valueOrDefault,\n    // it shouldn't take longer than a second for node to spin up, but\n    // antivirus and slow external disks can cause huge latency:\n    spawnTimeoutMillis: commandTimeoutMs(),\n    // no fork-bombs\n    minDelayBetweenSpawnMillis: Settings.minDelayBetweenSpawnMs.valueOrDefault,\n    streamFlushMillis: Settings.streamFlushMs.valueOrDefault,\n    // We'll take care of it with the pid reaper:\n    cleanupChildProcs: false,\n    logger: lazy(() => mkLogger(loggerName))\n  }\n}\n","import { List } from \"../fe/List\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { clamp, times } from \"../fe/Number\"\n\nexport class BoundedList<T> implements Iterable<T>, List<T> {\n  // round-robin implementation:\n  private readonly store: T[]\n  private _length = 0\n  private _firstIndex = 0\n  constructor(readonly maxLength: number) {\n    if (maxLength > 1000)\n      throw new Error(\"BoundedList.maxLength of \" + maxLength)\n    this.store = new Array<T>(...(times(maxLength, () => null) as any))\n  }\n\n  /**\n   * @param index follows https://github.com/tc39/proposal-item-method\n   */\n  private mapIndex<U>(index: number, f: (storeIndex: number) => U): Maybe<U> {\n    index = Math.trunc(index) ?? 0\n    if (index < 0) {\n      index += this._length\n    }\n    return index < 0 || index >= this._length\n      ? undefined\n      : f((index + this._firstIndex + this.maxLength) % this.maxLength)\n  }\n\n  // [i: number]: T {\n  //   return this.get(i) as any\n  // }\n\n  /**\n   * @see https://github.com/tc39/proposal-item-method\n   */\n  at(n: number): T {\n    return this.mapIndex(n, idx => this.store[idx]) as T\n  }\n\n  /**\n   * @return the last value in this list\n   */\n  get last(): Maybe<T> {\n    return this.at(-1)\n  }\n\n  set(n: number, value: T) {\n    return this.mapIndex(n, idx => (this.store[idx] = value))\n  }\n\n  get length(): number {\n    return this._length\n  }\n\n  set length(l: number) {\n    this._length = clamp(0, this._length, l)\n  }\n\n  clear() {\n    this.length = 0\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<T> {\n      for (let i = 0; i < self.length; i++) {\n        yield self.mapIndex(i, ea => self.store[ea])!\n      }\n    }\n    return iter()\n  }\n\n  push(...items: T[]): number {\n    // Don't bother pushing more than the last maxLength items:\n    for (const item of items.slice(-this.maxLength)) {\n      if (this._length < this.maxLength) {\n        this._length++\n      } else {\n        // push 1 entry off the head:\n        this._firstIndex++\n        this._firstIndex = this._firstIndex % this.maxLength\n      }\n      this.mapIndex(this._length - 1, idx => {\n        this.store[idx] = item\n      })\n    }\n    return this._length\n  }\n\n  pop(): T | undefined {\n    return this.mapIndex(this._length - 1, idx => {\n      this._length--\n      return this.store[idx]\n    })\n  }\n\n  unshift(...items: T[]): number {\n    for (const item of items.reverse()) {\n      if (this._length < this.maxLength) {\n        this._length++\n      }\n      // push 1 entry off the head:\n      this._firstIndex--\n      this.mapIndex(0, idx => {\n        this.store[idx] = item\n        this._firstIndex = idx\n      })\n    }\n    return this._length\n  }\n\n  shift(): T | undefined {\n    return this.mapIndex(0, idx => {\n      this._firstIndex++\n      this._length--\n      return this.store[idx]\n    })\n  }\n\n  shiftOrFirst() {\n    return this.length > 1 ? this.shift() : this.at(0)\n  }\n\n  every(callbackfn: (value: T, index: number) => boolean): boolean {\n    for (let i = 0; i < this._length; i++) {\n      if (!callbackfn(this.at(i), i)) return false\n    }\n    return true\n  }\n\n  some(callbackfn: (value: T, index: number) => boolean): boolean {\n    for (let i = 0; i < this._length; i++) {\n      if (callbackfn(this.at(i), i)) return true\n    }\n    return false\n  }\n\n  forEach(callbackfn: (value: T, index: number) => void): void {\n    for (let i = 0; i < this._length; i++) {\n      callbackfn(this.at(i), i)\n    }\n  }\n\n  map<U>(callbackfn: (value: T, index: number) => U): U[] {\n    const arr = []\n    for (let i = 0; i < this._length; i++) {\n      arr.push(callbackfn(this.at(i), i))\n    }\n    return arr\n  }\n\n  reduce<U>(\n    callbackfn: (previousValue: U, currentValue: T, currentIndex: number) => U,\n    initialValue: U\n  ): U {\n    let acc = initialValue\n    for (let i = 0; i < this._length; i++) {\n      acc = callbackfn(acc, this.at(i), i)\n    }\n    return acc\n  }\n\n  reverse(): this {\n    for (let i = 0; i < Math.floor(this._length / 2); i++) {\n      this.mapIndex(i, from => {\n        this.mapIndex(this._length - 1 - i, to => {\n          const swap = this.store[to]\n          this.store[to] = this.store[from]\n          this.store[from] = swap\n        })\n      })\n    }\n    return this\n  }\n\n  toA(): T[] {\n    return [...this]\n  }\n\n  slice(start?: number | undefined, end?: number | undefined): T[] {\n    return [...this].slice(start, end)\n  }\n\n  // sort(compareFn?: ((a: T, b: T) => number) | undefined): this {\n  //   throw new Error(\"Method not implemented.\")\n  // }\n  // indexOf(searchElement: T, fromIndex?: number | undefined): number {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // lastIndexOf(searchElement: T, fromIndex?: number | undefined): number {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // filter<S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];\n  // filter(callbackfn: (value: T, index: number, array: T[]) => , thisArg?: any): T[];\n  // filter(callbackfn: any, thisArg?: any) {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n  // reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n  // reduce(callbackfn: any, initialValue?: any) {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n  // reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n  // reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\n  // reduceRight(callbackfn: any, initialValue?: any) {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // find<S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;\n  // find(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): T | undefined;\n  // find(predicate: any, thisArg?: any) {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // findIndex(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): number {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fill(value: T, start?: number | undefined, end?: number | undefined): this {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // copyWithin(target: number, start: number, end?: number | undefined): this {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // entries(): IterableIterator<[number, T]> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // keys(): IterableIterator<number> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // values(): IterableIterator<T> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // [Symbol.unscopables](): { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; } {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // includes(searchElement: T, fromIndex?: number | undefined): boolean {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n}\n","import { toS } from \"../fe/toS\"\n\nconst ByteOrderMarks: { bom: number[]; encoding: BufferEncoding }[] = [\n  { bom: [0xef, 0xbb, 0xbf], encoding: \"utf8\" },\n  { bom: [0xff, 0xfe], encoding: \"utf16le\" }\n]\n\n// tested by SettingsIO.spec.ts:\nexport function debom(b: Buffer): string {\n  for (const { bom, encoding } of ByteOrderMarks) {\n    if (bufferStartsWith(b, bom)) {\n      return b.subarray(bom.length).toString(encoding)\n    }\n  }\n  return b.toString()\n}\n\nexport function bufferToString(b: Buffer | string): string {\n  return Buffer.isBuffer(b) ? debom(b) : toS(b)\n}\n\nexport function bufferStartsWith(b: Buffer, prefix: number[]) {\n  return prefix.every((ea, idx) => b[idx] === ea)\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { DefaultNormalizer } from \"./StringNormalizer\"\n\nexport class CaseInsensitiveMap<V> implements Map<string, V> {\n  // the value contains the original-cased key\n  private readonly store = new Map<string, [string, V]>()\n\n  constructor(\n    initialContents: [string, V][] = [],\n    readonly normalizer = DefaultNormalizer\n  ) {\n    for (const [k, v] of initialContents) {\n      this.set(k, v)\n    }\n  }\n  get(key: string): Maybe<V> {\n    const k = this.normalizer(key)\n    return k == null ? undefined : this.store.get(k)?.[1]\n  }\n  lookup(key: Maybe<string>): Maybe<[string, V]> {\n    const k = this.normalizer(key)\n    return k == null ? undefined : this.store.get(k)\n  }\n  has(key: Maybe<string>): boolean {\n    const k = this.normalizer(key)\n    return k == null ? false : this.store.has(k)\n  }\n  set(key: Maybe<string>, value: V): this {\n    const k = this.normalizer(key)\n    if (key != null && k != null) this.store.set(k, [key, value])\n    return this\n  }\n  clear(): void {\n    this.store.clear()\n  }\n  delete(key: string): boolean {\n    const k = this.normalizer(key)\n    return k == null ? false : this.store.delete(k)\n  }\n  forEach(\n    callbackfn: (value: V, key: string, map: Map<string, V>) => void\n  ): void {\n    this.store.forEach(v => callbackfn(v[1], v[0], this))\n  }\n  get size(): number {\n    return this.store.size\n  }\n  entries(): IterableIterator<[string, V]> {\n    return this.store.values()\n  }\n  keys(): IterableIterator<string> {\n    return [...this.store.values()].map(ea => ea[0])[Symbol.iterator]()\n  }\n  values(): IterableIterator<V> {\n    return [...this.store.values()].map(ea => ea[1])[Symbol.iterator]()\n  }\n  [Symbol.iterator](): IterableIterator<[string, V]> {\n    return this.entries()\n  }\n  get [Symbol.toStringTag](): string {\n    return \"CaseInsensitiveMap\"\n  }\n\n  pick(...keys: string[]): Record<string, V> {\n    const result: Record<string, V> = {}\n    for (const key of keys) {\n      const l = this.lookup(key)\n      if (l != null) {\n        result[l[0]] = l[1]\n      }\n    }\n    return result\n  }\n}\n","import { uniq } from \"../fe/Array\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { MultiMap } from \"../fe/MultiMap\"\nimport * as o from \"../fe/Object\"\nimport { toA } from \"../fe/toA\"\nimport { diceCoeff } from \"./StringSimilarity\"\n\n/**\n * ONLY BASE-ASCII CASE-INSENSITIVE!\n */\nexport class CaseInsensitiveValued<V> {\n  private readonly m: MultiMap<string, string>\n  constructor(\n    readonly obj: o.Valued<V>,\n    readonly synonyms: (key: string, value: V) => Maybe<string[]> = () =>\n      undefined\n  ) {\n    this.m = new MultiMap()\n    this.vacuum()\n  }\n\n  vacuum() {\n    this.m.clear()\n    for (const [k, v] of o.entries(this.obj)) {\n      for (const key of uniq(\n        [k, ...toA(this.synonyms(k, v))].map(ea => ea.toLowerCase())\n      )) {\n        this.m.add(key, k)\n      }\n    }\n    this.m.vacuum()\n  }\n\n  lookup(key: string): Maybe<{ key: string; value: V }> {\n    if (key == null) return\n    const value = this.obj[key]\n    return value != null\n      ? { key, value }\n      : this.getFirst(this.m.get(key.toLowerCase()))\n  }\n\n  lookupNearest(key: string, minDiceCoeff = 0.4) {\n    const exact = this.lookup(key)\n    if (exact != null) return exact\n    let bestCoeff = -1\n    let best: Maybe<{ key: string; value: V }>\n    for (const [k, arr] of this.m.entries()) {\n      const coeff = diceCoeff(k, key)\n      if (coeff > minDiceCoeff && coeff > bestCoeff) {\n        const newBest = this.getFirst(arr)\n        if (newBest != null) {\n          best = newBest\n          bestCoeff = coeff\n        }\n      }\n    }\n\n    return best\n  }\n\n  get(key: string): Maybe<V> {\n    return this.lookup(key)?.value\n  }\n\n  getFirst(keys: Maybe<string[]>): Maybe<{ key: string; value: V }> {\n    if (keys == null) return\n    for (const k of keys) {\n      // return the first non-null value:\n      const value = this.obj[k]\n      if (value != null) return { key: k, value }\n    }\n    return\n  }\n\n  delete(key: string) {\n    const lc = key.toLowerCase()\n    const arr = this.m.get(lc)\n    if (arr != null) {\n      for (const k of arr) {\n        delete this.obj[k]\n      }\n      this.m.delete(lc)\n    }\n  }\n\n  pick(...keys: string[]): Record<string, V> {\n    const result: Record<string, V> = {}\n    for (const key of keys) {\n      const l = this.lookup(key)\n      if (l?.key != null) {\n        result[l.key] = l.value\n      }\n    }\n    return result\n  }\n}\n","import { noColor } from \"./NoColor\"\n\n// we're not referencing Setting.logColor here to break deploop:\nlet colorEnabled = !noColor()\n\nexport function setColorEnabled(on?: boolean) {\n  colorEnabled = on ?? !noColor()\n}\n\nfunction withAsciiEscape(on: number, off: number) {\n  return (msg: string) =>\n    colorEnabled ? `\\u001b[${on}m${msg}\\u001b[${off}m` : msg\n}\n\n// https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit\n\nexport const reset = withAsciiEscape(0, 0)\nexport const bold = withAsciiEscape(1, 22)\nexport const dim = withAsciiEscape(2, 22)\nexport const italic = withAsciiEscape(3, 23)\nexport const underline = withAsciiEscape(4, 24)\nexport const overline = withAsciiEscape(53, 55)\nexport const inverse = withAsciiEscape(7, 27)\nexport const hidden = withAsciiEscape(8, 28)\nexport const strikethrough = withAsciiEscape(9, 29)\n\nexport const black = withAsciiEscape(30, 39)\nexport const red = withAsciiEscape(31, 39)\nexport const green = withAsciiEscape(32, 39)\nexport const yellow = withAsciiEscape(33, 39)\nexport const blue = withAsciiEscape(34, 39)\nexport const magenta = withAsciiEscape(35, 39)\nexport const cyan = withAsciiEscape(36, 39)\n\nexport const lightGrey = withAsciiEscape(37, 39)\nexport const darkGrey = withAsciiEscape(90, 39)\nexport const redBright = withAsciiEscape(91, 39)\nexport const greenBright = withAsciiEscape(92, 39)\nexport const yellowBright = withAsciiEscape(93, 39)\nexport const blueBright = withAsciiEscape(94, 39)\nexport const magentaBright = withAsciiEscape(95, 39)\nexport const cyanBright = withAsciiEscape(96, 39)\nexport const white = withAsciiEscape(97, 39)\n\nexport const bgBlack = withAsciiEscape(40, 49)\nexport const bgRed = withAsciiEscape(41, 49)\nexport const bgGreen = withAsciiEscape(42, 49)\nexport const bgYellow = withAsciiEscape(43, 49)\nexport const bgBlue = withAsciiEscape(44, 49)\nexport const bgMagenta = withAsciiEscape(45, 49)\nexport const bgCyan = withAsciiEscape(46, 49)\n\nexport const bgLightGrey = withAsciiEscape(47, 49)\nexport const bgDarkGrey = withAsciiEscape(100, 49)\nexport const bgRedBright = withAsciiEscape(101, 49)\nexport const bgGreenBright = withAsciiEscape(102, 49)\nexport const bgYellowBright = withAsciiEscape(103, 49)\nexport const bgBlueBright = withAsciiEscape(104, 49)\nexport const bgMagentaBright = withAsciiEscape(105, 49)\nexport const bgCyanBright = withAsciiEscape(106, 49)\nexport const bgWhite = withAsciiEscape(107, 49)\n\n// export function ansiColor(msg: string, rgb: Triplet) {\n//   const [r,g,b] = clampRGB(rgb)\n//   return `\\u001b[38;2;${r};${g};${b}m\"`\n// }\n","import { sort, sortBy } from \"../fe/ArraySort\"\nimport { isNumber, mapNumericOr } from \"../fe/Number\"\nimport { tap } from \"../fe/Object\"\nimport { toS } from \"../fe/toS\"\nimport { Average } from \"./math/Average\"\nimport { sum } from \"./math/Vector\"\n\nexport class CountingSet<K extends number | string> {\n  private readonly m = new Map<K, number>()\n\n  incr(key: K, count: number = 1): number {\n    const v = this.get(key) + count\n    if (v === 0) this.m.delete(key)\n    else this.m.set(key, v)\n    return v\n  }\n\n  get(key: K): number {\n    return this.m.get(key) ?? 0\n  }\n\n  /**\n   * If no keys are provided, return the max value\n   */\n  max(...arr: K[]): number {\n    return Math.max(\n      ...(arr.length === 0 ? this.m.values() : arr.map(ea => this.get(ea)))\n    )\n  }\n\n  has(key: K): boolean {\n    return this.m.has(key)\n  }\n\n  delete(key: K): boolean {\n    return this.m.delete(key)\n  }\n\n  /**\n   * Return the number of unique non-zero `incr`emented keys\n   */\n  get size(): number {\n    return this.m.size\n  }\n\n  /**\n   * Return the sum of all counts\n   */\n  get countSum(): number {\n    return sum(this.m.values())\n  }\n\n  keys(): IterableIterator<K> {\n    return this.m.keys()\n  }\n\n  /**\n   * @return if all keys are numeric, the average value of keys, otherwise, `undefined`.\n   */\n  keyAvg() {\n    const avg = new Average(0)\n    for (const k of this.keys()) {\n      if (isNumber(k)) {\n        avg.push(k)\n      } else {\n        return\n      }\n    }\n    return avg.avg\n  }\n\n  entries(): IterableIterator<[K, number]> {\n    return this.m.entries()\n  }\n\n  toJSON() {\n    return this.toRecord()\n  }\n\n  toRecord(): Record<string, number> {\n    const obj: any = {}\n    for (const [k, v] of this.m.entries()) {\n      obj[toS(k)] = v\n    }\n    return obj\n  }\n\n  /** Multimodal ties are solved by proximity to mean */\n  entriesByCountDesc(): [K, number][] {\n    const keyAvg = this.keyAvg()\n    return sortBy([...this.entries()], ([k, v]) => [\n      -v,\n      mapNumericOr(keyAvg, ea => Math.abs((k as number) - ea), 0)\n    ])\n  }\n\n  top(n = 1): [K, number][] {\n    return this.entriesByCountDesc().slice(0, n)\n  }\n\n  topKeys(n = 1): K[] {\n    return this.top(n).map(ea => ea[0])\n  }\n\n  get averageCounts(): Average {\n    return tap(new Average(this.size), a =>\n      [...this.m.values()].forEach(ea => a.push(ea))\n    )\n  }\n\n  forEach(callbackfn: (count: number, key: K) => void): void {\n    this.m.forEach(callbackfn)\n  }\n\n  clear(): void {\n    this.m.clear()\n  }\n\n  addAll(s: this) {\n    for (const [k, i] of s.entries()) {\n      this.incr(k, i)\n    }\n    return this\n  }\n\n  get toS() {\n    return sort([...this.keys()])\n      .map(key => key + \" \" + this.get(key))\n      .join(\"\\n\")\n  }\n\n  valuesToA<T>(f: (k: K) => T): T[] {\n    const arr: T[] = []\n    // pre-allocate:\n    arr.length = sum(this.m.values())\n    let idx = 0\n    for (const [k, count] of this.m.entries()) {\n      const value = f(k)\n      arr.fill(value, idx, idx + count)\n      idx += count\n    }\n    return arr\n  }\n}\n","export const DefaultSensitiveEnvRegexPattern = [\n  \"key(?!word)\",\n  \"aws_\",\n  \"npm_\",\n  \"pass\",\n  \"private\",\n  \"secret\",\n  \"token\"\n].join(\"|\")\n","import { lazy } from \"../core/Lazy\"\nimport { SimpleAppName } from \"./AppName\"\nimport { isElectron } from \"./platform/Platform\"\nimport { Settings } from \"./settings/Settings\"\n\nexport const EditionName = lazy(\n  () =>\n    SimpleAppName +\n    (isElectron\n      ? ` for Desktops (${Settings.updateChannel.valueOrDefault} channel)`\n      : \" for Servers\")\n)\n","import { map } from \"../fe/Maybe\"\nimport { SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { Thunk } from \"../fe/Thunk\"\nimport { Logger } from \"./Logger\"\n\nexport class Elapsed {\n  private ts = Date.now()\n  constructor(\n    readonly l: Logger,\n    readonly listener?: (name: string, elapsedMs: number) => any\n  ) {}\n\n  elapsed(msg: string) {\n    const now = Date.now()\n    const diff = now - this.ts\n    this.ts = now\n    map(this.listener, ea => ea(msg, diff))\n    if (diff > 2) {\n      this.l.log(diff > 500 ? \"warn\" : diff > 100 ? \"info\" : \"debug\", msg, {\n        elapsedMs: diff\n      })\n    }\n  }\n}\n\nexport function elapsed<T>(t: Thunk<T>): { elapsedMs: number; result: T } {\n  const start = Date.now()\n  const result = t()\n  return { elapsedMs: Date.now() - start, result }\n}\n\nexport async function thenElapsed<T>(\n  t: SyncOrAsync<T>\n): Promise<{ elapsedMs: number; result: T }> {\n  const start = Date.now()\n  const result = await t\n  return { elapsedMs: Date.now() - start, result }\n}\n","import { blank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { StringValued } from \"../fe/Object\"\nimport { splitCompactLines } from \"./fs/CRLF\"\n\n/**\n * Parser for sh environment variable assignments, like `FOO=\"bar\"`.\n *\n * NO, WE DON'T SUPPORT NEWLINES IN VALUES. Use `\\n` like a reasonable person.\n *\n * Pairs may be one per line or joined on a single line.\n *\n * \\# Comments are removed.\n */\nexport function parseEnvTokens({\n  input,\n  lowerCaseKeys\n}: {\n  input: Maybe<string>\n  lowerCaseKeys: boolean\n}): StringValued {\n  const result: StringValued = {}\n  if (blank(input)) return result\n  let m\n  for (const line of splitCompactLines(input)) {\n    const re =\n      /(?:\\s*#.*$)|\\s*(?:export\\s+)?(?<key>[a-z_]+)\\s*=\\s*([\"'])?(?<val>(?:\\\\[\"']|.)*?)(\\2)(?:$|\\s+|#.*?)\\s*/gim\n\n    while ((m = re.exec(line)) != null) {\n      if (m.groups == null) continue\n      const { key, val } = m.groups\n      if (blank(key) || val == null) continue\n      const str = val.replace(/\\\\n/g, \"\\n\").replace(/\\\\([\"'])/g, \"$1\") // unescape escaped quotes\n      // DON'T DO THIS: it makes values like \"20.10\" turn into 20.1\n      // const val = blank(quot) && isNumeric(v) ? toFloat(v) : v\n      result[lowerCaseKeys ? key.toLowerCase() : key] = str\n    }\n  }\n  return result\n}\n","import { eql } from \"../fe/Eql\"\nimport { map2Or } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { pick } from \"../fe/Object\"\nimport { MaybeSyncOrAsync } from \"../fe/SyncOrAsync\"\n\n// TODO: INLINE\nexport { eql } from \"../fe/Eql\"\nexport function definedAndEql<T>(a: Maybe<T>, b: Maybe<T>): boolean {\n  return a == null || b == null ? false : eql(a, b)\n}\n\nexport function definedAndNotEql<T>(a: Maybe<T>, b: Maybe<T>): boolean {\n  return a != null && b != null && !eql(a, b)\n}\n\nexport async function eqlAsync<T>(\n  a: MaybeSyncOrAsync<T>,\n  b: MaybeSyncOrAsync<T>\n): Promise<boolean> {\n  return map2Or(await a, await b, eql, () => false)\n}\n\nexport function eqlPicked<T, K extends keyof T>(\n  a: Maybe<T>,\n  b: Maybe<T>,\n  ...keys: K[]\n): boolean {\n  return a == null || b == null\n    ? false\n    : eql(pick(a, ...keys), pick(b, ...keys))\n}\n\nexport async function eqlAsyncPicked<T, K extends keyof T>(\n  a: MaybeSyncOrAsync<T>,\n  b: MaybeSyncOrAsync<T>,\n  ...keys: K[]\n): Promise<boolean> {\n  return map2Or(\n    await a,\n    await b,\n    (a1, a2) => eql(pick(a1, ...keys), pick(a2, ...keys)),\n    () => false\n  )\n}\n","import { examplesNativePath_ } from \"./ExamplesNativePath\"\nimport { lazy } from \"./Lazy\"\nimport { PosixFile } from \"./fs/PosixFile\"\n\n// This can't be a PosixFile: it causes a dep loop.\nexport const examples = lazy(() => PosixFile.for(examplesNativePath_()))\n","import { lazy } from \"../core/Lazy\"\nimport { ancestors, childrenSync } from \"./fs/Ancestors\"\nimport { joinNativePath } from \"./fs/Path\"\n\n// This was broken out of ExamplesDir so assertEqlPrior could avoid a deploop\nexport const examplesNativePath_ = lazy(() => {\n  const exampleParentDir = ancestors(__dirname).find(ea =>\n    childrenSync(ea).some(f => f === \"examples\")\n  )\n  if (exampleParentDir == null) {\n    throw new Error(\"Couldn't find the examples directory\")\n  }\n  return joinNativePath([exampleParentDir, \"examples\"])\n})\n","export abstract class ExtensibleFunction<T> extends Function {\n  readonly _self: ExtensibleFunction<T>\n  constructor() {\n    super(\"...args\", \"return this._self._call(...args)\")\n    const self = this.bind(this)\n    this._self = self\n    return self\n  }\n  abstract _call(): T\n}\n","import { inspect } from \"util\"\nimport { isNotEmpty, uniq } from \"../fe/Array\"\nimport { GetOrSet } from \"../fe/GetOrSet\"\nimport { orElse } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0, isNumber, round } from \"../fe/Number\"\nimport { toS } from \"../fe/toS\"\nimport { union } from \"./Set\"\nimport { setUnrefInterval } from \"./async/Timers\"\n\n// simple null-safe keys()\nfunction keys(o: any): string[] {\n  return o == null ? [] : Object.keys(o)\n}\n\n/**\n * First-in-first-out cache. Implementation inspired by\n * https://github.com/dominictarr/hashlru.\n *\n * https://en.wikipedia.org/wiki/Cache_replacement_policies\n */\nexport class FifoCache<V> implements GetOrSet<string, V> {\n  private currentCache!: Record<string, V>\n  private setsSinceLastSpill: number = 0\n  private priorCache!: Record<string, V>\n  private clearInterval?: NodeJS.Timeout\n\n  private readonly expireListeners: ((k: string, v: V) => void)[] = []\n\n  constructor(\n    readonly maxSize: number,\n    readonly clearEveryMs?: number\n  ) {\n    if (maxSize < 1) {\n      throw new Error(\"maxSize must be positive\")\n    }\n    if (maxSize > 30_000) {\n      // 30 seconds\n      throw new Error(\"maxSize is too big\")\n    }\n    // Set up _size and caches:\n    this.clear()\n    if (gt0(clearEveryMs)) {\n      this.clearInterval = setUnrefInterval(\n        () => {\n          this.spill()\n        },\n        round(clearEveryMs / 2)\n      )\n    }\n  }\n\n  private spill() {\n    if (\n      this.priorCache != null &&\n      this.currentCache != null &&\n      isNotEmpty(this.expireListeners)\n    ) {\n      for (const k in this.priorCache) {\n        if (this.currentCache[k] == null) {\n          const v = this.priorCache[k]\n          if (v != null) {\n            for (const el of this.expireListeners) {\n              el(k, v)\n            }\n          }\n        }\n      }\n    }\n    this.priorCache = this.currentCache ?? Object.create(null)\n    this.currentCache = Object.create(null)\n    this.setsSinceLastSpill = 0\n  }\n\n  [inspect.custom]() {\n    return {\n      ...this.priorCache,\n      ...this.currentCache\n    }\n  }\n\n  end() {\n    if (this.clearInterval != null) clearInterval(this.clearInterval)\n  }\n\n  clear(): this {\n    this.visit((k, v) => {\n      for (const el of this.expireListeners) {\n        el(k, v)\n      }\n    })\n    this.currentCache = Object.create(null)\n    this.priorCache = Object.create(null)\n    this.setsSinceLastSpill = 0\n    return this\n  }\n\n  get size(): number {\n    if (this.currentCache == null || this.priorCache == null) return 0\n    let sum = 0\n    for (const k of union(keys(this.priorCache), keys(this.currentCache))) {\n      if (this.has(k)) sum++\n    }\n    return sum\n  }\n\n  has(key: string): boolean {\n    return this.currentCache[key] != null || this.priorCache[key] != null\n  }\n\n  keys(): string[] {\n    return uniq([...keys(this.priorCache), ...keys(this.currentCache)]).filter(\n      k => null != this.currentCache[k] ?? this.priorCache[k]\n    )\n  }\n\n  delete(key: string) {\n    // We don't decrement size here, because we don't use `delete\n    // this.currentCache[key]` (because delete is slow (!!))\n    const v = this.currentCache[key]\n    if (v != null) {\n      this.currentCache[key] = undefined as any\n      for (const el of this.expireListeners) {\n        el(key, v)\n      }\n    }\n    const v2 = this.priorCache[key]\n    if (v2 != null) {\n      this.priorCache[key] = undefined as any\n      if (v == null) {\n        for (const el of this.expireListeners) {\n          el(key, v2)\n        }\n      }\n    }\n  }\n\n  visit(visitor: (key: string, value: V) => any) {\n    for (const k of union(keys(this.priorCache), keys(this.currentCache))) {\n      const v = this.currentCache[k] ?? this.priorCache[k]\n      if (v != null) visitor(k, v)\n    }\n  }\n\n  deleteIf(predicate: (key: string, value: V) => boolean) {\n    for (const k of this.keys()) {\n      const v = orElse(this.currentCache[k], this.priorCache[k])\n      if (v != null) {\n        if (predicate(k, v)) {\n          this.delete(k)\n        }\n      }\n    }\n  }\n\n  get(key: string | number): Maybe<V> {\n    key = toS(key)\n    return this.currentCache[key] ?? this.priorCache[key]\n  }\n\n  set(key: string | number, value: V) {\n    key = toS(key)\n    if (this.currentCache[key] == null) {\n      if (this.setsSinceLastSpill >= this.maxSize) this.spill()\n      this.setsSinceLastSpill++\n    }\n    this.currentCache[key] = value\n  }\n\n  getOrSet(key: string | number, valueThunk: () => V): V {\n    key = toS(key)\n    const prior = this.get(key)\n    if (prior != null) return prior\n\n    const v = valueThunk()\n    this.set(key, v)\n    return v\n  }\n\n  on(_event: \"expire\", listener: (k: string, v: V) => void) {\n    this.expireListeners.push(listener)\n  }\n}\n\nexport interface Placeholder {\n  __uid: number\n  __start: number\n}\n\nexport function isPlaceholder(s: any): s is Placeholder {\n  return s != null && isNumber(s.__uid) && isNumber(s.__start)\n}\n","import {\n  moveSync,\n  outputFile,\n  readFileSync,\n  unlink,\n  unlinkSync\n} from \"fs-extra\"\nimport { rm } from \"fs/promises\"\nimport { join } from \"path\"\nimport { lazy } from \"../core/Lazy\"\nimport { secondMs } from \"../fe/Date\"\nimport { stringify } from \"../fe/JSON\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0, gte } from \"../fe/Number\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { TimeoutError } from \"../fe/TimeoutError\"\nimport { toS } from \"../fe/toS\"\nimport { bufferToString } from \"./Buffer\"\nimport { FifoCache } from \"./FifoCache\"\nimport { parseJSON } from \"./JSON\"\nimport { mkLogger } from \"./Logger\"\nimport { shortFsStringSha } from \"./StringHash\"\nimport { Deferred } from \"./async/Deferred\"\nimport { filestamp } from \"./date/Filestamp\"\nimport { isMtimeRecentSync } from \"./fs/StatSync\"\nimport { Settings } from \"./settings/Settings\"\n\n// NOTE: this is used statically by Shim, so BE CAREFUL WITH NEW CORE IMPORTS:\n// they will probably cause a dependency loop.\n\nexport type FifoCacheAsyncOpts = ConstructorParameters<typeof FifoCacheAsync>[0]\n\nexport class FifoCacheAsync<V = any> {\n  readonly #logger = lazy(() => mkLogger(this.opts.name))\n  static cacheDir: Maybe<string> // < set by configDir()\n  private cacheHitsSync = 0\n  private cacheHitsAsync = 0\n  private cacheMisses = 0\n  private rejections = 0\n  private timeouts = 0\n  readFsCache = false\n  writeFsCache = false\n  readonly cache: FifoCache<Deferred<V> | V>\n  constructor(\n    readonly opts: {\n      name: string\n      maxSize: number\n      timeoutMs: number\n      clearEveryMs?: number\n      /** does fs cache make sense for this instance? Used by shim to set the read and write flags properly */\n      useFsCache?: boolean\n      fsCacheTtlMs?: number\n      /** explicit setting only for tests: */\n      readFsCache?: boolean\n      /** explicit setting only for tests: */\n      writeFsCache?: boolean\n    }\n  ) {\n    this.cache = new FifoCache(opts.maxSize, opts.clearEveryMs)\n    this.readFsCache = opts.readFsCache ?? this.readFsCache\n    this.writeFsCache = opts.writeFsCache ?? this.writeFsCache\n  }\n\n  get name() {\n    return this.opts.name\n  }\n\n  get size() {\n    return this.cache.size\n  }\n\n  get fsCacheTtlMs() {\n    return (\n      this.opts.fsCacheTtlMs ??\n      this.opts.clearEveryMs ??\n      this.opts.timeoutMs * 5\n    )\n  }\n\n  mergeStats(stats: ReturnType<FifoCacheAsync[\"stats\"]>) {\n    this.cacheHitsSync += stats.cacheHitsSync\n    this.cacheHitsAsync += stats.cacheHitsAsync\n    this.cacheMisses += stats.cacheMisses\n    this.rejections += stats.rejections\n    this.timeouts += stats.timeouts\n  }\n\n  stats() {\n    return {\n      size: this.size,\n      cacheHitsSync: this.cacheHitsSync,\n      cacheHitsAsync: this.cacheHitsAsync,\n      cacheMisses: this.cacheMisses,\n      rejections: this.rejections,\n      timeouts: this.timeouts\n    }\n  }\n\n  has(key: string) {\n    return this.cache.has(key)\n  }\n\n  #fsCacheForKey(key: string) {\n    if (FifoCacheAsync.cacheDir == null) return\n    const sha = shortFsStringSha(key)\n    return join(\n      FifoCacheAsync.cacheDir,\n      this.name,\n      sha.slice(0, 2),\n      sha.slice(2) + \".json\"\n    )\n  }\n\n  hasFsCacheSync(key: string, fsCachePath?: string) {\n    return isMtimeRecentSync(\n      fsCachePath ?? this.#fsCacheForKey(key),\n      this.fsCacheTtlMs\n    )\n  }\n\n  #readFsCacheSync(key: string): Maybe<V> {\n    if (!this.readFsCache) return\n    const fsCachePath = this.#fsCacheForKey(key)\n    if (fsCachePath != null && this.hasFsCacheSync(key, fsCachePath)) {\n      try {\n        const result = parseJSON<V>(bufferToString(readFileSync(fsCachePath)))\n        this.cache.set(key, result!)\n        return this.#logger().tap({\n          msg: \"#readFsCacheSync(): hit\",\n          result,\n          meta: { key }\n        })\n      } catch {\n        //\n      }\n    }\n    if (fsCachePath != null) {\n      void unlink(fsCachePath).catch(() => null)\n    }\n    this.#logger().debug(\"#readFsCacheSync(): miss\", { key })\n    return\n  }\n\n  #writeFsCache(key: string, v: V) {\n    if (this.writeFsCache) {\n      const fsCachePath = this.#fsCacheForKey(key)\n      if (fsCachePath != null) {\n        this.#logger().debug(\"#writeFsCache()\", { key })\n        return outputFile(fsCachePath, stringify(v)).catch(async error => {\n          this.#logger().error(\"#writeFsCache() failed\", { error })\n          await unlink(fsCachePath)\n        })\n      }\n    }\n    return\n  }\n\n  /**\n   * If the prior getOrSetAsync() threw an error, this method will also.\n   */\n  get_(key: string): MaybeSyncOrAsync<V> {\n    if (!this.cache.has(key)) {\n      this.cacheMisses++\n      return\n    }\n    const v = this.cache.get(key) ?? this.#readFsCacheSync(key)\n    if (v instanceof Deferred) {\n      if (v.isRejected) {\n        throw v.error\n      } else if (v.isPending) {\n        this.cacheHitsAsync++\n        return v.promise\n      } else {\n        this.cacheHitsSync++\n        return v.value\n      }\n    } else if (v instanceof Error) {\n      throw v\n    } else {\n      this.cacheHitsSync++\n      return v\n    }\n  }\n\n  /**\n   * @return a value if the key was in cache and the promise was resolved.\n   */\n  get(key: string): Maybe<V> {\n    const v = this.cache.get(key) ?? this.#readFsCacheSync(key)\n    if (v == null || (v instanceof Deferred && v.isPending)) {\n      this.cacheMisses++\n    } else {\n      this.cacheHitsSync++\n    }\n    return v instanceof Deferred ? v.value : v\n  }\n\n  clear() {\n    this.cache.clear()\n    this.cacheHitsSync = 0\n    this.cacheHitsAsync = 0\n    this.cacheMisses = 0\n    this.rejections = 0\n    this.timeouts = 0\n    if (FifoCacheAsync.cacheDir != null) {\n      try {\n        const d = join(FifoCacheAsync.cacheDir, this.name)\n        const victim = d + \".trash-\" + filestamp()\n        moveSync(d, victim)\n        return rm(victim, {\n          recursive: true,\n          maxRetries: 3,\n          retryDelay: secondMs,\n          force: true\n        }).catch()\n      } catch {\n        // ignore\n      }\n    }\n    return\n  }\n\n  delete(key: string, deleteFsCache = true) {\n    if (deleteFsCache) {\n      map(this.#fsCacheForKey(key), ea => {\n        try {\n          unlinkSync(ea)\n        } catch {\n          //\n        }\n      })\n    }\n    return this.cache.delete(key)\n  }\n\n  deleteIf(predicate: (key: string) => boolean) {\n    for (const k of this.cache.keys()) {\n      if (predicate(k)) {\n        this.delete(k)\n      }\n    }\n  }\n\n  set(key: string, value: V): V {\n    this.cache.set(key, value)\n    return value\n  }\n\n  getOrSet(key: string, valueThunk: () => V): V {\n    const prior = this.get(key)\n    if (prior != null) {\n      if (prior instanceof Error) {\n        throw prior\n      } else {\n        return prior\n      }\n    }\n    return this.set(key, valueThunk())\n  }\n\n  // THIS METHOD IS NOT ASYNC: it relies on stable internal state!\n  getOrSetAsync(key: number | string, later: () => Promise<V>): SyncOrAsync<V> {\n    const start = Date.now()\n    const k = toS(key)\n    {\n      const prior = this.get_(k)\n      if (prior != null) {\n        return prior instanceof Deferred ? prior.promise : prior\n      }\n    }\n\n    const d = new Deferred<V>(this.opts.name).observe(later())\n    // Add the deferred to the cache ASAP:\n    this.cache.set(k, d)\n\n    if (gt0(this.opts.timeoutMs)) {\n      void d.setTimeout(this.opts.timeoutMs)\n    }\n\n    void d.promise.then(\n      result => {\n        // remove the Deferred and release the scoped memory:\n        this.set(k, result)\n        if (\n          gt0(Settings.fsCacheSlowMs.valueOrDefault) &&\n          gte(Date.now() - start, Settings.fsCacheSlowMs.valueOrDefault - 1)\n        ) {\n          return this.#writeFsCache(k, result)\n        }\n        return\n      },\n      error => {\n        this.cache.set(k, error)\n        this.rejections++\n        if (error instanceof TimeoutError) {\n          this.timeouts++\n        }\n      }\n    )\n    return d.promise\n  }\n}\n","export class FifoSet<T> implements Set<T> {\n  readonly [Symbol.toStringTag] = \"FifoSet\"\n  readonly values = (): IterableIterator<T> => this.delegate.values()\n  readonly keys = this.values\n\n  private readonly delegate = new Set<T>()\n\n  constructor(readonly maxSize: number) {}\n\n  get size(): number {\n    return this.delegate.size\n  }\n\n  add(value: T): this {\n    this.delegate.add(value)\n    this.vacuum()\n    return this\n  }\n\n  clear(): this {\n    this.delegate.clear()\n    return this\n  }\n\n  delete(value: T): boolean {\n    return this.delegate.delete(value)\n  }\n\n  forEach(callbackfn: (value: T, index: T, set: Set<T>) => void): void {\n    this.delegate.forEach(callbackfn)\n  }\n\n  has(value: T): boolean {\n    return this.delegate.has(value)\n  }\n\n  entries(): IterableIterator<[T, T]> {\n    return this.delegate.entries()\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    return this.values()\n  }\n\n  /**\n   * remove all expired entries\n   */\n  private vacuum() {\n    if (this.size > this.maxSize) {\n      const iter = this.delegate.entries()\n      while (this.size > this.maxSize) {\n        this.delete(iter.next().value[0])\n      }\n    }\n  }\n}\n","import { lazy } from \"../core/Lazy\"\nimport { last, range } from \"../fe/Array\"\nimport { blank, notBlank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { max_ } from \"../fe/Number\"\nimport { fromEntries, values } from \"../fe/Object\"\nimport { mkLogger } from \"./Logger\"\nimport { escapeRegExp } from \"./RegExp\"\nimport { indexOfNonSpace, isString, lastIndexOfNonSpace } from \"./String\"\nimport { splitLines } from \"./fs/CRLF\"\n\nexport interface Header<T> {\n  text: string & keyof T\n  greedyLeft?: boolean\n  greedyRight?: boolean\n}\n\nclass IndexedHeader<T> {\n  readonly text: string\n  readonly greedyLeft: boolean\n  indexOf?: number\n  leftIdx?: number\n  rightIdx?: number\n  constructor(h: Header<T> | string) {\n    this.text = isString(h) ? h : h.text\n    this.greedyLeft = isString(h) ? false : h[\"greedyLeft\"] ?? false\n  }\n\n  toEntry(row: string): [string, string] {\n    return [this.text, row.substring(this.leftIdx!, this.rightIdx).trim()]\n  }\n}\n\nconst logger = lazy(() => mkLogger(\"Fixed\"))\n\nexport type Headers<T> = (Header<T> | string)[]\n\n/**\n * Parse fixed-width input into an array of objects\n */\nexport function parseFixed<T>(\n  headers: Headers<T>,\n  table: string,\n  warnIfMissingHeaders = true\n): T[] {\n  return new Fixed(headers, table, warnIfMissingHeaders).entries\n}\n\n/**\n * Support for parsing fixed-width tabular data\n */\nexport class Fixed<T> {\n  readonly headers: IndexedHeader<T>[]\n  readonly headerRow: string\n  readonly skippedHeaders: string[] = []\n  readonly rows: string[] // doesn't include the header row!\n  readonly entries: T[]\n  readonly blankColumns: Set<number>\n\n  constructor(\n    headers: Headers<T>,\n    table: string,\n    readonly warnIfMissingHeaders = true\n  ) {\n    this.rows = splitLines(table)\n    this.headerRow = this.rows.shift()!\n    const maxLen = max_(...this.rows.map(ea => ea.length))\n    this.blankColumns = new Set(\n      range(0, maxLen).filter(idx => this.rows.every(ea => blank(ea[idx])))\n    )\n\n    this.headers = this.extractHeaders(headers.map(ea => new IndexedHeader(ea)))\n    this.entries = this.rows\n      .map(row => this.headers.map(h => h.toEntry(row)))\n      .map(arr => fromEntries(arr))\n      // Remove rows that have all blank values:\n      .filter(row => values(row).some(notBlank))\n  }\n\n  /**\n   * @param fromIdx inclusive\n   * @param toIdx inclusive\n   */\n  private firstBlankColumn(fromIdx: number, toIdx: number): Maybe<number> {\n    for (let idx = fromIdx; idx !== toIdx; toIdx > fromIdx ? idx++ : idx--) {\n      if (this.blankColumns.has(idx)) return idx\n    }\n    if (this.blankColumns.has(toIdx)) return toIdx\n    if (fromIdx === 0 || toIdx === 0) {\n      return 0\n    }\n    return undefined\n  }\n\n  private extractHeaders(headers: IndexedHeader<T>[]): IndexedHeader<T>[] {\n    // For every column, determine which header it belongs to.\n\n    // First parse headers columns\n    const re = new RegExp(\n      headers\n        .map(\n          ea => (ea.greedyLeft ? \"\\\\s+\" : \"\\\\b\") + escapeRegExp(ea.text) + \"\\\\b\"\n        )\n        .join(\"|\"),\n      \"ig\"\n    )\n    const result: IndexedHeader<T>[] = []\n\n    // basically String.splitKeep\n    // we're looking for tokens at or right of pos\n    let m: RegExpExecArray | null\n\n    // this is the \"re.lastIndex\" from the prior match\n    let priorLastIndex = 0\n\n    while ((m = re.exec(this.headerRow)) != null) {\n      const skippedOver = this.headerRow.substring(priorLastIndex, m.index)\n      if (!blank(skippedOver)) {\n        logger().debug(\"extractHeaders: skipping over unknown header\", {\n          skippedOver,\n          m_index: m.index\n        })\n        this.skippedHeaders.push(skippedOver.trim())\n      }\n\n      const matched = this.headerRow.substring(m.index, re.lastIndex)\n      // this is the leftmost non-whitespace index of the current header\n      const left = m.index + (indexOfNonSpace(matched) ?? 0)\n      // this is the rightmost non-whitespace index of the current header\n      const right = m.index + (lastIndexOfNonSpace(matched) ?? matched.length)\n      const text = matched.trim()\n      const h = headers.find(ea => ea.text === text)\n      if (h == null || left == null || right == null) {\n        this.skippedHeaders.push(text)\n        logger().debug(\"extractHeaders: internal error\", {\n          matched,\n          match: m,\n          left,\n          right\n        })\n      } else {\n        const prior = last(result)\n        result.push(h)\n\n        if (prior != null) {\n          const priorRightBoundary =\n            prior.rightIdx! +\n            (indexOfNonSpace(skippedOver) ?? skippedOver.length) +\n            1\n          prior.rightIdx = h.greedyLeft\n            ? this.firstBlankColumn(prior.rightIdx!, priorRightBoundary)\n            : this.firstBlankColumn(priorRightBoundary, prior.rightIdx!)\n        }\n        const leftmost = max_(\n          prior?.rightIdx,\n          m.index - (lastIndexOfNonSpace(skippedOver) ?? skippedOver.length)\n        )\n        h.leftIdx = h.greedyLeft\n          ? this.firstBlankColumn(leftmost, left)\n          : this.firstBlankColumn(left, leftmost)\n        h.rightIdx = right // < temporary!\n      }\n      priorLastIndex = re.lastIndex\n    }\n    // expand the right header... but how much?\n    const lastHeader = last(result)\n    if (lastHeader != null) {\n      if (!blank(this.headerRow.slice(priorLastIndex))) {\n        lastHeader.rightIdx = priorLastIndex\n      } else {\n        // If the remainder of the header is whitespace, just expand to the end:\n        lastHeader.rightIdx = max_(...this.rows.map(ea => ea.length))\n      }\n    }\n    return result\n  }\n}\n","import { map } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { BitZip } from \"./math/Bits\"\nimport { GeoRadix } from \"./math/Radix\"\nimport { within } from \"./Number\"\n\n// See https://en.wikipedia.org/wiki/Geographic_coordinate_system\n// and https://en.wikipedia.org/wiki/Decimal_degrees\n// https://www.movable-type.co.uk/scripts/geohash.html\n\nexport interface GeoLocation {\n  lat: number\n  lon: number\n}\n\nconst DefaultBitDepth = 30\n\nfunction toNearestBitDepth(bitDepth: number) {\n  return Math.floor(bitDepth / 5) * 5\n}\n\nexport function validLat(latitude: Maybe<number>): latitude is number {\n  return within(-90, 90, latitude) && latitude !== 0\n}\n\nexport function validLon(longitude: Maybe<number>): longitude is number {\n  return within(-180, 180, longitude) && longitude !== 0\n}\n\nexport function validLatLon(\n  latitude: Maybe<number>,\n  longitude: Maybe<number>\n): latitude is number {\n  return validLat(latitude) && validLon(longitude)\n}\n\nexport function locationToGeohash(\n  loc?: Maybe<Partial<GeoLocation>>,\n  bitDepth = DefaultBitDepth\n): Maybe<string> {\n  return geohash(loc?.lat, loc?.lon, bitDepth)\n}\n\nexport function geohash(\n  latitude?: number,\n  longitude?: number,\n  bitDepth = DefaultBitDepth\n): Maybe<string> {\n  return map(\n    geohashNumeric(latitude, longitude, toNearestBitDepth(bitDepth)),\n    i => GeoRadix.encode(i)\n  )\n}\n\nexport function geohashNumericShort(latitude?: number, longitude?: number) {\n  return geohashNumeric(latitude, longitude, 30)\n}\n\nconst GeoHashBitZip = new BitZip([\n  {\n    min: -180,\n    max: 180\n  },\n  {\n    min: -90,\n    max: 90\n  }\n])\n\nexport function geohashNumeric(\n  latitude?: number,\n  longitude?: number,\n  bitDepth = DefaultBitDepth\n): Maybe<number> {\n  return !validLatLon(latitude, longitude)\n    ? undefined\n    : // The geohash spec does bitmixing oddly, requiring this to be lon, lat :(\n      GeoHashBitZip.zip([longitude!, latitude!], toNearestBitDepth(bitDepth))\n}\n\nexport function ungeohash(\n  geohashString: string,\n  bitDepth: number = DefaultBitDepth\n): Maybe<[number, number]> {\n  return map(GeoRadix.decode(geohashString), ea => ungeohash_num(ea, bitDepth))\n}\n\n/**\n * @return [latitude, longitude]\n */\nexport function ungeohash_num(\n  geohashNum: number,\n  bitDepth: number = DefaultBitDepth\n): [number, number] {\n  return GeoHashBitZip.unzip(\n    geohashNum,\n    toNearestBitDepth(bitDepth)\n  )?.reverse() as [number, number]\n}\n\nexport function geoHashToLocation(\n  geohashNum: number,\n  bitDepth: number = DefaultBitDepth\n): GeoLocation {\n  const [lat, lon] = ungeohash_num(geohashNum, bitDepth)\n  return { lat, lon }\n}\n\nconst EarthDiaMeters = 12742000\n\nexport function geohashDistanceMeters(\n  geohash1: Maybe<number>,\n  geohash2: Maybe<number>\n): Maybe<number> {\n  if (geohash1 == null || geohash2 == null) return\n  if (geohash1 === geohash2) return 0\n  return distanceMeters(\n    geoHashToLocation(geohash1),\n    geoHashToLocation(geohash2)\n  )\n}\n\n// http://www.movable-type.co.uk/scripts/latlong.html\nexport function distanceMeters(a: GeoLocation, b: GeoLocation) {\n  const phi1 = (a.lat * Math.PI) / 180 // φ, λ in radians\n  const phi2 = (b.lat * Math.PI) / 180\n  const deltaPhi = ((b.lat - a.lat) * Math.PI) / 180\n  const deltaLambda = ((b.lon - a.lon) * Math.PI) / 180\n  const c =\n    Math.sin(deltaPhi / 2) * Math.sin(deltaPhi / 2) +\n    Math.cos(phi1) *\n      Math.cos(phi2) *\n      Math.sin(deltaLambda / 2) *\n      Math.sin(deltaLambda / 2)\n  const d = Math.atan2(Math.sqrt(c), Math.sqrt(1 - c))\n  return EarthDiaMeters * d\n}\n","/**\n * Used to signal Promises to halt processing and return asap\n */\nexport class Halt {\n  #halt = false\n  get halted() {\n    return this.#halt\n  }\n  halt() {\n    this.#halt = true\n  }\n}\n","// Secure hash research:\n\n// SHA1 has known collisions. It should be expected for a nerd to have sample\n// images that have colliding SHA1 hashes on their laptop.\n\n// I don't see why these SHA values would need to be externally consumed, so\n// people shouldn't care if the SHA in the db isn't a FIPS standard. I don't\n// want to pull in another native library dependency if I can help it.\n\n// ALSO: I don't need that many bits to ensure uniqueness! 160 was enough for\n// SHA1, 192 should be plenty, and only takes 32 base64 characters (and doesn't\n// waste chars on padding).\n\n// HOWEVER: versions pre-v0.3.5 used the most significant 224 bits, so when we\n// build SHAs of strings (like for volume UIDs), we maintain backward\n// compatibility by slicing MSB 224 bits. If we slice 192 bits and we use a\n// non-8-bit-divisible radix, the values change.\n\n// See https://news.ycombinator.com/item?id=10011472\n// https://en.wikipedia.org/wiki/Secure_Hash_Algorithms\n\n// `shasum -a 512224` implements SHA-512/224.\n// `shasum -a 512256` implements SHA-512/256.\n\nexport const HashBits = 192\n","import { lazy } from \"../core/Lazy\"\n\n// On server builds, always returns false. Overridden by Desktop to match system\n// state.\nexport const isSuspended = lazy(() => false)\n","import { parseJSON } from \"../fe/JSON\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { Obj } from \"../fe/Object\"\n\n// TODO: inline\nexport { parseJSON } from \"../fe/JSON\"\n\nexport function mapParsed<T>(s: string, f: (o: Obj) => T): Maybe<T> {\n  const j = parseJSON(s)\n  return j == null ? undefined : f(j)\n}\n","import { inspect } from \"util\"\nimport { isEmpty } from \"../fe/Array\"\nimport { ChangeListener } from \"../fe/ChangeListener\"\nimport { eql } from \"../fe/Eql\"\nimport { MemoizedLazy, MemoizedThunk } from \"../fe/Lazy\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0 } from \"../fe/Number\"\nimport { setUnrefTimeout } from \"../fe/UnrefTimeout\"\nimport { ExtensibleFunction } from \"./ExtensibleFunction\"\n\n// USED BY LOG: DON'T DEPEND ON ANYTHING (much)\n\n// TODO: INLINE\nexport { MemoizedLazy, MemoizedThunk, UnwrapLazy } from \"../fe/Lazy\"\n\nexport function lazy<T>(thunk: () => T, ttlMs?: number): MemoizedThunk<T> {\n  return new LazyClass(thunk, ttlMs) as any\n}\n\nclass LazyClass<T> extends ExtensibleFunction<T> implements MemoizedLazy<T> {\n  private lastSetTs?: number\n  private result?: T\n  readonly watchers: ChangeListener<T>[] = []\n\n  constructor(\n    private readonly thunk: () => T,\n    private ttlMs?: number\n  ) {\n    super()\n  }\n\n  override _call() {\n    if (this.isStale()) {\n      // NO PROMISE AWAITING HERE. Otherwise N calls would go through while we\n      // wait for the promise to resolve.\n      this.#setResult(this.thunk())\n    }\n    return this.result!\n  }\n\n  private async onSetResult(priorP: Maybe<T>, currentP: T) {\n    if (isEmpty(this.watchers)) return\n    // prior and current could be a promise!\n\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const _prior = await priorP\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const current = await currentP\n    if (!eql(_prior, current)) {\n      for (const ea of this.watchers) ea(current)\n    }\n    // We're interpreting undefined as unset, and `null` as a valid set value.\n    if (this.ttlMs != null && this.ttlMs > 0 && current !== undefined) {\n      // help the garbage collector:\n      setUnrefTimeout(() => this.vacuum(), this.ttlMs)\n    }\n  }\n\n  vacuum() {\n    if (this.isStale()) this.unset()\n  }\n\n  #setResult(t: T) {\n    this.lastSetTs = Date.now()\n    void this.onSetResult(this.result, t)\n    return (this.result = t)\n  }\n\n  isStale() {\n    return (\n      this.lastSetTs == null ||\n      (gt0(this.ttlMs) && this.lastSetTs + this.ttlMs < Date.now())\n    )\n  }\n\n  set(t: T) {\n    this.#setResult(t)\n  }\n\n  unset() {\n    this.#setResult(undefined as any)\n    this.lastSetTs = undefined\n  }\n\n  clear() {\n    const _prior = this.result\n    this.unset()\n    return _prior\n  }\n\n  prior() {\n    this.vacuum()\n    return this.result\n  }\n\n  refresh() {\n    return this.#setResult(this.thunk())\n  }\n\n  ttl() {\n    return this.ttlMs\n  }\n\n  setTTL(ttl: number | undefined) {\n    this.ttlMs = gt0(ttl) ? ttl : undefined\n  }\n\n  watchLater(watcher: ChangeListener<T>) {\n    this.watchers.push(watcher)\n  }\n\n  watch(watcher: ChangeListener<T>) {\n    watcher(this())\n    this.watchLater(watcher)\n  }\n\n  toString() {\n    return \"[Lazy]\"\n  }\n\n  // If you move this back to fe, you'll need to switch this with something\n  // like `const inspect_custom = isNode ? require(\"util\").inspect.custom :\n  // Symbol.for(\"inspect.custom\")`\n  [inspect.custom]() {\n    return \"[Lazy]\"\n  }\n\n  lastSetAgoMs() {\n    return this.lastSetTs == null ? undefined : Date.now() - this.lastSetTs\n  }\n\n  hasPrior() {\n    return this.lastSetTs != null\n  }\n}\n\nclass ROLazy<T> extends LazyClass<T> {\n  override set(_: T) {}\n}\n\nexport function rolazy<T>(thunk: () => T, ttlMs?: number): MemoizedThunk<T> {\n  return new ROLazy(thunk, ttlMs) as any\n}\n","import { lazy } from \"../core/Lazy\"\nimport { compact } from \"../fe/Array\"\nimport { blank } from \"../fe/Blank\"\nimport { secondMs } from \"../fe/Date\"\nimport { Maybe, PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { Obj } from \"../fe/Object\"\nimport { parseEnvTokens } from \"./EnvTokens\"\nimport { mkLogger } from \"./Logger\"\nimport { equalsIgnoreCase } from \"./String\"\nimport { lazyAsync } from \"./async/LazyAsync\"\nimport { thenMap } from \"./async/Promise\"\nimport { StdoutOpts, stdout_ } from \"./child/ChildProcess\"\nimport { env } from \"./env/Env\"\nimport { isMac, isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\nimport { commandTimeoutMs } from \"./volumes/VolumeTtls\"\n\nexport const DefaultLocale = \"en\"\n\nconst logger = lazy(() => mkLogger(\"Locale\"))\n\nexport function localeSync() {\n  return locale.lastValue() ?? envLocale() ?? DefaultLocale\n}\n\n/**\n * @see https://en.wikipedia.org/wiki/ISO_639\n */\nexport const locale = lazyAsync<string>({\n  desc: \"locale\",\n  later: async () =>\n    lc2locale(\n      extractLocale() ??\n        (await (isWin\n          ? localeWin()\n          : isMac\n          ? localeMac()\n          : localePosix()\n        ).catch(error => {\n          logger().warn(\"Failed to get locale\", { error })\n          return DefaultLocale\n        }))\n    ),\n  timeoutMs: commandTimeoutMs()\n})\n\nexport const envLocale = lazy(extractLocale)\n\n// See https://wiki.archlinux.org/index.php/Locale\nfunction extractLocale(e: Obj = env()) {\n  for (const ea of [e.LC_ALL, e.LC_MESSAGES, e.LANG, e.LANGUAGE]) {\n    const lc = toLocale(ea)\n    if (lc != null) return lc\n  }\n  return\n}\n\n// Like \"en_US.UTF-8\"\nconst regex = /^(?<lang>[a-z]{2,3})(?:[_-](?<country>[a-z]{2,3}))?\\b/i\n\nfunction toLocale(str: Maybe<string>) {\n  if (blank(str)) return\n  // Some people set their locale to \"C\":\n  if (\n    str === DefaultLocale ||\n    equalsIgnoreCase(\"c\", str) ||\n    equalsIgnoreCase(\"posix\", str)\n  ) {\n    return DefaultLocale\n  }\n  const g = regex.exec(str.trim())?.groups\n  return g == null ? undefined : compact([g.lang, g.country]).join(\"-\")\n}\n\nexport function lc2locale(lc: Maybe<string>): string {\n  return toLocale(lc) ?? DefaultLocale\n}\n\nexport function localeWin(): PromiseMaybe<string> {\n  return thenMap(\n    PowerShell.instance().executeJson(\n      \"Get-WinSystemLocale | Select-Object -Property Name\"\n    ),\n    ea => ea.Name as string\n  )\n}\n\nconst opts: StdoutOpts = {\n  timeoutMs: 10 * secondMs\n}\n\nexport async function localeMac(): PromiseMaybe<string> {\n  return toLocale(\n    await stdout_(\"defaults\", [\"read\", \"-globalDomain\", \"AppleLocale\"], opts)\n  )\n}\n\nexport async function localePosix() {\n  return lc2locale(\n    extractLocale(\n      parseEnvTokens({\n        lowerCaseKeys: false,\n        input: await stdout_(\"locale\", [], opts)\n      })\n    )\n  )\n}\n\nexport function childProcLocale() {\n  return {\n    LANG: \"C\",\n    LC_ALL: \"C\"\n  }\n}\n","import { arch, platform } from \"os\"\nimport { argv, versions } from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { pick } from \"../fe/Object\"\nimport { mkLogger } from \"./Logger\"\nimport { osFullName } from \"./OperatingSystem\"\nimport { serviceName } from \"./ServiceNames\"\nimport { StartTs } from \"./StartTs\"\nimport { version } from \"./Version\"\nimport { psenv } from \"./child/ChildEnv\"\nimport { isPacked } from \"./platform/IsPacked\"\nimport { isElectron } from \"./platform/Platform\"\nimport { Settings } from \"./settings/Settings\"\n\nexport const logStartup = lazy(() => {\n  mkLogger(\"LogStartup\").info(\"setup(): starting \" + serviceName(), {\n    version,\n    StartTs,\n    argv,\n    arch: arch(),\n    platform: platform(),\n    os: osFullName(),\n    isPacked: isPacked(),\n    isElectron,\n    versions: pick(versions, \"electron\", \"node\"),\n    settings: {\n      logLevel: Settings.logLevel.valueOrDefault,\n      httpPort: Settings.httpPort.valueOrDefault,\n      libraryDir: Settings.libraryDir.valueOrDefault\n    },\n    ...psenv()\n  })\n})\n","import { lazy } from \"../core/Lazy\"\nimport { ConsoleLogger } from \"./log/ConsoleLogger\"\nimport { ContextualLogger } from \"./log/ContextualLogger\"\nimport { SimpleLogger } from \"./log/Logger\"\n\nexport const rootLoggers = lazy<SimpleLogger[]>(() => [\n  ConsoleLogger.instance()\n])\n\nconst consoleLogger = lazy(() => [ConsoleLogger.instance()])\n\nexport type Logger = ContextualLogger // TODO: inline?\n\nexport function mkLogger(context: string): ContextualLogger {\n  return new ContextualLogger(context, rootLoggers)\n}\n\nexport function mkConsoleLogger(context: string): ContextualLogger {\n  return new ContextualLogger(context, consoleLogger)\n}\n","import { compact } from \"../fe/Array\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe, MaybePromiseMaybe } from \"../fe/MaybeTypes\"\nimport { toA } from \"../fe/toA\"\nimport { concat } from \"./Array\"\n\nexport function hasAll<K>(m: Map<K, any> | Set<K>, arr: K[]): boolean {\n  return arr.every(ea => m.has(ea))\n}\n\nexport function flatMap<T, K, V>(iter: T[], f: (t: T) => [K, V][]): Map<K, V> {\n  return new Map<K, V>(concat(...iter.map(ea => f(ea))))\n}\n\nexport function compactMap<K, V>(\n  m: Iterable<Maybe<[Maybe<K>, Maybe<V>]>>\n): Map<K, V> {\n  const arr = compact(m).filter(([k, v]) => k != null && v != null) as [K, V][]\n  return new Map<K, V>(arr)\n}\n\nexport function toMap<T, K, V>(\n  i: Maybe<Iterable<Maybe<T>>>,\n  f: (entry: T) => Maybe<[Maybe<K>, Maybe<V>]>\n): Map<K, V> {\n  return compactMap(compact(i).map(f))\n}\n\nexport async function toMapAsync<T, K, V>(\n  iterable: Maybe<Iterable<Maybe<T>>>,\n  f: (entry: T) => MaybePromiseMaybe<[Maybe<K>, Maybe<V>]>\n): Promise<Map<K, V>> {\n  if (iterable == null) return new Map()\n  const entries = await Promise.all(compact(toA(iterable)).map(ea => f(ea)))\n  return compactMap(entries)\n}\n\nexport function toObj<T>(m: Map<string, T>): { [key: string]: T } {\n  const obj: any = {}\n  for (const [k, v] of m) {\n    obj[k] = v\n  }\n  return obj\n}\n\nexport function filter<K, V>(\n  m: Map<K, V>,\n  f: (key: K, value: V) => boolean\n): Map<K, V> {\n  return new Map<K, V>([...m.entries()].filter(([k, v]) => f(k, v)))\n}\n\n/**\n * Only retain the entries in m where f() returns true.\n */\nexport function filterInPlace<K, V>(\n  m: Map<K, V>,\n  retainIfTrue: (key: K, value: V) => boolean\n): void {\n  ;[...m.entries()].forEach(([k, v]) => retainIfTrue(k, v) || m.delete(k))\n}\n\nexport function pickKeys<K, V>(m: Map<K, V>, keys: K[]): Map<K, V> {\n  return filter(m, k => keys.indexOf(k) >= 0)\n}\n\n/**\n * Return the first value associated to the key that matches the given predicate\n */\nexport function getLike<K, V>(\n  m: Map<K, V>,\n  predicate: (k: K) => boolean\n): Maybe<V> {\n  return map(\n    [...m.entries()].find(([k]) => predicate(k)),\n    ([, v]) => v\n  )\n}\n\nexport function inverse<K, V>(m: Map<K, V>): Map<V, K> {\n  return new Map([...m.entries()].map(([k, v]) => [v, k] as [V, K]))\n}\n","import { stringify } from \"../fe/JSON\"\nimport { FifoCache } from \"./FifoCache\"\n\nexport interface MemoizedFunc<A, R> {\n  (a: A): R\n  clear(a?: A): void\n  size(): number\n  callCount(): number\n}\n\nexport function memoize<A, R>(\n  f: (a: A) => R,\n  opts: { maxSize: number; ttlMs?: number }\n): MemoizedFunc<A, R> {\n  let callCount = 0\n  const store = new FifoCache<R>(opts.maxSize, opts.ttlMs)\n  const r: any = (a: A) => {\n    if (a == null) return\n    callCount++\n    return store.getOrSet(stringify(a), () => f(a))\n  }\n  r.clear = (a?: A) => (a == null ? store.clear() : store.delete(stringify(a)))\n  r.size = () => store.size\n  r.callCount = () => callCount\n  return r\n}\n","import { memoryUsage } from \"process\"\nimport { sigFigs } from \"../fe/Number\"\nimport { MB } from \"../fe/Units\"\nimport { sum } from \"./math/Vector\"\n\nexport function memoryUsageBytes() {\n  const mem = memoryUsage()\n  // These are sometimes not defined. We don't want to return NaN.\n  return sum([mem.external, mem.heapUsed, mem.arrayBuffers])\n}\n\nexport function memoryUsageMb() {\n  return sigFigs(memoryUsageBytes() / MB, 2)\n}\n\nexport function memoryUsageRssBytes() {\n  return memoryUsage().rss\n}\n\nexport function memoryUsageRssMb() {\n  return sigFigs(memoryUsageRssBytes() / MB, 2)\n}\n","import { isTrue, toBoolean } from \"../fe/Boolean\"\n\n/**\n * @see https://no-color.org/\n */\nexport function noColor(): boolean {\n  // force color if PS_LOG_COLOR is true\n  return (\n    toBoolean(process.env.PS_LOG_COLOR) ??\n    (isTrue(process.env.NO_COLOR) ||\n      [\"dumb\", \"unknown\"].includes(process.env.TERM as string))\n  )\n}\n","import process from \"process\"\nimport { isTrue } from \"../fe/Boolean\"\nimport { toS } from \"../fe/toS\"\nimport { isPacked } from \"./platform/IsPacked\"\n\n// new mocha 10 uses \"mocha.js\"\nconst MaybeTestArgRe = /mocha(?:\\.js)$|\\.spec\\.js$/\n\nexport function _nodeEnv() {\n  switch (toS(process.env.NODE_ENV).toLowerCase()) {\n    case \"test\":\n    case \"testing\":\n      return \"test\"\n    case \"dev\":\n    case \"development\":\n      return \"development\"\n    case \"prod\":\n    case \"production\":\n      return \"production\"\n    default:\n      if (\n        !isPacked() &&\n        process.argv.some(ea => MaybeTestArgRe.exec(ea) != null)\n      ) {\n        return \"test\"\n      } else {\n        return \"production\"\n      }\n  }\n}\n\n// Make sure NODE_ENV gets the final value. If not, stuff like Pug stays in\n// dev mode: https://pugjs.org/api/express.html\nexport const nodeEnv = (process.env.NODE_ENV = _nodeEnv())\n\nexport const isDev = nodeEnv === \"development\"\nexport const isTest = nodeEnv === \"test\"\nexport const isProd = nodeEnv === \"production\"\n\nexport function isSingleSpecTests() {\n  return isTest && isTrue(process.env.SINGLE_SPEC_TESTS)\n}\n\nexport function setSingleSpecTests(b: boolean) {\n  process.env.SINGLE_SPEC_TESTS = b ? \"true\" : \"false\"\n}\n","import { satisfies } from \"semver\"\nimport { lazy } from \"../core/Lazy\"\n\nexport const isSupportedNode = lazy(_isSupportedNode)\n\nexport const RequiredNodeVersions = \"16||18||20\"\nexport function _isSupportedNode(nodeVersion = process.versions.node) {\n  return satisfies(nodeVersion, RequiredNodeVersions)\n}\n","import { count, isEmpty } from \"../fe/Array\"\nimport { blank } from \"../fe/Blank\"\nimport { flatten } from \"../fe/Flatten\"\nimport { map, orElse } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport {\n  clamp,\n  gt0,\n  isNumber,\n  map2Numeric,\n  mapInt,\n  mapNumeric,\n  toFloat,\n  toInt\n} from \"../fe/Number\"\nimport { leftPad } from \"../fe/Pad\"\nimport { toS } from \"../fe/toS\"\nimport { pop } from \"./math/Bits\"\n\n// TODO: INLINE\nexport { within } from \"../fe/Number\"\n\nexport function firstGt0(...objects: any[]): Maybe<number> {\n  return objects.find(gt0)\n}\n\n/**\n * @return the first element in `objects` that can be parsed into a number and is\n * greater than zero.\n */\nexport function firstNonZero(...objects: any[]): Maybe<number> {\n  for (const ea of flatten(objects)) {\n    const f = toFloat(ea)\n    if (f != null && f !== 0) return f\n  }\n  return undefined\n}\n\nexport function mapGte0<T>(n: any, f: (i: number) => T): Maybe<T> {\n  return mapInt(n, i => (i >= 0 ? f(i) : undefined))\n}\n\nexport function mapGte0Or<T>(\n  n: any,\n  f: (i: number) => T,\n  defaultValue: T | (() => T)\n): T {\n  return orElse(mapGte0(n, f), defaultValue)\n}\n\nexport function mapGte0f<T>(n: any, f: (i: number) => T): Maybe<T> {\n  return mapNumeric(n, i => (i >= 0 ? f(i) : undefined))\n}\n\nexport function mapGt0<T>(n: any, f: (i: number) => T): Maybe<T> {\n  const ea = toInt(n)\n  return ea != null && ea > 0 ? f(ea) : undefined\n}\n\nexport function map2Gt0<T>(\n  a: any,\n  b: any,\n  f: (i: number, j: number) => T\n): Maybe<T> {\n  const i = toInt(a)\n  const j = toInt(b)\n  return i != null && i > 0 && j != null && j > 0 ? f(i, j) : undefined\n}\n\nexport function mapGt0f<T>(n: any, f: (i: number) => T): Maybe<T> {\n  const ea = toFloat(n)\n  return ea != null && ea > 0 ? f(ea) : undefined\n}\n\nexport function mapGt0Or<T>(\n  n: any,\n  f: (i: number) => T,\n  defaultValue: T | (() => T)\n): T {\n  return orElse(mapGt0(n, f), defaultValue)\n}\n\n// WAT WAT WAAAAAT? (this is the simplest regex I could come up with that\n// supported both \"-123\", \"+123.\", \"-123.456\" and \"-.789\") \\\n\n// I could do this:\n// const validFloatRe = /((?:[+-]?[0-9]+(?:\\.[0-9]*)?)|(?:[+-]?[0-9]*(?:\\.[0-9]+)))/\n\n// but that sort of rigor isn't necessary. parseFloat is fine with parsing\n// \"-123.456GUACAMOLE\".\nconst numstartRe = /[+-]?[0-9\\,\\.]+/\n\n/**\n * Pull out the first float from `value`.\n *\n * This method ignores any non-numeric characters that prefix or suffix the\n * first number (as opposed to `toFloat`, which ignores only non-numeric\n * suffixes)\n */\nexport function extractFloat(value: any): Maybe<number> {\n  if (isNumber(value)) return value\n  if (blank(value)) return undefined\n  const s = String(value)\n  return map(numstartRe.exec(s), m => toFloat(s.substr(m.index)))\n}\n\n/**\n * Pull out the first integer from `value`.\n *\n * This method ignores any non-numeric characters that prefix or suffix the\n * first number (as opposed to `toInt`, which ignores only non-numeric suffixes)\n */\nexport function extractInt(value: any): Maybe<number> {\n  return toInt(extractFloat(value))\n}\n\nexport function extractFraction(value: any): Maybe<number> {\n  if (isNumber(value)) return value\n  const s = toS(value)\n  if (s.includes(\"/\")) {\n    const arr = s.split(\"/\", 2)\n    return map2Numeric(extractInt(arr[0]), extractInt(arr[1]), (i, j) => i / j)\n  } else {\n    return extractFloat(s)\n  }\n}\n\nexport function assertPositive(name: string, value?: number) {\n  if (value == null || value <= 0) {\n    throw new Error(name + \" must be positive\")\n  }\n}\n\nexport class Array2D {\n  private readonly store: number[] = []\n  constructor(readonly columns: number) {}\n  get(row: number, col: number): number {\n    return row < 0 || col < 0\n      ? 0\n      : orElse(this.store[row * this.columns + col], () => 0)\n  }\n  set(row: number, col: number, value: number) {\n    this.store[row * this.columns + col] = value\n  }\n}\n\nfunction prepHammBigInts(\n  a: number | bigint,\n  b: number | bigint\n): Maybe<[string, string]> {\n  if (a == null || b == null) return\n  const arr = [a, b].map(ea => ea.toString(2))\n  const maxLen = Math.max(...arr.map(ea => ea.length))\n  return arr.map(ea => leftPad(ea, maxLen, \"0\")) as [string, string]\n}\n\n/**\n * @return the number of bits not matching between a and b\n */\nexport function hammingDistanceBigInt(\n  a: number | bigint,\n  b: number | bigint\n): Maybe<number> {\n  return map(prepHammBigInts(a, b), ([s1, s2]) =>\n    count([...s1], (ea, idx) => ea !== s2.charAt(idx))\n  )\n}\n\n/**\n * @return `matching bits / total bits`. 1 == complete match.\n */\nexport function hammRatioBigInt(\n  a: Maybe<number | bigint>,\n  b: Maybe<number | bigint>\n): Maybe<number> {\n  if (a == null || b == null) return 0\n  return map(prepHammBigInts(a, b), ([i, j]) => hammRatioBinaryString(i, j))\n}\n\nexport function hammRatioBinaryString(a: string, b: string) {\n  if (a === b) return 1\n  if (a.length !== b.length)\n    throw new Error(`hammRatioBinaryString(${a}, ${b}): invalid lengths`)\n  let matching = 0\n  // console.log(\"hammRatioBinaryString a\")\n  // console.log(splitEvery(a, 24).join(\"\\n\"))\n  // console.log(\"hammRatioBinaryString b\")\n  // console.log(splitEvery(b, 24).join(\"\\n\"))\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) matching++\n  }\n  // console.log(\"matching: \" + matching)\n  // 50% match is random. Scale that to 0.\n  return clamp(0, 1, (2 * matching) / a.length - 1)\n}\n\nexport function valuesToBigInt(arr: number[], bitsPerValue: number): bigint {\n  if (isEmpty(arr)) return BigInt(0)\n  return BigInt(\n    \"0b0\" +\n      arr.map(ea => leftPad(ea.toString(2), bitsPerValue - 1, \"0\")).join(\"\")\n  )\n}\n\nexport function hammRatioIntArrays(\n  a: number[],\n  b: number[],\n  bitsPerCell: number\n) {\n  if (a.length !== b.length)\n    throw new Error(\"hammRatioIntArrays(): inequal arrays\")\n  let diff = 0\n  const total = bitsPerCell * a.length\n  for (let i = 0; i < a.length; i++) {\n    diff += pop(a[i] ^ b[i])\n  }\n\n  // 50% match is random. Scale that to 0:\n  return clamp(0, 1, (2 * (total - diff)) / total - 1)\n}\n\n/**\n * \"safe\" square-root\n *\n * @return 0 if i is not a number or is negative\n */\nexport function sqrt(i: number): number {\n  return gt0(i) ? Math.sqrt(i) : 0\n}\n","import { compact, uniq } from \"../fe/Array\"\nimport { blank } from \"../fe/Blank\"\nimport { isDate } from \"../fe/Date\"\nimport { eql } from \"../fe/Eql\"\nimport { flatten } from \"../fe/Flatten\"\nimport { defined, map } from \"../fe/Maybe\"\nimport { Maybe, MaybeNull } from \"../fe/MaybeTypes\"\nimport { gt } from \"../fe/Number\"\nimport { Obj, entries, keys } from \"../fe/Object\"\nimport { Primitive, isPrimitive } from \"../fe/Primitive\"\nimport { Thunk } from \"../fe/Thunk\"\nimport { toErr } from \"../fe/toErr\"\nimport { first } from \"./Array\"\nimport { equalsIgnoreCase, sortIgnoreCase } from \"./String\"\n\n// \"{ new(): T }\"\n// is from https://www.typescriptlang.org/docs/handbook/generics.html#using-class-types-in-generics\nexport interface Constructor<M> {\n  new (...args: any[]): M\n}\n\nexport function definedThunks(...thunks: Thunk<any>[]): boolean {\n  return thunks.every(ea => defined(ea()))\n}\n\nexport function firstThunk<T>(...thunks: Thunk<Maybe<T>>[]): Maybe<T> {\n  for (const t of thunks) {\n    const r = t()\n    if (r != null) {\n      return r\n    }\n  }\n  return\n}\n\nexport function firstTrueThunk<T>(\n  thunks: Thunk<Maybe<T>>[],\n  predicate?: (t: T) => boolean\n): Maybe<T> {\n  for (const t of thunks) {\n    const r = t()\n    if (r != null && (predicate == null || predicate(r))) {\n      return r\n    }\n  }\n  return\n}\n\nexport function firstDefined<T>(...objects: MaybeNull<T>[]): Maybe<T> {\n  return objects.find(defined)\n}\n\nexport function firstDefinedField<T, K extends keyof T>(\n  obj: T,\n  ...fieldNames: K[]\n): Maybe<T[K]> {\n  return map(\n    fieldNames.find(field => null != obj[field]),\n    fieldName => obj[fieldName]\n  )\n}\n\nexport function firstFieldLike<T extends Obj, K extends keyof T>(\n  obj: T,\n  predicate: (key: K, value: T[K]) => boolean\n): Maybe<T[K]> {\n  return first(\n    keys(obj) as K[], // SITS: why is this cast needed?\n    key => (predicate(key, obj[key]) ? obj[key] : undefined)\n  )\n}\n\n// knex interprets undefined parameters as runtime mistakes, so use null:\nexport function ornull<T>(a?: T): T | null {\n  return a === undefined ? null : a\n}\n\nexport function mapAnd<T>(obj: MaybeNull<T>, f: (t: T) => boolean): boolean {\n  return obj != null ? f(obj) : false\n}\n\nexport function mapOrThrow<T, R>(\n  obj: MaybeNull<T>,\n  f: (t: T) => R,\n  errIfMissing: string\n): R {\n  if (obj != null) {\n    return f(obj)\n  } else {\n    throw new Error(errIfMissing)\n  }\n}\n\nexport function Try<T>(\n  f: () => T,\n  onError?: (error: Error) => Maybe<T>\n): Maybe<T> {\n  try {\n    return f()\n  } catch (err) {\n    return onError?.(toErr(err)!)\n  }\n}\n\nexport function tryEach<T>(iter: Iterable<T>, f: (t: T) => any): void {\n  ;[...iter].forEach(ea => Try(() => f(ea)))\n}\n\nexport function identity<T>(t: T) {\n  return t\n}\n\nexport function ctor(obj: any): Maybe<string> {\n  return map(obj.constructor, ea => ea.name)\n}\n\nexport function hasKeys(obj: any): boolean {\n  return Object.keys(obj).some(\n    k => typeof k === \"string\" && obj.propertyIsEnumerable(k)\n  )\n}\n\n/**\n * primitive and Dates\n */\nexport function primitiveEntries<T extends Obj>(o: T): [keyof T, Primitive][] {\n  return keys(o)\n    .filter(k => isPrimitive(o[k]) || isDate(o[k]))\n    .map(k => [k, o[k]] as [string, Primitive])\n}\n\nexport function spread<T extends Obj>(\n  defaults: T,\n  ...sources: MaybeNull<Partial<T>>[]\n): T {\n  return Object.assign({} as T, defaults, ...compact(sources))\n}\n\n/**\n * Assign fields from src that have Primitive value types\n */\nexport function assignMissingPrimitives<T>(dest: T, src: Maybe<Partial<T>>): T {\n  if (src == null) {\n    return dest\n  }\n  for (const [k, v] of primitiveEntries(src)) {\n    if (dest[k] == null) {\n      dest[k] = v as any\n    }\n  }\n  return dest\n}\n\n/**\n * Only assign fields that are missing or nullish\n */\nexport function assignNullishFields<T>(dest: T, src: Maybe<Partial<T>>): T {\n  if (src == null) {\n    return dest\n  }\n  for (const [k, v] of entries(src)) {\n    if (dest[k] == null) {\n      ;(dest[k] as any) = v\n    }\n  }\n  return dest\n}\n\nexport function pickMap<K extends string, V, U>(\n  obj: Record<K, V>,\n  keysToRetain: K[],\n  f: (key: K, value: V) => U\n): Record<K, U> {\n  const r = {} as Record<K, U>\n  for (const k of keysToRetain) {\n    r[k] = f(k, obj[k])\n  }\n  return r\n}\n\nexport function mapEntries<T extends Obj, U>(\n  obj: T,\n  f: (key: keyof T & string, value: T[keyof T]) => Maybe<U>\n): Record<keyof T, U> {\n  const r = {} as Record<keyof T, U>\n  for (const [k, v] of entries(obj)) {\n    // PERF: UNROLL\n    const val = f(k, v)\n    if (val != null) r[k] = val\n  }\n  return r\n}\n\nexport function mapNullEntries<T extends Obj, U>(\n  obj: T,\n  f: (key: keyof T & string, value: T[keyof T]) => MaybeNull<U>,\n  maxKeys?: number\n): Record<keyof T, U> {\n  const r = {} as Record<keyof T, U>\n  let keyCount = 0\n  for (const k of keys(obj)) {\n    r[k] = f(k, obj[k])!\n    keyCount++\n    if (gt(keyCount, maxKeys)) break\n  }\n  return r\n}\n\n/**\n * Do all fields in `a` match `b`?\n */\nexport function eqlSubset<T>(a: Maybe<Pick<T, any>>, b: T): boolean {\n  return a == null ? false : keys(a).every((ea: keyof T) => eql(a[ea], b[ea]))\n}\n\n/**\n * For a given field name, what's o[fieldpath]?\n *\n * If fieldpath includes \".\", those will be used to find sub-objects.\n */\nexport function valpath(o: any, ciFieldPath: string): any {\n  if (ciFieldPath == null || o == null || blank(ciFieldPath)) return o\n  if (Array.isArray(o)) return compact(o.map(ea => valpath(ea, ciFieldPath)))\n  const nextDot = ciFieldPath.indexOf(\".\")\n  const field = nextDot < 0 ? ciFieldPath : ciFieldPath.slice(0, nextDot)\n  const fieldRemains = nextDot < 0 ? undefined : ciFieldPath.slice(nextDot + 1)\n  const k = keys(o)\n  if (k.includes(field)) return valpath(o[field], fieldRemains!)\n  const ciField = k.find(ea => equalsIgnoreCase(ea, field))\n  if (ciField != null) {\n    return valpath(o[ciField], fieldRemains!)\n  }\n  return\n}\n\nexport function sortedKeys(o: any): any {\n  if (o == null || isPrimitive(o)) return o\n  if (Array.isArray(o)) {\n    return o.map(ea => sortedKeys(ea))\n  }\n  if (typeof o === \"object\") {\n    const a: any = {}\n    for (const k of sortIgnoreCase(keys(o))) {\n      a[k] = sortedKeys(o[k])\n    }\n    return a\n  }\n  return o\n}\n\nexport function deepDelete(o: any, ...keysToDelete: string[]): any {\n  if (o == null || typeof o !== \"object\") return o\n  if (Array.isArray(o)) return o.map(ea => deepDelete(ea, ...keysToDelete))\n  return mapEntries(o, (k, v) =>\n    keysToDelete.includes(k) ? undefined : deepDelete(v, ...keysToDelete)\n  )\n}\n\n/**\n * @return the value associated to `caseInsensitiveKeyName`\n */\nexport function pluckCaseInsensitive(\n  o: any,\n  caseInsensitiveKeyName: string\n): any {\n  if (typeof o !== \"object\") return\n  if (o[caseInsensitiveKeyName] !== undefined) return o[caseInsensitiveKeyName]\n  for (const ea of keys(o).filter(s =>\n    equalsIgnoreCase(s, caseInsensitiveKeyName)\n  )) {\n    if (o[ea] !== undefined) return o[ea]\n  }\n  return\n}\n\nexport function pairToObject(key: string, value: any) {\n  const o: any = {}\n  o[key] = value\n  return o\n}\n\nexport function mergeObjects(...arr: Maybe<object>[]) {\n  const o: any = {}\n  for (const obj of compact(arr)) {\n    for (const k of keys(obj)) {\n      o[k] = obj[k]\n    }\n  }\n  return o\n}\n\nexport function zipPojos(...arr: Maybe<Obj>[]): Obj {\n  const result: Obj = {}\n  for (const key of uniq(flatten(arr.map(keys)))) {\n    result[key] = arr.map(obj => obj?.[key])\n  }\n  return result\n}\n","import { execSync } from \"child_process\"\nimport { readFileSync } from \"fs\"\nimport { arch, platform, release } from \"os\"\nimport { lazy } from \"../core/Lazy\"\nimport { mapNotBlankOr, notBlank } from \"../fe/Blank\"\nimport { minuteMs } from \"../fe/Date\"\nimport { map2Or } from \"../fe/Maybe\"\nimport { isString } from \"../fe/String\"\nimport { uniqCount } from \"./Array\"\nimport { parseEnvTokens } from \"./EnvTokens\"\nimport { mkLogger } from \"./Logger\"\nimport { isLinux } from \"./platform/Platform\"\nimport { isDocker } from \"./platform/isDocker\"\nimport { cpuInfo } from \"./work/CpuInfo\"\n\nconst logger = lazy(() => mkLogger(\"os\"))\n\nexport const osArch = lazy(() => `${osName()} on ${arch()}`)\nexport const osFullName = lazy(() => osArch() + (isDocker() ? \" (Docker)\" : \"\"))\n\nfunction osName() {\n  switch (platform()) {\n    case \"linux\":\n      return osNameLinux()\n    case \"darwin\":\n      return osNameMac()\n    case \"win32\": // doesn't mean 32 bit (BECAUSE WINDOWS)\n      return osNameWin()\n    default:\n      return osNameDefault()\n  }\n}\n\nfunction osNameDefault() {\n  return platform() + \" \" + release()\n}\n\n// Ubuntu:\n\n// NAME=\"Ubuntu\"\n// VERSION=\"20.04.1 LTS (Focal Fossa)\"\n// ID=ubuntu\n// ID_LIKE=debian\n// PRETTY_NAME=\"Ubuntu 20.04.1 LTS\"\n// VERSION_ID=\"20.04\"\n// HOME_URL=\"https://www.ubuntu.com/\"\n// SUPPORT_URL=\"https://help.ubuntu.com/\"\n// BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\n// PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\n// VERSION_CODENAME=focal\n// UBUNTU_CODENAME=focal\n\n// Alpine:\n\n// NAME=\"Alpine Linux\"\n// ID=alpine\n// VERSION_ID=3.11.6\n// PRETTY_NAME=\"Alpine Linux v3.11\"\n// HOME_URL=\"https://alpinelinux.org/\"\n// BUG_REPORT_URL=\"https://bugs.alpinelinux.org/\"\n\n// Fedora:\n\n// NAME=\"Fedora Linux\"\n// VERSION=\"36 (Container Image)\"\n// ID=fedora\n// VERSION_ID=36\n// VERSION_CODENAME=\"\"\n// PLATFORM_ID=\"platform:f36\"\n// PRETTY_NAME=\"Fedora Linux 36 (Container Image)\"\n// ANSI_COLOR=\"0;38;2;60;110;180\"\n// LOGO=fedora-logo-icon\n// CPE_NAME=\"cpe:/o:fedoraproject:fedora:36\"\n// HOME_URL=\"https://fedoraproject.org/\"\n// DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/f36/system-administrators-guide/\"\n// SUPPORT_URL=\"https://ask.fedoraproject.org/\"\n// BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\n// REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\n// REDHAT_BUGZILLA_PRODUCT_VERSION=36\n// REDHAT_SUPPORT_PRODUCT=\"Fedora\"\n// REDHAT_SUPPORT_PRODUCT_VERSION=36\n// PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\n// VARIANT=\"Container Image\"\n// VARIANT_ID=container\n\n// `man os-release`:\nconst OsReleaseFiles = [\"/etc/os-release\", \"/usr/lib/os-release\"]\n\nexport const osReleaseTokens = lazy(() => {\n  if (!isLinux) return\n\n  for (const filename of OsReleaseFiles) {\n    try {\n      const input = readFileSync(filename).toString()\n      if (notBlank(input)) {\n        return parseEnvTokens({ input, lowerCaseKeys: true })\n      }\n    } catch (error) {\n      logger().warn(\"failed to read os-release file\", { filename, error })\n    }\n  }\n\n  return\n})\n\nexport const osNameLinux = lazy(() => {\n  const t = osReleaseTokens()\n  if (notBlank(t?.pretty_name)) return t?.pretty_name\n  return map2Or(\n    t?.name,\n    t?.version ?? t?.version_id,\n    (n, v) => n + \" \" + v,\n    osNameDefault\n  )\n})\n\nconst MacCodenames = {\n  \"10\": {\n    \"6\": \"Snow Leopard\",\n    \"7\": \"Lion\",\n    \"8\": \"Mountain Lion\",\n    \"9\": \"Mavericks\",\n    \"10\": \"Yosemite\",\n    \"11\": \"El Capitan\",\n    \"12\": \"Sierra\",\n    \"13\": \"High Sierra\",\n    \"14\": \"Mojave\",\n    \"15\": \"Catalina\"\n  },\n  \"11\": \"Big Sur\", // 11.1, 11.2, ...\n  \"12\": \"Monterey\" // 12.1, 12.2, ...\n}\n\n// Windows 11:\n// require(\"os\").release() === '10.0.22000'\n\n// Windows 10:\n// require(\"os\").release() === '10.0.19044'\n\n// YAY\n\nconst WinReleaseToVersions = {\n  \"10\": \"10\",\n  \"6\": { \"3\": \"8.1\", \"2\": \"8\", \"1\": \"7\", \"0\": \"Vista\" },\n  \"5\": { \"2\": \"Server 2003\", \"1\": \"XP\", \"0\": \"2000\" },\n  \"4\": { \"9\": \"ME\", \"1\": \"98\", \"0\": \"95\" }\n}\n\nfunction majorMinor(ver: string) {\n  return ver.split(\".\").slice(0, 2)\n}\n\nfunction versionToCodename(\n  ver: string,\n  codenames: typeof MacCodenames | typeof WinReleaseToVersions\n) {\n  const [major, minor] = majorMinor(ver)\n  const m = (codenames as any)[major]\n  return isString(m) ? m : m?.[minor]\n}\n\nconst macProductVersion = lazy(() =>\n  execSync(\"sw_vers -productVersion\").toString().trim()\n)\n\nfunction macCodename(productVersion = macProductVersion()) {\n  return versionToCodename(productVersion, MacCodenames)\n}\n\nexport function osNameMac(productVersion = macProductVersion()) {\n  try {\n    return mapNotBlankOr(\n      macCodename(productVersion),\n      ea => `macOS ${ea} (${productVersion})`,\n      osNameDefault\n    )\n  } catch (err) {\n    logger().warn(\"osNameMac(): unknown release\", err)\n    return osNameDefault()\n  }\n}\n\nexport function osNameWin(r = release()) {\n  const codename = r.startsWith(\"10.0.22\")\n    ? \"11\"\n    : versionToCodename(r, WinReleaseToVersions)\n  if (codename != null) {\n    return `Windows ${codename} (${r})`\n  } else {\n    logger().warn(\"osNameWin(): unknown release: \" + r)\n    return `Windows (${r})`\n  }\n}\n\nexport const CPUs = lazy(\n  () =>\n    uniqCount(cpuInfo().map(c => c.model))\n      .map(ea => `${ea.count} × ${ea.t}`)\n      .join(\", \"),\n  minuteMs\n)\n","import { Thunk } from \"../fe/Thunk\"\nimport { UpgradeChannel } from \"./settings/UpgradeChannels\"\nimport { version, versionMajor, versionMinor, versionPatch } from \"./Version\"\n\nexport const isPreAlphaVersion = () => version.includes(\"-prealpha\")\nexport const isAlphaVersion = () => version.includes(\"-alpha\")\nexport const isBetaVersion = () => version.includes(\"-beta\")\nexport const isStableVersion = () => !isAlphaVersion() && !isBetaVersion()\n\nexport const channel: Thunk<UpgradeChannel> = () =>\n  isPreAlphaVersion()\n    ? \"prealpha\"\n    : isAlphaVersion()\n    ? \"alpha\"\n    : isBetaVersion()\n    ? \"beta\"\n    : \"stable\"\n\n/**\n * @return \"1.2.3\", even if `version` is \"1.2.3-alpha.0\" or \"1.2.3-beta.32\"\n */\nexport const baseVersion = () =>\n  [versionMajor, versionMinor, versionPatch].join(\".\")\n\nexport const versionMajorMinor = versionMajor + \".\" + versionMinor\n","/**\n * Updated when Curators, AssetFile schema, or metadata changes warrant\n * re-updating all AssetFiles from files\n */\n// 8: v0.7.x\n// 9: v0.8.x: new image hashes, spread dominant colors\n// 10: v0.8.0: remove searchHash and rightHash\n// 11: v0.8.3: fix ImageId to prefix the tag. Support greyscale images.\n// 12: v2.1: new dominant color percentages\nexport const AssetFileVersion = 12\n\n// 2: v0.8.x: new taggers\n// 3: v1.0.0: new people, album, and taggers\nexport const AssetVersion = 3\n","import { pidExists } from \"batch-cluster\"\nimport { toA } from \"../fe/toA\"\nimport { untilTrue } from \"./async/until\"\n\nexport function existingPids(pids: number[]): number[] {\n  return toA(pids).filter(pidExists)\n}\n\nexport function waitForPidExit(\n  pid: number,\n  timeoutMs: number\n): Promise<boolean> {\n  return untilTrue(() => !pidExists(pid), { timeoutMs, intervalMs: 250 })\n}\n","import child_process from \"child_process\"\nimport process from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { compact, isEmpty } from \"../fe/Array\"\nimport { notBlank } from \"../fe/Blank\"\nimport { ago, minuteMs, secondMs } from \"../fe/Date\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { gt, gt0, lt, toInt } from \"../fe/Number\"\nimport { opt } from \"../fe/Opt\"\nimport { MaybeSyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { toA } from \"../fe/toA\"\nimport { toS } from \"../fe/toS\"\nimport { FifoCache } from \"./FifoCache\"\nimport { mkLogger } from \"./Logger\"\nimport { Try, identity } from \"./Object\"\nimport { ProcEntry, pidInfos } from \"./Ps\"\nimport { rateLimited } from \"./RateLimited\"\nimport { Endable, EndableRanks, ending } from \"./async/Endable\"\nimport { EndableWrapper } from \"./async/EndableWrapper\"\nimport { thenMap } from \"./async/Promise\"\nimport { setUnrefInterval } from \"./async/Timers\"\nimport { configDir } from \"./dir/ConfigDir\"\nimport { onError } from \"./error/OnError\"\nimport { BaseFile } from \"./fs/BaseFile\"\nimport { isJsonExt } from \"./fs/FileExt\"\nimport { isHiddenBasename, parseNativePath } from \"./fs/Path\"\nimport { isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\n\n// TODO: move to ./proc/Pids.ts\nconst logger = lazy(() => mkLogger(\"proc.Pids\"))\n\nexport interface PidfileInfo {\n  pid: number\n  cmd: string // < only for debugging\n  ppid: number // < if ppid is gone, reap.\n  /**\n   * If <= 0, the process can run indefinitely (like web or sync)\n   */\n  maxAgeMs: number\n}\n\nexport interface PidfileJson extends PidfileInfo {\n  startTime: number\n  timeoutTime?: number\n}\n\n// yeah, it's a lot of slop, but addPid() is called after a timeout, so start\n// isn't really the start time.\nconst AllowableStartSlopMs = 10 * secondMs\n\nfunction matchesPidfileInfo(\n  info: Maybe<PidfileJson>,\n  entry: Maybe<ProcEntry>\n): boolean {\n  if (info == null || entry == null || info.pid !== entry.pid) return false\n\n  // The start times need to match, ish:\n  const entryStartTime = map(entry.start, ea => ea.getTime())\n  const fileStartTime = info.startTime\n  return (\n    gt0(entryStartTime) &&\n    gt0(fileStartTime) &&\n    Math.abs(entryStartTime - fileStartTime) < AllowableStartSlopMs\n  )\n\n  // Command names can change, so we just use the start time to match PIDs.\n}\n\nfunction killPidWinTaskkill(pid: number, force = false) {\n  const args = [\"/PID\", toS(toInt(pid)), \"/T\"]\n  if (force) {\n    args.push(\"/F\")\n  }\n  child_process.execFile(\"taskkill\", args)\n}\n\nasync function killPidWin(pid: number, force = false) {\n  if (ending() || PowerShell.instance().ended) {\n    killPidWinTaskkill(pid, force)\n  } else {\n    try {\n      // https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/stop-process?view=powershell-6\n      const cmd = compact([\n        \"Stop-Process\",\n        \"-Id\",\n        toInt(pid),\n        force ? \"-Force\" : undefined\n      ]).join(\" \")\n      await PowerShell.instance().execute(cmd, identity)\n    } catch (err) {\n      logger().warn(\"killWin(): pwsh error, using TASKKILL: \" + err)\n      killPidWinTaskkill(pid, force)\n    }\n  }\n}\n\nasync function killPidWithNode(pid: number, force = false) {\n  try {\n    process.kill(pid, force ? \"SIGKILL\" : \"SIGTERM\")\n  } catch (err) {\n    if (!String(err).includes(\"ESRCH\")) throw err\n  }\n}\n\n/**\n * Send a signal to the given process id.\n *\n * @param {number} pid the process id. Required.\n * @param {boolean} [force=false] if true, and the current user has\n * permissions to send the signal, the pid will be forced to shut down.\n */\nexport function killPid(\n  pid: number,\n  force = false,\n  rewritePidfileOnForce = true\n) {\n  logger().log(force ? \"warn\" : \"debug\", \"killPid\", { pid, force })\n  if (pid === process.pid || pid === process.ppid) {\n    throw new Error(\"cannot self-terminate\")\n  }\n  if (force && rewritePidfileOnForce) {\n    void Pids.instance()?.onKill(pid)\n  }\n  return isWin ? killPidWin(pid, force) : killPidWithNode(pid, force)\n}\n\nexport class Pids {\n  static readonly instance = lazy(() =>\n    map(configDir(), dir => new Pids(BaseFile.for(dir).join(\"pids\")))\n  )\n  private readonly recentPids = new FifoCache<Promise<BaseFile>>(10 * secondMs)\n  constructor(readonly pidsDir: BaseFile) {\n    //\n  }\n\n  async addPid(\n    info: PidfileInfo,\n    start: Date,\n    force = false\n  ): Promise<BaseFile> {\n    if (info == null) {\n      throw new Error(\"undefined info\")\n    }\n    const pid = info.pid\n    if (!gt0(pid)) {\n      throw new Error(\"undefined pid\")\n    }\n    const key = info.ppid + \":\" + info.pid\n    if (force) this.recentPids.delete(key)\n    return this.recentPids.getOrSet(key, async () => {\n      const f = this.pidsDir.join(info.pid + \".json\")\n      const cmd = opt(Try(() => parseNativePath(info.cmd).base))\n        .filter(notBlank)\n        .getOrElse(() => info.cmd)\n\n      const startTime = start.getTime()\n      const json: PidfileJson = {\n        ...info,\n        cmd,\n        startTime\n      }\n      // no need to fslock for pidfiles\n      await f.writeJson_(json)\n      logger().debug(\"addPid() wrote \" + f, json)\n      return f\n    })\n  }\n\n  pidfiles() {\n    return this.pidsDir.clear().children(ea => {\n      const pid = toInt(ea.name)\n      return ea.ext === \".json\" && pid != null && pid !== process.pid\n    })\n  }\n\n  async pids(pidfiles: MaybeSyncOrAsync<BaseFile[]> = this.pidfiles()) {\n    return compact(toA(await pidfiles).map(ea => toInt(ea.name)))\n  }\n\n  async onKill(pid: number): PromiseMaybe<BaseFile> {\n    const pidfile = this.pidsDir.join(pid + \".json\")\n    return thenMap(pidfile.clear().readJson<PidfileJson>(), priorInfo =>\n      this.addPid({ ...priorInfo, maxAgeMs: 1 }, ago(minuteMs), true).catch(\n        err => {\n          logger().info(\"onKill(): failed to rewrite pidfile: \" + err, { pid })\n          return undefined\n        }\n      )\n    )\n  }\n\n  readonly vacuumOldWip = rateLimited({\n    name: \"Pids.vacuumOldWip()\",\n    minCallDelayMs: minuteMs,\n    f: async () => {\n      // look for and delete old WIPs\n      const minMtime = Date.now() - 2 * minuteMs\n      const old = await this.pidsDir.childFiles(\n        async ea =>\n          isJsonExt(ea) &&\n          isHiddenBasename(ea.base) &&\n          lt(await ea.mtimeMs(), minMtime)\n      )\n      for (const ea of toA(old)) {\n        logger().warn(\"killOldProcs(): deleting old pid WIP, \" + ea.base)\n        await ea.unlink(\"debug\")\n      }\n    }\n  })\n\n  /**\n   * @param everything if `true`, ignore pidfile maxAgeMs.\n   * @param force given to `kill`.\n   */\n  readonly killOldProcs = rateLimited({\n    name: \"Pids.killOldProcs()\",\n    minCallDelayMs: minuteMs,\n    f: async (\n      opts: {\n        everything?: boolean\n        force?: boolean\n        everythingBefore?: number\n      } = {}\n    ) => {\n      await this.vacuumOldWip()\n      const everything = opts.everything ?? false\n      const force = opts.force ?? isWin\n      const pidfiles = await this.pidfiles()\n      const pids = await this.pids(pidfiles ?? [])\n      if (isEmpty(pids)) {\n        logger().info(\"killOldProcs(): no pidfiles\")\n        return []\n      }\n      const killed: (PidfileJson & Partial<ProcEntry>)[] = []\n\n      const endPromises: Promise<void>[] = []\n\n      const pidEntries = await pidInfos(pids)\n      if (pidEntries == null) {\n        onError(\"Pids.killOldProcs(): failed to get process information\")\n        return\n      }\n\n      for (const pidfile of pidfiles!) {\n        const pid = toInt(pidfile.name)\n        if (pid == null) {\n          logger().warn(\"killOldProcs(): null pid from \" + pidfile.base)\n          await pidfile.unlink(\"debug\")\n          continue\n        }\n\n        const json = await pidfile.readJson<PidfileJson>()\n        if (json == null) {\n          logger().warn(\n            \"killOldProcs(): failed to read pidfile \" + pidfile.base\n          )\n          await pidfile.unlink(\"debug\")\n          continue\n        }\n        if (json.pid !== pid) {\n          // WHAT?\n          logger().warn(\n            \"killOldProcs(): json.pid != name: unlinking invalid pidfile \" +\n              pidfile.base,\n            { json, pid }\n          )\n          await pidfile.unlink(\"debug\")\n          continue\n        }\n\n        const pidEntry = pidEntries.find(ea => ea.pid === pid)\n        if (pidEntry == null || !matchesPidfileInfo(json, pidEntry)) {\n          logger().debug(\n            \"killOldProcs(): pid no longer present: unlinking \" + pidfile.base,\n            { json, pidEntry }\n          )\n          await pidfile.unlink(\"debug\")\n          killed.push(json)\n          continue\n        }\n\n        const timeoutAt = gt0(json.maxAgeMs)\n          ? json.startTime + json.maxAgeMs\n          : undefined\n\n        const reason = everything\n          ? \"all pids are being shut down\"\n          : gt(Date.now(), timeoutAt)\n          ? `timed out ${Date.now() - timeoutAt!} ms ago`\n          : lt(json.startTime, opts.everythingBefore)\n          ? \"cleanup everything before \" +\n            new Date(opts.everythingBefore!).toISOString()\n          : undefined\n\n        if (reason != null) {\n          logger().info(\"killOldProcs(): killing\", {\n            reason,\n            json\n          })\n          endPromises.push(killPid(pid, force, false))\n          killed.push({ ...json, ...pidEntry })\n          // ... we'll remove the pidfile once the process exits ...\n        }\n      }\n      if (endPromises.length > 0) {\n        await Promise.allSettled(endPromises)\n      }\n\n      return killed\n    }\n  })\n}\n\nexport function addPid(\n  info: PidfileInfo,\n  start: Date\n): Maybe<Promise<BaseFile>> {\n  return Pids.instance()?.addPid(info, start)\n}\n\n// Should only be invoked by MainService\nexport const ProcCleaner = lazy<Endable>(() => {\n  const timers = [\n    // TCBH: prime intervals so they don't collide unnecessarily:\n    { everything: false, force: false, intervalMs: 5 * minuteMs },\n    { everything: false, force: true, intervalMs: 17 * minuteMs }\n  ].map(ea =>\n    setUnrefInterval(() => Pids.instance()?.killOldProcs(ea), ea.intervalMs)\n  )\n  return new EndableWrapper(\n    \"ProcCleaner\",\n    () => {\n      timers.map(clearInterval)\n      return Pids.instance()?.killOldProcs()\n    },\n    EndableRanks.predb\n  )\n})\n","import os from \"os\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { strEnum, StrEnumKeys } from \"../fe/StrEnum\"\n\n// From https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processpriorityclass?view=netframework-4.8\n\n// AboveNormal Specifies that the process has priority higher than Normal but\n// lower than High.\n\n// BelowNormal Specifies that the process has priority above Idle but below\n// Normal.\n\n// High Specifies that the process performs time-critical tasks that must be\n// executed immediately, such as the Task List dialog, which must respond\n// quickly when called by the user, regardless of the load on the operating\n// system. The threads of the process preempt the threads of normal or idle\n// priority class processes. Use extreme care when specifying High for the\n// process's priority class, because a high priority class application can use\n// nearly all available processor time.\n\n// Idle Specifies that the threads of this process run only when the system is\n// idle, such as a screen saver. The threads of the process are preempted by the\n// threads of any process running in a higher priority class. This priority\n// class is inherited by child processes.\n\n// Normal Specifies that the process has no special scheduling needs.\n\nexport const PriorityClasses = strEnum(\"Normal\", \"BelowNormal\", \"Idle\", \"Low\")\n\nexport type PriorityClass = StrEnumKeys<typeof PriorityClasses>\n\n// PRIORITY_LOW: 19,\n// PRIORITY_BELOW_NORMAL: 10,\n// PRIORITY_NORMAL: 0,\n// PRIORITY_ABOVE_NORMAL: -7,\n// PRIORITY_HIGH: -14,\n// PRIORITY_HIGHEST: -20\n\nexport const PriorityClassToPosix = Object.freeze({\n  Normal: 0,\n  BelowNormal: 10,\n  Low: 19,\n  Idle: 19\n}) satisfies Record<PriorityClass, number>\n\nexport const PriorityClassToNode = Object.freeze({\n  AboveNormal: os.constants.priority.PRIORITY_ABOVE_NORMAL,\n  Normal: os.constants.priority.PRIORITY_NORMAL,\n  BelowNormal: os.constants.priority.PRIORITY_BELOW_NORMAL,\n  Idle: os.constants.priority.PRIORITY_LOW,\n  Low: os.constants.priority.PRIORITY_LOW\n}) satisfies Record<PriorityClass, number>\n\nexport function priorityPosixToClass(\n  priority: Maybe<number>\n): Maybe<PriorityClass> {\n  if (priority == null || !isFinite(priority)) {\n    return\n  } else if (priority < PriorityClassToPosix.BelowNormal) {\n    return PriorityClasses.Normal\n  } else if (priority < PriorityClassToPosix.Idle) {\n    return PriorityClasses.BelowNormal\n  } else {\n    return PriorityClasses.Idle\n  }\n}\n","import process from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { isEmpty, isNotEmpty, uniq } from \"../fe/Array\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank, notBlank } from \"../fe/Blank\"\nimport { secondMs } from \"../fe/Date\"\nimport { orElse } from \"../fe/Maybe\"\nimport { PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { gt0, toInt } from \"../fe/Number\"\nimport { onlyReqValued } from \"../fe/Object\"\nimport { toA } from \"../fe/toA\"\nimport { toS } from \"../fe/toS\"\nimport { collectBatchedAsync } from \"./Array\"\nimport { parseFixed } from \"./Fixed\"\nimport { mkLogger } from \"./Logger\"\nimport { existingPids } from \"./Pid\"\nimport { StartTs } from \"./StartTs\"\nimport { pwshJsonDate, wmiDate } from \"./WinDate\"\nimport { thenMap } from \"./async/Promise\"\nimport { StdoutOpts, stdoutResult_, stdout_ } from \"./child/ChildProcess\"\nimport { wmic } from \"./fs/PathTo\"\nimport { isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\n\nexport interface ProcEntry {\n  pid: number\n  start: Date\n  cmd: string\n}\n\n// TODO: move to ./proc/Ps.ts\nconst logger = lazy(() => mkLogger(\"proc.ps\"))\n\nexport function isProcEntry(pe: any): pe is ProcEntry {\n  return pe != null && gt0(pe.pid) && pe.start != null && notBlank(pe.cmd)\n}\n\nexport async function ps(): Promise<ProcEntry[]> {\n  const procs = await (isWin ? psWin() : psPosix())\n  return orElse(\n    sortBy(procs.filter(isProcEntry), ea => ea.pid),\n    []\n  )\n}\n\nexport async function pidInfo(pid: number): PromiseMaybe<ProcEntry> {\n  return thenMap(pidInfos([pid]), arr => toA(arr).find(ea => ea.pid === pid))\n}\n\nexport async function notExistingPids(pids: number[]): PromiseMaybe<number[]> {\n  if (isEmpty(pids)) return []\n  return thenMap(existingPids(pids), arr => {\n    const alive = [process.pid, ...arr]\n    return pids.filter(ea => !alive.includes(ea))\n  })\n}\n\nexport async function pidInfos(pids: number[]): PromiseMaybe<ProcEntry[]> {\n  const arr = existingPids(pids)\n\n  const arr2 = await collectBatchedAsync<number, ProcEntry>(\n    arr,\n    20,\n    isWin ? pidInfoWin : pidInfoPosix\n  )\n  const result = arr2.filter(ea => isProcEntry(ea) && arr.includes(ea.pid))\n  return logger().tap({ msg: \"pidInfos()\", result, meta: { pids } })\n}\n\nfunction win2pe(arr: any[]): ProcEntry[] {\n  return arr.map((entry: any) => ({\n    pid: entry.Id,\n    start: pwshJsonDate(entry.StartTime),\n    cmd: entry.ProcessName\n  })) as ProcEntry[]\n}\n\nconst PsWinCmd = \"Get-Process\"\nconst PsWinSelectObj = \"| Select-Object -Property Id,ProcessName,StartTime\"\n\nasync function psWin(): Promise<ProcEntry[]> {\n  if (PowerShell.instance().ended) return psWinWmic()\n  const result = await PowerShell.instance().executeJsonToA(\n    [PsWinCmd, PsWinSelectObj].join(\" \")\n  )\n  return result == null ? psWinWmic() : win2pe(result)\n}\n\nfunction pidToS(pids: number[]): string {\n  return uniq([...pids.filter(gt0), process.pid]).join(\",\")\n}\n\nasync function pidInfoWin(pids: number[]): PromiseMaybe<ProcEntry[]> {\n  if (PowerShell.instance().ended) return psWinWmic(pids)\n  const cmd = [\n    PsWinCmd,\n    \"-Id\",\n    // PowerShell wants the IDs joined by comma:\n    pidToS(pids),\n    \"-ErrorAction SilentlyContinue\", // I expect it not to find some pids\n    PsWinSelectObj\n  ].join(\" \")\n  return thenMap(PowerShell.instance().executeJsonToA(cmd), ea => win2pe(ea))\n}\n\nconst stdoutOpts: StdoutOpts = {\n  maxBuffer: 1024 * 1024, // windows process lists can be enormous\n  timeoutMs: 15 * secondMs, // ps sometimes takes a long time\n  ignoreExitCode: true,\n  ignoreStderr: true\n}\n\nconst headers: (\"CommandLine\" | \"CreationDate\" | \"ProcessId\")[] = [\n  \"CommandLine\",\n  \"CreationDate\",\n  \"ProcessId\"\n]\n\n// NOTE: only used if powershell is shut down\nexport async function psWinWmic(pids?: number[]): Promise<ProcEntry[]> {\n  const args = [\"process\"]\n  if (isNotEmpty(pids)) {\n    // wmic wants multiple PIDs as or clauses, like\n    // wmic process where \"ProcessId=11308 or ProcessId=9416\"\n    const processIdClause = uniq([...pids.filter(gt0), process.pid])\n      .map(ea => `ProcessId=${ea}`)\n      .join(\" or \")\n    args.push(\"where\", processIdClause)\n  }\n  args.push(\"get\", headers.join(\",\"))\n  const result = await stdoutResult_(wmic(), args, stdoutOpts)\n  const results = onlyReqValued(\n    parseFixed(headers, result.result).map((ea: any) => ({\n      pid: toInt(ea.ProcessId, { defaultValue: -1 })!,\n      start: wmiDate(ea.CreationDate),\n      cmd: toS(ea.CommandLine)\n    }))\n  )\n  if (!results.find(ea => ea.pid === process.pid)) {\n    results.push({\n      pid: process.pid,\n      start: new Date(StartTs),\n      cmd: \"node \" + process.title\n    })\n  }\n  return results\n}\n\nfunction psStdout2ProcEntry(result: string): ProcEntry[] {\n  if (blank(result)) return []\n  return parseFixed(\n    [\"PID\", { text: \"STARTED\", greedyLeft: true }, \"COMMAND\"],\n    result\n  ).map((ea: any) => ({\n    pid: toInt(ea.PID, { defaultValue: -1 })!,\n    start: new Date(ea.STARTED),\n    cmd: toS(ea.COMMAND)\n  }))\n}\n\nasync function psPosix(): Promise<ProcEntry[]> {\n  return psStdout2ProcEntry(\n    await stdout_(\"ps\", [\"-ewwwo\", \"pid,lstart,command\"], stdoutOpts)\n  )\n}\n\n/**\n * @param pid the pid to look for\n * @return an array of either just this process, or the process and the requested pid.\n */\nasync function pidInfoPosix(pids: number[]): Promise<ProcEntry[]> {\n  const r = await stdoutResult_(\n    \"ps\",\n    // we include the current pid to prevent either `ps` or the fixed parser\n    // from grumping at us:\n    [\"-p\", pidToS(pids), \"-wwwo\", \"pid,lstart,command\"],\n    {\n      ...stdoutOpts,\n      ignoreExitCode: true\n    }\n  )\n  return psStdout2ProcEntry(r.result)\n}\n","import { Radix, TokenRadix } from \"./math/Radix\"\nimport { decuss } from \"./words/Cuss\"\n\n// Extracted from Radix to break deploop between Radix > Cuss > ProjectPath\n\nexport function safeRandomChars({\n  radix = TokenRadix,\n  length\n}: {\n  radix: Radix\n  length: number\n}): string {\n  return decuss(() => radix.randomChars(length))\n}\n\nexport function safeRandomUid(args?: {\n  radix?: Radix\n  chars?: number\n  splitEveryN?: number\n  sepChar?: string\n}): string {\n  return decuss(() =>\n    (args?.radix ?? TokenRadix).randomUid(\n      args?.chars ?? 20,\n      args?.splitEveryN ?? 5,\n      args?.sepChar ?? \"-\"\n    )\n  )\n}\n","import { delay } from \"../fe/Delay\"\nimport { Latch } from \"../fe/Latch\"\nimport { Maybe, PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { gt0, max_ } from \"../fe/Number\"\nimport { SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { Deferred } from \"./async/Deferred\"\nimport { setUnrefTimeout } from \"./async/Timers\"\nimport { WrappedError } from \"./error/WrappedError\"\n\nexport interface RateLimited<T> {\n  (...args: any[]): PromiseMaybe<T>\n  // unschedule any pending future calls\n  clear(): void\n  isRateLimited(): boolean\n  minCallDelayMs(): number\n  setMinCallDelayMs(millis: number): void\n  donePromise(): Promise<void>\n  force(...args: any[]): PromiseMaybe<T>\n  status(): {\n    running: boolean\n    needToDelay: boolean\n    delayNextRunUntil: number\n  }\n}\n\n/**\n * Ensures no concurrent invocations, and a delay between method calls to be at\n * least `minCallDelayMs`.\n *\n * As opposed to debounce, this implementation will only postpone a\n * call to f() at most every timeoutMs, rather than postponing forever.\n */\nexport function rateLimited<T>({\n  f,\n  minCallDelayMs,\n  timeoutMs = undefined,\n  nullOnBusy,\n  name\n}: {\n  f: (...args: any[]) => SyncOrAsync<T>\n  minCallDelayMs: number\n  timeoutMs?: number\n  nullOnBusy?: boolean\n  name: string\n}): RateLimited<T> {\n  let running = false\n  let delayNextRunUntil: number = 0\n  let priorResult: Maybe<Deferred<T>>\n  let nextArgs: Maybe<any[]>\n  minCallDelayMs = Math.ceil(minCallDelayMs)\n\n  const doneLatches: Latch[] = []\n\n  function isRateLimited() {\n    return running || delayNextRunUntil > Date.now()\n  }\n\n  function afterRunDelay() {\n    if (nextArgs != null) {\n      const arr = nextArgs\n      nextArgs = undefined\n      void r(...arr)\n    }\n  }\n\n  async function postRun() {\n    running = false\n    delayNextRunUntil = Date.now() + minCallDelayMs\n\n    setUnrefTimeout(afterRunDelay, minCallDelayMs + 1)\n\n    // only release latches _after_ we've marked ourselves as not running:\n    doneLatches.forEach(ea => ea.resolve())\n    doneLatches.length = 0\n  }\n\n  async function run(...args: any[]) {\n    running = true\n    delayNextRunUntil = Date.now() + max_(minCallDelayMs, timeoutMs)\n\n    // We get to run!\n    const d = (priorResult = new Deferred<T>(name))\n    if (gt0(timeoutMs)) void d.setTimeout(timeoutMs)\n    try {\n      void d.resolve(await f(...args))\n    } catch (cause) {\n      void d.reject(\n        new WrappedError(\"RateLimited(\" + name + \") failed\", { cause })\n      )\n    } finally {\n      void postRun()\n    }\n    return d.promise\n  }\n\n  const r: any = (...args: any[]) => {\n    if (isRateLimited()) {\n      if (nullOnBusy === true) {\n        return null\n      }\n      const result = priorResult?.promise\n      nextArgs = args\n      // the delay breaks hard loops:\n      return delay(1).then(() => result)\n    } else {\n      return run(...args)\n    }\n  }\n  r.clear = () => {\n    nextArgs = undefined\n  }\n\n  r.donePromise = () => {\n    if (!running) return Promise.resolve()\n    const l = new Latch()\n    doneLatches.push(l)\n    return l\n  }\n\n  r.force = async (...args: any[]) => {\n    // unschedule any other runs\n    nextArgs = undefined\n    // wait for the prior run:\n    if (running) await r.donePromise()\n    running = false\n    delayNextRunUntil = 0\n    return r(...args)\n  }\n\n  r.isRateLimited = () => isRateLimited()\n  r.status = () => {\n    return {\n      running,\n      needToDelay: delayNextRunUntil > Date.now(),\n      minNextDelayMs: Math.max(0, Date.now() - delayNextRunUntil)\n    }\n  }\n  r.minCallDelayMs = () => minCallDelayMs\n  r.setMinCallDelayMs = (ms: number) => {\n    minCallDelayMs = ms\n  }\n  return r\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { pick } from \"../fe/Object\"\nimport { toS } from \"../fe/toS\"\n\nexport type IndexedString = [string, number]\n\n/**\n * Given a RegExp and string, return all captured groups and their starting\n * index.\n */\nexport function captures(\n  regex: RegExp,\n  str: string\n): Pick<RegExpExecArray, \"index\" | \"groups\">[] {\n  const result = []\n  if (!regex.global) throw new Error(\"must provide global regex\")\n  let m: RegExpExecArray | null\n  while ((m = regex.exec(str)) != null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++\n    } else {\n      result.push(pick(m, \"index\", \"groups\"))\n    }\n  }\n  return result\n}\n\nexport function escapeRegExp(s: string | RegExpEscaped): string {\n  return s instanceof RegExpEscaped\n    ? s.source\n    : toS(s).replace(/[-.,\\\\^$*+?()|[\\]{}]/g, \"\\\\$&\")\n}\n\nexport function matchQuotes(s: string) {\n  return s.replace(/[‘’']/g, \"[‘’']\").replace(/[“”„”«»〃\"]/g, `[“”„”«»〃\"]`)\n}\n\nexport function joinPatterns(arr: string[], flags?: string): RegExp {\n  const result = []\n  for (const ea of arr) {\n    try {\n      new RegExp(ea)\n      result.push(ea)\n    } catch {\n      result.push(escapeRegExp(ea))\n    }\n  }\n  return new RegExp(result.join(\"|\"), flags)\n}\n\n/**\n * When provided to `concatRegexp()`, this `source` won't be further\n * escaped.\n *\n * This is only useful if a snippet of a regular expression is not valid by\n * itself (as it doesn't include balanced parenthesis or other grouping\n * constructs).\n */\nexport class RegExpEscaped {\n  constructor(\n    readonly source: string,\n    readonly flags?: string\n  ) {}\n\n  get global() {\n    return this.flags?.includes(\"g\") ?? false\n  }\n  get ignoreCase() {\n    return this.flags?.includes(\"m\") ?? false\n  }\n  get multiline() {\n    return this.flags?.includes(\"i\") ?? false\n  }\n}\n\nexport class RegExpOptional extends RegExpEscaped {\n  static from(...arr: Maybe<RegExp | string | RegExpEscaped>[]) {\n    const re = concatRegexp(arr)\n    return new RegExpOptional(\"(?:\" + re.source + \")?\", re.flags)\n  }\n}\n\nexport function concatRegexp(\n  arr: Maybe<RegExp | string | RegExpEscaped>[],\n  flags?: string\n): RegExp {\n  let re = \"\"\n  let global = flags?.includes(\"g\") ?? false\n  let ignoreCase = flags?.includes(\"i\") ?? false\n  let multiline = flags?.includes(\"m\") ?? false\n  for (const ea of arr) {\n    if (ea instanceof RegExpEscaped || ea instanceof RegExp) {\n      re += ea.source\n      global ||= ea.global\n      ignoreCase ||= ea.ignoreCase\n      multiline ||= ea.multiline\n    } else {\n      re += escapeRegExp(toS(ea))\n    }\n  }\n  return new RegExp(\n    re,\n    flags ??\n      (global ? \"g\" : \"\") + (ignoreCase ? \"i\" : \"\") + (multiline ? \"m\" : \"\")\n  )\n}\n","import os from \"os\"\nimport path from \"path\"\nimport { lazy } from \"../core/Lazy\"\nimport { compactBlanks } from \"../fe/Array\"\nimport { minuteMs, secondMs } from \"../fe/Date\"\nimport { later } from \"../fe/Delay\"\nimport { flatten } from \"../fe/Flatten\"\nimport { gt0 } from \"../fe/Number\"\nimport { ensureSuffix } from \"../fe/String\"\nimport { toS } from \"../fe/toS\"\nimport { mkLogger } from \"./Logger\"\nimport {\n  PriorityClass,\n  PriorityClassToNode,\n  PriorityClassToPosix,\n  PriorityClasses,\n  priorityPosixToClass\n} from \"./PriorityClass\"\nimport { TTLSet } from \"./TTLSet\"\nimport { stdoutResult_ } from \"./child/ChildProcess\"\nimport { ee } from \"./event/EventEmitter\"\nimport { isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\nimport { Settings } from \"./settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"Renice\"))\n\n// HEY FUTURE ME: reniced.prior()?.clear() is NOT THE SAME as reniced.unset()\n// -- we want to keep the prior TTLSet to avoid creating more memory garbage.\nlater(() => ee().on(\"clearCache\", () => reniced.prior()?.clear()))\n\n// 20220215: changed to a include-list, because we really only care to nice\n// sync, worker, ffmpeg, and vlc.\n\n// Don't renice web, renice, ps, df, ...\n\nconst niceableCmds = lazy(() => [\n  \"sync.js\",\n  \"worker.js\",\n  ...flatten(\n    [\n      \"dcraw_emu\",\n      path.basename(Settings.ffmpegPath.valueOrDefault),\n      path.basename(Settings.vlcPath.valueOrDefault)\n    ].map(ea => (isWin ? [ea, ensureSuffix(ea, \".exe\")] : ea))\n  )\n])\n\nexport function niceable(\n  cmd: string,\n  args: string[] | readonly string[]\n): boolean {\n  return compactBlanks([\n    path.basename(cmd),\n    ...args.map(ea => path.basename(ea))\n  ]).some(ea => niceableCmds().includes(ea.toLowerCase()))\n}\n\nlet nodeReniceWorks = true\n\nconst reniced = lazy(() => new TTLSet<number>(minuteMs))\n\n// both the batch cluster observer and child services renice, which makes sync-file get\n// double-renice-d.\nexport async function renice(pid: number | undefined, priority?: number) {\n  if (!gt0(pid) || reniced().has(pid)) return\n  reniced().add(pid)\n\n  const priorityClass: PriorityClass =\n    priorityPosixToClass(priority) ??\n    (Settings.processPriority.valueOrDefault as PriorityClass)\n\n  priority ??= PriorityClassToNode[priorityClass]\n\n  if (nodeReniceWorks) {\n    try {\n      os.setPriority(pid, priority)\n      return priority\n    } catch (error: any) {\n      // if it's a permission issue, don't try other methods.\n      const permissionDenied =\n        error?.errno === -13 || error?.info?.code === \"EACCES\"\n\n      logger().warn(\"Failed to renice using node:os\", {\n        pid,\n        priority,\n        permissionDenied,\n        error\n      })\n\n      if (permissionDenied) {\n        // it's not node's fault!\n        return\n      }\n      nodeReniceWorks = false\n      // try os-specific methods below:\n    }\n  }\n\n  try {\n    await (isWin\n      ? reniceWin(pid, priorityClass)\n      : renicePosix(\n          pid,\n          PriorityClassToPosix[priorityClass] ??\n            PriorityClassToPosix.BelowNormal\n        ))\n    logger().info(\"Renice pid \" + pid + \" to \" + priorityClass)\n    return priority\n  } catch (err) {\n    // Probably because the process already ended:\n    logger().info(\"Failed to renice pid \" + pid, err)\n    return\n  }\n}\n\nasync function reniceWin(pid: number, pc: PriorityClass) {\n  if (gt0(pid) && PriorityClasses.includes(pc)) {\n    await PowerShell.instance()\n      .execute(`(Get-Process -Id ${pid}).PriorityClass = \"${pc}\"`, ea => ea)\n      .catch(error => logger().info(\"reniceWin() failed\", error))\n  }\n}\n\nasync function renicePosix(pid: number, nice = 19) {\n  await stdoutResult_(\"renice\", [nice, \"-p\", pid].map(toS), {\n    timeoutMs: 10 * secondMs,\n    isIgnorableError: () => true,\n    ignoreExitCode: true\n  }).catch(error => logger().info(\"renicePosix() failed\", error))\n}\n","import process from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { compactBlanks } from \"../fe/Array\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { ServiceName, ServiceNames } from \"../fe/ServiceNames\"\nimport { toS } from \"../fe/toS\"\nimport { isTest } from \"./NodeEnv\"\nimport { isPacked } from \"./platform/IsPacked\"\n\nexport const serviceName = lazy<ServiceName>(() => {\n  if (isPacked()) {\n    throw Error(\"serviceName() is unset\")\n  } else {\n    return \"\" as any\n  }\n})\n\nexport const processName = lazy(() =>\n  compactBlanks([serviceName.prior(), toS(process.pid)]).join(\"-\")\n)\n\nserviceName.watchLater(() => {\n  processName.unset()\n})\n\nexport function serviceNameIndex(s: Maybe<ServiceName>): number {\n  return ServiceNames.indexOf(s) ?? ServiceNames.length + 1\n}\n\nexport const MainServices: ServiceName[] = [\n  ServiceNames.main,\n  ServiceNames.desktop\n]\n\n/**\n * If a database isn't available, these services can't run\n */\nexport const DbServices: ServiceName[] = [\n  ServiceNames.sync,\n  ServiceNames.info,\n  ServiceNames.web,\n  ServiceNames.list,\n  ServiceNames.test\n]\n\nexport function isDbService() {\n  return DbServices.includes(serviceName())\n}\n\nexport function isLibraryRequiredService() {\n  return [ServiceNames.sync, ServiceNames.list].includes(serviceName() as any)\n}\n\nexport function isServiceThatAcceptsFatalErrors() {\n  return !isMainService() && !isWebService()\n}\n\nexport function isMainService(name?: ServiceName) {\n  // \"main\" and \"desktop\" are both \"main services\". We only discriminate between\n  // them when the CLI is rendered.\n  return MainServices.includes(name ?? serviceName())\n}\n\nexport function isWebService(name?: ServiceName) {\n  return (name ?? serviceName()) === ServiceNames.web\n}\n\nexport function isBillingService(name?: ServiceName) {\n  return (name ?? serviceName()) === ServiceNames.billing\n}\n\nexport function isWorkerService(name?: ServiceName) {\n  return (name ?? serviceName()) === ServiceNames.worker\n}\n\nexport function isSyncService(name?: ServiceName) {\n  return (name ?? serviceName()) === ServiceNames.sync\n}\n\nexport function isInfoService() {\n  return serviceName() === ServiceNames.info\n}\n\nexport function isTestService() {\n  return serviceName() === ServiceNames.test\n}\n\nfunction isTestNotWorker() {\n  return (isTest || isTestService()) && !isWorkerService()\n}\n\nexport const StatsDbServices: ServiceName[] = [ServiceNames.sync]\n\nexport function isStatsDbService() {\n  return isSyncService()\n}\n\nexport function isStatsDbMigrator() {\n  return isStatsDbService() || isTestNotWorker()\n}\n\nexport function isModelDbMigrator() {\n  // Normally the web service is doing the migrations -- it's first to set up\n  // a library.\n  return isSyncService() || isWebService() || isTestNotWorker()\n}\n\n// Lazy so info can force --cleanup to run a backup:\nexport const isDbJanitorService = lazy(() => isSyncService() || isTestService())\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { Primitive } from \"../fe/Primitive\"\nimport { toA } from \"../fe/toA\"\n\nexport function asSet<T>(s: Maybe<Iterable<T>>): Set<T> {\n  return s instanceof Set ? s : new Set(toA(s))\n}\n\nexport function setEql<T>(a: Set<T>, b: Set<T>): boolean {\n  return (\n    toA(a.keys()).every(ea => b.has(ea)) && toA(b.keys()).every(ea => a.has(ea))\n  )\n}\n\nexport function getOrAdd<K, V>(s: Set<K>, k: K, onAdd: () => V): Maybe<V> {\n  if (k == null) throw new Error(\"null key\")\n  if (s.has(k)) {\n    return undefined\n  } else {\n    s.add(k)\n    return onAdd()\n  }\n}\n\n//\n// These only support primitives, as comparison is done with ==\n//\n\n/**\n * @return unique elements in a or b\n */\nexport function union<T extends Primitive>(\n  a: Iterable<T>,\n  b: Iterable<T>\n): Set<T> {\n  return new Set([...a, ...b])\n}\n\n/**\n * @return elements in a that are also in b\n */\nexport function intersection<T extends Primitive>(\n  a: Iterable<T>,\n  b: Iterable<T>\n): Set<T> {\n  const s = asSet(b)\n  return new Set([...a].filter(ea => s.has(ea)))\n}\n\n/**\n * @return elements in `a` that are not in `b`\n */\nexport function diff<T extends Primitive>(\n  a: Iterable<T>,\n  b: Iterable<T>\n): Set<T> {\n  const s = asSet(b)\n  return new Set([...a].filter(ea => !s.has(ea)))\n}\n","import { ServiceName, ServiceNames } from \"../fe/ServiceNames\"\nimport { setupLogger } from \"./log/SetupLogger\"\nimport { logStartup } from \"./LogStartup\"\nimport { isTest } from \"./NodeEnv\"\nimport { isMainService, serviceName } from \"./ServiceNames\"\n\nexport function setServiceName(s: ServiceName) {\n  // Normalize \"desktop\" to \"main\":\n  if (isMainService(s as any)) s = ServiceNames.main\n  const prior = serviceName.prior()\n  if (prior === s) return // already done\n\n  if (!isTest && prior != null && prior !== s) {\n    console.error(\"Don't set service name twice\", {\n      prior,\n      new: s\n    })\n  }\n  serviceName.set(s)\n  setupLogger()\n  logStartup()\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { time } from \"./async/PromiseTimer\"\n\n// TODO: add a cache to Shim0\n\nexport interface Shim0<R> {\n  (): Promise<R>\n  setShim(f: Maybe<() => Promise<R>>): void\n  hasShim(): boolean\n}\n\nexport function shim0<R>({\n  impl,\n  name\n}: {\n  impl: () => Promise<R>\n  name: string\n}): Shim0<R> {\n  let shim: undefined | (() => Promise<R>)\n\n  const f: Shim0<R> = () =>\n    time(\n      name + (shim == null ? \"(local)\" : \"(remote)\"),\n      shim != null ? shim() : impl()\n    )\n\n  f.setShim = (i: Maybe<() => Promise<R>>) => {\n    shim = i\n  }\n\n  f.hasShim = () => shim != null\n\n  return f\n}\n","import { later } from \"../fe/Delay\"\nimport { stringify } from \"../fe/JSON\"\nimport { MemoizedThunk } from \"../fe/Lazy\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0 } from \"../fe/Number\"\nimport { isString } from \"../fe/String\"\nimport { SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { FifoCacheAsync } from \"./FifoCacheAsync\"\nimport { Shim0 } from \"./Shim0\"\nimport { ee } from \"./event/EventEmitter\"\nimport { Settings } from \"./settings/Settings\"\n\n// NOTE: this is used statically, so BE CAREFUL WITH NEW CORE IMPORTS: they will\n// probably cause a dependency loop.\n\nexport interface Shim1<I, O> {\n  (input: I): Promise<O>\n  setShim(f: Maybe<(input: I) => SyncOrAsync<O>>): void\n  hasShim(): boolean\n  cache?: MemoizedThunk<FifoCacheAsync<O>>\n  cacheDelete(input: I): void\n}\n\nexport function shim1<I, R>({\n  name,\n  impl,\n  cache,\n  toKey = ea => (isString(ea) ? ea : stringify(ea))\n}: {\n  name: string\n  impl: (input: I) => SyncOrAsync<R>\n  cache?: MemoizedThunk<FifoCacheAsync<R>>\n  toKey?: (input: I) => string\n}): Shim1<I, R> {\n  let shim: Maybe<(input: I) => SyncOrAsync<R>>\n\n  const f = async (input: I) => {\n    const start = Date.now()\n    const result = await (shim != null ? shim(input) : impl(input))\n    ee().emit(\n      \"timing\",\n      name + (shim == null ? \"(local)\" : \"(remote)\"),\n      Date.now() - start\n    )\n    return result\n  }\n\n  const result: Shim1<I, R> = async (input: I) => {\n    if (cache == null) return f(input)\n    return cache().getOrSetAsync(toKey(input), async () => f(input))\n  }\n\n  result.setShim = (i: Maybe<(input: I) => Promise<R>>) => {\n    shim = i\n\n    if (cache != null && gt0(Settings.fsCacheSlowMs.valueOrDefault)) {\n      const c = cache()\n      const useFsCache = c.opts.useFsCache ?? false\n      c.readFsCache = useFsCache\n      c.writeFsCache = useFsCache && shim == null\n    }\n  }\n\n  later(() => {\n    // Make sure changes to useFsCache are reflected in the cache:\n    Settings.fsCacheSlowMs.watchLater(() => {\n      result.setShim(shim)\n    })\n  })\n\n  result.hasShim = () => shim != null\n\n  result.cache = cache\n\n  result.cacheDelete = (input: I) => cache?.().delete(toKey(input))\n\n  return result\n}\n\nexport type ShimReturnType<\n  T extends Shim0<any> | Shim1<any, any> | ((...args: any) => any)\n> = T extends Shim0<infer R>\n  ? Promise<R>\n  : T extends Shim1<any, infer R>\n  ? Promise<R>\n  : T extends (...args: any) => infer R\n  ? R\n  : any\n","import { secondMs } from \"../fe/Date\"\n\n/**\n * For commands that don't need to wait for a disk to spin up, and only return\n * something like --version\n *\n * Note that this is considered the longest time a human can wait before\n * overwhelmed by WTF IS GOING ON.\n */\nexport const ShortCommandTimeoutMs = 7 * secondMs\n","import { at } from \"../fe/At\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { Comparable } from \"../fe/Primitive\"\n\nexport class SortedSet<T> {\n  readonly store: T[] = []\n\n  constructor(readonly valueOf: (t: T) => Maybe<Comparable>) {}\n\n  get length() {\n    return this.store.length\n  }\n\n  addAll(...t: Maybe<T>[]) {\n    return t.map(ea => this.add(ea))\n  }\n\n  findIndex(t: Maybe<T>) {\n    return this.findValueIndex(t == null ? undefined : this.valueOf(t))\n  }\n\n  findValueIndex(v: Maybe<Comparable>) {\n    if (v == null) return\n\n    let low = 0,\n      high = this.store.length - 1\n\n    while (low <= high) {\n      const mid = low + Math.floor((high - low) / 2)\n      const midV = this.valueOf(this.store[mid])!\n      if (v === midV) return { found: true, index: mid }\n      else if (v > midV) low = mid + 1\n      else high = mid - 1\n    }\n    return { found: false, index: low }\n  }\n\n  add(t: Maybe<T>) {\n    const idx = this.findIndex(t)\n    if (idx?.found === false) {\n      this.store.splice(idx.index, 0, t!)\n    }\n    return idx\n  }\n\n  /**\n   * @see https://github.com/tc39/proposal-relative-indexing-method#polyfill\n   */\n  at(idx: number) {\n    return at(this.store, idx)\n  }\n\n  toA() {\n    return [...this.store]\n  }\n\n  /**\n   * Remove all the entries less than the given entry\n   */\n  shiftLte(c: Comparable): T[] {\n    const idx = this.findValueIndex(c)\n    if (idx == null || (idx.index === 0 && !idx.found)) return []\n    if (idx.index === this.store.length - 1) {\n      const result = [...this.store]\n      this.store.length = 0\n      return result\n    } else {\n      return this.store.splice(0, idx.index + (idx.found ? 1 : 0))\n    }\n  }\n\n  /**\n   * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n   * @param start The zero-based location in the array from which to start removing elements.\n   * @param deleteCount The number of elements to remove.\n   */\n  splice(start: number, deleteCount?: number): T[] {\n    const result = this.store.splice(start, deleteCount)\n    return result\n  }\n\n  retainLastN(n: number) {\n    if (n < this.length) {\n      this.splice(0, this.store.length - n)\n    }\n    return this.store\n  }\n}\n","export const StartTs = Date.now()\n\nexport function runtimeMs() {\n  return Date.now() - StartTs\n}\n","import { stderr } from \"process\"\nimport { SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { stdoutEnded } from \"./StdoutEnded\"\nimport { crlf } from \"./fs/CRLF\"\nimport { streamEnded } from \"./fs/StreamEnded\"\nimport { Settings } from \"./settings/Settings\"\n\n/**\n * Emit `msg` to stdout unless `quiet` is true\n */\nexport function consoleLog(msg: string, ...optionalParams: any[]) {\n  if (!Settings.quiet.valueOrDefault && !stdoutEnded()) {\n    console.log(crlf(msg), ...optionalParams)\n  }\n}\n\nexport function consoleError(msg: string, ...optionalParams: any[]) {\n  if (!Settings.quiet.valueOrDefault && !streamEnded(stderr)) {\n    console.error(msg, ...optionalParams)\n  }\n}\n\nexport async function quietly<T>(f: () => SyncOrAsync<T>): Promise<T> {\n  const prior = Settings.quiet.envValue\n  try {\n    Settings.quiet.envValue = true\n    return await f()\n  } finally {\n    Settings.quiet.envValue = prior\n  }\n}\n","import { stdout } from \"process\"\nimport { streamEnded } from \"./fs/StreamEnded\"\n\nexport function stdoutEnded() {\n  return streamEnded(stdout)\n}\n","import process from \"process\"\nimport { WriteStream } from \"tty\"\nimport { notBlank } from \"../fe/Blank\"\nimport { stringify } from \"../fe/JSON\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { isWorkerService } from \"./ServiceNames\"\nimport { stdoutEnded } from \"./StdoutEnded\"\nimport { FailStr } from \"./error/ErrorFlags\"\nimport { isFatalError, isHealthCheckError } from \"./error/ErrorTypes\"\nimport { BaseFile } from \"./fs/BaseFile\"\nimport { streamEnded } from \"./fs/StreamEnded\"\nimport { Setting } from \"./settings/Setting\"\n\nexport const ReadyStr = JSON.stringify({ ready: true })\n\nexport function stdoutWriteReady(ready: boolean = true) {\n  if (!stdoutEnded()) {\n    process.stdout.write(JSON.stringify({ ready }) + \"\\n\")\n  }\n}\n\nexport function stdoutWrite(obj: any, ready?: boolean) {\n  return writeTTY({ obj, ready, stream: process.stdout })\n}\n\nexport function stderrWrite(obj: any) {\n  return writeTTY({ obj, stream: process.stdout })\n}\n\nexport function writeTTY({\n  obj,\n  ready,\n  stream\n}: {\n  obj: any\n  ready?: boolean\n  stream: Maybe<WriteStream>\n}) {\n  const ttyEnded = stream == null || streamEnded(stream)\n  // if (obj != null) {\n  //   try {\n  //     mkLogger(\"writeTTY\").debug(\"()\", { obj, ready, ttyEnded })\n  //   } catch {\n  //     // don't care if I can't log\n  //   }\n  // }\n\n  if (ttyEnded) return\n\n  const str = stringify(obj)\n  stream.write(str + \"\\n\")\n\n  // Only the worker service runs under batch-cluster\n  if (isWorkerService() && ready != null) {\n    if (str.includes(FailStr) || isFatalError(str) || isHealthCheckError(str)) {\n      stream.write(FailStr + \"\\n\")\n    } else {\n      stream.write(ReadyStr + \"\\n\")\n    }\n  }\n}\n\nexport function stdoutWriteSettings(...arr: Setting<any>[]) {\n  const o = {}\n  for (const ea of arr) {\n    ea.addToEnv(o)\n  }\n  stdoutWrite(o)\n}\n\nexport function stdoutWriteMigration(migrationFile: BaseFile) {\n  return stdoutWrite({ migration: migrationFile.name })\n}\n\nexport interface MigrationEvent {\n  migration: string\n}\n\nexport function isMigrationEvent(o: any): o is MigrationEvent {\n  return o != null && notBlank(o.migration)\n}\n\nexport const StdoutWrite = {\n  shutdownSync: () => stdoutWrite({ shutdownSync: true }),\n  restartSync: () => stdoutWrite({ restartSync: true }),\n  forceRestartSync: () => stdoutWrite({ forceRestartSync: true }),\n  rebuildLibrary: () => stdoutWrite({ rebuildLibrary: true }),\n  shutdown: () => stdoutWrite({ shutdown: true })\n}\n","import { compactBlanks, isEmpty, uniq, uniqBy2 } from \"../fe/Array\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank, notBlank } from \"../fe/Blank\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe, MaybeNull } from \"../fe/MaybeTypes\"\nimport { mapNumeric, times, toFloat } from \"../fe/Number\"\nimport { padding } from \"../fe/Pad\"\nimport { cmp } from \"../fe/Primitive\"\nimport { strslice } from \"../fe/String\"\nimport { toA } from \"../fe/toA\"\nimport { toS } from \"../fe/toS\"\nimport { flatZip, greatestBy } from \"./Array\"\nimport { escapeRegExp } from \"./RegExp\"\nimport { NonRetriableErrorFlag } from \"./error/ErrorFlags\"\n\n// TODO: inline\nexport { splitFirst } from \"../fe/SplitFirst\"\nexport {\n  ellipsize,\n  ensurePrefix,\n  ensureSuffix,\n  isString,\n  stripPrefix,\n  stripSuffix,\n  wrap\n} from \"../fe/String\"\n\nconst he = require(\"he\")\n\nexport function rightPad(s: any, minLength: number, padChar: string): string {\n  if (padChar.length === 0) throw new Error(\"rightPad() given empty pad\")\n  const str = String(s)\n  return str + padding(padChar, minLength - str.length)\n}\n\nexport function padReplace(\n  s: string,\n  fromIdx: number,\n  length: number,\n  padChar: string\n) {\n  return (\n    strslice(s, 0, fromIdx) +\n    padding(padChar, length) +\n    strslice(s, fromIdx + length)\n  )\n}\n\nexport function contains(\n  haystack: string,\n  needle: string,\n  fromPosition?: number\n): boolean {\n  return toS(haystack).indexOf(toS(needle), fromPosition) > -1\n}\n\nexport function countChars(\n  haystack: string,\n  needle: string,\n  fromPosition = 0\n): number {\n  if (needle == null || needle.length === 0) return 0\n  // NOTE: this assumes .indexOf is going to be quick native code, and\n  // recursion will be faster than a simple for loop over ths string\n  // characters.\n  const idx = haystack.indexOf(needle, fromPosition)\n  return idx === -1 ? 0 : 1 + countChars(haystack, needle, idx + needle.length)\n}\n\nexport function maybeToS(a?: any): Maybe<string> {\n  return a == null ? undefined : String(a)\n}\n\nexport function trim(arr: any[]): string[] {\n  return arr.map(toS).filter(ea => notBlank(ea))\n}\n\nexport function splitEvery(s: string, n: number, maxSplits?: number): string[] {\n  const sliceTimes =\n    Math.min(Math.ceil(s.length / n), maxSplits ?? s.length) - 1\n  if (sliceTimes <= 0) return [s]\n  return [\n    ...times(sliceTimes, i => s.slice(i * n, (i + 1) * n)),\n    s.slice(sliceTimes * n)\n  ]\n}\n\n/**\n * Removes the first capture group defined by `re` found in `s`.\n */\nexport function spliceCapture(\n  s: string,\n  re: RegExp\n): Maybe<{\n  captured: string\n  uncaptured: string\n  unmatched: string\n  matchedIndex: number\n}> {\n  const m = re.exec(s)\n  if (m == null || m[1] == null) return\n  const matchedIndex = m[0].indexOf(m[1]) + m.index\n  return {\n    captured: m[1],\n    uncaptured:\n      s.substring(0, matchedIndex) + s.substring(matchedIndex + m[1].length),\n    unmatched: s.substring(0, m.index) + s.substring(m.index + m[0].length),\n    matchedIndex\n  }\n}\n\nexport function stripPrefixIgnoreCase(s: string, prefix: string): string {\n  s = toS(s)\n  prefix = toS(prefix)\n  return startsWithIgnoreCase(s, prefix) ? s.slice(prefix.length) : s\n}\n\nexport function stripSuffixIgnoreCase(\n  s: string,\n  suffix: string,\n  opts: { normalize?: boolean } = {}\n): string {\n  if (suffix == null) return s\n  const str = toS(s)\n  const sfx = toS(suffix)\n\n  return sfx.length > 0 && equalsIgnoreCase(str.slice(-sfx.length), sfx, opts)\n    ? str.slice(0, -sfx.length)\n    : str\n}\n\nexport function gist(a: string, maxPre = 80, maxPost = 80): string {\n  const s = toS(a)\n  const charsOmitted = s.length - (maxPre + maxPost)\n  return charsOmitted <= 0\n    ? s\n    : s.slice(0, maxPre).trim() +\n        \" …(+\" +\n        charsOmitted +\n        \" chars)…\" +\n        s.slice(-maxPost).trim()\n}\n\nexport function isLowerCase(s: Maybe<string>): boolean {\n  return toS(s).toLocaleLowerCase() === s\n}\n\nexport function isUpperCase(s: Maybe<string>): boolean {\n  return toS(s).toLocaleUpperCase() === s\n}\nconst CapRE = /^[A-Z]/\n\n/**\n * Is the first character in `s` `[A-Z]`?\n */\nexport function isFirstCharAZ(s: Maybe<string>): boolean {\n  return CapRE.test(toS(s))\n}\n\nexport function capitalize(s: Maybe<string>): string {\n  s = toS(s)\n  return blank(s) ? s : strslice(s, 0, 1).toLocaleUpperCase() + strslice(s, 1)\n}\n\nexport function compareIgnoreCase(a: string, b: string) {\n  const result = a.localeCompare(b, undefined, { sensitivity: \"base\" })\n  return result === 0\n    ? // for determinism:\n      a.localeCompare(b)\n    : result\n}\n\nexport function equalsIgnoreCase(\n  a: MaybeNull<string | Buffer>,\n  b: MaybeNull<string | Buffer>,\n  { normalize = true }: { normalize?: boolean } = {}\n): boolean {\n  if (a == null || b == null) return false\n  const as = toS(a)\n  const bs = toS(b)\n  if (as.length !== bs.length) return false\n  if (as === bs) return true\n  // cheap, but false is sometimes wrong (like in Turkish):\n  if (as.toLowerCase() === bs.toLowerCase()) return true\n  return (\n    (normalize ? as.normalize() : as).localeCompare(\n      normalize ? bs.normalize() : bs,\n      undefined,\n      { sensitivity: \"base\" }\n    ) === 0\n  )\n}\n\nexport function uniqIgnoreCase(arr: string[]): string[] {\n  return uniqBy2(arr, equalsIgnoreCase)\n}\n\nexport function sortIgnoreCase(arr: Iterable<string>): string[] {\n  return toA(arr).sort(compareIgnoreCase)\n}\n\nexport function sortByCaseInsensitive<T>(\n  arr: Iterable<T> | T[],\n  f: (t: T, index: number) => Maybe<string>\n): T[] {\n  return toA(arr)\n    .filter(ea => ea != null)\n    .map((item, idx) => ({\n      item,\n      cmp: map(f(item, idx), ea => [ea, idx]) as [string, number]\n    }))\n    .filter(ea => ea.cmp != null)\n    .sort((a, b) => {\n      const ea = compareIgnoreCase(a.cmp[0], b.cmp[0])\n      return ea !== 0 ? ea : cmp(a.cmp[1], b.cmp[1])\n    })\n    .map(ea => ea.item)\n}\n\n/** TODO DELETE IF UNUSED\n * @return true iff `haystack` starts with `needle`\n */\nexport function startsWithIgnoreCase(\n  haystack: string,\n  needle: string\n): boolean {\n  return haystack == null ||\n    needle == null ||\n    needle.length === 0 ||\n    haystack.length === 0\n    ? false\n    : equalsIgnoreCase(haystack.substring(0, needle.length), needle)\n}\n\n/**\n * @return the first item in `haystack` that is a case-insensitive substring of\n * `needle`.\n */\nexport function firstSubstringIgnoreCase(\n  haystack: string[],\n  needle: string\n): Maybe<{ index: number; match: string }> {\n  if (isEmpty(haystack) || blank(needle)) return\n  for (const ea of haystack) {\n    if (equalsIgnoreCase(ea, needle)) return { index: 0, match: ea }\n  }\n  for (const ea of haystack) {\n    const index = needle.indexOf(ea)\n    if (index >= 0) return { index, match: ea }\n  }\n  const nn = needle.normalize()\n  for (const ea of haystack) {\n    {\n      const index = nn.indexOf(ea)\n      if (index >= 0) return { index, match: ea }\n    }\n    const hn = ea.normalize()\n    {\n      const index = nn.indexOf(hn)\n      if (index >= 0) return { index, match: hn }\n    }\n    {\n      const nl = nn.toLowerCase()\n      const hl = hn.toLowerCase()\n      const index = nl.indexOf(hl)\n      if (index >= 0) return { index, match: hl }\n    }\n  }\n  return\n}\n\n/**\n * Is any item in `haystack` included in `needle`?\n */\nexport function includesIgnoreCase(\n  haystack: string[],\n  needle: string\n): boolean {\n  return isEmpty(haystack) || blank(needle)\n    ? false\n    : haystack.some(ea => equalsIgnoreCase(needle, ea))\n}\n\nexport function reverse(s: string): string {\n  return s == null ? s : [...s].reverse().join(\"\")\n}\n\nexport type Stringable = { valueOf(): string }\n\n/**\n * Return the longest-matching prefix pattern from `patterns` that needle\n * startsWith.\n */\nexport function longestPrefix(\n  needle: string,\n  patterns: string[]\n): Maybe<string> {\n  return greatestBy(\n    patterns.filter(ea => needle.startsWith(ea)),\n    ea => ea.length\n  )\n}\n\n// \\u001b[90m\nexport function stripAnsiEsc(s: string): string {\n  // DON'T REPLACE WITH https://github.com/chalk/ansi-regex/blob/main/index.js :: that shite doesn't work.\n\n  return toS(s).replace(/\\u001b\\[[0-9;]+[a-z]/gi, \"\")\n}\n\nconst Smart2Dumb: [RegExp, string][] = [\n  [/[‘’]/g, `'`],\n  [/[“”„«»”〃]/g, `\"`]\n]\n\nexport function dumbquote(s: string): string {\n  return Smart2Dumb.reduce(\n    (acc, [smart, dumb]) => acc.replace(smart, dumb),\n    s\n  ).normalize()\n}\n\nconst quoted = /^(['\"]).+\\1$/\n\nexport function stripQuotes(s: string): string {\n  if (blank(s)) return s\n  // Some Vivitar cameras have numeric models (!!) so we need to toS().\n  s = toS(s).trim()\n  if (quoted.exec(dumbquote(s)) != null) {\n    s = s.slice(1, -1).trim()\n  }\n  return s\n}\n\nexport function wbrPath(s: string): string {\n  return s\n    .split(/(?<=[\\\\/_,:=-]+)/)\n    .map(ea => he.escape(ea.normalize()) as string)\n    .join(\"<wbr>\")\n}\n\nexport function zipStrings(...arr: string[]): string {\n  let s = \"\"\n  const cb = compactBlanks(arr)\n  const maxLen = Math.max(...cb.map(ea => ea.length))\n  for (let j = 0; j < maxLen; j++) {\n    for (let i = 0; i < cb.length; i++) {\n      map(cb[i], str => map(str[j], ea => (s += ea)))\n    }\n  }\n  return s\n}\n\nexport function splitKeep(s: string, re: RegExp): string[] {\n  const result = splitUp(s, re)\n  return flatZip(result.nonSeparators, result.separators).filter(\n    ea => ea != null && ea.length > 0\n  ) as string[]\n}\n\n/**\n * @return (nonSeparator + separator)*\n */\nexport function splitUp(\n  s: string,\n  re: RegExp\n): { nonSeparators: string[]; separators: string[] } {\n  if (!re.global)\n    throw new Error(\"bad regex (missing global flag)\" + NonRetriableErrorFlag)\n  const nonSeparators: string[] = []\n  const separators: string[] = []\n  let pos = 0\n  let m: RegExpExecArray | null\n  while ((m = re.exec(s)) != null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === re.lastIndex) {\n      re.lastIndex++\n    } else {\n      re.lastIndex = m[0].length + m.index\n      nonSeparators.push(s.substring(pos, m.index))\n      separators.push(s.substring(m.index, re.lastIndex))\n      pos = re.lastIndex\n    }\n  }\n  if (pos < s.length) {\n    nonSeparators.push(s.substring(pos))\n  }\n  return { nonSeparators, separators }\n}\n\nexport function sortNaturalBy(line: string) {\n  return splitKeep(toS(line), /\\d+(?:\\.\\d+)?/g).map(\n    ea => toFloat(ea.trim()) ?? ea\n  )\n}\n\nexport function sortNatural(lines: string[]): string[] {\n  return sortBy(lines, line => sortNaturalBy(line))\n}\n\nexport function stripDiacritics(s: string): string {\n  // see https://stackoverflow.com/a/37511463/1268016\n  return toS(s)\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n}\n\nexport function stripEmoji(s: string): string {\n  // see https://stackoverflow.com/a/38987183/1268016\n  return toS(s).replace(\n    /\\ud83c[\\udf00-\\udfff]|\\ud83d[\\udc00-\\ude4f]|\\ud83d[\\ude80-\\udeff]/g,\n    \"\"\n  )\n}\n\n/**\n * Remove strings that are prefixes to longer strings in `arr`, ignoring case\n * differences\n * @example ([\"abc\", \"bcd\", \"a\", \"ab\", \"b\"]) -> [\"abc\", \"bcd\"]\n */\nexport function uniqSubstr(arr: string[]): string[] {\n  const rev = sortIgnoreCase(compactBlanks(arr))\n  const result = rev.filter(\n    (ea, idx) => !startsWithIgnoreCase(rev[idx + 1], ea)\n  )\n  return sortBy(result, ea => arr.indexOf(ea))\n}\n\nexport function commonPrefix(a: Maybe<string>, b: Maybe<string>) {\n  if (blank(a) || blank(b)) return \"\"\n  const max = Math.min(a.length, b.length)\n  for (let i = 0; i < max; i++) {\n    if (a[i] !== b[i]) {\n      return a.slice(0, i)\n    }\n  }\n  return a.slice(0, max)\n}\n\nexport function commonPrefixIgnoreCase(\n  a: Maybe<string>,\n  b: Maybe<string>,\n  opts: { normalize?: boolean } = {}\n) {\n  if (blank(a) || blank(b)) return \"\"\n  const max = Math.min(a.length, b.length)\n  for (let i = 0; i < max; i++) {\n    if (!equalsIgnoreCase(a[i], b[i], opts)) {\n      return a.slice(0, i)\n    }\n  }\n  return a.slice(0, max)\n}\n\nexport function commonPrefixLengthIgnoreCase(\n  a: Maybe<string>,\n  b: Maybe<string>,\n  opts: { normalize?: boolean } = {}\n): number {\n  if (blank(a) || blank(b)) return 0\n  const max = Math.min(a.length, b.length)\n  for (let i = 0; i < max; i++) {\n    if (!equalsIgnoreCase(a[i], b[i], opts)) {\n      return i\n    }\n  }\n  return max\n}\n\nexport function indexOfNonSpace(s: string): Maybe<number> {\n  return s.match(/\\S/)?.index\n}\n\nexport function lastIndexOfNonSpace(s: string): Maybe<number> {\n  return s.match(/\\S\\s*$/)?.index\n}\n\nexport function trimLeftPadding(s: string): string {\n  return s.replace(/^[-0_\\s]+/, \"\")\n}\n\n/**\n * Convert \"hello\\040world\" to \"hello world\"\n */\nexport function unoctal(s: string): string {\n  const o = splitUp(s, /\\\\\\d\\d\\d/g)\n\n  return flatZip(\n    o.nonSeparators,\n    o.separators.map(ea =>\n      ea?.length === 4\n        ? mapNumeric(parseInt(ea.slice(1), 8), String.fromCharCode)\n        : undefined\n    )\n  )\n    .map(toS)\n    .join(\"\")\n}\n\nconst CommentRE = /#.*$/gm\n\nexport function stripComments(s: string): string {\n  return s.replace(CommentRE, \"\")\n}\n\nexport function uniqPath(s: MaybeNull<string>[], sep = \":\"): string {\n  // This impl may be easier to follow than 2 compactBlanks() and a uniq()\n  const set = new Set<string>()\n  for (const ea of toA(s)) {\n    if (ea != null && !blank(ea)) {\n      for (const ea2 of ea.split(sep)) {\n        if (!blank(ea2)) set.add(ea2)\n      }\n    }\n  }\n  return [...set].join(sep)\n}\n\n/**\n * First needle wins, all other needles are replaced with `replacement`. Used\n * to make error messages a bit shorter.\n */\nexport function dedupeNeedle(\n  arr: string[],\n  needle: string,\n  replacement: string\n) {\n  if (blank(needle)) return arr\n  const re = new RegExp(\n    // `(?<quot>['\"]?)` + escapeRegExp(needle) + `$<quot>`,\n    `(['\"]?)` + escapeRegExp(needle) + `\\\\1`,\n    \"mg\"\n  )\n  const idx = arr.findIndex(ea => re.test(ea))\n  const dedupeRe = new RegExp(\n    \"(\" + escapeRegExp(replacement) + \"[,:\\\\s]*){2,}\",\n    \"gmi\"\n  )\n  const trimRe = /(^\\s+)|(\\s+$)/gm\n  if (idx < 0) return arr\n  for (let i = idx + 1; i < arr.length; i++) {\n    arr[i] = arr[i]\n      .replace(re, replacement)\n      .replace(/(\\s)\\s+/gm, \" \")\n      // de-stutter:\n      .replace(dedupeRe, replacement)\n      .replace(trimRe, \"\")\n  }\n  return arr\n}\n\nexport function splitUniq(arr: Maybe<string>[], delim: string): string[] {\n  return uniq(\n    compactBlanks(\n      arr\n        .join(delim)\n        .split(delim)\n        .map(ea => ea.trim())\n    )\n  )\n}\n","import { toS } from \"../fe/toS\"\n\nexport function camel2snake(s: string): string {\n  return toS(s)\n    .replace(/([A-Z])([a-z])/g, (_, a, b) => \"_\" + a.toLowerCase() + b)\n    .replace(/[A-Z]+|[0-9]+/g, ea => \"_\" + ea)\n    .replace(/^_/, \"\")\n    .replace(/_+/g, \"_\")\n}\n\nexport function camel2words(s: string): string {\n  return toS(s)\n    .replace(/([A-Z])([a-z])/g, (_, a, b) => \" \" + a.toLowerCase() + b)\n    .replace(/[A-Z]+|[0-9]+/g, ea => \" \" + ea)\n    .trim()\n}\n\nexport function snake2camel(s: string): string {\n  return toS(s).replace(/_([A-Z])/gi, (_, a) => a.toUpperCase())\n}\n\nexport function asObjectKey(s: string) {\n  return snake2camel(\n    s.replace(/^[A-Z]+/, ea => ea.toLowerCase()).replace(/[^a-z]+/gi, \"_\")\n  )\n}\n","import crypto from \"crypto\"\nimport { HashBits } from \"./HashBits\"\nimport { GeoRadix, Radix58 } from \"./math/Radix\"\n\nexport function stringShaToBuffer(input: string, msbits = HashBits): Buffer {\n  return crypto\n    .createHash(\"sha512\")\n    .update(input)\n    .digest()\n    .subarray(0, msbits / 8)\n}\n/**\n * Encoding of the SHA of `input`.\n */\n\nexport function shortStringSha(\n  input: string,\n  len = 9,\n  radix = Radix58,\n  msbits = 224 // < pre-v0.3.5 used 224 bits, so this keeps those SHAs stable\n): string {\n  return radix.encodeBuffer(stringShaToBuffer(input, msbits)).substring(0, len)\n}\n// filesystem-safe short shas\n\nexport function shortFsStringSha(\n  input: string,\n  len = 24,\n  radix = GeoRadix,\n  msbits = 224 // < pre-v0.3.5 used 224 bits, so this keeps those SHAs stable\n): string {\n  return shortStringSha(input, len, radix, msbits)\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { toS } from \"../fe/toS\"\n\nexport function DefaultNormalizer(ea: Maybe<string>): Maybe<string> {\n  return ea == null || ea === \"\" ? undefined : toS(ea).toLowerCase().normalize()\n}\n","import { commonPrefixLength, compactBlanks, count } from \"../fe/Array\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { clamp, mapNumericOr, times, toInt } from \"../fe/Number\"\nimport { leftPad } from \"../fe/Pad\"\nimport { Primitive } from \"../fe/Primitive\"\nimport { strslice, substr } from \"../fe/String\"\nimport { toS } from \"../fe/toS\"\nimport { RadixAlphaNum } from \"./math/Radix\"\nimport { Array2D } from \"./Number\"\nimport { firstThunk } from \"./Object\"\nimport { intersection } from \"./Set\"\nimport { stripDiacritics } from \"./String\"\n\n/**\n * @return [0,1], where 0 means no common string, and 1 is equality\n */\nexport function commonSubstringRatio(a: string, b: string): number {\n  return [a, b].some(blank)\n    ? 0\n    : lcs(a, b).length / Math.max(a.length, b.length)\n}\n\n/**\n * @see https://en.wikipedia.org/wiki/Longest_common_substring_problem\n */\nexport function lcs(a: string, b: string): string {\n  if (a == null) return b\n  if (b == null) return a\n  a = a.normalize()\n  b = b.normalize()\n  if (a === b || b.includes(a)) return a\n  if (a.includes(b)) return b\n  const m = new Array2D(a.length)\n  let z = 0\n  let ret = \"\"\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < b.length; j++) {\n      if (a[i] === b[j]) {\n        if (i === 0 || j === 0) {\n          m.set(i, j, 1)\n        } else {\n          m.set(i, j, m.get(i - 1, j - 1) + 1)\n        }\n        if (m.get(i, j) >= z) {\n          z = m.get(i, j)\n          ret = substr(a, i - z + 1, z)\n        }\n      }\n    }\n  }\n  return ret\n}\n\n/**\n * Hamming distance. Note that `a` and `b` (before or after normalization) must\n * be the same length, or `undefined` will be returned.\n *\n * Note that this is case-sensitive!\n *\n * @see https://en.wikipedia.org/wiki/Hamming_distance\n */\nexport function hamming(a: string, b: string): Maybe<number> {\n  if (a == null || b == null) return undefined\n  if (a === b) return 0\n  const r = _hamming(a, b)\n  if (r != null) return r\n  const an = a.normalize()\n  const bn = b.normalize()\n  return a !== an || b !== bn ? _hamming(an, bn) : undefined\n}\n\nfunction _hamming(a: string, b: string): Maybe<number> {\n  return a.length !== b.length\n    ? undefined\n    : [...a].reduce((acc, ea, idx) => (ea === b.charAt(idx) ? acc : acc + 1), 0)\n}\n\n/**\n * Return the Sørensen–Dice similarity index between two strings.\n * @see https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient\n * @return [0,1]. O for no match, 1 for full, case-insensitive match.\n */\nexport function diceCoeff(a: string, b: string): number {\n  const A = a.toUpperCase().normalize()\n  const B = b.toUpperCase().normalize()\n  return firstThunk<number>(\n    () => (A === B ? 1 : undefined),\n    () => (blank(a) !== blank(b) ? 0 : undefined),\n    () => (a.length === 1 && b.length === 1 ? 0 : undefined),\n    () => {\n      const aGrams = bigrams(A)\n      const bGrams = bigrams(B)\n      const intersections = nonUniqIntersection(aGrams, bGrams).length\n      return (2 * intersections) / (aGrams.length + bGrams.length)\n    }\n  )!\n}\n\n/**\n * Convert \"abcd\" to [\"ab\", \"bc\", \"cd\"]\n */\nexport function bigrams(s: string): string[] {\n  if (s == null || s.length === 0) return []\n  const arr = [...s]\n  return arr.slice(0, -1).map((ea, i) => ea + arr[i + 1])\n}\n\nexport function nonUniqIntersection<T extends Primitive>(a: T[], b: T[]): T[] {\n  const uniqIntersections = intersection(a, b)\n  const i: T[] = []\n  uniqIntersections.forEach(ea => {\n    const n = Math.min(\n      count(a, s => s === ea),\n      count(b, s => s === ea)\n    )\n    times(n, () => i.push(ea))\n  })\n  return i\n}\n\n/**\n * Tries to prevent numeric overflow:\n */\nfunction diffWithoutCommonPrefix(\n  a: string,\n  b: string,\n  f: (s: string) => number\n): number {\n  const cpc = commonPrefixLength(a, b)\n  return f(strslice(a, cpc)) - f(strslice(b, cpc))\n}\n\n/**\n * Return the value of the longest string of digits in `s`\n */\nfunction longestNumericString(s: string): Maybe<string> {\n  const digits = compactBlanks(toS(s).split(/[^\\d]+/))\n  return sortBy(digits, ea => -ea.length)[0]\n}\n\nexport function lnsDiff(a: string, b: string): number {\n  const [a1, b1] = [a, b]\n    .map(longestNumericString)\n    .map(ea => (blank(ea) ? \"\" : ea))\n  return diffWithoutCommonPrefix(a1, b1, s => toInt(s, { defaultValue: 0 })!)\n}\n\nconst notAlphaNumRe = /[^0-9a-z]+/gi\nexport function radixDiff(a: string, b: string): number {\n  const [a1, b1] = [a, b].map(s =>\n    stripDiacritics(s).replace(notAlphaNumRe, \"\").toLowerCase()\n  )\n  return diffWithoutCommonPrefix(a1, b1, s => RadixAlphaNum.decode(s)!)\n}\n\nexport function str(a: string, b: string) {\n  return {\n    pref: commonPrefixLength(a, b),\n    ham: hamming(a, b),\n    dice: diceCoeff(a, b),\n    lns: lnsDiff(a, b),\n    radixDiff: radixDiff(a, b)\n  }\n}\n\n/**\n * @return the number of non-lower-case characters in `s`\n */\nexport function lcdiff(s: string): number {\n  return count(\n    [...s.normalize()],\n    ea => ea.toLowerCase().localeCompare(ea) !== 0\n  )\n}\n\n/**\n * @return the weighted average of the character differences per character index\n */\nexport function positionalDiff(a: string, b: string) {\n  let result: Maybe<number>\n  for (let i = Math.max(a.length, b.length); i >= 0; i--) {\n    const aChar = mapNumericOr(a.charCodeAt(i), ea => ea, 256)\n    const bChar = mapNumericOr(b.charCodeAt(i), ea => ea, 256)\n    const diff = clamp(-256, 256, aChar - bChar)\n    if (result == null) result = diff\n    else result = (result + diff) / 2\n  }\n  return result\n}\n\nexport function paddedPositionalDiff(a: string, b: string, minLen = 8) {\n  return positionalDiff(leftPad(a, minLen, \" \"), leftPad(b, minLen, \" \"))\n}\n","import { stringify } from \"../fe/JSON\"\nimport { sortedKeys } from \"./Object\"\n\n/**\n * Returns JSON.stringify with keys in sorted order (if `o` is a Record)\n */\nexport function stringifySorted(o: any): string {\n  return stringify(sortedKeys(o))\n}\n","import { sortBy } from \"../fe/ArraySort\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { Primitive } from \"../fe/Primitive\"\nimport { setUnrefInterval } from \"./async/Timers\"\n\nexport class TTLMap<K extends Primitive, V> implements Map<K, V> {\n  readonly [Symbol.toStringTag] = \"TTLMap\"\n\n  readonly #expireListeners: ((k: K, v: V) => void)[] = []\n\n  // Maps entries to insertion time values. Entries should expire after ttlMs.\n  readonly #delegate = new Map<K, { ts: number; v: V }>()\n\n  #ttlMs!: number\n  #interval!: NodeJS.Timeout\n\n  constructor(ttlMs: number) {\n    this.ttlMs = ttlMs\n  }\n\n  get ttlMs() {\n    return this.#ttlMs\n  }\n\n  set ttlMs(ms: number) {\n    this.#ttlMs = ms\n    if (this.#interval != null) {\n      clearInterval(this.#interval)\n    }\n    this.#interval = setUnrefInterval(() => this.#vacuum(), ms)\n    this.#vacuum()\n  }\n\n  clear(): this {\n    this.#delegate.clear()\n    return this\n  }\n\n  delete(key: K): boolean {\n    return this.#delegate.delete(key)\n  }\n\n  deleteAll(keys: K[]) {\n    for (const ea of keys) {\n      this.delete(ea)\n    }\n  }\n\n  forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void): void {\n    for (const [k, v] of this.#delegate.entries()) {\n      if (this.#chkEntry(k, v)) {\n        callbackfn(v.v, k, this)\n      }\n    }\n  }\n\n  get(key: K): V | undefined {\n    const v = this.#delegate.get(key)\n    if (this.#chkEntry(key, v)) {\n      v.ts = Date.now()\n      return v.v\n    } else {\n      return\n    }\n  }\n\n  getOrMaybeSet(key: K, valueThunk: () => Maybe<V>): Maybe<V> {\n    const v = this.#delegate.get(key)\n    if (this.#chkEntry(key, v)) return v.v\n    const value = valueThunk()\n    if (value != null) this.set(key, value)\n    return value\n  }\n\n  /**\n   * Get the timestamp of the last set() or get() for the given key.\n   */\n  lastSetOrGetTs(key: K) {\n    // NOTE: don't use this.get() here: that'd update the timestamp to now!\n    return this.#delegate.get(key)?.ts\n  }\n\n  set(key: K, value: V): this {\n    this.#delegate.set(key, { ts: Date.now(), v: value })\n    return this\n  }\n\n  has(key: K): boolean {\n    return this.#chkEntry(key, this.#delegate.get(key))\n  }\n\n  get size() {\n    this.#vacuum()\n    return this.#delegate.size\n  }\n\n  keys(): IterableIterator<K> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<K> {\n      for (const [k, v] of self.#delegate.entries()) {\n        if (self.#chkEntry(k, v)) {\n          yield k\n        }\n      }\n    }\n    return iter()\n  }\n\n  values(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<V> {\n      for (const [k, v] of self.#delegate.entries()) {\n        if (self.#chkEntry(k, v)) {\n          yield v.v\n        }\n      }\n    }\n    return iter()\n  }\n\n  valuesByRecency() {\n    this.#vacuum()\n    return sortBy(this.#delegate.values(), ea => -ea.ts)\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[K, V]> {\n      for (const [k, v] of self.#delegate.entries()) {\n        if (self.#chkEntry(k, v)) {\n          yield [k, v.v]\n        }\n      }\n    }\n    return iter()\n  }\n\n  [Symbol.iterator](): IterableIterator<[K, V]> {\n    return this.entries()\n  }\n\n  on(_event: \"expire\", listener: (k: K, v: V) => void) {\n    this.#expireListeners.push(listener)\n  }\n\n  #chkEntry(\n    key: K,\n    value: Maybe<{ v: V; ts: number }>\n  ): value is { v: V; ts: number } {\n    if (value == null) {\n      return false\n    } else if (value.ts + this.ttlMs > Date.now()) {\n      return true\n    } else {\n      this.#delegate.delete(key)\n      for (const ea of this.#expireListeners) {\n        ea(key, value.v)\n      }\n      return false\n    }\n  }\n\n  /**\n   * remove all expired entries\n   */\n  #vacuum() {\n    for (const [k, v] of this.#delegate.entries()) {\n      this.#chkEntry(k, v)\n    }\n  }\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { setUnrefTimeout } from \"./async/Timers\"\n\nexport class TTLSet<T> implements Set<T> {\n  readonly [Symbol.toStringTag] = \"TTLSet\"\n  private readonly expireListeners: ((k: T) => void)[] = []\n\n  // Maps entries to insertion time values. Entries should expire after value + this.ttlMs.\n  private readonly delegate = new Map<T, number>()\n\n  /**\n   * @param ttlMs if external consumers change this public value, we won't\n   * auto-re-vacuum existing values, but the new ttl will be correct for new\n   * values.\n   */\n  constructor(\n    public ttlMs: number,\n    readonly scheduleExpirationTimers = false\n  ) {}\n\n  get size(): number {\n    this.#vacuum()\n    return this.delegate.size\n  }\n\n  add(value: T): this {\n    this.delegate.set(value, Date.now())\n    if (this.scheduleExpirationTimers)\n      setUnrefTimeout(() => this.#vacuum(), this.ttlMs + 1)\n    return this\n  }\n\n  addAll(values: T[]) {\n    for (const ea of values) {\n      this.add(ea)\n    }\n    return\n  }\n\n  addIfMissing<R>(value: T, onMissing: () => R): Maybe<R> {\n    const prior = this.delegate.get(value)\n    if (prior == null || this.#isEntryExpired(value, prior)) {\n      this.add(value)\n      return onMissing()\n    } else {\n      return\n    }\n  }\n\n  clear(): this {\n    this.delegate.clear()\n    return this\n  }\n\n  delete(value: T): boolean {\n    return this.delegate.delete(value)\n  }\n\n  forEach(callbackfn: (value: T, index: T, set: Set<T>) => void): void {\n    for (const [value, ctime] of this.delegate) {\n      if (!this.#isEntryExpired(value, ctime)) {\n        callbackfn(value, value, this)\n      }\n    }\n  }\n\n  has(value: Maybe<T>): boolean {\n    return value != null && !this.#isEntryExpired(value)\n  }\n\n  values(): IterableIterator<T> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<T> {\n      for (const [k, v] of self.delegate) {\n        if (!self.#isEntryExpired(k, v)) {\n          yield k\n        }\n      }\n    }\n    return iter()\n  }\n\n  readonly keys = this.values.bind(this)\n\n  entries(): IterableIterator<[T, T]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[T, T]> {\n      for (const [k, v] of self.delegate) {\n        if (!self.#isEntryExpired(k, v)) {\n          yield [k, k]\n        }\n      }\n    }\n    return iter()\n  }\n\n  toA(): T[] {\n    this.#vacuum()\n    return [...this.delegate.keys()]\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    return this.values()\n  }\n\n  on(_event: \"expire\", listener: (k: T) => void) {\n    this.expireListeners.push(listener)\n  }\n\n  /**\n   * @param ctime is the last-set time associated to the key.\n   */\n  #isEntryExpired(key: T, ctime?: number): boolean {\n    ctime ??= this.delegate.get(key)\n    if (ctime == null || !this.delegate.has(key)) return true\n\n    const expired = ctime <= Date.now() - this.ttlMs\n    if (expired) {\n      // delete the key before we tell the listerners\n      this.delegate.delete(key)\n      for (const ea of this.expireListeners) {\n        ea(key)\n      }\n    }\n    return expired\n  }\n\n  /**\n   * remove all expired entries\n   */\n  #vacuum() {\n    for (const [k, v] of this.delegate) {\n      this.#isEntryExpired(k, v)\n    }\n  }\n}\n","export const TestLibraryDirPrefix = \"test-ps-lib-\"\n","import { lazy } from \"../core/Lazy\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { toS } from \"../fe/toS\"\nimport { isTest } from \"./NodeEnv\"\nimport { GeoRadix } from \"./math/Radix\"\n\nlet lastTime = 0\n\nconst UidRadix = GeoRadix\n\n// only exposed for tests:\nexport const uidSuffix = lazy(() => \"-\" + UidRadix.randomChars(7))\n\n/**\n * Generate a unique ID with filesystem safe characters that sorts\n * chronologically. This is required by FsLock to ensure older locks are\n * acquired before newer locks.\n */\nexport function uid() {\n  // No need to pad the date:\n\n  // > GeoRadix.encode(new Date(\"2019-12-31\").getTime())\n  // '1exdn1300'\n  // > GeoRadix.encode(new Date(\"2064-12-31\").getTime()) <- MTBMF Mean Time Before Matt Failure\n  // '2r80m3600'\n\n  lastTime = Math.max(Date.now(), lastTime + 1)\n  return uidForTs(lastTime)\n}\n\nexport function uidForTs(ts: number): string {\n  return UidRadix.encode(ts) + uidSuffix()\n}\n\nconst uidRe = /^[0-9a-z]{9}-[0-9a-z]{7}$/i\n\nexport function isUID(s: Maybe<string>): boolean {\n  return uidRe.test(toS(s))\n}\n\nexport function tsFromUid(s: Maybe<string>): Maybe<number> {\n  const ts = toS(s).replace(/(?<=\\S+)-.*/, \"\")\n  return blank(ts) ? undefined : UidRadix.decode(ts)\n}\n\nexport function sortByUid<T extends { uid: string }>(arr: T[]) {\n  return sortBy(arr, ea => tsFromUid(ea.uid))\n}\n\nexport function resetUid() {\n  if (isTest) {\n    uidSuffix.unset()\n    lastTime = 0\n  } else {\n    throw new Error(\"unsupported\")\n  }\n}\n","import os from \"node:os\"\nimport process from \"node:process\"\nimport { lazy } from \"../core/Lazy\"\nimport { uniq } from \"../fe/Array\"\nimport { blank, toNotBlank } from \"../fe/Blank\"\nimport { toBoolean } from \"../fe/Boolean\"\nimport { PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { gte0 } from \"../fe/Number\"\nimport { mkLogger } from \"./Logger\"\nimport { ShortCommandTimeoutMs } from \"./ShortCommandTimeoutMs\"\nimport { stdout_ } from \"./child/ChildProcess\"\nimport { getEnv } from \"./env/GetEnv\"\nimport { isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\n\nconst logger = lazy(() => mkLogger(\"UserInfo\"))\n\nexport async function userDesc() {\n  let result = \"user \" + (await username())\n  if (gte0(userid())) {\n    result += \" (userid \" + userid() + \")\"\n  }\n  return result\n}\n\nexport const userids = lazy<number[]>(() =>\n  // we prefer the effective id, but use getgid and userInfo to backfill.\n  // uniq also compacts\n  uniq([process.geteuid?.(), process.getuid?.(), os.userInfo().uid])\n)\n\nexport const userid = lazy<number>(() => userids()[0])\n\nexport const groupids = lazy<number[]>(() =>\n  // we prefer the effective id, but use getgid and userInfo to backfill:\n  uniq([process.getegid?.(), process.getgid?.(), os.userInfo().gid])\n)\n\nexport const groupid = lazy<number>(() => groupids()[0])\n\nexport const usernameFromEnv = lazy(() => {\n  for (const ea of [\n    // https://github.com/sindresorhus/username/blob/f4a47485fcdf3bafee221cf5e6d6180344020d08/index.js#L9\n    \"SUDO_USER\",\n    \"C9_USER\", // Cloud9\n    \"LOGNAME\",\n    \"USER\",\n    \"LNAME\",\n    \"USERNAME\" // windows calls this UserName, so we're using getEnv() (which is case-insensitive)\n  ]) {\n    const v = getEnv(ea as any)\n    if (!blank(v)) return v\n  }\n  return\n})\n\nexport const usernameFromUserInfo = lazy(() =>\n  toNotBlank(os.userInfo()?.username)\n)\n\nexport const userNameFromWhoami = lazy(async () =>\n  stdout_(\"whoami\", [], {\n    ignoreExitCode: true,\n    timeoutMs: ShortCommandTimeoutMs,\n    isIgnorableError: () => true\n  })\n    .then(toNotBlank)\n    .catch(error => logger().warn(\"$(whoami) failed\", { error }))\n)\n\nexport const userNameFromWindowsAccessToken = lazy(async () =>\n  !isWin\n    ? undefined\n    : PowerShell.instance().execute(\n        // https://stackoverflow.com/a/29955210\n        \"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\",\n        toNotBlank\n      )\n)\n\nexport const username = lazy<PromiseMaybe<string>>(\n  async () =>\n    usernameFromEnv() ??\n    usernameFromUserInfo() ??\n    (await userNameFromWhoami()) ??\n    (await userNameFromWindowsAccessToken())\n)\n\nfunction pwshIsAdmin() {\n  return isWin\n    ? PowerShell.instance().execute(\n        // https://serverfault.com/a/95464\n        \"(New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)\",\n        toBoolean\n      )\n    : undefined\n}\n\nexport const isRootUser = lazy<PromiseMaybe<boolean>>(async () =>\n  isWin ? pwshIsAdmin() : userids().includes(0)\n)\n","import { blank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\n\n/**\n * Consistent version formatting.\n *\n * @returns \"(missing version)\" if the input is blank.\n */\nexport function ver(s: Maybe<string>) {\n  return blank(s)\n    ? \"(missing version)\"\n    : s.replace(/^(v|ver|version\\s*)?/, \"version \")\n}\n","export const version = \"2023.8.0-prealpha.8\";\nexport const versionMajor = 2023;\nexport const versionMinor = 8;\nexport const versionPatch = 0;\nexport const versionPrerelease = [\"prealpha\",8];\nexport const release = \"2023.8.0-prealpha.8+20230828132300\";\nexport const gitSha = \"02ffb258595f29811d5ad875dbb7a0c59d223f41\";\nexport const gitDate = new Date(1693254180000);\nexport default {version,versionMajor,versionMinor,versionPatch,versionPrerelease,release,gitSha,gitDate};\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { Primitive } from \"../fe/Primitive\"\n\nexport class WeakCache<K extends Primitive, V extends object>\n  implements Map<K, V>\n{\n  readonly [Symbol.toStringTag] = \"WeakCache\"\n\n  // Maps entries to insertion time values. Entries should expire after ttlMs.\n  readonly #delegate = new Map<K, WeakRef<V>>()\n\n  clear(): this {\n    this.#delegate.clear()\n    return this\n  }\n\n  delete(key: K): boolean {\n    return this.#delegate.delete(key)\n  }\n\n  deleteAll(keys: K[]) {\n    for (const ea of keys) {\n      this.delete(ea)\n    }\n  }\n\n  forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void): void {\n    for (const [k, v] of this.entries()) {\n      callbackfn(v, k, this)\n    }\n  }\n\n  findEntry(\n    callbackfn: (value: V, key: K, map: Map<K, V>) => boolean\n  ): Maybe<V> {\n    for (const [k, v] of this.entries()) {\n      if (callbackfn(v, k, this)) {\n        return v\n      }\n    }\n    return\n  }\n\n  deleteValueIf(predicate: (value: V, key: K, map: Map<K, V>) => boolean) {\n    for (const [k, v] of this.entries()) {\n      if (predicate(v, k, this)) {\n        this.#delegate.delete(k)\n      }\n    }\n  }\n\n  get(key: K): V | undefined {\n    const w = this.#delegate.get(key)\n    const v = w?.deref()\n    if (v == null && w != null) {\n      this.#delegate.delete(key)\n    }\n    return v\n  }\n\n  getOrMaybeSet(key: K, valueThunk: () => Maybe<V>): Maybe<V> {\n    const v = this.#delegate.get(key)?.deref()\n    if (v != null) return v\n    const value = valueThunk()\n    if (value != null) this.set(key, value)\n    return value\n  }\n\n  set(key: K, value: V): this {\n    this.#delegate.set(key, new WeakRef(value))\n    return this\n  }\n\n  has(key: K): boolean {\n    return this.#delegate.get(key)?.deref() != null\n  }\n\n  get size() {\n    this.#vacuum()\n    return this.#delegate.size\n  }\n\n  keys(): IterableIterator<K> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<K> {\n      for (const [k, w] of self.#delegate.entries()) {\n        if (w.deref() == null) {\n          self.#delegate.delete(k)\n        } else {\n          yield k\n        }\n      }\n    }\n    return iter()\n  }\n\n  values(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<V> {\n      for (const [k, w] of self.#delegate.entries()) {\n        const v = w.deref()\n        if (v == null) {\n          self.#delegate.delete(k)\n        } else {\n          yield v\n        }\n      }\n    }\n    return iter()\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[K, V]> {\n      for (const [k, w] of self.#delegate.entries()) {\n        const v = w.deref()\n        if (v == null) {\n          self.#delegate.delete(k)\n        } else {\n          yield [k, v]\n        }\n      }\n    }\n    return iter()\n  }\n\n  [Symbol.iterator](): IterableIterator<[K, V]> {\n    return this.entries()\n  }\n\n  /**\n   * remove all expired entries\n   */\n  #vacuum() {\n    for (const [k, v] of this.#delegate.entries()) {\n      if (v.deref() == null) this.#delegate.delete(k)\n    }\n  }\n}\n","import { dayMs, minuteMs } from \"../fe/Date\"\nimport { allDefined } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { toInt } from \"../fe/Number\"\nimport { opt } from \"../fe/Opt\"\nimport { within } from \"./Number\"\n\nconst wmi =\n  /((?:19|20)\\d\\d)([01]\\d)([0123]\\d)([012]\\d)([012345]\\d)([012345]\\d)\\.(\\d{6})([+-]\\d{3})?/\n/**\n * yyyymmddHHMMSS.mmmmmmsUUU or 20190415124112.947119-420\n *\n * @see https://msdn.microsoft.com/en-us/library/aa387237(v=vs.85).aspx\n */\nexport function wmiDate(s: string): Maybe<Date> {\n  const m = wmi.exec(s)\n  if (m == null) return\n  const arr = m.slice(1, 8).map(ea => toInt(ea))\n  if (!allDefined(arr)) return undefined\n  const [year, mon, day, hour, min, sec, micros] = arr as number[]\n  const offset = toInt(m[8], { defaultValue: 0 })!\n\n  // console.dir({ s, m, year, mon, day, hour, min, sec, micros, offset })\n  return new Date(\n    Date.UTC(year, mon - 1, day, hour, min, sec, micros / 1000) -\n      offset * minuteMs\n  )\n}\n\nconst WinDateRe = /Date\\((\\d+)\\)/\n\n/**\n * PowerShell renders Dates in JSON structures as \"/Date(1552014999676)/\"\n */\nexport function pwshJsonDate(s: string): Maybe<Date> {\n  return opt(s)\n    .flatMap(ea => WinDateRe.exec(ea))\n    .flatMap(ea => ea[1])\n    .flatMap(toInt)\n    .filter(ea => within(0, Date.now() + dayMs, ea))\n    .map(ea => new Date(ea))\n    .get()\n}\n","import { toA } from \"../../fe/toA\"\nimport { clusterEvery, clusterSome } from \"../Array\"\nimport { AggregateTypes } from \"../settings/AggregateTypes\"\nimport { Settings } from \"../settings/Settings\"\nimport { isSimilarAssetFile } from \"./AssetFileComparator\"\nimport { sortAssetFiles } from \"./AssetFileSorter\"\nimport { IAssetFile } from \"./IAssetFile\"\n\nexport async function aggregateAssetFiles<T extends IAssetFile>(\n  arr: T[]\n): Promise<T[][]> {\n  // clustering may not be deterministic if we don't sort beforehand.\n  const sorted = toA(sortAssetFiles(arr) ?? arr)\n  const some = Settings.assetAggregation.valueOrDefault === AggregateTypes.union\n  return (some ? clusterSome : clusterEvery)(sorted, isSimilarAssetFile)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, isNotEmpty } from \"../../fe/Array\"\nimport { blank, mapNotBlank } from \"../../fe/Blank\"\nimport { eql } from \"../../fe/Eql\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt, sigFigs } from \"../../fe/Number\"\nimport { allKeysDefined, keys, values } from \"../../fe/Object\"\nimport { fmt } from \"../../fe/Units\"\nimport { definedAndEql } from \"../Eql\"\nimport { geohashDistanceMeters } from \"../GeoHash\"\nimport { mkLogger } from \"../Logger\"\nimport { toImageHash } from \"../img/ImageHash\"\nimport {\n  compareImageHashes,\n  isSimilarImageHash\n} from \"../img/ImageHashComparison\"\nimport { Settings } from \"../settings/Settings\"\nimport { CapturedAt } from \"../tags/CapturedAt\"\nimport {\n  findInequalFields,\n  whyExposureSettingsNotSimilar\n} from \"../tags/ExifUid\"\nimport { isVideoMimeType } from \"../tags/MimeTypes\"\nimport { IAssetFile } from \"./IAssetFile\"\n\nconst logger = lazy(() => mkLogger(\"sync-file.AssetFileComparator\"))\n\nfunction whyInequal(\n  af1: IAssetFile,\n  af2: IAssetFile,\n  field: keyof IAssetFile,\n  normalizer: (a: any, b: any) => [any, any] = (a, b) => [a, b]\n): Maybe<string> {\n  const a = af1[field]\n  const b = af2[field]\n  if (blank(a) || blank(b) || eql(a, b)) return\n  const [an, bn] = normalizer(a, b)\n  return eql(an, bn) || eql(a, bn) || eql(an, b)\n    ? undefined\n    : `Different ${String(field)}: ${a} ≠ ${b}`\n}\n\nfunction lc(s: any) {\n  return mapNotBlank(s, ea => ea.toLowerCase().trim().normalize())\n}\n\nfunction lc2(a: any, b: any) {\n  return [lc(a), lc(b)] as [any, any]\n}\n\nexport const VideoImageMismatchMsg = \"Videos ≠ images\"\n\nfunction whyExifUidNotEql(\n  af1: IAssetFile,\n  af2: IAssetFile,\n  field: \"cameraId\" | \"lensId\" | \"imageId\"\n) {\n  const ne = findInequalFields(af1[field], af2[field])\n  return ne == null\n    ? undefined\n    : `Different ${field} (${ne.aKey}:${ne.aValue} ≠ ${ne.aKey}:${ne.aValue})`\n}\n\nexport function whyNotSameAsset(\n  needle: Maybe<IAssetFile>,\n  haystack: Maybe<IAssetFile>,\n  siblings: IAssetFile[]\n) {\n  {\n    const why = whyNotSimilarAssetFile(needle, haystack)\n    if (why != null) return why\n  }\n  if (Settings.assetAggregation.valueOrDefault === \"intersection\") {\n    for (const sib of siblings) {\n      // don't test again:\n      if (sib.id !== haystack?.id) {\n        const why = whyNotSimilarAssetFile(needle, sib)\n        if (why != null) return why\n      }\n    }\n  }\n  return\n}\n\nexport function isSimilarAssetFile(\n  af1: Maybe<IAssetFile>,\n  af2: Maybe<IAssetFile>\n): boolean {\n  return whyNotSimilarAssetFile(af1, af2) == null\n}\n\n/**\n * Only compares these specific AssetFiles. You probably want whyNotSameAsset.\n */\nexport function whyNotSimilarAssetFile(\n  af1: Maybe<IAssetFile>,\n  af2: Maybe<IAssetFile>\n): Maybe<string> {\n  if (!allKeysDefined(af1, \"width\", \"height\", \"mimetype\", \"sha\")) {\n    return \"af1 was missing required fields\"\n  }\n  if (!allKeysDefined(af2, \"width\", \"height\", \"mimetype\", \"sha\")) {\n    return \"af2 was missing required fields\"\n  }\n\n  if (definedAndEql(af1.sha, af2.sha)) {\n    logger().debug(\"matching SHA\", { af1, af2 })\n    // Same SHA is always the same asset\n    return\n  }\n\n  // TODO: Live Photos support will need to revisit this!\n  const af1IsVideo = isVideoMimeType(af1.mimetype)\n  const af2IsVideo = isVideoMimeType(af2.mimetype)\n\n  if (af1IsVideo !== af2IsVideo) {\n    return logger().tap({\n      msg: \"whyNotIsSimilar\",\n      result: VideoImageMismatchMsg,\n      meta: {\n        af1: af1.uri,\n        af2: af2.uri,\n        af1IsVideo,\n        af2IsVideo\n      }\n    })\n  }\n\n  const af1ca = CapturedAt.fromAssetFile(af1)\n  const af2ca = CapturedAt.fromAssetFile(af2)\n  if (af1ca == null) return \"af1 missing capturedAt metadata\"\n  if (af2ca == null) return \"af2 missing capturedAt metadata\"\n\n  const capturedAtIsFuzzy = af1ca.isFuzzy || af2ca.isFuzzy\n\n  if (\n    capturedAtIsFuzzy &&\n    Settings.allowFuzzyDateImageHashMatches.valueOrDefault\n  ) {\n    const ih1 = toImageHash(af1 as any)\n    const ih2 = toImageHash(af2 as any)\n    if (\n      // allow image hashes to be _pretty_ close\n      isSimilarImageHash(ih1, ih2, { noRotation: false })\n    ) {\n      logger().info(\"allowFuzzyDateImageHashMatches mode: image hashes match\", {\n        af1,\n        af2\n      })\n      return\n    }\n  }\n\n  if (!af1ca.overlaps(af2ca)) {\n    return `captured-at ${af1ca.toISOStringWithPrecision()} != ${af2ca.toISOStringWithPrecision()}`\n  }\n\n  // If any of these *don't* match, we're definitely a different photo. Order\n  // doesn't really matter.\n  const fieldDiff =\n    whyInequal(af1, af2, \"make\", lc2) ?? whyInequal(af1, af2, \"model\", lc2)\n  // DON'T CHECK FOR GEOHASH HERE! it might be a bit different!\n\n  if (fieldDiff != null) return fieldDiff\n\n  const dist = map(geohashDistanceMeters(af1.geohash, af2.geohash), ea =>\n    sigFigs(ea, 2)\n  )\n  const fields = {\n    cameraId: whyExifUidNotEql(af1, af2, \"cameraId\") ?? null,\n    imageId: whyExifUidNotEql(af1, af2, \"imageId\") ?? null,\n    lensId: whyExifUidNotEql(af1, af2, \"lensId\") ?? null,\n    exposureSettings: whyExposureSettingsNotSimilar(af1, af2) ?? null,\n    closeGeoHash: gt(dist, Settings.gpsErrorMeters.valueOrDefault)\n      ? \"geohashes are \" + fmt(dist!) + \"m different: too far apart\"\n      : null\n  }\n\n  logger().debug(\"whyNotSimilar()\", { fields })\n\n  const mismatched = compact(values(fields))\n  if (isNotEmpty(mismatched)) {\n    return mismatched.join(\";\")\n  }\n\n  if (Settings.useImageHashes.valueOrDefault) {\n    const ih1 = toImageHash(af1 as any)\n    const ih2 = toImageHash(af2 as any)\n    if (ih1 != null && ih2 != null) {\n      const ihc = compareImageHashes(ih1, ih2, {\n        capturedAtIsFuzzy\n      })\n      return true === ihc?.isSimilar ? undefined : ihc?.whyNotSimilar\n    }\n  }\n\n  // If we aren't using image hashing, we have to lean (hard) on metadata:\n  const fieldMatches = keys(fields).filter(k => fields[k] == null)\n\n  return fieldMatches.length >=\n    Settings.minMatchesWithoutImageHashes.valueOrDefault\n    ? undefined\n    : \"Insufficient metadata correlation\"\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { map } from \"../../fe/Maybe\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toFloat } from \"../../fe/Number\"\nimport { toA } from \"../../fe/toA\"\nimport { geohashNumericShort } from \"../GeoHash\"\nimport { mkLogger } from \"../Logger\"\nimport { shim1 } from \"../Shim1\"\nimport { SortableAssetFile } from \"../asset-file/AssetFileSorter\"\nimport { DominantColor } from \"../color/DominantColor\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { ImageHash, imageHash_ } from \"../img/ImageHash\"\nimport { max } from \"../math/Vector\"\nimport { Settings } from \"../settings/Settings\"\nimport { readTags } from \"../tags/ExifTool\"\nimport {\n  AssetFileCapturedAtFields,\n  AssetFileImageHashFields,\n  AssetFileMetadata,\n  AssetFileStatFields,\n  AssetFileUriFields,\n  IAssetFile\n} from \"./IAssetFile\"\n\nconst logger = lazy(() => mkLogger(\"asset-file.AssetFileFactory\"))\n\nexport async function assetFileUriFields_(\n  f: PosixFile\n): Promise<AssetFileUriFields> {\n  try {\n    return {\n      nativePath: f.nativePath,\n      uri: await f.uri_(),\n      mountpoint: (await f.mountpoint())?.nativePath\n    }\n  } catch (error) {\n    return logger().throw(\"Failed to build URI for \" + f, { error })\n  }\n}\n\nexport async function assetFileStatFields_(\n  f: PosixFile\n): Promise<AssetFileStatFields> {\n  const stat = await f.stat_()\n  const arr = await f.sidecareStats()\n  const mtime = max([stat.mtimeMs, ...toA(arr).map(ea => ea.mtimeMs)])!\n  return {\n    mtime,\n    fileSize: stat.size\n  }\n}\n\nexport async function assetFileImageHashFields_(\n  f: PosixFile\n): PromiseMaybe<AssetFileImageHashFields & ImageHash> {\n  if (!Settings.useImageHashes.valueOrDefault) {\n    return\n  }\n  const ih = await imageHash_(f.nativePath)\n\n  if (ih == null) {\n    return logger().throw(\"Failed to extract image hash for \" + f)\n  }\n\n  return {\n    ...ih,\n    ...DominantColor.toModeData(ih.dominantColors)\n  }\n}\n\nexport const assetFileMetadata_ = shim1({\n  name: \"asset-file.assetFileMetadata\",\n  impl: _assetFileMetadata_\n})\n\nasync function _assetFileMetadata_(\n  nativePath: SimpleFileOrString\n): Promise<AssetFileCapturedAtFields & AssetFileMetadata> {\n  const f = PosixFile.for(nativePath)\n  const t = await readTags(f)\n  if (t == null) {\n    return logger().throw(\"Failed to read tags for \" + f)\n  }\n\n  const caFields = t.capturedAt?.toAssetFileFields()\n  if (caFields == null) {\n    return logger().throw(\"Failed to extract captured-at for \" + f)\n  }\n\n  // image hash runs readTags, so we shouldn't do this in parallel.\n\n  return {\n    ...caFields,\n    ...t.exposureSettings,\n    ...t.dimensions,\n    mimetype: t.mimetype,\n    rotation: t.rotation,\n    make: t.Make,\n    model: t.Model,\n\n    // store the rating so if we lose access to the file we still have the metadata:\n    rating: t.rating,\n\n    cameraId: t.cameraId,\n    imageId: t.imageId,\n    lensId: t.lensId,\n    geohash: geohashNumericShort(t.GPSLatitude, t.GPSLongitude),\n\n    durationMs: map(t.duration, ea => Math.round(ea * 1000)),\n    fps: map(toFloat(t.VideoFrameRate), Math.round)\n  }\n}\n\nexport async function mkAssetFile_(f: PosixFile) {\n  const [saf, ih] = await Promise.all([\n    mkSortableAssetFile_(f),\n    assetFileImageHashFields_(f)\n  ])\n  const result = {\n    ...saf,\n    ...ih\n  } satisfies IAssetFile\n  return result\n}\n\nexport async function mkSortableAssetFile_(f: PosixFile) {\n  const [a, b, c, sha] = await Promise.all([\n    assetFileUriFields_(f),\n    assetFileStatFields_(f),\n    assetFileMetadata_(f),\n    f.sha_()\n  ])\n  const result = {\n    ...a,\n    ...b,\n    ...c,\n    sha\n  } satisfies SortableAssetFile\n  return result\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs, weekMs } from \"../../fe/Date\"\nimport { Dimensions } from \"../../fe/Dimensions\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { groupBy } from \"../../fe/MultiMap\"\nimport { gt0, map2Numeric } from \"../../fe/Number\"\nimport { toReqValued } from \"../../fe/Object\"\nimport { Comparable, Primitive } from \"../../fe/Primitive\"\nimport { strEnum } from \"../../fe/StrEnum\"\nimport {\n  PS_LIBRARY_SCHEME,\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n} from \"../../fe/URI\"\nimport { mkLogger } from \"../Logger\"\nimport { includesIgnoreCase } from \"../String\"\nimport { IAssetFile } from \"../asset-file/IAssetFile\"\nimport { copySuffixCountFromName } from \"../fs/FuzzyNames\"\nimport { parentBasename, parsePosixPath } from \"../fs/Path\"\nimport { AssetFileSortCriterion } from \"../settings/AssetFileSortCriteria\"\nimport { Settings } from \"../settings/Settings\"\nimport { isSupportedByCurrentBrowserExt } from \"../tags/FileTypes\"\nimport { uriExists } from \"../uri/FileURI\"\nimport { URI } from \"../uri/URI\"\n\nconst logger = lazy(() => mkLogger(\"img.AssetFileSorter\"))\n\n// goodness ascending:\nconst UriSchemes = strEnum(\n  \"file\",\n  PS_NETWORK_FILESYSTEM_SCHEME,\n  PS_LOCAL_FILE_SCHEME,\n  PS_LIBRARY_SCHEME\n)\n\nexport type SortableAssetFile = Pick<\n  IAssetFile,\n  | \"uri\"\n  | \"mountpoint\"\n  | \"nativePath\"\n  | \"mtime\"\n  | \"fileSize\"\n  | \"mimetype\"\n  | \"sha\"\n  | \"width\"\n  | \"height\"\n  | \"capturedAtPrecisionMs\"\n  | \"make\"\n  | \"model\"\n  | \"rating\"\n  | \"cameraId\"\n  | \"imageId\"\n  | \"lensId\"\n  | \"geohash\"\n>\n\n/**\n * Rough comparable number such that substantively larger resolution files are\n * considered \"better\"\n */\nexport function dim2sort(d: Partial<Dimensions>): Maybe<number> {\n  return map2Numeric(d?.width, d?.height, (w, h) => sortScale(w * h))\n}\n\nexport function sortScale(i: Maybe<number>): Maybe<number> {\n  if (!gt0(i)) return\n  // 1/6 is the strongest fractional exponent such that ImageSize values are\n  // still distinct.\n  return Math.round(\n    Math.pow(i, Settings.variantSortCriteriaPower.valueOrDefault)\n  )\n}\n\nexport function mtime2sort(ms: number): number {\n  // ignore smaller than 5 minute differences\n  return Math.round(ms / (5 * minuteMs))\n}\n\nconst MetadataFields: (keyof SortableAssetFile)[] = [\n  \"make\",\n  \"model\",\n  \"rating\",\n  \"cameraId\",\n  \"imageId\",\n  \"lensId\",\n  \"geohash\"\n]\n\n/**\n * A pleasing melange of heuristics to pick the \"best\" file from a set of\n * files to show to the user.\n *\n * Sorted by best to worst (or \"goodness descending\").\n *\n * Files that are missing, less than a KB, or have no URI will be removed from\n * the returned array.\n */\nexport function sortAssetFiles<T extends SortableAssetFile>(files: T[]): T[] {\n  // For each uniq SHA, pretend everyone has the youngest (biggest!) mtime.\n  // This lets scheme win over mtime for the same SHA.\n  for (const sameSha of groupBy(files, ea => ea.sha).values()) {\n    if (sameSha.length > 1) {\n      const maxMtime = Math.max(...compact(sameSha.map(ea => ea.mtime)))\n      for (const ea of sameSha) {\n        ea.mtime = maxMtime\n      }\n    }\n  }\n  const goodnessAscending = sortBy(files, assetFileSortCriteria)\n  return goodnessAscending.reverse()\n}\n\nexport type AssetFileSortPojo = Record<AssetFileSortCriterion, Comparable>\n\n// the Obj is easier to log:\nexport function assetFileSortCriteriaPojo(\n  af: SortableAssetFile\n): Maybe<AssetFileSortPojo> {\n  const parsedURI = URI.parse(af.uri)\n\n  if (blank(parsedURI?.scheme) || blank(parsedURI?.path)) {\n    logger().warn(\"assetFileSortCriteriaPojo(): skipping (invalid URI)\", {\n      uri_scheme: parsedURI?.scheme,\n      uri_path: parsedURI?.path,\n      af,\n      parsedURI\n    })\n    return\n  }\n\n  const schemeIdx = UriSchemes.indexOf(parsedURI.scheme)\n\n  if (schemeIdx == null) {\n    logger().warn(\n      \"assetFileSortCriteriaPojo(): skipping (invalid URI scheme)\",\n      {\n        uri_scheme: parsedURI.scheme,\n        af,\n        parsedURI\n      }\n    )\n    return\n  }\n\n  const mtimeMs = af.mtime ?? 0\n  const parsedFile = parsePosixPath(parsedURI.path)\n\n  // 5-minute-resolution, plus the scheme index to resolve close ties\n\n  const metadataFields = []\n  for (const ea of MetadataFields) {\n    if (!blank(af[ea])) {\n      metadataFields.push(ea)\n    }\n  }\n  // assume later counts may be newer edits, and pick those:\n\n  // Note that we don't fetch tags here, as that is done for only the winning\n  // file by AssetPreviewBuilder.\n\n  // bigger values win:\n  const fields = {\n    resolution: dim2sort(af),\n    schemeIdx,\n\n    capturedAtPrecision: -(af.capturedAtPrecisionMs ?? weekMs), // < smaller is better, so negate\n    metadataCoverage: metadataFields.length, // < bigger is better\n    metadataFields: metadataFields.join(\",\"),\n\n    // booleans sort [false, true], and we want supported files to win:\n    isBrowserSupported: isSupportedByCurrentBrowserExt(parsedFile.ext),\n\n    mtime: mtime2sort(mtimeMs), // we want more recent to be better\n    fileSize: sortScale(af.fileSize), // bigger is better? maybe?\n\n    isCover: includesIgnoreCase([\"cover\"], parsedFile.base),\n\n    count: Math.abs(copySuffixCountFromName(parsedFile.name) ?? 0),\n\n    basename: parsedFile.base,\n    parentBasename: parentBasename(af.nativePath ?? parsedURI.path),\n    uri: af.uri\n  }\n\n  return logger().tap({\n    msg: \"assetFileSortCriteriaPojo()\",\n    result: toReqValued(fields)\n  })\n}\n\nexport function assetFileSortFields(): AssetFileSortCriterion[] {\n  return uniq<AssetFileSortCriterion>([\n    ...Settings.variantSortCriteria.values,\n    // Always include URI for determinism:\n    \"uri\"\n  ] as any)\n}\n\n/**\n * @return undefined if any assetFileSortCriteriaPojo fields are undefined\n */\nexport function assetFileSortCriteria(\n  af: SortableAssetFile\n): Maybe<Primitive[]> {\n  const obj = assetFileSortCriteriaPojo(af)\n  if (obj == null) return\n  const result = []\n  for (const field of assetFileSortFields()) {\n    result.push((obj as any)[field])\n  }\n  return result\n}\n\nexport async function bestExistingAssetFile<T extends SortableAssetFile>(\n  files: T[]\n): PromiseMaybe<T> {\n  for (const ea of sortAssetFiles(files)) {\n    if (await uriExists(ea.uri, ea.nativePath)) {\n      return logger().tap({\n        msg: \"bestExistingAssetFile()\",\n        result: ea,\n        meta: { files: files.map(af => af.uri) }\n      })\n    }\n  }\n  return logger().tap({\n    msg: \"bestExistingAssetFile(): no existing uris\",\n    result: undefined,\n    meta: { files: files.map(ea => ea.uri) }\n  })\n}\n","import { PartiallyNull } from \"../../fe/PartiallyNull\"\nimport { ExposureSettings } from \"../../fe/api/ExposureSettings\"\nimport { WithModeData } from \"../color/ModeData\"\nimport { ImageHash } from \"../img/ImageHash\"\nimport { uri2nativePath } from \"../uri/FileURI\"\n\n// TODO: do we _want_ isGreyscale here (or in the AssetFile model)?\n\nexport interface AssetFileUriFields {\n  nativePath: string\n  uri: string\n  mountpoint?: string\n}\n\nexport interface AssetFileStatFields {\n  mtime: number // in millis\n  fileSize: number // in bytes\n}\n\nexport interface AssetFileCapturedAtFields {\n  capturedAtLocal: number\n  capturedAtOffset?: number\n  /**\n   * Valid values are [0, yearMs]. If null or -1, it means the precision is unknown.\n   */\n  capturedAtPrecisionMs?: number\n  capturedAtSrc: string\n}\n\n// image hashing is optional--but mimetype and dimensions are required, so we\n// only pull out the hashes here:\nexport type AssetFileImageHashFields = Pick<\n  ImageHash,\n  \"meanHash\" | \"dctHash\" | \"diffHash\"\n> &\n  PartiallyNull<WithModeData> // < not all images have N dominant colors\n\nexport interface AssetFileMetadata\n  extends Partial<ExposureSettings>,\n    AssetFileCapturedAtFields {\n  mimetype: string\n\n  width: number\n  height: number\n  rotation?: number\n\n  make?: string\n  model?: string\n\n  rating?: number\n\n  cameraId?: string\n  imageId?: string\n  lensId?: string\n  geohash?: number\n\n  // Optional, as it only applies to videos:\n  durationMs?: number\n  fps?: number\n}\n\nexport interface IAssetFile\n  extends Partial<AssetFileImageHashFields>, // < image hashing is optional!\n    AssetFileUriFields,\n    AssetFileStatFields,\n    AssetFileCapturedAtFields,\n    AssetFileMetadata {\n  id?: number\n  assetId?: number\n\n  // this is expensive all by itself\n  sha: string\n\n  /** truthy if this is the \"primary\" variation */\n  shown?: number | boolean\n}\n\nexport async function getAssetFileNativePath<T extends AssetFileUriFields>(\n  af: T\n): Promise<string> {\n  return (af.nativePath ??= (await uri2nativePath(af.uri, af.mountpoint))!)\n}\n","/**\n * @see AbortController\n * @see AbortSignal\n */\nexport class AbortError extends Error {}\n","import timers from \"timers\"\nimport { gt0 } from \"../../fe/Number\"\n\nexport interface Debounced {\n  (...args: any[]): any\n  reset(): void\n  force(): void\n  setTimeoutMs(timeoutMs: number): void\n  timeoutMs(): number\n}\n\nexport function debounce(\n  f: (...args: any[]) => any,\n  timeoutMs: number\n): Debounced {\n  let lastTimeout: any\n  let args: any[] = []\n\n  const r: any = gt0(timeoutMs)\n    ? (...a: any[]) => {\n        args = a\n        if (lastTimeout != null) timers.clearTimeout(lastTimeout)\n        lastTimeout = timers.setTimeout(() => {\n          f(...args)\n        }, timeoutMs)\n      }\n    : f\n  r.reset = () => {\n    if (lastTimeout != null) timers.clearTimeout(lastTimeout)\n    lastTimeout = undefined\n  }\n  r.force = () => {\n    r.reset()\n    f()\n  }\n  r.setTimeoutMs = (ea: number) => {\n    r.reset()\n    timeoutMs = ea\n  }\n  r.timeoutMs = () => timeoutMs\n  return r\n}\n","import timers from \"timers\"\nimport util from \"util\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { asError } from \"../../fe/Error\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { omit } from \"../../fe/Object\"\nimport { Comparable } from \"../../fe/Primitive\"\nimport { isPromise } from \"../../fe/Promise\"\nimport { PromiseState, PromiseStates } from \"../../fe/PromiseState\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { TimeoutError } from \"../../fe/TimeoutError\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { isIgnorableError } from \"../error/ErrorTypes\"\nimport { onTimeout } from \"./TimeoutHandler\"\n\n/**\n * Deferred resolution of a promise with synchronous state\n */\nexport class Deferred<T, P = any> implements Promise<T> {\n  static async *toAsyncIterable<I, O>(arr: Deferred<I, O>[]) {\n    while (!isEmpty(arr)) {\n      // Yield the first completed value:\n      const idx = arr.findIndex(ea => !ea.isPending)\n      if (idx >= 0) {\n        const result = arr[idx]\n        arr.splice(idx, 1)\n        yield result\n      } else {\n        try {\n          // Wait for the next one to complete, and run the loop again:\n          await Promise.race(arr)\n        } catch {\n          // if the next promise raises, we still want to return that Deferred\n          // (the caller can check on the rejected status)\n        }\n      }\n    }\n  }\n\n  static #id = 0\n\n  static resolve<I, O = any>(\n    t: I,\n    opts?: { payload?: O; serialId?: Comparable }\n  ): Deferred<I, O> {\n    const d = new Deferred<I>(\".resolved()\", opts)\n    return d.resolve(t)\n  }\n\n  readonly id: number\n  readonly payload?: P\n  /**\n   * If this is defined, Promises should prevent concurrent execution of other\n   * Deferred instances with the same serialId.\n   */\n  readonly serialId?: Comparable\n  readonly startedAt = Date.now()\n  #settledAt?: number\n  #state: PromiseState = PromiseStates.pending\n  #value?: T\n  readonly promise: Promise<T>\n  #resolve!: (value: T) => void\n  #reject!: (reason?: any) => void\n  #error: Maybe<Error>\n  #priorTimeout: Maybe<NodeJS.Timeout>\n  #logger: Maybe<Logger>\n\n  /**\n   * @param name can be either a string or a data payload to associate with the\n   * promise.\n   */\n  constructor(\n    readonly name: string,\n    opts?: { payload?: P; serialId?: Comparable }\n  ) {\n    this.id = Deferred.#id++\n    this.promise = new Promise<T>((resolve, reject) => {\n      this.#resolve = resolve\n      this.#reject = reject\n    })\n    this.payload = opts?.payload\n    this.serialId = opts?.serialId\n  }\n\n  private get logger() {\n    return this.#logger ?? mkLogger(\"async.Deferred(\" + this.name + \")\")\n  }\n\n  // Only true for the same instance\n  eql(d: Deferred<T>): boolean {\n    return d instanceof Deferred && d.id === this.id\n  }\n\n  // This is used by LogMeta for logging:\n  toLogJSON() {\n    return {\n      _ctor: \"Deferred\",\n      name: this.name,\n      state: this.#state,\n      value: this.value,\n      serialId: this.serialId,\n      payload: this.payload,\n      elapsedMs: this.elapsedMs\n    }\n  }\n\n  toJSON() {\n    return omit(this.toLogJSON(), \"value\", \"elapsedMs\")\n  }\n\n  get settledAt() {\n    return this.#settledAt\n  }\n\n  get elapsedMs() {\n    return (this.#settledAt ?? Date.now()) - this.startedAt\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"async.Deferred(\" + this.name + \")\"\n  }\n\n  [util.inspect.custom]() {\n    return this.toJSON()\n  }\n\n  observeQuietly(p: Promise<T>): Deferred<Maybe<T>> {\n    if (isPromise(p)) {\n      p.then(resolution => {\n        void this.maybeResolve(resolution)\n      }).catch(err => {\n        this.logger.warn(\"observeQuietly.reject()\", err)\n        void this.maybeResolve(undefined as any)\n      })\n    } else {\n      void this.maybeResolve(p)\n    }\n    return this as any\n  }\n\n  observe(p: SyncOrAsync<T>): this {\n    if (isPromise(p)) {\n      p.then(resolution => {\n        void this.maybeResolve(resolution)\n      }).catch(err => {\n        void this.maybeReject(err)\n      })\n    } else {\n      void this.maybeResolve(p)\n    }\n    return this\n  }\n\n  /**\n   * Reject the promise if it hasn't been resolved or rejected within\n   * `timeoutMs`\n   */\n  setTimeout(timeoutMs: number, unref: boolean = true): this {\n    if (this.#priorTimeout != null) {\n      timers.clearTimeout(this.#priorTimeout)\n      this.#priorTimeout = undefined\n    }\n\n    if (gt0(timeoutMs)) {\n      // unref so it doesn't prevent node from exiting:\n      this.#priorTimeout = timers.setTimeout(() => {\n        if (this.isPending) {\n          void this.reject(\n            new TimeoutError(\n              \"Timeout \" +\n                this.name +\n                \" after \" +\n                (Date.now() - this.startedAt) +\n                \"ms\"\n            )\n          )\n          onTimeout()\n        }\n      }, timeoutMs)\n      if (unref) {\n        this.#priorTimeout.unref()\n      }\n    }\n    return this\n  }\n\n  get stateStr(): PromiseState {\n    return this.isPending\n      ? \"pending\"\n      : this.isResolved\n      ? \"resolved\"\n      : \"rejected\"\n  }\n\n  get isPending() {\n    return this.#state === PromiseStates.pending\n  }\n\n  /**\n   * @return the resolved value for this Deferred, or `undefined` if this\n   * is either still pending or rejected.\n   */\n  get value(): Maybe<T> {\n    return this.isResolved ? this.#value : undefined\n  }\n\n  get error(): Maybe<Error> {\n    return this.#error\n  }\n\n  /**\n   * true iff either resolved or rejected.\n   */\n  get isSettled() {\n    return this.#state !== PromiseStates.pending\n  }\n\n  get isResolved() {\n    return this.#state === PromiseStates.resolved\n  }\n\n  get isRejected() {\n    return this.#state === PromiseStates.rejected\n  }\n\n  get settledMs(): number | undefined {\n    return this.#settledAt == null\n      ? undefined\n      : this.#settledAt - this.startedAt\n  }\n\n  /**\n   * Resolves the internal promise. Cannot be invoked more than once.\n   */\n  resolve(value: T): this {\n    return this.#settle(() => {\n      this.#state = PromiseStates.resolved\n      this.#value = value\n      this.#resolve(value)\n    })\n  }\n\n  maybeResolve(value: T): this {\n    return this.isPending ? this.resolve(value) : this\n  }\n\n  reject(reason?: any): this {\n    this.logger.log(\n      isIgnorableError(reason) === true ? \"info\" : \"warn\",\n      \".reject()\",\n      reason\n    )\n    const err = asError(reason)\n    return this.#settle(() => {\n      this.#error = err\n      this.#state = PromiseStates.rejected\n      this.#reject(err)\n    })\n  }\n\n  maybeReject(reason?: any): this {\n    return this.isPending ? this.reject(reason) : this\n  }\n\n  finally(f: () => any): this {\n    // don't create a new promise chain that may have an unhandled error!\n    void this.promise.finally(f).catch(() => undefined)\n    return this\n  }\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?:\n      | ((value: T) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | undefined\n      | null\n  ): Promise<TResult1 | TResult2> {\n    return this.promise.then(onfulfilled, onrejected)\n  }\n\n  catch<U>(onrejected: (reason: any) => U | PromiseLike<U>): Promise<T | U> {\n    return this.promise.catch(err => onrejected(err))\n  }\n\n  #settle(firstback: () => void): this {\n    if (this.#state === PromiseStates.pending) {\n      map(this.#priorTimeout, timers.clearTimeout)\n      firstback()\n      this.#settledAt = Date.now()\n      const ms = this.settledMs!\n      if (this.isResolved && ms > 5000) {\n        this.logger.info(\"Completed in \" + ms + \"ms\")\n      }\n    } else {\n      this.logger.warn(\n        \"settled multiple times (already \" + this.stateStr + \")\",\n        { value: this.#value }\n      )\n    }\n    return this\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { isSingleSpecTests, isTest } from \"../NodeEnv\"\nimport { firstGt0 } from \"../Number\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { setUnrefInterval } from \"./Timers\"\n\nconst logger = lazy(() => mkLogger(\"async.Endable\"))\n\nexport interface Endable {\n  readonly name: string\n  readonly ended: boolean\n  readonly endTimeoutMs?: number\n  end(): Promise<any> | any\n}\n\nconst endablesByRank = new MultiMap<EndableRank, Endable>()\n\nsetUnrefInterval(() => vacuumEndables(), 1 * minuteMs)\n\nconst DefaultTimeoutMs = 5 * secondMs\n\nexport const EndableRanks = strEnum(\n  \"first\",\n  \"stats\",\n  \"service\",\n  \"predb\",\n  \"db\",\n  \"postdb\",\n  \"logger\",\n  \"logtail\"\n)\nexport type EndableRank = StrEnumKeys<typeof EndableRanks>\n\n/**\n * Add an endable with an arbitrary end rank\n */\nexport function addEndable<T extends Endable>(\n  rank: EndableRank,\n  endable: T\n): T {\n  EndableRanks.validOrElse(rank, () => {\n    throw new Error(\"internal error: invalid rank \" + rank)\n  })\n  endablesByRank.add(rank, endable)\n  return endable\n}\n\nlet _ending = false\n\nexport function ending(): boolean {\n  return _ending\n}\n\nexport function setEnding(value: boolean) {\n  if (isTest) {\n    _ending = value\n  } else {\n    throw new Error(\"cannot set ending\")\n  }\n}\n\nexport function endAll(...arr: Maybe<Endable>[]) {\n  return Promise.all(arr.map(ea => end(ea)))\n}\n\nexport async function end(e: MaybeSyncOrAsync<Endable>, endTimeoutMs?: number) {\n  const endable = await e\n  if (endable == null || true === endable?.ended) return\n  const timeoutMs =\n    isTest && getDevEnvFlag(\"PS_SINGLE_SPEC_TESTS\")\n      ? 100\n      : firstGt0(endTimeoutMs, endable.endTimeoutMs, DefaultTimeoutMs)!\n  logger().trace(endable.name + \" ending...\", { timeoutMs })\n  try {\n    await thenOrTimeoutError(endable.end(), timeoutMs, false)\n  } catch (err) {\n    try {\n      // the logger might throw errors at the very end:\n      logger().warn(endable.name + \".end() failed\", err)\n    } catch {\n      //\n    }\n  }\n}\n\nfunction vacuumEndables() {\n  endablesByRank.filterInPlace((_, v) => v.ended !== true)\n  logger().debug(\n    \"vacuumEndables()\",\n    endablesByRank.entriesArray().map(([k, v]) => [k, v.map(ea => ea.name)])\n  )\n}\n\nexport const endEndables = lazy(async () => {\n  const endTimeoutMs = isSingleSpecTests() ? 500 : undefined\n  logger().info(\"endEndables()\", {\n    isTest,\n    isSingleSpecTests: isSingleSpecTests()\n  })\n  if (!isTest) _ending = true\n  vacuumEndables()\n  for (const rank of EndableRanks.values) {\n    const arr = endablesByRank.get(rank) ?? []\n    if (isNotEmpty(arr)) {\n      logger().debug(\"endEndables(): ending \" + rank)\n      await Promise.allSettled(arr.map(ea => end(ea, endTimeoutMs)))\n    }\n  }\n})\n\nexport function endablesStats() {\n  const result: any = {}\n  for (const rank of EndableRanks.values) {\n    const arr = endablesByRank.get(rank) ?? []\n    result[rank] = arr.map(ea => ({ name: ea.name, ended: ea.ended }))\n  }\n  return result\n}\n","import { clearInterval, clearTimeout, setInterval, setTimeout } from \"timers\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toInt } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { EndableRank, EndableRanks, ending } from \"./Endable\"\nimport { EndableWrapper } from \"./EndableWrapper\"\n\nexport class EndableInterval extends EndableWrapper {\n  #timer: Maybe<NodeJS.Timeout>\n  #timeout: Maybe<NodeJS.Timeout>\n  constructor(\n    readonly opts: {\n      name: string\n      callback: (...args: any[]) => any\n      intervalMs: number\n      initialDelayMs?: number\n      rank?: EndableRank\n      endTimeoutMs?: number\n      unref?: boolean // < defaults to false to prevent tools from exiting unexpectedly\n      onEnd?: () => unknown\n    }\n  ) {\n    super(\n      opts.name,\n      () => this.#clear(),\n      opts.rank ?? EndableRanks.first,\n      opts.endTimeoutMs\n    )\n    if (opts.onEnd != null) {\n      this.onEnds.push(opts.onEnd)\n    }\n    this.setIntervalMs(this.opts.intervalMs, this.opts.initialDelayMs, true)\n  }\n\n  #clear() {\n    map(this.#timer, clearInterval)\n    this.#timer = undefined\n    map(this.#timeout, clearTimeout)\n    this.#timeout = undefined\n  }\n\n  hasTimer() {\n    return this.#timer != null\n  }\n\n  hasTimeout() {\n    return this.#timeout != null\n  }\n\n  get timingOpts() {\n    return pick(this.opts, \"intervalMs\", \"initialDelayMs\")\n  }\n\n  readonly #callback = () => {\n    if (!ending() && !this.ended) {\n      this.opts.callback()\n    }\n  }\n\n  get #canRun() {\n    return !ending() && !this.ended\n  }\n\n  /**\n   * @return true if the given args or state resulted in new intervals being scheduled\n   */\n  setIntervalMs(\n    intervalMs: number,\n    initialDelayMs?: number,\n    force = false\n  ): boolean {\n    intervalMs = toInt(intervalMs) ?? 0\n    initialDelayMs = toInt(initialDelayMs) ?? 0\n    if (\n      !force &&\n      this.opts.intervalMs === intervalMs &&\n      (this.opts.initialDelayMs ?? 0) === initialDelayMs\n    ) {\n      // no-op if these are already the correct value\n      return false\n    }\n\n    this.opts.intervalMs = intervalMs\n    this.opts.initialDelayMs = initialDelayMs\n\n    this.#clear()\n\n    const maybeScheduleInterval = () => {\n      if (this.#canRun && gt0(this.opts.intervalMs)) {\n        this.#timer = setInterval(this.#callback, this.opts.intervalMs)\n        if (this.opts.unref === true) this.#timer.unref()\n      }\n    }\n\n    if (gt0(this.opts.initialDelayMs)) {\n      this.#timeout = setTimeout(() => {\n        if (this.#canRun) {\n          this.#callback()\n          maybeScheduleInterval()\n        }\n      }, this.opts.initialDelayMs)\n      if (this.opts.unref === true) this.#timeout.unref()\n    } else {\n      maybeScheduleInterval()\n    }\n    return true\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Latch } from \"../../fe/Latch\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { Endable, EndableRank, EndableRanks, addEndable } from \"./Endable\"\nimport { awaitSettled } from \"./Promise\"\n\n/**\n * Base class for Endables.\n */\nexport class EndableWrapper implements Endable {\n  #name!: string\n  logger!: Logger\n\n  protected readonly onEnds: (() => any)[] = []\n  readonly #endPromise = lazy(() => new Latch())\n  /**\n   * @param name for logging\n   * @param onEnd called by `this.end()`. May return a promise.\n   * @param _isEnded if the wrapped instance can end from other state mutations,\n   * providing this method will allow this wrapper to be garbage collected.\n   */\n  constructor(\n    name: string,\n    onEnd?: () => Promise<any> | any,\n    rank: EndableRank = EndableRanks.first,\n    readonly endTimeoutMs?: number\n  ) {\n    this.name = name\n    if (onEnd != null) this.onEnds.push(onEnd)\n    addEndable(rank, this)\n  }\n\n  get name() {\n    return this.#name\n  }\n\n  set name(n: string) {\n    this.#name = n\n    this.logger = mkLogger(n)\n  }\n\n  get ended() {\n    return this.end.hasPrior()\n  }\n\n  end = lazy(async () => {\n    await awaitSettled(this.onEnds.map(ea => ea()))\n    void this.#endPromise().resolve()\n  })\n\n  awaitEnd(): Promise<void> {\n    return this.#endPromise()\n  }\n}\n","import process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { toNotBlank } from \"../../fe/Blank\"\nimport { magenta } from \"../Chalk\"\nimport { mkLogger } from \"../Logger\"\nimport { stderrWrite } from \"../StdoutWrite\"\nimport { toWrappedError } from \"../error/WrappedError\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { endEndables, ending } from \"./Endable\"\n\nconst logger = lazy(() => mkLogger(magenta(\"Exit\")))\n\nexport const onFatalHandlers: ((reason: string) => any)[] = []\n\nexport async function exit(args: {\n  reason?: string\n  status?: number\n  error?: any\n}) {\n  logger().log(args.status === 0 ? LogLevels.info : LogLevels.warn, \"exit()\", {\n    ...args,\n    ending: ending()\n  })\n  const error = toWrappedError(args.error, {\n    message: args.reason,\n    errno: args.status\n  })\n  if (error.errno !== 0 || error.fatal === true) {\n    stderrWrite({ fatal: true, ...args })\n    const reason = toNotBlank(args?.reason) ?? error.toString()\n    for (const ea of onFatalHandlers) {\n      await ea(reason)\n    }\n  }\n\n  if (!ending()) {\n    await endEndables()\n    process.exit(args.status)\n  }\n}\n\nexport const exitOnStdStream = lazy(() => {\n  for (const streamName of [\"stdin\", \"stdout\", \"stderr\"] as const) {\n    for (const eventName of [\"close\", \"error\", \"disconnect\", \"end\"] as const) {\n      process[streamName].on(eventName, (error: any) => {\n        void exit({\n          reason: `${streamName}:${eventName}`,\n          status: 0,\n          error\n        })\n      })\n    }\n  }\n})\n","import { Later } from \"../../fe/Later\"\nimport { Maybe, MaybePromiseMaybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\n\nexport interface LaterMaybe<T> {\n  (): PromiseMaybe<T>\n}\n\nexport interface MaybeLaterMaybe<T> {\n  (): MaybePromiseMaybe<T>\n}\n\n/**\n * Wrap a Later to get a promise that will be resolved or rejected when the\n * returned thunk is called.\n */\nexport function laterPromise<T>(later: () => T | Promise<T>): {\n  promise: Promise<T>\n  later: Later<T>\n} {\n  // We could use Deferred here, but I want to minimize cross-dependencies.\n  let resolve: (t: T | Promise<T>) => void\n  let reject: (error: any) => void\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n  return {\n    promise,\n    later: async () => {\n      try {\n        const r = await later()\n        resolve(r)\n        return r\n      } catch (err) {\n        reject(err)\n        throw err\n      }\n    }\n  }\n}\n\nexport async function firstDefinedLater<T>(\n  ...arr: Maybe<() => MaybeSyncOrAsync<T>>[]\n): PromiseMaybe<T> {\n  if (arr == null) return\n  for (const ea of arr) {\n    if (ea == null) continue\n    const result = await ea()\n    if (result != null) return result\n  }\n  return\n}\n","import { eql } from \"../../fe/Eql\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { toErr } from \"../../fe/toErr\"\nimport { Deferred } from \"./Deferred\"\n\nexport type MemoizedDeferredListener<T> = {\n  onChange(newResult: T): any\n  onError(error: Error): any\n}\n\nexport interface MemoizedDeferred<T> {\n  (): Deferred<T>\n\n  /**\n   * Clears the prior value but doesn't return it (so we don't have to\n   * explicitly ignore unawaited promises)\n   */\n  unset(): void\n\n  /**\n   * Force the prior value to be `t`\n   */\n  set(t: T): void\n\n  /**\n   * Forces the underlying thunk or later to be applied\n   */\n  refresh(): Deferred<T>\n\n  /**\n   * @return the milliseconds a prior result may be returned by `apply`, or\n   * undefined if no TTL is set\n   */\n  ttl(): Maybe<number>\n\n  /**\n   * @param ttl undefined to remove TTL expirations\n   */\n  setTTL(ttl: Maybe<number>): void\n\n  /**\n   * Calls the listener if the result changes later. The underlying thunk is\n   * not applied now (like with {@link MemoizedThunk.watch}).\n   */\n  watchLater(watcher: MemoizedDeferredListener<T>): void\n\n  /**\n   * @return undefined if unset\n   */\n  lastSetAgoMs(): Maybe<number>\n\n  /**\n   * @return the previously-memoized Deferred, if it isn't stale (according to\n   * `ttl()`)\n   */\n  prior(): Maybe<Deferred<T>>\n\n  /**\n   * @return the last memoized awaited result (even if it's stale!).\n   */\n  lastValue(): Maybe<T>\n\n  /**\n   * @return the number of times the underlying thunk has been applied\n   */\n  settledCount(): number\n\n  /**\n   * Has a result not been calculated, or was calculated more than `ttl()` ms\n   * ago?\n   */\n  isStale(): boolean\n\n  /**\n   * How long did the last fulfilled result take to calculate?\n   */\n  elapsedMs(): Maybe<number>\n\n  toString(): string\n}\n\n/**\n * @param ttlMs if 0 or null, the result of `later` will be cached forever.\n */\nexport function lazyAsync<T>({\n  later,\n  desc,\n  ttlMs,\n  timeoutMs\n}: {\n  later: () => Promise<T>\n  desc?: string\n  ttlMs?: number\n  timeoutMs?: number\n}): MemoizedDeferred<T> {\n  let lastSetTs: number | undefined\n  let settledCount = 0\n  let lastValue: T | undefined\n  let result: Deferred<T> | undefined\n  const watchers: MemoizedDeferredListener<T>[] = []\n\n  async function onSetResult(\n    priorD: Deferred<T> | undefined,\n    resultD: Deferred<T>\n  ) {\n    const resultIdAtStart = result?.id\n    try {\n      // There's a chance that the prior or current result has already\n      // changed. Don't submit onChanges or change priorValue if the current\n      // Deferred result has changed.\n\n      const current = await resultD\n      if (result?.id === resultIdAtStart) {\n        lastValue = current\n      }\n\n      if (\n        result?.id === resultIdAtStart &&\n        !eql(priorD?.value ?? (await priorD?.promise), current)\n      ) {\n        for (const ea of watchers) {\n          await ea.onChange(current)\n        }\n      }\n    } catch (err) {\n      const error = toErr(err)\n      if (error != null) for (const ea of watchers) ea.onError(error)\n    } finally {\n      settledCount++\n    }\n  }\n\n  function setResult(t: Promise<T>): Deferred<T> {\n    lastSetTs = Date.now()\n    const priorResult = result\n    result =\n      t instanceof Deferred\n        ? t\n        : new Deferred<T>(desc ?? \"lazyAsync\").observe(t)\n    if (gt0(timeoutMs)) {\n      void result.setTimeout(timeoutMs)\n    }\n    void onSetResult(priorResult, result)\n    return result\n  }\n\n  function isStale() {\n    return lastSetTs == null || (gt0(ttlMs) && lastSetTs + ttlMs < Date.now())\n  }\n\n  const f = (() =>\n    // NO PROMISE AWAITING HERE. Otherwise N calls would go through while we\n    // wait for the promise to resolve.\n    result == null || isStale() ? setResult(later()) : result) as any\n\n  f.unset = () => {\n    settledCount = 0\n    lastSetTs = undefined\n    lastValue = undefined\n    result = undefined\n  }\n\n  f.set = (t: T) => setResult(Deferred.resolve(t))\n\n  f.isStale = isStale\n\n  f.settledCount = () => settledCount\n\n  f.prior = () => {\n    if (isStale()) f.unset()\n    return result\n  }\n\n  f.lastValue = () => {\n    return result?.value ?? lastValue\n  }\n\n  f.refresh = () => setResult(later())\n\n  f.ttl = () => ttlMs\n\n  f.setTTL = (ttl: Maybe<number>) => {\n    ttlMs = gt0(ttl) ? ttl : undefined\n  }\n\n  f.watchLater = (watcher: MemoizedDeferredListener<T>) => {\n    watchers.push(watcher)\n  }\n\n  f.toString = f.toLogJSON = f.toJSON = () => desc ?? \"[LazyAsync]\"\n\n  f.lastSetAgoMs = () =>\n    lastSetTs == null ? undefined : Date.now() - lastSetTs\n\n  f.elapsedMs = () => result?.settledMs ?? result?.elapsedMs\n\n  return f\n}\n","import { stringify } from \"../../fe/JSON\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { FifoCacheAsync, FifoCacheAsyncOpts } from \"../FifoCacheAsync\"\n\nexport interface MemoizedAsyncFunc<A, R> {\n  (a: A): Promise<R>\n  clear(a?: A): void | Promise<void>\n  size(): number\n  callCount(): number\n}\n\nexport function memoizeAsync<A, R>(\n  f: (a: A) => SyncOrAsync<R>,\n  opts: FifoCacheAsyncOpts\n): MemoizedAsyncFunc<A, R> {\n  let callCount = 0\n  const store = new FifoCacheAsync<R>(opts)\n  const r: any = (a: A) => {\n    callCount++\n    return store.getOrSetAsync(stringify(a), async () => f(a))\n  }\n  r.clear = (a?: A) => {\n    if (a == null) {\n      return store.clear()\n    } else {\n      const aKey = stringify(a)\n      return store.deleteIf(ea => aKey === ea)\n    }\n  }\n  r.size = () => store.size\n  r.callCount = () => callCount\n  return r\n}\n","import { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { postrun } from \"./Postrun\"\n\nexport interface OneAtATime<T> {\n  (): Promise<T>\n  isRunning(): boolean\n  force(): Promise<T>\n  prior(): Promise<T>\n}\n\nexport function oneAtATime<R>({\n  fn,\n  runLaterIfBusy = false,\n  undefinedIfBusy\n}: {\n  fn: () => SyncOrAsync<R>\n  runLaterIfBusy?: boolean\n  undefinedIfBusy?: boolean\n}): OneAtATime<R> {\n  let prior: Promise<R>\n  let running = false\n  let runAgain = false\n  // this isn't async just to reduce promise creation:\n  const result = () => {\n    if (running) {\n      runAgain = true\n      return true === undefinedIfBusy ? (undefined as any) : prior\n    } else {\n      running = true\n      return (prior = postrun({\n        fn,\n        postrun: () => {\n          running = false\n          if (runLaterIfBusy === true && runAgain) {\n            runAgain = false\n            setImmediate(result)\n          }\n        }\n      }))\n    }\n  }\n  result.isRunning = () => running\n\n  result.prior = () => prior\n\n  result.force = async () => {\n    await prior\n    return result()\n  }\n\n  return result\n}\n","import { SyncOrAsync } from \"../../fe/SyncOrAsync\"\n\nexport async function postrun<T>(args: {\n  fn: () => SyncOrAsync<T>\n  postrun: () => SyncOrAsync<any>\n}): Promise<T> {\n  try {\n    return await args.fn()\n  } finally {\n    await args.postrun()\n  }\n}\n","import { compact, isEmpty, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { isFalse, isTrue } from \"../../fe/Boolean\"\nimport { secondMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { orElse } from \"../../fe/Maybe\"\nimport {\n  Maybe,\n  MaybeNull,\n  MaybePromiseMaybe,\n  PromiseMaybe\n} from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { Primitive } from \"../../fe/Primitive\"\nimport { thenMap } from \"../../fe/Promise\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { thenOrTimeout, thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { Thunk, ThunkOrLater, tol } from \"../../fe/Thunk\"\nimport { TimeoutError } from \"../../fe/TimeoutError\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { toA } from \"../../fe/toA\"\nimport { toErr } from \"../../fe/toErr\"\nimport { Arg0 } from \"../Args\"\nimport { batches } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { identity } from \"../Object\"\nimport { Predicate } from \"../predicates/Predicates\"\nimport { maxCpus } from \"../work/MaxCpus\"\nimport { PermissivePromises, Promises } from \"./Promises\"\n\n// TODO: INLINE\nexport { thenMap } from \"../../fe/Promise\"\n\nexport async function someOrTimeout<T>(\n  arr: ThunkOrLater<T>[],\n  opts: { timeoutMs: number }\n): Promise<(T | TimeoutError | Error)[]> {\n  return Promise.all(\n    arr.map(ea => thenOrTimeoutError(tol(ea), opts.timeoutMs).catch(err => err))\n  )\n}\n\nexport async function thenCompact<T>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T>[]>\n): Promise<T[]> {\n  if (arr == null) return []\n  const c = compact(await arr)\n  return isEmpty(c) ? [] : compact(await Promise.all(c))\n}\n\nexport async function thenCollectBatched<T1, T2>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T1>[]>,\n  batchSize: number,\n  f: (batch: T1[]) => MaybeSyncOrAsync<T2[]>\n) {\n  const result: T2[] = []\n  for (const batchArr of batches(toA(await arr), batchSize)) {\n    const batchInput: T1[] = await thenCompact(batchArr)\n    result.push(...(await thenCompact(f(batchInput))))\n  }\n  return result\n}\n\nexport async function thenMapResolved<T1, T2>(\n  objP: MaybeSyncOrAsync<T1>,\n  f: (t: T1) => MaybeSyncOrAsync<T2>\n): PromiseMaybe<T2> {\n  if (objP == null) return Promise.resolve(undefined)\n  try {\n    return await thenMap(objP, f)\n  } catch (e) {\n    return undefined\n  }\n}\n\nexport function resolvedWithin<T>(\n  p: Promise<T>,\n  withinMs: number\n): Promise<boolean> {\n  return Promise.race([\n    p.then(() => true),\n    delay(withinMs).then(() => false)\n  ]).catch(() => false)\n}\n\nexport async function resolved(p: Promise<any>): Promise<boolean> {\n  try {\n    await p\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nexport async function rejected(p: Promise<any>): Promise<boolean> {\n  return !(await resolved(p))\n}\n\nexport async function thenDefined(p: Promise<any>): Promise<boolean> {\n  return (await p) != null\n}\n\nexport async function allSerial<T>(\n  arr: Maybe<() => MaybeSyncOrAsync<T>>[]\n): Promise<T[]> {\n  const result: T[] = []\n  for (const ea of compact(arr)) {\n    const v = await ea()\n    if (v != null) result.push(v)\n  }\n  return result\n}\n\nexport async function awaitAll(\n  arr: Maybe<(PromiseMaybe<any> | any)[]>\n): Promise<void> {\n  for (const ea of toA(arr)) {\n    if (ea != null) await ea\n  }\n}\n\nexport async function awaitSettled(\n  arr: Maybe<(PromiseMaybe<any> | any)[]>\n): Promise<void> {\n  for (const ea of toA(arr)) {\n    try {\n      if (ea != null) await ea\n    } catch {\n      //\n    }\n  }\n}\n\n// maybeist champion:\nexport async function thenFlatten<T>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T | MaybeSyncOrAsync<T>[]>[]>\n): Promise<T[]> {\n  const result: T[] = []\n  for (const ea of toA(await arr)) {\n    const v = await ea\n    if (v != null) {\n      if (Array.isArray(v)) {\n        for (const ea2 of v) {\n          const v2 = await ea2\n          if (v2 != null) result.push(v2)\n        }\n      } else {\n        result.push(v)\n      }\n    }\n  }\n  return result\n}\n\nexport async function thenUniq<T>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T>[]>\n): Promise<T[]> {\n  const result: T[] = []\n  for (const ea of toA(await arr)) {\n    const v = await ea\n    if (v != null) {\n      result.push(v)\n    }\n  }\n  return uniq(result)\n}\n\nexport async function asyncFind<T>(\n  arr: T[],\n  f: (t: T) => Promise<boolean>\n): PromiseMaybe<T> {\n  for (const ea of arr) {\n    if (await f(ea)) return ea\n  }\n  return\n}\n\n/**\n * @see thenCollect in fe -- which doesn't have logging or timeout support\n */\nexport async function thenCollectSerial<T, V>({\n  name,\n  arr,\n  f,\n  timeoutMs\n}: {\n  name: string\n  arr: Maybe<MaybeSyncOrAsync<Maybe<T>[]>>\n  f: (t: T) => SyncOrAsync<Maybe<V>>\n  timeoutMs?: number\n}): Promise<[V, T][]> {\n  const result: [V, T][] = []\n  for (const ea of compact(await arr)) {\n    try {\n      const v = await (gt0(timeoutMs)\n        ? thenOrTimeoutError(f(ea), timeoutMs)\n        : f(ea))\n      if (v != null) result.push([v, ea])\n    } catch (error) {\n      mkLogger(name).warn(\"failed to apply\", {\n        ea,\n        error\n      })\n    }\n  }\n  return result\n}\n\nexport async function mapAsyncSerial<T, V>(\n  args: Arg0<typeof thenCollectSerial<T, V>>\n): Promise<V[]> {\n  return (await thenCollectSerial(args)).map(ea => ea[0])\n}\n\n/**\n * For each in `V[]`, apply `f(v)` concurrently, returning `[v, await f(v)]`\n * @see thenCollect\n */\nexport async function thenCollectParallel<T, V>({\n  arr,\n  f,\n  name,\n  maxConcurrent,\n  timeoutMs,\n  promises\n}: {\n  arr: Maybe<MaybeSyncOrAsync<Maybe<T>[]>>\n  f: (t: T) => SyncOrAsync<Maybe<V>>\n  name: string\n  maxConcurrent?: number\n  timeoutMs?: number\n  promises?: Promises\n}): Promise<[V, T][]> {\n  if (arr == null) return []\n  const array = compact(await arr)\n  if (isEmpty(array)) return []\n  maxConcurrent = Math.round(maxConcurrent ?? maxCpus())\n  if (maxConcurrent <= 1) return thenCollectSerial({ arr, f, name, timeoutMs })\n  const p =\n    promises ??\n    (array.length <= maxConcurrent\n      ? PermissivePromises\n      : new Promises(name, () => maxConcurrent))\n  // ^ creating new Promises() is expensive\n  const func = gt0(timeoutMs)\n    ? (t: T) => thenOrTimeoutError(f(t), timeoutMs)\n    : f\n  const t = await p.enqueueAll(\n    name,\n    array.map(ea => async () => {\n      try {\n        return [await func(ea), ea] as [V, T]\n      } catch (error) {\n        mkLogger(name).warn(\"failed to apply\", {\n          ea,\n          error\n        })\n        return\n      }\n    })\n  )\n  // compact prevents TypeError: undefined is not iterable:\n  return compact(t).filter(([k, v]) => k != null && v != null)\n}\n\n/**\n * Apply `f` to each element of `arr` concurrently, returning the results\n */\nexport async function mapAsync<T, V>({\n  arr,\n  f,\n  name,\n  maxConcurrent,\n  timeoutMs,\n  promises\n}: {\n  arr: Maybe<MaybeSyncOrAsync<Maybe<T>[]>>\n  f: (t: T) => SyncOrAsync<Maybe<V>>\n  name: string\n  maxConcurrent?: number\n  timeoutMs?: number\n  promises?: Promises\n}): Promise<V[]> {\n  return (\n    await thenCollectParallel({\n      arr,\n      f,\n      name,\n      maxConcurrent,\n      timeoutMs,\n      promises\n    })\n  ).map(ea => ea[0])\n}\n\n/**\n * @return all items in `arr` that `f` doesn't reject and returns true or\n * Promise<true>\n */\nexport async function filterAsync<T>({\n  name,\n  arr,\n  f,\n  maxConcurrent,\n  timeoutMs\n}: {\n  name: string\n  arr: Maybe<T>[]\n  f: Predicate<T>\n  maxConcurrent?: number\n  timeoutMs?: number\n}): Promise<T[]> {\n  const t = await thenCollectParallel({\n    name,\n    arr: compact(arr),\n    f,\n    maxConcurrent,\n    timeoutMs\n  })\n  return t.filter(([b]) => b).map(([, v]) => v)\n}\n\nexport async function partitionAsync<T>(\n  arr: T[],\n  filter: (t: T) => MaybeSyncOrAsync<boolean>\n): Promise<[T[], T[]]> {\n  const t = await thenCollectParallel({\n    name: \"partitionAsync\",\n    arr,\n    f: filter\n  })\n  return [\n    t.filter(([ea]) => isTrue(ea)).map(([, ea]) => ea),\n    t.filter(([ea]) => isFalse(ea)).map(([, ea]) => ea)\n  ]\n}\n\nexport async function tryAsync<T>(f: () => T | Promise<T>) {\n  try {\n    return await f()\n  } catch {\n    return\n  }\n}\n\nexport const DefaultTryAllTimeoutMs = 30 * secondMs\n\nexport async function tryAll(\n  arr: (any | (() => any))[],\n  onError = (err: Error) => console.error(err),\n  timeoutMs = DefaultTryAllTimeoutMs\n): Promise<void> {\n  for (const ea of arr) {\n    try {\n      await thenOrTimeout(ea, timeoutMs)\n    } catch (err) {\n      onError(toErr(err)!)\n    }\n  }\n  return\n}\n\nexport async function thenFinally<T>(\n  p: SyncOrAsync<T> | (() => SyncOrAsync<T>),\n  err_: (err: Error | any) => any = () => {\n    // no-op\n  },\n  finally_: (r: T | Error) => any = () => {\n    // no-op\n  }\n): Promise<T> {\n  let result: T\n  let caught = null\n  try {\n    result = await (isFunction(p) ? p() : p)\n  } catch (err) {\n    caught = toErr(err)\n    try {\n      await err_(err)\n    } catch {\n      // no-op\n    }\n  }\n  try {\n    await finally_(caught ?? result!)\n  } catch {\n    // no-op\n  }\n  if (caught != null) {\n    throw caught\n  } else {\n    return result!\n  }\n}\n\nexport async function thenNot(\n  p: Maybe<boolean> | MaybePromiseMaybe<boolean>,\n  defaultIfNull = true\n): Promise<boolean> {\n  if (p == null) return defaultIfNull\n  const r = await p\n  return r == null ? defaultIfNull : !isTrue(r)\n}\n\nexport async function thenMap2<T1, T2, T3>(\n  objP1: MaybeSyncOrAsync<T1>,\n  objP2: MaybeSyncOrAsync<T2>,\n  f: (t1: T1, t2: T2) => MaybeSyncOrAsync<T3>\n): PromiseMaybe<T3> {\n  const o1 = await objP1\n  if (o1 == null) return\n  const o2 = await objP2\n  if (o2 == null) return\n  return f(o1, o2)\n}\n\n/**\n * Safe calls for Optional promises, with default\n */\nexport async function thenMapOr<T1, T2, T3>(\n  objP: MaybeSyncOrAsync<T1>,\n  f: (t: T1) => MaybeSyncOrAsync<T2>,\n  ifUndefined: () => SyncOrAsync<T3>\n): Promise<T2 | T3> {\n  const obj = await objP\n  if (obj == null) return ifUndefined()\n  const result = await f(obj)\n  return result == null ? ifUndefined() : result\n}\n/**\n * Safe calls for Optional promises, with default\n */\nexport async function thenMap2Or<A1, A2, R1, R2>(\n  objP1: MaybeSyncOrAsync<A1>,\n  objP2: MaybeSyncOrAsync<A2>,\n  f: (t1: A1, t2: A2) => MaybeSyncOrAsync<R1>,\n  ifUndefined: () => SyncOrAsync<R2>\n): Promise<R1 | R2> {\n  const o1 = await objP1\n  if (o1 == null) return ifUndefined()\n  const o2 = await objP2\n  if (o2 == null) return ifUndefined()\n  const result = await f(o1, o2)\n  return result == null ? ifUndefined() : result\n}\n\n/**\n * Only call f if the promise resolves to truthy\n */\nexport async function thenAnd<T>(\n  predicatePromise: MaybeNull<Promise<true | any>>,\n  f: () => SyncOrAsync<T>\n): PromiseMaybe<T> {\n  return predicatePromise != null && isTrue(await predicatePromise)\n    ? f()\n    : undefined\n}\n\nexport async function thenOrElse<T>(\n  objP: Promise<MaybeNull<T>> | MaybeNull<T>,\n  f: () => SyncOrAsync<T>\n): Promise<T> {\n  return orElse(await objP, f)\n}\n\n/**\n * Just like `firstDefinedPromise` but applies a function to all defined\n * elements in `arr`.\n */\nexport async function first<T, R>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T, index: number) => SyncOrAsync<MaybeNull<R>>\n): PromiseMaybe<R> {\n  if (arr != null) {\n    let index = -1\n    for (const t of arr) {\n      index++\n      try {\n        if (t == null) continue\n        const r = await f(t, index)\n        if (r != null) {\n          return r\n        }\n      } catch {\n        // no-op\n      }\n    }\n  }\n  return undefined\n}\n\n/**\n * @see #firstDefinedLater\n */\nexport async function firstDefinedPromise<T, U = T>(\n  promiseThunks: Thunk<MaybeSyncOrAsync<T>>[],\n  filter: (t: T) => SyncOrAsync<Maybe<U>> = identity as any\n): PromiseMaybe<U> {\n  for (const ea of promiseThunks) {\n    const o = await ea()\n    if (o != null) {\n      const result = await filter(o)\n      if (result != null) {\n        return result\n      }\n    }\n  }\n  return\n}\n\nexport async function firstResolvedDefinedPromise<T>(\n  promiseThunks: Thunk<MaybeSyncOrAsync<T>>[],\n  onError: (err: Error) => void\n): PromiseMaybe<T> {\n  for (const t of promiseThunks) {\n    try {\n      const result = await t()\n      if (result != null) {\n        return result\n      }\n    } catch (err) {\n      onError(toErr(err)!)\n    }\n  }\n  return\n}\n\nexport async function firstTruePromise<T>(\n  predicate: (t: T) => Maybe<boolean> | PromiseMaybe<boolean>,\n  ...promiseThunks: (() => MaybeSyncOrAsync<T>)[]\n): PromiseMaybe<T> {\n  for (const thunk of promiseThunks) {\n    try {\n      const ea = await thunk()\n      if (ea != null && (await predicate(ea)) === true) {\n        return ea\n      }\n    } catch (_) {\n      //\n    }\n  }\n  return\n}\n\n/**\n * @return `arr` sorted by the tuples in f. elements that `f` returns undefined\n * will be removed from the returned array.\n * @see https://en.wikipedia.org/wiki/Schwartzian_transform\n */\nexport async function sortByAsync<T, V extends Primitive | Primitive[]>({\n  name,\n  arr,\n  f\n}: {\n  name: string\n  arr: Maybe<MaybeSyncOrAsync<Maybe<T>[]>>\n  f: (t: T) => PromiseMaybe<V>\n}): Promise<T[]> {\n  const unsorted: [V, T][] = await thenCollectParallel({ name, arr, f })\n  return sortBy(unsorted, ea => ea[0]).map(ea => ea[1])\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mapNotEmpty } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, mapFinite, round, sigFigs } from \"../../fe/Number\"\nimport {\n  Obj,\n  compactValues,\n  fromEntries,\n  mapCompactObj,\n  omit\n} from \"../../fe/Object\"\nimport { opt } from \"../../fe/Opt\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { Thunk, tot } from \"../../fe/Thunk\"\nimport { toErr } from \"../../fe/toErr\"\nimport { CountingSet } from \"../CountingSet\"\nimport { Elapsed } from \"../Elapsed\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Average, AverageStats } from \"../math/Average\"\nimport { EndableRanks } from \"./Endable\"\nimport { EndableWrapper } from \"./EndableWrapper\"\nimport { setUnrefTimeout } from \"./Timers\"\n\nconst MinMs = 15\n\n// by undocumented convention, names are\n// ${section}.${filename}.${function?}?:${context?}\n\nfunction normalizeName(name: string) {\n  return name.split(\":\")[0].trim()\n}\n\nexport class PromiseTimer {\n  static readonly instance = lazy(() => {\n    const pt = new PromiseTimer()\n    new EndableWrapper(\n      \"PromiseTimer\",\n      () => {\n        const logger = mkLogger(\"async.PromiseTimer\")\n        mapCompactObj(pt.report(), ea => logger.info(\"timings:\", ea))\n        mapNotEmpty(pt.errorCounts(), err =>\n          logger.warn(\"error counts:\", fromEntries(err))\n        )\n      },\n      EndableRanks.stats\n    )\n    ee().on(\"timing\", (name: string, elapsedMs: number) =>\n      pt.push(name, elapsedMs)\n    )\n    // no need to clear stats except in tests:\n    if (isTest) ee().on(\"clearCache\", () => pt.clear())\n    return pt\n  })\n  private readonly errors = new CountingSet<string>()\n  private readonly times = new Map<string, Average>()\n\n  clear() {\n    this.errors.clear()\n    this.times.clear()\n  }\n\n  async time<T>(\n    desc: string,\n    p: Promise<T> | (() => SyncOrAsync<T>),\n    post?: (result: T | Error, elapsed: number) => void\n  ): Promise<T> {\n    const start = Date.now()\n    const expectedTime = clamp(\n      10 * secondMs,\n      minuteMs,\n      Math.round(this.times.get(desc)?.p98 ?? 0)\n    )\n    const slowTimer = setUnrefTimeout(\n      () =>\n        mkLogger(\"time(\" + desc + \")\").warn(\n          \"unsettled for \" + (Date.now() - start) + \"ms\"\n        ),\n      expectedTime\n    )\n\n    try {\n      const result = await tot(p)\n      const elapsed = Date.now() - start\n      post?.(result, elapsed)\n      this.push(desc, elapsed)\n      return result\n    } catch (err) {\n      this.errors.incr(desc)\n      post?.(toErr(err)!, Date.now() - start)\n      throw err\n    } finally {\n      clearTimeout(slowTimer)\n    }\n  }\n\n  get entriesBySumDesc() {\n    return sortBy([...this.times.entries()], ([, v]) => -v.sum)\n  }\n\n  stats(namePrefix: string) {\n    const arr = this.entriesBySumDesc.filter(([k]) => k.startsWith(namePrefix))\n    const merged = arr.reduce(\n      (agg, ea) => Average.merge(ea[1], agg),\n      new Average()\n    )\n    const stats = arr.map(\n      ([name, avg]) => [name, avg.stats()] as [string, AverageStats]\n    )\n    return fromEntries([[\"merged\", merged.stats()], ...stats])\n  }\n\n  mkElapsed(l: Logger) {\n    return new Elapsed(l, (s, ts) => this.push(s, ts))\n  }\n\n  push(name: string, elapsedMs: number) {\n    if (elapsedMs > MinMs) {\n      getOrSet(this.times, normalizeName(name), () => new Average()).push(\n        elapsedMs\n      )\n    }\n  }\n\n  weightedAvg(name: string): Maybe<number> {\n    return opt(this.times.get(normalizeName(name)))\n      .map(avg => avg.weightedSampleAvg)\n      .get()\n  }\n\n  errorCounts() {\n    return this.errors.top(10)\n  }\n\n  callCounts(): { [name: string]: number } {\n    return [...this.times.entries()].reduce(\n      (o, [k, v]) => ({ ...o, [k]: v.n }),\n      {}\n    )\n  }\n\n  weightedAvgs(): { [name: string]: number } {\n    return compactValues(\n      [...this.times.entries()].reduce(\n        (o, [k, v]) => ({ ...o, [k]: mapFinite(v.weightedSampleAvg, round) }),\n        {}\n      )\n    ) as any\n  }\n\n  toJSON() {\n    return this.entriesBySumDesc.reduce(\n      (o, [k, v]) => ({\n        ...o,\n        [k]: v.toJSON()\n      }),\n      {}\n    )\n  }\n\n  report(): { [name: string]: Obj } {\n    // Sort by most time first:\n    return this.entriesBySumDesc.reduce(\n      (o, [k, v]) => ({\n        ...o,\n        [k]: {\n          sumSec: sigFigs(v.sum / secondMs, 3),\n          ...omit(v.stats(), \"sum\")\n        }\n      }),\n      {}\n    )\n  }\n}\n\nexport function mkElapsed(name: string) {\n  return PromiseTimer.instance().mkElapsed(mkLogger(name))\n}\n\nexport function time<T>(\n  name: string,\n  p: Promise<T> | (() => SyncOrAsync<T>),\n  post?: (result: T | Error, elapsed: number) => void\n): Promise<T> {\n  return PromiseTimer.instance().time(name, p, post)\n}\n\nexport function timeSync<T>(name: string, t: Thunk<T>): T {\n  const start = Date.now()\n  const result = t()\n  pushTime(name, Date.now() - start)\n  return result\n}\n\nexport function pushTime(name: string, elapsedMs: number) {\n  PromiseTimer.instance().push(name, elapsedMs)\n}\n\nexport function timeStats(namePrefix: string) {\n  return PromiseTimer.instance().stats(namePrefix)\n}\n\nexport function timedLazy<T>(\n  name: string,\n  thunk: () => SyncOrAsync<T>,\n  ttlMs?: number\n) {\n  return lazy(async () => time(name, thunk), ttlMs)\n}\n","import events from \"events\"\nimport { compact, count, filterInPlace, isEmpty, remove } from \"../../fe/Array\"\nimport { Later } from \"../../fe/Later\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { Comparable } from \"../../fe/Primitive\"\nimport { Thunk, tot } from \"../../fe/Thunk\"\nimport { toS } from \"../../fe/toS\"\nimport { BoundedList } from \"../BoundedList\"\nimport { TypedEventEmitter } from \"../event/TypedEventEmitter\"\nimport { Average } from \"../math/Average\"\nimport { maxCpus } from \"../work/MaxCpus\"\nimport { Deferred } from \"./Deferred\"\n\nexport type NamedObject = Record<string, any> & { name: string }\n\nexport function toName(o: string | NamedObject) {\n  return (o as any)?.name ?? toS(o)\n}\n\nexport interface PromisesEvents {\n  vacancy: () => void\n  drain: () => void\n}\n\n/**\n * Aggregate promises efficiently\n *\n * Note that `N` is either a descriptive name for the promise, or can be a data\n * payload associated to the promise.\n */\nexport class Promises {\n  readonly ee = new events.EventEmitter() as TypedEventEmitter<PromisesEvents>\n\n  #maxConcurrency: Maybe<Thunk<Maybe<number>>>\n  lastWorkTs = 0\n  settleMsAvg = new Average()\n\n  #settledCount = 0\n  readonly #running: Deferred<any>[] = []\n  readonly #pending: {\n    d: Deferred<any>\n    l: Later<any>\n  }[] = []\n\n  readonly lastPushedNames = new BoundedList<string>(16)\n\n  constructor(\n    readonly name: string,\n    maxConcurrency?: Thunk<Maybe<number>>\n  ) {\n    this.#maxConcurrency = maxConcurrency\n  }\n\n  get maxConcurrency(): number {\n    return Math.floor(\n      clamp(1, maxCpus(), this.#maxConcurrency?.() ?? maxCpus())\n    )\n  }\n\n  end() {\n    this.#pending.length = 0\n    return this.awaitAll()\n  }\n\n  vacuum() {\n    filterInPlace(this.#running, ea => ea.isPending)\n  }\n\n  private get running() {\n    this.vacuum()\n    return this.#running\n  }\n\n  /**\n   * @return the total number of promises that have settled\n   */\n  get settledCount() {\n    return this.#settledCount\n  }\n\n  stats() {\n    return {\n      maxConcurrency: this.maxConcurrency,\n      lastPushMsAgo: Date.now() - this.lastWorkTs,\n      freeSlots: this.freeSlots(),\n      unsettledCount: this.unsettledCount(),\n      runningNames: this.#running.map(ea => ea.name),\n      pendingNames: this.#pending.map(ea => ea.d.name),\n      totalWorkCount: this.#settledCount\n    }\n  }\n\n  #enqueue<T>({\n    name,\n    l,\n    payload,\n    serialId\n  }: {\n    name: string\n    l: Later<T>\n    payload?: any\n    serialId?: Comparable\n  }) {\n    const d = new Deferred<T>(name, { payload, serialId })\n    this.#pending.push({ d, l })\n    return d\n  }\n\n  /**\n   * Start the given promise once concurrency is below\n   */\n  enqueue<T>({\n    name,\n    l,\n    payload,\n    serialId\n  }: {\n    name: string\n    l: Later<T>\n    payload?: any\n    serialId?: Comparable\n  }): Deferred<T> {\n    const d = this.#enqueue({ name, l, payload, serialId })\n    this.laterPop()\n    return d\n  }\n\n  enqueueAll<T>(name: string, laters: Later<T>[]): Promise<T[]> {\n    const p = laters.map(l => this.#enqueue({ name, l }).promise)\n    this.laterPop()\n    return Promise.all(p)\n  }\n\n  /**\n   * Run f() after all prior-enqueued promises with the same name have resolved.\n   */\n  serial<T>(name: string, f: () => Promise<T>): Promise<T> {\n    return this.enqueue({ name, l: f, serialId: name })\n  }\n\n  /**\n   * Immediately run the given promise\n   */\n  push<T>(\n    name: string,\n    promiseOrLater: Promise<T> | Later<T>,\n    payload?: any\n  ): Promise<T> {\n    return this.#pushDeferred(\n      new Deferred<T>(name, { payload }),\n      promiseOrLater\n    ).promise\n  }\n\n  #pushDeferred<T>(d: Deferred<T>, promiseOrLater: Promise<T> | Later<T>) {\n    const start = Date.now()\n    this.lastWorkTs = start\n\n    void d.observe(tot(promiseOrLater)).finally(() => {\n      this.#settledCount++\n      remove(this.#running, d)\n      this.settleMsAvg.push(Date.now() - start)\n      this.laterPop()\n    })\n    this.lastPushedNames.push(d.name)\n    this.#running.push(d)\n    return d\n  }\n\n  /**\n   * If there are any free slots and pending work, this may enqueue pending\n   * work.\n   */\n  laterPop() {\n    setImmediate(() => this.maybePopPendingWork())\n  }\n\n  // this doesn't need a mutex (like oneAtATime) because it's not async:\n  maybePopPendingWork() {\n    this.vacuum()\n    const maxJobsToStart = this.maxConcurrency - this.#running.length\n    if (maxJobsToStart === 0) {\n      return\n    }\n    // vacancy AND drain TESTS MUST BE DONE IN THIS ORDER:\n    if (isEmpty(this.#pending) && maxJobsToStart > 0) {\n      // listeners may add pending work, so this should be first:\n      this.ee.emit(\"vacancy\")\n    }\n    // If we're still empty after emitting vacancy, we're drained:\n    if (this.isIdle()) {\n      this.ee.emit(\"drain\")\n    }\n    const jobsToStart = Math.min(this.#pending.length, maxJobsToStart)\n    const runningSerialIds = compact(this.#running.map(ea => ea.serialId))\n    const blockedBySerialId = []\n    for (let i = 0; i < jobsToStart; i++) {\n      const pending = this.#pending.shift()!\n      if (pending == null) break // < shouldn't happen, but it's a backstop for Later Me to hit.\n      if (\n        pending.d.serialId != null &&\n        runningSerialIds.includes(pending.d.serialId)\n      ) {\n        // Nope, shove it to the back of the queue.\n        blockedBySerialId.push(pending)\n        // But keep going: other pending tasks may be eligible to run now!\n      } else {\n        if (pending.d.serialId != null) {\n          // Don't push another of these!\n          runningSerialIds.push(pending.d.serialId)\n        }\n        void this.#pushDeferred(pending.d, pending.l)\n      }\n    }\n    this.#pending.push(...blockedBySerialId)\n  }\n\n  isTaskRunning(taskName: string) {\n    return this.#running.some(ea => ea.name === taskName)\n  }\n\n  /**\n   * If you don't care about the returned promise: only run f() if all prior\n   * with the same name have finished, and return no-op otherwise\n   */\n  maybeRun<T>(name: string, f: () => Promise<T>): Maybe<Promise<T>> {\n    return this.freeSlots() > 0 && !this.isTaskRunning(name)\n      ? this.push(name, f)\n      : undefined\n  }\n\n  runningCount() {\n    return count(this.#running, ea => ea.isPending)\n  }\n\n  /**\n   * @return the count of both currently-running *and* enqueued jobs.\n   */\n  unsettledCount() {\n    // We don't want to muck with _arr state, so use this._arr directly:\n    return this.runningCount() + this.#pending.length\n  }\n\n  /**\n   * @return true if there are jobs that are running or enqueued.\n   */\n  hasPending() {\n    return this.#pending.length > 0 || this.running.length > 0\n  }\n\n  isIdle() {\n    return !this.hasPending()\n  }\n\n  freeSlots() {\n    return clamp(\n      0,\n      this.maxConcurrency,\n      this.maxConcurrency - this.unsettledCount()\n    )\n  }\n\n  isFull() {\n    return this.freeSlots() === 0\n  }\n\n  pendingNames(): string[] {\n    return [\n      ...this.#pending.map(ea => ea.d.name),\n      ...this.running.map(ea => ea.name)\n    ]\n  }\n\n  get deferreds() {\n    return [...this.running, ...this.#pending.map(ea => ea.d)]\n  }\n\n  pendingWithName(name: string) {\n    return this.deferreds.filter(ea => ea.name === name)\n  }\n\n  payloadsWithName(name: string) {\n    return this.pendingWithName(name)\n      .filter(ea => ea.payload != null)\n      .map(ea => ea.payload!)\n  }\n\n  get pendingPromises() {\n    return this.deferreds.map(ea => ea.promise)\n  }\n\n  /**\n   * @return a promise that will be resolved when all previously pushed and\n   * enqueued Promises are resolved. Rejections are swallowed.\n   * @see Promise.allSettled\n   */\n  async awaitSettled() {\n    await Promise.allSettled(this.pendingPromises)\n  }\n\n  /**\n   * @return a promise that will be resolved when all previously pushed and\n   * enqueued Promises are resolved, or any promises are rejected.\n   * @see Promise.all\n   */\n  async awaitAll() {\n    await Promise.all(this.pendingPromises)\n  }\n\n  async awaitAllByName(name: string) {\n    await Promise.all(\n      this.deferreds.filter(ea => ea.name === name).map(ea => ea.promise)\n    )\n  }\n}\n\n/**\n * Run the given thunk never more than once concurrently. Invocations while\n * prior runs were invoked will return after prior runs have completed but will\n * be no-ops.\n */\nexport function maybeRun<T>(\n  name: string,\n  l: Later<T>\n): () => Maybe<Promise<T>> {\n  const p = new Promises(name)\n  return () => p.maybeRun(name, l)\n}\n\nexport async function withBoundedConcurrency<T>({\n  name,\n  laters,\n  maxConcurrent\n}: {\n  name: string\n  laters: Later<T>[]\n  maxConcurrent?: number\n}): Promise<T[]> {\n  // SITS: NOTE: if we share the same Promises instance, and a code block within\n  // withBoundedConcurrency calls withBoundedConcurrency, we'll starve.\n  return new Promises(\n    name,\n    map(maxConcurrent, ea => () => ea)\n  ).enqueueAll(name, laters)\n}\n\nexport const PermissivePromises: Pick<Promises, \"enqueueAll\"> = {\n  enqueueAll<T>(_name: string, laters: Later<T>[]): Promise<T[]> {\n    return Promise.all(laters.map(f => f()))\n  }\n}\n","import { Later } from \"../../fe/Later\"\n\nexport class SerialLaterQueue<T> {\n  #prior: Promise<any> = Promise.resolve()\n\n  enqueue(later: Later<T>): Promise<T> {\n    return (this.#prior = this.#prior.catch().then(later))\n  }\n}\n","import { asPromise } from \"../../fe/AsPromise\"\nimport { delay } from \"../../fe/Delay\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\n\nexport const timeoutStacks: string[][] = []\n\n// TODO: convert consumers to fe/thenOrTimeout?\nexport async function thenOrTimeout<T>(\n  p: T | (() => T | Promise<T>),\n  timeoutMs: number,\n  onTimeout?: () => any,\n  onSuccess?: (t: T) => any | Promise<any>\n): PromiseMaybe<T> {\n  if (!gt0(timeoutMs)) {\n    const result = await asPromise(p)\n    await onSuccess?.(result)\n    return result\n  }\n  let _resolved = false\n  let timedOut = false\n  let result: Maybe<T>\n  await Promise.race([\n    asPromise(p).then(ea => {\n      if (!timedOut) {\n        result = ea\n        _resolved = true\n        return ea\n      } else {\n        return\n      }\n    }),\n    // This delay must be unref'ed so as to not prevent node from exitting:\n    delay(timeoutMs).then(() => {\n      if (!_resolved) {\n        timedOut = true\n      }\n    })\n  ])\n  if (_resolved) {\n    await onSuccess?.(result!)\n  } else {\n    await onTimeout?.()\n  }\n  return result\n}\n","// no-dependency onTimeout, to be set to ../work/WorkTimeout.onTimeout by\n// SyncService to avoid dependency loops\n\nlet timeoutHandler = (_soft?: boolean) => null\n\nexport function setTimeoutHandler(f: typeof timeoutHandler) {\n  timeoutHandler = f\n}\n\nexport function onTimeout({ soft }: { soft?: boolean } = {}) {\n  timeoutHandler(soft)\n}\n","import { setInterval, setTimeout } from \"timers\"\n\nexport function setUnrefTimeout(\n  callback: (...ea: any[]) => void,\n  ms: number,\n  ...args: any[]\n): NodeJS.Timeout {\n  return setTimeout(callback, Math.round(ms), ...args).unref()\n}\n\nexport function setUnrefInterval(\n  callback: (...ea: any[]) => void,\n  ms: number,\n  ...args: any[]\n): NodeJS.Timeout {\n  return setInterval(callback, Math.round(ms), ...args).unref()\n}\n","import { isTrue } from \"../../fe/Boolean\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { onTimeout } from \"./TimeoutHandler\"\n\nexport type UntilOpts<T> = {\n  timeoutMs?: number\n  intervalMs?: number\n  acceptable?: (t: Maybe<T>) => boolean\n  timeoutResult?: T\n  unref?: boolean\n}\n\n/**\n * Run `f()` until the result either passes `acceptable`, or is not `null`,\n * `undefined` or `false`.\n */\nexport async function until<T>(\n  f: () => MaybeSyncOrAsync<T>,\n  { timeoutMs, intervalMs, acceptable, timeoutResult, unref }: UntilOpts<T> = {}\n): PromiseMaybe<T> {\n  let sentSoftTimeout = false\n  const timeoutAt = timeoutMs == null ? undefined : timeoutMs + Date.now()\n  let delayCount = 1\n  while (timeoutAt == null || Date.now() < timeoutAt) {\n    const start = Date.now()\n    const result = await f()\n    const accept =\n      result != null &&\n      (isFunction(acceptable) ? acceptable(result) : (result as any) !== false)\n\n    if (accept) {\n      return result\n    } else {\n      const elapsedMs = Date.now() - start\n      if (timeoutMs != null && elapsedMs > timeoutMs / 2 && !sentSoftTimeout) {\n        sentSoftTimeout = true\n        onTimeout({ soft: true })\n      }\n      const delayMs =\n        intervalMs ??\n        clamp(\n          10 * delayCount, // < wait longer for subsequent delays.\n          ShortCommandTimeoutMs,\n          (timeoutMs ?? minuteMs) / 5\n        )\n      await delay(delayMs, unref)\n      delayCount++\n    }\n  }\n  if (!sentSoftTimeout) onTimeout({ soft: false })\n  return timeoutResult\n}\n\n/**\n * Run the given thunk until the promise is resolved to true, or the timeout\n * passes.\n * @return false on timeout, or true when the the given Later returned true.\n */\nexport async function untilTrue(\n  f: () => MaybeSyncOrAsync<boolean>,\n  opts: Omit<UntilOpts<boolean>, \"acceptable\" | \"timeoutResult\"> = {}\n): Promise<boolean> {\n  return until(f, {\n    ...opts,\n    acceptable: isTrue,\n    timeoutResult: false\n  }) as Promise<boolean>\n}\n","import child_process from \"child_process\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport {\n  compactValues,\n  entries,\n  filter,\n  fromEntries,\n  omit,\n  StringValued,\n  values\n} from \"../../fe/Object\"\nimport { partition } from \"../Array\"\nimport { env } from \"../env/Env\"\nimport {\n  ELECTRON_RUN_AS_NODE,\n  PS_IS_CHILD_PROCESS,\n  PS_IS_DOCKER\n} from \"../env/EnvKeys\"\nimport { caseInsensitiveEnv } from \"../env/GetEnv\"\nimport { ee } from \"../event/EventEmitter\"\nimport { childProcLocale } from \"../Locale\"\nimport { isLogged } from \"../log/LogFilter\"\nimport { mkLogger } from \"../Logger\"\nimport { nodeEnv } from \"../NodeEnv\"\nimport { mapEntries, sortedKeys } from \"../Object\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { isElectron, isPosix } from \"../platform/Platform\"\nimport {\n  allSettings,\n  getSettingByNameOrKey,\n  pathWithDefaults,\n  persistedSettings,\n  Settings,\n  transientSettings\n} from \"../settings/Settings\"\n\nconst SettingsKeys = lazy(() => new Set(values(Settings).map(ea => ea.key)))\n\nexport function psenv(): StringValued {\n  const set = SettingsKeys()\n  return sortedKeys(filter(env(), k => k === \"NODE_ENV\" || set.has(k)))\n}\n\nconst sensitiveEnvRE = lazy(() => {\n  try {\n    return new RegExp(Settings.sensitiveEnvRegExp.valueOrDefault, \"i\")\n  } catch (err) {\n    console.error(\n      `Invalid setting for \"sensitiveEnvRegExp\": ${err}. Using default value.`\n    )\n    return new RegExp(Settings.sensitiveEnvRegExp.defaultValue, \"i\")\n  }\n})\n\nlater(() => {\n  function unset() {\n    sensitiveEnvRE.unset()\n    sanitizedEnv.unset()\n  }\n  ee().on(\"clearCache\", unset)\n  ee().on(\"settingsChanged\", unset)\n  for (const ea of allSettings()) {\n    // allSettings because anything might need to be included in the child env!\n    ea.watchLater(unset)\n  }\n})\n\nconst RequiredPosixEnv = [\"HOME\", \"LANG\", \"USER\"]\nconst RequiredWindowsEnv = [\n  \"APPDATA\",\n  \"HOME\",\n  \"HOMEDRIVE\",\n  \"LOCALAPPDATA\",\n  \"SYSTEMDRIVE\",\n  \"SYSTEMROOT\",\n  \"TEMP\"\n]\n\nconst requiredEnv = lazy(() => {\n  const result = caseInsensitiveEnv().pick(\n    ...(isPosix ? RequiredPosixEnv : RequiredWindowsEnv)\n  )\n  // set PATH, and respect prior case:\n  const p = caseInsensitiveEnv().lookup(\"PATH\")\n  result[p?.key ?? \"PATH\"] = pathWithDefaults()\n  return result\n})\n\nexport const sanitizedEnv = lazy(() => {\n  const re = sensitiveEnvRE()\n  return mapEntries(process.env, (k, v) => (re.exec(k) == null ? v : undefined))\n})\n\nexport function childProcEnvSettings(forWorker: boolean) {\n  const result: StringValued = {\n    NODE_ENV: nodeEnv,\n    NO_COLOR: \"1\" // children shouldn't be rendering anything to the terminal\n  }\n  result[PS_IS_CHILD_PROCESS] = \"1\"\n\n  if (isDocker()) {\n    result[PS_IS_DOCKER] = \"1\"\n  }\n  if (isElectron) {\n    result[ELECTRON_RUN_AS_NODE] = \"1\"\n  }\n\n  for (const s of persistedSettings().filter(ea => ea.hasValue())) {\n    forWorker ? s.addToEnv(result) : s.addToEnvMaybe(result)\n  }\n  return result\n}\n\nexport type SpawnOptionsWithLocale = child_process.SpawnOptions & {\n  forceCLocale?: boolean\n  forThread?: boolean\n}\n\nexport function spawnOptions(\n  maybeOpts?: SpawnOptionsWithLocale\n): child_process.SpawnOptions {\n  const opts: SpawnOptionsWithLocale = maybeOpts ?? {}\n  return {\n    ...omit(opts, \"forceCLocale\"),\n    env: childEnv({\n      overrides: opts.env,\n      forceCLocale: opts.forceCLocale\n    }),\n    detached: false,\n    shell: false\n    // NOTE: don't use `windowsHide: true`, it doesn't work!\n  }\n}\n\nlet childEnvLogged = false\n\nexport function childEnv({\n  overrides,\n  forceCLocale = true,\n  forWorker = false\n}: {\n  overrides?: Maybe<StringValued>\n  forceCLocale?: boolean\n  forWorker?: boolean\n} = {}) {\n  const e: StringValued = compactValues({\n    // Include all (non-sensitive) env values, because things like `gio` need\n    // GNOME* and DBUS* variables set:\n    ...sanitizedEnv(),\n    ...requiredEnv(),\n    ...(forceCLocale ? childProcLocale() : {}),\n    ...childProcEnvSettings(forWorker),\n    ...(overrides ?? {}) // < env param wins\n  })!\n\n  // Don't let parent ENV set transients:\n  for (const s of transientSettings()) {\n    s.deleteFromEnv(e)\n  }\n\n  if (isLogged(\"debug\") && !childEnvLogged) {\n    childEnvLogged = true\n    const logger = mkLogger(\"child.ChildEnv\")\n    const arr = entries(e)\n    const [ps, nonPs] = partition(\n      arr,\n      ([k]) =>\n        k === \"TZ\" ||\n        k === \"NODE_ENV\" ||\n        k.startsWith(\"LC_\") ||\n        // we have some env that aren't settings (like PS_KEEP_LIBRARY):\n        k.startsWith(\"PS_\") ||\n        getSettingByNameOrKey(k) != null\n    )\n    logger.debug(\"PS env:\", fromEntries(ps))\n    logger.debug(\"non PS env:\", fromEntries(nonPs))\n  }\n\n  return sortedKeys(e)\n}\n","import child_process from \"child_process\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { secondMs } from \"../../fe/Date\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Latch } from \"../../fe/Latch\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt, gt0, isNumber } from \"../../fe/Number\"\nimport { omit, pick } from \"../../fe/Object\"\nimport { trimLastNewline } from \"../../fe/String\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { isSingleSpecTests } from \"../NodeEnv\"\nimport { Try } from \"../Object\"\nimport { waitForPidExit } from \"../Pid\"\nimport { Pids, addPid, killPid } from \"../Pids\"\nimport { niceable, renice } from \"../Renice\"\nimport { Deferred } from \"../async/Deferred\"\nimport { setUnrefTimeout } from \"../async/Timers\"\nimport { isIgnorableError } from \"../error/ErrorTypes\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { closeStreams, endStream } from \"../fs/Streams\"\nimport { isLogged } from \"../log/LogFilter\"\nimport { spawnOptions } from \"./ChildEnv\"\n\nconst logger = lazy(() => mkLogger(\"child.ChildProcess\"))\n\nfunction cp2log(cp: child_process.ChildProcess) {\n  return pick(\n    cp as any,\n    \"pid\",\n    \"killed\",\n    \"connected\",\n    \"exitCode\",\n    \"signalCode\",\n    \"spawnfile\",\n    \"spawnargs\"\n  )\n}\n\nexport async function endProcess(\n  cp: Maybe<child_process.ChildProcess>,\n  timeoutMs = 30 * secondMs\n): Promise<boolean> {\n  if (cp == null) return false\n  logger().debug(\"endProcess()\", cp2log(cp))\n\n  const pid = cp.pid\n\n  if (pid == null || pid <= 0) {\n    logger().warn(\"endProcess(): asked to end invalid pid\", cp2log(cp))\n    return false\n  }\n  if (pid === process.pid) {\n    logger().warn(\"endProcess(): asked to end MY pid\", cp2log(cp))\n    return false\n  }\n  if (pid === process.ppid) {\n    logger().warn(\"endProcess(): asked to end my parent pid\", cp2log(cp))\n    return false\n  }\n\n  closeStreams(cp)\n\n  {\n    // Send a SIGTERM\n    const killResult = cp.kill()\n    logger().debug(\"endProcess(\" + pid + \")\", {\n      killResult,\n      childGotSigterm: cp.killed\n    })\n    if (!killResult) {\n      await killPid(pid).catch(err => {\n        logger().warn(\"endProcess(): kill(\" + pid + \",false) failed: \" + err)\n      })\n    }\n  }\n\n  // We don't use messaging, but in case we do later:\n  // TODO: do we need to do this?\n  // if (cp.connected) Try(() => cp.disconnect())\n\n  // We can exit even if this child is still running:\n  Try(() => cp.unref())\n\n  // don't wait for cleanup if we're running tests:\n  if (isSingleSpecTests()) return true\n\n  if (await waitForPidExit(pid, timeoutMs)) {\n    logger().debug(\"endProcess(): exitted\", cp2log(cp))\n    return true\n  }\n\n  {\n    // OK, shite got real. time for kill -9.\n    void Pids.instance()?.onKill(pid)\n    const killResult = cp.kill(\"SIGKILL\")\n    logger().warn(\"endProcess(\" + pid + \") had to resort to SIGKILL\", {\n      killResult\n    })\n    if (!killResult) {\n      await killPid(pid, true).catch(err => {\n        logger().warn(\"endProcess(): kill(\" + pid + \",true) failed: \" + err)\n      })\n    }\n  }\n\n  // Give the OS some time to clean up:\n  return waitForPidExit(pid, 5000)\n}\n\nexport const ReniceAfterMs = lazy(() => 15 * secondMs)\nexport const AddPidAfterMs = lazy(() => 30 * secondMs)\n\n// NOTE: MUST NOT BE ASYNC\nfunction newProc(\n  cp: child_process.ChildProcess,\n  cmd: string,\n  args: ReadonlyArray<string>,\n  maxAgeMs = 0\n) {\n  const start = new Date()\n  // If we write the pidfile now and hold up processing, `cp.stderr` and\n  // `cp.stdout` event listeners will miss initial data, so we put this in a\n  // timeout for later.\n\n  // Note that THIS IS NOT UNREF'ed! We want pids to be cleaned up!\n\n  const timeouts: NodeJS.Timeout[] = []\n\n  // Renice after a second\n  if (niceable(cmd, args)) {\n    timeouts.push(\n      setUnrefTimeout(\n        () => {\n          if (gt0(cp.pid)) {\n            void renice(cp.pid)\n          }\n        },\n        ReniceAfterMs() // only track and renice processes that run for a while\n      )\n    )\n  }\n\n  // Force-end processes after maxAgeMs\n  if (gt(maxAgeMs, secondMs)) {\n    timeouts.push(\n      setUnrefTimeout(() => {\n        if (gt0(cp.pid)) {\n          void endProcess(cp)\n        }\n      }, maxAgeMs - 250)\n    )\n  }\n\n  // Track long-lived processes:\n  timeouts.push(\n    setUnrefTimeout(\n      () => {\n        if (gt0(cp.pid)) {\n          return addPid(\n            { pid: cp.pid, cmd, maxAgeMs, ppid: process.pid },\n            start\n          )\n        }\n        return\n      },\n      AddPidAfterMs() // only track and renice processes that run for a while\n    )\n  )\n  // This allows cp resources to be GC'ed:\n  cp.on(\"exit\", () => timeouts.forEach(clearTimeout))\n\n  return cp\n}\n\nexport function spawn(\n  command: string,\n  args: ReadonlyArray<string>,\n  maxAgeMs: number,\n  options?: child_process.SpawnOptions\n): child_process.ChildProcess {\n  const opts = spawnOptions(options)\n  logger().debug(\"spawn()\", { command, args, maxAgeMs })\n  return newProc(\n    child_process.spawn(command, args, opts),\n    command,\n    args,\n    maxAgeMs\n  )\n}\n\nexport type ExecFileOptions =\n  | child_process.ExecFileOptions\n  | child_process.ExecFileOptionsWithBufferEncoding\n  | child_process.ExecFileOptionsWithStringEncoding\n\nexport function execFile(\n  command: string,\n  args: ReadonlyArray<string>,\n  maxAgeMs?: number,\n  options?: ExecFileOptions\n): child_process.ChildProcess {\n  const opts = spawnOptions(options)\n  // Only log the opts (which are long: they include ENV!) if we're tracing:\n  if (isLogged(\"trace\", logger().context)) {\n    logger().debug(\"execFile()\", { command, args, maxAgeMs, opts })\n  } else {\n    logger().debug(\"execFile()\", { command, args, maxAgeMs })\n  }\n\n  return newProc(\n    child_process.execFile(command, args, opts),\n    command,\n    args,\n    maxAgeMs\n  )\n}\n\nexport type StdoutOpts = {\n  timeoutMs: number\n  quiet?: boolean\n  disconnect?: boolean\n  ignoreStderr?: boolean\n  ignoreExitCode?: boolean\n  isIgnorableError?: (err: any) => boolean\n} & child_process.ExecFileOptions\n\nexport type StdoutResult = {\n  result: string\n  pid?: number\n  code?: number\n  signal?: string\n}\n\nexport async function stdoutResult_(\n  cmd: string,\n  args: string[],\n  opts: StdoutOpts\n): Promise<StdoutResult> {\n  const quiet = opts.quiet ?? false\n  const ignoreStderr = opts.ignoreStderr ?? false\n  const ignoreExitCode = opts.ignoreExitCode ?? false\n  const proc: child_process.ChildProcess = execFile(\n    cmd,\n    args,\n    opts.timeoutMs,\n    omit(opts, \"timeout\", \"quiet\", \"ignoreStderr\", \"ignoreExitCode\")\n  )\n\n  if (opts.disconnect === true) {\n    try {\n      // disconnect may not exist!\n      proc.disconnect?.()\n    } catch {\n      //\n    }\n    return { result: \"\", pid: proc.pid! }\n  }\n\n  const pid = proc.pid\n  // don't panic if we don't have a pid yet: this happens on Windows!\n\n  const name = stringify({ pid, cmd, args })\n  const stdoutChunks: (Buffer | string)[] = []\n  const stderrChonks: (Buffer | string)[] = []\n  const errors: Error[] = []\n  const exitCode = new Deferred<number>(name)\n\n  proc.on(\"error\", err => errors.push(err))\n  proc.on(\"exit\", e => {\n    if (isNumber(e) && exitCode.isPending) void exitCode.resolve(e)\n  })\n  proc.on(\"close\", e => {\n    if (isNumber(e) && exitCode.isPending) void exitCode.resolve(e)\n  })\n\n  void endStream(proc.stdin)\n\n  const stdoutEnded = new Latch()\n\n  if (proc.stdout == null) {\n    void stdoutEnded.resolve()\n  } else {\n    proc.stdout.on(\"error\", err => errors.push(err))\n    proc.stdout.on(\"data\", data => stdoutChunks.push(data))\n    proc.stdout.on(\"end\", () => stdoutEnded.resolve())\n  }\n\n  const stderrEnded = new Latch()\n\n  if (proc.stderr == null || ignoreStderr) {\n    void stderrEnded.resolve()\n  } else {\n    proc.stderr?.on(\"error\", err => errors.push(err))\n    proc.stderr?.on(\"data\", err => stderrChonks.push(err))\n    proc.stderr?.on(\"end\", () => stderrEnded.resolve())\n  }\n\n  // Wait for the process to finish...\n  await thenOrTimeoutError(exitCode.promise, opts.timeoutMs)\n\n  // Wait for chonks (which may show up AFTER the process exits). It shouldn't\n  // take long to flush these streams.\n  await thenOrTimeoutError(stdoutEnded.promise, 2 * secondMs)\n  await thenOrTimeoutError(stderrEnded.promise, 2 * secondMs)\n\n  // Add stderr chunks to errors:\n  const stderr = stderrChonks.join(\"\")\n  if (notBlank(stderr)) errors.push(new Error(stderr))\n  if (!quiet && isNotEmpty(errors)) {\n    logger().warn(name + \" resulted in errors:\", errors)\n  }\n\n  // Any errors that we can't ignore?\n  const isIgnorableFunc = opts.isIgnorableError ?? isIgnorableError\n  const causes = errors.filter(ea => isIgnorableFunc(ea) !== true)\n  if (causes.length > 0) {\n    throw causes.length === 1\n      ? causes[0]\n      : new WrappedError(\"Failed to run \" + cmd + \" \" + args.join(\" \"), {\n          causes\n        })\n  }\n\n  // Was the exit code sad?\n  if (!ignoreExitCode && exitCode.value !== 0) {\n    throw new Error(name + \": exit code \" + exitCode.value)\n  }\n\n  const result = stdoutChunks.join(\"\")\n\n  return {\n    result,\n    pid,\n    code: exitCode.value\n  }\n}\n\n/**\n * @return just the stdout stream\n * @see stdoutResult_ if you need more information about the command.\n */\nexport async function stdout_(\n  cmd: string,\n  args: string[],\n  opts: StdoutOpts\n): Promise<string> {\n  const result = await stdoutResult_(cmd, args, opts)\n  return logger().tap({\n    level: \"trace\",\n    msg: \"stdout_()\",\n    result: trimLastNewline(result.result),\n    meta: { cmd, args, opts, result }\n  })\n}\n","import { pidExists, Rate } from \"batch-cluster\"\nimport { ChildProcess } from \"child_process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { denull, map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt, gt0, lt } from \"../../fe/Number\"\nimport { Obj } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport {\n  addEndable,\n  Endable,\n  EndableRank,\n  EndableRanks,\n  ending\n} from \"../async/Endable\"\nimport { Promises } from \"../async/Promises\"\nimport { isRecentMs } from \"../date/Date\"\nimport { FatalErrorFlag } from \"../error/ErrorFlags\"\nimport { onError } from \"../error/OnError\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { onDataChunked } from \"../fs/StreamChunker\"\nimport { mkLogger } from \"../Logger\"\nimport { waitForPidExit } from \"../Pid\"\nimport { Settings } from \"../settings/Settings\"\nimport { endProcess, spawn } from \"./ChildProcess\"\n\nexport interface WatchedChildOpts {\n  name: string\n  childFactory: () => ChildProcess | Promise<ChildProcess>\n  dataSep?: string | RegExp\n  maxErrorsPerMinute?: number\n  endableRank?: EndableRank\n  exitCommand?: string\n  restartOnExit?: boolean // should only be false when we test sync\n  endTimeoutMs?: number | null\n}\n\nexport interface WatchedChildListener {\n  onStdout(data: string): void\n\n  /**\n   * @return true if the error should be propagated to onError\n   */\n  onStderr?(data: string): boolean\n\n  /**\n   * @return true if the error requires the child process to be restarted\n   */\n  onError(source: string, error: any): boolean\n\n  onRestart?(): void\n\n  /**\n   * Is it OK to start if we can't shut down a prior child process?\n   */\n  ignoreStopErrors: boolean // should be true for non-PS daemons\n}\n\n// so basic\nexport function mkBasicWatchedChild(\n  args: {\n    cmd: string\n    args: string[]\n  } & Partial<WatchedChildListener>\n) {\n  const wc: WatchedChild = new WatchedChild({\n    name: compact([args.cmd, ...args.args]).join(\" \"),\n    childFactory: () => {\n      // Restart every 30 minutes to prevent memory leaks:\n      return spawn(args.cmd, args.args, 30 * minuteMs)\n    },\n    onStdout: () => undefined,\n    onError: () => true,\n    ignoreStopErrors: true,\n    ...args\n  })\n  return wc\n}\n\n/**\n * BatchCluster is for ephemeral clusters of stateless processes.\n *\n * To watch a single, long-lived process, though, we need different management\n * heuristics than what batch-cluster gives us:\n *\n * 1. Start the child on construction\n * 2. Delegate all stdout, and errors to the provided listener\n * 3. Restart the child if it crashes/ends and this process hasn't ended\n * 4. The caller may need to specifically stop(), and then arbitrarily later, start()\n * 5. Notify the listener if the error rate is too high, or restarts are\n *    \"flapping\" (more than N restarts per some period of where the child spins\n *    up and immediately fails). It's up to the listener to then do something\n *    with that state information (including potentially end the current\n *    process).\n *\n * This class is used for `gio`, `findmnt`, `diskutil`, as well as the `sync`\n * and `web` PhotoStructure daemons.\n */\nexport class WatchedChild implements Endable {\n  readonly name: string\n  readonly startTs = Date.now()\n  private _stopped = false\n  private readonly logger = lazy(() =>\n    mkLogger(\"WatchedChild(\" + compact([this.name, this.pid]).join(\":\") + \")\")\n  )\n  readonly startRate = new Rate()\n  readonly mutex = new Promises(\"child.WatchedChild.mutex\", () => 1)\n  readonly opts: Required<WatchedChildOpts> & WatchedChildListener\n  #ended = false\n  private lastError?: WrappedError\n  private cp?: ChildProcess\n\n  constructor(opts: WatchedChildOpts & WatchedChildListener) {\n    this.name = opts.name\n    this.opts = {\n      dataSep: \"\\n\",\n      maxErrorsPerMinute: Settings.fatalErrorRatePerMinute.valueOrDefault,\n      endableRank: EndableRanks.first,\n      exitCommand: \"\",\n      restartOnExit: true,\n      endTimeoutMs: null,\n      ...opts\n    }\n    // Let the web or db service take some time to close, vacuum, and back up the db.\n    addEndable(this.opts.endableRank, this)\n    void this.#restart()\n  }\n\n  get endTimeoutMs() {\n    return denull(this.opts.endTimeoutMs)\n  }\n\n  get stopped() {\n    return this._stopped\n  }\n\n  get ended() {\n    return this.#ended\n  }\n\n  async end() {\n    this.#ended = true\n    return this.#stop()\n  }\n\n  get proc(): Maybe<ChildProcess> {\n    return this.cp\n  }\n\n  get pid(): Maybe<number> {\n    return map(this.cp, ea => ea.pid)\n  }\n\n  running(): boolean {\n    return pidExists(this.pid)\n  }\n\n  notRunning(): boolean {\n    return !this.running()\n  }\n\n  /**\n   * Shuts down the current process. The process won't start again until restart() is called.\n   * @return false if stop failed\n   */\n  async stop(): Promise<boolean> {\n    this.logger().info(\"stop()\")\n    this._stopped = true\n    return this.mutex.serial(\"\", () => {\n      this._stopped = true\n      return this.#stop()\n    })\n  }\n\n  async #stop(): Promise<boolean> {\n    this.logger().info(\"#stop()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    const cp = this.cp\n    this.cp = undefined\n    if (cp == null) return true // nothing to stop\n    return this.#stopChild(cp)\n  }\n\n  async #stopChild(cp: ChildProcess) {\n    // Send the exit command, if it isn't blank, and stdin is still open:\n    if (\n      gt0(cp.pid) &&\n      notBlank(this.opts.exitCommand) &&\n      true === cp.stdin?.writable\n    ) {\n      try {\n        cp.stdin.write(this.opts.exitCommand + \"\\n\")\n        // Given the child a chance to exit gracefully before we call\n        // endProcess:\n        await waitForPidExit(cp.pid, (this.endTimeoutMs ?? secondMs) / 2)\n      } catch (error) {\n        this.logger().warn(\"stopChild: error writing to stdin\", { error })\n      }\n    }\n    return endProcess(cp, this.endTimeoutMs)\n  }\n\n  readonly onError = (src: string, cause: Buffer | string | Error | Obj) => {\n    const error = new WrappedError(src, {\n      cause\n    })\n    const ignorable = error.ignorable !== false\n    this.logger().log(ignorable ? \"warn\" : \"error\", \"onError()\", error)\n    if (this.#ended || ignorable) {\n      return\n    }\n\n    this.lastError = error\n    onError(error)\n\n    if (error.fatal === true) {\n      void this.end()\n      return\n    }\n\n    const requiresRestart = this.opts.onError(src, error)\n    if (requiresRestart) {\n      this.logger().warn(\"onError requested restart\", { src, error })\n      void this.#restart()\n    }\n    return\n  }\n\n  isErrorRateExceeded() {\n    return this.logger().tap({\n      msg: \"isErrorRateExceeded()\",\n      result: gt(this.startRate.eventsPerMinute, this.opts.maxErrorsPerMinute),\n      meta: {\n        startRatePerMin: this.startRate.eventsPerMinute,\n        maxErrorsPerMin: this.opts.maxErrorsPerMinute\n      }\n    })\n  }\n\n  async restart(force = false) {\n    this.logger().info(\"restart()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    if (this.#ended || ending()) return false\n    if (\n      !force &&\n      lt(\n        this.startRate.msSinceLastEvent,\n        Settings.minTimeBetweenServiceRestartsMs.valueOrDefault\n      )\n    ) {\n      this.logger().info(\"restart(): last restart was too recent. Ignoring.\", {\n        msSinceLastEvent: this.startRate.msSinceLastEvent,\n        minTimeBetweenServiceRestartsMs:\n          Settings.minTimeBetweenServiceRestartsMs.valueOrDefault\n      })\n      return\n    }\n    return this.mutex.serial(\"\", async () => {\n      await this.#stop()\n      this._stopped = false\n      return this.#start()\n    })\n  }\n\n  async start() {\n    this.logger().info(\"start()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    return this.mutex.serial(\"\", async () => {\n      this._stopped = false\n      return this.#start()\n    })\n  }\n\n  /**\n   * Only called by onError/onExit, and pauses restarts if error rate is too high.\n   * @return false if errors\n   */\n  async #restart() {\n    this.logger().info(\"#restart()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    return this.mutex.maybeRun(\"\", async () => {\n      await this.#stop()\n      if (this._stopped || this.#ended) return false\n      if (this.isErrorRateExceeded()) {\n        this.logger().warn(\"Cannot restart, error/restart rate is too high.\", {\n          errorsPerMinute: this.startRate.eventsPerMinute,\n          msSinceLastStart: this.startRate.msSinceLastEvent\n        })\n        // If we're just spinning up, die.\n        if (isRecentMs(this.startTs, Settings.probationMs.valueOrDefault)) {\n          onError(\n            \"Can't restart \" +\n              this.name +\n              \", failure rate is too high.\" +\n              FatalErrorFlag,\n            this.lastError\n          )\n        }\n        return false\n      }\n      this.logger().info(\"#restart()\", {\n        currentPid: this.pid,\n        startRate: this.startRate,\n        maxErrorsPerMinute: this.opts.maxErrorsPerMinute\n      })\n\n      // eslint-disable-next-line no-unused-expressions\n      this.opts.onRestart?.()\n\n      return this.#start()\n    })\n  }\n\n  // CAREFUL: this must be protected by this.mutex!\n\n  /**\n   * @return true if new pid was started\n   */\n  async #start(): Promise<boolean> {\n    this.logger().info(\"#start()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    if (this._stopped || this.#ended) return false\n    if (this.running()) return false\n    this.startRate.onEvent()\n    const cp = (this.cp = await this.opts.childFactory())\n\n    // Pick up the new PID:\n    this.logger.unset()\n    this.logger().info(\"#start(): spawned pid \" + this.pid)\n\n    const ctx = \"cp(\" + cp.pid + \")\"\n    ;[\n      { o: cp, desc: \"\" },\n      { o: cp.stdin, desc: \".stdin\" },\n      { o: cp.stdout, desc: \".stdout\" },\n      { o: cp.stderr, desc: \".stderr\" }\n    ].forEach(({ o, desc }) => {\n      map(o, ea =>\n        ea.on(\"error\", err => this.onError(ctx + desc + \".on(error)\", err))\n      )\n    })\n\n    void map(this.cp.stdout, sout =>\n      onDataChunked(sout, this.opts.dataSep, ea => {\n        this.logger().trace(\"onDataChunked()\", ea)\n        this.opts.onStdout(ea)\n      })\n    )\n\n    void map(this.cp.stderr, serr =>\n      serr.on(\"data\", s => {\n        if (toS(s).includes(\"Error: Cannot find module\")) {\n          onError(\"Failed to start \" + this.name + FatalErrorFlag, new Error(s))\n        }\n        if (this.opts.onStderr?.(s) === true) {\n          void this.onError(ctx + \".stderr.on(data)\", s)\n        }\n      })\n    )\n\n    this.cp.on(\"exit\", async (code: number | null, signal: string | null) => {\n      this.logger().info(\"onExit\", {\n        code,\n        signal,\n        stopped: this._stopped,\n        ended: this.#ended\n      })\n      if (ending()) {\n        return\n      } else if (this.opts.restartOnExit) {\n        await this.#restart()\n        this.logger().info(\"onExit(): finished setting up new child\", {\n          pid: this.pid\n        })\n      } else {\n        this.logger().info(\n          \"onExit(): this.opts.restartOnExit is false. Ending.\",\n          { pid: this.pid }\n        )\n        void this.end()\n      }\n    })\n    return true\n  }\n}\n","import * as path_posix from \"node:path/posix\"\nimport { SimpleFileOrString } from \"../core/fs/SimpleFile\"\nimport { examples } from \"./ExamplesDir\"\nimport { TestLibraryDirPrefix } from \"./TestLibraryDirPrefix\"\nimport { originalsDir } from \"./dir/LibraryDir\"\nimport { BaseFile } from \"./fs/BaseFile\"\nimport { stripCopySuffixFromName } from \"./fs/FuzzyNames\"\nimport { PosixFile } from \"./fs/PosixFile\"\n\n/**\n * Directories end with a \"/\"\n */\n\nexport function ciSafePath(nativePath: SimpleFileOrString): string {\n  const pf = PosixFile.for(nativePath)\n  const f = pf.sibling(stableBasename(pf))\n\n  if (f.isSelfOrDescendantOf(examples())) {\n    return path_posix.join(\"$examples\", f.posixPathFrom(examples()))\n  }\n\n  const origDir = originalsDir()\n\n  if (f.isSelfOrDescendantOf(origDir)) {\n    return path_posix.join(\"$library\", f.posixPathFrom(origDir!))\n  }\n\n  const anc = pf.findAncestor(ea => ea.base.startsWith(TestLibraryDirPrefix))\n  if (anc != null) {\n    return path_posix.join(\"$library\", f.posixPathFrom(anc))\n  }\n  // well crap, we don't know what to do with this path:\n  return pf.baseWithGrandparent\n}\n\nexport function stableBasename(f: BaseFile): string {\n  return stripCopySuffixFromName(f, { aggressive: false }).normalize() + f.ext\n}\n","import { Command, program } from \"commander\"\nimport { argv, exit } from \"process\"\nimport { version } from \"../../core/Version\"\nimport { mapNotBlankOr } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Obj } from \"../../fe/Object\"\nimport { ServiceName } from \"../../fe/ServiceNames\"\nimport { EditionName } from \"../EditionName\"\nimport { isTest } from \"../NodeEnv\"\nimport { setServiceName } from \"../SetServiceName\"\nimport { joinLines } from \"../fs/CRLF\"\nimport { isMainElectron } from \"../platform/Platform\"\nimport { CliDesc, addFooter } from \"./CliConstants\"\nimport { cliWrap } from \"./CliWrap\"\nimport { DescriptionFooter } from \"./DescriptionFooter\"\nimport { verifyUidGid } from \"./VerifyUidGid\"\n\nexport interface CommandPlugin {\n  beforeParse(cmd: Command): Command\n  afterParse?(opts: Obj): void\n}\n\nexport class CLI {\n  private readonly plugins: CommandPlugin[] = []\n\n  /**\n   * @param args if non-empty, passed to `Command.arguments()`\n   */\n  constructor(\n    readonly serviceName: keyof typeof CliDesc & ServiceName,\n    readonly args?: string,\n    readonly additionalDescription?: string\n  ) {\n    setServiceName(serviceName)\n    verifyUidGid()\n  }\n\n  add(...plugins: CommandPlugin[]) {\n    this.plugins.push(...plugins)\n    return this\n  }\n\n  parse() {\n    let cmd = addFooter(\n      program.description(\n        cliWrap(\n          CliDesc[this.serviceName] +\n            mapNotBlankOr(\n              this.additionalDescription,\n              ea => \"\\n\\n\" + ea,\n              () => \"\"\n            )\n        ).join(\"\\n\")\n      ) as Command\n    )\n\n    map(this.args, ea => {\n      cmd = cmd.arguments(ea)\n    })\n\n    for (const ea of this.plugins) {\n      cmd = ea.beforeParse(cmd)\n    }\n\n    cmd.option(\n      \"-V, --version\",\n      \"Output version information (spoiler: it's \" +\n        (isTest ? \"1.2.3-test\" : version) +\n        \")\"\n    )\n\n    cmd.on(\"option:version\", () => {\n      console.log(\n        joinLines(\n          ...cliWrap(EditionName() + \" v\" + version + \"\\n\" + DescriptionFooter)\n        )\n      )\n      exit(0)\n    })\n\n    cmd.parse(argv, { from: isMainElectron ? \"electron\" : \"node\" })\n\n    const opts = cmd.opts()\n\n    for (const ea of this.plugins) {\n      ea.afterParse?.(opts)\n    }\n\n    return cmd\n  }\n}\n","import { Command } from \"commander\"\nimport { joinLines } from \"../fs/CRLF\"\nimport { cliWrap } from \"./CliWrap\"\nimport { DescriptionFooter } from \"./DescriptionFooter\"\n\nexport const CliDesc = {\n  main: \"PhotoStructure's main process manager. Runs and manages web and sync services.\",\n  desktop: \"PhotoStructure for Desktops. Manages web and sync services.\",\n  info: \"Configuration, file metadata and import diagnostics tool.\",\n  list: \"List paths in a PhotoStructure Library.\",\n  logcat: \"Chronologically sort and pretty-print PhotoStructure logfiles.\",\n  logtail:\n    \"View the log messages of currently-running PhotoStructure processes as they are emitted. (Like `tail -f`).\",\n  web: \"PhotoStructure's web service. Automatically started by main.\",\n  sync: \"PhotoStructure's directory synchronization service. Automatically started by main.\"\n  // worker doesn't have a CLI.\n}\n\nexport function addFooter(c: Command): Command {\n  return c.on(\"--help\", () => {\n    console.log(joinLines(...cliWrap(DescriptionFooter)))\n  })\n}\n","import { env, stdout } from \"process\"\nimport { toInt } from \"../../fe/Number\"\nimport { wrap } from \"../../fe/String\"\n\nexport function cliWrap(\n  s: string,\n  opts?: { maxLineLen?: number; prefix?: string }\n) {\n  const maxLineLen =\n    opts?.maxLineLen ?? toInt(env.maxLineLen) ?? stdout.columns ?? 75\n  return wrap(s, { maxLineLen, prefix: opts?.prefix ?? \"\" })\n}\n","import { Command } from \"commander\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { map } from \"../../fe/Maybe\"\nimport { Obj } from \"../../fe/Object\"\nimport { isEnvTrue } from \"../env/GetEnv\"\nimport { CommandPlugin } from \"./CLI\"\n\nexport const ColorArgs: CommandPlugin = {\n  beforeParse: (cmd: Command) =>\n    cmd\n      .option(\n        \"--color\",\n        \"Enable ASCII terminal colors (this overrides NO_COLOR, if set)\"\n      )\n      .option(\n        \"--no-color\",\n        \"Disable ASCII terminal colors (see https://no-color.org/)\"\n      ),\n\n  afterParse: (opts: Obj) => {\n    // these don't need to be assigned to .envValue, but it means info\n    // --child-env will emit these changes (and avoid confusion)\n    if (isEnvTrue(\"NO_COLOR\")) Settings.logColor.envValue = false\n    // but let the env to be overridden by an arg:\n    map(opts.color, ea => (Settings.logColor.envValue = ea))\n  }\n}\n","export const DescriptionFooter = [\n  \"\",\n  `Copyright © 2017-${new Date().getFullYear()}, PhotoStructure Inc.`,\n  \"\",\n  \"BY USING THIS SOFTWARE, YOU ARE ACCEPTING ALL THE TERMS AND CONDITIONS OF THIS LICENSE: https://photostructure.com/eula/\",\n  \"\",\n  \"User guide: https://photostructure.com/user-guide/\",\n  \"\",\n  \"Questions, bug reports, and feature requests: https://forum.photostructure.com/\",\n  \"\"\n].join(\"\\n\")\n","import process from \"process\"\nimport { blank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\n\nexport interface DaemonOptions {\n  daemon?: boolean\n  pidfile?: string\n  stop?: boolean\n}\n\nexport function isDaemon(opts?: DaemonOptions) {\n  return (\n    isTrue(process.env.__is_daemon) ||\n    isTrue(opts?.daemon) ||\n    !blank(opts?.pidfile)\n  )\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toGt0 } from \"../../fe/Number\"\nimport { groupids, userids } from \"../UserInfo\"\nimport { env } from \"../env/Env\"\nimport { isDocker } from \"../platform/isDocker\"\n\nfunction whyMismatched(\n  desc: string,\n  envKey: string,\n  actual: number[]\n): Maybe<string> {\n  const val = toGt0(env()[envKey])\n  return val != null && !actual.includes(val)\n    ? `WARNING: ${desc} is running as ${actual} but $${envKey}=${val}`\n    : undefined\n}\n\nexport function whyUidGidMismatched(): Maybe<string[]> {\n  const arr = compactBlanks([\n    whyMismatched(\"user id\", \"PUID\", userids()),\n    whyMismatched(\"group id\", \"PGID\", groupids())\n  ])\n  return arr.length === 0 ? undefined : arr\n}\n\nexport const verifyUidGid = lazy(() => {\n  if (isDocker()) {\n    map(whyUidGidMismatched(), why =>\n      console.log(\n        [\n          \"\",\n          ...why,\n          \"This may result in file permission issues!\",\n          // Angle-bracket-surrounded URLs may be included in the URL (!!) by UnRAID. BOO\n          \"See https://forum.photostructure.com/t/1597/2 for details.\",\n          \"\"\n        ].join(\"\\n\")\n      )\n    )\n  }\n})\n","import { Command } from \"commander\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport {\n  writeLibrarySettings_,\n  writeSystemSettings_\n} from \"../../core/settings/SettingsIO\"\nimport { blank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { Obj } from \"../../fe/Object\"\nimport { osConfigDirs } from \"../dir/ConfigDir\"\nimport { CommandPlugin } from \"./CLI\"\n\nexport const WriteSettingsArg: CommandPlugin = {\n  beforeParse: (cmd: Command) =>\n    cmd.option(\"--write-settings\", \"Write out system and library settings\"),\n\n  afterParse: async (opts: Obj) => {\n    if (isTrue(opts.writeSettings)) {\n      const systemSettingsFile = await writeSystemSettings_()\n      if (systemSettingsFile == null) {\n        console.info(\n          \"--write-settings: Failed write system settings: no system configuration directory was found.\",\n          { checkedDirectories: osConfigDirs() }\n        )\n      } else {\n        console.info(\n          `--write-settings: Wrote system settings to ${systemSettingsFile}`\n        )\n      }\n\n      if (blank(Settings.libraryDir.valueOrDefault)) {\n        console.error(\n          \"--write-settings: Failed to write library settings: no PS_LIBRARY_DIR is set.\"\n        )\n      } else {\n        const librarySettingsFile = await writeLibrarySettings_()\n        console.info(\n          `--write-settings: Wrote library settings to ${librarySettingsFile}`\n        )\n      }\n    }\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, pushUniq } from \"../../fe/Array\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte0 } from \"../../fe/Number\"\nimport { leastBy } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { capitalize } from \"../String\"\nimport {\n  lab2rgbhex,\n  rgb2lab,\n  rgbhex2Lab,\n  rgbhex2Labhash,\n  toLabhash,\n  unlabhash\n} from \"./Colorspace\"\nimport { CrayonColors, CrayonSupplements } from \"./CrayonColors\"\nimport { DarkWikipediaColors } from \"./DarkWikipediaColors\"\nimport { ciede2000_delta_e } from \"./DeltaE\"\nimport { Greys } from \"./Greys\"\nimport { LightWikipediaColors } from \"./LightWikipediaColors\"\nimport { ModeBits } from \"./ModeBits\"\nimport { normalizeRgbHex } from \"./RGB\"\nimport { Triplet } from \"./Triplet\"\n\nconst logger = lazy(() => mkLogger(\"color.ColorNames\"))\n\n/* \nhttps://en.wikipedia.org/wiki/List_of_colors:_A%E2%80%93F\nhttps://en.wikipedia.org/wiki/List_of_colors:_G%E2%80%93M\nhttps://en.wikipedia.org/wiki/List_of_colors:_N%E2%80%93Z\n\nhttps://en.wikipedia.org/wiki/List_of_colors_by_shade\n\nTry not to include any color names that are names of people, organizations, or\nplaces. Flower names are fine.\n\n*/\n\nexport const ColorNames = lazy<LabNamedRgbHexColor[]>(() =>\n  compact(\n    [\n      ...CrayonColors,\n      ...CrayonSupplements,\n      ...DarkWikipediaColors,\n      ...LightWikipediaColors,\n      ...Greys\n    ].map(colorToTuple)\n  )\n)\n\nexport type NamedRgbHexColor = {\n  name: string\n  rgb: string\n}\n\nexport type LabNamedRgbHexColor = NamedRgbHexColor & {\n  lab: Triplet\n\n  /**\n   * Best-matching labhash for this RGB color\n   */\n  labhash: number\n\n  /**\n   * All the labhashes that map to this color\n   */\n  closeLabhashes: number[]\n\n  closeRgb: string[]\n}\n\nexport function bestRgbTripletName<T extends LabNamedRgbHexColor>(\n  rgb: Triplet,\n  colors = ColorNames() as T[]\n) {\n  return bestLabName(rgb2lab(rgb), colors)\n}\n\nexport function colorToTuple(\n  color: NamedRgbHexColor\n): Maybe<LabNamedRgbHexColor> {\n  const rgb = normalizeRgbHex(color.rgb)\n  if (rgb == null) {\n    logger().warn(`skipping invalid entry (bad rgb): ${color.rgb}`, color)\n    return\n  }\n  const lab = rgbhex2Lab(rgb)\n  if (lab == null) {\n    logger().warn(\n      `skipping invalid entry (failed to convert to L*a*b): ${rgb}`,\n      color\n    )\n    return\n  }\n\n  const labhash = toLabhash(lab, ModeBits)\n  return {\n    ...color,\n    rgb,\n    lab,\n    labhash,\n    // This is set later by labhashToColor()\n    closeLabhashes: [labhash],\n    closeRgb: [rgb],\n    name: capitalize(color.name)\n  }\n}\n\nexport function bestRgbName(rgb: string): Maybe<LabNamedRgbHexColor> {\n  return bestLabhashName(rgbhex2Labhash(rgb))\n}\n\nexport function bestLabName(\n  lab: Maybe<Triplet>,\n  colors?: LabNamedRgbHexColor[]\n): Maybe<LabNamedRgbHexColor> {\n  return lab == null\n    ? undefined\n    : leastBy(colors ?? ColorNames(), ea => ciede2000_delta_e(ea.lab, lab))\n}\n\nconst labhashToColor = new Map<number, LabNamedRgbHexColor>()\n\nexport function bestLabhashName(\n  labhash: Maybe<number>\n): Maybe<LabNamedRgbHexColor> {\n  return gte0(labhash)\n    ? getOrSet(labhashToColor, labhash, () => {\n        const exact = ColorNames().find(ea => ea.labhash === labhash)\n        if (exact != null) return exact\n        const lab = unlabhash(labhash)\n        const result = bestLabName(lab)\n        if (lab != null && result != null) {\n          pushUniq(result.closeLabhashes, labhash)\n          pushUniq(result.closeRgb, lab2rgbhex(lab))\n        }\n        return result\n      })\n    : undefined\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { stepRange } from \"../../fe/Array\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, round } from \"../../fe/Number\"\nimport { leastBy } from \"../Array\"\nimport { BitZip } from \"../math/Bits\"\nimport { matXvec, vecXvec } from \"../math/Matrix\"\nimport { ciede2000_delta_e } from \"./DeltaE\"\nimport { ModeBits } from \"./ModeBits\"\nimport { clampRGB, rgbTriplet2hex, rgbhex2triplet } from \"./RGB\"\nimport { Triplet } from \"./Triplet\"\n\n// From http://www.brucelindbloom.com\nconst srgb2xyz = [\n  [0.4124564, 0.3575761, 0.1804375],\n  [0.2126729, 0.7151522, 0.072175],\n  [0.0193339, 0.119192, 0.9503041]\n]\nconst xyz2srgb = [\n  [3.2404542, -1.5371385, -0.4985314],\n  [-0.969266, 1.8760108, 0.041556],\n  [0.0556434, -0.2040259, 1.0572252]\n]\n\nexport function rgbhex2Lab(rgbHex: string): Maybe<Triplet> {\n  return map(rgbhex2triplet(rgbHex), rgb2lab)\n}\n\nexport function rgbhex2Labhash(\n  rgbHex: string,\n  bitDepth: number = ModeBits\n): Maybe<number> {\n  return map(rgbhex2triplet(rgbHex), ea => toLabhash(rgb2lab(ea), bitDepth))\n}\n\nexport function lab2rgbhex(lab: Triplet): string {\n  return rgbTriplet2hex(lab2rgb(lab))\n}\n\n/**\n * Convert from flattened RGB triplets to [[CIELAB triplet]]\n */\nexport function rgb2labTriplets(rgb: Buffer): Triplet[] {\n  return stepRange(0, rgb.length, 3).map(i =>\n    rgb2lab([rgb[i], rgb[i + 1], rgb[i + 2]])\n  )\n}\n\n/**\n * Convert from flattened RGB triplets to [[L* values], [a* values], [b* values]]\n */\nexport function rgb2labArray(rgb: Buffer): [number[], number[], number[]] {\n  const l = []\n  const a = []\n  const b = []\n  for (let i = 0; i < rgb.length; i += 3) {\n    const lab = rgb2lab([rgb[i], rgb[i + 1], rgb[i + 2]])\n    l.push(lab[0])\n    a.push(lab[1])\n    b.push(lab[2])\n  }\n  return [l, a, b]\n}\n\n/**\n * where rgb values are [0,255]\n */\nexport function rgb2lab(rgb: Triplet): Triplet {\n  return xyz2lab(rgb2xyz(rgb))\n}\n\nexport function lab2rgb(lab: Triplet): Triplet {\n  return clampRGB(xyz2rgb(lab2xyz(lab)))\n}\n\nexport function clampLab(lab: Triplet): Triplet {\n  return 1 < 2\n    ? [\n        clamp(0, 100, lab[0]),\n        clamp(-100, 100, lab[1]),\n        // -108 seems to be wrong, but RGB(0,0,255) ->\n        // L*a*b*(32.297,79.188,-107.860) according to\n        // http://www.easyrgb.com/en/convert.php#inputFORM and\n        // http://colormine.org/convert/rgb-to-lab\n        clamp(-108, 100, lab[2])\n      ]\n    : (LabBitZip().clampValue(lab) as Triplet)\n}\n\nexport function rgb2xyz(rgb: Triplet): Triplet {\n  // See http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n  const srgb = clampRGB(rgb)\n    .map(ea => ea / 255)\n    .map(ea =>\n      ea > 0.04045 ? Math.pow((ea + 0.055) / 1.055, 2.4) : ea / 12.92\n    )\n  return matXvec(srgb2xyz, srgb) as any // because TS doesn't support tuples well\n}\n\n// https://en.wikipedia.org/wiki/Lab_color_space#CIELAB in D65\n\nconst RefWhite = {\n  X: 0.95047,\n  Y: 1,\n  Z: 1.08883\n}\n\n// http://www.brucelindbloom.com/index.html?Eqn_XYZ_to_Lab.html\n\nconst epsilon = 216 / 24389 // 0.00885\nconst kappa = 24389 / 27 // 903.3\n\nexport function xyz2lab(xyz: Triplet): Triplet {\n  const [fx, fy, fz] = vecXvec(xyz, [\n    1 / RefWhite.X,\n    1 / RefWhite.Y,\n    1 / RefWhite.Z\n  ]).map(t => (t > epsilon ? Math.pow(t, 1 / 3) : (kappa * t + 16) / 116))\n\n  return clampLab([116 * fy - 16, 500 * (fx - fy), 200 * (fy - fz)])\n}\n\nexport function lab2xyz(lab: Triplet): Triplet {\n  // the [0], [1], [2] allows lab to be a Buffer.slice:\n  const [l, a, b] = clampLab(lab)\n  const fy = (l + 16) / 116\n  const fx = a / 500 + fy\n  const fz = fy - b / 200\n\n  const fx3 = fx * fx * fx\n  const fz3 = fz * fz * fz\n\n  const xr = fx3 > epsilon ? fx3 : (116.0 * fx - 16.0) / kappa\n  const yr = l > 8 ? Math.pow(fy, 3.0) : l / kappa\n  const zr = fz3 > epsilon ? fz3 : (116.0 * fz - 16.0) / kappa\n\n  return [xr * RefWhite.X, yr * RefWhite.Y, zr * RefWhite.Z]\n}\n\nexport function xyz2rgb(xyz: Triplet): Triplet {\n  return matXvec(xyz2srgb, xyz).map(v => {\n    const sign = v < 0 ? -1 : 1\n    const l = v * sign\n    return round(\n      255 *\n        sign *\n        (l <= 0.0031308 ? 12.92 * l : 1.055 * Math.pow(l, 1 / 2.4) - 0.055)\n    )\n  }) as Triplet\n}\n\nexport const LabBitZip = lazy(\n  () =>\n    new BitZip([\n      { min: 0, max: 100 }, // L\n      // see findBestLabhashDims:\n      { min: -79, max: 90 },\n      { min: -102, max: 89 }\n    ])\n)\n\nexport function toLabhash(lab: Triplet, bitDepth: number = ModeBits): number {\n  return LabBitZip().zip(lab, bitDepth)\n}\n\nconst labhash2lab = new Map<number, Triplet>()\n\nexport function unlabhash(\n  hash: number,\n  bitDepth: number = ModeBits\n): Maybe<Triplet> {\n  return 1 > 2 && bitDepth === ModeBits\n    ? getOrSet(labhash2lab, hash, () => _unlabhash(hash, bitDepth))\n    : _unlabhash(hash, bitDepth)\n}\n\nfunction _unlabhash(hash: number, bitDepth: number = ModeBits): Maybe<Triplet> {\n  return LabBitZip().unzip(hash, bitDepth) as Triplet\n}\n\nexport const minLabhash = lazy(() => LabBitZip().zipMin(ModeBits))\nexport const maxLabhash = lazy(() => LabBitZip().zipMax(ModeBits))\n\nexport function closestLab(haystack: Triplet[], needle: Triplet) {\n  return leastBy(haystack, ea => ciede2000_delta_e(ea, needle))\n}\n\nexport function rgb2hsv(rgb: Triplet): Triplet {\n  const [r, g, b] = clampRGB(rgb)\n\n  const max = Math.max(r, g, b)\n  const delta = max - Math.min(r, g, b)\n\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n      ? 2 + (b - r) / delta\n      : 4 + (r - g) / delta\n    : 0\n\n  return [\n    60 * (hh < 0 ? hh + 6 : hh),\n    max ? (delta / max) * 100 : 0,\n    (max / 255) * 100\n  ]\n}\n\nexport function rgbhex2hsl(rgbhex: string): Triplet {\n  return rgb2hsl(rgbhex2triplet(rgbhex)!)\n}\n\nexport function rgb2hsl(rgb: Triplet): Triplet {\n  return hsv2hsl(rgb2hsv(rgb))\n}\n\nexport function hsl2rgb(hsl: Triplet): Triplet {\n  return hsv2rgb(hsl2hsv(hsl))\n}\n\nexport function hsv2hsl(hsv: Triplet): Triplet {\n  // https://github.com/omgovich/colord/blob/3f859e03b0ca622eb15480f611371a0f15c9427f/src/colorModels/hsl.ts#L44\n\n  const [h, s, v] = hsv\n\n  const hh = ((200 - s) * v) / 100\n\n  return [\n    h,\n    hh > 0 && hh < 200\n      ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100\n      : 0,\n    hh / 2\n  ]\n}\n\nexport function hsl2hsv(hsl: Triplet): Triplet {\n  const [h, s, l] = hsl\n  const s0 = (s * (l < 50 ? l : 100 - l)) / 100\n  return [h, s0 > 0 ? ((2 * s0) / (l + s0)) * 100 : 0, l + s0]\n}\n\nexport function hsv2rgb(hsv: Triplet) {\n  const h = (hsv[0] / 360) * 6\n  const s = hsv[1] / 100\n  const v = hsv[2] / 100\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    mod6 = hh % 6\n\n  return clampRGB([\n    [v, c, b, b, d, v][mod6] * 255,\n    [d, v, v, c, b, b][mod6] * 255,\n    [b, b, d, v, v, c][mod6] * 255\n  ])\n}\n\nif (require.main === module) {\n  console.log(toLabhash([0, 0, 0]))\n}\n","export const CrayonColors = [\n  // { name: \"Almond\", rgb: \"#EED9C4\" }, // unneeded\n  // { name: \"Antique Brass\", rgb: \"#C88A65\" },\n  // { name: \"Apricot\", rgb: \"#FDD5B1\" }, // unused?\n  { name: \"Aquamarine\", rgb: \"#95E0E8\" },\n  { name: \"Asparagus\", rgb: \"#7BA05B\" },\n  // { name: \"Banana Mania\", rgb: \"#FBE7B2\" },\n  // { name: \"Beaver\", rgb: \"#926F5B\" }, // NO\n  // { name: \"Bittersweet\", rgb: \"#FE6F5E\" }, // NO\n  // { name: \"Black\", rgb: \"#000000\" }, // in Greys\n  // { name: \"Blue bell\", rgb: \"#9999CC\" },\n  { name: \"Blue-green\", rgb: \"#0095B7\" },\n  // { name: \"Bluetiful\", rgb: \"#3C69E7\" }, // I HATE FUN\n  { name: \"Royal blue\", rgb: \"#273BE2\" }, // replaces Bluetiful\n  { name: \"Blush\", rgb: \"#DB5079\" },\n  // { name: \"Brick red\", rgb: \"#C62D42\" }, // dupe of Maroon\n  { name: \"Brilliant rose\", rgb: \"#E667CE\" },\n  { name: \"Brown\", rgb: \"#AF593E\" },\n  // { name: \"Burnt orange\", rgb: \"#FF7034\" }, // dupe of Red-orange\n  { name: \"Burnt sienna\", rgb: \"#E97451\" },\n  { name: \"Burnt umber\", rgb: \"#805533\" },\n  { name: \"Cadet blue\", rgb: \"#A9B2C3\" },\n  { name: \"Canary\", rgb: \"#FFFF99\" },\n  // { name: \"Caribbean Green\", rgb: \"#00CC99\" }, // dupe of Shamrock\n  { name: \"Carmine\", rgb: \"#E62E6B\" },\n  { name: \"Carnation pink\", rgb: \"#FFA6C9\" },\n  { name: \"Celestial blue\", rgb: \"#7070CC\" },\n  { name: \"Cerise\", rgb: \"#DA3287\" },\n  { name: \"Cerulean blue\", rgb: \"#339ACC\" },\n  // { name: \"Cerulean\", rgb: \"#02A4D3\" },\n  // { name: \"Charcoal grey\", rgb: \"#736A62\" },\n  { name: \"Chestnut\", rgb: \"#B94E48\" },\n  { name: \"Cobalt blue\", rgb: \"#8C90C8\" },\n  { name: \"Copper\", rgb: \"#DA8A67\" },\n  { name: \"Cornflower\", rgb: \"#93CCEA\" },\n  { name: \"Cotton candy\", rgb: \"#FFB7D5\" },\n  // { name: \"Dandelion\", rgb: \"#FED85D\" }, // dupe of Goldenrod\n  // { name: \"Dark Venetian Red\", rgb: \"#B33B24\" }, // place name, see below\n  { name: \"Denim\", rgb: \"#1560BD\" },\n  // { name: \"Desert sand\", rgb: \"#EDC9AF\" }, // dupe of Peach\n  { name: \"Eggplant\", rgb: \"#614051\" },\n  // { name: \"English Vermilion\", rgb: \"#CC474B\" }, // see below\n  { name: \"Fern\", rgb: \"#63B76C\" },\n  // { name: \"Forest green\", rgb: \"#5FA777\" },\n  { name: \"Fuchsia\", rgb: \"#C154C1\" },\n  // { name: \"Fuzzy Wuzzy\", rgb: \"#87421F\" }, // LIKE I SAID, I HATE FUN\n  { name: \"Russet\", rgb: \"#87421F\" }, // replaces Fuzzy Wuzzy\n  // { name: \"Goldenrod\", rgb: \"#FCD667\" }, // dupe of Maize\n  // { name: \"Granny Smith Apple\", rgb: \"#9DE093\" }, // GRANNY H8R\n  // { name: \"Gray\", rgb: \"#8B8680\" }, // Handled by Greys\n  { name: \"Green\", rgb: \"#01A638\" },\n  { name: \"Green-yellow\", rgb: \"#F1E788\" },\n  // { name: \"Inchworm\", rgb: \"#AFE313\" },\n  { name: \"Indigo\", rgb: \"#4F69C6\" },\n  // { name: \"Jazzberry Jam\", rgb: \"#A50B5E\" },\n  { name: \"Jungle green\", rgb: \"#29AB87\" },\n  // { name: \"Lemon Yellow\", rgb: \"#FFFF9F\" }, // dupe of Canary\n  // { name: \"Light blue\", rgb: \"#8FD8D8\" }, // dupe of Aquamarine\n  // { name: \"Light chrome green\", rgb: \"#BEE64B\" }, // dupe of Pear\n  // { name: \"Light Venetian Red\", rgb: \"#E6735C\" }, // place name, see below\n  // { name: \"Macaroni and Cheese\", rgb: \"#FFB97B\" }, NO FUN\n  // { name: \"Madder Lake\", rgb: \"#CC3336\" }, // dupe of Mahogany\n  { name: \"Magenta\", rgb: \"#F653A6\" },\n  // { name: \"Mahogany\", rgb: \"#CA3435\" }, // dupe of brick red\n  { name: \"Maize\", rgb: \"#F2C649\" },\n  // { name: \"Manatee\", rgb: \"#8D90A1\" },\n  // { name: \"Mango Tango\", rgb: \"#E77200\" }, NO FUN\n  { name: \"Maroon\", rgb: \"#C32148\" },\n  // { name: \"Mauvelous\", rgb: \"#F091A9\" }, I SAID, NO FUN\n  // { name: \"Maximum blue-green\", rgb: \"#30BFBF\" },\n  // { name: \"Maximum blue-purple\", rgb: \"#ACACE6\" }, // renamed to \"vivid\"\n  // { name: \"Maximum blue\", rgb: \"#47ABCC\" },\n  // { name: \"Maximum green\", rgb: \"#5E8C31\" },\n  // { name: \"Maximum green yellow\", rgb: \"#D9E650\" },\n  // // { name: \"Maximum purple\", rgb: \"#733380\" },\n  // { name: \"Maximum red-purple\", rgb: \"#A63A79\" },\n  // { name: \"Maximum red\", rgb: \"#D92121\" },\n  // { name: \"Maximum yellow-red\", rgb: \"#F2BA49\" },\n  // { name: \"Maximum yellow\", rgb: \"#FAFA37\" },\n  { name: \"Medium chrome green\", rgb: \"#6CA67C\" },\n  // { name: \"Medium rose\", rgb: \"#D96CBE\" }, // dupe of Brillian rose (!!)\n  { name: \"Medium violet\", rgb: \"#8F47B3\" },\n  { name: \"Melon\", rgb: \"#FEBAAD\" },\n  { name: \"Middle blue-green\", rgb: \"#8DD9CC\" },\n  { name: \"Middle blue-purple\", rgb: \"#8B72BE\" },\n  // { name: \"Middle Blue\", rgb: \"#7ED4E6\" }, // dupe of sky blue\n  // { name: \"Middle green\", rgb: \"#4D8C57\" },\n  { name: \"Middle green-yellow\", rgb: \"#ACBF60\" },\n  { name: \"Middle purple\", rgb: \"#D982B5\" },\n  // { name: \"Middle red-purple\", rgb: \"#A55353\" }, // NOT RED PURPLE!\n  // { name: \"Middle red\", rgb: \"#E58E73\" }, // duplicates copper\n  { name: \"Middle yellow-red\", rgb: \"#ECAC76\" },\n  // { name: \"Middle yellow\", rgb: \"#FFEB00\" }, //  dupe of Yellow\n  { name: \"Midnight blue\", rgb: \"#003366\" },\n  // { name: \"Mountain meadow\", rgb: \"#1AB385\" }, // dupe of jungle green\n  { name: \"Mulberry\", rgb: \"#C8509B\" },\n  { name: \"Navy blue\", rgb: \"#0066CC\" },\n  { name: \"Olive green\", rgb: \"#B5B35C\" },\n  // { name: \"Orange-Red\", rgb: \"#FF5349\" }, // dupe of Sunset Orange\n  { name: \"Orange\", rgb: \"#FF8833\" },\n  // { name: \"Orange-Yellow\", rgb: \"#F8D568\" }, // dupe of Goldenrod\n  { name: \"Orchid\", rgb: \"#E29CD2\" },\n  // { name: \"Outer space\", rgb: \"#2D383A\" }, // dupe of 80% black\n  // { name: \"Pacific blue\", rgb: \"#009DC4\" },\n  { name: \"Peach\", rgb: \"#FFCBA4\" },\n  { name: \"Periwinkle\", rgb: \"#C3CDE6\" },\n  // { name: \"Permanent Geranium Lake\", rgb: \"#E12C2C\" }, // replaced by Alizarin crimson\n  // { name: \"Piggy pink\", rgb: \"#FDD7E4\" },\n  { name: \"Pine green\", rgb: \"#01796F\" },\n  { name: \"Pink flamingo\", rgb: \"#FC74FD\" },\n  // { name: \"Pink sherbert\", rgb: \"#F7A38E\" }, // dupe of Salmon\n  { name: \"Plum\", rgb: \"#8E3179\" },\n  // { name: \"Purple heart\", rgb: \"#652DC1\" },\n  // { name: \"Purple Mountains' Majesty\", rgb: \"#D6AEDD\" },\n  // { name: \"Raw sienna\", rgb: \"#D27D46\" }, // this is too light for \"raw sienna\".\n  { name: \"Raw umber\", rgb: \"#665233\" },\n  // { name: \"Razzmatazz\", rgb: \"#E30B5C\" }, // NO FUN\n  { name: \"Red-orange\", rgb: \"#FF681F\" },\n  { name: \"Red\", rgb: \"#ED0A3F\" },\n  // { name: \"Robin's egg blue\", rgb: \"#00CCCC\" },\n  // { name: \"Royal purple\", rgb: \"#6B3FA0\" }, // dupe of Rebecca purple\n  { name: \"Salmon\", rgb: \"#FF91A4\" },\n  // { name: \"Scarlet\", rgb: \"#FD0E35\" }, // it's quite vivid\n  { name: \"Vivid scarlet\", rgb: \"#FD0E35\" }, // it's quite vivid\n  { name: \"Sea green\", rgb: \"#93DFB8\" },\n  { name: \"Sepia\", rgb: \"#9E5B40\" },\n  // { name: \"Shadow\", rgb: \"#837050\" }, // not really intuitive\n  { name: \"Shamrock\", rgb: \"#33CC99\" },\n  // { name: \"Silver\", rgb: \"#C9C0BB\" }, in Greys\n  { name: \"Sky blue\", rgb: \"#76D7EA\" },\n  { name: \"Spring green\", rgb: \"#ECEBBD\" },\n  { name: \"Sunset orange\", rgb: \"#FE4C40\" },\n  { name: \"Tan\", rgb: \"#FA9D5A\" },\n  { name: \"Teal blue\", rgb: \"#008080\" },\n  { name: \"Thistle\", rgb: \"#D8BFD8\" },\n  // { name: \"Tickle Me Pink\", rgb: \"#FC80A5\" }, NO FUN\n  // { name: \"Timberwolf\", rgb: \"#D9D6CF\" }, WTH, also, NO FUN\n  // { name: \"Tropical Rain Forest\", rgb: \"#00755E\" }, NO FUN\n  // { name: \"Tumbleweed\", rgb: \"#DEA681\" }, // NO FUN\n  // { name: \"Turquoise blue\", rgb: \"#6CDAE7\" }, // dupe of Aquamarine\n  // { name: \"Ultramarine blue\", rgb: \"#3F26BF\" }, // dupe of Phthalo blue\n  // { name: \"Van Dyke Brown\", rgb: \"#664228\" }, // uh wat\n  // { name: \"Venetian Red\", rgb: \"#CC553D\" },\n  // { name: \"Vivid Tangerine\", rgb: \"#FF9980\" }, NOT VIVID!\n  { name: \"Vivid tangerine\", rgb: \"#ED3C10\" },\n  // { name: \"Vivid Violet\", rgb: \"#803790\" }, // not vivid enough!\n  { name: \"Vivid violet\", rgb: \"#a625c3\" },\n  // { name: \"Wild Blue Yonder\", rgb: \"#7A89B8\" }, NO\n  // { name: \"Wild Strawberry\", rgb: \"#FF3399\" },\n  { name: \"Wisteria\", rgb: \"#C9A0DC\" },\n  { name: \"Yellow-green\", rgb: \"#C5E17A\" },\n  { name: \"Yellow-orange\", rgb: \"#FFAE42\" },\n  { name: \"Yellow\", rgb: \"#FBE870\" }\n]\n\nexport const CrayonSupplements = [\n  // { name: \"Alizarin crimson\", rgb: \"#E32636\" }, // BOB ROSS FTW replaces Permanent Geranium Lake and English Vermilion\n  { name: \"Artichoke\", rgb: \"#8F9779\" },\n  { name: \"Aubergine\", rgb: \"#48213A\" },\n  // { name: \"Birch brown\", rgb: \"#B14A30\" }, // replaces Dark Venetian Red, but duplicates Brown\n  { name: \"Brandy rose\", rgb: \"#B1847F\" }, // fills gap around Copper\n  { name: \"Burgundy\", rgb: \"#800020\" },\n  { name: \"Burnt sienna\", rgb: \"#E97451\" }, // replaces Light Venetian Red\n  // { name: \"Cadmium yellow\", rgb: \"#F9DA03\" },\n  { name: \"Crimson red\", rgb: \"#990000\" },\n  { name: \"Dark brown\", rgb: \"#664228\" }, // replaces Van Dyke Brown\n  { name: \"Dark coral\", rgb: \"#CD5B45\" }, // replaces Venetian Red\n\n  { name: \"Dark raspberry\", rgb: \"#872657\" }, // replaces Jazzberry Jam\n  { name: \"Dark turquoise\", rgb: \"#610079\" },\n  // { name: \"Dark violet\", rgb: \"#722E72\" }, // dupe of plum\n  { name: \"Deep coffee\", rgb: \"#704241\" },\n  { name: \"Ecru\", rgb: \"#BCAC7C\" },\n  { name: \"Evergreen\", rgb: \"#05472A\" },\n  { name: \"Eggplant\", rgb: \"#380835\" },\n  { name: \"Eggplant purple\", rgb: \"#430541\" },\n  { name: \"Emerald green\", rgb: \"#028F1E\" },\n  { name: \"Flamingo pink\", rgb: \"#D67C99\" }, // replaces Tickle Me Pink\n  { name: \"Grape\", rgb: \"#6C3461\" },\n  // { name: \"Italian roast\", rgb: \"#906652\" }, // replaces BEAVER\n  { name: \"Kelly green\", rgb: \"#4CBB17\" },\n  { name: \"Light forest green\", rgb: \"#4F9153\" },\n  { name: \"Medium dark brown\", rgb: \"#AF7200\" },\n  { name: \"Medium dark cyan-blue\", rgb: \"#2D537C\" },\n  { name: \"Mustard\", rgb: \"#FAAF18\" },\n  { name: \"Neon green\", rgb: \"#39FF14\" }, // missing\n  { name: \"Pear\", rgb: \"#D1E231\" },\n  { name: \"Pewter blue\", rgb: \"#8BA8B7\" },\n  { name: \"Phthalo blue\", rgb: \"#0016C7\" }, // BOB ROSS FTW\n  // { name: \"Phthalo green\", rgb: \"#123524\" }, // dupe of Forest green\n  { name: \"Pink lace\", rgb: \"#FFDDF4\" },\n  { name: \"Raw sienna\", rgb: \"#884B15\" },\n  { name: \"Rebecca purple\", rgb: \"#663399\" }, // https://meyerweb.com/eric/thoughts/2014/06/19/rebeccapurple/\n  { name: \"Sap green\", rgb: \"#536916\" },\n  { name: \"Blue sapphire\", rgb: \"#133ECB\" },\n  { name: \"Shadow blue\", rgb: \"#778BA5\" },\n  { name: \"Shadow green\", rgb: \"#121E06\" },\n  { name: \"Swamp green\", rgb: \"#748500\" },\n  { name: \"Verdigris\", rgb: \"#43B3AE\" },\n  { name: \"Vivid blue-magenta\", rgb: \"#4817E8\" },\n  { name: \"Vivid blue-purple\", rgb: \"#ACACE6\" },\n  { name: \"Vivid blue\", rgb: \"#47ABCC\" },\n  { name: \"Vivid green-yellow\", rgb: \"#D9E650\" },\n  { name: \"Vivid green\", rgb: \"#7BE214\" },\n  { name: \"Vivid lavender\", rgb: \"#A354FD\" },\n  { name: \"Vivid mint\", rgb: \"#00F28C\" },\n  { name: \"Vivid red-purple\", rgb: \"#C31D7E\" },\n  { name: \"Vivid red\", rgb: \"#D92121\" },\n  { name: \"Vivid yellow-red\", rgb: \"#F2BA49\" },\n  { name: \"Vivid yellow\", rgb: \"#FAFA37\" }\n  // { name: \"Vivid purple\", rgb: \"#733380\" }, // dupe of vivid violet\n\n  // { name: \"Tropical violet\", rgb: \"#CDA4DE\" }, // replaces Purple Mountains' Majesty, but too close to Wisteria\n]\n","export const DarkWikipediaColors = [\n  { name: \"Bistre\", rgb: \"#3D2B1F\" }, // very dark brown\n  { name: \"Black bean\", rgb: \"#3D0C02\" },\n  // { name: \"Black coffee\", rgb: \"#3B2F2F\" },\n  { name: \"Black pearl\", rgb: \"#041322\" },\n  { name: \"Shadow blue\", rgb: \"#001440\" },\n  { name: \"Charcoal\", rgb: \"#36454F\" },\n  // { name: \"Dark cyan-blue\", rgb: \"#002f76\" }, // dupe of Midnight blue\n  { name: \"Dark indigo\", rgb: \"#1F0A52\" },\n  { name: \"Dark magenta\", rgb: \"#8B008B\" },\n  { name: \"Dark moss green\", rgb: \"#4A5D23\" },\n  { name: \"Dark navy\", rgb: \"#02075D\" },\n  { name: \"Dark pastel blue\", rgb: \"#779ECB\" },\n  { name: \"Dark purple\", rgb: \"#580040\" },\n  { name: \"Dark tan\", rgb: \"#918151\" },\n  { name: \"Dark yellow-green\", rgb: \"#304000\" },\n  { name: \"Dark yellow\", rgb: \"#9B870C\" },\n  { name: \"Deep violet\", rgb: \"#330066\" },\n  { name: \"Dusk\", rgb: \"#4E5481\" },\n  { name: \"Elderberry\", rgb: \"#1d1a34\" },\n  // no one knows what celadon is\n  // { name: \"Grey celadon\", rgb: \"#90906E\" },\n  { name: \"Grey jade\", rgb: \"#757C55\" },\n  { name: \"Grey magenta\", rgb: \"#83667F\" },\n  { name: \"Grey ochre\", rgb: \"#716659\" },\n  { name: \"Grey olive\", rgb: \"#656c5a\" }, // my name\n  { name: \"Grey sage\", rgb: \"#69724d\" }, // my name\n  { name: \"Taupe\", rgb: \"#483C32\" }\n\n  // { name: \"Black olive\", rgb: \"#3B3C36\" }, // duplicate of 75% black\n  // { name: \"Dark slate grey\", rgb: \"#580040\" },\n\n  // { name: \"Cool grey\", rgb: \"#8C92AC\" },\n  // { name: \"Onyx\", rgb: \"#353839\" },\n  // { name: \"Raisin black\", rgb: \"#242124\" }\n]\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { sqrt } from \"../Number\"\nimport { Triplet } from \"./Triplet\"\n\nexport function cie76_delta_e(lab1: Triplet, lab2: Triplet): number {\n  return Math.sqrt(\n    (lab2[0] - lab1[0]) ** 2 +\n      (lab2[1] - lab1[1]) ** 2 +\n      (lab2[2] - lab1[2]) ** 2\n  )\n}\n\n/**\n * @see https://en.wikipedia.org/wiki/Color_difference#CIE94\n * @return the perceptual difference. <= 2 is not perceptable.\n */\nexport function cie94_delta_e(lab1: Triplet, lab2: Triplet) {\n  const [L1, a1, b1] = lab1\n  const [L2, a2, b2] = lab2\n\n  // http://www.brucelindbloom.com/index.html?ColorDifferenceCalc.html\n\n  const _Kl = 1.0\n  const _K1 = 0.045\n  const _K2 = 0.015\n\n  const dL = L1 - L2\n  const dA = a1 - a2\n  const dB = b1 - b2\n  const c1 = sqrt(a1 ** 2 + b1 ** 2)\n  const c2 = sqrt(a2 ** 2 + b2 ** 2)\n  const dC = c1 - c2\n\n  const deltaH = sqrt(dA ** 2 + dB ** 2 - dC ** 2)\n\n  return sqrt(\n    (dL / _Kl) ** 2 +\n      (dC / (1.0 + _K1 * c1)) ** 2 +\n      (deltaH / (1.0 + _K2 * c1)) ** 2\n  )\n}\n\nexport const MinCie = 2 // barely perceptable\nexport const MaxCie = 20 // very perceptable\n\n/**\n * Use `diffCIE94` to return a correlation value between 1 (imperceptible\n * difference) and 0 (largest possible difference)).\n */\nexport function diffCIECorr(\n  lab1: Maybe<Triplet>,\n  lab2: Maybe<Triplet>\n): number {\n  if (lab1 == null || lab2 == null) return 1\n  return clamp(0, MaxCie, ciede2000_delta_e(lab1, lab2) - MinCie) / MaxCie\n}\n\nconst kL = 1 // 1 for graphic arts, 2 for textiles\nconst kC = 1 // unity factor\nconst kH = 1 // weighting factor\n\n// https://github.com/omgovich/colord/blob/master/src/get/getPerceivedDifference.ts failed tests\n\n// This is from https://github.com/Evercoder/d3-color-difference/blob/master/src/ciede2000.js\n\nexport function ciede2000_delta_e(std: Triplet, smp: Triplet): number {\n  const [lStd, aStd, bStd] = std\n  const cStd = sqrt(aStd ** 2 + bStd ** 2)\n\n  const [lSmp, aSmp, bSmp] = smp\n  const cSmp = sqrt(aSmp ** 2 + bSmp ** 2)\n\n  const cAvg = (cStd + cSmp) / 2\n\n  const G =\n    0.5 * (1 - sqrt(Math.pow(cAvg, 7) / (Math.pow(cAvg, 7) + Math.pow(25, 7))))\n\n  const apStd = aStd * (1 + G)\n  const apSmp = aSmp * (1 + G)\n\n  const cpStd = sqrt(apStd * apStd + bStd * bStd)\n  const cpSmp = sqrt(apSmp * apSmp + bSmp * bSmp)\n\n  let hpStd: number =\n    Math.abs(apStd) + Math.abs(bStd) === 0 ? 0 : Math.atan2(bStd, apStd)\n  hpStd += (hpStd < 0 ? 1 : 0) * 2 * Math.PI\n\n  let hpSmp =\n    Math.abs(apSmp) + Math.abs(bSmp) === 0 ? 0 : Math.atan2(bSmp, apSmp)\n  hpSmp += (hpSmp < 0 ? 1 : 0) * 2 * Math.PI\n\n  const dL = lSmp - lStd\n  const dC = cpSmp - cpStd\n\n  let dhp = cpStd * cpSmp === 0 ? 0 : hpSmp - hpStd\n  dhp -= (dhp > Math.PI ? 1 : 0) * 2 * Math.PI\n  dhp += (dhp < -Math.PI ? 1 : 0) * 2 * Math.PI\n\n  const dH = 2 * sqrt(cpStd * cpSmp) * Math.sin(dhp / 2)\n\n  const Lp = (lStd + lSmp) / 2\n  const Cp = (cpStd + cpSmp) / 2\n\n  let hp\n  if (cpStd * cpSmp === 0) {\n    hp = hpStd + hpSmp\n  } else {\n    hp = (hpStd + hpSmp) / 2\n    hp -= (Math.abs(hpStd - hpSmp) > Math.PI ? 1 : 0) * Math.PI\n    hp += (hp < 0 ? 1 : 0) * 2 * Math.PI\n  }\n\n  const Lpm50 = (Lp - 50) ** 2\n  const T =\n    1 -\n    0.17 * Math.cos(hp - Math.PI / 6) +\n    0.24 * Math.cos(2 * hp) +\n    0.32 * Math.cos(3 * hp + Math.PI / 30) -\n    0.2 * Math.cos(4 * hp - (63 * Math.PI) / 180)\n\n  const Sl = 1 + (0.015 * Lpm50) / sqrt(20 + Lpm50)\n  const Sc = 1 + 0.045 * Cp\n  const Sh = 1 + 0.015 * Cp * T\n\n  const deltaTheta =\n    ((30 * Math.PI) / 180) *\n    Math.exp(-1 * (((180 / Math.PI) * hp - 275) / 25) ** 2)\n  const Rc = 2 * sqrt(Math.pow(Cp, 7) / (Math.pow(Cp, 7) + Math.pow(25, 7)))\n\n  const Rt = -1 * Math.sin(2 * deltaTheta) * Rc\n\n  return sqrt(\n    Math.pow(dL / (kL * Sl), 2) +\n      Math.pow(dC / (kC * Sc), 2) +\n      Math.pow(dH / (kH * Sh), 2) +\n      (((Rt * dC) / (kC * Sc)) * dH) / (kH * Sh)\n  )\n}\n","import { compact } from \"../../fe/Array\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, closeTo, fmtPct, gt0, times } from \"../../fe/Number\"\nimport { PartiallyNull } from \"../../fe/PartiallyNull\"\nimport { Centroid } from \"../math/Kmeans\"\nimport { mapGt0 } from \"../Number\"\nimport { bestLabhashName } from \"./ColorNames\"\nimport { lab2rgbhex, toLabhash, unlabhash } from \"./Colorspace\"\nimport { ModeBits } from \"./ModeBits\"\nimport { ModeCount } from \"./ModeCount\"\nimport { WithModeData } from \"./ModeData\"\nimport { Triplet } from \"./Triplet\"\n\nexport function dominantColorsToRgbHex(arr: DominantColor[]) {\n  return compact(arr.map(ea => [ea.rgbhex, fmtPct(ea.pct)]))\n}\n\nexport class DominantColor {\n  static fromModeData(md: Partial<WithModeData>): DominantColor[] {\n    return compact(\n      times(ModeCount, i =>\n        DominantColor.fromLabhash({\n          labhash: (md as any)[`mode${i}`],\n          pct: (md as any)[`mode${i}pct`]\n        })\n      )\n    )\n  }\n\n  static toModeData(arr: DominantColor[]): PartiallyNull<WithModeData> {\n    const md: PartiallyNull<WithModeData> = {} as any\n    times(ModeCount, i => {\n      // We _really_ want all the fields here, to make sure we fully overwrite\n      // prior dominant colors (especially if there are fewer now than\n      // before), hence the `?? null`:\n      ;(md as any)[\"mode\" + i] = arr[i]?.labhash ?? null\n      ;(md as any)[\"mode\" + i + \"pct\"] = arr[i]?.pct ?? null\n    })\n    return md\n  }\n\n  static fromLabhash({\n    labhash,\n    labhashBits = ModeBits,\n    pct\n  }: {\n    labhash: Maybe<number>\n    labhashBits?: number\n    pct?: number\n  }): Maybe<DominantColor> {\n    const lab = mapGt0(labhash, ea => unlabhash(ea, labhashBits))\n    return lab == null || !gt0(pct) // < drops [0% - 0.5%]\n      ? undefined\n      : new DominantColor(lab, pct, labhash)\n  }\n\n  /**\n   * @param c.centroid is in L*a*b space\n   */\n  static fromCentroid(c: Centroid, totalPixels: number) {\n    return new DominantColor(\n      c.centroid as Triplet,\n      Math.round(100 * (c.size / totalPixels))\n    )\n  }\n\n  readonly labhash: number\n\n  readonly pct: number\n\n  constructor(\n    public readonly lab: Triplet,\n    pct: number,\n    labhash?: number\n  ) {\n    this.pct = clamp(0, 100, pct)\n    this.labhash = labhash ?? toLabhash(lab, ModeBits)\n  }\n\n  get rgbhex() {\n    return lab2rgbhex(this.lab)\n  }\n\n  get color() {\n    return bestLabhashName(this.labhash)\n  }\n\n  toGreyscale() {\n    return new DominantColor([this.lab[0], 0, 0], this.pct)\n  }\n\n  eql(other: DominantColor) {\n    return this.labhash === other.labhash && closeTo(this.pct, other.pct, 5)\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, isEmpty, sum } from \"../../fe/Array\"\nimport { clamp } from \"../../fe/Number\"\nimport { leastBy } from \"../Array\"\nimport { Point, lerp2d } from \"../math/Lerp\"\nimport { avg } from \"../math/Vector\"\nimport { ciede2000_delta_e } from \"./DeltaE\"\nimport { DominantColor } from \"./DominantColor\"\n\nexport function dominantColorCorrelation(\n  a: DominantColor[],\n  b: DominantColor[]\n): number {\n  a = compact(a)\n  b = compact(b)\n  if (isEmpty(a) || isEmpty(b)) return 0\n  return avg([_impl(a, b), _impl(b, a)])!\n}\n\nfunction _impl(a: DominantColor[], b: DominantColor[]): number {\n  const totalCoverage = sum(a, ea => clamp(0, 100, ea.pct))\n  const totalMatch = sum(a, ea => _match(ea, b))\n  const result = totalMatch / totalCoverage\n  // console.log(\"_impl()\", { result, totalCoverage, totalMatch })\n  return result\n}\n\n/**\n * For the given color in a, find the closest match in b\n */\nfunction _match(a: DominantColor, b: DominantColor[]): number {\n  const nearest = leastBy(b, ea => ciede2000_delta_e(a.lab, ea.lab))\n  if (nearest == null) return 0\n  const delta_e = ciede2000_delta_e(a.lab, nearest.lab)\n  const pct = clamp(0, a.pct, avg([a.pct, nearest.pct])!)\n  const scaled = scaled_delta_e(delta_e)\n  const result = clamp(0, 100, pct) * scaled\n  // console.log(\"_match()\", {\n  //   name: a.color?.name,\n  //   rgb: a.rgbhex,\n  //   result,\n  //   nearest: nearest.rgbhex,\n  //   pct,\n  //   scaled,\n  //   delta_e\n  // })\n  return result\n}\n\nconst DeltaEMatchPoints = lazy<Point[]>(() => {\n  return [\n    { x: 0, y: 1 },\n    { x: 9, y: 0.8 }, // < still pretty good, you get a B\n    { x: 16, y: 0.3 }, // < oof those are pretty different, you get an F\n    { x: 20, y: 0 } // delta_e of 20 or 30 are different colors. No credit.\n  ]\n})\n\nexport function scaled_delta_e(delta_e: number): number {\n  return clamp(0, 1, lerp2d(delta_e, ...DeltaEMatchPoints()))\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { later } from \"../../fe/Delay\"\nimport { stringify } from \"../../fe/JSON\"\nimport { gt0, round, times } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { leastBy, leastByCtx } from \"../Array\"\nimport { CountingSet } from \"../CountingSet\"\nimport { mkLogger } from \"../Logger\"\nimport { timeSync } from \"../async/PromiseTimer\"\nimport { Average } from \"../math/Average\"\nimport { Centroid, KMeansOptions, kmeans } from \"../math/Kmeans\"\nimport { sumf } from \"../math/Vector\"\nimport { ColorDistanceFunction } from \"../settings/ColorDistanceFunctions\"\nimport { Settings } from \"../settings/Settings\"\nimport { toLabhash, unlabhash } from \"./Colorspace\"\nimport { cie76_delta_e, cie94_delta_e, ciede2000_delta_e } from \"./DeltaE\"\nimport { DominantColor, dominantColorsToRgbHex } from \"./DominantColor\"\nimport { ModeCount } from \"./ModeCount\"\nimport { Triplet } from \"./Triplet\"\n\nconst logger = lazy(() => mkLogger(\"color.DominantColors\"))\n\nexport interface DominantColorsResult {\n  dominantColors: DominantColor[]\n  description?: string\n  dominantColorScore?: number\n}\n\nexport function extractDominantColors(\n  labs: Triplet[],\n  k = ModeCount\n): DominantColorsResult {\n  return timeSync(\"img.extractDominantColors\", () =>\n    _extractDominantColors(labs, k)\n  )\n}\n\nexport function centroidsScore(labs: Triplet[], centroids: Centroid[]) {\n  const avg = new Average()\n  for (const lab of labs) {\n    const closest = leastBy(centroids, ea =>\n      ciede2000_delta_e(ea.centroid as Triplet, lab)\n    )\n    if (closest != null)\n      avg.push(ciede2000_delta_e(closest.centroid as Triplet, lab))\n  }\n  return avg\n}\n\n// // This is a stable set of seeds so modes are consistent across runs,\n// // generated by\n\n// // [...Array(128)].map(() => Math.round(Math.random() * Number.MAX_SAFE_INTEGER))\n\nconst Seeds = [\n  6147062518717073, 8176726750919909, 5426648081701673, 3626890591152700,\n  1992286907770916, 6348935463312109, 5900323173950995, 7358780886584433,\n  5704068712193493, 1439187428792466, 3964117351448708, 3732669315077812,\n  3584643590221450, 6738189173486085, 8537822851166899, 5390086061821835,\n  7712057976331355, 4111632552143076, 3262039419431488, 7036994544380825,\n  5353634786120155, 2702673693873340, 2977285826783918, 2051993783175518,\n  5481147022770415, 5347523348244809, 1479740947861756, 2855268408168642,\n  2122782837478138, 6354921850669697, 1993285398366740, 8622097963014773,\n  1969625934696118, 1820973444720312, 7128984079394103, 4062676716762962,\n  5088704486053871, 3523794113298350, 8018285280412081, 4524300326741245,\n  8307147030534695, 8135486835878813, 7699950603263999, 3140795115333806,\n  5903399874280295, 7462660765348991, 6442509751447017, 3977540297510326,\n  7214173935589545, 6001326758941961, 1476334133689168, 3441998479348530,\n  1379784479491042, 6757635537583321, 8501611905255957, 1434039221010556,\n  5958243312989149, 8928005021308717, 5032083390680559, 3155422458748008,\n  4437089545223804, 3682643804036758, 3837314353184286, 4753952745315177\n]\n\nconst DeltaEImpls: Record<ColorDistanceFunction, typeof ciede2000_delta_e> = {\n  cie76: cie76_delta_e,\n  cie94: cie94_delta_e,\n  ciede2000: ciede2000_delta_e\n} as const\n\nconst KmeansDefaults = lazy<Partial<KMeansOptions>>(() => ({\n  maxIterations: 50,\n  initialization: \"kmeans++\",\n  // ok to be undefined. kmeans will use euclidean distance.\n  distanceFunction: (DeltaEImpls as any)[\n    Settings.dominantColorDeltaE.valueOrDefault\n  ]\n}))\n\nlater(() => {\n  Settings.dominantColorDeltaE.watchLater(() => {\n    KmeansDefaults.unset()\n  })\n})\n\nfunction _extractDominantColors(\n  input: Triplet[],\n  k = ModeCount\n): DominantColorsResult {\n  const start = Date.now()\n  const runs = Settings.dominantColorKmeansRuns.valueOrDefault\n\n  const cs = new CountingSet<number>()\n  for (const lab of maybeFilterGrey({ labs: input, minK: k })) {\n    cs.incr(toLabhash(lab))\n  }\n\n  const distFunc =\n    (DeltaEImpls as any)[Settings.dominantColorDeltaE.valueOrDefault] ??\n    ciede2000_delta_e\n\n  function centroidDeltaP84(centroids: Centroid[]) {\n    const avg = new Average()\n    for (const [labhash, count] of cs.entries()) {\n      const lab = unlabhash(labhash)!\n      const nearest = leastByCtx(centroids, ea =>\n        distFunc(ea.centroid as Triplet, lab)\n      )\n      if (nearest != null) {\n        times(count, () => avg.push(nearest.value as number))\n      }\n    }\n    return avg.p84!\n  }\n\n  const labs = cs.valuesToA(ea => unlabhash(ea)!)\n  let kActual = round(k + Settings.dominantColorMergeThreshold.valueOrDefault) // so merging doesn't leave insufficient colors\n\n  function setKActual(i: number) {\n    const minK = k\n    const maxK = k * 4\n    kActual = Math.round(Math.max(minK, Math.min(maxK, i)))\n  }\n\n  const kmeansResults =\n    // don't bother with kmeans if we have fewer colors than k!\n    labs.length <= kActual\n      ? []\n      : compact(\n          Seeds.slice(0, runs).map(seed => {\n            const km = kmeans(labs, kActual, {\n              ...KmeansDefaults,\n              seed\n            })\n            // truncate centroids to at most k elements:\n            const merged = mergeNearCentroids(km.centroids, labs.length)\n            if (merged.length < k) {\n              setKActual(kActual + k / 3)\n              return // < we need more centroids\n            } else if (merged.length > k) {\n              setKActual(kActual - 1)\n            }\n\n            const centroids = merged.slice(0, k)\n            const score = centroidDeltaP84(centroids)\n\n            return {\n              ...km,\n              centroids,\n              description: {\n                kIn: kActual,\n                kOut: km.centroids.length,\n                kMerged: merged.length,\n                score,\n                iterations: km.iterations,\n                uniqColors: cs.size,\n                elapsedMs: Date.now() - start\n              },\n              score\n            }\n          })\n        )\n\n  logger().trace(\"extractDominantColors()\", {\n    kmeansResults: kmeansResults.map(ea => pick(ea, \"description\", \"score\"))\n  })\n\n  const bestResult = leastBy(kmeansResults, ea => ea.score)\n\n  if (bestResult == null) {\n    logger().info(\n      \"kmeans failed or was disabled, using dominantColorsFromModes\",\n      { runs }\n    )\n    return dominantColorsFromModes(cs, k)\n  }\n\n  const description = stringify({\n    ...bestResult?.description,\n    elapsedMs: Date.now() - start\n  })\n\n  const orderedCentroids = sortBy(bestResult?.centroids, (ea: any) => -ea.size)\n  const dominantColors = orderedCentroids.map(ea =>\n    DominantColor.fromCentroid(ea, labs.length)\n  )\n\n  logger().debug(\"extractDominantColors() result\", {\n    description,\n    score: bestResult?.score,\n    totalColors: cs.size,\n    totalPixels: labs.length,\n    iters: bestResult?.iterations,\n    dominantColors: dominantColorsToRgbHex(dominantColors),\n    pixelCount: labs.length\n  })\n\n  // We're not returning \"score\" because dominantColorsFromModes score isn't\n  // comparable to kmeans score\n  return {\n    dominantColors,\n    description,\n    dominantColorScore: bestResult?.score\n  }\n}\n\nexport function maybeFilterGrey({\n  labs,\n  minK,\n  thresh,\n  retries = 3 // < number of times we'll halve the threshold and try again\n}: {\n  labs: Triplet[]\n  minK: number\n  thresh?: number\n  retries?: number\n}): Triplet[] {\n  if (retries < 0) {\n    logger().debug(\n      \"maybeFilterGrey(): exhausted retries: grey filtering disabled.\"\n    )\n    return labs\n  }\n  const greyThreshold =\n    thresh ?? Settings.dominantColorGreyThreshold.valueOrDefault\n  if (!gt0(greyThreshold)) {\n    logger().debug(\n      \"maybeFilterGrey(): grey threshold is <= 0: grey filtering disabled.\"\n    )\n    return labs\n  }\n  const filtered = labs.filter(\n    ea => Math.abs(ea[1]) + Math.abs(ea[2]) >= greyThreshold\n  )\n\n  // Don't reject a majority of pixels:\n  if (filtered.length >= labs.length / 2) {\n    logger().debug(\n      \"maybeFilterGrey(): sufficient remaining pixels with this threshold.\",\n      {\n        greyThreshold,\n        minK,\n        pixelCount: labs.length,\n        filteredCount: filtered.length\n      }\n    )\n    return filtered\n  } else {\n    logger().debug(\n      \"maybeFilterGrey(): insufficient remaining pixels with this threshold. Retrying with smaller threshold.\",\n      {\n        greyThreshold,\n        minK,\n        retries,\n        pixelCount: labs.length,\n        filteredCount: filtered.length\n      }\n    )\n    return maybeFilterGrey({\n      labs,\n      minK,\n      thresh: greyThreshold * 0.75,\n      retries: retries - 1\n    })\n  }\n}\n\nexport function dominantColorsFromModes(\n  labhashCountingSet: CountingSet<number>,\n  k: number\n): DominantColorsResult {\n  // assumes labs is already filtered for greys!\n  const pixelCount = labhashCountingSet.countSum\n  const uniqColors = labhashCountingSet.size\n  mergeLabhashes(labhashCountingSet)\n  const mergedColors = labhashCountingSet.size\n\n  // .fromLabHash will return null if the pct is too low, so we need compact()\n  const dominantColors = compact(\n    labhashCountingSet.top(k).map(([lh, cnt]) =>\n      DominantColor.fromLabhash({\n        labhash: lh,\n        pct: Math.round((100 * cnt) / pixelCount)\n      })\n    )\n  )\n  const pctOmitted = 100 - sumf(dominantColors, ea => ea.pct)\n\n  return {\n    dominantColors,\n    description:\n      \"dominantColorsFromModes: \" +\n      stringify({ uniqColors, mergedColors, pixelCount, pctOmitted })\n    // lower score is better: 0 means all the colors were captured\n  }\n}\n\nexport function mergeLabhashes(\n  cs: CountingSet<number>,\n  threshold = Settings.dominantColorMergeThreshold.valueOrDefault\n): CountingSet<number> {\n  const winners: { lab: Triplet; labhash: number }[] = []\n  for (const [labhash, count] of [...cs.entriesByCountDesc()]) {\n    const lab = unlabhash(labhash)!\n    const prior = winners.find(\n      ea => ciede2000_delta_e(ea.lab, lab) <= threshold\n    )\n    if (prior == null) {\n      winners.push({ lab, labhash })\n    } else {\n      // Merging with winner:\n      cs.delete(labhash)\n      cs.incr(prior.labhash, count)\n    }\n  }\n  return cs\n}\n\nexport function mergeNearCentroids(\n  arr: Centroid[],\n  pixelCount: number,\n  threshold = Settings.dominantColorMergeThreshold.valueOrDefault\n): Centroid[] {\n  if (threshold <= 0) return arr\n  const winners: Centroid[] = []\n  for (const centroid of arr) {\n    const prior = winners.find(\n      ea =>\n        ciede2000_delta_e(\n          centroid.centroid as Triplet,\n          ea.centroid as Triplet\n        ) <= threshold\n    )\n    if (prior == null) {\n      winners.push(centroid)\n    } else {\n      prior.size += centroid.size\n    }\n  }\n  const minSize = pixelCount / 100\n  return sortBy(\n    winners.filter(ea => ea.size > minSize),\n    ea => -ea.size\n  )\n}\n","// HEY FUTURE ME: With 10 greys we're still only 3 Δe away from any greyscale\n// color, which is totally fine.\n\nexport const Greys = [\n  { name: \"Black\", rgb: \"#000000\" }, // in crayon colors\n  // This \"percent of grey\" instead of \"percent of white\" follows X11 color\n  // names.\n  // { name: \"95% black\", rgb: \"#111111\" },\n  { name: \"90% black\", rgb: \"#1b1b1b\" },\n  // { name: \"85% black\", rgb: \"#262626\" },\n  { name: \"80% black\", rgb: \"#303030\" },\n  // { name: \"75% black\", rgb: \"#3b3b3b\" },\n  { name: \"70% black\", rgb: \"#474747\" },\n  // { name: \"65% black\", rgb: \"#525252\" },\n  { name: \"60% black\", rgb: \"#5e5e5e\" },\n  // { name: \"55% black\", rgb: \"#6a6a6a\" },\n  { name: \"Grey\", rgb: \"#777777\" },\n  // { name: \"55% white\", rgb: \"#848484\" },\n  { name: \"60% white\", rgb: \"#919191\" },\n  // { name: \"65% white\", rgb: \"#9e9e9e\" },\n  { name: \"70% white\", rgb: \"#ababab\" },\n  // { name: \"75% white\", rgb: \"#b9b9b9\" },\n  { name: \"80% white\", rgb: \"#c6c6c6\" },\n  // { name: \"85% white\", rgb: \"#d4d4d4\" },\n  { name: \"90% white\", rgb: \"#e2e2e2\" },\n  // { name: \"95% white\", rgb: \"#f1f1f1\" },\n  { name: \"White\", rgb: \"#ffffff\" }\n]\n\n// for (const l of stepRange(0, 105, 5)) {\n//   console.log(\n//     JSON.stringify({\n//       name: fmtPct(l) + \" grey\",\n//       rgb: lab2rgbhex([l, 0, 0])\n//     })\n//   )\n// }\n","import { lazy } from \"../../core/Lazy\"\nimport { within } from \"../../fe/Number\"\nimport { mkLogger } from \"../Logger\"\nimport { Average } from \"../math/Average\"\nimport { Settings } from \"../settings/Settings\"\nimport { clampLab } from \"./Colorspace\"\nimport { Triplet } from \"./Triplet\"\n\nconst logger = lazy(() => mkLogger(\"color.Lab\"))\n\nexport function isLab(l: any): l is Triplet {\n  return (\n    Array.isArray(l) &&\n    l.length === 3 &&\n    within(0, 100, l[0]) &&\n    within(-110, 110, l[1]) &&\n    within(-110, 110, l[2])\n  )\n}\n\n/**\n * @param labs [[L* values], [a* values], [b* values]]\n */\nexport function labsAreGreyscale(labs: Triplet[]) {\n  const thresh = Settings.greyscaleColorThreshold.valueOrDefault\n  const a = new Average()\n  const b = new Average()\n  for (const ea of labs) {\n    const clamped = clampLab(ea)\n    a.push(clamped[1])\n    b.push(clamped[2])\n  }\n  const value = (a.stdDev ?? 0) + (b.stdDev ?? 0)\n  const result = value < thresh\n  return logger().tap({\n    msg: \"labsAreGreyscale()\",\n    result,\n    meta: { value, thresh }\n  })\n}\n","export const LightWikipediaColors = [\n  // { name: \"Alabaster\", rgb: \"#EDEAE0\" }, // dupe of Parchment\n  { name: \"Beige\", rgb: \"#F5F5DC\" },\n  // { name: \"Bone\", rgb: \"#E3DAC9\" },\n  // { name: \"Cornsilk\", rgb: \"#FFF8DC\" },\n  // { name: \"Ivory\", rgb: \"#FFFFF0\" },\n  { name: \"Laurel green\", rgb: \"#A9BA9D\" },\n  // { name: \"Light dusty yellow\", rgb: \"#E4D1A6\" }, dupe of vanilla\n  { name: \"Light sage\", rgb: \"#93A58B\" },\n  { name: \"Light green-cyan\", rgb: \"#CFEADE\" },\n  { name: \"Pastel purple\", rgb: \"#B39EB5\" },\n  // { name: \"Parchment\", rgb: \"#F1E9D2\" }, dupe of Beige\n  { name: \"Pewter blue\", rgb: \"#8BA8B7\" },\n  { name: \"Powder blue\", rgb: \"#B0E0E6\" },\n  // { name: \"Seashell\", rgb: \"#FFF5EE\" }, // dupe of Beige\n  { name: \"Vanilla\", rgb: \"#F3E5AB\" }\n  // { name: \"Champagne\", rgb: \"#F7E7CE\" }, // not needed\n]\n","// How many bits per color for N modes?\n// 6 bits shared across 3 channels means 2 bits (4 values) per channel, 4 ** 3 =\n// 64 colors, but ends up only being ~21 colors in practice due to the\n// non-uniform L*a*b* colorspace\n// Total possible uniq labhashes\n// for 6: 40\n// for 7: 70\n// for 8: 107\n// for 9: 172\n// for 10: 292\n// for 11: 460\n// for 12: 589\n// But in practice, photos only have a subset of the full colorspace:\n// for 8, ~35 colors.\n// for 9, ~38 colors.\n// for 10, ~49 colors\n// for 11, ~47 colors (! worse than 10)\n// for 12, ~80 colors\n// for 15, ~95 colors (still ample collisions)\n// HEY FUTURE ME. 12 bits is _fine_. It allows for reasonably good matching (average cie94 delta of 3)\n\nexport const ModeBits = 12 // 12 = 4 bits per L*, a*, and b channels\n","// with ModeBits = 12\n// with 5: labModesCorr: { k: 18, avg: 0.931, min: 0.69, max: 1, sd: 0.09 }\n// with 6: labModesCorr: { k: 18, avg: 0.942, min: 0.72, max: 1, sd: 0.08 }\n// with 7: labModesCorr: { k: 18, avg: 0.946, min: 0.74, max: 1, sd: 0.08 }\n// with ModeBits = 15\n// with 5: labModesCorr: { k: 18, avg: 0.962, min: 0.79, max: 1, sd: 0.06 }\n// with 6: labModesCorr: { k: 18, avg: 0.959, min: 0.79, max: 1, sd: 0.05 }\n// with 7: labModesCorr: { k: 18, avg: 0.954, min: 0.79, max: 1, sd: 0.06 }\n// 15 ModeBits means the modes are taken up with fairly similar colors (and\n// makes library preview-similarity tests fail). 12 seems to be a reasonable\n// compromize between accuracy and posterization.\n// SearchHash only looks at lightness, and needs to be < 52 bits. 7x7 is 49:\n// export const SearchHashDim = 5\n// export const SearchHashBits = SearchHashDim * SearchHashDim * 3\n// export const MaxSearchHash = 2 ** SearchHashBits\n\nexport const ModeCount = 7 // lucky. Make sure this matches the AssetFile.modeN fields!\n","import { gt0 } from \"../../fe/Number\"\nimport { Obj, omit, pick } from \"../../fe/Object\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\n\nexport interface WithModePcts {\n  mode0pct: number\n  mode1pct: number\n  mode2pct: number\n  mode3pct: number\n  mode4pct: number\n  mode5pct: number\n  mode6pct: number\n}\n\nexport interface WithModes {\n  mode0: number\n  mode1: number\n  mode2: number\n  mode3: number\n  mode4: number\n  mode5: number\n  mode6: number\n}\n\nexport type WithModeData = WithModes & WithModePcts\n\nexport function isModeData(ea: any): ea is Partial<WithModeData> {\n  // only require mode0\n  return gt0(ea.mode0) && gt0(ea.mode0pct)\n}\n\nexport const ModeDataKeys = strEnum(\n  \"mode0\",\n  \"mode0pct\",\n  \"mode1\",\n  \"mode1pct\",\n  \"mode2\",\n  \"mode2pct\",\n  \"mode3\",\n  \"mode3pct\",\n  \"mode4\",\n  \"mode4pct\",\n  \"mode5\",\n  \"mode5pct\",\n  \"mode6\",\n  \"mode6pct\"\n)\n\nexport type ModeDataKey = StrEnumKeys<typeof ModeDataKeys>\n\nexport function pickModeData(ea: any) {\n  return pick(ea, ...ModeDataKeys.values)\n}\n\nexport function omitModeData<T extends Obj>(ea: T) {\n  return omit(ea, ...ModeDataKeys.values)\n}\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { leftPad } from \"../../fe/Pad\"\nimport { ensurePrefix } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { Triplet } from \"./Triplet\"\n\nconst RgbHexRe = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i\n\nexport function normalizeRgbHex(rgbhex: string): Maybe<string> {\n  const s = toS(rgbhex).trim()\n  return RgbHexRe.test(s) ? ensurePrefix(s, \"#\").toUpperCase() : undefined\n}\n\nexport function rgbhex2triplet(rgbHex: string): Maybe<Triplet> {\n  const m = toS(rgbHex).trim().match(RgbHexRe)\n  if (m == null) return\n  try {\n    // parseInt throws if the string is not a valid number, but the regex\n    // should only allow valid hex values.\n    return [m[1], m[2], m[3]].map(\n      ea => clamp(0, 255, parseInt(ea, 16)) // < no need to round\n    ) as Triplet\n  } catch {\n    return\n  }\n}\n\nexport function rgbTriplet2hex(rgb: Triplet): string {\n  return (\n    \"#\" +\n    clampRGB(rgb)\n      .map(ea => leftPad(Math.round(ea).toString(16).toUpperCase(), 2, \"0\"))\n      .join(\"\")\n  )\n}\n\nexport function clampRGB(rgb: Triplet): Triplet {\n  return (\n    // the [0], [1], [2] allows rgb to be a Buffer.slice:\n    [rgb[0], rgb[1], rgb[2]]\n      // clamp values to expected reasonable [0, 255] range:\n      .map(ea => clamp(0, 255, Math.round(ea))) as Triplet\n  )\n}\n","import { DateObjectUnits, DateTime, Duration, Zone } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { hourMs, isDate, secondMs } from \"../../fe/Date\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { closeTo as closeToNumber, gt0, round } from \"../../fe/Number\"\nimport { isObject, omit } from \"../../fe/Object\"\nimport { cmp } from \"../../fe/Primitive\"\nimport { mkLogger } from \"../Logger\"\n\nconst logger = lazy(() => mkLogger(\"date.Date\"))\n\n// WHAT THE ACTUAL FLYING F luxon 2 removed zone from DateObject.\n\n// SITS: Luxon considers 0 to be INVALID for month, day, and hour, so these\n// are all optional.\nexport interface DateObject\n  extends Pick<\n      DateObjectUnits,\n      \"year\" | \"month\" | \"day\" | \"hour\" | \"minute\" | \"second\"\n    >,\n    Pick<DateObjectUnits, \"millisecond\"> {\n  zone?: string | Zone | undefined\n  rawValue?: string\n  tzoffsetMinutes?: number | undefined\n}\n\nexport function isDateObject(a: any): a is DateObject {\n  return isObject(a) && [\"year\", \"month\", \"day\"].every(k => k in a)\n}\n\nexport function cmpDate(a?: Date, b?: Date): number {\n  const aTime = mapOr(\n    a,\n    d => d.getTime(),\n    () => 0\n  )\n  const bTime = mapOr(\n    b,\n    d => d.getTime(),\n    () => 0\n  )\n  return cmp(aTime, bTime)\n}\n\nexport function msUntil(d?: Date): number {\n  if (d == null) return 0\n  const ts = d.getTime()\n  const n = Date.now()\n  return ts <= n ? 0 : ts - n\n}\n\nexport function closeTo(a: Maybe<Date>, b: Maybe<Date>, maxMsDelta: number) {\n  return (\n    a != null && b != null && Math.abs(a.getTime() - b.getTime()) <= maxMsDelta\n  )\n}\n\nexport function nowish(d: Maybe<number | Date>, maxMsDelta = 2500): boolean {\n  return d == null\n    ? false\n    : isDate(d)\n    ? closeTo(d, new Date(), maxMsDelta)\n    : Math.abs(d - Date.now()) < maxMsDelta\n}\n\nexport function isRecentMs(timeMs: Maybe<number>, deltaMs: number): boolean {\n  return closeToNumber(Date.now(), timeMs, deltaMs)\n}\n\nexport function fmtMs(ms: number): string {\n  return Duration.fromMillis(ms).toFormat(\"m:ss.SSS\")\n}\n\nexport function durationToPaddedHMS(ms: number): string {\n  return Duration.fromMillis(ms).toFormat(\"hhhh:mm:ss.SSS\")\n}\n\nexport function durationHMS(ms: number): string {\n  return Duration.fromMillis(round(ms / secondMs) * secondMs).toFormat(\n    ms < hourMs ? \"m:ss\" : \"h:mm:ss\"\n  )\n}\n\nexport function isoNow() {\n  return new Date().toISOString()\n}\n\nexport function utcIsoToTs(iso: Maybe<string>): Maybe<number> {\n  if (blank(iso)) return\n  const dt = DateTime.fromISO(iso, { zone: \"utc\" })\n  return dt.isValid ? dt.toMillis() : undefined\n}\n\nexport function dateObjectToDateTime(obj: Maybe<DateObject>): Maybe<DateTime> {\n  if (obj == null) return\n  try {\n    const dou: DateObjectUnits = omit(\n      obj,\n      \"zone\",\n      \"rawValue\",\n      \"tzoffsetMinutes\"\n    )\n    for (const k of [\"month\", \"day\", \"hour\"] as const) {\n      if (!gt0(dou[k])) {\n        delete dou[k]\n      }\n    }\n    const d = DateTime.fromObject(dou, { zone: obj.zone })\n    if (d != null && !d.isValid) {\n      logger().debug(\"dateObjectToDateTime() invalid\", {\n        obj,\n        why: d.invalidExplanation\n      })\n    }\n    return d?.isValid ? d : undefined\n  } catch (error) {\n    logger().debug(\"dateObjectToDateTime() failed\", { obj, error })\n    return\n  }\n}\n\n// DON'T USE JS DATE TO PARSE! js date parsing erases timezones and forces\n// everything to local or UTC.\n","import { ExifDateTime } from \"exiftool-vendored\"\nimport { ToISOTimeOptions, Zone, ZoneOptions } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, toInt } from \"../../fe/Number\"\nimport { toS } from \"../../fe/toS\"\nimport { RegExpOptional, concatRegexp } from \"../RegExp\"\nimport { Dated, datedOverlap, datedToPrecisionMs } from \"./Dated\"\nimport { parseExifDateTime } from \"./ExifDateTime\"\n\n// See https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\n\nconst dateIntervalRE = lazy(() => {\n  const startRE = /(?<start>\\d{2,}[-+\\dTZ:\\.,]+?)/i\n  const endRE = /(?<end>\\d{2,}[-+\\dTZ:\\.,]+)/\n  const solidusRE = /(?<solidus>:--|\\/)/\n  const splitInfoRE = /(?:\\/)(?<index>\\d+)\\/(?<splits>\\d+)/\n  return concatRegexp([\n    /^/,\n    startRE,\n    solidusRE,\n    endRE,\n    RegExpOptional.from(splitInfoRE),\n    /$/\n  ])\n})\n\nfunction edtField<F extends keyof ExifDateTime>({\n  start,\n  end,\n  middle,\n  field\n}: {\n  start: ExifDateTime\n  end: ExifDateTime\n  middle: ExifDateTime\n  field: F\n}): Maybe<ExifDateTime[F]> {\n  return start[field] != null && end[field] != null ? middle[field] : undefined\n}\n\nconst Fields = [\n  \"year\",\n  \"month\",\n  \"day\",\n  \"hour\",\n  \"minute\",\n  \"second\",\n  \"millisecond\"\n] as const satisfies Readonly<(keyof ExifDateTime)[]>\n\nexport class DateInterval {\n  static fromISO(s: string, defaultZone?: Maybe<string>): Maybe<DateInterval> {\n    const m = dateIntervalRE().exec(toS(s).trim())\n    const g = m?.groups\n\n    return g == null\n      ? undefined\n      : DateInterval.for(\n          parseExifDateTime(g.start, defaultZone),\n          parseExifDateTime(g.end, defaultZone),\n          toInt(g.index),\n          toInt(g.splits)\n        )\n  }\n\n  toJSON() {\n    return {\n      _ctor: \"DateInterval\",\n      start: this.start?.toJSON(),\n      end: this.end?.toJSON(),\n      index: this.index,\n      splits: this.splits\n    }\n  }\n\n  static fromJSON(obj: ReturnType<DateInterval[\"toJSON\"]>) {\n    return this.for(\n      map(obj.start, ea => ExifDateTime.fromJSON(ea)),\n      map(obj.end, ea => ExifDateTime.fromJSON(ea)),\n      obj.index,\n      obj.splits\n    )\n  }\n\n  static for(\n    start: Maybe<ExifDateTime>,\n    end: Maybe<ExifDateTime>,\n    index = 0,\n    splits = 1\n  ): Maybe<DateInterval> {\n    if (start == null || !start.isValid || end == null || !end.isValid) return\n    splits = clamp(1, 1000, toInt(splits, { defaultValue: 1 })!)\n    index = clamp(0, splits - 1, toInt(index, { defaultValue: 0 })!)\n\n    if (start.hasZone && !end.hasZone) {\n      end = end.setZone(start.zoneName) ?? end\n    } else if (!start.hasZone && end.hasZone) {\n      start = start.setZone(end.zoneName) ?? start\n    }\n\n    const startTs = start.toMillis()\n    const durationMs = end.toMillis() - startTs\n    const deltaMs = (durationMs / (splits + 1)) * (index + 1)\n    const middle = start.plus({ milliseconds: deltaMs })\n\n    // console.log(\"DateInterval.for\", {\n    //   start,\n    //   end,\n    //   index,\n    //   splits,\n    //   durationMs,\n    //   duration: fmtDuration(durationMs),\n    //   deltaMs,\n    //   delta: fmtDuration(deltaMs),\n    //   middle,\n    //   middle_ISO: middle?.toISOString()\n    // })\n\n    return middle == null\n      ? undefined\n      : new DateInterval(start, middle, end, index, splits)\n  }\n\n  readonly year: Maybe<number>\n  readonly month: Maybe<number>\n  readonly day: Maybe<number>\n  readonly hour: Maybe<number>\n  readonly minute: Maybe<number>\n  readonly second: Maybe<number>\n  readonly millisecond: Maybe<number>\n\n  private constructor(\n    readonly start: ExifDateTime,\n    readonly middle: ExifDateTime,\n    readonly end: ExifDateTime,\n    readonly index = 0,\n    readonly splits = 1\n  ) {\n    ;[\n      this.year,\n      this.month,\n      this.day,\n      this.hour,\n      this.minute,\n      this.second,\n      this.millisecond\n    ] = Fields.map(field => edtField({ start, middle, end, field }))\n  }\n\n  get intervalMs() {\n    return this.end.toMillis() - this.start.toMillis()\n  }\n\n  get precisionMs() {\n    return (\n      this.end.toMillis() -\n      this.start.toMillis() +\n      Math.max(datedToPrecisionMs(this.end), datedToPrecisionMs(this.start))\n    )\n  }\n\n  toDate() {\n    return this.middle.toDate()\n  }\n\n  toMillis() {\n    return this.middle.toMillis()\n  }\n\n  get isValid(): boolean {\n    // always validated prior to construction:\n    return true\n  }\n\n  get zone() {\n    return this.start.zone ?? this.end.zone\n  }\n\n  get hasZone() {\n    return this.start.hasZone || this.end.hasZone\n  }\n\n  /**\n   * This only complies with the ISO standard if the index and slots are 1.\n   */\n  toString(options: ToISOTimeOptions = {}): string {\n    return (\n      `${this.start.toISOString(options)}/${this.end.toISOString(options)}` +\n      (this.index === 0 && this.splits === 1\n        ? \"\"\n        : `/${this.index}/${this.splits}`)\n    )\n  }\n\n  toISOString(options: ToISOTimeOptions = {}) {\n    return this.toString(options)\n  }\n\n  contains(d: Maybe<Dated>): boolean {\n    return true === datedOverlap({ a: this, b: d })?.aContainsB\n  }\n\n  overlaps(d: Maybe<Dated>): boolean {\n    return true === datedOverlap({ a: this, b: d })?.aOverlapsB\n  }\n\n  setZone(zone: string | Zone, opts?: ZoneOptions): DateInterval {\n    return new DateInterval(\n      this.start.setZone(zone, opts) ?? this.start,\n      this.middle.setZone(zone, opts) ?? this.middle,\n      this.end.setZone(zone, opts) ?? this.end,\n      this.index,\n      this.splits\n    )\n  }\n}\n","import { ExifDate, ExifDateTime } from \"exiftool-vendored\"\nimport { DateTime } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport {\n  dayMs,\n  hourMs,\n  minuteMs,\n  monthMs,\n  secondMs,\n  yearMs\n} from \"../../fe/Date\"\nimport { Json } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, isNumber } from \"../../fe/Number\"\nimport { maybeCall } from \"../../fe/Object\"\nimport { isString } from \"../../fe/String\"\nimport { mkLogger } from \"../Logger\"\nimport { DateObject, isDateObject } from \"./Date\"\nimport { DateInterval } from \"./DateInterval\"\nimport { datedToMillis } from \"./DatedToMillis\"\nimport { dateObjectToExifDateTime, parseExifDateTime } from \"./ExifDateTime\"\nimport { FuzzyDate, setZone } from \"./FuzzyDate\"\nimport {\n  getDay,\n  getHour,\n  getMillisecond,\n  getMinute,\n  getMonth,\n  getSecond\n} from \"./GetDateField\"\nimport { hasTime } from \"./HasTime\"\nimport { isDateTime } from \"./IsDateTime\"\nimport { getZoneName } from \"./getZoneName\"\n\nconst logger = lazy(() => mkLogger(\"date.Dated\"))\n\n// can't IDate because IMarried HUR HUR LOL DADJOKES FTW\n\n// references to exiftool-vendored must only be in this type signature to\n// prevent account from depending on exiftool-vendored.\n\nexport type Dated =\n  | FuzzyDate\n  | ExifDate\n  | ExifDateTime\n  | Date\n  | DateInterval\n  | DateTime\n  | DateObject\n\n// we don't include luxon.Interval here because our DateInterval supports\n// slots and index.\n\nexport function isDated(d: any): d is Dated {\n  // My proudest moment in coding:\n\n  // oh wait this is all just garbage bailing wire and duct tape *tear*.\n  return (\n    d != null &&\n    (d instanceof FuzzyDate ||\n      d instanceof ExifDate ||\n      d instanceof ExifDateTime ||\n      d instanceof Date ||\n      d instanceof DateInterval ||\n      isDateTime(d) ||\n      isDateObject(d))\n  )\n}\n\nexport function toDated(obj: any): Maybe<Dated> {\n  return isDated(obj) ? obj : undefined\n}\n\nexport function mapDated<T>(obj: any, f: (d: Dated) => T): Maybe<T> {\n  return isDated(obj) ? f(obj) : undefined\n}\n\nexport function toDate(d: Maybe<Dated>): Maybe<Date> {\n  if (d == null) return\n  if (typeof d === \"number\") {\n    return new Date(d)\n  }\n  if (d instanceof Date) {\n    return d\n  }\n  return maybeCall(d, \"toJSDate\") ?? maybeCall(d, \"toDate\")\n}\n\nexport function datedToStartTs(d: Maybe<Dated>): Maybe<number> {\n  if (d == null) return\n  else if (d instanceof DateInterval) {\n    return d.start.toMillis()\n  } else if (d instanceof ExifDate) {\n    return d.toMillis(0) // < defaults to 12 hours!\n  } else {\n    return datedToMillis(d)\n  }\n}\n\nexport function datedToStartDateTime(d: Dated): DateTime {\n  return d instanceof DateInterval\n    ? d.start.toDateTime()\n    : d instanceof ExifDate\n    ? DateTime.fromObject(d) // < defaults to noon, but we want midnight.\n    : datedToDateTime(d)!\n}\n\n/**\n * If you don't care about timezone offsets (you're just wanting `.isValid`,\n * right?), otherwise, use `toExifDateTime`.\n */\nexport function datedToDateTime(d: Maybe<Dated>): Maybe<DateTime> {\n  try {\n    if (d == null || isString(d) || isNumber(d)) return\n    if (isDateTime(d)) return d\n    if (d instanceof ExifDateTime || d instanceof FuzzyDate)\n      return d.toDateTime()\n    if (d instanceof DateInterval) return d.middle.toDateTime()\n    if (d instanceof Date) return DateTime.fromJSDate(d)\n    return dateObjectToExifDateTime(d as any)?.toDateTime()\n  } catch {\n    return\n  }\n}\n\nexport function datedToPrecisionMs(d: Dated): number {\n  if (d instanceof DateInterval) {\n    return d.precisionMs\n  }\n\n  if (hasTime(d)) {\n    if (gt0(getMillisecond(d))) return 0\n    if (gt0(getSecond(d))) return secondMs - 1\n    if (gt0(getMinute(d))) return minuteMs - 1\n    if (gt0(getHour(d))) return hourMs - 1\n  }\n\n  return gt0(getDay(d))\n    ? dayMs - 1\n    : gt0(getMonth(d))\n    ? monthMs - 1\n    : yearMs - 1\n}\n\nexport function isoToPrecisionMs(iso: string): Maybe<number> {\n  return map(isoToDated(iso), datedToPrecisionMs)\n}\n\nconst NoOverlap = {\n  aContainsB: false,\n  aOverlapsB: false\n}\n\nexport function datedOverlap({\n  a,\n  b,\n  aPrecisionMs,\n  bPrecisionMs\n}: {\n  a: Maybe<Dated>\n  b: Maybe<Dated>\n  aPrecisionMs?: number\n  bPrecisionMs?: number\n}): typeof NoOverlap {\n  if (a == null || b == null) return NoOverlap\n\n  aPrecisionMs ??= datedToPrecisionMs(a)\n  bPrecisionMs ??= datedToPrecisionMs(b)\n\n  // Eek: if one of the dates (but not the other) are missing a timezone, we\n  // want to assume the other is in the same timezone (or it'll be incorrectly\n  // wrong by the timezone offset)\n  const aZone = getZoneName(a)\n  const bZone = getZoneName(b)\n\n  if (aZone == null && bZone != null) {\n    a = setZone(a, bZone) ?? a\n  }\n\n  if (bZone == null && aZone != null) {\n    b = setZone(b, aZone) ?? b\n  }\n\n  const a0 = datedToStartTs(a)\n  const b0 = datedToStartTs(b)\n\n  if (a0 == null || b0 == null) return NoOverlap\n\n  const a1 = a0 + aPrecisionMs\n  const b1 = b0 + bPrecisionMs\n\n  const adjacent = a0 !== b0 && (a1 === b0 || a0 === b1)\n  const aOverlapsB = !adjacent && !(a1 < b0 || a0 > b1)\n  const aContainsB = aOverlapsB && a0 <= b0 && a1 >= b1\n  return logger().tap({\n    msg: \"datedOverlap()\",\n    result: {\n      aOverlapsB,\n      aContainsB\n    },\n    meta: {\n      a,\n      b,\n      aPrecisionMs,\n      bPrecisionMs\n    }\n  })\n}\n\nexport function isoToDated(iso: Maybe<string>, defaultZone?: Maybe<string>) {\n  return blank(iso)\n    ? undefined\n    : DateInterval.fromISO(iso, defaultZone) ??\n        parseExifDateTime(iso, defaultZone) ??\n        FuzzyDate.fromISO(iso)\n}\n\nexport function datedToJson(d: Dated): Json {\n  const j = (d as any).toJSON?.()\n  if (j != null) return j\n  if (d instanceof DateTime)\n    return {\n      ...d.toObject(),\n      zone: d.zoneName\n    }\n  return d as Json\n}\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { isNumber } from \"../../fe/Number\"\nimport { isString } from \"../String\"\nimport { Dated } from \"./Dated\"\n\n// CAREFUL! Don't reference exiftool-vendored here, because it will cause\n// account to depend on it.\n\nexport function datedToMillis(\n  d: Maybe<Dated | number | string>\n): Maybe<number> {\n  // invalid tag from ExifTool:\n  if (d == null || isString(d)) return\n\n  // Assume we're already in milliseconds (!! :hope:)\n  if (isNumber(d)) return d\n\n  return d instanceof Date\n    ? d.getTime()\n    : // FuzzyDate, ExifDateTime, ExifDate, DateTime all have a .toMillis() method:\n      (d as any).toMillis?.()\n}\n","// See https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens\n// and https://en.wikipedia.org/wiki/Date_format_by_country\nexport const DefaultDateTimeFormats = [\n  \"y-M-d 'at' H.m.s\", // macOS screenshots\n  \"y-M-d H-m-s\", // gnome screenshots\n  \"y-MMM-d H-m-s\", // reasonable timestamp with short month name\n  \"y-MMMM-d H-m-s\", // reasonable timestamp with full month name\n  \"y-MM-dd HHmmss\", // windows screenshots\n  \"yMMdd_HHmmss\", // smartphone camera filenames\n  \"yMMdd-HHmmss\", // smartphone camera filenames\n  // \"MM.dd.yyyy HH:mm:ss\", // old LG datestamps\n  \"F\", // short localized date and time with seconds, may have slashes\n  \"FF\" // less short localized date and time with seconds\n\n  // We don't need to add y-m-d parsers here--those are handled automatically\n  // by FuzzyDateParser.\n]\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isNumber } from \"../../fe/Number\"\nimport { FifoCache } from \"../FifoCache\"\nimport { fmtFullDuration, parseDuration } from \"./DurationFormat\"\n\nconst decCache = new FifoCache<Maybe<number>>(512)\n\n/**\n * @param s either number in milliseconds or an ISO 8601 duration string\n * @return milliseconds encoded by `s`\n */\nexport function decodeDuration(s: Maybe<string | number>): Maybe<number> {\n  return isNumber(s)\n    ? s\n    : blank(s)\n    ? undefined\n    : decCache.getOrSet(s, () => parseDuration(s))\n}\n\nconst encCache = new FifoCache<Maybe<string>>(512)\n\n/**\n * @param value either number in milliseconds or an ISO 8601 duration string\n * @return ISO 8601 duration string\n */\nexport function encodeDuration(value: Maybe<number | string>): Maybe<string> {\n  return blank(value)\n    ? undefined\n    : encCache.getOrSet(value, () =>\n        fmtFullDuration(isNumber(value) ? value : decodeDuration(value))\n      )\n}\n","import { Duration } from \"luxon\"\nimport { compact } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport {\n  dayMs,\n  hourMs,\n  minuteMs,\n  secondMs,\n  weekMs,\n  yearMs\n} from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte0, isDigits, isNumber, lt0, toFloat, toInt } from \"../../fe/Number\"\nimport { isString } from \"../../fe/String\"\nimport { captures } from \"../RegExp\"\nimport { sum } from \"../math/Vector\"\n\nexport function parseDuration(str: number | string): Maybe<number> {\n  try {\n    if (str == null || (!isString(str) && !isNumber(str))) return\n\n    // Assume milliseconds if the string is just a number.\n    if (isNumber(str)) return str\n    if (isDigits(str)) return toInt(str)\n\n    str = str.trim().toUpperCase()\n    if (str.length === 0) return\n\n    // Is it ISO formatted?\n    const d = Duration.fromISO(str)\n    if (d.isValid) return d.toMillis()\n\n    // Nope, not ISO. Maybe something like \"1d 2h 3m 4s 5ms\"?\n\n    const re =\n      /[\\s,]*?(?<value>-?(?:\\d+)?\\.?\\d+)\\s*(?<type>milliseconds?|msecs?|millis|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?[\\s,]*?/gim\n\n    const groups = captures(re, str)\n    if (groups.length === 0) return\n\n    const units = compact(\n      groups.map(ea => parseUnit(ea.groups?.value, ea.groups?.type))\n    )\n\n    // if the first value is negative, flip the sign of the remainder of the values.\n    const values = lt0(units[0])\n      ? [units[0], ...units.slice(1).map(ea => -ea)]\n      : units\n\n    return sum(values)\n  } catch {\n    return\n  }\n}\n\nfunction parseUnit(value?: string, type?: string): Maybe<number> {\n  const n = toFloat(value)\n  if (n == null) return\n  if (blank(type)) {\n    // assume milliseconds\n    return n\n  }\n  switch (type.toLowerCase()) {\n    case \"years\":\n    case \"year\":\n    case \"yrs\":\n    case \"yr\":\n    case \"y\":\n      return n * yearMs\n    case \"weeks\":\n    case \"week\":\n    case \"w\":\n      return n * weekMs\n    case \"days\":\n    case \"day\":\n    case \"d\":\n      return n * dayMs\n    case \"hours\":\n    case \"hour\":\n    case \"hrs\":\n    case \"hr\":\n    case \"h\":\n      return n * hourMs\n    case \"minutes\":\n    case \"minute\":\n    case \"mins\":\n    case \"min\":\n    case \"m\":\n      return n * minuteMs\n    case \"seconds\":\n    case \"second\":\n    case \"secs\":\n    case \"sec\":\n    case \"s\":\n      return n * secondMs\n    case \"milliseconds\":\n    case \"millisecond\":\n    case \"millis\":\n    case \"msecs\":\n    case \"msec\":\n    case \"ms\":\n      return n\n    default:\n      // This should never occur.\n      throw new Error(\n        `parseDuration(): unit ${type} was matched, but no matching case exists.`\n      )\n  }\n}\n\nconst Units = [\n  { ms: yearMs, s: \"y\" },\n  { ms: weekMs, s: \"w\" },\n  { ms: dayMs, s: \"d\" },\n  { ms: hourMs, s: \"h\" },\n  { ms: minuteMs, s: \"m\" },\n  { ms: secondMs, s: \"s\" },\n  { ms: 1, s: \"ms\" }\n]\n\nexport function fmtFullDuration(\n  ms: Maybe<number>,\n  sep: \"\" | \" \" | \",\" = \"\"\n): Maybe<string> {\n  if (!isNumber(ms)) return\n  if (ms === 0) return \"0\"\n  if (!gte0(ms)) {\n    return !isNumber(ms) ? undefined : \"-\" + fmtFullDuration(Math.abs(ms))\n  }\n  const result = []\n  for (const unit of Units.slice(Units.findIndex(ea => ea.ms <= ms!))) {\n    const i = Math.floor(ms / unit.ms)\n    ms -= i * unit.ms\n    if (i > 0) result.push(i + unit.s)\n  }\n  return result.join(sep)\n}\n","import { ExifDateTime, UnsetZoneOffsetMinutes } from \"exiftool-vendored\"\nimport { DateTime, Info, Zone } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toFloat, toInt, within } from \"../../fe/Number\"\nimport { isEmptyObj } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport { mapEntries } from \"../Object\"\nimport { RegExpOptional, concatRegexp } from \"../RegExp\"\nimport { Settings } from \"../settings/Settings\"\nimport { DateObject } from \"./Date\"\nimport { zoneOffsetToName } from \"./FuzzyDate\"\nimport {\n  dayRE,\n  hourRE,\n  minuteRE,\n  monthRE,\n  nonNumericLookbackRE,\n  secondRE,\n  subsecRE,\n  yearRE\n} from \"./FuzzyDateParser\"\nimport { hasTime } from \"./HasTime\"\nimport {\n  TimezoneOffsetRE,\n  timezoneOffsetFromRegExpMatch,\n  zoneToTzOffsetMinutes\n} from \"./Timezone\"\n\n// If `exiftool-vendored` and PhotoStructure's versions of Luxon are\n// different, Luxon doesn't work correctly unless we do this:\n\nexport const UnsetZone = Info.normalizeZone(UnsetZoneOffsetMinutes)\n\nexport function parseExifDateTimeFormat({\n  input,\n  format,\n  defaultZone\n}: {\n  input: Maybe<string>\n  format: string\n  defaultZone?: string | Zone\n}): Maybe<ExifDateTime> {\n  return blank(input)\n    ? undefined\n    : // use ExifDateTime to clear the UnsetZone:\n      ExifDateTime.fromDateTime(\n        DateTime.fromFormat(input, format, {\n          zone: defaultZone ?? UnsetZone,\n          setZone: true\n        })\n      )\n}\n\nexport function parseExifDateTimeFromRFC2822(\n  input: Maybe<string>\n): Maybe<ExifDateTime> {\n  return blank(input)\n    ? undefined\n    : ExifDateTime.fromDateTime(\n        DateTime.fromRFC2822(input, { zone: UnsetZone, setZone: true })\n      )\n}\n\nexport function parseExifDateTime(\n  input: Maybe<string>,\n  defaultZone?: string\n): Maybe<ExifDateTime> {\n  return blank(input)\n    ? undefined\n    : // fromEXIF also calls fromISO, and only returns valid instances.\n      ExifDateTime.fromISO(input, defaultZone) ??\n        ExifDateTime.fromEXIF(input, defaultZone) ??\n        parseExifDateTimeRe(input, ymd_hmsRegExp(), defaultZone)\n}\n\nexport function parseExifDateTimeRe(\n  input: string,\n  re: RegExp,\n  defaultZone?: string\n): Maybe<ExifDateTime> {\n  const m = re.exec(input)\n  if (m == null || isEmptyObj(m.groups)) return\n\n  const { year, month, day, hour, minute, second } = mapEntries(\n    m.groups,\n    (_k, v) => toInt(v)\n  )\n\n  if (year == null || month == null || day == null) {\n    return\n  }\n  if (\n    !Settings.fuzzyDateParsing.valueOrDefault &&\n    (hour == null || minute == null)\n  ) {\n    return\n  }\n\n  const millisecond = map(toFloat(m.groups.subsec), f =>\n    within(0, 1, f) ? Math.round(f * 1000) : undefined\n  )\n\n  const tzoffsetMinutes = timezoneOffsetFromRegExpMatch(m)\n  const zone = zoneOffsetToName(tzoffsetMinutes) ?? defaultZone\n  const obj = {\n    year,\n    month,\n    day,\n    hour: hour ?? 0,\n    minute: minute ?? 0,\n    second: second ?? 0,\n    millisecond,\n    zone,\n    rawValue: input,\n    tzoffsetMinutes\n  }\n  return dateObjectToExifDateTime(obj)\n}\n\nconst sep = /[-:_\\s]?/\n\nconst ymd_hmsRegExp = lazy(() =>\n  concatRegexp([\n    nonNumericLookbackRE,\n    yearRE,\n    sep,\n    monthRE,\n    sep,\n    dayRE,\n    /[T\\s]/,\n    hourRE,\n    sep,\n    minuteRE,\n    sep,\n    secondRE,\n    subsecRE,\n    /\\s?/,\n    RegExpOptional.from(TimezoneOffsetRE())\n  ])\n)\n\nexport function dateObjectToExifDateTime(\n  obj: Maybe<DateObject>\n): Maybe<ExifDateTime> {\n  if (obj == null || !hasTime(obj)) return\n  if (obj instanceof ExifDateTime && obj.isValid) return obj\n  try {\n    const tzoffsetMinutes =\n      obj.tzoffsetMinutes ??\n      zoneToTzOffsetMinutes(\n        new Date(obj.year, obj.month - 1, obj.day).getTime(),\n        obj.zone\n      )\n    const edt = ExifDateTime.fromJSON({\n      ...obj,\n      tzoffsetMinutes,\n      zoneName: map(obj.zone, toS)\n    } as any)\n\n    return edt.isValid ? edt : undefined\n  } catch {\n    return\n  }\n}\n","import { DateTime, DateTimeFormatOptions } from \"luxon\"\nimport { blank, mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { secondMs } from \"../../fe/Date\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { mapNumeric } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { isString } from \"../String\"\nimport { closeTo, isRecentMs } from \"./Date\"\nimport { DateInterval } from \"./DateInterval\"\nimport { Dated } from \"./Dated\"\nimport { datedToMillis } from \"./DatedToMillis\"\nimport { isValidDate, mapValidDate } from \"./ValidDate\"\n\nexport function recent(d: Maybe<Date | number>, delta = 5 * secondMs): boolean {\n  return isRecentMs(datedToMillis(d), delta)\n}\n\nexport function fmtDateTime(\n  dateTime?: DateTime,\n  locale?: string,\n  // Don't use FULL, because the friendly human offset name isn't known.\n  opts: DateTimeFormatOptions = DateTime.DATETIME_MED\n) {\n  return mapValidDate(dateTime, dt => {\n    mapNotBlank(locale, ea => (dt = dt.setLocale(ea)))\n    return dt.toLocaleString(opts)\n  })\n}\n\nconst BadMsRE = /(\\.\\d\\d\\d)\\d+/\n\nexport function isoToDateTime(iso: Maybe<string>): Maybe<DateTime> {\n  if (blank(iso)) return\n  if (iso.includes(\"/\")) {\n    // DateInterval will only build if .middle is valid.\n    const m = DateInterval.fromISO(iso)?.middle.toDateTime()\n    if (m != null) return m\n  }\n  const dt = DateTime.fromISO(\n    iso.replace(BadMsRE, (_, m) => m),\n    { setZone: true }\n  )\n  return dt.isValid ? dt : undefined\n}\n\nconst locale2dtf = new Map<string, Intl.DateTimeFormat>()\n\nexport function shortDateTimeFormat(locale = \"en-US\"): Intl.DateTimeFormat {\n  return getOrSet(\n    locale2dtf,\n    locale,\n    () =>\n      new Intl.DateTimeFormat(locale, {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"numeric\",\n        minute: \"numeric\"\n      })\n  )\n}\n\nexport function fmtDateShort(d: number | Dated, locale = \"en-US\"): string {\n  return shortDateTimeFormat(locale).format(datedToMillis(d))\n}\n\nexport function fmtDateIso(\n  isoDate: string,\n  locale?: string,\n  // Don't use FULL, because the friendly human offset name isn't known.\n  opts: DateTimeFormatOptions = DateTime.DATETIME_MED\n): string {\n  return opt(DateTime.fromISO(isoDate, { setZone: true }))\n    .filter(isValidDate)\n    .orElse(() =>\n      map(DateInterval.fromISO(isoDate), ea => ea.middle.toDateTime())\n    )\n    .map(ea => fmtDateTime(ea, locale, opts))\n    .getOrElse(() => isoDate)!\n}\n\nexport function parseJsonDate(\n  d: Maybe<string | { formatted: string; timestamp: number }>\n) {\n  if (d == null) return\n  if (isString(d)) return isoToDateTime(d)?.toJSDate()\n  const ts = d?.timestamp\n  const fmt = d?.formatted\n  const tsDate = mapNumeric(ts, ea => new Date(ea * secondMs))\n  if (notBlank(fmt)) {\n    const fmtDate = new Date(fmt)\n    if (!closeTo(tsDate, fmtDate, secondMs)) return\n  }\n  return tsDate\n}\n","import { pad2 } from \"../../fe/Pad\"\n\n/**\n * Filesystem-character-safe date and timestamp\n */\n\nexport function filestamp(d: Date = new Date()): string {\n  return [\n    d.getFullYear(),\n    pad2(d.getMonth() + 1),\n    pad2(d.getDate()),\n    \"-\",\n    pad2(d.getHours()),\n    pad2(d.getMinutes()),\n    pad2(d.getSeconds())\n  ].join(\"\")\n}\n\nexport function filestampUTC(d: Date = new Date()): string {\n  return [\n    d.getUTCFullYear(),\n    pad2(d.getUTCMonth() + 1),\n    pad2(d.getUTCDate()),\n    \"-\",\n    pad2(d.getUTCHours()),\n    pad2(d.getUTCMinutes()),\n    pad2(d.getUTCSeconds())\n  ].join(\"\")\n}\n","import { ExifDateTime } from \"exiftool-vendored\"\nimport { DateTime, Zone, ZoneOptions } from \"luxon\"\nimport { inspect } from \"util\"\nimport { compact } from \"../../fe/Array\"\nimport { blank, mapNotBlank } from \"../../fe/Blank\"\nimport { dayMs } from \"../../fe/Date\"\nimport { map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, isNumber, lte, round, toInt } from \"../../fe/Number\"\nimport { compactValues, pick } from \"../../fe/Object\"\nimport { leftPad, pad2 } from \"../../fe/Pad\"\nimport { DateInterval } from \"./DateInterval\"\nimport { Dated, datedToDateTime, datedToPrecisionMs } from \"./Dated\"\nimport { datedToMillis } from \"./DatedToMillis\"\nimport { dateObjectToExifDateTime } from \"./ExifDateTime\"\nimport { ISO_YMD_LAX_RE, ISO_YMD_RE } from \"./FuzzyDateParser\"\nimport {\n  getDay,\n  getHour,\n  getMillisecond,\n  getMinute,\n  getMonth,\n  getSecond,\n  getYear\n} from \"./GetDateField\"\nimport { hasTime } from \"./HasTime\"\nimport { isDateTime } from \"./IsDateTime\"\nimport { datedToLocal } from \"./Localtime\"\nimport { normalizeZone, zoneToTzOffsetMinutes } from \"./Timezone\"\nimport { validYMD } from \"./ValidDate\"\nimport { getZoneName, hasZone } from \"./getZoneName\"\n\nfunction pad(n?: number, minLength: number = 2): string {\n  return n == null ? \"\" : leftPad(n, minLength, \"0\")\n}\n\nexport interface FuzzyDateObject {\n  year: number\n  month?: number\n  day?: number\n}\n\nexport class FuzzyDate {\n  constructor(\n    readonly year: number,\n    readonly month?: number,\n    readonly day?: number\n  ) {}\n\n  static fromISO(s: Maybe<string>): Maybe<FuzzyDate> {\n    if (blank(s)) return\n    const g = ISO_YMD_RE.exec(s)?.groups ?? ISO_YMD_LAX_RE.exec(s)?.groups\n    return g == null\n      ? undefined\n      : this.for({\n          year: toInt(g.year),\n          month: toInt(g.month),\n          day: toInt(g.day)\n        })\n  }\n\n  toJSON(): FuzzyDateObject {\n    return {\n      _ctor: \"FuzzyDate\",\n      ...this\n    }\n  }\n\n  static fromJSON(obj: Partial<FuzzyDateObject>) {\n    return this.for(obj)\n  }\n\n  static for(obj: Maybe<Partial<FuzzyDateObject>>): Maybe<FuzzyDate> {\n    if (obj == null || obj.year == null) return\n    const fd =\n      obj instanceof FuzzyDate\n        ? obj\n        : new FuzzyDate(obj.year, obj.month, obj.day)\n    return fd.isValid ? fd : undefined\n  }\n\n  static localToday() {\n    return toFuzzyDate(new Date())!\n  }\n\n  get isValid() {\n    // year is required:\n    if (!isNumber(this.year)) return false\n    // if day is not null, month and year must be defined:\n    if (isNumber(this.day) && !isNumber(this.month)) return false\n    return validYMD(this.year, this.month, this.day)\n  }\n\n  toString() {\n    return this.toISOString()\n  }\n\n  [inspect.custom]() {\n    return this.toISOString()\n  }\n\n  toISOString() {\n    return compact([this.year, this.month, this.day])\n      .map(ea => pad(ea))\n      .join(\"-\")\n  }\n\n  toLocal() {\n    return datedToLocal(this)\n  }\n\n  toDateTime() {\n    return DateTime.fromObject(pick(this, \"year\", \"month\", \"day\"))\n  }\n\n  toDate() {\n    return this.toDateTime().toJSDate()\n  }\n\n  toMillis() {\n    return this.toDateTime().toMillis()\n  }\n\n  /**\n   * @return the following date to this date:\n   * - if this is a year, return the following year\n   * - if this has month precision, return the next month\n   * - if this has day precision, return the following day\n   */\n  following() {\n    const dt = this.toDateTime()\n    return FuzzyDate.for(\n      this.day != null\n        ? pick(dt.plus({ day: 1 }), \"year\", \"month\", \"day\")\n        : this.month != null\n        ? pick(dt.plus({ month: 1 }), \"year\", \"month\")\n        : pick(dt.plus({ year: 1 }), \"year\")\n    )\n  }\n}\n\nexport const ignorableSubpaths: string[][] = []\n\nexport function addIgnorableSubpath(subpath: string[]) {\n  ignorableSubpaths.push(subpath)\n}\n\n// Only for tests\nexport function clearIgnorableSubpaths() {\n  ignorableSubpaths.length = 0\n}\n\nexport function zoneOffsetToName(\n  offsetMinutes: Maybe<number>,\n  includeUTCPrefix = true\n): Maybe<string> {\n  if (offsetMinutes == null) return\n  if (offsetMinutes === 0) return includeUTCPrefix ? \"UTC\" : \"\"\n  const sign = offsetMinutes < 0 ? \"-\" : \"+\"\n  // Round to nearest :15 minute:\n  const rounded = round(offsetMinutes / 15) * 15\n  const abs = Math.abs(rounded)\n  const hours = Math.floor(abs / 60)\n  const minutes = Math.floor(Math.abs(abs % 60))\n  return `${includeUTCPrefix ? \"UTC\" : \"\"}${sign}${pad(hours)}:${pad(minutes)}`\n}\n\n/**\n * DateTime doesn't retain timezone offsets being \"set\" or \"unset\", so we prefer\n * ExifDateTime.\n *\n * @param zoneName if undefined, the returned ExifDateTime will not have a zone or tzOffset\n */\nexport function toExifDateTime(\n  d: Maybe<Dated>,\n  zoneName?: Maybe<string>\n): Maybe<ExifDateTime> {\n  if (d instanceof ExifDateTime && (zoneName == null || d.zone === zoneName)) {\n    return d\n  }\n  if (d == null || !hasTime(d)) {\n    return\n  }\n\n  // DON'T USE ExifDateTime.fromDateTime(): it uses UnsetZoneOffsetMinutes.\n\n  const tzoffsetMinutes = mapNotBlank(zoneName, ea =>\n    zoneToTzOffsetMinutes(datedToMillis(d), ea)\n  )\n  if (zoneName != null && tzoffsetMinutes == null) {\n    return\n  }\n  return map(getYear(d), year =>\n    map(getMonth(d), month =>\n      map(getDay(d), day =>\n        map(getHour(d), hour =>\n          dateObjectToExifDateTime({\n            year,\n            month,\n            day,\n            hour,\n            minute: getMinute(d) ?? 0,\n            second: getSecond(d) ?? 0,\n            millisecond: getMillisecond(d),\n            tzoffsetMinutes,\n            rawValue: (d as any).rawValue,\n            zone: zoneName\n          })\n        )\n      )\n    )\n  )\n}\n\nexport function datedToOffsetMinutes(d: Maybe<Dated>): Maybe<number> {\n  return map(d, ea =>\n    ea instanceof ExifDateTime\n      ? ea.tzoffsetMinutes\n      : isDateTime(ea)\n      ? ea.offset\n      : undefined\n  )\n}\n\nexport function datedToISO(\n  d: Maybe<Dated>,\n  includeOffset?: boolean,\n  precisionMs?: number\n): Maybe<string> {\n  if (d == null) {\n    return\n  } else if (d instanceof DateInterval) {\n    return d.toString({ includeOffset })\n  } else if (!hasTime(d) || (precisionMs ?? datedToPrecisionMs(d)) >= dayMs) {\n    return datedToYMD(d)\n  } else {\n    return toExifDateTime(d, getZoneName(d))?.toISOString({ includeOffset })\n  }\n}\n\nconst ExifFmt = \"yyyy:MM:dd HH:mm:ss.SSS\"\nconst ExifFmtWithZone = ExifFmt + \"ZZ\"\n\nexport function datedToEXIF(d: Maybe<Dated | number>): Maybe<string> {\n  if (d == null) return\n  if (d instanceof DateInterval) {\n    // EXIF dates don't support date intervals. Just render the middle\n    // datetime:\n    return datedToEXIF(d.middle)\n  }\n\n  const dt = isNumber(d) ? DateTime.fromMillis(d) : datedToDateTime(d)\n  return dt == null || !dt.isValid\n    ? undefined\n    : dt.toFormat(hasZone(d) ? ExifFmtWithZone : ExifFmt)\n}\n\nexport function datedToYMD(d: Dated, separator = \"-\"): string {\n  return compact([getYear(d), getMonth(d), getDay(d)])\n    .map(ea => pad(ea))\n    .join(separator)\n}\n\nexport function toFuzzyDate(d: Maybe<Dated>): Maybe<FuzzyDate> {\n  return map(d, ea =>\n    map(getYear(ea), y => new FuzzyDate(y, getMonth(ea), getDay(ea)))\n  )\n}\n\nexport function sameDay(dis: Maybe<Dated>, dat: Maybe<Dated>): boolean {\n  return lte(diffMillis(dis, dat), dayMs)\n}\n\nexport function diffMillis(\n  a: Maybe<Dated | number>,\n  b: Maybe<Dated | number>\n): Maybe<number> {\n  const [aMs, bMs] = [a, b].map(datedToMillis)\n  return aMs == null || bMs == null ? undefined : aMs - bMs\n}\n\nexport function closeTo(\n  a: Maybe<Dated | number>,\n  b: Maybe<Dated | number>,\n  maxDiffMs: number\n): boolean {\n  return mapOr(\n    diffMillis(a, b),\n    ea => Math.abs(ea) < maxDiffMs,\n    () => false\n  )\n}\n\nexport function gtDated(a: Maybe<Dated>, b: Maybe<Dated>): boolean {\n  if (a == null || b == null) return false\n  for (const f of [\n    getYear,\n    getMonth,\n    getDay,\n    getHour,\n    getMinute,\n    getSecond,\n    getMillisecond\n  ]) {\n    if (lte(f(a), f(b))) return false\n  }\n  return true\n}\n\n/**\n * @param index must be [0, splits]\n * @param splits must be >= 1\n */\nexport function dateBetween(\n  a: Maybe<Dated>,\n  b: Maybe<Dated>,\n  index = 1,\n  splits = 1\n): Maybe<Dated> {\n  if (datedToMillis(a) == null || datedToMillis(b) == null) return\n  const [start, end] = [a, b].map(d => datedToMillis(d)!).sort()\n  const diff = end - start\n  const delta = diff / (splits + 1)\n  const zoneA = getZoneName(a!)\n  const zoneB = getZoneName(b!)\n  const zone = zoneA === zoneB ? zoneA : undefined\n  const result = DateTime.fromMillis(start + delta * index, { zone })\n  return [a, b].some(ea => !hasTime(ea)) ? toFuzzyDate(result) : result\n}\n\nexport function setZone(\n  d: Maybe<Dated>,\n  zone: Maybe<string | number | Zone>,\n  opts?: ZoneOptions\n) {\n  const o = {\n    ...compactValues(opts),\n    keepLocalTime: opts?.keepLocalTime ?? !hasZone(d)\n  }\n  const z = normalizeZone(zone)\n  if (d == null || z == null || !hasTime(d)) return\n  return d instanceof DateInterval\n    ? d.setZone(z, o)\n    : toExifDateTime(d)?.setZone(z, o)\n}\n\nexport function toIsoDate(d: Maybe<Dated>): Maybe<string> {\n  if (d == null) return\n  const arr = [getYear(d), getMonth(d), getDay(d)]\n  return gt0(arr[0]) ? compact(arr).map(pad2).join(\"-\") : undefined\n}\n\nexport function utcToZone(\n  dated: Dated,\n  zoneName: string | Zone\n): Maybe<DateTime> {\n  // don't use setZone() here: we want to adjust the local time.\n  let date = datedToDateTime(dated)\n  if (date == null) return\n  const priorZone = getZoneName(dated)\n  if (priorZone == null || priorZone === \"UTC\") {\n    date = date.toUTC(0, { keepLocalTime: true })\n  }\n  return date.setZone(zoneName)\n}\n","import { ExifDate, ExifDateTime } from \"exiftool-vendored\"\nimport { DateTime } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, startsWith, uniq } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe, MaybeNull } from \"../../fe/MaybeTypes\"\nimport { mapNumeric, toInt } from \"../../fe/Number\"\nimport { toA } from \"../../fe/toA\"\nimport { first } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport {\n  RegExpEscaped,\n  RegExpOptional,\n  concatRegexp,\n  escapeRegExp\n} from \"../RegExp\"\nimport { stripDSC } from \"../fs/FuzzyNames\"\nimport { Settings } from \"../settings/Settings\"\nimport { DateInterval } from \"./DateInterval\"\nimport { Dated, isDated } from \"./Dated\"\nimport { datedToMillis } from \"./DatedToMillis\"\nimport {\n  UnsetZone,\n  parseExifDateTime,\n  parseExifDateTimeFormat,\n  parseExifDateTimeFromRFC2822\n} from \"./ExifDateTime\"\nimport { FuzzyDate, ignorableSubpaths } from \"./FuzzyDate\"\nimport { isExifDateTime } from \"./HasTime\"\nimport { isDateTime } from \"./IsDateTime\"\nimport { monthName2index, monthNames } from \"./Month\"\nimport { isValidDate } from \"./ValidDate\"\n\nconst logger = lazy(() => mkLogger(\"date.FuzzyDateParser\"))\n\nexport interface FuzzyDateParserOptions {\n  fuzzyDateParsing?: boolean\n  fuzzyYearParsing?: boolean\n}\n\nexport function extractDateFromPath(\n  path: string[]\n): Maybe<FuzzyDate | ExifDateTime> {\n  return logger().tap({\n    msg: \"extractDateFromPath\",\n    result: FuzzyDateParser.instance().extractDateFromPath(path),\n    meta: { path }\n  })\n}\n\nexport function parseYMD(s: string): Maybe<FuzzyDate | ExifDateTime> {\n  return FuzzyDateParser.instance().parseYMD(s)\n}\n\nexport function parseFuzzyDate(s: string): Maybe<FuzzyDate> {\n  return FuzzyDateParser.instance().parse(s)\n}\n\n// We're using literal RegExps here so syntax highlighting can help find\n// issues:\n\n// negative numeric lookbehind to prevent \"1992 AUG 1971\" from being parsed as\n// \"2 AUG 1971\":\nexport const nonNumericLookbackRE = /(?<!\\d)/\n\nexport const yearRE = /(?<year>(?:19|20)[0-9]{2})/ // 1975, 2014\nexport const yearishRE = /(?<year>(?:19|20)?[0-9]{2})/ // 1975, 2014\n\nexport const monthRE = /(?<month>[0-3][0-9])/ // < requires 0-padded month\nexport const monthishRE = /(?<month>[0-3]?[0-9])/\n\nexport const dayRE = /(?<day>[1-3][0-9]|0[1-9])/ // < requires 0-padded day\nexport const dayishRE = /(?<day>[1-3][0-9]|0?[1-9])/\n\nexport const hourRE = /(?<hour>1[0-9]|2[0-3]|0[0-9])/\n\nexport const minuteRE = /(?<minute>[0-5][0-9])/\n\nexport const secondRE = /(?<second>[0-5][0-9])/\n\nexport const seps = /([-\\.\\,:_/ |])/\nexport const optSeps = new RegExp(seps.source + \"?\")\n\nexport const subsecRE = /(?<subsec>\\.[0-9]+)?/\n\nexport function dateTimeBetween(a: DateTime, b: DateTime): DateTime {\n  // When would this ever be invalid (and therefor null)?\n\n  // Assuming it can't ever be invalid, we're bang-ing the end. Yeah. We're\n  // end bangers over here. JOIN US WE KNOW YOU ARE BANGCURIOUS\n  return a.until(b).divideEqually(2)[0].end!\n}\n\nexport function agoMs(dated: Maybe<Dated>): Maybe<number> {\n  return mapNumeric(datedToMillis(dated), ea => Date.now() - ea)\n}\n\nexport const ISO_YMD_RE = concatRegexp([\n  /^/,\n  yearRE,\n  RegExpOptional.from(/-/, monthRE, RegExpOptional.from(/-/, dayRE)),\n  /$/\n])\n\nexport const ISO_YMD_LAX_RE = concatRegexp([\n  /^/,\n  yearishRE,\n  RegExpOptional.from(/-/, monthishRE, RegExpOptional.from(/-/, dayishRE)),\n  /$/\n])\n\nexport function parseDateTime(\n  s: Maybe<string> | Maybe<string>[],\n  defaultZone?: string\n): Maybe<DateTime> {\n  const d = parseDated({\n    input: s,\n    defaultZone,\n    descPredicate: ea => ea.match(/DateTime/i) != null\n  })\n\n  return isDateTime(d) ? d : isExifDateTime(d) ? d.toDateTime() : undefined\n}\n\nconst ZoneSuffixes = [\n  { fmt: \"ZZ\", zone: undefined },\n  { fmt: \" ZZ\", zone: undefined },\n  { fmt: \"'Z'\", zone: \"UTC\" },\n  { fmt: \"\", zone: UnsetZone }\n]\n\n/**\n * Parses ISO, EXIF, and screenshot-formatted dates.\n */\nexport function parseDated({\n  input,\n  defaultZone,\n  descPredicate = () => true\n}: {\n  input: MaybeNull<Dated | string | Maybe<string>[]>\n  defaultZone?: string\n  descPredicate?: (desc: string) => boolean\n}): Maybe<Dated> {\n  if (input == null) return\n  if (isDated(input)) return input\n  const arr = uniq(compactBlanks(toA(input)).map(stripDSC))\n  if (arr.length === 0) return\n  for (const { desc, f } of [\n    // date interval (must be first):\n    {\n      desc: \"DateInterval.fromISO\",\n      f: (ea: string) => DateInterval.fromISO(ea)\n    },\n\n    // date and time:\n    {\n      desc: \"parseExifDateTime\",\n      // this calls ExifDateTime.fromISO and ExifDateTime.fromEXIF\n      f: (ea: string) => parseExifDateTime(ea, defaultZone)\n    },\n\n    ...flatten(\n      ZoneSuffixes.map(({ fmt, zone }) =>\n        Settings.extraDateTimeFormats.values.map(format => ({\n          desc: `parseExifDateTimeFormat(${format})`,\n          f: (ea: string) =>\n            parseExifDateTimeFormat({\n              input: ea,\n              format: format + fmt,\n              defaultZone: zone\n            })\n        }))\n      )\n    ),\n\n    { desc: \"ExifDateTime.fromRFC2822\", f: parseExifDateTimeFromRFC2822 },\n\n    // HEY FUTURE ME DO NOT RE-ADD JS DATE PARSING it forces everything to UTC\n\n    // just dates:\n\n    { desc: \"ExifDate.fromEXIF\", f: (ea: string) => ExifDate.fromEXIF(ea) },\n    {\n      desc: \"fuzzyDate.parseYMD\",\n      f: (ea: string) => FuzzyDateParser.instance().parseYMD(ea)\n    }\n  ]) {\n    if (descPredicate(desc)) {\n      for (const s of arr) {\n        const result = f(s)\n        if (result == null || !isValidDate(result)) continue\n\n        // Don't set zone here: that was the parser's job.\n\n        return logger().tap({\n          msg: \"parseDated()\",\n          result,\n          meta: {\n            s,\n            desc,\n            defaultZone\n          }\n        })\n      }\n    }\n  }\n  return\n}\n\nexport class FuzzyDateParser {\n  static readonly instance = lazy(() => new FuzzyDateParser())\n\n  private readonly ymdParsers: Parser[] = []\n  private readonly ymParsers: Parser[] = []\n  private readonly yParsers: Parser[] = []\n  private readonly allParsers: Parser[] = []\n\n  constructor(readonly opts: FuzzyDateParserOptions = {}) {\n    if (opts.fuzzyDateParsing == null) {\n      Settings.fuzzyDateParsing.watchLater(() => this.#setup())\n    }\n    if (opts.fuzzyYearParsing == null) {\n      Settings.fuzzyYearParsing.watchLater(() => this.#setup())\n    }\n    this.#setup()\n  }\n\n  get fuzzyDateParsing() {\n    return (\n      this.opts.fuzzyDateParsing ?? Settings.fuzzyDateParsing.valueOrDefault\n    )\n  }\n\n  get fuzzyYearParsing() {\n    return (\n      this.opts.fuzzyYearParsing ?? Settings.fuzzyYearParsing.valueOrDefault\n    )\n  }\n\n  parse(input: string): Maybe<FuzzyDate> {\n    return first(this.allParsers, p => p.apply(input))\n  }\n\n  parseYMD(input: string): Maybe<FuzzyDate> {\n    return first(this.ymdParsers, p => p.apply(input))\n  }\n\n  #addParser(arr: (RegExp | string | RegExpEscaped)[]) {\n    const p = new Parser(arr)\n    if (p.hasDay) {\n      this.ymdParsers.push(p)\n    } else if (p.hasMonth) {\n      if (this.fuzzyDateParsing) {\n        this.ymParsers.push(p)\n      }\n    } else if (this.fuzzyYearParsing) {\n      this.yParsers.push(p)\n    }\n  }\n\n  #setup() {\n    try {\n      this.ymdParsers.length = 0\n      this.ymParsers.length = 0\n      this.yParsers.length = 0\n      this.allParsers.length = 0\n\n      const allMonthsRE = new RegExpEscaped(\n        \"(?<monthname>\" + monthNames().map(escapeRegExp).join(\"|\") + \")\"\n      )\n\n      // Very conservative/restrictive patterns to guard against mmddyy or ddmmyy:\n      // ISO 8601: 1999-11-11 (the /\\2/ ensures consistent seps).\n      // Seps are required if month and day aren't padded:\n      this.#addParser([yearRE, seps, monthishRE, /\\2/, dayishRE])\n\n      // If month and day are padded, seps are optional:\n      this.#addParser([yearRE, optSeps, monthRE, /\\2/, dayRE])\n\n      // 2011:Feb:6\n      this.#addParser([yearRE, optSeps, allMonthsRE, /\\2/, dayishRE])\n\n      // August 6, 1994\n      this.#addParser([allMonthsRE, optSeps, dayishRE, /,?\\2/, yearRE])\n\n      // 6 August 1994\n      this.#addParser([\n        nonNumericLookbackRE,\n        dayishRE,\n        optSeps,\n        allMonthsRE,\n        /,?\\2/,\n        yearRE\n      ])\n\n      // The following are only year + month (no date):\n      // 1994-08\n      this.#addParser([yearRE, seps, monthishRE])\n\n      // Sept 1994 or September 1994\n      this.#addParser([allMonthsRE, seps, yearRE])\n\n      // 2001 August or 2001 AUG\n      this.#addParser([yearRE, seps, allMonthsRE])\n\n      this.#addParser([nonNumericLookbackRE, yearRE])\n\n      this.allParsers.push(\n        // order matters! We want the most specific parsers first:\n        ...this.ymdParsers,\n        ...this.ymParsers,\n        ...this.yParsers\n      )\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  extractDateFromPath(path: string[]): Maybe<FuzzyDate | ExifDateTime> {\n    if (!Settings.usePathsToInferDates.valueOrDefault) return\n\n    // https://en.wikipedia.org/wiki/Design_rule_for_Camera_File_system\n    ignorableSubpaths.forEach(ea => {\n      if (startsWith(path, ea)) {\n        path.splice(0, ea.length)\n      }\n    })\n    path = path.filter(\n      // If it's a camera-provided serial number, ignore that part of the path.\n      ea => notBlank(ea) && path[0].match(ignorableDCF) == null\n    )\n    // Don't modify path!\n    const reversePath = [...path].reverse()\n\n    // First try to find a YMD in one of the path elements individually:\n    return (\n      first(reversePath, ea => this.parseYMD(ea)) ??\n      // Then try to find YMD by joining the paths (reverse first, so nearer\n      // datestamps get picked first)\n      this.parseYMD(reversePath.slice(0, 4).join(\" \")) ??\n      // is it a path like 2019/08/01?\n      this.parseYMD(path.slice(0, 4).join(\" \")) ??\n      // the ymParsers will be empty if fuzzy date parsing is off\n\n      first(this.ymParsers, parser =>\n        first(reversePath, ea => parser.apply(ea))\n      ) ??\n      first(this.ymParsers, parser => parser.apply(path.join(\" \"))) ??\n      first(this.yParsers, parser =>\n        first(reversePath.slice(1), ea => parser.apply(ea))\n      )\n    )\n  }\n}\n\nclass Parser {\n  readonly regex: RegExp\n  constructor(arr: Maybe<RegExp | string | RegExpEscaped>[]) {\n    // We always add a negative lookahead to the end of the regex to avoid\n    // matching against long numeric strings:\n    this.regex = concatRegexp([...arr, /(?:$|[^\\d])/], \"i\")\n  }\n\n  get source() {\n    return this.regex.source\n  }\n\n  get hasDay() {\n    return this.source.includes(\"(?<day>\")\n  }\n\n  get hasMonth() {\n    return (\n      this.source.includes(\"(?<month>\") || this.source.includes(\"(?<monthname>\")\n    )\n  }\n\n  apply(s: string) {\n    const rec = this.regex.exec(s)?.groups\n    if (rec == null) return\n    return FuzzyDate.for({\n      year: toInt(rec.year),\n      month: toInt(rec.month) ?? monthName2index(rec.monthname),\n      day: toInt(rec.day)\n    })\n  }\n}\n\nconst ignorableDCF =\n  /^((DCIM)|(DSC[_0F]?|IMG[-_]|GOPRO|MOV[-_]|MVI[-_]|P_?)\\d+)$/i\n","import { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { Dated } from \"./Dated\"\nimport { hasTime } from \"./HasTime\"\n\nexport function getYear(d: Maybe<Dated>): Maybe<number> {\n  return d instanceof Date ? d.getFullYear() : d?.year\n}\n\n/**\n * @return 1-12, like normal humans\n */\nexport function getMonth(d: Maybe<Dated>): Maybe<number> {\n  return d instanceof Date ? d.getMonth() + 1 : d?.month\n}\n\nexport function getDay(d: Maybe<Dated>): Maybe<number> {\n  return d instanceof Date ? d.getDate() : d?.day\n}\n\nexport function getHour(d: Maybe<Dated>): Maybe<number> {\n  return d instanceof Date ? d.getHours() : (d as any)?.hour\n}\n\nexport function getMinute(d: Maybe<Dated>): Maybe<number> {\n  return d instanceof Date ? d.getMinutes() : (d as any)?.minute\n}\n\nexport function getSecond(d: Maybe<Dated>): Maybe<number> {\n  return d instanceof Date ? d.getSeconds() : (d as any)?.second\n}\n\nexport function getMillisecond(d: Maybe<Dated>): Maybe<number> {\n  return d instanceof Date ? d.getMilliseconds() : (d as any)?.millisecond\n}\n\nexport function getCentisecond(d: Maybe<Dated>): Maybe<number> {\n  // NOTE: we floor here rather than rounding as we don't want to deal with\n  // rounding up to a different minute or hour (or day or year)\n  // HONEST IT'S OK IT'S ONLY +/- 5 milliseconds.\n  return map(getMillisecond(d), ea => Math.floor(ea / 10))\n}\n\nexport function hasSeconds(d: Maybe<Dated>): boolean {\n  return (\n    hasTime(d) &&\n    (gt0(getMinute(d)) || gt0(getSecond(d)) || gt0(getMillisecond(d)))\n  )\n}\n/**\n * \".###\" or \".#####\" from the milliseconds in `d`.\n */\n\nexport function getSecMs(d: Maybe<Dated>): Maybe<string> {\n  return map(getSecond(d), sec => {\n    const ms = getMillisecond(d) ?? 0\n    let s = (sec + ms / 1000).toString()\n    if (sec < 10) s = \"0\" + s\n    if (ms === 0) s = s + \".\"\n    while (s.length < 6) {\n      s = s + \"0\"\n    }\n    return s\n  })\n}\n","import { ExifDateTime } from \"exiftool-vendored\"\nimport { DateTime } from \"luxon\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { isObject } from \"../../fe/Object\"\nimport { DateInterval } from \"./DateInterval\"\nimport { Dated } from \"./Dated\"\n\n/**\n * @return true iff `d` is a class type that supports time resolution\n */\nexport function hasTime(\n  d: Maybe<Dated>\n): d is Date | ExifDateTime | DateTime | DateInterval {\n  if (!isObject(d)) return false\n\n  // We can't do any safe heuristics here:\n  if (d instanceof Date) return true\n\n  const a = d as any\n  return gt0(a.hour) || gt0(a.minute) || gt0(a.second) || gt0(a.millisecond)\n}\n\nexport function isExifDateTime(d: any): d is ExifDateTime {\n  return d instanceof ExifDateTime\n}\n","import { DateTime } from \"luxon\"\n\nexport function isDateTime(d: any): d is DateTime {\n  // We may get a DateTime from exiftool-vendored, which may be running a\n  // different version of Luxon, so we can't just check with instanceof:\n  return DateTime.isDateTime(d) ?? false\n}\n","import { DateTime, Zone } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { localToDate } from \"../../fe/Date\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isNumber, toGt0 } from \"../../fe/Number\"\nimport { Settings } from \"../settings/Settings\"\nimport { DateObject, dateObjectToDateTime } from \"./Date\"\nimport { Dated, datedToDateTime, isoToDated } from \"./Dated\"\nimport { datedToMillis } from \"./DatedToMillis\"\nimport { shortDateTimeFormat } from \"./ExtendedDate\"\nimport { FuzzyDate } from \"./FuzzyDate\"\nimport {\n  getCentisecond,\n  getDay,\n  getHour,\n  getMinute,\n  getMonth,\n  getSecond,\n  getYear\n} from \"./GetDateField\"\nimport { hasTime } from \"./HasTime\"\nimport { normalizeZone } from \"./Timezone\"\n\nconst datesBeforeAreEstimated = lazy(\n  () =>\n    isoToLocal(Settings.datesBeforeAreEstimated.valueOrDefault) ??\n    isoToLocal(Settings.datesBeforeAreEstimated.defaultValue)!\n)\n\nexport function localIsFuzzy(localCs: Maybe<number>): boolean {\n  return (\n    localCs == null ||\n    // If no minute, second, or centisecond, it's fuzzy\n    localCs % 100_00_00 === 0 ||\n    localCs < datesBeforeAreEstimated()\n  )\n}\n\nexport function isoToLocal(iso: Maybe<string>): Maybe<number> {\n  return map(isoToDated(iso), datedToLocal)\n}\n\nexport function maybeDatedToLocal(d: Maybe<Dated | number>): Maybe<number> {\n  return map(d, datedToLocal)\n}\n\nexport function datedToLocal(d: Dated | number): number {\n  if (isNumber(d)) return tsToLocal(d)\n  const s = datedToLocalSec(d)\n  return s * 100 + (getCentisecond(d) ?? 0)\n}\n\nexport function datedToLocalSec(d: Dated | number): number {\n  if (isNumber(d)) return Math.floor(tsToLocal(d) / 100)\n  let result = 0\n  for (const f of [getYear, getMonth, getDay, getHour, getMinute, getSecond]) {\n    result = result * 100 + (f(d) ?? 0)\n  }\n  return result\n}\n\nexport function localToDateObject(\n  local: Maybe<number>,\n  offset?: Maybe<string | number | Zone>\n): Maybe<DateObject> {\n  if (local == null || local < 0) return\n  let i = local\n  const pop2 = () => {\n    const result = i % 100\n    i = Math.floor(i / 100)\n    return result\n  }\n  const millisecond = 10 * pop2() // < because centiseconds\n  const second = pop2()\n  const minute = pop2()\n\n  // DateTime freaks out if hour, day, or month is 0.\n  const hour = toGt0(pop2())\n  const day = toGt0(pop2())\n  const month = toGt0(pop2())\n\n  // the remainders are the year\n  const year = i\n\n  return {\n    year,\n    month,\n    day,\n    hour,\n    minute,\n    second,\n    millisecond,\n    zone: normalizeZone(offset)\n  }\n}\n\nexport function fmtLocalDateShort(\n  local: number,\n  locale: Maybe<string>\n): string {\n  return shortDateTimeFormat(locale).format(localToDate(local))\n}\n\nexport function localToDateTime(\n  local: Maybe<number>,\n  offset?: Maybe<number>\n): Maybe<FuzzyDate | DateTime> {\n  const obj = localToDateObject(local, offset)\n  return hasTime(obj) ? dateObjectToDateTime(obj) : FuzzyDate.for(obj)\n}\n\n/**\n * Convert local numeric to millis-from-common-epoch timestamp\n */\nexport function localToTs(\n  local: Maybe<number>,\n  offset?: Maybe<number>\n): Maybe<number> {\n  return map(localToDateTime(local, offset), datedToMillis)\n}\n\nexport function nowLocal(zone?: Maybe<string | Zone>) {\n  return agoLocal(0, zone)\n}\n\nexport function agoLocal(agoMs: number, zone?: Maybe<string | Zone>) {\n  return tsToLocal(Date.now() - agoMs, zone)\n}\n\n/**\n * This should only be used by tests, as a timestamp has already lost it's\n * relevant timezone offset.\n * @param ts is a millis-from-common-epoch timestamp\n */\nexport function tsToLocal(ts: number, zone?: string | Zone): number {\n  return datedToLocal(DateTime.fromMillis(ts, { zone }))!\n}\n\n/**\n * @return local numeric of `local` plus `ms` millis\n */\nexport function localPlusMs(local: number, ms: number): number {\n  return datedToLocal(datedToDateTime(localToDateTime(local))!.plus(ms))!\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { sort } from \"../../fe/ArraySort\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { times } from \"../../fe/Number\"\nimport { CaseInsensitiveMap } from \"../CaseInsensitiveMap\"\n\nconst m = lazy(() => {\n  const result = new CaseInsensitiveMap<number>()\n  // `undefined` uses the system locale:\n  for (const locale of [\"en-US\", undefined]) {\n    // Accept \"sep\" or \"sept\" for September:\n    result.set(\"Sept\", 9)\n    result.set(\"Sept.\", 9)\n    for (const flavorOfTheMonth of [\"short\", \"long\"] as const) {\n      const dtf = new Intl.DateTimeFormat(locale, {\n        month: flavorOfTheMonth\n      })\n      times(12, index => {\n        const monthName = dtf.format(new Date(2017, index))\n        result.set(monthName, index + 1)\n        if (flavorOfTheMonth === \"short\" && locale === \"en-US\") {\n          // TODO: do other locales add a period after the abbreviated month name?\n          result.set(monthName + \".\", index + 1)\n        }\n      })\n    }\n  }\n  return result\n})\n\nexport function monthName2index(monthName: Maybe<string>): Maybe<number> {\n  return monthName == null ? undefined : m().get(monthName)\n}\n\nexport function monthNames(): string[] {\n  return sort([...m().keys()])\n}\n","import { UnsetZoneName, UnsetZoneOffsetMinutes } from \"exiftool-vendored\"\nimport { FixedOffsetZone, Info, Zone } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isInvalidNumber, isNumber, toInt } from \"../../fe/Number\"\nimport { isEmptyObj } from \"../../fe/Object\"\nimport { pad2 } from \"../../fe/Pad\"\nimport { isString } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { leastBy } from \"../Array\"\nimport { RegExpEscaped, RegExpOptional, concatRegexp } from \"../RegExp\"\n\n// Pacific/Kiritimati is +14:00 TIL\n// https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\nexport const MaxTzOffsetHours = 14\n\n// See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n\n// The FuzzyDate.spec assumes these values include a + or - prefix:\nexport const ValidTimezoneOffsets = [\n  \"-12:00\",\n  \"-11:00\",\n  \"-10:00\",\n  \"-09:30\",\n  \"-09:00\",\n  \"-08:00\",\n  \"-07:00\",\n  \"-06:00\",\n  \"-05:00\",\n  \"-04:00\",\n  \"-03:30\",\n  \"-03:00\",\n  \"-02:30\",\n  \"-02:00\",\n  \"-01:00\",\n  \"+00:00\",\n  \"+01:00\",\n  \"+02:00\",\n  \"+03:00\",\n  \"+03:30\",\n  \"+04:00\",\n  \"+04:30\",\n  \"+05:00\",\n  \"+05:30\",\n  \"+05:45\",\n  \"+06:00\",\n  \"+06:30\",\n  \"+07:00\",\n  \"+08:00\",\n  \"+08:45\",\n  \"+09:00\",\n  \"+09:30\",\n  \"+10:00\",\n  \"+10:30\",\n  \"+11:00\",\n  \"+12:00\",\n  \"+12:45\",\n  \"+13:00\",\n  \"+13:45\",\n  \"+14:00\"\n] as const\n\nexport type TimezoneOffset = (typeof ValidTimezoneOffsets)[number]\n\nexport function offsetToMinutes(offset: TimezoneOffset): number {\n  const [h, m] = offset.split(\":\").map(Number)\n  // we can't just return `h * 60 + m`: that doesn't work with negative offsets!\n  const sign = offset.startsWith(\"-\") ? -1 : 1\n  return sign * (Math.abs(h) * 60 + m)\n}\n\n// export const localTzOffsetMinutes = lazy(() => DateTime.local().offset, hourMs)\n\nconst AllZoneOffsetMinutes = lazy(() =>\n  ValidTimezoneOffsets.map(offsetToMinutes)\n)\n\nexport function normalizeZoneOffsetMinutes(\n  tzoffsetMinutes: Maybe<number>,\n  allowedSlopMinutes = 14\n): Maybe<number> {\n  if (\n    !isNumber(tzoffsetMinutes) ||\n    Math.abs(tzoffsetMinutes) > MaxTzOffsetHours * 60\n  ) {\n    return\n  }\n\n  const closest = leastBy(AllZoneOffsetMinutes(), ea =>\n    Math.abs(ea - tzoffsetMinutes)\n  )\n  return closest != null &&\n    Math.abs(closest - tzoffsetMinutes) < allowedSlopMinutes\n    ? closest\n    : undefined\n}\n\n/**\n * @param s if number, it's assumed to be a zone offset in minutes\n */\nexport function isValidZone(s: Maybe<number | string | Zone>): boolean {\n  return normalizeZone(s) != null\n}\n\nconst ZuluPrimitives = [\n  0,\n  \"0\",\n  \"Z\",\n  \"GMT\",\n  \"UTC\",\n  \"GMT+0\",\n  \"Etc/UTC\",\n  \"GMT+00:00\"\n]\n\nfunction isUTCPrimitive(s: any): boolean {\n  return ZuluPrimitives.includes(s as any)\n}\n\nexport function isUTCZone(s: Maybe<number | string | Zone>): boolean {\n  return isUTCPrimitive(s) || normalizeZone(s)?.offset(Date.now()) === 0\n}\n\n/**\n * Attempt to avoid https://github.com/moment/luxon/issues/923\n *\n * @param s if number, it's assumed to be a zone offset in minutes\n *\n * @return a valid Zone, or undefined\n */\nexport function normalizeZone(s: Maybe<number | string | Zone>): Maybe<Zone> {\n  if (s == null || blank(s) || isInvalidNumber(s)) return\n\n  if (isUTCPrimitive(s)) return FixedOffsetZone.utcInstance\n\n  const input = isNumber(s)\n    ? normalizeZoneOffsetMinutes(s)\n    : (isString(s)\n        ? isoToOffsetMinutes(s) ?? ianaZoneToOffsetMinutes(s)\n        : undefined) ?? s\n  if (\n    input == null ||\n    input === UnsetZoneOffsetMinutes ||\n    input === UnsetZoneName\n  ) {\n    return undefined\n  }\n  // CAREFUL! If this gets null/undefined, it returns LocalTimeZone!\n  const z = Info.normalizeZone(input)\n  return !z.isValid || z.offset(Date.now()) === UnsetZoneOffsetMinutes\n    ? undefined\n    : z\n}\n\ninterface HasZone {\n  zone?: Maybe<Zone>\n  tzoffsetMinutes?: Maybe<number>\n  offset?: Maybe<number>\n  toMillis(): number\n}\n\nexport function zoneOffsetMinutes(d: HasZone) {\n  return (\n    normalizeZoneOffsetMinutes(d.tzoffsetMinutes) ??\n    normalizeZoneOffsetMinutes(d.offset) ??\n    map(d.zone, z => z.offset(d.toMillis()))\n  )\n}\n\n/**\n * @param ts timestamp\n */\nexport function zoneToTzOffsetMinutes(\n  ts: Maybe<number>,\n  zone: Maybe<number | string | Zone>\n): Maybe<number> {\n  if (ts == null || zone == null) return\n  const z = normalizeZone(zone)\n  return true === z?.isValid ? (z as Zone).offset(ts) : undefined\n}\n\nexport function fmtOffsetMinutes(minutes: number): string {\n  if (!isValidZone(minutes)) return \"\"\n  const abs = Math.abs(Math.round(minutes))\n  const h = Math.floor(abs / 60)\n  const m = abs - h * 60\n  return (minutes >= 0 ? \"+\" : \"-\") + pad2(h) + \":\" + pad2(m)\n}\n\nexport function zoneToExifOffsetMinutes(\n  ts: Maybe<number>,\n  zone: Maybe<number | string | Zone>\n): Maybe<string> {\n  const mins = zoneToTzOffsetMinutes(ts, zone)\n  return mins == null ? undefined : fmtOffsetMinutes(mins)\n}\n\n// these group names can't collide with FuzzyDate: this RegExp gets concatted\n// with the other patterns!\nconst utcRE = /\\b(?<utc>(?:Z|UTC|GMT))\\b/ // case sensitive, as per ISO\n\n// https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC\n// ±[hh]:[mm], ±[hh][mm], or ±[hh]\n\n// (PESKY: both hyphen-minus and minus sign are valid)\nconst signRE = /(?<tzSign>[-±+−])/\nconst negativeRE = /[-−]/\n\n// HOUR OFFSET REQUIRES PADDING! DateInterval parsing will fail otherwise\nconst paddedHourRE = /(?<tzHour>[01][0-9])/\nconst hourRE = /(?<tzHour>[01]?[0-9])/\n// colons are optional (!!)\nconst minRE = /(?::(?<tzMinutes>(?:00|15|30|45)))/\n\nexport const TimezoneOffsetRE = lazy(() =>\n  concatRegexp([\n    new RegExpEscaped(\"(?:\"),\n    utcRE,\n    new RegExpEscaped(\"|\"),\n    signRE,\n    paddedHourRE,\n    RegExpOptional.from(minRE),\n    new RegExpEscaped(\")\"),\n    // Either match the end of the string, or NOT a bit of an ISO timestamp\n    // (like \"T\" or \"/\"),\n    /(?:$|[^-−+:_\\d\\.T\\/])/\n  ])\n)\n\nexport function isoToOffsetMinutes(iso: string): Maybe<number> {\n  return isUTCPrimitive(iso)\n    ? 0\n    : timezoneOffsetFromRegExpMatch(TimezoneOffsetRE().exec(iso))\n}\n\nexport function timezoneOffsetFromRegExpMatch(\n  m: RegExpExecArray | null\n): Maybe<number> {\n  if (m == null || isEmptyObj(m.groups)) return\n  if (!blank(m.groups.utc)) return 0\n  const hours = toInt(m.groups.tzHour)\n  const sign = negativeRE.test(toS(m.groups.tzSign)) ? -1 : 1\n  const minutes = toInt(m.groups.tzMinutes) ?? 0\n  const result = hours == null ? undefined : sign * (hours * 60 + minutes)\n  return isValidZone(result) ? result : undefined\n}\n\nconst IanaZonePrefixRE = /\\b(?<ianaPrefix>(?:Etc\\/)?GMT)\\b/\n\nconst IanaTimezoneOffsetRE = lazy(() =>\n  concatRegexp([IanaZonePrefixRE, signRE, hourRE, RegExpOptional.from(minRE)])\n)\n\nexport function ianaZoneToOffsetMinutes(iana: string): Maybe<number> {\n  return timezoneOffsetFromRegExpMatch(IanaTimezoneOffsetRE().exec(iana))\n}\n\nexport function luxonTzOffsetToOffsetMinutes(\n  tz: Maybe<string>,\n  ts: Maybe<number>\n): Maybe<string> {\n  if (blank(tz)) return\n  // Is this a specific offset, like \"Etc/GMT+3\" or \"+03:00\"?\n  const offsetMinutes = ianaZoneToOffsetMinutes(tz) ?? isoToOffsetMinutes(tz)\n  if (offsetMinutes != null) {\n    return fmtOffsetMinutes(offsetMinutes)\n  }\n  //\n  if (ts != null) {\n    const z = normalizeZone(tz)\n    if (z != null) {\n      return fmtOffsetMinutes(z.offset(ts))\n    }\n  }\n  return\n}\n","import { ExifDate, ExifDateTime } from \"exiftool-vendored\"\nimport { DateTime } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { dayMs, hourMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { gt, gte } from \"../../fe/Primitive\"\nimport { mkLogger } from \"../Logger\"\nimport { within } from \"../Number\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Settings } from \"../settings/Settings\"\nimport { DateInterval } from \"./DateInterval\"\nimport { Dated, isDated, isoToDated } from \"./Dated\"\nimport { datedToMillis } from \"./DatedToMillis\"\nimport { FuzzyDate, datedToISO } from \"./FuzzyDate\"\nimport { datedToLocal } from \"./Localtime\"\n\nconst logger = lazy(() => mkLogger(\"date.ValidDate\"))\n\nconst badDates = lazy(() =>\n  compact(Settings.badDates.values.map(ea => isoToDated(ea)))\n)\nconst badDatesISO = lazy(() => compact(badDates().map(ea => datedToISO(ea))))\nconst badDatesLocal = lazy(() =>\n  compact(badDates().map(ea => datedToLocal(ea)))\n)\nconst badDatesTs = lazy(() => compact(badDates().map(ea => datedToMillis(ea))))\n\nexport function isValidDate(d: Dated | any): d is Dated {\n  if (d == null) return false\n  const why = whyNotValidDate(d)\n  return logger().tap({\n    msg: \"isValidDate()\",\n    result: why == null,\n    meta: { d, why }\n  })\n}\n\nexport function whyNotValidDate(d: Dated) {\n  if (!isDated(d)) return \"not Dated\"\n  else if (\n    d instanceof ExifDateTime ||\n    d instanceof DateInterval ||\n    d instanceof DateTime ||\n    d instanceof FuzzyDate\n  ) {\n    if (!d.isValid)\n      return compact([\"not valid\", (d as any)?.invalidExplanation]).join(\": \")\n  } else if (d instanceof Date) {\n    if (isNaN(d.getTime())) return \"not valid js Date\"\n  } else if (d instanceof ExifDate) {\n    if (!validYMD(d.year, d.month, d.day)) {\n      return \"not valid YMD\"\n    }\n  } else {\n    const dt = DateTime.fromObject(d)\n    if (!dt.isValid) {\n      return \"not valid: \" + dt.invalidExplanation\n    }\n  }\n\n  if (badDatesTs().includes(datedToMillis(d)!)) {\n    return \"bad date (via millis)\"\n  } else if (badDatesLocal().includes(datedToLocal(d))) {\n    return \"bad date (via localtime)\"\n  } else if (badDatesISO().includes(datedToISO(d)!)) {\n    return \"bad date (via ISO)\"\n  } else {\n    return\n  }\n}\n\nexport function mapValidDate<D extends Dated, T>(\n  obj: Maybe<D>,\n  f: (date: D) => T\n): Maybe<T> {\n  return isValidDate(obj) ? f(obj) : undefined\n}\n\nconst minYear = lazy(() => Settings.minValidYear.valueOrDefault, hourMs)\nconst maxYear = lazy(() => new Date(Date.now() + dayMs).getFullYear(), hourMs)\nconst maxMonth = lazy(() => new Date(Date.now() + dayMs).getMonth() + 1, hourMs)\nlater(() => {\n  Settings.minValidYear.watchLater(() => minYear.unset())\n  ee().on(\"clearCache\", () => {\n    minYear.unset()\n    maxYear.unset()\n    maxMonth.unset()\n  })\n})\n\nexport function validYear(year: Maybe<number>) {\n  return within(minYear(), maxYear(), year)\n}\n\nexport function validMonth(month: Maybe<number>, year?: number) {\n  return gte(year, maxYear()) && gt(month, maxMonth())\n    ? false\n    : within(1, 12, month)\n}\n/**\n * @return true iff the given month and day values are valid for the given year\n */\n\nexport function validDay(\n  year: Maybe<number>,\n  month: Maybe<number>,\n  day: Maybe<number>\n) {\n  // If Date doesn't change the day, that month and day exist for that year.\n  return gt0(day) && DateTime.fromObject({ year, month, day }).isValid\n}\n\nexport function validYMD(year?: number, month?: number, day?: number): boolean {\n  return (\n    validYear(year) &&\n    (gt0(month) ? validMonth(month, year) : true) &&\n    (gt0(day) ? validDay(year, month, day) : true)\n  )\n}\n","import {\n  ExifDateTime,\n  UnsetZoneName,\n  UnsetZoneOffsetMinutes\n} from \"exiftool-vendored\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isNumber } from \"../../fe/Number\"\nimport { DateInterval } from \"./DateInterval\"\nimport { Dated } from \"./Dated\"\nimport { isDateTime } from \"./IsDateTime\"\n\nexport function hasZone(dated: Maybe<Dated | number>): boolean {\n  if (dated == null || isNumber(dated)) {\n    return false\n  }\n\n  if (dated instanceof DateInterval || dated instanceof ExifDateTime) {\n    return dated.hasZone\n  }\n\n  if (isDateTime(dated)) {\n    return (\n      dated.zone != null &&\n      dated.zone.isValid &&\n      dated.zone.type !== \"local\" &&\n      dated.zone.name !== UnsetZoneName &&\n      dated.zone.offset(Date.now()) !== UnsetZoneOffsetMinutes\n    )\n  }\n\n  return false\n}\n\n// Used for creating DateTime. \"UTC\", or something like \"UTC+07:30\"\n\nexport function getZoneName(d: Maybe<Dated>): Maybe<string> {\n  if (d == null || d instanceof Date) {\n    return\n  } else if (isDateTime(d)) {\n    return d.zoneName === UnsetZoneName ? undefined : d.zone?.name\n  } else if (d instanceof ExifDateTime) {\n    return d.zone\n  } else {\n    // don't retain the timezone offset of the source date.\n    return\n  }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\n/**\n * @see https://sqlite.org/pragma.html#pragma_auto_vacuum\n */\nexport const AutoVacuumModes = strEnum(\"NONE\", \"FULL\", \"INCREMENTAL\")\nexport type AutoVacuumMode = StrEnumKeys<typeof AutoVacuumModes>\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { wrap } from \"../../fe/String\"\nimport { cacheDir_ } from \"../dir/CacheDir\"\nimport { NoLibraryErrorFlag } from \"../error/ErrorFlags\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { libraryUidStore } from \"../fs/UIDStore\"\nimport { writeTextfile_ } from \"../fs/WriteFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { Schema, Schemas } from \"./Schemas\"\n\n/**\n * The \"cache\" db is the local replica of the library database\n */\nexport async function cacheDbDir_(\n  libraryDir: Maybe<SimpleFileOrString> = Settings.libraryDir.valueOrDefault,\n  schema: Schema = Schemas.models\n): Promise<PosixFile> {\n  const store = libraryUidStore(libraryDir)\n  if (store == null) {\n    throw new Error(\"Library directory is not set\" + NoLibraryErrorFlag)\n  }\n\n  // Adding the UUID ensures that other libraries don't overwrite eachother:\n  const libraryUid = await store.readUid_()\n  const result = PosixFile.for(cacheDir_()).join(schema + \"-db-\" + libraryUid)\n  await result.mkdirp_()\n  const readme = result.join(\"README.txt\")\n  await writeTextfile_(\n    readme.nativePath,\n    ...wrap(\n      [\n        \"This folder is used by PhotoStructure for your library stored in\",\n        libraryDir,\n        \"You will corrupt your library if you remove this directory while PhotoStructure is running.\",\n        \"See https://forum.photostructure.com/t/whats-ps-force-local-db-replica/837 for details.\"\n      ].join(\"\\n\\n\")\n    )\n  )\n  return result\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { setupLibraryDataDir_ } from \"../dir/LibraryDirs\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { mkLogger } from \"../Logger\"\nimport { Settings } from \"../settings/Settings\"\nimport { cacheDbDir_ } from \"./CacheDbDir\"\nimport { pathToDb, Schema, Schemas, SqliteBase } from \"./Schemas\"\nimport { assertDirSQLiteReadWrite_ } from \"./SQLiteReadWrite\"\n\nconst logger = lazy(() => mkLogger(\"db.CheckLocalDbReplica\"))\n\nexport async function cacheDbFile_({\n  libraryDir = Settings.libraryDir.valueOrDefault,\n  schema = Schemas.models\n}: { libraryDir?: Maybe<SimpleFileOrString>; schema?: Schema } = {}) {\n  return (await cacheDbDir_(libraryDir, schema)).join(SqliteBase)\n}\n\n/**\n * @throw if the library is blank\n */\nexport async function getLiveDbDir_(\n  libraryDir: Maybe<SimpleFileOrString> = Settings.libraryDir.valueOrDefault\n): Promise<{ db: PosixFile; useReplica: boolean }> {\n  // If the user has explicitly set this to true, we can't use the library dir.\n  if (!Settings.forceLocalDbReplica.valueOrDefault) {\n    // If this throws, the library isn't going to spin up in any event.\n    const libraryDb = pathToDb(\n      await setupLibraryDataDir_(libraryDir),\n      Schemas.models\n    )\n    try {\n      await assertDirSQLiteReadWrite_(libraryDb.parent())\n      return { db: libraryDb, useReplica: false }\n    } catch (error) {\n      logger().info(\n        \"SQLite cannot directly write to the library: trying to use a local db replica.\",\n        {\n          libraryDb,\n          error\n        }\n      )\n    }\n  }\n\n  const cacheDbFile = await cacheDbFile_({ libraryDir, schema: Schemas.models })\n\n  try {\n    await assertDirSQLiteReadWrite_(cacheDbFile.parent())\n    return { db: cacheDbFile, useReplica: true }\n  } catch (error) {\n    return logger().throw(\n      \"SQLite cannot directly write to the library or the cacheDir.\",\n      {\n        cacheDbFile,\n        error\n      }\n    )\n  }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const CheckpointTypes = strEnum(\n  \"AUTO\",\n  \"PASSIVE\",\n  \"FULL\",\n  \"RESTART\",\n  \"TRUNCATE\"\n)\nexport type CheckpointType = StrEnumKeys<typeof CheckpointTypes>\n","import { lazy } from \"../../core/Lazy\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { mkLogger } from \"../Logger\"\nimport { sqliteFiles } from \"./SQLiteFiles\"\n\nconst logger = lazy(() => mkLogger(\"db.DbBackupCold\"))\n\n/**\n * SQLite's db backup tries to acquired filesystem locks when it backs up.\n * This won't work if the db is on a remote filesystem.\n *\n * If you don't care about running a \"hot\" backup, this implementation is\n * simpler.\n */\nexport async function dbBackupCold_(\n  srcDbFile: PosixFile,\n  destDir: PosixFile\n): Promise<PosixFile[]> {\n  await destDir.mkdirp_()\n  const wips = []\n  try {\n    for (const ea of sqliteFiles(srcDbFile)) {\n      const wip = destDir.join(ea.base).wip()\n      wips.push(wip)\n      await ea.copyFile_(wip)\n    }\n    // OK! All the copies worked! Now we can rename the wips to the final\n    // names.\n    return logger().tap({\n      msg: \"completed\",\n      level: \"info\",\n      result: await Promise.all(wips.map(ea => ea.unwip_())),\n      meta: { srcDbFile, destDir }\n    })\n  } catch (error) {\n    await Promise.all(wips.map(ea => ea.unlink()))\n    throw error\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport {\n  isRetriableError,\n  isSqliteBusyError\n} from \"../../core/error/ErrorTypes\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { delay } from \"../../fe/Delay\"\nimport { randomInt } from \"../../fe/Random\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\n\nconst logger = lazy(() => mkLogger(\"db.DbRetries\"))\n\n/**\n * @param f MUST BE IDEMPOTENT\n */\nexport async function handleDbRetries<T>(\n  f: () => SyncOrAsync<T>,\n  onRetry?: () => any\n): Promise<T> {\n  const start = Date.now()\n  let retries = 0\n  const timeoutAt = start + Settings.maxBusyDbMs.valueOrDefault\n  while (Date.now() < timeoutAt) {\n    try {\n      return await f()\n    } catch (error) {\n      if (\n        isRetriableError(error) === false ||\n        !isSqliteBusyError(error) ||\n        Date.now() >= timeoutAt\n      ) {\n        logger().error(\"Caught db error. Not retrying.\", { error })\n        throw error\n      } else {\n        const ms = randomInt(500, 1500) * ++retries\n        logger().error(\"Caught db error. Retrying in \" + ms + \"ms.\", { error })\n        onRetry?.()\n        // give the other process time to unlock:\n        await delay(ms)\n      }\n    }\n  }\n  throw new Error(\n    \"handleDbRetries(): timeout after \" +\n      Settings.maxBusyDbMs.valueOrDefault +\n      \"ms\"\n  )\n}\n","import { dirname } from \"path\"\nimport { clamp } from \"../../fe/Number\"\nimport { MiB } from \"../../fe/Units\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { isDbJanitorService } from \"../ServiceNames\"\nimport { uid } from \"../UID\"\nimport { mkdirpSync_, posixPathFromGrandparent, resolve } from \"../fs/Path\"\nimport { nativePathSizeSync } from \"../fs/StatSync\"\nimport { defaultLogLevel } from \"../log/LogFilter\"\nimport { Settings } from \"../settings/Settings\"\nimport { maxCpus } from \"../work/MaxCpus\"\nimport { DatabaseWithUid } from \"./DatabaseWithUid\"\nimport bs = require(\"better-sqlite3\")\n\nconst DbCacheScalar = 1.5\n\n// don't cache this\nexport function mkdb_({\n  nativePath,\n  timeoutMs = Settings.dbBusyTimeoutMs.valueOrDefault,\n  logSql = Settings.logSql.valueOrDefault\n}: {\n  nativePath: string\n  timeoutMs?: any\n  logSql?: boolean\n}): DatabaseWithUid {\n  nativePath = resolve(nativePath)\n  mkdirpSync_(dirname(nativePath))\n\n  let verbose: any\n  // The better-sqlite logger truncates variables very oddly, so we log in\n  // DbRequest instead:\n  const partialPath = posixPathFromGrandparent(nativePath)\n\n  if (logSql) {\n    const l = mkLogger(\"SQLite(\" + partialPath + \")\")\n    const ll = defaultLogLevel()\n    verbose = (sql: string) => l.log(ll, sql.replace(/\\s{2,}/g, \" \"))\n  }\n\n  const dbFileSize = nativePathSizeSync(nativePath)\n\n  const logger = mkLogger(\"db.mkdb(\" + partialPath + \")\")\n\n  if (dbFileSize != null) {\n    // nuc library (is big!) and is 179M\n    const dbFileSizeMb = Math.round(dbFileSize / MiB)\n    const minDbCacheSizeMb = Math.ceil(DbCacheScalar * dbFileSizeMb)\n    if (minDbCacheSizeMb > Settings.dbCacheSizeMb.valueOrDefault) {\n      logger.info(\n        \"Dynamically setting dbCacheSize to \" + Settings.dbCacheSizeMb.value,\n        { db: nativePath, dbFileSizeMb }\n      )\n      Settings.dbCacheSizeMb.envValue = minDbCacheSizeMb\n    }\n\n    const minRamMb = Math.round(dbFileSizeMb * DbCacheScalar)\n\n    if (minRamMb > Settings.maxMemoryMb.valueOrDefault) {\n      logger.warn(\"Large database: setting maxMemoryDb to \" + minRamMb + \"MB\", {\n        dbFileSizeMb,\n        \"Settings.maxMemoryMb\": Settings.maxMemoryMb.valueOrDefault\n      })\n      Settings.maxMemoryMb.envValue = minRamMb\n    }\n  }\n\n  logger.info(\"Opening \" + nativePath + \"...\")\n  const db = new bs(nativePath, {\n    fileMustExist: false,\n    readonly: false,\n    timeout: timeoutMs,\n    verbose: 2 < 1 ? ea => console.log(\"SQLITE: \", ea) : verbose\n  })\n  logger.info(\"Open. Setting PRAGMAs...\")\n\n  for (const pragma of [\n    // List of PRAGMAs: https://sqlite.org/pragma.html#toc\n    // https://wiki.mozilla.org/Performance/Avoid_SQLite_In_Your_Next_Firefox_Feature\n\n    'encoding = \"UTF-8\"',\n\n    // https://sqlite.org/pragma.html#pragma_threads\n\n    // This limit sets an upper bound on the number of auxiliary threads that a\n    // prepared statement is allowed to launch to assist with a query.\n    \"threads = \" + maxCpus(),\n\n    // Doesn't default to ON. WTH.\n    \"foreign_keys = ON\",\n\n    // https://sqlite.org/pragma.html#pragma_page_size\n\n    // page_size defaults to 4k, and seems to work fine.\n    \"page_size = \" + pageSizeBytes(),\n\n    // https://sqlite.org/pragma.html#pragma_trusted_schema\n\n    // There are advantages to turning it off, and most applications will be\n    // unaffected if it is turned off. For that reason, all applications are\n    // encouraged to switch this setting off on every database connection as soon\n    // as that connection is opened.\n    \"trusted_schema = 0\",\n\n    // https://sqlite.org/pragma.html#pragma_cache_size\n\n    // If the argument N is negative, then the number of cache pages is adjusted\n    // to be a number of pages that would use approximately abs(N*1024) bytes of\n    // memory based on the current page size.\n\n    \"cache_size = -\" +\n      Math.round((Settings.dbCacheSizeMb.valueOrDefault * MiB) / 1024),\n\n    // setting this to EXCLUSIVE prevents concurrent read /or/ write access.\n    \"locking_mode = NORMAL\",\n\n    // to improve performance and support concurrent writers:\n    \"journal_mode = WAL\",\n\n    // This PRAGMA may hang if the DB is locked or stored on a remote\n    // filesystem:\n    \"busy_timeout = \" + Settings.dbBusyTimeoutMs.valueOrDefault,\n\n    // https://sqlite.org/pragma.html#pragma_synchronous\n\n    // Windows (the worst for File IO) drops latency from ~17ms to ~5ms for\n    // upserts if `synchronous = OFF`, but that doesn't end up being substantive\n    // to processing rate, and OFF means library DBs can be corrupt from power\n    // cuts, so let's just use NORMAL and be safe (and a bit slower)\n\n    // With no dbrpc, synchronous = NORMAL made updates sometimes not \"stick\",\n    // causing Heartbeat to not get updated.\n\n    // With FULL, inserts on linux are 10-20x slower.\n    \"synchronous = \" + Settings.dbSynchronousMode.valueOrDefault,\n\n    // DON'T SET THIS ON! Tags are case-insensitive!\n    // This is required for tag path LIKE clauses:\n    // (see https://stackoverflow.com/a/8586390/1268016)\n    \"case_sensitive_like = 0\",\n\n    // https://sqlite.org/pragma.html#pragma_wal_autocheckpoint\n    \"wal_autocheckpoint = \" +\n      (isDbJanitorService()\n        ? toS(Settings.dbWalAutoCheckpoint.valueOrDefault)\n        : \"0\"),\n\n    // https://sqlite.org/pragma.html#pragma_auto_vacuum\n    \"auto_vacuum = \" + Settings.dbAutoVacuumMode.valueOrDefault\n  ]) {\n    logger.tapThunk({\n      msg: \"PRAGMA \" + pragma,\n      result: () => db.pragma(pragma)\n    })\n  }\n  // Used for prepared statement invalidation:\n  const result: DatabaseWithUid = db as any\n  result.__uid = uid()\n  return result\n}\n\nexport function pageSizeBytes(): number {\n  const i = Settings.dbPageSizeBytes.valueOrDefault\n  // Must be a power of 2:\n  return Math.pow(2, clamp(1, 28, Math.round(Math.log2(i))))\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const RepairModes = strEnum(\"dump\", \"recover\")\nexport type RepairMode = StrEnumKeys<typeof RepairModes>\n","import { PosixFile } from \"../fs/PosixFile\"\nimport { SQLiteSuffixes } from \"./SQLiteSuffixes\"\n\n/**\n * @return an empty array if dbfile doesn't exist\n */\nexport function sqliteFiles(dbFile: PosixFile): PosixFile[] {\n  return [\n    dbFile,\n    ...SQLiteSuffixes.map(ea => dbFile.sibling(dbFile.base + ea))\n  ].filter(ea => ea.existsSync({ refresh: true }))\n}\n\n/**\n * Upper bound for the size of the db\n */\nexport async function sqliteSizeBytes(dbFile: PosixFile): Promise<number> {\n  return (\n    ((await dbFile.size({ refresh: true })) ?? 0) +\n    ((await dbFile.sibling(dbFile.base + \"-wal\").size({ refresh: true })) ?? 0)\n  )\n}\n","import { Database } from \"better-sqlite3\"\nimport { lazy } from \"../../core/Lazy\"\nimport { eql } from \"../../fe/Eql\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { randomChars } from \"../../fe/Random\"\nimport { mkLogger } from \"../Logger\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { mkdb_ } from \"./MkDb\"\nimport { sqliteFiles } from \"./SQLiteFiles\"\n\nconst logger = lazy(() => mkLogger(\"db.SQLiteReadWrite\"))\n\nexport async function firstDirSQLiteReadWrite<T extends SimpleFileOrString>(\n  ...dirs: Maybe<T>[]\n): PromiseMaybe<T> {\n  for (const dir of dirs) {\n    if (dir != null && (await isDirSQLiteReadWrite(dir))) {\n      return dir\n    }\n  }\n  return\n}\n\nexport async function isDirSQLiteReadWrite(dirNativePath: SimpleFileOrString) {\n  try {\n    await assertDirSQLiteReadWrite_(dirNativePath)\n    logger().info(\"isDirSQLiteReadWrite(): true\", { dirNativePath })\n    return true\n  } catch (error) {\n    logger().warn(\"isDirSQLiteReadWrite(): false\", { dirNativePath, error })\n    return false\n  }\n}\n\nexport async function assertDirSQLiteReadWrite_(\n  dirNativePath: SimpleFileOrString\n): Promise<void> {\n  const dir = PosixFile.for(dirNativePath)\n  const s = randomChars(8)\n  const dbFile = dir.child(\".test-\" + s + \".sqlite\")\n  let db: Database | null = null\n  try {\n    await dir.mkdirp_()\n    db = mkdb_({\n      nativePath: dbFile.nativePath,\n      timeoutMs: 1000\n    })\n    db.exec(\"CREATE TABLE t (s VARCHAR(16) NOT NULL)\")\n    db.exec(`INSERT INTO t (s) VALUES ('${s}')`)\n    {\n      const rows = db.prepare(\"SELECT s FROM t\").all()\n      if (!eql(rows, [{ s }])) {\n        logger().throw(\"unexpected rows\", { rows })\n      }\n    }\n    db.exec(\"VACUUM\")\n    db.close()\n    db = mkdb_({\n      nativePath: dbFile.nativePath,\n      timeoutMs: 1000\n    })\n    {\n      const s2 = randomChars(8)\n      db.exec(`INSERT INTO t (s) VALUES ('${s2}')`)\n      const rows = db.prepare(\"SELECT s FROM t ORDER BY s\").pluck().all()\n      if (!eql(rows, [s, s2].sort())) {\n        logger().throw(\"unexpected rows\", { rows })\n      }\n    }\n  } finally {\n    try {\n      db?.close()\n    } catch {\n      // ignore\n    }\n    await Promise.all(sqliteFiles(dbFile).map(ea => ea.rm()))\n  }\n}\n","// No need for the -shm file:  The WAL-index or \"shm\" file is used to\n// coordinate access to the database by multiple clients, and as a cache to\n// help clients quickly locate frames within the wal file.\n\n// See https://sqlite.org/walformat.html#the_wal_index_file_format\n\n// Because the shm file is not involved in recovery, the shm file does not\n// need to be machine byte-order independent. Hence, numeric values in the shm\n// file are written in the native byte order of the host computer, rather than\n// being converted into a specific cross-platform byte order as is done with\n// the main database file and the wal file.\n\n// The -journal file may be needed if it is \"hot\": Before reading from a\n// database file, SQLite always checks to see if that database file has a hot\n// journal. If the file does have a hot journal, then the journal is rolled\n// back before the file is read. In this way, we ensure that the database file\n// is in a consistent state before it is read.\n\n// See https://sqlite.org/lockingv3.html and\n// https://www.sqlite.org/howtocorrupt.html\n\nexport const SQLiteSuffixes = [\"-wal\", \"-journal\"]\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { lazyAsync } from \"../async/LazyAsync\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { sqliteNativePath_ } from \"../fs/Tools\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport bs = require(\"better-sqlite3\")\n\nexport const sqliteVersion_ = lazyAsync({\n  later: async function () {\n    let db: Maybe<bs.Database>\n    try {\n      db = new bs(\":memory:\")\n      const libraryVersion = db\n        .prepare(\"select sqlite_version()\")\n        .pluck()\n        .get() as string\n\n      const sqliteNativePath = await sqliteNativePath_()\n      const fullToolVersion = (\n        await stdout_(sqliteNativePath, [\"-version\"], {\n          timeoutMs: commandTimeoutMs()\n        })\n      ).trim()\n\n      // expected: \"3.31.1 2020-01-27 19:55:54 3bfa9cc97da1059852...16eaa837bb4d6\"\n      const toolVersion = fullToolVersion.split(/\\s+/, 1)[0]\n      return { libraryVersion, toolVersion, fullToolVersion, sqliteNativePath }\n    } finally {\n      db?.close()\n    }\n  },\n  timeoutMs: commandTimeoutMs()\n})\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\nimport { BaseFile } from \"../fs/BaseFile\"\n\nexport const Schemas = strEnum(\"models\", \"stats\")\nexport type Schema = StrEnumKeys<typeof Schemas>\n\nexport const SqliteExt = \".sqlite3\"\n\nexport const SqliteBase = \"db\" + SqliteExt\n\nexport function pathToDbDir<T extends BaseFile>(dataDir: T, schema: Schema): T {\n  return dataDir.join(schema)\n}\nexport function pathToDb<T extends BaseFile>(dataDir: T, schema: Schema): T {\n  return pathToDbDir(dataDir, schema).join(SqliteBase)\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const SynchronousModes = strEnum(\"OFF\", \"NORMAL\", \"FULL\", \"EXTRA\")\nexport type SynchronousMode = StrEnumKeys<typeof SynchronousModes>\n","import _path, { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { SimpleAppName, SimpleAppNameLC } from \"../AppName\"\nimport { FifoCacheAsync } from \"../FifoCacheAsync\"\nimport { userid } from \"../UserInfo\"\nimport { env } from \"../env/Env\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { onError } from \"../error/OnError\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { mkNoMedia_ } from \"../fs/MkNoMedia\"\nimport { mkdirpSync_ } from \"../fs/Path\"\nimport { isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { setSettingsDefaults } from \"../settings/SettingsDefaults\"\nimport { DefaultDockerLibraryDir } from \"./DefaultDockerLibraryDir\"\nimport { FirstDirArg, filterDirs, firstDir } from \"./FirstDir\"\nimport { homeDir } from \"./HomeDir\"\n\nconst uidSuffix = lazy(() => map(userid(), ea => \"-\" + ea) ?? \"\")\n\nexport function tmpCacheDirs(): FirstDirArg[] {\n  if (isDocker()) {\n    return [\n      {\n        dir: \"/tmp/.photostructure-cache\" + uidSuffix(),\n        preexistingDir: \"/tmp\"\n      }\n    ]\n  } else {\n    // Fallback to /tmp and /var/tmp on Linux and macOS, and %TEMP% on Windows:\n    const result: FirstDirArg[] = []\n    const dirs = isWin ? [getEnv(\"TEMP\"), getEnv(\"TMP\")] : [\"/tmp\", \"/var/tmp\"]\n    for (const tmpDir of dirs) {\n      if (!blank(tmpDir)) {\n        result.push({\n          dir: join(tmpDir, \".photostructure-cache\" + uidSuffix()),\n          preexistingDir: tmpDir\n        })\n      }\n    }\n    return result\n  }\n}\n\nexport function tmpDirs(): string[] {\n  return filterDirs({ dirs: tmpCacheDirs(), desc: \"tmp\" })\n}\n\nexport function cacheDirs(): FirstDirArg[] {\n  if (isDocker()) {\n    return compact([\n      map(env().XDG_CACHE_HOME, ea => ({\n        dir: join(ea, SimpleAppNameLC),\n        preexistingDir: ea\n      })),\n      // these should be mountpoints. We shouldn't make them.\n      { dir: \"/ps/tmp\", preexistingDir: \"/ps/tmp\" },\n      { dir: \"/ps/cache\", preexistingDir: \"/ps/cache\" },\n      {\n        dir: DefaultDockerLibraryDir + \"/.photostructure/cache\" + uidSuffix(),\n        preexistingDir: DefaultDockerLibraryDir\n      },\n      ...tmpCacheDirs()\n    ])\n  }\n\n  const dirs = compactBlanks(\n    isWin\n      ? [getEnv(\"LOCALAPPDATA\"), _path.resolve(homeDir(), \"AppData\", \"Local\")]\n      : isMac\n      ? [_path.resolve(homeDir(), \"Library\", \"Caches\")]\n      : // see https://forum.photostructure.com/t/1471/6\n        [env().XDG_CACHE_HOME, join(homeDir(), \".cache\")]\n  )\n\n  // .cache directories on linux seem to be uniformly lowercase, and uniformly\n  // UpperCased on macOS and Windows.\n  const cacheSubDir = isLinux ? SimpleAppNameLC : SimpleAppName\n\n  // These directories should exist already:\n  const result: FirstDirArg[] = dirs.map(ea => ({\n    dir: join(ea, cacheSubDir),\n    preexistingDir: ea\n  }))\n  result.push(...tmpCacheDirs())\n  return result\n}\n\n/**\n * Should only be used by Settings.cacheDir.defaultValue\n */\n// lazy for tests\nexport const defaultCacheDir = lazy<string>(() => {\n  return firstDir({ dirs: cacheDirs(), desc: \"cache\" })!\n})\n\nconst addSettingsListener = lazy(() => {\n  // make sure the config dir setting has the default wired up:\n  setSettingsDefaults()\n  Settings.cacheDir.watchLater(resetCacheDir)\n})\n\nexport const cacheDir = lazy<Maybe<string>>(() => {\n  try {\n    const result = cacheDir_()\n    // this is a hack to get around a deploop:\n    FifoCacheAsync.cacheDir = result\n    return result\n  } catch (error) {\n    onError(\"cacheDir_() failed\", { error })\n    return undefined\n  }\n})\n\nexport const cacheDir_ = lazy<string>(() => {\n  addSettingsListener()\n  const nativePath = Settings.cacheDir.valueOrDefault\n  try {\n    mkdirpSync_(nativePath) // < throw if we can't mkdirp\n    void mkNoMedia_(nativePath)\n    return nativePath\n  } catch (cause) {\n    throw new WrappedError(\"Failed to set up cacheDir, \" + nativePath, {\n      path: nativePath,\n      fatal: true,\n      cause\n    })\n  }\n})\n\nexport function resetCacheDir() {\n  Settings.cacheDir.refreshEnvValue({ broadcastChange: false })\n  defaultCacheDir.unset()\n  cacheDir.unset()\n  cacheDir_.unset()\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { setSettingsDefaults } from \"../settings/SettingsDefaults\"\nimport { DefaultDockerLibraryDir } from \"./DefaultDockerLibraryDir\"\nimport { desktopConfigDir, desktopConfigDirs } from \"./DesktopConfigDir\"\nimport { envConfigDir } from \"./EnvConfigDir\"\nimport { firstDir } from \"./FirstDir\"\n\n// PhotoStructure's \"system\" config dir is not backed by a Setting, but will\n// respect customizations via env.PS_CONFIG_DIR (but not configDir, because that\n// may not be photostructure-specific)\n\nexport const configDir = lazy(() => {\n  setSettingsDefaults()\n  return envConfigDir() ?? (isDocker() ? dockerConfigDir() : desktopConfigDir())\n})\n\nconst dockerConfigDirs = [\n  {\n    dir: \"/ps/config\",\n    preexistingDir: \"/ps/config\"\n  },\n  {\n    dir: DefaultDockerLibraryDir + \"/.photostructure/docker-config\",\n    preexistingDir: DefaultDockerLibraryDir\n  }\n]\n\nfunction dockerConfigDir() {\n  return firstDir({\n    dirs: dockerConfigDirs,\n    desc: \"config\"\n  })\n}\n\nexport function resetConfigDir() {\n  configDir.unset()\n  configDir.unset()\n}\n\nexport function osConfigDirs() {\n  return (isDocker() ? dockerConfigDirs : desktopConfigDirs()).map(ea => ea.dir)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { mkLogger } from \"../Logger\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isMac } from \"../platform/Platform\"\n\nconst logger = lazy(() => mkLogger(\"dir.DefaultApplePhotosLibrary\"))\n\nconst ReadPhotoLibraryDir = [\n  \"read\",\n  \"com.apple.photolibraryd\",\n  \"SystemLibraryPath\"\n]\n\nexport async function defaultApplePhotosLibrary(): PromiseMaybe<string> {\n  if (!isMac) return\n  try {\n    const result = await stdout_(\"defaults\", ReadPhotoLibraryDir, {\n      timeoutMs: ShortCommandTimeoutMs\n    })\n    if (blank(result)) {\n      logger().warn(\n        `\"defaults ${ReadPhotoLibraryDir.join(\" \")}\" returned blank (!!)`\n      )\n      return\n    } else {\n      const isReadable = await isReadableDirectory(result)\n      return logger().tap({\n        msg: \"defaultApplePhotosLibrary()\",\n        level: LogLevels.info,\n        result: isReadable ? result : undefined,\n        meta: { isReadable }\n      })\n    }\n  } catch (error) {\n    logger().warn(\"defaultApplePhotosLibrary()\", error)\n    return\n  }\n}\n","export const DefaultDockerLibraryDir = \"/ps/library\"\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { isReadWriteableDirectorySync } from \"../fs/StatSync\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { DefaultDockerLibraryDir } from \"./DefaultDockerLibraryDir\"\n\n// This was extracted from LibraryDir to break a deploop with PosixFile\n\nexport function defaultLibraryDir(): Maybe<string> {\n  return isDocker() ? DefaultDockerLibraryDir : undefined\n}\n\nexport function defaultOriginalsDir(): string {\n  return isDocker() && isReadWriteableDirectorySync(\"/ps/originals\")\n    ? \"/ps/originals\"\n    : \".\" // < relative to $PS_LIBRARY\n}\n","import path from \"path\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { AppName } from \"../AppName\"\nimport { env } from \"../env/Env\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { isMac, isWin } from \"../platform/Platform\"\nimport { FirstDirArg, firstDir } from \"./FirstDir\"\nimport { homeDir } from \"./HomeDir\"\n\nexport function desktopConfigDir() {\n  return firstDir({\n    dirs: desktopConfigDirs(),\n    desc: \"config\"\n  })!\n}\n\nexport function desktopConfigDirs(): FirstDirArg[] {\n  const dirs: Maybe<string>[] = []\n\n  // Note that process.env.PS_CONFIG_DIR is examined before this method is invoked.\n\n  if (isWin) {\n    dirs.push(getEnv(\"APPDATA\"), path.resolve(homeDir(), \"AppData\", \"Roaming\"))\n  } else if (isMac) {\n    dirs.push(path.resolve(homeDir(), \"Library\", \"Application Support\"))\n  } else {\n    dirs.push(\n      env().XDG_DATA_HOME,\n      env().XDG_CONFIG_HOME,\n      path.resolve(homeDir(), \".config\")\n    )\n  }\n\n  return compactBlanks(dirs).map(ea => ({\n    dir: path.join(ea, AppName()),\n    preexistingDir: ea\n  }))\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { mkdirpSync_ } from \"../fs/Path\"\n\nexport function envConfigDir(): Maybe<string> {\n  // not \"configDir\", because that could be something else:\n  const fromEnv = getEnv(\"PS_CONFIG_DIR\")\n  if (!blank(fromEnv)) {\n    try {\n      mkdirpSync_(fromEnv)\n      return fromEnv\n    } catch (cause) {\n      console.error(\n        \"The environment variable PS_CONFIG_DIR is set to \" +\n          fromEnv +\n          \", but mkdir failed.\",\n        cause\n      )\n    }\n  }\n  return\n}\n","import { mkdirpSync } from \"fs-extra\"\nimport { compact } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isReadWriteableDirectorySync } from \"../fs/StatSync\"\n\nexport interface FirstDirArg {\n  dir: Maybe<string>\n  /**\n   * If set, and this dir does not exist, don't mkdirp `dir`.\n   */\n  preexistingDir?: Maybe<string>\n}\n\n/**\n * Return the first directory that exists (or whose required parent exists), and\n * that can be `mkdir -p`'ed with sufficient permissions.\n */\nexport function firstDir({\n  dirs,\n  desc\n}: {\n  dirs: Maybe<FirstDirArg>[]\n  desc: string\n}): Maybe<string> {\n  for (const { dir, preexistingDir } of compact(dirs)) {\n    if (blank(dir)) continue\n    if (isReadWriteableDirectorySync(dir)) return dir\n    if (blank(preexistingDir) || isReadWriteableDirectorySync(preexistingDir)) {\n      try {\n        mkdirpSync(dir)\n        return dir\n      } catch (err) {\n        console.error(\"Failed to mkdir for \" + desc, err)\n      }\n    }\n  }\n  return\n}\n\nexport function filterDirs({\n  dirs,\n  desc\n}: {\n  dirs: Maybe<FirstDirArg>[]\n  desc: string\n}): string[] {\n  return compact(dirs.map(dir => firstDir({ dirs: [dir], desc })))\n}\n","import { homedir } from \"os\"\nimport { resolve } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { isDirectorySync } from \"../fs/StatSync\"\nimport { isWin } from \"../platform/Platform\"\n\nexport const homeDir = lazy(() => {\n  const paths = []\n  if (isWin) {\n    // cygwin may mess with HOMEPATH and HOME. Only trust USERPROFILE.\n    paths.push(getEnv(\"USERPROFILE\"))\n  } else {\n    paths.push(getEnv(\"HOME\"))\n  }\n  for (const ea of compactBlanks(paths)) {\n    const d = resolve(ea)\n    if (isDirectorySync(d)) return d\n  }\n  return homedir()\n})\n","import { containedByNativePath, toPathnames } from \"../fs/Path\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { cacheDir } from \"./CacheDir\"\nimport { libraryDataDir, libraryPreviewsDir } from \"./LibraryDir\"\n\nexport function inHiddenPhotoStructureDir(child: SimpleFileOrString): boolean {\n  if (\n    toPathnames(child).some(\n      ea => ea.toLowerCase().startsWith(\".photostructure\") // < handle .photostructure-test\n    )\n  ) {\n    return true\n  }\n\n  for (const dir of [libraryDataDir, libraryPreviewsDir, cacheDir]) {\n    if (\n      containedByNativePath({\n        descendant: child,\n        ancestor: dir(),\n        acceptSelf: true\n      })\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { KB } from \"../../fe/Units\"\nimport { mkLogger } from \"../Logger\"\nimport { pathToDb } from \"../db/Schemas\"\nimport { errorToS } from \"../error/Error\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile, toNativePath_ } from \"../fs/SimpleFile\"\nimport { stat_ } from \"../fs/Stat\"\nimport { librarySettingsFile } from \"../settings/SettingsIO\"\nimport {\n  libraryDataDirPosixFile,\n  libraryPreviewsDirPosixFile\n} from \"./LibraryDirs\"\n\nconst logger = lazy(() => mkLogger(\"dir.IsLibraryDir\"))\n\nfunction pathToS(f: Maybe<string | SimpleFile>) {\n  return f == null ? \"(null)\" : stringify(toNativePath_(f))\n}\n\nexport async function isLibraryDir(\n  dir: Maybe<string | PosixFile>\n): Promise<boolean> {\n  return null == (await whyNotLibraryDir(dir))\n}\n\nexport async function whyNotLibraryDir(\n  dir: Maybe<string | PosixFile>\n): PromiseMaybe<string> {\n  return logger().tap({\n    msg: \"whyNotLibraryDir(\" + dir + \")\",\n    result: await _whyNotLibraryDir(dir)\n  })\n}\n\nasync function _whyNotLibraryDir(\n  dir: Maybe<string | PosixFile>\n): PromiseMaybe<string> {\n  if (blank(dir)) return \"blank path\"\n  const nativePath = toNativePath_(dir)\n  try {\n    const s = await stat_(nativePath)\n    if (s == null || !s.isDirectory()) {\n      return \"not a directory\"\n    }\n  } catch (error) {\n    return \"cannot read: \" + errorToS(error)\n  }\n\n  // We need at least a model db file and a settings.toml:\n  const dataDir = libraryDataDirPosixFile(nativePath)!\n  // calling .clear() on the library directory may purge all cached preview\n  // PosixFiles, which we should avoid if possible.\n  if (true !== (await dataDir?.isDirectory({ refresh: true }))) {\n    return (\n      \"library data directory, \" + pathToS(dataDir) + \", is not a directory\"\n    )\n  }\n\n  const settingsToml = librarySettingsFile(nativePath)?.clear()\n  if (settingsToml == null || !(await settingsToml.isNonEmptyFile())) {\n    return (\n      \"library settings, \" + pathToS(settingsToml) + \", is empty or missing\"\n    )\n  }\n\n  const modelDb = pathToDb(dataDir, \"models\")?.clear()\n  if (modelDb == null || !(await modelDb?.isNonEmptyFile(KB))) {\n    return \"library database, \" + pathToS(modelDb) + \", is empty or missing\"\n  }\n\n  const previews = libraryPreviewsDirPosixFile(nativePath)\n  if (true !== (await previews?.isDirectory({ refresh: true }))) {\n    return \"library previews, \" + pathToS(previews) + \", is empty or missing\"\n  }\n\n  return\n}\n","import { toNotBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { resolveMaybe } from \"../fs/Path\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { Settings } from \"../settings/Settings\"\n\nexport function libraryDir(libraryDirOverride?: Maybe<SimpleFileOrString>) {\n  return (\n    toNotBlank(toS(libraryDirOverride)) ?? Settings.libraryDir.valueOrDefault\n  )\n}\n\nexport function originalsDir(libraryDirOverride?: Maybe<SimpleFileOrString>) {\n  return resolveMaybe(\n    libraryDir(libraryDirOverride),\n    Settings.originalsDir.valueOrDefault\n  )\n}\n\nexport function libraryDataDir(libraryDirOverride?: Maybe<SimpleFileOrString>) {\n  return resolveMaybe(\n    libraryDir(libraryDirOverride),\n    // subdir is all lowercase to minimize case-(in)sensitive filesystem pain\n    // and suffering\n    \".photostructure\"\n  )\n}\n\nexport function libraryPreviewsDir(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n) {\n  return resolveMaybe(\n    libraryDir(libraryDirOverride),\n    Settings.previewsDir.valueOrDefault\n  )\n}\n","import { uniq } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { version } from \"../Version\"\nimport { Schemas, pathToDbDir } from \"../db/Schemas\"\nimport { NoLibraryErrorFlag } from \"../error/ErrorFlags\"\nimport { mkNoMedia_ } from \"../fs/MkNoMedia\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { writeTextfile_ } from \"../fs/WriteFile\"\nimport { imageCacheDir_ } from \"../img/ImageCache\"\nimport { Settings } from \"../settings/Settings\"\nimport {\n  libraryDataDir,\n  libraryDir,\n  libraryPreviewsDir,\n  originalsDir\n} from \"./LibraryDir\"\n\nconst README = `\nHello, and thank you for using PhotoStructure!\n\nThe files in this folder support your PhotoStructure Library, including\n\n  * a database with the filepaths to your photos and movies\n  * previews and thumbnails of your photos and movies\n  * content metadata about these assets, like ratings and sharing information\n  * albums that both you and PhotoStructure Curators have assembled\n  * synchronization reports describing what directories and files were synced (and why)\n\nMoving or deleting any files here will cause problems using your library.\n\nIf you have any questions, please visit https://forum.photostructure.com .\n\nSincerely,\n\nYour Friendly Neighborhood PhotoStructure, v${version}\n`\n\nexport function libraryDirPosixFile(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return PosixFile.forMaybe(libraryDir(libraryDirOverride))\n}\n\n/**\n * libraryDataDir was pulled out of Library so settings could be written into\n * .photostructure, rather than directly into the library root.\n */\nexport function libraryDataDirPosixFile(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return PosixFile.forMaybe(libraryDataDir(libraryDirOverride))\n}\n\nexport async function setupLibraryDirs_(\n  libraryDirOverride?: SimpleFileOrString\n): Promise<PosixFile[]> {\n  const l = libraryDirPosixFile(libraryDirOverride)\n  await mkdirRW_(l, false)\n  const dataDir = await setupLibraryDataDir_(l)\n  return uniq([\n    l,\n    dataDir,\n    // this _is not_ parallel to avoid DDOS on smaller boxen\n    await setupLibraryOriginalsDir_(l),\n    await setupLibraryPreviewsDir_(l),\n    await setupLibrarySyncReportsDir_(l),\n    await setupLibraryDbDir_(l),\n    await imageCacheDir_()\n  ])\n}\n\nasync function mkdirRW_(dir: Maybe<PosixFile>, neverIndex = true) {\n  if (dir == null) return\n  await dir?.mkdirp_() // if we can't make this directory, fail.\n  await dir?.assertReadWriteExecutable()\n  // Tell macOS Spotlight to not index this directory:\n  if (neverIndex) await dir?.join(\".metadata_never_index\").touch()\n  return dir\n}\n\n/**\n * @throws if there are issues\n */\nexport async function setupLibraryDataDir_(\n  libraryDirOverride?: SimpleFileOrString\n): Promise<PosixFile> {\n  const dataDir = libraryDataDirPosixFile(libraryDirOverride)\n  if (dataDir == null) {\n    throw new Error(\"empty libraryDataDir\" + NoLibraryErrorFlag)\n  }\n  await mkdirRW_(dataDir)\n  await mkNoMedia_(dataDir) // < optional, don't fail here\n  const readmeFile = dataDir.join(\"README.txt\")\n  await writeTextfile_(readmeFile.nativePath, README)\n  return dataDir\n}\n\nexport function libraryOriginalsDirPosixFile(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return PosixFile.forMaybe(originalsDir(libraryDirOverride))\n}\n\nexport async function setupLibraryOriginalsDir_(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): PromiseMaybe<PosixFile> {\n  return mkdirRW_(libraryOriginalsDirPosixFile(libraryDirOverride))\n}\n\nexport function libraryPreviewsDirPosixFile(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return PosixFile.forMaybe(libraryPreviewsDir(libraryDirOverride))\n}\n\nexport async function setupLibraryPreviewsDir_(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): PromiseMaybe<PosixFile> {\n  return mkdirRW_(libraryPreviewsDirPosixFile(libraryDirOverride))\n}\n\nexport function librarySyncReportsDir(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return libraryDirPosixFile(libraryDirOverride)?.join(\n    // NOTE: the default is .photostructure/sync-reports, so don't add the data dir here!\n    Settings.syncReportsDir.valueOrDefault\n  )\n}\n\nexport async function setupLibrarySyncReportsDir_(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): PromiseMaybe<PosixFile> {\n  return mkdirRW_(librarySyncReportsDir(libraryDirOverride))\n}\n\nexport async function setupLibraryDbDir_(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): PromiseMaybe<PosixFile> {\n  return mkdirRW_(\n    map(libraryDataDirPosixFile(libraryDirOverride), ea =>\n      pathToDbDir(ea, Schemas.models)\n    )\n  )\n}\n","import _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { toS } from \"../../fe/toS\"\nimport { SimpleAppName } from \"../AppName\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { isMac } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { systemSettingsFile } from \"../settings/SystemSettings\"\nimport { readTomlFileSync } from \"../settings/Toml\"\nimport { cacheDirs } from \"./CacheDir\"\nimport { DefaultDockerLibraryDir } from \"./DefaultDockerLibraryDir\"\nimport { firstDir } from \"./FirstDir\"\nimport { homeDir } from \"./HomeDir\"\n\nexport function defaultLogDirs() {\n  if (isDocker()) {\n    return [\n      {\n        dir: \"/ps/logs\",\n        preexistingDir: \"/ps/logs\"\n      },\n      {\n        dir: DefaultDockerLibraryDir + \"/.photostructure/logs\",\n        preexistingDir: \"/ps/library\"\n      },\n      {\n        dir: \"/tmp/photostructure-logs\",\n        preexistingDir: \"/tmp\" // this will certainly exist, but not be persistent. It's only here as a backstop.\n      }\n    ]\n  } else if (isMac) {\n    return [\n      {\n        dir: _path.resolve(homeDir(), \"Library\", \"Logs\", SimpleAppName),\n        preexistingDir: homeDir()\n      }\n    ]\n  } else {\n    // Windows and Linux puts logs into the cache dir:\n    return compact(cacheDirs()).map(ea => ({\n      dir: map(ea.dir, dir => _path.resolve(dir, \"logs\")),\n      preexistingDir: ea.preexistingDir\n    }))\n  }\n}\n\nexport function defaultLogDir_() {\n  return firstDir({ dirs: defaultLogDirs(), desc: \"logs\" })!\n}\n\n// this bare-bones implementation means we can set up the logger without pulling\n// in Settings, SettingsIO and all those dependencies:\n\nexport const logDir = lazy(() => {\n  try {\n    const e = getEnv(\"logDir\") // < this will check logDir and PS_LOG_DIR\n    if (notBlank(e)) return e\n\n    const s = readTomlFileSync(systemSettingsFile())\n    const ld = toS(s?.logDir)\n    if (notBlank(ld)) return ld\n\n    return defaultLogDir_()\n  } catch (error) {\n    console.error(\"defaultLogDir_() failed\", error)\n    return _path.resolve(homeDir(), \"logs\")\n  }\n})\n","import { resolve } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { env } from \"../env/Env\"\nimport { isWin } from \"../platform/Platform\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\nimport { homeDir } from \"./HomeDir\"\n\nexport async function picturesDirWindows() {\n  return isWin\n    ? (PowerShell.instance().executeJson(\n        `Get-ItemPropertyValue \"Registry::HKEY_CURRENT_USER\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\" -name \"My Pictures\"`\n      ) as Promise<string>)\n    : undefined\n}\n\nexport const picturesDir = lazy<Promise<string>>(async () => {\n  if (isWin) {\n    const result = await picturesDirWindows()\n    if (notBlank(result)) return result\n    // else fall through and return default\n  }\n  return defaultPicturesDir()\n})\n\nexport const defaultPicturesDir = lazy<string>(\n  // See https://wiki.archlinux.org/title/XDG_user_directories\n  () => env().XDG_PICTURES_DIR ?? resolve(homeDir(), \"Pictures\")\n)\n","import { isTrue } from \"../../fe/Boolean\"\nimport { StrEnumKeys } from \"../../fe/StrEnum\"\nimport { isProd } from \"../NodeEnv\"\nimport { DevEnvFlags } from \"../env/EnvKeys\"\nimport { isPacked } from \"../platform/IsPacked\"\nimport { env } from \"./Env\"\n\nexport type DevFlag = StrEnumKeys<typeof DevEnvFlags>\n\nexport function getDevEnvFlag(key: DevFlag): boolean {\n  return !isProd && !isPacked() && isTrue(env()[key])\n}\n\nexport function setDevEnvFlag(key: DevFlag, b: boolean) {\n  if (b) {\n    env()[key] = \"true\"\n  } else {\n    delete env()[key]\n  }\n}\n","import fs from \"fs\"\nimport { delimiter } from \"path\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { entries, StringValued } from \"../../fe/Object\"\nimport { debom } from \"../Buffer\"\nimport { parseEnvTokens } from \"../EnvTokens\"\nimport { ee } from \"../event/EventEmitter\"\nimport { PS_ENV_KEYS } from \"./EnvKeys\"\nimport { SensitiveEnvRE } from \"./GetEnv\"\n\nexport const env = lazy<StringValued>(() => {\n  const paths = uniq(\n    PS_ENV_KEYS.map(k => process.env[k])\n      // handle FILE and PATH values:\n      .join(delimiter)\n      .split(delimiter)\n      .filter(notBlank)\n  )\n\n  const re = SensitiveEnvRE()\n  const result = { ...process.env }\n  for (const file of paths) {\n    try {\n      const input = debom(fs.readFileSync(file))\n      const tokens = parseEnvTokens({ input, lowerCaseKeys: false })\n      for (const [k, v] of entries(tokens)) {\n        if (!re.test(k)) {\n          result[k] = v\n        }\n      }\n    } catch (error) {\n      // not logger, as we may not have the logger up and running yet.\n      console.warn(\"env(): failed to read .env file, \" + file, error)\n    }\n  }\n  return result\n})\n\nlater(() => {\n  ee().on(\"clearCache\", () => env.unset())\n})\n","import { strEnum } from \"../../fe/StrEnum\"\n\nexport const PS_ENV_KEYS = [\"PS_ENV\", \"PS_ENV_FILE\", \"PS_ENV_PATH\"]\nexport const PS_IS_CHILD_PROCESS = \"PS_IS_CHILD_PROCESS\"\nexport const PS_IS_DOCKER = \"PS_IS_DOCKER\"\nexport const ELECTRON_RUN_AS_NODE = \"ELECTRON_RUN_AS_NODE\"\n\nexport const DevEnvFlags = strEnum(\n  \"PS_KEEP_ENV\",\n  \"PS_SKIP_CLEANUP\",\n  \"PS_SKIP_ALL_TESTS\",\n  \"PS_FORCE_LITE\",\n  \"PS_FORCE_TRIAL\",\n  \"PS_NO_RANDOM_IMAGE_CACHE\",\n  \"PS_FORCE_FULLDISK\",\n  \"PS_SLOMO\",\n  \"PS_BAIL_ON_ERROR\",\n  \"PS_FAIL_VOLUMES\",\n  \"PS_FAIL_DB_HEALTH_CHECK\",\n  \"PS_FAIL_SECURITY_HEALTH_CHECK\",\n  \"PS_TEST_HEALTH_CHECK_LEVEL\",\n  \"PS_SINGLE_SPEC_TESTS\"\n)\n\nexport const DevEnvKeys = [\"PS_NO_PUID_CHOWN\", \"PS_TEST_VOLUME_UUIDS\"]\n\nexport const IgnorableEnvKeys = [\n  \"PS_CONFIG_DIR\",\n  PS_IS_DOCKER,\n  PS_IS_CHILD_PROCESS,\n  ...DevEnvKeys,\n  ...PS_ENV_KEYS,\n  ...DevEnvFlags.values\n]\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\nimport { SettingsName } from \"../settings/SettingsName\"\n\n// We don't need to check for PS_APP_DATA or PS_PATH:\n\nexport const EnvKeys = strEnum(\n  \"HOME\",\n  \"NO_COLOR\",\n  \"PATH\",\n  \"PS_CONFIG_DIR\",\n  \"TMP\",\n  \"TEMP\",\n  \"XDG_CACHE_HOME\",\n\n  // Windows ENV keys: inconsistent casing here matches windows 10 box via\n  // `node -e \"console.log(process.env)\"`:\n  \"APPDATA\",\n  \"LOCALAPPDATA\",\n  \"ProgramData\",\n  \"ProgramFiles\",\n  \"ProgramFiles(x86)\",\n  \"ProgramW6432\",\n  \"SystemDrive\",\n  \"SystemRoot\",\n  \"USERPROFILE\",\n  \"windir\" // < \"C:\\Windows\"\n)\nexport type EnvKey = StrEnumKeys<typeof EnvKeys>\n\nexport type EnvName = SettingsName | EnvKey\n","import process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { firstNotBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { CaseInsensitiveValued } from \"../CaseInsensitiveValued\"\nimport { DefaultSensitiveEnvRegexPattern } from \"../DefaultSensitiveEnvRegexPattern\"\nimport { camel2snake } from \"../StringCase\"\nimport { env } from \"./Env\"\nimport { EnvKeys, EnvName } from \"./EnvName\"\n\n// !!!!!!!!!!!!!!!!!!!\n// IMPORTANT: To avoid deploops: `Settings` can be referenced ONLY by TypeScript\n// types, BUT NOT ACTUAL FUNCTIONALITY.\n// !!!!!!!!!!!!!!!!!!!\n\nexport const SensitiveEnvRegexPattern = lazy(\n  () =>\n    firstNotBlank(\n      process.env.PS_SENSITIVE_ENV_REGEX_PATTERN,\n      process.env.sensitiveEnvRegexPattern,\n      DefaultSensitiveEnvRegexPattern\n    )!\n)\n\nexport const SensitiveEnvRE = lazy(() => {\n  try {\n    return new RegExp(SensitiveEnvRegexPattern(), \"i\")\n  } catch (err) {\n    console.error(\n      `Invalid setting for \"sensitiveEnvRegExp\": ${err}. Using default value.`\n    )\n    return new RegExp(DefaultSensitiveEnvRegexPattern, \"i\")\n  }\n})\n\nexport const caseInsensitiveEnv = lazy(() => {\n  return new CaseInsensitiveValued(env())\n})\n\nexport function onEnvChange() {\n  caseInsensitiveEnv.unset()\n  SensitiveEnvRegexPattern.unset()\n  SensitiveEnvRE.unset()\n}\n\nlater(() => {\n  env.watchLater(onEnvChange)\n})\n\n/**\n * Case-insensitive search for a given ENV key\n *\n * @param key either XDG_CACHE_HOME for non-settings, or camelCaseSettingsName\n */\nexport function getEnv(key: EnvName): Maybe<string> {\n  return (\n    caseInsensitiveEnv().get(key) ??\n    (EnvKeys.includes(key)\n      ? undefined // < no need to search for PS_windir\n      : caseInsensitiveEnv().get(\"PS_\" + camel2snake(key)))\n  )\n}\n\nexport function isEnvTrue(key: EnvName): boolean {\n  return isTrue(getEnv(key))\n}\n","import { Rate } from \"batch-cluster\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, compactBlanks, isEmpty, uniqSubstrings } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport {\n  ErrorDelimiter,\n  IgnoredErrorNames,\n  errorCode,\n  errorName,\n  shortStack\n} from \"../../fe/Error\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isBuffer } from \"../../fe/String\"\nimport { isError } from \"../../fe/isError\"\nimport { toS } from \"../../fe/toS\"\nimport { BoundedList } from \"../BoundedList\"\nimport { mkLogger } from \"../Logger\"\nimport { ellipsize, isString, stripAnsiEsc } from \"../String\"\nimport { splitCompactLines } from \"../fs/CRLF\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { getErrorDescriptions } from \"./ErrorCodes\"\nimport { ErrorFlag, sortErrorFlags } from \"./ErrorFlags\"\nimport { extractErrorFlags, stripErrorFlags } from \"./ErrorTypes\"\n\nexport const StartTs = Date.now()\n\nexport const logger = lazy(() => mkLogger(\"Error\"))\n\nexport const errorRate = new Rate()\nexport const fatalErrorRate = new Rate()\nexport const internalErrorRate = new Rate()\nexport const lastInternalErrors = new BoundedList(10)\n\nexport function mapError<T>(obj: any, f: (error: Error) => T): Maybe<T> {\n  return obj instanceof Error ? f(obj) : undefined\n}\n\nexport function errorContains(err: any, re: RegExp): boolean {\n  return re.test(errorToS(err))\n}\n\nexport function throws(f: () => any): boolean {\n  try {\n    f()\n    return false\n  } catch {\n    return true\n  }\n}\n\nexport function addMessage(error: Maybe<Error>, message: Maybe<string>) {\n  if (error == null) return new Error(message)\n\n  if (notBlank(message)) {\n    if (!error.message.toLowerCase().includes(message.toLowerCase())) {\n      error.message += \": \" + message\n    }\n  }\n  return error\n}\n\nexport function errorsToPath(\n  ...errs: Maybe<Error | SimpleFile | { path: string }>[]\n): Maybe<string> {\n  for (const ea of errs as any[]) {\n    for (const k of [\"nativePath\", \"path\"]) {\n      const s = toS(ea?.[k])\n      if (notBlank(s)) return s\n    }\n  }\n  return\n}\n\n/**\n * Errors can contain a \"name\", a \"code\", and a \"message\". Wrapped Errors may\n * contain a concatenated set of errors (\"Error: failed to import foo: missing\n * database entry\")\n */\nexport function splitErrorMessage(...errs: Maybe<Error | string>[]): string[] {\n  if (isEmpty(errs)) return []\n\n  const messages: string[] = errs.map((ea: any) =>\n    isString(ea) ? ea : isBuffer(ea) ? ea.toString() : toS(ea?.message ?? ea)\n  )\n\n  messages.push(...getErrorDescriptions(errs))\n\n  const arr = [\n    ...errs.filter(isError).map(errorName),\n    ...errs.map(errorCode),\n    // only split(\": \") on message and strings to avoid URL splitting\n    ...compactBlanks(messages)\n      .map(stripAnsiEsc)\n      .flatMap(ea => splitCompactLines(ea))\n      .flatMap(ea => ea.split(ErrorDelimiter))\n  ]\n  return uniqSubstrings(normalizeErrorMessages(flatten(arr)))\n}\n\nexport function normalizeErrorMessages(arr: Maybe<string>[]): string[] {\n  return compact(arr)\n    .filter(ea => !IgnoredErrorNames.includes(ea))\n    .map(ea =>\n      ea\n        .replace(/\\s+/gm, \" \")\n        .trim()\n        .replace(/^code ([A-Z]+)$/i, \"$1\")\n        .trim()\n    )\n    .filter(notBlank)\n}\n\nexport function joinErrorMessages(\n  arr: Maybe<string>[],\n  opts?: { maxLen?: number; trailingChars?: number; flags?: ErrorFlag[] }\n): string {\n  const trimmed = uniqSubstrings(normalizeErrorMessages(arr))\n  const maxLen = opts?.maxLen ?? 400\n  const trailingChars = opts?.trailingChars ?? 64\n  const flags = sortErrorFlags([\n    ...(opts?.flags ?? []),\n    ...extractErrorFlags(arr.join(\"\"))\n  ])\n  return (\n    ellipsize(\n      stripErrorFlags(trimmed.join(ErrorDelimiter)),\n      maxLen - flags.length,\n      trailingChars\n    ) + flags.sort().join(\"\")\n  )\n}\n\nexport function errorToS(\n  err: any,\n  opts?: { maxLen?: number; trailingChars?: number }\n): string {\n  if (blank(err)) {\n    return \"\"\n  }\n  const arr = splitErrorMessage(err)\n  return joinErrorMessages(arr, opts)\n}\n\nexport const MissingError = \"(missing error)\"\n\nexport function errorToVerbose(\n  err: any,\n  maxMsgLen = 256,\n  maxStackLines = 5\n): string {\n  if (blank(err)) err = MissingError // < if blank, at least fill in a stacktrace...\n  return (\n    ellipsize(errorToS(err), maxMsgLen) +\n    \" at \" +\n    shortStack(err?.stack, maxStackLines).join(\"; \")\n  )\n}\n","import { uniq } from \"../../fe/Array\"\nimport { errorCode, errorErrno } from \"../../fe/Error\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { stripSuffix } from \"../String\"\n\nexport function describeError(ea: string) {\n  const key = stripSuffix(toS(ea).trim().toUpperCase(), \":\")\n  return (ErrorCodes as any)[key]?.description ?? ea\n}\n\nexport function getErrorDescriptions(...arr: (Error | any)[]) {\n  const result: Maybe<string>[] = []\n  for (const err of arr) {\n    map(errorErrno(err), ea => result.push(err2desc.get(ea)))\n    map(errorCode(err), ea => result.push((ErrorCodes as any)[ea]?.description))\n  }\n  return uniq(result)\n}\n\nconst ErrorCodes = {\n  UNKNOWN: { errno: -1, description: \"unknown error\" },\n  OK: { errno: 0, description: \"success\" },\n  EOF: { errno: 1, description: \"end of file\" },\n  EADDRINFO: { errno: 2, description: \"getaddrinfo error\" },\n  EACCES: { errno: 3, description: \"permission denied\" },\n  EAGAIN: { errno: 4, description: \"resource temporarily unavailable\" },\n  EADDRINUSE: { errno: 5, description: \"address already in use\" },\n  EADDRNOTAVAIL: { errno: 6, description: \"address not available\" },\n  EAFNOSUPPORT: { errno: 7, description: \"address family not supported\" },\n  EALREADY: { errno: 8, description: \"connection already in progress\" },\n  EBADF: { errno: 9, description: \"bad file descriptor\" },\n  EBUSY: { errno: 10, description: \"resource busy or locked\" },\n  ECONNABORTED: { errno: 11, description: \"software caused connection abort\" },\n  ECONNREFUSED: { errno: 12, description: \"connection refused\" },\n  ECONNRESET: { errno: 13, description: \"connection reset by peer\" },\n  EDESTADDRREQ: { errno: 14, description: \"destination address required\" },\n  EFAULT: { errno: 15, description: \"bad address in system call argument\" },\n  EHOSTUNREACH: { errno: 16, description: \"host is unreachable\" },\n  EINTR: { errno: 17, description: \"interrupted system call\" },\n  EINVAL: { errno: 18, description: \"invalid argument\" },\n  EISCONN: { errno: 19, description: \"socket is already connected\" },\n  EMFILE: { errno: 20, description: \"too many open files\" },\n  EMSGSIZE: { errno: 21, description: \"message too long\" },\n  ENETDOWN: { errno: 22, description: \"network is down\" },\n  ENETUNREACH: { errno: 23, description: \"network is unreachable\" },\n  ENFILE: { errno: 24, description: \"file table overflow\" },\n  ENOBUFS: { errno: 25, description: \"no buffer space available\" },\n  ENOMEM: { errno: 26, description: \"not enough memory\" },\n  ENOTDIR: { errno: 27, description: \"not a directory\" },\n  EISDIR: { errno: 28, description: \"illegal operation on a directory\" },\n  ENONET: { errno: 29, description: \"machine is not on the network\" },\n  ENOTCONN: { errno: 31, description: \"socket is not connected\" },\n  ENOTSOCK: { errno: 32, description: \"socket operation on non-socket\" },\n  ENOTSUP: { errno: 33, description: \"operation not supported on socket\" },\n  ENOENT: { errno: 34, description: \"no such file or directory\" },\n  ENOSYS: { errno: 35, description: \"function not implemented\" },\n  EPIPE: { errno: 36, description: \"broken pipe\" },\n  EPROTO: { errno: 37, description: \"protocol error\" },\n  EPROTONOSUPPORT: { errno: 38, description: \"protocol not supported\" },\n  EPROTOTYPE: { errno: 39, description: \"protocol wrong type for socket\" },\n  ETIMEDOUT: { errno: 40, description: \"connection timed out\" },\n  ECHARSET: { errno: 41, description: \"invalid Unicode character\" },\n  EAIFAMNOSUPPORT: {\n    errno: 42,\n    description: \"address family for hostname not supported\"\n  },\n  EAISERVICE: {\n    errno: 44,\n    description: \"servname not supported for ai_socktype\"\n  },\n  EAISOCKTYPE: { errno: 45, description: \"ai_socktype not supported\" },\n  ESHUTDOWN: {\n    errno: 46,\n    description: \"cannot send after transport endpoint shutdown\"\n  },\n  EEXIST: { errno: 47, description: \"file already exists\" },\n  ESRCH: { errno: 48, description: \"no such process\" },\n  ENAMETOOLONG: { errno: 49, description: \"name too long\" },\n  EPERM: { errno: 50, description: \"operation not permitted\" },\n  ELOOP: { errno: 51, description: \"too many symbolic links encountered\" },\n  EXDEV: { errno: 52, description: \"cross-device link not permitted\" },\n  ENOTEMPTY: { errno: 53, description: \"directory not empty\" },\n  ENOSPC: { errno: 54, description: \"no space left on device\" },\n  EIO: { errno: 55, description: \"i/o error\" },\n  EROFS: { errno: 56, description: \"read-only file system\" },\n  ENODEV: { errno: 57, description: \"no such device\" },\n  ESPIPE: { errno: 58, description: \"invalid seek\" },\n  ECANCELED: { errno: 59, description: \"operation canceled\" }\n} as const\n\nconst err2desc = new Map<number, string>(\n  Object.values(ErrorCodes).map(ea => [ea.errno, ea.description])\n)\n","import { uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { escapeRegExp } from \"../RegExp\"\n\nexport const ErrorFlags = strEnum(\n  \"⁰\",\n  \"¹\",\n  \"²\",\n  \"³\",\n  \"⁴\",\n  \"⁵\",\n  \"⁶\",\n  \"⁷\",\n  \"⁸\",\n  \"⁹\",\n  \"₀\",\n  \"₁\",\n  \"₂\"\n  // \"₃\",\n  // \"₄\",\n  // \"₅\",\n  // \"₆\",\n  // \"₇\",\n  // \"₈\",\n  // \"₉\"\n)\nexport type ErrorFlag = StrEnumKeys<typeof ErrorFlags>\n// I could also go with a ⚠️🛑💥 or \"🔁⏹⏏️\" ️but these seem less cutesy:\n\nexport function sortErrorFlags(arr: Maybe<ErrorFlag>[]): ErrorFlag[] {\n  return sortBy(uniq(arr), ea => ErrorFlags.indexOf(ea))\n}\n\nexport const FatalErrorFlag = ErrorFlags[\"¹\"]\nexport const NonRetriableErrorFlag = ErrorFlags[\"²\"]\nexport const IgnorableErrorFlag = ErrorFlags[\"³\"]\nexport const PleaseSendErrorFlag = ErrorFlags[\"⁴\"]\nexport const HealthCheckErrorFlag = ErrorFlags[\"⁵\"]\nexport const DoNotSendErrorFlag = ErrorFlags[\"⁶\"]\nexport const RetriableErrorFlag = ErrorFlags[\"⁷\"]\nexport const HealthCheckWarningFlag = ErrorFlags[\"⁸\"]\nexport const InternalErrorFlag = ErrorFlags[\"⁹\"]\nexport const NoLibraryErrorFlag = ErrorFlags[\"₀\"]\nexport const DbSetupErrorFlag = ErrorFlags[\"₁\"]\nexport const NonFatalErrorFlag = ErrorFlags[\"₂\"]\n\nexport const ErrorFlagsRE = new RegExp(\n  \"(\" + ErrorFlags.values.join(\"|\") + \")\",\n  \"g\"\n)\n\nexport const FailStr = JSON.stringify({ fatal: true })\n\nexport const FatalErrorPatterns = [\n  \"SQLITE_FULL\",\n  \"SQLITE_CORRUPT\",\n  \"SQLITE_IOERR\", // there are a ton with this prefix, like SQLITE_IOERR_TRUNCATE\n  \"SQLITE_NOMEM\",\n  \"SQLITE_NOTADB\",\n  \"ON CONFLICT\",\n  \"SQLITE_CONSTRAINT_NOTNULL\",\n  \"Error: Cannot find module\",\n  FatalErrorFlag,\n  FailStr\n]\n\n/**\n * Default errors that indicate serious problems\n */\nexport const FatalErrorRe = new RegExp(\n  FatalErrorPatterns.map(escapeRegExp).join(\"|\"),\n  \"i\"\n)\n\nexport const InternalErrorRe = /⁹|internal ?error/i\n","import { compact } from \"../../fe/Array\"\nimport { isFalse, isTrue } from \"../../fe/Boolean\"\nimport { errorCode } from \"../../fe/Error\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { errorToS } from \"../error/Error\"\nimport {\n  DoNotSendErrorFlag,\n  ErrorFlag,\n  ErrorFlags,\n  ErrorFlagsRE,\n  FatalErrorFlag,\n  FatalErrorRe,\n  HealthCheckErrorFlag,\n  IgnorableErrorFlag,\n  InternalErrorRe,\n  NonFatalErrorFlag,\n  NonRetriableErrorFlag,\n  PleaseSendErrorFlag,\n  RetriableErrorFlag\n} from \"./ErrorFlags\"\n\n/**\n * @param msg may contain error flags\n * @return `msg` with any included error flags, and all\n * non-null `flags`, sorted, at the end of the string.\n */\nexport function addErrorFlags(msg: string, ...flags: Maybe<ErrorFlag>[]) {\n  const s = toS(msg) + compact(flags).join(\"\")\n  return stripErrorFlags(s) + extractErrorFlags(s).join(\"\")\n}\n\nexport function stripErrorFlags(err: Maybe<string>): string {\n  return toS(err).replace(ErrorFlagsRE, \"\").trim()\n}\n\n/**\n * @return ordered and uniq'ed flags found in `err`\n */\nexport function extractErrorFlags(err: string): ErrorFlag[] {\n  return ErrorFlags.values.filter(ea => err.includes(ea))\n}\n\nexport function hasErrorFlag(err: string): boolean {\n  return ErrorFlags.values.some(ea => err.includes(ea))\n}\n\n// FUTURE ME: OMG, aren't all these errorToS calls inefficient?\n\n// NOW ME: WHY YES, future me, they are.\n\n// FUTURE ME: SWEET IMMA REFACTOR THIS\n\n// NOW ME: Dude, if error parsing is your big performance issue, you've got\n// bigger issues.\n\n// FUTURE ME: AW YOU RIGHT\n\nexport function isHealthCheckError(err: any): boolean {\n  return errorToS(err).includes(HealthCheckErrorFlag)\n}\n\nexport function isPleaseSendError(err: any): boolean {\n  return errorToS(err).includes(PleaseSendErrorFlag)\n}\n\nconst notIgnorablePatterns = [/Can't write [a-z0-9]+ files/i]\n\nconst ignorablePatterns = [\n  IgnorableErrorFlag,\n  \"0 output files created\", // From exiftool\n  \"debugger attached\", //nodeJS inspector issues\n  \"debugger listening on\", //nodeJS inspector issues\n  \"diskutil: interrupted\", // dang flaky macOS tool\n  \"ECONNRESET\", // read ECONNRESET from broken socket\n  \"EPIPE\", // meh whatev\n  \"for help\", //nodeJS inspector issues\n  \"Format error in file\", // from exiftool\n  \"https://nodejs.org/en/docs/inspector\", //nodeJS inspector issues\n  \"Missing expected status message\", // From exiftool\n  \"net::ERR_\", //See https://cs.chromium.org/codesearch/f/chromium/src/net/base/net_error_list.h  like net::ERR_TIMED_OUT\n  \"This socket has been ended by the other party\", // so rude\n  \"Unexpected error while trimming\", // From sharp\n  \"Warning\" // I mean, it's _a warning_\n].map(ea => ea.toLowerCase())\n\n/**\n * Ignorable errors are expected, and not even important enough to log.\n */\nexport function isIgnorableError(err: any): Maybe<boolean> {\n  if (err == null) return true\n\n  const b = err?.ignorable\n  if (typeof b === \"boolean\") return b\n\n  const msg = errorToS(err).toLowerCase()\n\n  return notIgnorablePatterns.some(ea => ea.test(msg))\n    ? false\n    : ignorablePatterns.some(ea => msg.includes(ea))\n    ? true\n    : undefined\n}\n\nconst BusyErrorRe = /SQLITE_BUSY|database is locked/i\n\nexport function isSqliteBusyError(err: any): boolean {\n  return err.code === \"SQLITE_BUSY\" || null != errorToS(err).match(BusyErrorRe)\n}\n\nexport function isSqliteDisconnectedError(err: any): boolean {\n  return null != errorToS(err).match(/database .+ not open/i)\n}\n\nexport function isSqliteConstraintError(err: any): boolean {\n  return null != errorToS(err).match(/SQLITE_CONSTRAINT|constraint failed/i)\n}\n\nexport function isRetriableError(err: any): Maybe<boolean> {\n  // NOTE: this certainly isn't the most efficient boolean logic.\n\n  // It's structured this way to be the easiest to read and be correct.\n\n  if (err == null) return\n\n  if (isNonRetriableError(err) === true) {\n    return false\n  }\n\n  const b = err?.retriable\n  if (typeof b === \"boolean\") {\n    return b\n  }\n\n  if (\n    errorCode(err) === \"EBUSY\" ||\n    isSqliteBusyError(err) ||\n    isSqliteDisconnectedError(err)\n  ) {\n    return true\n  }\n\n  const str = errorToS(err)\n\n  return str.includes(\"EBUSY\") || str.includes(RetriableErrorFlag)\n    ? true\n    : undefined\n}\n\nexport function isNonRetriableError(err: any): Maybe<boolean> {\n  return isFalse(err.retriable) ||\n    errorToS(err).includes(NonRetriableErrorFlag) ||\n    isSqliteConstraintError(err)\n    ? true\n    : undefined\n}\n\nconst doNotSendPatterns = [\n  // everything here isn't worth sending to Sentry\n  DoNotSendErrorFlag,\n  \"Corrupt JPEG data\", // invalid jpeg\n  \"ENOSPC\", // I can't help with that...\n  \"Invalid data found when processing input\", // from invalid ffmpeg file\n  \"premature end of data segment\", // invalid jpeg\n  \"VipsJpeg\" // invalid jpeg\n]\n\n/**\n * These may be fatal errors (like loss of library lock), and the user will care\n * about them, but we don't need to tell Sentry about them.\n */\nexport function isDoNotSendError(err: any): Maybe<boolean> {\n  const b = err?.doNotSend\n  if (typeof b === \"boolean\") return b\n\n  if (isPleaseSendError(err)) return false\n\n  const msg = errorToS(err).toLowerCase()\n  if (doNotSendPatterns.some(ea => msg.includes(ea))) return true\n  return // we don't know, AND THAT'S OK\n}\n\n/**\n * Does `err` represent a \"fatal\" error?\n */\nexport function isFatalError(err: any): boolean {\n  if (err == null) return false\n  if (isTrue(err.fatal)) return true\n  const s = errorToS(err)\n  return s.includes(FatalErrorFlag)\n    ? true\n    : s.includes(NonFatalErrorFlag)\n    ? false\n    : FatalErrorRe.test(s)\n}\n\nexport function isInternalError(err: any): boolean {\n  return err == null\n    ? false\n    : isTrue(err.internalError) || InternalErrorRe.test(errorToS(err))\n}\n","import { InternalErrorFlag } from \"./ErrorFlags\"\n\nexport class InternalError extends Error {\n  constructor(message: string) {\n    super(message + InternalErrorFlag)\n  }\n}\n","import { blank } from \"../../fe/Blank\"\nimport { lt, sigFigs } from \"../../fe/Number\"\nimport { isEmptyObj } from \"../../fe/Object\"\nimport { isTest } from \"../NodeEnv\"\nimport { isServiceThatAcceptsFatalErrors, isWebService } from \"../ServiceNames\"\nimport { exit } from \"../async/Exit\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Settings } from \"../settings/Settings\"\nimport {\n  StartTs,\n  errorRate,\n  fatalErrorRate,\n  internalErrorRate,\n  lastInternalErrors,\n  logger\n} from \"./Error\"\nimport { InternalErrorFlag } from \"./ErrorFlags\"\nimport { isInternalError } from \"./ErrorTypes\"\nimport { NewWrappedError, toWrappedError } from \"./WrappedError\"\nimport { stack } from \"./stack\"\n\n/**\n * Got an error? Give it here, please!\n *\n * @return true iff fatal\n */\n\nexport function onError(\n  err: string | Error,\n  meta?: unknown | Error | (NewWrappedError & { error?: Error | unknown })\n): boolean {\n  try {\n    if (blank(err) && isEmptyObj(meta)) {\n      logger().warn(\"onError() with no args\", stack())\n      return false\n    }\n    const error = toWrappedError(err, meta)\n\n    const internalError = isInternalError(err)\n    if (internalError) {\n      internalErrorRate.onEvent()\n      lastInternalErrors.push(err)\n    }\n    const fatal = error.fatal === true\n    const ignorable = error.ignorable === true\n\n    if (!fatal && ignorable) {\n      logger().info(\"onError(): (ignorable)\", { error: err })\n      return false\n    }\n\n    errorRate.onEvent()\n    if (fatal) {\n      fatalErrorRate.onEvent()\n      ee().emit(\"fatal\", error)\n    }\n    const event = !fatal || isFatalErrorAllowed() ? \"nonFatal\" : \"fatal\"\n    logger().log(event === \"fatal\" ? \"error\" : \"warn\", \"onError()\", {\n      event,\n      error\n    })\n    if (fatal && !isTest && !isWebService()) {\n      void exit({ reason: error.toString(), status: error.errno ?? 13 })\n    }\n    return fatal\n  } catch {\n    // woof, something's really wrong\n    console.error(\"onError() threw an error!\", { err, meta })\n    return false\n  }\n}\n/**\n * Should this error be considered fatal to this process?\n */\n\nexport function isFatalErrorAllowed(): boolean {\n  const postProbation =\n    Date.now() > StartTs + Settings.probationMs.valueOrDefault\n\n  const lowErrorRate = lt(\n    fatalErrorRate.eventsPerMinute,\n    Settings.fatalErrorRatePerMinute.valueOrDefault\n  )\n\n  const acceptsFatalErrors = isServiceThatAcceptsFatalErrors()\n\n  // The only time a fatal error should not be considered fatal is by the main\n  // service, after passing probation, and the error rate is not too high:\n  return logger().tap({\n    level: \"info\",\n    msg: \"isFatalErrorAllowed()\",\n    result: acceptsFatalErrors && postProbation && lowErrorRate,\n    meta: {\n      acceptsFatalErrors,\n      postProbation,\n      lowErrorRate,\n      fatalErrorRatePerMin: sigFigs(fatalErrorRate.eventsPerMinute, 2),\n      errorRatePerMin: sigFigs(errorRate.eventsPerMinute, 2),\n      fatalErrorRatePerMinuteSetting:\n        Settings.fatalErrorRatePerMinute.valueOrDefault\n    }\n  })\n}\n\n/**\n * These should never happen!\n */\nexport function onInternalError(\n  message: string,\n  cause?: Error | unknown,\n  context?: any\n): boolean {\n  return onError(message + InternalErrorFlag, { cause, ...context })\n}\n","import { uniqBy } from \"../../fe/Array\"\nimport { blank, firstNotBlank, toNotBlank } from \"../../fe/Blank\"\nimport { maybeAnd } from \"../../fe/Boolean\"\nimport {\n  ErrorDelimiter,\n  errorCode,\n  errorErrno,\n  errorName\n} from \"../../fe/Error\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Obj, isEmptyObj, omit } from \"../../fe/Object\"\nimport { toA } from \"../../fe/toA\"\nimport { toErrs } from \"../../fe/toErr\"\nimport { first } from \"../Array\"\nimport { dedupeNeedle, ellipsize, isString, splitUniq } from \"../String\"\nimport { joinErrorMessages, splitErrorMessage } from \"./Error\"\nimport {\n  DoNotSendErrorFlag,\n  ErrorFlag,\n  FatalErrorFlag,\n  IgnorableErrorFlag,\n  NonRetriableErrorFlag,\n  PleaseSendErrorFlag,\n  RetriableErrorFlag,\n  sortErrorFlags\n} from \"./ErrorFlags\"\nimport {\n  extractErrorFlags,\n  isDoNotSendError,\n  isFatalError,\n  isIgnorableError,\n  isRetriableError,\n  stripErrorFlags\n} from \"./ErrorTypes\"\n\nexport function toWrappedError(\n  error: string | Error | unknown,\n  meta?: unknown | Error | (NewWrappedError & { error?: Error | unknown })\n): WrappedError {\n  const args: NewWrappedError =\n    meta == null\n      ? {}\n      : meta instanceof Error\n      ? { cause: meta }\n      : { cause: (meta as any)?.error, ...meta }\n\n  if (error instanceof WrappedError) {\n    // if meta doesn't do anything, don't re-wrap.\n    if (\n      meta == null ||\n      blank(args.message) ||\n      error.message.includes(args.message)\n    ) {\n      return error\n    }\n  }\n  const message = firstNotBlank(\n    isString(error) ? error : undefined,\n    (error as any)?.message,\n    args?.message\n  )\n\n  return new WrappedError(message ?? \"(missing error message)\", args)\n}\n\nexport interface NewWrappedError {\n  name?: string\n  message?: string\n  stack?: string\n  code?: string\n  codes?: string[]\n  errno?: number\n  syscall?: string\n  path?: string // this isn't \"nativePath\" because native Node errors may include a `path` field that we want to capture.\n  cause?: any // because catch(err) is `unknown`\n  causes?: (Error | string)[]\n  retriable?: boolean\n  ignorable?: boolean\n  fatal?: boolean\n  doNotSend?: boolean\n  flags?: ErrorFlag[]\n  meta?: Obj\n}\n\nfunction mkCtx(opts?: NewWrappedError) {\n  if (opts == null) return\n\n  const ctx = omit(\n    opts as any,\n    \"name\",\n    \"message\",\n    \"stack\",\n    \"code\",\n    \"codes\",\n    \"errno\",\n    \"syscall\",\n    \"path\",\n    \"cause\",\n    \"causes\",\n    \"retriable\",\n    \"ignorable\",\n    \"fatal\",\n    \"doNotSend\",\n    \"flags\"\n  )\n  return isEmptyObj(ctx) ? undefined : stringify(ctx)\n}\n\nfunction mkMessage(message?: string, opts?: NewWrappedError) {\n  let arr = splitErrorMessage(\n    message,\n    opts?.message,\n    opts?.cause,\n    ...(opts?.causes ?? [])\n  )\n  const path = opts?.path\n  if (!blank(path)) {\n    arr = dedupeNeedle(arr, path, \"file\")\n  }\n\n  return joinErrorMessages([\n    arr[0],\n    opts?.code,\n    ...toA(opts?.codes),\n    opts?.syscall,\n    message,\n    ...arr.slice(1)\n  ])\n}\n\nexport class WrappedError extends Error {\n  readonly code?: string\n  readonly codes?: string[]\n  readonly errno?: number\n  readonly syscall?: string\n  readonly path?: string\n  readonly causes: Error[]\n  readonly retriable?: boolean\n  readonly ignorable?: boolean\n  readonly fatal?: boolean\n  readonly doNotSend?: boolean\n  readonly flags: ErrorFlag[]\n\n  /**\n   * No string ellipsis-ing. Flags are shoved to the end and uniq'ed.\n   */\n  static mkMessage(message?: string, opts?: NewWrappedError) {\n    const s = splitErrorMessage(\n      message,\n      opts?.cause,\n      ...toA(opts?.causes),\n      mkCtx(opts)\n    ).join(ErrorDelimiter)\n    return stripErrorFlags(s) + extractErrorFlags(s).join(\"\")\n  }\n\n  constructor(message: string, opts: Partial<NewWrappedError> = {}) {\n    super(message)\n\n    this.causes = uniqBy(\n      toErrs(opts.cause, ...toA(opts.causes)),\n      ea => ea.message\n    )\n\n    this.name = errorName(opts) ?? first(this.causes, errorName) ?? \"Error\"\n\n    this.codes = splitUniq(\n      [opts.code, ...this.causes.map(errorCode)],\n      ErrorDelimiter\n    )\n    this.code = this.codes[0]\n    // unset this.codes if this.code is sufficient:\n    if (this.codes.length <= 1) this.codes = undefined\n\n    this.errno = opts.errno ?? first(this.causes, ea => errorErrno(ea))\n\n    this.syscall =\n      opts.syscall ?? first(this.causes, (ea: any) => toNotBlank(ea[\"syscall\"]))\n\n    this.path =\n      opts.path ?? first(this.causes, (ea: any) => toNotBlank(ea[\"path\"]))\n\n    this.flags = opts?.flags ?? []\n    const arr = [opts, this.flags.join(\"\"), ...this.causes]\n\n    // If any are fatal, we're fatal.\n    this.fatal = opts.fatal ?? arr.some(isFatalError)\n\n    // If any are NOT retriable, we aren't retriable. If none make an assertion,\n    // we shouldn't either.\n    this.retriable = opts.retriable ?? maybeAnd(arr.map(isRetriableError))\n\n    // If any are NOT ignorable, we aren't ignorable. If none make an assertion,\n    // we shouldn't either.\n    this.ignorable = opts.ignorable ?? maybeAnd(arr.map(isIgnorableError))\n\n    // If any say we need to send, we should.\n    this.doNotSend = opts.doNotSend ?? maybeAnd(arr.map(isDoNotSendError))\n\n    this.flags = sortErrorFlags([\n      ...this.flags,\n      this.fatal ? FatalErrorFlag : undefined,\n      this.retriable === true ? RetriableErrorFlag : undefined,\n      this.retriable === false ? NonRetriableErrorFlag : undefined,\n      this.ignorable === true ? IgnorableErrorFlag : undefined,\n      this.doNotSend === false ? PleaseSendErrorFlag : undefined,\n      this.doNotSend === true ? DoNotSendErrorFlag : undefined\n    ])\n\n    // Now that we have all the flags, rebuild the message:\n    this.message =\n      stripErrorFlags(mkMessage(message, this)) + this.flags.join(\"\")\n\n    this.stack = opts.stack ?? first(this.causes, (ea: any) => ea[\"stack\"])\n    if (this.stack == null) Error.captureStackTrace(this)\n  }\n\n  toJSON() {\n    return {\n      _ctor: \"WrappedError\",\n      ...this,\n      message: this.message\n    }\n  }\n\n  static fromJSON(json: any) {\n    return new WrappedError(json.message, json)\n  }\n\n  toString() {\n    return this.message\n  }\n\n  toS(opts?: { maxLen: number; trailingChars: number }): string {\n    return opts == null\n      ? this.message\n      : ellipsize(\n          this.message, // flags are already at the end--just don't\n          opts.maxLen,\n          Math.max(opts.trailingChars, this.flags.length + 1)\n        )\n  }\n}\n","export function stack(): string[] {\n  const e: any = {}\n  Error.captureStackTrace(e, stack)\n  return e.stack.split(/\\n(?:\\s*at\\s+)?/).slice(1)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Args } from \"../Args\"\nimport { EventName, PhotoStructureEvents } from \"./PhotoStructureEvents\"\nimport { SharedState } from \"./SharedState\"\n\nexport function broadcastEvent_<E extends EventName>(\n  name: E,\n  ...args: Args<PhotoStructureEvents[E]>\n) {\n  return SharedState.instance()?.broadcastEvent_({ name, args })\n}\n\nexport function broadcastPause() {\n  return broadcastEvent_(\"pause\")\n}\n\nexport function broadcastResume() {\n  return broadcastEvent_(\"resume\")\n}\n\nexport const broadcastExit = lazy(() => broadcastEvent_(\"exit\"))\n","import { filterInPlace } from \"../../fe/Array\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { toS } from \"../../fe/toS\"\nimport { Args } from \"../Args\"\nimport { Deferred } from \"../async/Deferred\"\nimport { BoundedList } from \"../BoundedList\"\nimport { isTest } from \"../NodeEnv\"\nimport { OmniEventListener } from \"./OmniEventListener\"\nimport { TypedEventEmitter } from \"./TypedEventEmitter\"\n\nexport interface CapturedEvent<T, E extends keyof T = keyof T> {\n  name: E\n  args: Args<T[E]>\n}\n\nexport class CapturingEventEmitter<T> implements TypedEventEmitter<T> {\n  readonly priorEvents: BoundedList<CapturedEvent<T>>\n  readonly omniListeners: OmniEventListener<T>[] = []\n  readonly #eventDeferreds = new Map<keyof T, Deferred<any>>()\n  readonly #eventDebounceTimers = new Map<keyof T, NodeJS.Timeout>()\n\n  constructor(\n    readonly target: TypedEventEmitter<T>,\n    readonly eventsToRetain = isTest ? 10 : 0\n  ) {\n    this.priorEvents = new BoundedList(eventsToRetain)\n  }\n\n  once<E extends keyof T>(\n    eventName: E,\n    listener: (...args: Args<T[E]>) => void\n  ) {\n    this.target.once(eventName, listener)\n    return this\n  }\n\n  // CAUTION: an omniEventListener that logs may cause a stack overflow on errors!\n\n  addOmniListener(l: OmniEventListener<T>) {\n    this.omniListeners.push(l)\n    return this\n  }\n\n  watchEvent<E extends keyof T>(eventName: E): Deferred<Args<T[E]>> {\n    return getOrSet(\n      this.#eventDeferreds,\n      eventName,\n      () => new Deferred<any>(\"watchEvent(\" + toS(eventName) + \")\")\n    )\n  }\n\n  removeOmniListener(l: OmniEventListener<T>) {\n    return filterInPlace(this.omniListeners, ea => ea !== l)\n  }\n\n  on<E extends keyof T>(eventName: E, listener: (...args: Args<T[E]>) => void) {\n    this.target.on(eventName, listener)\n    return this\n  }\n\n  off<E extends keyof T>(\n    eventName: E,\n    listener: (...args: Args<T[E]>) => void\n  ) {\n    this.target.off(eventName, listener)\n    return this\n  }\n\n  /**\n   * @return `true` if the event had listeners, `false` otherwise.\n   */\n  emit<E extends keyof T>(eventName: E, ...args: Args<T[E]>) {\n    map(this.#eventDebounceTimers.get(eventName), clearTimeout)\n    this.#eventDebounceTimers.delete(eventName)\n    for (const ea of this.omniListeners) {\n      ea(eventName, ...args)\n    }\n    if (this.eventsToRetain > 0) {\n      this.priorEvents.push({\n        name: eventName,\n        args\n      })\n    }\n    const result = this.target.emit(eventName, ...args)\n\n    const d = this.#eventDeferreds.get(eventName)\n    if (d != null) {\n      void d.resolve(args)\n      this.#eventDeferreds.delete(eventName)\n    }\n\n    return result\n  }\n\n  emitDebounced<E extends keyof T>(eventName: E, ...args: Args<T[E]>) {\n    map(this.#eventDebounceTimers.get(eventName), clearTimeout)\n    this.#eventDebounceTimers.set(\n      eventName,\n      setTimeout(() => this.emit(eventName, ...args), 50)\n    )\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  listeners<E extends keyof T>(event: E): Function[] {\n    return this.target.listeners(event)\n  }\n\n  removeAllListeners(eventName?: keyof T): this {\n    this.target.removeAllListeners(eventName)\n    return this\n  }\n}\n","import { map } from \"../../fe/Maybe\"\nimport { cacheDir } from \"../dir/CacheDir\"\nimport { BaseFile } from \"../fs/BaseFile\"\n\nexport function DefaultSharedStateDir() {\n  return map(cacheDir(), ea => BaseFile.for(ea).join(\"shared-state\"))\n}\n","import { EventEmitter } from \"events\"\nimport { lazy } from \"../../core/Lazy\"\nimport { CapturingEventEmitter } from \"./CapturingEventEmitter\"\nimport {\n  PhotoStructureEmitter,\n  PhotoStructureEvents\n} from \"./PhotoStructureEvents\"\n\nexport function mkEE(\n  eventsToRetain?: number\n): CapturingEventEmitter<PhotoStructureEvents> {\n  const e = new EventEmitter()\n  e.setMaxListeners(70) // because of ee().on(\"clearCache\")\n  return new CapturingEventEmitter(e as PhotoStructureEmitter, eventsToRetain)\n}\n\nexport const ee = lazy(mkEE)\n","import { ee } from \"./EventEmitter\"\n\nlet syncing = false\n\nexport function isSyncing(): boolean {\n  return syncing\n}\n\nexport function setIsSyncing(val: boolean): void {\n  if (syncing !== val) {\n    // no infinite loops\n    syncing = val\n    ee().emit(\"syncing\", val)\n  }\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { keys } from \"../../fe/Object\"\nimport { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\nimport { Args } from \"../Args\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\nimport { ProgressEvt } from \"../progress/ProgressEvt\"\nimport { ForceContext } from \"../settings/ForceContext\"\nimport { isUID } from \"../UID\"\nimport { TypedEventEmitter } from \"./TypedEventEmitter\"\n\n// THIS FILE CANNOT IMPORT ANY CORE CODE (other than SimpleEventEmitter): it's\n// used everywhere!\n\nexport interface UpdateAssetArgs extends ForceContext {\n  assetId: number\n}\nexport interface UpdateAssetFileArgs extends ForceContext {\n  assetFileId: number\n}\nexport interface UpdateAssetTagsArgs extends ForceContext {\n  assetId: number\n}\n\n/*\n * Some events (like \"progress\" or \"timing\") are transient and if there isn't\n * anything to handle it immediately (like in seconds), they should be\n * discarded.\n *\n * Non-transient events need to be handled and then explicitly removed by the\n * process that can service the request.\n */\n\nconst Events = {\n  exit: () => null,\n  updateReadyToInstall: () => null,\n  clearCache: () => null,\n  clearDbCache: () => null,\n  clearToolCache: () => null,\n  error: (_msg: string, _err?: Error | unknown, _ctx?: any) => null,\n  fatal: (_error: Error) => null,\n  nonFatal: (_error: Error) => null,\n  fileChanged: (_nativePath?: Maybe<string>) => null,\n  invalidFile: (_nativePath: string) => null,\n  mountpointsChanged: () => null,\n  reloadLicenses: () => null,\n  pause: () => null,\n  resume: () => null,\n  syncing: (_isSyncing: boolean) => null,\n  progress: (_p: ProgressEvt) => null,\n  updateProgress: () => null,\n  settingsChanged: () => null,\n  showAbout: () => null /* task for Desktop */,\n  taskResult: (_result: TaskResult) => null,\n  timing: (_name: string, _elapsedMs: number) => null,\n  vacuuming: (_isVacuuming: boolean) => null,\n  volumesChanged: () => null\n}\n\nexport type PhotoStructureEvents = typeof Events\nexport const EventNames = strEnum(...keys(Events))\nexport type EventName = StrEnumKeys<typeof EventNames>\n\nconst Tasks = {\n  checkOperations: () => null, // web tells sync to check for new Operations to perform\n  repairAsset: (_arg: UpdateAssetArgs) => null,\n  repairAssetFile: (_arg: UpdateAssetFileArgs) => null,\n  runTagMaintenance: () => null,\n  syncDir: (_arg: { nativePath: string }) => null\n}\n\nexport type PhotoStructureTasks = typeof Tasks\nexport const TaskNames = strEnum(...keys(Tasks))\nexport type TaskName = StrEnumKeys<typeof TaskNames>\n\nexport interface PhotoStructureEvent<E extends EventName> {\n  name: E\n  args: Args<PhotoStructureEvents[E]>\n}\n\nexport interface StoredEvent<E extends EventName>\n  extends PhotoStructureEvent<E> {\n  uid: string\n}\n\nexport function isStoredEvent(o: any): o is StoredEvent<any> {\n  return (\n    typeof o === \"object\" &&\n    isUID(o.uid) &&\n    EventNames.includes(o.name) &&\n    Array.isArray(o.args)\n  )\n}\n\nexport interface StoredTask<T extends TaskName> {\n  uid: string\n  name: T\n  args: Args<PhotoStructureTasks[T]>\n}\n\nexport function isStoredTask(o: any): o is StoredTask<any> {\n  return (\n    typeof o === \"object\" &&\n    isUID(o.uid) &&\n    TaskNames.includes(o.name) &&\n    Array.isArray(o.args)\n  )\n}\n\nexport interface TaskSuccess {\n  uid: string\n  ts: number\n  pid: string\n  result: any\n}\n\nexport interface TaskFailure {\n  uid: string\n  ts: number\n  pid: string\n  error: string\n}\n\nexport type TaskResult = TaskSuccess | TaskFailure\n\nexport function isTaskResult(o: any): o is TaskResult {\n  return (\n    (typeof o === \"object\" && isUID(o.uid) && notBlank(o.result)) ||\n    notBlank(o.error)\n  )\n}\n\nexport type PhotoStructureEmitter = TypedEventEmitter<PhotoStructureEvents>\n\nexport const EventNameToLevel: Record<EventName, LogLevel> = Object.freeze({\n  exit: LogLevels.warn,\n  updateReadyToInstall: LogLevels.warn,\n  clearCache: LogLevels.trace,\n  clearDbCache: LogLevels.trace,\n  clearToolCache: LogLevels.trace,\n  error: LogLevels.error,\n  fatal: LogLevels.fatal,\n  fileChanged: LogLevels.trace,\n  invalidFile: LogLevels.warn,\n  mountpointsChanged: LogLevels.info,\n  nonFatal: LogLevels.warn,\n  pause: LogLevels.info,\n  progress: LogLevels.info,\n  updateProgress: LogLevels.info,\n  reloadLicenses: LogLevels.info,\n  resume: LogLevels.info,\n  settingsChanged: LogLevels.info,\n  showAbout: LogLevels.info,\n  syncing: LogLevels.info,\n  taskResult: LogLevels.info,\n  timing: LogLevels.trace,\n  vacuuming: LogLevels.info,\n  volumesChanged: LogLevels.info\n})\n\nexport const TaskNameToLevel: Record<TaskName, LogLevel> = {\n  checkOperations: LogLevels.info,\n  repairAsset: LogLevels.info,\n  repairAssetFile: LogLevels.info,\n  runTagMaintenance: LogLevels.info,\n  syncDir: LogLevels.info\n}\n","import { Event } from \"@parcel/watcher\"\nimport { pidExists } from \"batch-cluster\"\nimport { Dirent } from \"fs\"\nimport { sep } from \"path\"\nimport { pid } from \"process\"\nimport { clearInterval, setInterval } from \"timers\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, isEmpty, isNotEmpty, uniqByLast } from \"../../fe/Array\"\nimport { sortBy, sortUniqBy } from \"../../fe/ArraySort\"\nimport { isBoolean } from \"../../fe/Boolean\"\nimport { hourMs, minuteMs } from \"../../fe/Date\"\nimport { eql } from \"../../fe/Eql\"\nimport { shortStack } from \"../../fe/Error\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { parseJSON, stringify } from \"../../fe/JSON\"\nimport { deleteIf } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt, isNumber } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { toA } from \"../../fe/toA\"\nimport { Args } from \"../Args\"\nimport { mkLogger } from \"../Logger\"\nimport { mapGt0 } from \"../Number\"\nimport {\n  isSyncService,\n  isWebService,\n  isWorkerService,\n  processName\n} from \"../ServiceNames\"\nimport { StartTs } from \"../StartTs\"\nimport { TTLMap } from \"../TTLMap\"\nimport { TTLSet } from \"../TTLSet\"\nimport { tsFromUid, uid } from \"../UID\"\nimport { Deferred } from \"../async/Deferred\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { oneAtATime } from \"../async/OneAtATime\"\nimport { isRecentMs } from \"../date/Date\"\nimport { errorToS } from \"../error/Error\"\nimport { InternalErrorFlag } from \"../error/ErrorFlags\"\nimport { DirWatcher } from \"../fs/DirWatcher\"\nimport { isJsonExt } from \"../fs/FileExt\"\nimport { withLock_ } from \"../fs/FsLock\"\nimport { isPsLockFileOrDir } from \"../fs/FsLockDir\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { readFileMaybe } from \"../fs/ReadFile\"\nimport { SimpleFileOrString, basename, toNativePath_ } from \"../fs/SimpleFile\"\nimport { isMtimeRecent } from \"../fs/Stat\"\nimport { isWip } from \"../fs/WIP\"\nimport { Settings } from \"../settings/Settings\"\nimport { isPaused, pause, resume } from \"../work/IsPaused\"\nimport { ee } from \"./EventEmitter\"\nimport { isSyncing, setIsSyncing } from \"./IsSyncing\"\nimport {\n  EventName,\n  PhotoStructureEvents,\n  PhotoStructureTasks,\n  StoredEvent,\n  StoredTask,\n  TaskFailure,\n  TaskName,\n  TaskResult,\n  isStoredEvent,\n  isStoredTask,\n  isTaskResult\n} from \"./PhotoStructureEvents\"\nimport { TaskProcessor, taskProcessors } from \"./TaskProcessor\"\n\nconst logger = lazy(() => mkLogger(\"event.SharedState\"))\n\n// See worker/WorkRequest\n\nexport interface SharedStateJson {\n  pid: number\n  syncing?: boolean // < only set by SyncService processes\n  paused: boolean\n  // task results are stored as events. Events are only retained for a couple minutes:\n  events: StoredEvent<any>[]\n  // tasks are retained until there is a taskResult StoredEvent for it's uid, or it expires:\n  tasks: StoredTask<any>[]\n  // only set if there wasn't any shared state.\n  default?: true\n}\n\nexport function isSharedStateJson(o: any): o is SharedStateJson {\n  return (\n    o != null &&\n    typeof o === \"object\" &&\n    isNumber(o.pid) &&\n    isBoolean(o.paused) &&\n    Array.isArray(o.events) &&\n    Array.isArray(o.tasks)\n  )\n}\n\nexport const EventTimeoutMs = minuteMs\n\nfunction isStateFile(ea: SimpleFileOrString) {\n  return isJsonExt(ea) && !isWip(ea)\n}\n\nexport function isSharedStateFileOrDir(f: SimpleFileOrString | Dirent) {\n  return isPsLockFileOrDir(f) || isJsonExt(f) || isWip(f)\n}\n\nexport function isFreshEvent(evt: StoredEvent<any>): boolean {\n  const ts = tsFromUid(evt?.uid)\n  const fresh = isStoredEvent(evt) && isRecentMs(ts, EventTimeoutMs)\n  if (fresh && evt.name === \"exit\") {\n    // exit events should be disregarded if they happened before we started:\n    return gt(ts, StartTs)\n  } else {\n    return fresh\n  }\n}\n\nexport function dedupeStoredEvents(\n  arr: Maybe<StoredEvent<any>>[]\n): StoredEvent<any>[] {\n  const sorted = sortBy(compact(arr).filter(isFreshEvent), ea => ea.uid)\n\n  return uniqByLast(sorted, ea => stringify({ name: ea.name, args: ea.args }))\n}\n\n/**\n * Handles watching and broadcasting changes in shared state.\n *\n * This class replaces v1.x's RPC stuff.\n *\n * 1. Each process writes to it's own shared state file, living in $configDir/shared-state/$pid.json (no locking!)\n * 2. Each process is in charge of removing its own broadcast events after a minute.\n * 3. If a process handles a task, it should broadcast a taskResult.\n * 4. The process that submitted the task will remove the task when it sees the taskResult event.\n */\nexport class SharedState extends EndableWrapper {\n  readonly jsonFile: PosixFile\n  #pollInterval: Maybe<NodeJS.Timer>\n  readonly #jsoncontent2event = new TTLMap<string, StoredEvent<any>>(\n    EventTimeoutMs\n  )\n  // readonly #myTasks = new TTLMap<string, StoredTask<any>>(\n  //   Settings.sharedStateTaskTimeoutMs.valueOrDefault\n  // )\n  readonly handledEventUids = new TTLSet<string>(\n    Settings.sharedStateTaskTimeoutMs.valueOrDefault\n  )\n  readonly handledTaskUids = new TTLSet<string>(\n    Settings.sharedStateTaskTimeoutMs.valueOrDefault\n  )\n  readonly #uid2pendingTasks = new TTLMap<\n    string,\n    Deferred<TaskResult, StoredTask<any>>\n  >(Settings.sharedStateTaskTimeoutMs.valueOrDefault)\n\n  static readonly instance = lazy(() => {\n    if (isWorkerService()) {\n      logger().warn(\n        \"SharedState.instance() is not supported within worker services.\",\n        shortStack()\n      )\n      return\n    }\n    const result = map(\n      Settings.sharedStateDir.valueOrDefault,\n      ea => new SharedState(PosixFile.for(ea))\n    )\n    if (result != null) {\n      Settings.sharedStateTaskTimeoutMs.watchLater(ea => {\n        // result.#myTasks.ttlMs = ea\n        result.handledEventUids.ttlMs = ea\n        result.handledTaskUids.ttlMs = ea\n        result.#uid2pendingTasks.ttlMs = ea\n      })\n    }\n    return result\n  })\n\n  constructor(\n    readonly dir: PosixFile,\n    readonly id: string = String(pid),\n    readonly eventEmitter = ee(),\n    readonly processors: TaskProcessor[] = taskProcessors\n  ) {\n    super(\n      \"event.SharedState(\" + dir + \")#\" + id,\n      () => this.#onEnd(),\n      EndableRanks.first\n    )\n    this.jsonFile = dir.join(id + \".json\")\n\n    mapGt0(\n      Settings.sharedStatePollMs.valueOrDefault,\n      ms => (this.#pollInterval = setInterval(() => this.read(), ms))\n    )\n    void this.setup()\n  }\n\n  #onDirChange(_err: Error | null, events: Event[]) {\n    const files = toA(events)\n      .filter(\n        ea =>\n          ea.type !== \"delete\" && !ea.path.endsWith(sep + this.jsonFile.base)\n      )\n      .map(ea => ea.path)\n    this.logger.debug(\"#onDirChange()\", { files, _err, events })\n    void this.read({ files })\n  }\n\n  async #onEnd() {\n    // WE DON'T UNLINK HERE--we want to leave the file around so our last\n    // events get picked up by our siblings.\n    map(this.#pollInterval, clearInterval)\n    this.#pollInterval = undefined\n  }\n\n  readonly setup = lazy(async () => {\n    this.#uid2pendingTasks.on(\"expire\", (k, v) => {\n      this.logger.warn(\n        \"failed to resolve task before timeout (see sharedStateTaskTimeoutMs)\",\n        {\n          task: v.payload,\n          sharedStateTaskTimeoutMs:\n            Settings.sharedStateTaskTimeoutMs.valueOrDefault\n        }\n      )\n      const err: TaskFailure = {\n        uid: k,\n        ts: Date.now(),\n        pid: processName(),\n        error: \"timeout\"\n      }\n      void v.resolve(err)\n    })\n    await this.read({ setup: true })\n    await DirWatcher.for(\n      this.dir,\n      (err, events) => this.#onDirChange(err, events),\n      EndableRanks.first\n    )\n  })\n\n  async read({\n    files,\n    setup\n  }: { files?: SimpleFileOrString[]; setup?: boolean } = {}) {\n    if (isEmpty(files)) {\n      files = toA(\n        await this.jsonFile.clearThisAndParent().siblings(ea => isStateFile(ea))\n      )\n    }\n    const arr = []\n\n    for (const file of files) {\n      if (\n        isStateFile(file) &&\n        basename(file) !== this.jsonFile.base &&\n        (await isMtimeRecent(toNativePath_(file), hourMs))\n      ) {\n        const bytes = await readFileMaybe(toNativePath_(file))\n        const json = parseJSON<SharedStateJson>(bytes)\n        if (json != null) arr.push(json)\n      }\n    }\n\n    if (isEmpty(arr)) {\n      this.logger.debug(\"read(): given empty array\")\n      return\n    }\n\n    if (setup === true) {\n      // bootstrap paused state:\n      pause(arr.some(ea => ea?.paused === true))\n    }\n\n    this.logger.debug(\"read()\", { arr })\n\n    let updated = false\n\n    // even if a shared state JSON only has 1 field, still parse it:\n    if (isEmpty(arr)) {\n      return\n    }\n\n    const events = dedupeStoredEvents(flatten(arr.map(ea => ea.events)))\n\n    this.logger.debug(\"read() events\", { arr, events })\n\n    for (const event of events) {\n      // don't re-do tasks that have been started or finished:\n      if (event.name === \"taskResult\" || event.name === \"taskStarted\")\n        this.handledTaskUids.add(event.uid)\n\n      // process the remote event:\n      updated ||= this.#handleRemoteEvent(event)\n    }\n\n    if (updated) await this.save()\n\n    const unfilteredTasks = flatten(arr.map(ea => ea.tasks))\n\n    const taskExpireTs = Date.now() - Settings.taskTimeoutMs.valueOrDefault\n    const tasks = sortUniqBy(\n      unfilteredTasks.filter(\n        ea =>\n          isStoredTask(ea) &&\n          !this.handledTaskUids.has(ea.uid) &&\n          gt(tsFromUid(ea?.uid), taskExpireTs)\n      ),\n      ea => ea.uid\n    )\n\n    if (isNotEmpty(tasks)) {\n      this.logger.info(\"read()\", { tasks })\n    }\n\n    // don't run these tasks again:\n    this.handledTaskUids.addAll(tasks.map(ea => ea.uid))\n\n    for (const task of tasks) {\n      // don't wait for each task: get each running ASAP. This may edit\n      // the JSON if we handle a task.\n\n      // these are possibly contested tasks, so we need an fs lock.\n      void this.#handleTask({\n        task,\n        sendEvents: true,\n        withFsLock: true\n      })\n    }\n\n    this.#updateSyncState(arr)\n\n    return\n  }\n\n  vacuum() {\n    deleteIf(this.#uid2pendingTasks, (_, v) => v.isSettled)\n  }\n\n  currentState(): SharedStateJson {\n    this.vacuum()\n    return {\n      pid: process.pid,\n      paused: isPaused(),\n      syncing: isSyncService() ? isSyncing() : undefined,\n      events: [...this.#jsoncontent2event.values()],\n      tasks: [...this.#uid2pendingTasks.values()].map(ea => ea.payload!)\n    }\n  }\n\n  async maybeSave() {\n    const state = this.currentState()\n    const prior = await this.jsonFile.readJson()\n    if (!eql(state, prior)) {\n      await this.save()\n    }\n  }\n\n  readonly save = oneAtATime({\n    fn: () => {\n      const state = this.currentState()\n      this.logger.info(\"save()\", { state })\n      return this.jsonFile.writeJson_(state)\n    }\n  })\n\n  async broadcast<E extends EventName>(\n    name: E,\n    ...args: Args<PhotoStructureEvents[E]>\n  ) {\n    return this.broadcastEvent_({ name, args })\n  }\n\n  async broadcastEvent_<E extends EventName>(evt: {\n    uid?: string\n    name: E\n    args: Args<PhotoStructureEvents[E]>\n  }): PromiseMaybe<StoredEvent<E>> {\n    const event = { ...evt, uid: evt.uid ?? uid() }\n    this.logger.info(\"addEvent_()\", { event })\n    const key = stringify(pick(event, \"name\", \"args\"))\n    // newer events should override prior:\n    this.#jsoncontent2event.set(key, event)\n    this.handledEventUids.add(event.uid)\n    this.eventEmitter.emit(event.name, ...event.args)\n    await this.save()\n    return event\n  }\n\n  #updateSyncState(arr: SharedStateJson[]) {\n    // only the webservice cares about sync state:\n    if (!isWebService()) return\n\n    const syncingPids = arr.filter(ea => ea.syncing).map(ea => ea.pid)\n\n    // we're only syncing if the process is still alive:\n    for (const syncingPid of syncingPids) {\n      if (pidExists(syncingPid)) {\n        this.logger.debug(\"#updateSyncState(): syncing\", { syncingPid })\n        setIsSyncing(true)\n        return\n      }\n    }\n\n    this.logger.debug(\"#updateSyncState(): no syncing states\", { syncingPids })\n\n    setIsSyncing(false)\n  }\n\n  /**\n   * @return true iff this should re-save\n   */\n  #handleRemoteEvent(event: StoredEvent<any>): boolean {\n    if (!isFreshEvent(event)) {\n      this.logger.warn(\"#handleRemoteEvent(): ignoring stale event\", { event })\n      return false\n    }\n\n    // don't double-process any events:\n    if (this.handledEventUids.has(event.uid)) return false\n    this.handledEventUids.add(event.uid)\n\n    this.logger.info(\"#handleRemoteEvent()\", event)\n    if (event.name === \"resume\") {\n      resume()\n    } else if (event.name === \"pause\") {\n      pause()\n    } else if (event.name === \"taskResult\") {\n      const taskResult: TaskResult = event.args[0] as any\n      if (!isTaskResult(taskResult)) {\n        this.logger.warn(\"Invalid task result\", { event })\n        return true // \"handled\"?\n      }\n      const d = this.#uid2pendingTasks.get(taskResult.uid)\n      if (d != null) {\n        this.logger.info(\"Received a task result for one of my tasks!\", {\n          event\n        })\n        void d.resolve(taskResult)\n      }\n      return true\n    } else {\n      this.eventEmitter.emit(event.name, ...event.args)\n    }\n    return false\n  }\n\n  canHandleTaskLocally(task: StoredTask<any>): boolean {\n    return this.processors.some(ea => ea.accept(task))\n  }\n\n  async #handleTask({\n    task,\n    sendEvents,\n    withFsLock\n  }: {\n    task: StoredTask<any>\n    sendEvents: boolean\n    withFsLock: boolean\n  }): PromiseMaybe<TaskResult> {\n    const processors = this.processors.filter(ea => ea.accept(task))\n    if (processors.length === 0) {\n      this.logger.info(\"#handleTask(): no local task processor\", { task })\n      return\n    }\n\n    if (withFsLock) {\n      return withLock_(\n        {\n          name: \"task-\" + task.name + \"-\" + task.uid,\n          file: this.dir.join(task.uid),\n          timeoutMs: Settings.sharedStateTaskTimeoutMs.valueOrDefault,\n          noopIfContested: true // < don't run a task multiple times\n        },\n        () => this.#handleTask({ task, sendEvents, withFsLock: false })\n      )\n    }\n\n    let result: TaskResult\n\n    if (processors.length > 1) {\n      this.logger.warn(\n        \"#handleTask(): multiple local task processors for \" + task.name,\n        { processors: processors.map(ea => ea.name) }\n      )\n      // first one will get a crack at it...\n    }\n\n    for (const ea of processors) {\n      try {\n        result = {\n          uid: task.uid,\n          ts: Date.now(),\n          pid: processName() + \"-\" + ea.name,\n          result: await thenOrTimeoutError(\n            ea.apply(task),\n            Settings.sharedStateTaskTimeoutMs.valueOrDefault\n          )\n        }\n        this.logger.info(\"#handleTask(): processor success\", {\n          processor: ea.name,\n          result,\n          task\n        })\n        break\n      } catch (error) {\n        this.logger.warn(\"#handleTask(): processor failed\", {\n          processor: ea.name,\n          error\n        })\n        result = {\n          uid: task.uid,\n          ts: Date.now(),\n          pid: processName() + \"-\" + ea.name,\n          error: errorToS(error)\n        }\n      }\n    }\n    if (result! == null) {\n      this.logger.warn(\"#handleTask(): null result\" + InternalErrorFlag, {\n        task\n      })\n      result = {\n        uid: task.uid,\n        ts: Date.now(),\n        pid: processName() + \"-error\",\n        error: \"null result\" + InternalErrorFlag\n      }\n    }\n\n    // resolve the task before broadcasting event to only save once:\n\n    void this.#uid2pendingTasks.get(task.uid)?.resolve(result)\n\n    if (sendEvents) {\n      this.logger.warn(\"#handleTask(): broadcasting result\", { task, result })\n      await this.broadcastEvent_({ name: \"taskResult\", args: [result] })\n    } else {\n      this.logger.warn(\"#handleTask(): NOT broadcasting result\", {\n        task,\n        result\n      })\n    }\n\n    return result\n  }\n\n  /**\n   * Process the given task, either locally, or request another process to\n   * handle it.\n   */\n  submitTask_<T extends TaskName>(\n    name: T,\n    ...args: Args<PhotoStructureTasks[T]>\n  ): Deferred<TaskResult, StoredTask<any>> {\n    this.logger.info(\"submitTask_()\", { name, args })\n\n    const task: StoredTask<any> = { uid: uid(), name, args }\n\n    // We always return a Deferred just to make the API consistent.\n    const d = new Deferred<TaskResult, StoredTask<any>>(name, {\n      payload: task\n    }).setTimeout(Settings.sharedStateTaskTimeoutMs.valueOrDefault)\n\n    // if we can handle the task locally, we don't need to do any bookkeeping--just run it and return.\n    if (this.canHandleTaskLocally(task)) {\n      return d.observe(\n        this.#handleTask({\n          task,\n          withFsLock: false, // we're the only one that's seen this task so far\n          sendEvents: false\n        }) as any\n      ) // we know it will be defined\n    }\n\n    // Dang. Hope there's someone out there that can do this!\n\n    // broadcast failure:\n    void d.catch(err => {\n      void this.broadcastEvent_({\n        name: \"taskResult\",\n        args: [\n          {\n            uid: task.uid,\n            ts: Date.now(),\n            pid: processName() + \"-error\",\n            error: \"uncaught rejection: \" + errorToS(err) + InternalErrorFlag\n          }\n        ]\n      })\n    })\n\n    this.#uid2pendingTasks.set(task.uid, d)\n\n    // this will add the task to our shared-state.json, which the other\n    // processes will see:\n    void this.save()\n    return d\n  }\n}\n\nexport function submitTask_<T extends TaskName>(\n  name: T,\n  ...args: Args<PhotoStructureTasks[T]>\n): Maybe<Deferred<TaskResult, StoredTask<any>>> {\n  return SharedState.instance()?.submitTask_(name, ...args)\n}\n\nexport async function clearSharedStates() {\n  const prior = SharedState.instance.clear()\n  await prior?.end()\n  const root =\n    prior?.dir ??\n    map(Settings.sharedStateDir.valueOrDefault, ea => PosixFile.for(ea))\n  await root?.visitDescendants(ea => {\n    return isSharedStateFileOrDir(ea)\n      ? ea.isDirectorySync()\n        ? ea.rmdir()\n        : ea.unlink()\n      : undefined\n  })\n}\n","import { isTest } from \"../NodeEnv\"\nimport { StoredTask } from \"./PhotoStructureEvents\"\n\nexport interface TaskProcessor {\n  name: string\n\n  /**\n   * Can this processor handle this task?\n   */\n  accept(task: StoredTask<any>): boolean\n\n  /**\n   * @return null if the task was not handled, and a non-blank string iff the\n   * listener \"handled\" the task\n   * @throw if the error task was attempted but failed\n   */\n  apply(task: StoredTask<any>): Promise<string>\n}\n\nexport const taskProcessors: TaskProcessor[] = []\n// outside of the instance, so it can be set up before we read shared state:\n\nexport function addTaskProcessor(processor: TaskProcessor) {\n  taskProcessors.push(processor)\n}\n\nexport function clearTaskProcessors() {\n  if (isTest) taskProcessors.length = 0\n}\n","import { later } from \"../../fe/Delay\"\nimport { ee } from \"./EventEmitter\"\n\nlet updateReadyToInstall = false\n\nlater(() =>\n  ee().on(\"updateReadyToInstall\", () => (updateReadyToInstall = true))\n)\n\nexport function isUpdateReadyToInstall() {\n  return updateReadyToInstall\n}\n","import fs from \"fs\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isWin } from \"../platform/Platform\"\n\nconst getUid = lazy(() => process.geteuid?.())\nconst getGids = lazy(() => process.getgroups?.())\n\nexport function isStatRWX(stat: Maybe<fs.Stats>): boolean {\n  return access({ stat, r: true, w: true, x: true })\n}\nexport function isStatRX(stat: Maybe<fs.Stats>): boolean {\n  return access({ stat, r: true, x: true })\n}\n\nexport function access({\n  stat,\n  r = false,\n  w = false,\n  x = false,\n  processUid,\n  processGid\n}: {\n  stat: Maybe<fs.Stats>\n  r?: boolean\n  w?: boolean\n  x?: boolean\n  processUid?: number\n  processGid?: number\n}): boolean {\n  if (stat == null) return false\n  const uid = processUid ?? getUid()\n  const gids = processGid != null ? [processGid] : getGids() ?? []\n\n  const isRoot = uid === 0\n  const isUser = isRoot || stat.uid === uid\n  const isGroup = isRoot || gids.includes(stat.gid)\n\n  if (r) {\n    const mask = (isUser ? 0o400 : 0) | (isGroup ? 0o040 : 0) | 0o004\n    if ((mask & stat.mode) === 0) return false\n  }\n\n  if (w) {\n    const mask = (isUser ? 0o200 : 0) | (isGroup ? 0o020 : 0) | 0o002\n    if ((mask & stat.mode) === 0) return false\n  }\n\n  // windows doesn't care about x: it happily executes files with no execute\n  // bit as long as the extension is .exe/.bat/...\n  if (x && !isWin) {\n    const mask = (isUser ? 0o100 : 0) | (isGroup ? 0o010 : 0) | 0o001\n    if ((mask & stat.mode) === 0) return false\n  }\n\n  return true\n}\n","import _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { equalsIgnoreCase } from \"../String\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { isLinux } from \"../platform/Platform\"\nimport { FileCache } from \"./FileCache\"\nimport { logger, parseNativePath, pathIsRoot, resolve } from \"./Path\"\nimport { readdir_ } from \"./Readdir\"\n\nexport async function actualPath(...nativePath: string[]): Promise<string> {\n  try {\n    return await actualPath_(...nativePath)\n  } catch (error) {\n    logger().warn(\"actualPath() failed, reverting to resolve()\", {\n      nativePath,\n      error\n    })\n    return resolve(...nativePath)\n  }\n}\nconst actualPathCache = lazy(\n  () => new FileCache<string>({ name: \"fs.Path.actualPathCache\" })\n)\n/**\n * `node:fs.resolve()`, `node:fs.normalize()`, and `node:fs.realpath()` don't\n * actually return the _actual_ correctly-cased filename for case-insensitive\n * filesystems on Windows and macOS.\n *\n * This method does that.\n */\n\nexport async function actualPath_(...nativePath: string[]): Promise<string> {\n  // our resolve() upcases drive letters:\n  const resolved = resolve(...nativePath)\n  // No need to check on Linux (filesystems are case-sensitive), or for root\n  // paths (which would cause an infinite loop)\n  if (isLinux || pathIsRoot(resolved)) {\n    return resolved\n  }\n\n  return actualPathCache().getOrSetAsync(resolved, async () => {\n    const p = parseNativePath(resolve(...nativePath))\n    const actualDir = await actualPath_(p.dir)\n    for (const ea of await readdir_(actualDir)) {\n      // equalsIgnoreCase does unicode normalization!\n      if (equalsIgnoreCase(ea.basename, p.base)) {\n        return _path.join(actualDir, ea.basename)\n      }\n    }\n    throw new WrappedError(resolved + \" not found\", {\n      code: \"ENOENT\",\n      path: resolved\n    })\n  })\n}\n","import { readdirSync } from \"fs\"\nimport { dirname } from \"path\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\n\nexport function ancestors(path: string): string[] {\n  const arr = []\n  while (path !== dirname(path)) {\n    path = dirname(path)\n    arr.push(path)\n  }\n  return arr\n}\n\nexport function childrenSync(path: string): string[] {\n  try {\n    return readdirSync(path)\n  } catch (err) {\n    return []\n  }\n}\nexport function hasChildren(path: string, childNames: string[]): boolean {\n  const actual = childrenSync(path)\n  return childNames.every(ea => actual.includes(ea))\n}\n\nexport function ancestorWithChildren(\n  path: string,\n  childNames: string[]\n): Maybe<string> {\n  return ancestors(path).find(ea => hasChildren(ea, childNames))\n}\n","import fs, { readFileSync, watch, WatchEventType } from \"fs\"\nimport * as _fse from \"fs-extra\"\nimport { readFile } from \"fs/promises\"\nimport _path from \"path\"\nimport process from \"process\"\nimport stream from \"stream\"\nimport { pipeline } from \"stream/promises\"\nimport util from \"util\"\nimport zlib from \"zlib\"\nimport { lazy } from \"../../core/Lazy\"\nimport {\n  compact,\n  filterInPlaceAsync,\n  includesAll,\n  isEmpty,\n  isNotEmpty\n} from \"../../fe/Array\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs, unixtime } from \"../../fe/Date\"\nimport { eql } from \"../../fe/Eql\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { stringify } from \"../../fe/JSON\"\nimport { denull, map, map3, mapOr, orElse } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { closeTo, gt0, gte } from \"../../fe/Number\"\nimport { omit } from \"../../fe/Object\"\nimport { opt } from \"../../fe/Opt\"\nimport { pad2 } from \"../../fe/Pad\"\nimport { newlineRe } from \"../../fe/String\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { leastBy, leastIndex, max } from \"../Array\"\nimport { Deferred } from \"../async/Deferred\"\nimport {\n  thenDefined,\n  thenMap,\n  thenMap2Or,\n  thenMapOr,\n  thenNot\n} from \"../async/Promise\"\nimport { time, timeSync } from \"../async/PromiseTimer\"\nimport { untilTrue } from \"../async/until\"\nimport { bufferToString } from \"../Buffer\"\nimport { isRetriableError } from \"../error/ErrorTypes\"\nimport { ee } from \"../event/EventEmitter\"\nimport { parseJSON } from \"../JSON\"\nimport { LogLevel } from \"../log/LogLevel\"\nimport { mkLogger } from \"../Logger\"\nimport { min } from \"../math/Vector\"\nimport { isLinux, isWin } from \"../platform/Platform\"\nimport { Predicate } from \"../predicates/Predicates\"\nimport { SyncPredicate } from \"../predicates/SyncPredicates\"\nimport { equalsIgnoreCase, stripSuffix } from \"../String\"\nimport { diceCoeff, hamming } from \"../StringSimilarity\"\nimport { bname } from \"../tags/Bname\"\nimport { userDesc } from \"../UserInfo\"\nimport { access, isStatRWX } from \"./Access\"\nimport { actualPath } from \"./ActualPath\"\nimport { splitLines } from \"./CRLF\"\nimport { DirectoryEntry, StatDirent } from \"./DirectoryEntry\"\nimport {\n  ensureNewNativePath_,\n  ensureNewNativePathSync_,\n  EnsureNewOptions\n} from \"./EnsureNew\"\nimport { CacheableFile, FileCache } from \"./FileCache\"\nimport { fileSha_, fileShaMeta_ } from \"./Hash\"\nimport { JsonWriteOptions } from \"./JsonWriteOptions\"\nimport { LineReader } from \"./LineReader\"\nimport {\n  containedByNativePath,\n  ellipsizePath,\n  isAbsolute,\n  isHiddenBasename,\n  isUNC,\n  mkdirp_,\n  mkdirpSync_,\n  parseNativePath,\n  pathDepth,\n  pathIsRoot,\n  posixPathFrom,\n  resolve,\n  splitNativePath\n} from \"./Path\"\nimport { native2posix } from \"./PosixNative\"\nimport { ProjectPath } from \"./ProjectPath\"\nimport { readdir_ } from \"./Readdir\"\nimport { SimpleDirent } from \"./SimpleDirent\"\nimport {\n  isSimpleFile,\n  SimpleFile,\n  SimpleFileOrString,\n  toNativePath_\n} from \"./SimpleFile\"\nimport { stat_, statMaybe, statTimes } from \"./Stat\"\nimport { statSync } from \"./StatSync\"\nimport { onDataChunked } from \"./StreamChunker\"\nimport { touch_ } from \"./Touch\"\nimport { writeFile_, writeText_, writeTextSync_ } from \"./WriteFile\"\nimport { zCopyToBuffer_ } from \"./zcat\"\n\nexport function isBaseFile(object: any): object is BaseFile {\n  return isSimpleFile(object) && object instanceof BaseFile\n}\n\nexport interface FileProgress {\n  path: string\n  /**\n   * operation (like \"sha\" or \"cp\")\n   */\n  op: string\n  /**\n   * percent complete\n   */\n  pct: number\n}\nconst cache = lazy(() => new FileCache<BaseFile>({ name: \"fs.BaseFile\" }))\n\nexport type UtimesArgs = Omit<\n  Parameters<typeof touch_>[0],\n  \"file\" | \"ensureFile\"\n>\n\nexport type RefreshArgs = {\n  refresh?: boolean\n  logLevel?: LogLevel\n}\n\n/**\n * Extracted from PosixFile, this superclass is used by the FileLogger.\n *\n * It must not depend on core code that also requires a Logger.\n */\nexport class BaseFile implements SimpleFile, CacheableFile {\n  protected readonly bflog = lazy(() =>\n    mkLogger(\"fs.BaseFile(\" + this.nativePath + \")\")\n  )\n\n  protected static attrTTL = 3 * minuteMs\n  readonly posixPath: string\n  readonly nativePath: string\n\n  /** \"/home/user/dir\" of \"/home/user/dir/file.txt\" */\n  readonly dir: string\n  /** \"file.txt\" of \"/home/user/dir/file.txt\" */\n  readonly base: string\n  /** \"file\" of \"/home/user/dir/file.txt\" */\n  readonly name: string\n  /** \".txt\" of \"/home/user/dir/file.txt\" */\n  readonly ext: string\n\n  protected constructor(\n    nativePath: string,\n    private dirent?: DirectoryEntry\n  ) {\n    if (dirent != null) {\n      this.nativePath = dirent.nativePath\n      this.dir = dirent.dir\n      this.base = dirent.base\n      this.name = dirent.name\n      this.ext = dirent.ext\n    } else {\n      this.nativePath = nativePath\n      const parsed = parseNativePath(this.nativePath)\n      this.dir = parsed.dir\n      this.base = parsed.base\n      this.name = parsed.name\n      this.ext = parsed.ext\n    }\n    this.posixPath = native2posix(this.nativePath)\n  }\n\n  toJSON() {\n    return {\n      _ctor: this.constructor.name,\n      nativePath: this.nativePath\n    }\n  }\n\n  toLogJSON() {\n    return this.nativePath\n  }\n\n  [util.inspect.custom]() {\n    return this.toJSON()\n  }\n\n  static async withFastestAccess<F extends BaseFile>(\n    files: Maybe<F>[]\n  ): PromiseMaybe<F> {\n    const arr = compact(files)\n    const msArr = await Promise.all(arr.map(f => f.shaMs()))\n    return arr[leastIndex(msArr)]\n  }\n\n  static projectRoot = lazy(() => {\n    const root = ProjectPath.Root()\n    if (root == null) {\n      throw new Error(\"Cannot find project path\")\n    } else {\n      return BaseFile.for(root)\n    }\n  })\n\n  static forPosix(posixPathOrFile: string | BaseFile) {\n    return posixPathOrFile instanceof BaseFile\n      ? posixPathOrFile\n      : this.for(posixPathOrFile.split(\"/\").join(_path.sep))\n  }\n\n  static forDirectoryEntry(de: DirectoryEntry) {\n    return this.for(de.nativePath, de)\n  }\n\n  static for(nativePathOrFile: SimpleFileOrString, dirent?: DirectoryEntry) {\n    if (nativePathOrFile instanceof BaseFile) {\n      return nativePathOrFile\n    }\n\n    // resolve() is expensive! Try to avoid it...\n\n    const nativePath = isSimpleFile(nativePathOrFile)\n      ? nativePathOrFile.nativePath\n      : toS(nativePathOrFile)\n\n    if (blank(nativePath)) {\n      throw new Error(\"BaseFile.for(): empty nativePathOrFile\")\n    }\n    const prior = cache().get(nativePath)\n    if (prior != null) return prior\n\n    // no need for a mutex: we're sync!\n    const resolved = resolve(nativePath)\n    const result = new BaseFile(resolved, dirent)\n    cache().set(nativePath, result)\n    cache().set(resolved, result)\n    return result\n  }\n\n  /**\n   * Wipe the instance cache and caches of all instances.\n   *\n   * This should only be used by tests.\n   *\n   * @param fromPath if undefined, all instances will be cleared.\n   */\n  static clear(fromPath?: string) {\n    ee().emit(\"fileChanged\", fromPath)\n  }\n\n  for(path: string, dirent?: DirectoryEntry): this {\n    return BaseFile.for(path, dirent) as this\n  }\n\n  forDirectoryEntry(de: DirectoryEntry): this {\n    return BaseFile.for(de.nativePath, de) as this\n  }\n\n  forChildDirent(dirent: SimpleDirent): this {\n    return this.forDirectoryEntry(\n      DirectoryEntry.fromSimpleDirent(this.nativePath, dirent)\n    )\n  }\n\n  forSiblingDirent(dirent: SimpleDirent): this {\n    return this.forDirectoryEntry(\n      DirectoryEntry.fromSimpleDirent(this.dir, dirent)\n    )\n  }\n\n  clear({ emit }: { emit?: boolean } = {}): this {\n    if (emit === true) ee().emit(\"fileChanged\", this.nativePath)\n    this.dirent = undefined\n    this.#childDirectoryEntries.unset()\n    this.#stat = undefined\n    return this\n  }\n\n  clearThisAndParent(): this {\n    ee().emit(\"fileChanged\", this.dir)\n    // this .clear() shouldn't be necessary, but it prevents race conditions\n    // from async onFileChanged listeners.\n    return this.clear({ emit: false })\n  }\n\n  toString() {\n    return this.nativePath\n  }\n\n  valueOf() {\n    return this.pathnames\n  }\n\n  eql(that: Maybe<SimpleFileOrString>): boolean {\n    if (that == null) return false\n    const thatNativePath = toNativePath_(that)\n    // These paths have already been resolve()d. We don't need to do it again\n    // here.\n    return isLinux\n      ? this.nativePath === thatNativePath\n      : // darn Windows and macOS have case-insensitive filesystems!\n        equalsIgnoreCase(this.nativePath, thatNativePath)\n  }\n\n  get isUNC() {\n    return isUNC(this.nativePath)\n  }\n\n  /**\n   * Posix path from parent\n   */\n  get baseWithParent(): string {\n    return (\n      this.isRoot\n        ? \"/\"\n        : this.parent().isRoot\n        ? \"/\" + this.base\n        : (this.parent().parent().isRoot ? \"/\" : \"\") + // <  prefixes the path with a / if grandparent is root.\n          this.parent().base +\n          \"/\" +\n          this.base\n    ).normalize() // < normalize for macOS\n  }\n\n  /**\n   * @return nativePath \"…/path/to/file.ext\" with ancestors such that the\n   * result doesn't exceed maxLength\n   */\n  ellipsize({\n    maxLength = 80\n  }: { maxLength?: number; maxDepth?: number } = {}) {\n    return ellipsizePath({ p: this, maxLength })\n  }\n\n  get baseWithParentNoExt(): string {\n    return stripSuffix(this.baseWithParent, this.ext)\n  }\n\n  /**\n   * posix path from grandparent\n   */\n  get baseWithGrandparent(): string {\n    return (\n      this.isRoot\n        ? \"/\"\n        : this.parent().isRoot\n        ? this.baseWithParent\n        : this.parent().baseWithParent + \"/\" + this.base\n    ).normalize()\n  }\n\n  posixPathFrom(from: SimpleFileOrString): string {\n    return posixPathFrom(from, this) + (this.isDirectorySync() ? \"/\" : \"\")\n  }\n\n  async directoryEntry(): PromiseMaybe<DirectoryEntry> {\n    return (this.dirent ??= await thenMap(\n      this.stat(),\n      ea => new DirectoryEntry(this.dir, new StatDirent(this.base, ea))\n    ))\n  }\n\n  directoryEntrySync(): Maybe<DirectoryEntry> {\n    return (this.dirent ??= map(\n      this.statSync(),\n      ea => new DirectoryEntry(this.dir, new StatDirent(this.base, ea))\n    ))\n  }\n\n  readonly #childDirectoryEntries = lazy(() =>\n    thenMap(this.directoryEntry(), de => de.children())\n  )\n\n  async childDirectoryEntries(f?: Predicate<DirectoryEntry>) {\n    const dirents = await this.#childDirectoryEntries()\n    if (dirents == null || f == null || isEmpty(dirents)) return dirents\n\n    // PERF: don't filterAsync here to avoid lots of Promises GC\n    const result: DirectoryEntry[] = []\n    for (const dirent of dirents) {\n      if (true === (await f(dirent))) result.push(dirent)\n    }\n    return result\n  }\n\n  _directoryEntryChild(de: DirectoryEntry) {\n    return this.for(_path.join(this.nativePath, de.base), de)\n  }\n\n  /**\n   * @return the basename of the children of `this`, locale sorted.\n   */\n  childNames(): PromiseMaybe<string[]> {\n    return thenMap(this.childDirectoryEntries(), arr => arr.map(ea => ea.base))\n  }\n\n  /**\n   * For case-insensitive filesystems, return the closest-matching existing file\n   * **with case matching whats on the filesystem**\n   */\n  async resolve_(): PromiseMaybe<this> {\n    return (\n      (await this.#resolve_()) ?? (await this.clearThisAndParent().#resolve_())\n    )\n  }\n  async #resolve_(): PromiseMaybe<this> {\n    // DON'T USE this.siblingDirectoryEntries(): that filters `this`!\n\n    // Use readdir_() directly to avoid needless DirectoryEntry creation:\n    const sibs = (await readdir_(this.dir)).filter(ea =>\n      equalsIgnoreCase(ea.basename, this.base)\n    )\n    const closest = leastBy(sibs, ea => hamming(ea.basename, this.base))\n    return this.bflog().tap({\n      msg: \"resolve()\",\n      result:\n        closest?.basename === this.base\n          ? this\n          : map(closest, ea => this.forSiblingDirent(ea)),\n      meta: { sibs }\n    })\n  }\n\n  /**\n   * @throws if `readdir` fails\n   */\n  async children_(predicate?: Predicate<SimpleDirent>): Promise<this[]> {\n    const dirents = await readdir_(this.nativePath)\n    if (predicate != null) {\n      await filterInPlaceAsync(dirents, predicate)\n    }\n    // readdir_ gives us sorted files already!\n    return dirents.map(ea => this.forChildDirent(ea))\n  }\n\n  async children(predicate?: Predicate<DirectoryEntry>): PromiseMaybe<this[]> {\n    return (await this.childDirectoryEntries(predicate))?.map(ea =>\n      this._directoryEntryChild(ea)\n    )\n  }\n\n  async childFiles(\n    predicate?: Predicate<DirectoryEntry>\n  ): PromiseMaybe<this[]> {\n    const arr = await this.childDirectoryEntries(async ea => {\n      return (\n        ea.isFile() && (predicate == null || true === (await predicate(ea)))\n      )\n    })\n    return arr == null\n      ? undefined\n      : arr.map(ea => this._directoryEntryChild(ea))\n  }\n\n  async childDirectories(\n    predicate?: Predicate<DirectoryEntry>\n  ): PromiseMaybe<this[]> {\n    const arr = await this.childDirectoryEntries(async ea => {\n      return (\n        ea.isDirectory() &&\n        (predicate == null || true === (await predicate(ea)))\n      )\n    })\n    return arr == null\n      ? undefined\n      : arr.map(ea => this._directoryEntryChild(ea))\n  }\n\n  /**\n   * ONLY FOR TESTS\n   */\n  childrenSync(): this[] {\n    return orElse(\n      this.trapSync(\"childrenSync\", () =>\n        fs.readdirSync(this.nativePath).map(ea => this.join(ea))\n      ),\n      []\n    )\n  }\n  childFilesSync(): this[] {\n    return orElse(\n      this.trapSync(\"childrenSync\", () =>\n        fs\n          .readdirSync(this.nativePath, { withFileTypes: true })\n          .filter(ea => ea.isFile())\n          .map(ea => this.join(ea.name))\n      ),\n      []\n    )\n  }\n\n  async hasChildren(childNames?: string[]) {\n    const actualChildNames = await this.childNames()\n    return isNotEmpty(childNames)\n      ? includesAll(actualChildNames, childNames)\n      : isNotEmpty(actualChildNames)\n  }\n\n  async hasNoChildren() {\n    return (await this.isFile()) || isEmpty(await this.childNames())\n  }\n\n  /**\n   * Depth-first recursion, includes child directories.\n   */\n  async visitDescendants(\n    f: (descendant: this) => any | Promise<any>\n  ): Promise<void> {\n    return thenMap(this.children(), async children => {\n      for (const child of children) {\n        await child.visitDescendants(f)\n        await f(child)\n      }\n    })\n  }\n\n  /**\n   * Breadth-first recursion\n   *\n   * @return all files (no directories) that pass the given predicate.\n   */\n  async descendants(\n    predicate: Predicate<DirectoryEntry>\n  ): PromiseMaybe<this[]> {\n    const result: this[] = []\n    result.push(...toA(await this.childFiles(predicate)))\n    const dirs = await this.childDirectories()\n    if (dirs == null) return result\n    for (const dir of dirs) {\n      result.push(...toA(await dir.descendants(predicate)))\n    }\n    return result\n  }\n\n  async someDescendant(\n    predicate: Predicate<DirectoryEntry>,\n    depth: number = 0\n  ): PromiseMaybe<this> {\n    if (!gt0(depth)) return\n    const arr = (await this.#childDirectoryEntries()) ?? []\n    for (const ea of arr) {\n      if (true === (await predicate(ea))) {\n        return this._directoryEntryChild(ea)\n      }\n    }\n    if (depth > 0) {\n      for (const ea of arr) {\n        if (ea.isDirectory()) {\n          const result = await this._directoryEntryChild(ea).someDescendant(\n            predicate,\n            depth - 1\n          )\n          if (result != null) return result\n        }\n      }\n    }\n    return\n  }\n\n  /**\n   * Lightweight breadth-first directory entry visiting\n   *\n   * @return all files (no directories) that pass the given predicate.\n   */\n  descendantsSync(predicate: SyncPredicate<DirectoryEntry>): this[] {\n    const thisDe = this.directoryEntrySync()\n    const result: this[] = []\n    thisDe?.visitDescendantsSync(ea => {\n      if (true === predicate(ea)) {\n        result.push(this.forDirectoryEntry(ea))\n      }\n    })\n    return result\n  }\n\n  async ancestorWithChildren(childNames: string[]): PromiseMaybe<this> {\n    if (await this.hasChildren(childNames)) {\n      return this\n    } else if (this.isRoot) {\n      return undefined\n    } else {\n      return this.parent().ancestorWithChildren(childNames)\n    }\n  }\n\n  async siblings(f?: Predicate<DirectoryEntry>): PromiseMaybe<this[]> {\n    const p = this.parent()\n    return (await this.siblingDirectoryEntries(f))?.map(ea =>\n      p._directoryEntryChild(ea)\n    )\n  }\n\n  async siblingDirectoryEntries(\n    f?: Predicate<DirectoryEntry>\n  ): PromiseMaybe<DirectoryEntry[]> {\n    return this.parent().childDirectoryEntries(\n      async ea => ea.base !== this.base && (f == null || true === (await f(ea)))\n    )\n  }\n\n  async selfAndSiblings() {\n    return this.parent().children()\n  }\n\n  async firstExistingSelfOrAncestor(): Promise<this> {\n    return this.isRoot || (await this.exists())\n      ? this\n      : this.parent().firstExistingSelfOrAncestor()\n  }\n\n  /**\n   * @return [\"C:\", \"Users\", \"Bob\", \"image.jpg\"] on win, [\"home\", \"bob\",\n   * \"image.jpg\"] on !win\n   */\n  get pathnames(): string[] {\n    return splitNativePath(this.nativePath)\n\n    // return this.bflog().tap({\n    //   msg: \"pathnames()\",\n    //   result: splitNativePath(this.nativePath),\n    //   meta: { nativePath: this.nativePath }\n    // })\n  }\n\n  get pathsForDateParsing(): string[] {\n    return [\n      ...(this.isRoot ? [] : this.parent().pathnamesWithoutDrive),\n      bname(this.name)\n    ]\n  }\n\n  get pathnamesWithoutDrive(): string[] {\n    return isWin ? this.pathnames.slice(1) : this.pathnames\n  }\n\n  /**\n   * @return 0 for \"/\" or \"C:\\\", 1 for \"C:\\Users\" or \"/etc\", ...\n   */\n  get depth(): number {\n    return pathDepth(this)!\n  }\n\n  get isRoot(): boolean {\n    return pathIsRoot(this)\n  }\n\n  /**\n   * @param depth The number of directories from root to include. For example,\n   * \"C:\\\" or \"/\" for 0, \"C:\\Users\" or \"/home\" for depth 1\n   */\n  root(depth: number = 0): this {\n    // \"/\".root(1) should return \"/\"\n    return this.depth <= depth ? this : this.parent().root(depth)\n  }\n\n  parent(): this {\n    // MEMLEAK: don't cache this: this.for will do that for us.\n    return this.isRoot ? this : (this.for(this.dir) as this)\n  }\n\n  isAncestorOf(\n    maybeDescendant: Maybe<string | SimpleFile>,\n    args?: { acceptSelf: boolean }\n  ): boolean {\n    return containedByNativePath({\n      ancestor: this,\n      descendant: maybeDescendant,\n      ...args\n    })\n  }\n\n  isDescendantOf(maybeAncestor: Maybe<string | SimpleFile>): boolean {\n    return containedByNativePath({ descendant: this, ancestor: maybeAncestor })\n  }\n\n  isSelfOrDescendantOf(maybeAncestor: Maybe<string | SimpleFile>): boolean {\n    return (\n      maybeAncestor != null &&\n      (this.nativePath === toNativePath_(maybeAncestor) ||\n        this.isDescendantOf(maybeAncestor))\n    )\n  }\n\n  parentsAndSelf(): this[] {\n    return [...this.parents(), this]\n  }\n\n  selfAndParents(depth: number): this[] {\n    return [\n      this,\n      ...(this.isRoot || depth <= 0\n        ? []\n        : this.parent().selfAndParents(depth - 1))\n    ]\n  }\n\n  ancestor(depth = 1): Maybe<this> {\n    // TODO: remove recursion\n    return this.isRoot && depth > 0\n      ? undefined\n      : depth === 0\n      ? this\n      : this.parent().ancestor(depth - 1)\n  }\n\n  findAncestor(predicate: (ea: this) => boolean): Maybe<this> {\n    return this.isRoot\n      ? undefined\n      : predicate(this)\n      ? this\n      : this.parent().findAncestor(predicate)\n  }\n\n  /**\n   * Root-first order of paths (so [/, /var, /var/tmp, ...]\n   */\n  parents(): this[] {\n    const p = this.parent()\n    // NOTE: ALWAYS RETURN A NEW ARRAY, because consumers may .reverse or do\n    // other nasty things to it.\n    return this.isRoot ? [] : [...p.parents(), p]\n  }\n\n  /**\n   * Paths from URIs can have differently-encoded unicode paths (which switching\n   * from macOS to linux or Windows, for example.)\n   *\n   * If `this` exists, return it.\n   *\n   * If it doesn't, walk from the root of the path and try to find elements that,\n   * when unicode-normalized, match the current filesystem.\n   *\n   * As a last-ditch effort, try a case-insensitive match.\n   */\n  async normalize(): Promise<this> {\n    // Don't need to handle UNC paths (they are always windows-only):\n    return this.isUNC ? this : this.for(await actualPath(this.nativePath))\n  }\n\n  sibling(base: string): this {\n    return this.parent().join(base)\n  }\n\n  withPrefix(prefix: string): this {\n    return this.sibling(prefix + this.base)\n  }\n\n  /**\n   * @return this.sibling(this.name + suffix + this.ext)\n   */\n  withNameSuffix(suffix: string): this {\n    return this.sibling(this.name + suffix + this.ext)\n  }\n\n  /**\n   * @return this.sibling(this.base + suffix)\n   */\n  withSuffix(suffix: string): this {\n    return this.sibling(this.base + suffix)\n  }\n\n  siblingOf(possibleSibling: BaseFile): boolean {\n    return (\n      this.nativePath !== possibleSibling.nativePath &&\n      this.dir === possibleSibling.dir\n    )\n  }\n\n  /**\n   * Allows ../... directory traversals.\n   */\n  join(...paths: string[]): this {\n    if (isEmpty(paths) || eql([\".\"], paths) || paths.every(blank)) return this\n    return isAbsolute(paths[0])\n      ? this.for(_path.join(...paths))\n      : this.for(_path.join(this.nativePath, ...paths))\n  }\n\n  joinYMD(d = new Date()): Maybe<this> {\n    return map3(\n      d?.getFullYear(),\n      d?.getMonth(),\n      d?.getDate(),\n      (year, month, day) => this.join(toS(year), pad2(month + 1), pad2(day))\n    )\n  }\n\n  /**\n   * Prevents `..` directory traversals\n   * @param paths\n   */\n  child(...paths: string[]): this {\n    if (isEmpty(paths)) return this\n    const pathElements = flatten(paths.map(ea => ea.split(_path.sep))).filter(\n      ea => ea !== \"..\"\n    )\n    // Convert to posix to prevent \"\\\\\" and \"/\" from confusing the split:\n    return this.join(...pathElements)\n  }\n\n  //  _  _    _\n  // (_)| |_ ( )___    __ _\n  // | || __||// __|  / _` |\n  // | || |_   \\__ \\ | (_| | _  _  _\n  // |_| \\__|  |___/  \\__,_|(_)(_)(_)\n  protected async trap<T>(\n    methodName: string,\n    p: () => SyncOrAsync<T>,\n    errLogLevel: LogLevel = \"warn\"\n  ): PromiseMaybe<T> {\n    try {\n      return await time(\"fs.\" + methodName, p)\n    } catch (err) {\n      this.bflog().log(errLogLevel, `trap: ${methodName}() failed: ${err}`)\n      return undefined\n    }\n  }\n\n  // Return true if p() doesn't raise an error, else return false.\n  protected async trapOr(\n    methodName: string,\n    p: () => Promise<any>,\n    errLogLevel: LogLevel = \"warn\"\n  ): Promise<boolean> {\n    try {\n      await time(\"fs.\" + methodName, p)\n      return true\n    } catch (err) {\n      this.bflog().log(errLogLevel, `trapOr: ${methodName}() failed: ${err}`)\n      return false\n    }\n  }\n\n  protected trapSync<T>(\n    methodName: string,\n    p: () => T,\n    errLogLevel: LogLevel = \"warn\"\n  ): Maybe<T> {\n    try {\n      // this.bflog().trace(`trapSync ${methodName}()`)\n      return timeSync(\"fs.\" + methodName, p)\n    } catch (err) {\n      this.bflog().log(errLogLevel, `${methodName}() failed: ${err}`)\n      return undefined\n    }\n  }\n\n  /**\n   * Never cached\n   */\n  stat_() {\n    return stat_(this.nativePath)\n  }\n\n  #stat: Maybe<fs.Stats> = undefined\n\n  async stat(opts?: RefreshArgs) {\n    if (opts?.refresh ?? false) {\n      this.#stat = undefined\n    }\n    return (this.#stat ??= await statMaybe(this.nativePath))\n  }\n\n  statSync(opts?: RefreshArgs) {\n    if (opts?.refresh ?? false) {\n      this.#stat = undefined\n    }\n    return (this.#stat ??= statSync(this.nativePath))\n  }\n\n  async exists(opts?: RefreshArgs): Promise<boolean> {\n    if (opts?.refresh ?? false) {\n      this.dirent = undefined\n    }\n    return this.dirent != null || (await thenDefined(this.stat(opts)))\n  }\n\n  existsSync(opts?: RefreshArgs): boolean {\n    if (opts?.refresh ?? true) {\n      this.dirent = undefined\n    }\n    return this.dirent != null || this.statSync(opts) != null\n  }\n\n  async notExists(opts?: RefreshArgs): Promise<boolean> {\n    return thenNot(this.exists(opts))\n  }\n\n  async isDeleted(maxDepth = 3): PromiseMaybe<boolean> {\n    if (await this.exists({ refresh: true })) {\n      return this.bflog().tap({\n        result: false,\n        msg: \"isDeleted(): file exists\"\n      })\n    }\n\n    if (this.isRoot || maxDepth <= 0) {\n      return this.bflog().tap({\n        result: undefined,\n        msg: \"isDeleted(): isRoot() and doesn't exist (volume is just unmounted)\"\n      })\n    }\n\n    const parentIsDeleted = await this.parent().isDeleted(maxDepth - 1)\n\n    if (parentIsDeleted == null) {\n      return this.bflog().tap({\n        result: undefined,\n        msg: \"isDeleted(): parent().isDeleted was undefined\",\n        meta: { parentIsDeleted }\n      })\n    } else {\n      return this.bflog().tap({\n        result: true,\n        msg: \"isDeleted(): parent was either deleted or not deleted: either way, that means I am deleted.\",\n        meta: { parentIsDeleted }\n      })\n    }\n  }\n\n  mtime(): PromiseMaybe<Date> {\n    return thenMap(this.stat(), s => s.mtime)\n  }\n\n  mtimeMs(opts?: RefreshArgs): PromiseMaybe<number> {\n    return thenMap(this.stat(opts), s => Math.floor(s.mtimeMs))\n  }\n\n  async mtimeSec(): PromiseMaybe<number> {\n    const s = await this.stat()\n    return s == null ? undefined : unixtime(s.mtimeMs)\n  }\n\n  async lastModifiedUtc(): PromiseMaybe<string> {\n    return (await this.stat())?.mtime.toUTCString()\n  }\n\n  // The mtime, rather than the birthtime, will actually be the capture\n  // time if the file is \"copied and pasted\" via the Windows explorer\n  // (rather than using `rsync --times` or `cp --preserve=all`).\n\n  // Birthtime isn't supported by default in linux, and seems to just return\n  // the ctime.\n\n  /**\n   * @return the uniq stat times, including birthtime, mtime, and ctime.\n   */\n  async statTimes(): PromiseMaybe<number[]> {\n    const s = await this.stat()\n    return s == null ? undefined : statTimes(s)\n  }\n\n  maxStatMs(): PromiseMaybe<number> {\n    return thenMap(this.statTimes(), max)\n  }\n\n  maxStatDate(): PromiseMaybe<Date> {\n    return thenMap(this.maxStatMs(), ea => new Date(ea))\n  }\n\n  minStatMs(): PromiseMaybe<number> {\n    return thenMap(this.statTimes(), min)\n  }\n\n  minStatDate(): PromiseMaybe<Date> {\n    return thenMap(this.minStatMs(), ea => new Date(ea))\n  }\n\n  async size(opts?: RefreshArgs): PromiseMaybe<number> {\n    return thenMap(this.stat(opts), s => s.size)\n  }\n\n  /**\n   * Always uncached\n   */\n  async size_(): Promise<number> {\n    return (await this.stat_()).size\n  }\n\n  /**\n   * @return Promise<true> if the file is executable (not relevant on windows)\n   */\n  async isExecutable(): Promise<boolean> {\n    return access({ stat: await this.stat(), r: true, x: true })\n  }\n\n  async isReadable(): Promise<boolean> {\n    return access({ stat: await this.stat(), r: true })\n  }\n\n  isNotReadable(): Promise<boolean> {\n    return thenNot(this.isReadable())\n  }\n\n  async isReadWritable(): Promise<boolean> {\n    return access({ stat: await this.stat(), r: true, w: true })\n  }\n\n  isNotReadWritable(): Promise<boolean> {\n    return thenNot(this.isReadWritable())\n  }\n\n  async isReadWriteExecutable(): Promise<boolean> {\n    return isStatRWX(await this.stat())\n  }\n\n  isReadWriteExecutableSync(): boolean {\n    return isStatRWX(this.statSync())\n  }\n\n  async isReadWriteExecutable_(): Promise<boolean> {\n    return isStatRWX(await this.stat_())\n  }\n\n  async isReadWriteDirectory(): Promise<boolean> {\n    const stat = await this.stat()\n    return stat?.isDirectory() === true && isStatRWX(stat)\n  }\n\n  async assertReadWriteExecutable(): Promise<void> {\n    if (!(await this.isReadWriteExecutable())) {\n      throw new Error(\n        `Please check directory permissions for ${\n          this.nativePath\n        }: it must be read/write${\n          isWin ? \"\" : \"/execute\"\n        } by ${await userDesc()}`\n      )\n    }\n  }\n\n  /**\n   * Is this a rw dir, or **is it possible** for this directory to be made rw?\n   */\n  async maybeReadWriteDirectory(): Promise<boolean> {\n    if ((await this.isFile()) === true) {\n      return false\n    } else if (await this.isDirectory()) {\n      return this.isReadWriteExecutable()\n    } else {\n      // I don't exist! ask my parent:\n      return this.parent().maybeReadWriteDirectory()\n    }\n  }\n\n  isHiddenBasename(): boolean {\n    return isHiddenBasename(this.base)\n  }\n\n  async isEmpty(bytesConsideredEmpty = 0): Promise<boolean> {\n    if (await this.isDirectory()) {\n      return isNotEmpty(await this.childNames())\n    } else {\n      const s = await this.size()\n      return s == null || s <= bytesConsideredEmpty\n    }\n  }\n\n  isNonEmpty(minSizeBytes = 1): Promise<boolean> {\n    return thenNot(this.isEmpty(minSizeBytes))\n  }\n\n  async isEmptyFile(minSizeBytes = 1): Promise<boolean> {\n    const s = await this.stat()\n    return (\n      s == null ||\n      ((await this.isFile()) && !gte(await this.size(), minSizeBytes))\n    )\n  }\n\n  async isNonEmptyFile(minSizeBytes = 1): Promise<boolean> {\n    return (await this.isFile()) && (await this.isNonEmpty(minSizeBytes))\n  }\n\n  async modifiedGTE(mtime: Date): PromiseMaybe<boolean> {\n    return thenMap(\n      this.mtime(),\n      thisMtime =>\n        // Filesystems have only second-level resolution\n        unixtime(thisMtime) >= unixtime(mtime)\n    )\n  }\n\n  async modifiedCloseTo(\n    mtimeMs: number,\n    deltaMs: number\n  ): PromiseMaybe<boolean> {\n    return thenMap(\n      this.mtimeMs(),\n      thisMtimeMs => Math.abs(thisMtimeMs - mtimeMs) <= deltaMs\n    )\n  }\n\n  async isRecent(agoMs: number): Promise<boolean> {\n    const mtime = await this.maxStatMs()\n    return mtime != null && mtime > Date.now() - agoMs\n  }\n\n  async modifiedGT(mtime: Maybe<Date>): PromiseMaybe<boolean> {\n    if (mtime == null) return\n    return thenMap(\n      this.mtime(),\n      thisMtime =>\n        // Filesystems have only second-level resolution\n        unixtime(thisMtime) > unixtime(mtime)\n    )\n  }\n\n  isDirectory(opts?: RefreshArgs): SyncOrAsync<boolean> {\n    if (this.dirent != null) return this.dirent.isDirectory()\n    return thenMapOr(\n      this.stat(opts),\n      ea => ea.isDirectory(),\n      () => false\n    )\n  }\n\n  async isNotDirectory(): Promise<boolean> {\n    return thenNot(this.isDirectory())\n  }\n\n  isDirectorySync(opts?: RefreshArgs): boolean {\n    if (this.dirent != null) return this.dirent.isDirectory()\n    return mapOr(\n      this.statSync(opts),\n      ea => ea.isDirectory(),\n      () => false\n    )\n  }\n\n  async nearestDir(): Promise<this> {\n    return (await this.isDirectory()) ? this : this.parent()\n  }\n\n  async isFile(): Promise<boolean> {\n    if (this.dirent != null) return this.dirent.isFile()\n    const s = await this.stat()\n    return s != null ? s.isFile() : false\n  }\n\n  isFileSync(): boolean {\n    if (this.dirent != null) return this.dirent.isFile()\n    return opt(this.statSync()).filter(ea => ea.isFile()).isDefined\n  }\n\n  async rmdir(errLogLevel: LogLevel = \"warn\"): Promise<boolean> {\n    this.clear()\n    return (\n      (await this.trap(\n        \"rmdir\",\n        async () => {\n          await _fse.rmdir(this.nativePath, {\n            recursive: false,\n            maxRetries: 8,\n            retryDelay: 500\n          })\n          return true\n        },\n        errLogLevel\n      )) ?? false\n    )\n  }\n\n  rmdirSync(errLogLevel: LogLevel = \"warn\"): boolean {\n    this.clear()\n    return (\n      this.trapSync(\n        \"rmdirSync\",\n        () => {\n          _fse.rmdirSync(this.nativePath, {\n            recursive: false,\n            maxRetries: 8,\n            retryDelay: 500\n          })\n          return true\n        },\n        errLogLevel\n      ) ?? false\n    )\n  }\n\n  /**\n   * @throws on error\n   */\n  async mkdirp_(): Promise<this> {\n    try {\n      await mkdirp_(this.nativePath)\n    } catch (err: any) {\n      // EEXIST is from race conditions, and can be ignored.\n      if (err?.code !== \"EEXIST\") throw err\n    }\n    if (\n      // kernel FS lag can't be longer than a second or two\n      false ===\n      (await untilTrue(() => this.clear().isDirectory(), {\n        timeoutMs: 2 * secondMs,\n        intervalMs: 200\n      }))\n    ) {\n      throw new Error(\"Failed to mkdirp \" + this)\n    } else {\n      // this and parent because parent caches children.\n      return this.clearThisAndParent()\n    }\n  }\n\n  async mkdirp(): PromiseMaybe<this> {\n    if ((await this.clear().isDirectory()) || this.isRoot) return this\n    return this.trap(\"mkdirp\", async () => this.mkdirp_())\n  }\n\n  /**\n   * @throws on error\n   */\n  mkdirpSync_(): this {\n    mkdirpSync_(this.nativePath)\n    return this.clearThisAndParent()\n  }\n\n  mkdirpSync(): Maybe<this> {\n    if (this.isRoot) return this\n    return this.trapSync(\"mkdirpSync\", () => this.mkdirpSync_())\n  }\n\n  // no need lazy() or cache: fileSha_ already has smart caching.\n  sha_(): Promise<string> {\n    return fileSha_(this.nativePath)\n  }\n\n  /**\n   * base64 encoded SHA-512/192 (ish)\n   */\n  async sha(): PromiseMaybe<string> {\n    return this.trap(\"sha\", () => this.sha_())\n  }\n\n  /**\n   * @return ms to gather the sha for this file\n   */\n  async shaMs(): PromiseMaybe<number> {\n    // we don't care if the metadata is stale!\n    return this.trap(\n      \"shaMs\",\n      async () =>\n        (await fileShaMeta_(this, { autoInvalidate: false })).elapsedMs\n    )\n  }\n\n  async readJson_<T>(): Promise<T> {\n    return parseJSON((await _fse.readFile(this.nativePath)).toString()) as any\n  }\n\n  readJson<T>(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<T> {\n    return this.trap(\"readJson\", () => this.readJson_<T>(), errLogLevel)\n  }\n\n  readJsonSync<T>(): Maybe<T> {\n    return this.trapSync(\"readJsonSync\", () =>\n      parseJSON<T>(fs.readFileSync(this.nativePath).toString())\n    )\n  }\n\n  readFileSync_() {\n    return readFileSync(this.nativePath)\n  }\n\n  readFile_(): Promise<Buffer> {\n    return readFile(this.nativePath)\n  }\n\n  readFile(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<Buffer> {\n    return this.trap(\"readFile\", () => this.readFile_(), errLogLevel)\n  }\n\n  async readTextFile_() {\n    return bufferToString(await this.readFile_())\n  }\n\n  readTextFile(errLogLevel: LogLevel = \"warn\") {\n    return this.trap(\"readTextFile\", () => this.readTextFile_(), errLogLevel)\n  }\n\n  /**\n   * `readFile`, but on-the-fly decompression for .gz and .br\n   * @throws on error\n   */\n  async zReadFile_(options?: {\n    start?: number\n    end?: number\n  }): PromiseMaybe<Buffer> {\n    return zCopyToBuffer_(this.nativePath, options)\n  }\n\n  async zcat(options?: { start?: number; end?: number }): PromiseMaybe<string> {\n    return this.trap(\"zcat\", () => thenMap(this.zReadFile_(options), toS))\n  }\n\n  readLines(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<string[]> {\n    return thenMap(this.readTextFile(errLogLevel), splitLines)\n  }\n\n  readFileSync(): Maybe<string> {\n    try {\n      return fs.readFileSync(this.nativePath).toString()\n    } catch (error) {\n      this.bflog().warn(\"readFileSync() failed\", { error })\n      return\n    }\n  }\n\n  /**\n   * @throws on error\n   */\n  async writeText_(...txt: string[]) {\n    await writeText_(this.nativePath, ...txt)\n    return this\n  }\n\n  writeTextSync_(...txt: string[]) {\n    writeTextSync_(this.nativePath, ...txt)\n    return this\n  }\n\n  /**\n   * @throws on error\n   */\n  async writeFile_(data: string | Buffer) {\n    await writeFile_(this.nativePath, data)\n    return this\n  }\n\n  async writeJson(object: any, options?: JsonWriteOptions): PromiseMaybe<this> {\n    // outputJSON is almost the same as writeJson, except that if the directory\n    // does not exist, it's created\n    return this.trap(\"writeJsonMaybe\", () => this.writeJson_(object, options))\n  }\n\n  /**\n   * @throws on error\n   */\n  async writeJson_(object: any, options?: JsonWriteOptions): Promise<this> {\n    await mkdirp_(this.dir)\n    await _fse.writeFile(\n      this.nativePath,\n      stringify(object, options?.replacer, options?.spaces),\n      omit(options, \"replacer\", \"spaces\")\n    )\n    this.clearThisAndParent()\n    return this\n  }\n\n  async matchesContent(that: this): Promise<boolean> {\n    const stats = await Promise.all([\n      this.stat({ refresh: true }),\n      that.stat({ refresh: true })\n    ])\n    if (stats[0] == null || stats[1] == null || stats[0].size !== stats[1].size)\n      return false\n    return (await this.sha()) === (await that.sha())\n  }\n\n  async touch(args: UtimesArgs = {}): PromiseMaybe<this> {\n    return this.trap(\"touch\", () => this.touch_(args))\n  }\n\n  async touch_(args: UtimesArgs = {}): Promise<this> {\n    await touch_({\n      ...args,\n      file: this,\n      ensureFile: true\n    })\n    return this.clearThisAndParent()\n  }\n\n  async utimes(args: UtimesArgs = {}): PromiseMaybe<this> {\n    return this.trap(\"utimes\", async () => {\n      await touch_({\n        ...args,\n        file: this,\n        ensureFile: false\n      })\n      this.clearThisAndParent()\n      return this\n    })\n  }\n\n  async rm(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<this> {\n    return this.unlink(errLogLevel)\n  }\n\n  /**\n   * Deletes the current file.\n   * @return Promise<this> if unlink was successful\n   */\n  async unlink(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<this> {\n    return this.trap(\"unlink\", () => this.unlink_(), errLogLevel)\n  }\n\n  /**\n   * Deletes the current file.\n   */\n  unlinkSync(logLevel: LogLevel = \"info\") {\n    return this.trapSync(\n      \"unlinkSync\",\n      () => {\n        _fse.unlinkSync(this.nativePath)\n        this.clearThisAndParent()\n      },\n      logLevel\n    )\n  }\n\n  async unlink_(): Promise<this> {\n    await _fse.unlink(this.nativePath)\n    return this.clearThisAndParent()\n  }\n\n  /**\n   * Delete files or directories. Should only be needed by tests or applied to\n   * cache dirs.\n   *\n   * Note that the promise may be returned before the file op is actually\n   * complete due to a (bug?) in fs-extra.\n   */\n  async rmrf(logLevel: LogLevel = \"info\"): PromiseMaybe<this> {\n    return this.trap(\"rmrf\", () => this.rmrf_(), logLevel)\n  }\n\n  async rmrf_(): Promise<this> {\n    // retries may be required for windows\n    return retryOnReject(\n      async () => {\n        const s = await this.stat({ refresh: true })\n        if (s != null) {\n          await _fse.rm(this.nativePath, {\n            recursive: s.isDirectory(),\n            force: true\n          })\n        }\n        return this.clearThisAndParent()\n      },\n      {\n        maxRetries: 3,\n        timeoutMs: 0, // recursive deletions may take a while\n        retryDelay: secondMs,\n        errorIsRetriable: isRetriableError\n      }\n    )\n  }\n\n  /**\n   * Supports gzip/gunzip/brotli/whatever transform you've got:\n   *\n   * THIS FILE IS DELETED AFTER THE PIPELINE COMPLETES\n   */\n  async #pipeTo(base: string, transform: stream.Transform) {\n    return this.trap(\"pipeTo(\" + base + \")\", async () => {\n      const dest = await this.sibling(base).ensureNew_()\n      await pipeline([\n        fs.createReadStream(this.nativePath, { autoClose: true }),\n        transform,\n        fs.createWriteStream(dest.nativePath, { autoClose: true })\n      ])\n      await this.unlink()\n      return dest\n    })\n  }\n\n  async gunzip(): PromiseMaybe<this> {\n    return this.#pipeTo(stripSuffix(this.base, \".gz\"), zlib.createGunzip())\n  }\n\n  async gzip(): PromiseMaybe<this> {\n    return this.#pipeTo(this.base + \".gz\", zlib.createGzip())\n  }\n\n  async compressBrotli(): PromiseMaybe<this> {\n    return this.#pipeTo(this.base + \".br\", zlib.createBrotliCompress())\n  }\n\n  ensureFile_(): Promise<this> {\n    return _fse\n      .ensureFile(this.nativePath)\n      .then(() => this.clearThisAndParent())\n  }\n\n  ensureFile(): PromiseMaybe<this> {\n    return this.trap(\"ensureFile\", () => this.ensureFile_())\n  }\n\n  /**\n   * @throws on error\n   */\n  ensureFileSync_() {\n    _fse.ensureFileSync(this.nativePath)\n    return this.clearThisAndParent()\n  }\n\n  /**\n   * Returns a basename in this directory with this same .ext and prefixed with\n   * this.name which either doesn't exist or is zero length.\n   *\n   * If `options.emptyIsNew` is `true`, the file may exist, but must be\n   * zero-length. If `options.emptyIsNew` is `false`, the returned path will be\n   * nonexistent.\n   */\n  async ensureNewNativePath(\n    options: Omit<EnsureNewOptions, \"nativePath\">\n  ): Promise<string> {\n    return ensureNewNativePath_({ nativePath: this.nativePath, ...options })\n  }\n\n  /**\n   * @throws if errors\n   */\n  ensureNew_(opts: Partial<EnsureNewOptions> = {}): Promise<this> {\n    return this.ensureNewNativePath(opts).then(p => this.for(p))\n  }\n\n  /**\n   * @throws if errors\n   */\n  ensureNewSync_(opts: Partial<EnsureNewOptions> = {}): this {\n    return this.for(\n      ensureNewNativePathSync_({ nativePath: this.nativePath, ...opts })\n    )\n  }\n\n  /**\n   * Make sure you encode `mode` in octal! 0o644\n   */\n  async chmod_(mode: string | number): Promise<this> {\n    await _fse.chmod(this.nativePath, mode)\n    return this.clear()\n  }\n\n  async chmod(mode: string | number): PromiseMaybe<this> {\n    try {\n      await this.chmod_(mode)\n      return this\n    } catch (err) {\n      this.bflog().warn(\"failed to chmod to \" + mode.toString(8), err)\n      return\n    }\n  }\n\n  chmodSync(mode: string | number): Maybe<this> {\n    try {\n      fs.chmodSync(this.nativePath, mode)\n      return this\n    } catch (err) {\n      this.bflog().warn(\"failed to chmod to \" + mode.toString(8), err)\n      return\n    }\n  }\n\n  zreadline(): LineReader {\n    return fs\n      .createReadStream(this.nativePath)\n      .on(\"error\", (err: any) => {\n        throw new Error(\"Failed to read from \" + this + \": \" + err)\n      })\n      .pipe(zlib.createGunzip())\n      .on(\"error\", (err: any) => {\n        throw new Error(\"Failed to gunzip \" + this + \": \" + err)\n      })\n      .pipe(new LineReader())\n  }\n\n  async siblingWithSameContents(): PromiseMaybe<this> {\n    return this.parent().childWithSameContents(this)\n  }\n\n  async childWithSameContents(target: BaseFile): PromiseMaybe<this> {\n    return time(\"fs.childWithSameContents\", async () => {\n      if (!(await this.isDirectory())) return\n\n      const targetSize = await target.size()\n      if (targetSize == null) return\n\n      // Only look for a same-named file if the parent directories are different:\n      if (!this.eql(target.parent())) {\n        const withSameName = this.join(target.base)\n        // SWEET we don't have to this.readdir()!\n        if (await target.matchesContent(withSameName)) return withSameName\n      }\n\n      const sameSize = await this.children(\n        async ea =>\n          !ea.isNameHidden() &&\n          targetSize === (await ea.size()) &&\n          // Don't include target!\n          ea.nativePath !== target.nativePath\n        // (we're not normalizing or case-insensitive matching here: there shouldn't be a need to, and that will be wrong on non-ci filesystems.)\n      )\n\n      // Don't need to sha target if none are the same size:\n      if (isEmpty(sameSize)) return\n\n      const targetSha = await target.sha()\n      if (targetSha == null) return\n\n      // Assume similar names are more likely to be the same, so try those first.\n      // if we have to check _64_ files with the same exact size, something screwy is going on: give up.\n      for (const child of sameSize\n        .sort((a, b) => -diceCoeff(a.base, b.base))\n        .slice(0, 64)) {\n        if ((await child.sha()) === targetSha) {\n          return child\n        }\n      }\n      return\n    })\n  }\n\n  firstMatchingLine(re: RegExp): PromiseMaybe<RegExpMatchArray> {\n    const d = new Deferred<Maybe<RegExpMatchArray>>(\n      \"firstMatchingLine(\" + this + \")\"\n    )\n    const r = fs.createReadStream(this.nativePath, { flags: \"r\" })\n    r.on(\"error\", (err: any) => {\n      if (err.errno === -2 || err.code === \"ENOENT\") {\n        void d.maybeResolve(undefined)\n        r.close()\n      } else {\n        void d.maybeReject(err)\n      }\n    })\n    r.on(\"close\", () => d.maybeResolve(undefined))\n    void onDataChunked(r, newlineRe(), ea => {\n      const m = re.exec(ea)\n      if (m != null) {\n        void d.maybeResolve(m)\n        r.close()\n      }\n    })\n    return d.promise\n  }\n\n  contemporary(b: BaseFile, maxDiffMs: number): Promise<boolean> {\n    return thenMap2Or(\n      this.statTimes(),\n      b.statTimes(),\n      (arr1, arr2) => {\n        for (const i of arr1) {\n          for (const j of arr2) {\n            if (closeTo(i, j, maxDiffMs)) {\n              return true\n            }\n          }\n        }\n        return false\n      },\n      () => false\n    )\n  }\n\n  /**\n   * NOTE: recursive is only supported if Settings.useFsWatch is true.\n   */\n  watchUntil<T>(opts: {\n    f: (event?: WatchEventType, filename?: string) => PromiseMaybe<T>\n    timeoutMs: number\n    persistent: boolean\n    recursive: boolean\n    intervalMs?: number\n    accept?: (t: Maybe<T>) => boolean\n  }): Deferred<T> {\n    const accept = (opts.accept ??= (t: Maybe<T>) => t != null && t !== false)\n    const d = new Deferred<T>(\"watchUntil(\" + this.nativePath + \")\")\n    if (opts.timeoutMs > 0) {\n      void d.setTimeout(opts.timeoutMs, !opts.persistent)\n    }\n    if (_useFsWatch) {\n      try {\n        const watcher = watch(\n          this.nativePath,\n          {\n            persistent: opts.persistent,\n            recursive: opts.recursive,\n            encoding: \"utf8\"\n          },\n          async (event, filename) => {\n            try {\n              const result = await opts.f(event, denull(filename))\n              if (accept(result)) {\n                void d.resolve(result!)\n              }\n            } catch (error) {\n              void d.reject(error)\n            }\n          }\n        )\n        void d.finally(() => {\n          watcher.close()\n        })\n      } catch (error) {\n        opts.intervalMs ??= 500\n        this.bflog().warn(\"fs.watch failed, using polling\", { error, opts })\n      }\n    } else {\n      // Force polling:\n      opts.intervalMs ??= 500\n      this.bflog().warn(\"watchUntil(): fsWatch disabled, using polling\", {\n        opts\n      })\n    }\n\n    if (gt0(opts.intervalMs)) {\n      const interval = setInterval(async () => {\n        try {\n          const result = await opts.f()\n          if (accept(result)) {\n            void d.resolve(result!)\n          }\n        } catch (error) {\n          void d.reject(error)\n        }\n      }, opts.intervalMs)\n      if (!opts.persistent) {\n        interval.unref()\n      }\n      void d.finally(() => {\n        clearInterval(interval)\n      })\n    }\n\n    return d\n  }\n}\n\nexport function execDir(): BaseFile {\n  return BaseFile.for(process.execPath).parent()\n}\n\n// This is used to break a circular dependency between fs and Settings:\nlet _useFsWatch: boolean = true\n\n// This is set in SettingsDefaults to watch Settings.useFsWatch:\nexport function useFsWatch(b: boolean) {\n  _useFsWatch = b\n}\n","import { SyncPredicate } from \"../predicates/SyncPredicates\"\nimport { Settings } from \"../settings/Settings\"\nimport { ExtType, ExtTypes } from \"../tags/ExtType\"\nimport { isExtType } from \"../tags/FileTypes\"\nimport { toPathnames } from \"./Path\"\nimport { SimpleFile } from \"./SimpleFile\"\n\n/**\n * case-insensitive basename matching\n */\nexport function excludedPathFilter<T extends SimpleFile>(\n  excludedBasenames: string[]\n): SyncPredicate<T> {\n  const s = new Set(excludedBasenames.map(ea => ea.toLowerCase()))\n  return (file: T) =>\n    toPathnames(file.nativePath).every(ea => !s.has(ea.toLowerCase()))\n}\n\n/**\n * @param includedExtensions case-insensitive file extensions.\n * Note these must be prefixed with a '.'\n */\nexport function extFilter<T extends SimpleFile>(\n  extType: ExtType\n): SyncPredicate<T> {\n  return (file: T) =>\n    Settings.respectFileExtensions.valueOrDefault\n      ? isExtType(file?.ext, extType)\n      : null\n}\n\nexport const isBrowserExtension = extFilter(ExtTypes.SupportedByCurrentBrowser)\nexport const isVideoExtension = extFilter(ExtTypes.Video)\nexport const isAssetFileExtension = extFilter(ExtTypes.AssetFile)\n","import { compactBlanks } from \"../../fe/Array\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { newlineRe } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { isWin } from \"../platform/Platform\"\n\nexport const Newline = isWin ? \"\\r\\n\" : \"\\n\"\n\nexport function crlf(...s: string[]): string {\n  const result = s.map(toS).join(\"\\n\")\n  return isWin ? result.replace(newlineRe(), \"\\r\\n\") : result\n}\n\nexport function splitLines(...arr: Maybe<string | Buffer>[]): string[] {\n  return flatten(\n    arr.map(ea =>\n      Array.isArray(ea) ? splitLines(...ea) : toS(ea).split(newlineRe())\n    )\n  )\n}\n\nexport function joinLines(...lines: string[]): string {\n  return splitLines(...lines).join(Newline)\n}\n\nexport function splitCompactLines(...arr: Maybe<string | Buffer>[]): string[] {\n  return compactBlanks(splitLines(...arr))\n}\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { AppNameVersion } from \"../AppName\"\nimport { mkLogger } from \"../Logger\"\nimport { joinNativePath, mkdirp_ } from \"./Path\"\nimport { readFilePart_ } from \"./ReadFilePart\"\nimport { SimpleFileOrString, basename, toNativePath_ } from \"./SimpleFile\"\nimport { isNonEmptyFile } from \"./Stat\"\nimport { writeTextfile_ } from \"./WriteFile\"\n\n// https://bford.info/cachedir/\nexport const CACHEDIR_TAG = \"CACHEDIR.TAG\"\n\nexport const CACHEDIR_TAG_CONTENT =\n  \"Signature: 8a477f597d28d172789f06886806bc55\"\n\nconst logger = lazy(() => mkLogger(\"fs.CachedirTag\"))\n\nexport async function isCachedirTagDirectory(dir: SimpleFileOrString) {\n  return isCachedirTagFile(join(toNativePath_(dir), CACHEDIR_TAG))\n}\n\nexport async function isCachedirTagFile(\n  f: SimpleFileOrString\n): Promise<boolean> {\n  if (basename(f) !== CACHEDIR_TAG) {\n    return false\n  }\n  if (!(await isNonEmptyFile(toNativePath_(f), CACHEDIR_TAG_CONTENT.length))) {\n    return false\n  }\n  try {\n    const header = (\n      await readFilePart_({\n        nativePath: toNativePath_(f),\n        position: 0,\n        length: CACHEDIR_TAG_CONTENT.length\n      })\n    )?.buffer?.toString()\n    return header === CACHEDIR_TAG_CONTENT\n  } catch (error) {\n    logger().debug(\"isCachedirTagFile(): failed to read \" + f, error)\n    return false\n  }\n}\n\nexport async function writeCachedirTag_(dir: SimpleFileOrString) {\n  const dirPath = toNativePath_(dir)\n  await mkdirp_(dirPath)\n  await writeTextfile_(\n    joinNativePath([dirPath, CACHEDIR_TAG]),\n    CACHEDIR_TAG_CONTENT,\n    \"# This file is a cache directory tag\",\n    `# created by ${AppNameVersion()}`\n  )\n}\n","import path from \"path\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mapNotBlankOr } from \"../../fe/Blank\"\nimport { isMac, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\n\nconst DefaultMacOSPaths = Object.freeze([\n  \"/opt/homebrew/bin\",\n  \"/opt/homebrew/sbin\",\n  \"/usr/local/bin\",\n  \"/usr/local/sbin\",\n  \"/usr/bin\",\n  \"/bin\",\n  \"/usr/sbin\",\n  \"/sbin\"\n])\n\n// exported for tests:\nexport const DefaultPosixPaths = Object.freeze([\n  // From Ubuntu's /etc/environment:\n  \"/usr/local/bin\",\n  \"/usr/local/sbin\",\n  \"/usr/lib/libraw\", // where dcraw_emu lives\n  \"/opt/local/bin\", // macports\n  \"/opt/local/sbin\", // macports\n  \"/usr/sbin\",\n  \"/usr/bin\",\n  \"/sbin\",\n  \"/bin\"\n])\n\nexport const DefaultDockerPaths = Object.freeze([\n  \"/opt/photostructure/tools/bin\",\n  ...DefaultPosixPaths\n])\n\nexport const DefaultWinPaths = lazy(() => [\n  ...mapNotBlankOr(\n    process.env.SYSTEMROOT,\n    ea => [ea, path.join(ea, \"System32\"), path.join(ea, \"System32\", \"webm\")],\n    () => []\n  ),\n  \"C:\\\\cygwin64\\\\bin\"\n])\n\n// exported for tests:\nexport const DefaultPaths = Object.freeze(\n  isDocker()\n    ? DefaultDockerPaths\n    : isWin\n    ? DefaultWinPaths()\n    : isMac\n    ? DefaultMacOSPaths\n    : DefaultPosixPaths\n)\n","import {\n  AsyncSubscription,\n  Event,\n  subscribe,\n  SubscribeCallback\n} from \"@parcel/watcher\"\nimport { Stats } from \"fs\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { EndableRank, EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { filterAsync } from \"../async/Promise\"\nimport { onError } from \"../error/OnError\"\nimport { FifoCache } from \"../FifoCache\"\nimport { mkLogger } from \"../Logger\"\nimport { mkdirp_ } from \"./Path\"\nimport { SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\nimport { statEql, statMaybe } from \"./Stat\"\nimport { WipPrefix } from \"./WIP\"\n\nexport type FsEventListener = (events: Event[]) => any\n\nconst logger = lazy(() => mkLogger(\"fs.DirWatcher\"))\n\n// TODO: ADD TESTS!\n\nexport class DirWatcher extends EndableWrapper {\n  static async for(\n    dir: SimpleFileOrString,\n    cb: SubscribeCallback,\n    rank = EndableRanks.first\n  ) {\n    const nativePath = toNativePath_(dir)\n    await mkdirp_(nativePath)\n\n    const path2stat = new FifoCache<Maybe<Stats>>(1024)\n    const sub = await subscribe(nativePath, async (err, arr) => {\n      logger().trace(\"callback\", { nativePath, err, arr })\n      if (err != null) {\n        onError(\"FsWatcher error\", { cause: err, path: nativePath })\n      }\n      if (arr != null) {\n        // don't ignore delete events: FsLock wants to know!\n\n        // ignore WIPs and unchanged files:\n        arr = await filterAsync({\n          name: this.name,\n          arr,\n          f: async ea => {\n            if (ea.path.includes(WipPrefix)) return false\n            const prior = path2stat.get(ea.path)\n            const current = await statMaybe(ea.path)\n            if (true === current?.isFile() && statEql(prior, current)) {\n              // only skip _files_ that didn't change\n              return false\n            } else {\n              path2stat.set(ea.path, current)\n              return true\n            }\n          }\n        })\n      }\n      if (err != null || isNotEmpty(arr)) cb(err, arr)\n    })\n\n    return new DirWatcher(nativePath, sub, path2stat, rank)\n  }\n\n  private constructor(\n    readonly nativePath: string,\n    readonly subscription: AsyncSubscription,\n    readonly path2stat: FifoCache<Maybe<Stats>>,\n    rank?: EndableRank\n  ) {\n    super(\"fs.DirWatcher(\" + nativePath + \")\", () => this.close(), rank)\n  }\n\n  clear() {\n    this.path2stat.clear()\n  }\n\n  readonly close = lazy(() => this.subscription.unsubscribe())\n}\n","import fs from \"fs\"\nimport * as fse from \"fs-extra\"\nimport { join, parse, sep } from \"path\"\nimport { inspect } from \"util\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { stripSuffix } from \"../String\"\nimport { thenMap } from \"../async/Promise\"\nimport { ee } from \"../event/EventEmitter\"\nimport { ParsedFile, parentBasename, parseNativePath } from \"./Path\"\nimport { readdir } from \"./Readdir\"\nimport { SimpleDirent, isSimpleDirent } from \"./SimpleDirent\"\nimport { SimpleFile, isSimpleFile } from \"./SimpleFile\"\nimport { stat_ } from \"./Stat\"\n\n// DON'T REFERENCE PosixFile HERE, you'll have circular deps.\n\nexport class StatDirent implements Partial<Pick<fs.Stats, \"size\" | \"mtimeMs\">> {\n  readonly isFile: boolean\n  readonly isDirectory: boolean\n  size: Maybe<number>\n  mtimeMs: Maybe<number>\n  // Allow the Stats instance to be GC'ed by copying what I need out of it:\n  constructor(\n    readonly base: string,\n    s: fs.Stats | fs.Dirent | SimpleDirent\n  ) {\n    if (isSimpleDirent(s)) {\n      // TODO: assert that base === s.basename\n      this.isFile = s.isFile\n      this.isDirectory = s.isDirectory\n    } else {\n      this.isFile = s.isFile()\n      this.isDirectory = s.isDirectory()\n      // isSymbolicLink is always false unless you use lstat, which we never use.\n    }\n    if (s instanceof fs.Stats) {\n      this.size = s.size\n      this.mtimeMs = s.mtimeMs\n    }\n  }\n}\n\nconst logger = lazy(() => mkLogger(\"fs.DirectoryEntry\"))\n\nexport class DirectoryEntry implements ParsedFile, SimpleFile {\n  /**\n   * Full path\n   */\n  readonly nativePath: string\n\n  /**\n   * @return extension (`.jpg` for `image.jpg`)\n   */\n  readonly ext: string\n\n  /**\n   * Should only be constructed by BaseFile\n   *\n   * @param dir The full parent directory path such as `/home/user/dir` or\n   * `c:\\\\path\\\\dir` for `/home/user/dir/file.txt` or `c:\\\\path\\\\dir\\\\file.txt`\n   */\n  constructor(\n    readonly dir: string,\n    public dirent: StatDirent\n  ) {\n    this.nativePath = join(this.dir, dirent.base)\n    this.ext = parseNativePath(dirent.base).ext\n  }\n\n  static fromSimpleDirent(dir: string, dirent: SimpleDirent) {\n    return new DirectoryEntry(dir, new StatDirent(dirent.basename, dirent))\n  }\n\n  static async for(\n    nativePathOrFile: string | SimpleFile\n  ): PromiseMaybe<DirectoryEntry> {\n    try {\n      return await this.for_(nativePathOrFile)\n    } catch {\n      return\n    }\n  }\n\n  static async for_(\n    nativePathOrFile: string | SimpleFile\n  ): Promise<DirectoryEntry> {\n    const { nativePath, dir, base } = isSimpleFile(nativePathOrFile)\n      ? nativePathOrFile\n      : { nativePath: nativePathOrFile, ...parseNativePath(nativePathOrFile) }\n\n    const s = await fse.stat(nativePath)\n    return new DirectoryEntry(dir, new StatDirent(base, s))\n  }\n\n  clear() {\n    ee().emit(\"fileChanged\", this.nativePath)\n    this.dirent.size = undefined\n    this.dirent.mtimeMs = undefined\n    return this\n  }\n\n  async join(...path: string[]) {\n    return DirectoryEntry.for(join(this.nativePath, ...path))\n  }\n\n  /**\n   * @return the full basename `image.jpg`\n   */\n  get base() {\n    return this.dirent.base\n  }\n\n  /**\n   * @return basename without the ext (`image` for `image.jpg`)\n   */\n  get name() {\n    return stripSuffix(this.base, this.ext)\n  }\n\n  get pathnames(): string[] {\n    return this.nativePath.split(sep)\n  }\n\n  get parentAndBase(): string {\n    return this.pathnames.slice(-2).join(\"/\")\n  }\n\n  get parentBasename(): string {\n    return parentBasename(this.nativePath)\n  }\n\n  toJSON() {\n    return {\n      _ctor: this.constructor.name,\n      nativePath: this.nativePath\n    }\n  }\n\n  toLogJSON() {\n    return this.nativePath\n  }\n\n  [inspect.custom]() {\n    return this.toJSON()\n  }\n\n  toString() {\n    return this.nativePath\n  }\n\n  isFile() {\n    return this.dirent.isFile\n  }\n\n  isFileSync() {\n    return this.dirent.isFile\n  }\n\n  isDirectory() {\n    return this.dirent.isDirectory\n  }\n\n  isDirectorySync() {\n    return this.dirent.isDirectory\n  }\n\n  get isRoot() {\n    return this.dir === parse(this.dir).dir\n  }\n\n  isNameHidden() {\n    return this.name.startsWith(\".\")\n  }\n\n  parent(): SyncOrAsync<Maybe<this>> {\n    const p = parseNativePath(this.dir)\n    return p.dir === this.dir\n      ? this // root\n      : (new DirectoryEntry(p.dir, {\n          base: p.base,\n          isFile: false,\n          isDirectory: true,\n          mtimeMs: undefined as any,\n          size: undefined as any\n        }) as this)\n  }\n\n  async childNames() {\n    try {\n      return !this.isDirectory()\n        ? undefined\n        : (await readdir(this.nativePath))?.map(ea => ea.basename)\n    } catch (err) {\n      logger().warn(\n        \"childNames() failed to readdir(\" + this.nativePath + \")\",\n        err\n      )\n      return\n    }\n  }\n\n  async children() {\n    try {\n      if (!this.isDirectory()) return undefined\n      const arr = await readdir(this.nativePath) // readdir is already sorted\n      return arr?.map(\n        ea => DirectoryEntry.fromSimpleDirent(this.nativePath, ea) as this\n      )\n    } catch (err) {\n      logger().warn(\n        \"children() failed to readdir(\" + this.nativePath + \")\",\n        err\n      )\n      return\n    }\n  }\n\n  childrenSync() {\n    try {\n      if (!this.isDirectory()) return undefined\n      const arr = fs.readdirSync(this.nativePath, { withFileTypes: true }) // readdir is already sorted\n      return arr?.map(\n        ea => new DirectoryEntry(this.nativePath, new StatDirent(ea.name, ea))\n      )\n    } catch (err) {\n      logger().warn(\n        \"children() failed to readdir(\" + this.nativePath + \")\",\n        err\n      )\n      return\n    }\n  }\n\n  async childDirectories() {\n    return toA(await this.children()).filter(ea => ea.isDirectory())\n  }\n\n  async childFiles() {\n    return toA(await this.children()).filter(ea => ea.isFile())\n  }\n\n  /**\n   * Depth-first\n   */\n  async visitDescendants(f: (child: this) => any): Promise<void> {\n    const children = await this.children()\n    if (children == null) return\n\n    for (const dir of children.filter(ea => ea.isDirectory())) {\n      await dir.visitDescendants(f)\n    }\n\n    for (const ea of children) {\n      if (ea.isFile()) {\n        await f(ea)\n      }\n    }\n\n    for (const ea of children) {\n      if (ea.isDirectory()) {\n        await f(ea)\n      }\n    }\n\n    return\n  }\n\n  visitDescendantsSync(f: (child: DirectoryEntry) => any): void {\n    const children = this.childrenSync()\n    if (children == null) return\n    for (const ea of children) {\n      if (ea.isFile()) f(ea)\n    }\n    for (const ea of children) {\n      if (ea.isDirectory()) {\n        ea.visitDescendantsSync(f)\n        f(ea)\n      }\n    }\n  }\n\n  async visitDescendantFiles(f: (child: this) => any): Promise<void> {\n    return this.visitDescendants(ea => (ea.isFile() ? f(ea) : undefined))\n  }\n\n  async filterDescendantFiles(\n    predicate: (child: this) => SyncOrAsync<boolean>\n  ) {\n    const arr: this[] = []\n    await this.visitDescendantFiles(async ea => {\n      if (true === (await predicate(ea))) arr.push(ea)\n    })\n    return arr\n  }\n\n  async stat() {\n    try {\n      const s = await stat_(this.nativePath)\n      this.dirent = new StatDirent(this.base, s)\n      return s\n    } catch {\n      return\n    }\n  }\n\n  size(): MaybeSyncOrAsync<number> {\n    // Try to reduce the number of promises we're making:\n    return this.dirent.size ?? thenMap(this.stat(), ea => ea.size)\n  }\n\n  mtimeMs(): MaybeSyncOrAsync<number> {\n    // Try to reduce the number of promises we're making:\n    return this.dirent.mtimeMs ?? thenMap(this.stat(), ea => ea.mtimeMs)\n  }\n\n  unlink_() {\n    ee().emit(\"fileChanged\", this.nativePath)\n    return fse.unlink(this.nativePath)\n  }\n\n  rmdir_() {\n    ee().emit(\"fileChanged\", this.nativePath)\n    return fse.rmdir(this.nativePath)\n  }\n}\n","import path from \"path\"\nimport { leftPad } from \"../../fe/Pad\"\nimport { mkdirpSync_, mkdirp_, parseNativePath } from \"./Path\"\nimport { isEmptyFile } from \"./Stat\"\nimport { isEmptyFileSync } from \"./StatSync\"\n\nexport interface EnsureNewOptions {\n  nativePath: string\n  emptyIsNew?: boolean\n  maxVersions?: number\n  requireNumber?: boolean\n  leftPad?: number\n  startIndex?: number\n}\n\nexport const DefaultEnsureNewOptions: Omit<\n  Required<EnsureNewOptions>,\n  \"nativePath\"\n> = Object.freeze({\n  emptyIsNew: true,\n  maxVersions: 512,\n  requireNumber: false,\n  leftPad: 1,\n  startIndex: 1\n})\n\nexport async function ensureNewNativePath_(\n  arg: EnsureNewOptions\n): Promise<string> {\n  const opts: Required<EnsureNewOptions> = {\n    ...DefaultEnsureNewOptions,\n    ...arg\n  }\n  const p = parseNativePath(opts.nativePath)\n  await mkdirp_(p.dir)\n  {\n    if (!opts.requireNumber && (await isEmptyFile(opts.nativePath, opts))) {\n      return opts.nativePath\n    }\n  }\n  for (let i = opts.startIndex; i <= opts.maxVersions; i++) {\n    const f = path.join(\n      p.dir,\n      `${p.name}-${leftPad(i, opts.leftPad, \"0\")}${p.ext}`\n    )\n    if (await isEmptyFile(f, opts)) return f\n  }\n  throw new Error(\n    \"There are already more than \" + opts.maxVersions + \" of \" + opts.nativePath\n  )\n}\n\nexport function ensureNewNativePathSync_(arg: EnsureNewOptions): string {\n  const opts: Required<EnsureNewOptions> = {\n    ...DefaultEnsureNewOptions,\n    ...arg\n  }\n  const p = parseNativePath(opts.nativePath)\n  mkdirpSync_(p.dir)\n  if (!opts.requireNumber && isEmptyFileSync(opts.nativePath, opts)) {\n    return opts.nativePath\n  }\n  for (let i = opts.startIndex; i <= opts.maxVersions; i++) {\n    const f = path.join(\n      p.dir,\n      `${p.name}-${leftPad(i, opts.leftPad, \"0\")}${p.ext}`\n    )\n    if (isEmptyFileSync(f, opts)) return f\n  }\n  throw new Error(\n    \"There are already more than \" + opts.maxVersions + \" of \" + opts.nativePath\n  )\n}\n","import picomatch from \"picomatch\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, uniq } from \"../../fe/Array\"\nimport { sort, sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { ellipsize, ensureSuffix } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { partition } from \"../Array\"\nimport { FifoCache } from \"../FifoCache\"\nimport { mkLogger } from \"../Logger\"\nimport { mergeObjects, pairToObject } from \"../Object\"\nimport { thenNot } from \"../async/Promise\"\nimport { configDir } from \"../dir/ConfigDir\"\nimport { homeDir } from \"../dir/HomeDir\"\nimport { inHiddenPhotoStructureDir } from \"../dir/InHiddenPhotoStructureDir\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isLinux, isWin } from \"../platform/Platform\"\nimport { PredicateBundle, Predicates } from \"../predicates/Predicates\"\nimport {\n  SyncPredicateBundle,\n  SyncPredicates\n} from \"../predicates/SyncPredicates\"\nimport { Settings } from \"../settings/Settings\"\nimport { BaseFile } from \"./BaseFile\"\nimport { isHidden } from \"./Hidden\"\nimport { hasNoMedia } from \"./NoMedia\"\nimport { native2posix } from \"./PosixNative\"\nimport { seemsLikeSymlinkLoop } from \"./SeemsLikeSymlinkLoop\"\nimport {\n  SimpleFile,\n  SimpleFileOrString,\n  firstSelfOrAncestor,\n  isSimpleFile\n} from \"./SimpleFile\"\n\n/*\n * This is a steaming bag of whack-a-mole heuristics to prevent iterating\n * \"ignorable\" directories. These are OS or application directories which\n * frequently make up the bulk of files on many drives, but never include\n * assets that users want to include in their libraries.\n *\n * It's messy down here. Scroll down at your own peril.\n *\n * Because people access volumes with different OSes, we won't assume that a\n * given drive was used by the current OS, so \"C:\\\\etc\" on windows and\n * \"/Program Files/\" on mac should be considered ignorable directories, and be\n * skipped.\n *\n * Also: people's home directory and scan paths may be in \"ignorable\"\n * directories, but if they specifically ask to scan a directory, we should\n * scan it. That means we need a list of directories that won't be\n * ignored--but subdirectories that are ignorable _should_ be ignored. As an\n * example, if someone's name is \"cache\", /home/cache should not be ignored,\n * neither should /home/cache/pictures, but /home/cache/tmp can be ignored.\n */\n\nconst logger = lazy(() => mkLogger(\"fs.ExcludeGlobs\"))\n\nconst path2formattedPathForGlobCache = new FifoCache<string>(256)\n\nconst EndWithSepRe = /[\\\\/]$/\n\nexport function formatPathForGlob(f: SimpleFileOrString): string {\n  const str = toS(f)\n  const prior = path2formattedPathForGlobCache.get(str)\n  if (prior != null) return prior\n\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n  const isDir = EndWithSepRe.test(str) || sf.isDirectorySync()\n  const posixPath = native2posix(sf.nativePath)\n  const result = isDir ? ensureSuffix(posixPath, \"/\") : posixPath\n\n  path2formattedPathForGlobCache.set(str, result)\n  path2formattedPathForGlobCache.set(result, result)\n  path2formattedPathForGlobCache.set(sf.nativePath, result)\n\n  return result\n}\n\nclass Glob {\n  readonly reason: string\n  readonly pattern: string\n  readonly re!: RegExp\n  // readonly m!: picomatch.Matcher\n  readonly valid: boolean\n  readonly bundle: SyncPredicateBundle<SimpleFile>\n  constructor(\n    readonly glob: string,\n    readonly desc: string,\n    readonly exclude = true\n  ) {\n    if (glob.includes(\"\\\\\")) {\n      const given = glob\n      glob = native2posix(given)\n      logger().warn(\n        \"globToPredicate(): backslash in patterns aren't supported: assuming you meant forward-slash?\",\n        { given, input: glob }\n      )\n    }\n\n    // If desc is empty: \"not **/Trash/\"\n    // If desc is not empty: \"not QNAP Trash (**/@Trash/)\"\n\n    this.reason = compactBlanks([\n      this.exclude ? \"not\" : \"\",\n      desc,\n      \"(\" + ellipsize(glob, 48, 12) + \")\"\n    ]).join(\" \")\n\n    this.pattern = (\n      Settings.globsCaseInsensitive.valueOrDefault ? glob.toLowerCase() : glob\n    ).normalize()\n\n    try {\n      this.re = picomatch.makeRe(this.pattern, {\n        nocase: Settings.globsCaseInsensitive.valueOrDefault,\n        dot: true,\n        posixSlashes: true\n      })\n      this.valid = true\n    } catch (error) {\n      this.valid = false\n      logger().warn(\"Cannot parse pattern\", { glob: this.pattern, error })\n    }\n    this.bundle = this.valid\n      ? pairToObject(this.reason, this.#apply.bind(this))\n      : {}\n  }\n\n  #apply(f: SimpleFileOrString) {\n    const posixPath = formatPathForGlob(f)\n    const matched = this.re.test(posixPath)\n    return logger().tap({\n      msg: \"apply()\",\n      level: matched ? LogLevels.debug : LogLevels.trace,\n      result: matched ? !this.exclude : this.exclude,\n      meta: {\n        desc: this.desc,\n        glob: this.glob,\n        exclude: this.exclude,\n        posixPath,\n        matched\n      }\n    })\n  }\n}\n\nclass GlobSet {\n  readonly #globs: Glob[] = []\n\n  push(...globs: Glob[]) {\n    for (const glob of globs) {\n      if (!glob.valid) {\n        logger().warn(\"Ignoring invalid glob\", { glob })\n        continue\n      }\n      const prior = this.#globs.find(ea => ea.pattern === glob.pattern)\n      if (prior != null) {\n        logger().debug(\"Ignoring duplicate glob\", { glob, prior })\n        continue\n      }\n      this.#globs.push(glob)\n    }\n  }\n\n  pushNativePath(nativePath: string, description: string) {\n    this.push(new Glob(native2posix(nativePath), description))\n  }\n\n  toA() {\n    return this.#globs\n  }\n}\n\nconst defaultExcludeGlobs = lazy(() => {\n  const result = new GlobSet()\n\n  // hidden directories and files\n  result.push(\n    new Glob(\"**/.*/\", \"hidden dir\"),\n    new Glob(\"**/.*\", \"hidden file\")\n  )\n\n  // ignorableRootDirectories\n  for (const ea of [\n    // See http://www.linfo.org/var.html\n    // https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard\n    // http://www.pathname.com/fhs/\n\n    // bin and boot don't have many files, let them get scanned\n    // \"boot\", // Boot loader files\n    { s: \"bin\", desc: \"command binary\" }, // Essential command binaries\n    { s: \"dev\", desc: \"device file\" }, // Essential device files\n    { s: \"etc\", desc: \"system configuration file\" }, // Host-specific system-wide configuration files\n    { s: \"initrd\", desc: \"initial ramdisk\" }, // initial ramdisk\n    // lib and lost+found is handled by ignored directory patterns\n    // { s: \"lib?(32|64|x64)\", desc: \"system library\" }, // Libraries essential for the binaries in /bin and /sbin.\n    // { s: \"lost+found\", desc: \"fsck recovered file\" },\n    { s: \"proc\", desc: \"process metadata\" }, // Virtual filesystem providing process and kernel information as files.\n    { s: \"sbin\", desc: \"system binary\" }, // Essential system binaries\n    { s: \"snap\", desc: \"snap software\" }, // https://en.wikipedia.org/wiki/Snap_(software)\n    { s: \"sys\", desc: \"system metadata\" }, // Contains information about devices, drivers, and some kernel features\n    // \"var\", < Some people mounted their docker volume to /var/photos:\n    // \"root\", // Home directory for the root user (might have something?},\n\n    // DON'T IGNORE /System/Volumes/Data : that's the user's homedir!\n    // DON'T INCLUDE /Volumes here, as that causes all external drives to be\n    // rejected!\n\n    // windows\n    { s: \"Dell\", desc: \"Windows driver\" },\n    { s: \"Drivers\", desc: \"Windows driver\" },\n    { s: \"Intel\", desc: \"Windows driver\" },\n    { s: \"Microsoft\", desc: \"Windows driver\" },\n    { s: \"NVIDIA\", desc: \"Windows driver\" }, // surprisingly large driver (> 4gb!},\n    { s: \"Windows.old\", desc: \"Windows system\" }, // thanks, windows updater\n    { s: \"Windows\", desc: \"Windows system\" }\n  ]) {\n    // ignorable root directory\n    // The * prefix handles drive letters:\n    // SKIP_DRIVE_PREFIXES\n    result.push(new Glob((isWin ? \"*\" : \"\") + \"/\" + ea.s + \"/\", ea.desc))\n  }\n\n  if (isWin) {\n    for (const ea of [\n      \"ProgramFiles\",\n      \"ProgramFiles(x86)\",\n      \"ProgramW6432\",\n      \"SystemRoot\",\n      \"windir\"\n    ] as const) {\n      const dir = getEnv(ea)\n      if (!blank(dir)) {\n        result.pushNativePath(dir, `%${ea}%`)\n      }\n    }\n  }\n\n  if (isLinux) {\n    result.push(new Glob(`${homeDir()}/snap/`, \"Snap software\"))\n  }\n  /*\n   * All these directories are sufficiently nerdy that they uniquely identify\n   * a system or development directory, and don't need to be anchored to root\n   * to be sufficiently constrained.\n   */\n  // \"Download\", // these might actually have something\n  // \"Downloads\",\n\n  for (const ea of [\n    { s: \"__MACOSX\", desc: \"macOS resource fork\" },\n    { s: \"_includes\", desc: \"code\" },\n    { s: \"@eaDir\", desc: \"Synology thumbnail\" },\n    { s: \"@Recycle\", desc: \"QNAP trash\" },\n    { s: \"@SynoResource\", desc: \"Synology metadata\" },\n    { s: \"#recycle\", desc: \"Synology trash\" },\n    { s: \"#snapshot\", desc: \"Synology snapshot\" },\n    { s: \"$Recycle.Bin\", desc: \"Windows trash\" },\n    { s: \"3rdParty\", desc: \"code\" },\n    { s: \"Application Data\", desc: \"Windows application support\" },\n    { s: \"Application Support\", desc: \"Windows application support\" },\n    { s: \"Applications\", desc: \"macOS Applications dir\" },\n    { s: \"arangodb\", desc: \"3rd party\" },\n    { s: \"cache\", desc: \"Cache dir\" },\n    { s: \"CacheClip\", desc: \"Movie cache dir\" },\n    { s: \"caches\", desc: \"Cache dir\" },\n    { s: \"cmake\", desc: \"code\" },\n    { s: \"com.apple.TimeMachine.localsnapshots\", desc: \"macOS\" },\n    { s: \"cpan\", desc: \"code\" },\n    { s: \"DefinitelyTyped\", desc: \"TypeScript type\" }, // roughly infinite s}bdirectories\n    { s: \"Desktop DB\", desc: \"macOS metadata\" },\n    { s: \"Desktop DF\", desc: \"macOS metadata\" },\n    { s: \"Desktop.ini\", desc: \"macOS metadata\" },\n    { s: \"DisplayDriver\", desc: \"Windows driver\" },\n    { s: \"DLLs\", desc: \"Windows library\" },\n    { s: \"dyld\", desc: \"macOS library\" },\n    { s: \"ehthumbs.db\", desc: \"Windows thumbnail\" },\n    { s: \"i18n\", desc: \"i18n code\" },\n    { s: \"iMovie Cache\", desc: \"Apple iMovie cache\" },\n    { s: \"iTunes Cache\", desc: \"Apple iTunes\" },\n    { s: \"iTunes Media\", desc: \"Apple iTunes\" }, // music videos: see https://gitlab.com/mceachen/photostructure/issues/12\n    { s: \"iTunes\", desc: \"Apple iTunes\" },\n    { s: \"lib?(32|64|x64|s)\", desc: \"program library dir\" },\n    { s: \"lost+found\", desc: \"fsck recovered dir\" },\n    { s: \"macOS Install*\", desc: \"macOS installer\" },\n    { s: \"Network Trash\", desc: \"AFP trash\" },\n    { s: \"node_modules\", desc: \"Node.js library\" },\n    { s: \"pkgconfig\", desc: \"code\" },\n    { s: \"pkgs\", desc: \"Python code\" },\n    // { s: \"private\", < NO! This will cause us to not find AVCHD streams, which typically live in PRIVATE/AVCHD/STREAM/...\n    { s: \"Program Files?( x86)\", desc: \"Windows program\" },\n    { s: \"ProgramData\", desc: \"Windows application support\" },\n    { s: \"resources/media/face\", desc: \"face thumbnail\" },\n    { s: \"rubygems-*\", desc: \"Ruby code\" },\n    { s: \"site-packages\", desc: \"Python code\" },\n    { s: \"spotifycache\", desc: \"Spotify cache\" },\n    { s: \"SteamApps\", desc: \"Game files\" },\n    { s: \"System Volume Information\", desc: \"Windows system metadata\" },\n    { s: \"System32\", desc: \"Windows system\" },\n    { s: \"temp\", desc: \"temporary file\" },\n    { s: \"Temporary Items\", desc: \"temporary file\" },\n    { s: \"test_suite\", desc: \"code\" },\n    { s: \"testutil?(s)\", desc: \"code\" },\n    { s: \"third_party\", desc: \"code\" },\n    { s: \"Thumbnail?(s)\", desc: \"thumbnail\" }, // iPhoto\n    { s: \"Thumbs.db\", desc: \"Windows thumbnail\" },\n    { s: \"tmp\", desc: \"temporary file\" },\n    { s: \"Trash\", desc: \"trash dir\" }, // xdg trash https://specifications.freedesktop.org/trash-spec/trashspec-1.0.h}ml\n    { s: \"Windows10Upgrade\", desc: \"Windows upgrade\" },\n    { s: \"Xcode.app\", desc: \"macOS code\" },\n    { s: \"*.sparsebundle/bands\", desc: \"Time Machine backup\" }, // < mac time machine backups like \".../bob's mac.sparsebundle/bands/...\"\n    { s: \"ImageMagick*\", desc: \"ImageMagick source\" },\n    { s: \"Install OS X*\", desc: \"macOS installer\" },\n    { s: \"Install macOS*\", desc: \"macOS installer\" },\n    { s: \"*.lrdata\", desc: \"LightRoom data\" }, // lightroom\n    { s: \"MinGW*\", desc: \"code\" }, // MSYS and variants\n    { s: \"msys*\", desc: \"code\" } // msys or msys64\n  ]) {\n    // ignorable directory\n    result.push(new Glob(\"**/\" + ea.s + \"/\", ea.desc))\n  }\n\n  map(configDir(), ea =>\n    result.pushNativePath(ea, \"PhotoStructure configuration\")\n  )\n\n  // Some \"ignorable\" paths need more than just a single pathname to be sure it's\n  // ignorable. For example, just ignoring all folders named \"Library\" would not\n  // be safe.\n\n  function addIgnorableSubdirs(root: string, children: string[], desc: string) {\n    if (!blank(root)) {\n      const arr = sort(\n        uniq(compactBlanks(children).map(ea => ea.toLowerCase()))\n      )\n      if (arr.length === 1) {\n        result.push(new Glob(`**/${root}/${arr[0]}/`, desc))\n      }\n      if (arr.length > 1) {\n        result.push(new Glob(`**/${root}/(${arr.join(\"|\")})/`, desc))\n      }\n    }\n  }\n\n  addIgnorableSubdirs(\"nix\", [\"store\"], \"NixOS package\")\n\n  result.push(\n    new Glob(\n      \"**/*.(photolibrary|photoslibrary|aplibrary)/!(master|masters|modified|original|originals)/\",\n      \"Apple Photos/Aperture library\"\n    )\n  )\n\n  result.push(new Glob(\"**/facetile*\", \"face thumbnail\"))\n\n  const subdirs = [\n    \"bin\",\n    \"cygdrive\",\n    \"dev\",\n    \"etc\",\n    \"games\",\n    \"include\",\n    \"lib?(32|64|x64)\",\n    \"local\",\n    \"locale\",\n    \"man\",\n    \"proc\",\n    \"sbin\",\n    \"share\",\n    \"src\",\n    \"tmp\",\n    \"usr\",\n    \"var\"\n  ]\n\n  addIgnorableSubdirs(\"usr\", subdirs, \"FHS system\")\n  addIgnorableSubdirs(\"cygwin?(64)\", subdirs, \"Cygwin\")\n  addIgnorableSubdirs(\"local\", subdirs, \"FHS system\")\n\n  // These can be found in backups:\n  addIgnorableSubdirs(\n    \"Windows\",\n    [\n      \"Boot\",\n      \"Containers\",\n      \"Cursors\",\n      \"Fonts\",\n      \"Help\",\n      \"Installer\",\n      \"Logs\",\n      \"Microsoft.NET\",\n      \"Servicing\",\n      \"SoftwareDistribution\",\n      \"System?(32)\",\n      \"SysWOW64\",\n      \"Temp\"\n    ],\n    \"Windows system dir\"\n  )\n\n  addIgnorableSubdirs(\n    \"lib\",\n    [\"firmware\", \"modules\", \"systemd\", \"udev\", \"x86_64-linux-gnu\"],\n    \"Linux system package\"\n  )\n  addIgnorableSubdirs(\"opt\", [\"google\", \"x11\", ...subdirs], \"FHS package\")\n\n  // git:\n  addIgnorableSubdirs(\"lfs\", [\"incomplete\", \"objects\"], \"Git LFS object\")\n\n  // https://www.tldp.org/LDP/sag/html/var-fs.html\n  const varDirs = [\n    \"cache\",\n    \"crash\",\n    \"games\",\n    \"lib\",\n    \"local\",\n    \"lock\",\n    \"log\",\n    \"logs\",\n    \"mail\",\n    \"run\",\n    \"snap\",\n    \"spool\",\n    \"tmp\"\n  ]\n  addIgnorableSubdirs(\"var\", varDirs, \"Linux /var\")\n  addIgnorableSubdirs(\"mnt\", varDirs, \"Linux /mnt\")\n\n  // linux backups:\n  addIgnorableSubdirs(\n    \"dev\",\n    [\n      \"block\",\n      \"bsg\",\n      \"bus\",\n      \"char\",\n      \"cpu\",\n      \"disk\",\n      \"dri\",\n      \"fd\",\n      \"hugepages\",\n      \"input\",\n      \"lightnvm\",\n      \"mapper\",\n      \"mqueue\",\n      \"net\",\n      \"pts\",\n      \"shm\",\n      \"snd\",\n      \"ubuntu-vg\",\n      \"usb\",\n      \"vfio\"\n    ],\n    \"Linux /dev backup\"\n  )\n\n  addIgnorableSubdirs(\n    \"proc\",\n    [\n      \"acpi\",\n      \"asound\",\n      \"bus\",\n      \"driver\",\n      \"fs\",\n      \"ipmi\",\n      \"irq\",\n      \"net\",\n      \"scsi\",\n      \"self\",\n      \"sys\",\n      \"sysvipc\",\n      \"thread-self\",\n      \"tty\"\n    ],\n    \"Linux /proc backup\"\n  )\n\n  // Mac /Library folders: sudo du -s /Library/* | sort -nr\n  addIgnorableSubdirs(\n    \"library\",\n    [\n      \"Accessibility*\",\n      \"AccessibilityBundles\",\n      \"Accounts\",\n      \"Address Book Plug-Ins\",\n      \"Apple\",\n      \"AppleMediaServices\",\n      \"Application Support\",\n      \"AssetCache\",\n      \"Assets\",\n      \"AssetsV2\",\n      \"AssetTypeDescriptors\",\n      \"Assistant\",\n      \"Audio\",\n      \"AWD\",\n      \"BridgeSupport\",\n      \"Bundles\",\n      \"CacheDelete\",\n      \"Caches\",\n      \"CardKit\",\n      \"Classroom\",\n      \"ColorPickers\",\n      \"Colors\",\n      \"ColorSync\",\n      \"Components\",\n      \"Compositions\",\n      \"ConfigurationProfiles\",\n      \"Contextual Menu Items\",\n      \"CoreAccessories\",\n      \"CoreAnalytics\",\n      \"CoreImage\",\n      \"CoreMediaIO\",\n      \"CoreServices\",\n      \"CryptoTokenKit\",\n      \"DefaultsConfigurations\",\n      \"Desktop Pictures\",\n      \"Developer\",\n      \"Dictionaries\",\n      \"DifferentialPrivacy\",\n      \"DirectoryServices\",\n      \"Display\",\n      \"Displays\",\n      \"DistributedEvaluation\",\n      \"Documentation\",\n      \"DriverExtensions\",\n      \"DTDs\",\n      \"DuetActivityScheduler\",\n      \"Extensions\",\n      \"FDR\",\n      \"FeatureFlags\",\n      \"Filesystems\",\n      \"Filters\",\n      \"Fonts\",\n      \"Frameworks\",\n      \"GPUBundles\",\n      \"Graphics\",\n      \"HIDPlugins\",\n      \"IdentityServices\",\n      \"Image Capture\",\n      \"Input Methods\",\n      \"InstallerSandboxes\",\n      \"InternetAccounts\",\n      \"Internet Plug-Ins\",\n      \"Isp\",\n      \"iTunes\",\n      \"Java\",\n      \"KerberosPlugins\",\n      \"KernelCollections\",\n      \"Kernels\",\n      \"Keyboard Layouts\",\n      \"Keychain\",\n      \"Keychains\",\n      \"LASecureIO\",\n      \"LaunchAgents\",\n      \"LaunchDaemons\",\n      \"Lexicons\",\n      \"LinguisticData\",\n      \"LocationBundles\",\n      \"LoginPlugins\",\n      \"Logs\",\n      \"MediaStreamPlugins\",\n      \"Messages\",\n      \"MessageTracer\",\n      \"Modem Scripts\",\n      \"MonitorPanels\",\n      \"MultiversePlugins\",\n      \"NetworkServiceProxy\",\n      \"OnBoardingBundles\",\n      \"OpenDirectory\",\n      \"OpenSSL\",\n      \"OSAnalytics\",\n      \"PairedSyncServices\",\n      \"Password Server Filters\",\n      \"PDF Services\",\n      \"Perl\",\n      \"PreferenceBundles\",\n      \"PreferencePanes\",\n      \"Preferences\",\n      \"PreferencesSyncBundles\",\n      \"Printers\",\n      \"PrivateFrameworks\",\n      \"PrivilegedHelperTools\",\n      \"Python\",\n      \"QuickLook\",\n      \"QuickTime\",\n      \"Receipts\",\n      \"Recents\",\n      \"Ruby\",\n      \"RunningBoard\",\n      \"Sandbox\",\n      \"ScreenReader\",\n      \"Screen Savers\",\n      \"Script Editor Plugins\",\n      \"ScriptingAdditions\",\n      \"Scripts\",\n      \"Security\",\n      \"Services\",\n      \"Sounds\",\n      \"Speech\",\n      \"SpeechBase\",\n      \"Spotlight\",\n      \"StagedDriverExtensions\",\n      \"StagedExtensions\",\n      \"StartupItems\",\n      \"SyncServices\",\n      \"SystemConfiguration\",\n      \"SystemExtensions\",\n      \"SystemMigration\",\n      \"SystemProfiler\",\n      \"Tcl\",\n      \"Templates\",\n      \"TextEncodings\",\n      \"TextInput\",\n      \"Trial\",\n      \"Updates\",\n      \"UserEventPlugins\",\n      \"UserNotifications\",\n      \"User Pictures\",\n      \"User Template\",\n      \"Video\",\n      \"VideoProcessors\",\n      \"WebServer\",\n      \"Widgets\",\n      \"xpc\"\n    ],\n    \"macOS Library\"\n  )\n\n  // from x64 mini's /Volumes/InstallESD:\n  addIgnorableSubdirs(\"packages\", [\"*.pkg\", \"*.mpkg\"], \"macOS package\")\n\n  // src trees:\n  addIgnorableSubdirs(\n    \"src/**\",\n    [\n      \"bin\",\n      \"ci\",\n      \"dist\",\n      \"doc?(s)\",\n      \"etc\",\n      \"lib?(s)\",\n      \"main\",\n      \"spec?(s)\",\n      \"src\",\n      \"test?(s)\",\n      \"tools\",\n      \"util\"\n    ],\n    \"code\"\n  )\n\n  addIgnorableSubdirs(\n    \"docs\",\n    [\"admin\", \"content\", \"general\", \"generated\", \"sql\"],\n    \"code\"\n  ) // docs\n  addIgnorableSubdirs(\n    \"pkg\",\n    [\n      \"acceptance\",\n      \"ccl\",\n      \"cli\",\n      \"cmd\",\n      \"server\",\n      \"sql\",\n      \"storage\",\n      \"ui\",\n      \"util\",\n      \"workload\"\n    ],\n    \"code\"\n  ) // cockroach\n\n  addIgnorableSubdirs(\n    \"osv\",\n    [\n      \"apps\",\n      \"arch\",\n      \"compiler\",\n      \"external\",\n      \"include\",\n      \"java\",\n      \"modules\",\n      \"musl\",\n      \"tests\"\n    ],\n    \"code\"\n  )\n\n  // Go installation has some ignorables:\n  addIgnorableSubdirs(\n    \"go\",\n    [\"bin\", \"blog\", \"cmd\", \"doc\", \"lib\", \"misc\", \"pkg\", \"src\", \"test\", \"vt\"],\n    \"code\"\n  )\n\n  // Perl\n  addIgnorableSubdirs(\n    \"Perl?(64)\",\n    [\"bin\", \"eg\", \"etc\", \"html\", \"lib\", \"site\"],\n    \"code\"\n  )\n  addIgnorableSubdirs(\n    \"Python*\",\n    [\"dlls\", \"doc?(s)\", \"include\", \"lib?(s)\", \"scripts\", \"tools\", \"tcl\"],\n    \"code\"\n  )\n\n  addIgnorableSubdirs(\n    \"Ruby*\",\n    [\"bin\", \"include\", \"lib\", \"msys*\", \"packages\", \"share\", \"ssl\"],\n    \"code\"\n  )\n\n  addIgnorableSubdirs(\n    \"msys*\",\n    [\"clang*\", \"dev\", \"etc\", \"mingw*\", \"tmp\", \"ucrt*\", \"var\"],\n    \"code\"\n  )\n\n  // Android SDK:\n  addIgnorableSubdirs(\n    \"sdk\",\n    [\n      \"build-tools\",\n      \"emulator\",\n      \"extras\",\n      \"patcher\",\n      \"platforms\",\n      \"platform-tools\",\n      \"sources\",\n      \"tools\"\n    ],\n    \"code\"\n  )\n\n  addIgnorableSubdirs(\"test\", [\"fixtures\"], \"code\") // no one will put their precious photos in \".../test/fixtures/...\". RIGHT?\n  addIgnorableSubdirs(\"data\", [\"$of\"], \"windows backup\") // windows 7-10 backup directories\n\n  addIgnorableSubdirs(\n    \"System\",\n    [\n      \"Applications\",\n      \"Developer\",\n      \"DriverKit\",\n      \"Library\",\n      \"iOSSupport\"\n      //Volumes, < DON'T IGNORE /System/Volumes/Data/Users is the homedir!\n    ],\n    \"macOS System\"\n  )\n\n  addIgnorableSubdirs(\n    \"contents\",\n    [\"frameworks\", \"plugins\", \"resources\", \"sharedsupport\"],\n    \"macOS application\"\n  ) // mac os app\n\n  addIgnorableSubdirs(\"pg\", [\"pgsql\"], \"code\") // PostgreSQL src\n\n  // Windows application data:\n  addIgnorableSubdirs(\n    \"appdata\",\n    [\"local\", \"locallow\", \"roaming\"],\n    \"Windows default AppData\"\n  )\n\n  addIgnorableSubdirs(\n    \"ps\",\n    [\"cache\", \"config\", \"logs\", \"tmp\"],\n    \"PhotoStructure docker dir\"\n  )\n\n  return result.toA()\n})\n\nconst watchSettings = lazy(() => {\n  Settings.excludeGlobsAdd.watchLater(() => excludeBundles.unset())\n  Settings.excludeGlobsOmit.watchLater(() => excludeBundles.unset())\n})\n\nexport function resetGlobs() {\n  Settings.excludeGlobsAdd.unset()\n  Settings.excludeGlobsOmit.unset()\n}\n\n// exposed for tests\nexport const defaultDirPredicates = lazy<PredicateBundle<SimpleFile>>(() => [\n  {\n    notSymlinkLoop,\n    notInHiddenPhotoStructureDir,\n    notNoMedia,\n    notHidden\n    // don't hide \"ignorable\" mountpoints!\n  }\n])\n\n// exposed for tests\nexport const defaultFilePredicates = lazy(() => [\n  { notInHiddenPhotoStructureDir }\n])\n\nexport const excludeGlobs = lazy(() => {\n  const result = new Map<string, Glob>()\n  function addGlob(glob: Glob) {\n    if (glob != null && glob.valid) {\n      const k = glob.glob.toLowerCase().trim()\n      if (result.has(k)) {\n        logger().warn(\"Duplicate glob:\", { glob })\n      }\n      result.set(k, glob)\n    }\n  }\n\n  function omitGlob(glob: string) {\n    const k = glob.toLowerCase().trim()\n    if (!result.has(k)) {\n      logger().warn(\n        \"Failed to find and remove glob specified in PS_EXCLUDE_GLOBS_OMIT\",\n        { glob }\n      )\n    } else {\n      result.delete(k)\n    }\n  }\n\n  watchSettings()\n  defaultExcludeGlobs().forEach(addGlob)\n  for (const ea of Settings.excludeGlobsAdd.values) {\n    addGlob(new Glob(ea, \"(user-provided)\"))\n  }\n  for (const glob of Settings.excludeGlobsOmit.values) {\n    omitGlob(glob)\n  }\n  const arr = sortBy(result.values(), ea =>\n    compactBlanks(ea.glob.toLowerCase().split(\"/\"))\n  )\n  const [dir, file] = partition(arr, ea => ea.glob.endsWith(\"/\"))\n\n  return { dir, file }\n})\n\nexport const excludeBundles = lazy(() => {\n  const g = excludeGlobs()\n  return {\n    dir: [\n      ...defaultDirPredicates(),\n      mergeObjects(...g.dir.map(ea => ea.bundle))\n    ] as PredicateBundle<SimpleFileOrString>,\n    file: [\n      ...defaultFilePredicates(),\n      mergeObjects(...g.file.map(ea => ea.bundle))\n    ] as SyncPredicateBundle<SimpleFileOrString>\n  }\n})\n\nconst ifDisabled: SyncPredicateBundle<SimpleFileOrString> = [\n  { disableIgnorableFilters: () => true }\n]\nconst ifBlank: SyncPredicateBundle<SimpleFileOrString> = [\n  { notBlank: () => false }\n]\n\nexport function notExcludedFilePredicates(\n  file: SimpleFileOrString\n): SyncPredicateBundle<SimpleFileOrString> {\n  return Settings.disableIgnorableFilters.valueOrDefault\n    ? ifDisabled\n    : blank(file)\n    ? ifBlank\n    : excludeBundles().file\n}\n\nexport function whyExcludedFile(f: SimpleFileOrString): Maybe<string> {\n  return SyncPredicates.whyRejected(f, ...notExcludedFilePredicates(f))\n}\n\nexport function isExcludedFile(f: SimpleFileOrString): boolean {\n  return null != whyExcludedFile(f)\n}\n\nexport function notExcludedDirPredicates(\n  dir: SimpleFileOrString\n): PredicateBundle<SimpleFileOrString> {\n  if (Settings.disableIgnorableFilters.valueOrDefault) return ifDisabled\n  if (blank(dir)) return ifBlank\n  return excludeBundles().dir\n}\n\nexport async function whyExcludedDirectory(\n  dir: SimpleFileOrString\n): PromiseMaybe<string> {\n  return Predicates.whyRejected(dir, ...notExcludedDirPredicates(dir))\n}\n\nexport async function isExcludedDirectory(\n  f: SimpleFileOrString\n): Promise<boolean> {\n  return null != (await whyExcludedDirectory(f))\n}\n\nexport async function whyExcludedDirectoryRecursive(\n  dir: SimpleFile\n): PromiseMaybe<string> {\n  return firstSelfOrAncestor(dir, whyExcludedDirectory)\n}\n\nfunction notSymlinkLoop(dir: SimpleFileOrString): boolean {\n  return !seemsLikeSymlinkLoop(dir)\n}\n\nfunction notNoMedia(dir: SimpleFileOrString) {\n  return thenNot(hasNoMedia(dir))\n}\n\nfunction notHidden(dir: SimpleFileOrString) {\n  return thenNot(isHidden(dir))\n}\n\nexport function notInHiddenPhotoStructureDir(dir: SimpleFileOrString) {\n  return !inHiddenPhotoStructureDir(dir)\n}\n","import { isNotEmpty } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { keys } from \"../../fe/Object\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { ee } from \"../event/EventEmitter\"\nimport { FifoCacheAsync, FifoCacheAsyncOpts } from \"../FifoCacheAsync\"\nimport { mkLogger } from \"../Logger\"\nimport { mapEntries } from \"../Object\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\n\n// DEPLOOP DANGER: DON'T REFERENCE BASEFILE!\n\nexport const InstanceCacheMaxSize = 256\n\nexport interface CacheableFile {\n  clear(args?: { emit?: boolean }): this\n}\n\nexport function isCacheableFile(o: any): o is CacheableFile {\n  return typeof o === \"object\" && typeof o.clear === \"function\"\n}\n\nexport class FileCache<T> extends FifoCacheAsync<T> {\n  constructor(\n    opts: Partial<FifoCacheAsyncOpts> & Pick<FifoCacheAsyncOpts, \"name\">\n  ) {\n    super({\n      maxSize: InstanceCacheMaxSize,\n      timeoutMs: ShortCommandTimeoutMs,\n      ...opts\n    })\n\n    // break circular deps:\n    later(() => {\n      ee().on(\"fileChanged\", path => this.#clearFromPath(path))\n      ee().on(\"clearCache\", () => this.clear())\n\n      new EndableWrapper(\n        opts.name + \" stats\",\n        () => {\n          const s = mapEntries(this.stats(), (_, v) => (v > 0 ? v : undefined))\n          if (isNotEmpty(keys(s))) {\n            mkLogger(opts.name).info(\"stats\", s)\n          }\n        },\n        EndableRanks.stats\n      )\n    })\n  }\n\n  async #clearFromPath(fromPath?: string) {\n    if (blank(fromPath)) {\n      // full wipe: the singleton expectation can't/shouldn't be expected.\n      await this.clear()\n    } else {\n      for (const k of this.cache.keys()) {\n        if (k.startsWith(fromPath)) {\n          const v = await this.cache.get(k) // values may be promises\n          if (isCacheableFile(v)) {\n            // NOTE: BaseFile and PosixFile instances are expected to be\n            // singletons for a given path, so if we remove the instance from\n            // here, they won't be singletons anymore: we just want to remove\n            // any cached state they currently have.\n            v.clear({ emit: false })\n          } else {\n            this.cache.delete(k)\n          }\n        }\n      }\n    }\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { gt } from \"../../fe/Primitive\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { rateLimited } from \"../RateLimited\"\nimport { EndableRanks, ending } from \"../async/Endable\"\nimport { EndableInterval } from \"../async/EndableInterval\"\nimport { fmtFullDuration } from \"../date/DurationFormat\"\nimport { ee } from \"../event/EventEmitter\"\nimport { DirectoryEntry } from \"./DirectoryEntry\"\nimport { isNoMediaName } from \"./NoMedia\"\nimport { SimpleFile } from \"./SimpleFile\"\n\nexport class FileCleanup {\n  readonly #logger: Logger\n\n  constructor(\n    readonly name: string,\n    readonly rootNativePath: () => MaybeSyncOrAsync<string | SimpleFile>,\n    readonly staleMs: number,\n    readonly isPrunable: (file: DirectoryEntry) => SyncOrAsync<boolean>\n  ) {\n    this.#logger = mkLogger(\"fs.FileCleanup(\" + name + \")\")\n  }\n\n  readonly scheduleInterval = lazy(\n    () =>\n      new EndableInterval({\n        name: this.name,\n        callback: () => this.cleanup(),\n        intervalMs: this.staleMs / 2,\n        rank: EndableRanks.first\n      })\n  )\n\n  // We're using DirectoryEntries here, as we don't want anything that's cached,\n  // we want to minimize memory/object creation, and don't want to blow out the\n  // PosixFile caches:\n  readonly cleanup = rateLimited({\n    name: this.name,\n    minCallDelayMs: this.staleMs / 4,\n    f: async () => {\n      if (ending()) return\n      const r = await this.rootNativePath()\n      if (r == null) return []\n      const root = await DirectoryEntry.for(r)\n      if (root == null) {\n        // this.logger.debug(\"_cleanup(): no-op, root is null\", r)\n        return []\n      }\n\n      this.#logger.info(\"cleanup(): starting\", {\n        root,\n        staleMs: fmtFullDuration(this.staleMs, \" \")\n      })\n\n      const minFreshTs = Date.now() - this.staleMs\n      const victimDirs = new Set()\n      const prunedFiles: string[] = []\n      const prunedDirs: string[] = []\n      // this.logger.debug(\"_cleanup(): starting\", { root, maxTs })\n      await root.clear().visitDescendants(async f => {\n        // Don't delete the root .nomedia dir:\n        if (f.dir === root.nativePath && isNoMediaName(f.base)) return\n\n        // If we're a victim dir, ignore the mtime: we should still try to delete it.\n        const notVictimDir = !victimDirs.has(f.nativePath)\n        if (notVictimDir && gt(await f.mtimeMs(), minFreshTs)) {\n          return\n        }\n\n        if (f.isDirectory()) {\n          try {\n            // Rather than running readdir, just try unlinking:\n            await f.rmdir_()\n            prunedDirs.push(f.nativePath)\n            victimDirs.add(f.dir)\n            // this.logger.debug(\"_cleanup(): deleted \" + f)\n          } catch (err: any) {\n            if (err.code === \"ENOENT\") {\n              this.#logger.warn(\"cleanup(): ENOENT \" + f, err)\n              ee().emit(\"clearCache\")\n            }\n            if (err.code !== \"ENOTEMPTY\") {\n              this.#logger.warn(\"cleanup(): failed to rmdir \" + f, err)\n            }\n          }\n        } else if (await this.isPrunable(f)) {\n          try {\n            await f.unlink_()\n            prunedFiles.push(f.nativePath)\n            victimDirs.add(f.dir)\n            // this.logger.debug(\"_cleanup(): unlinked \" + f)\n          } catch (err) {\n            this.#logger.warn(\"cleanup(): failed to clean up tmpfile \" + f, err)\n          }\n        } else {\n          // this.logger.debug(\"_cleanup(): not prunable: \" + f)\n        }\n      })\n      const result = [...prunedFiles, ...prunedDirs]\n      if (isNotEmpty(result)) {\n        root.clear()\n      }\n      this.#logger.info(\"cleanup(): done\", {\n        root,\n        pruned_file_count: prunedFiles.length,\n        pruned_dir_count: prunedDirs.length\n      })\n      return result\n    }\n  })\n}\n","import { Dirent } from \"fs\"\nimport { lazy } from \"../../core/Lazy\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { values } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport { MaybeFileish } from \"../fs/MaybeFileish\"\nimport { JpegExts } from \"./JpegExts\"\nimport { isSimpleFile } from \"./SimpleFile\"\n\nconst ShortExtRe = /(?:^\\.?|.\\.)([a-z0-9]{2,4})$/i\n\n/**\n * @return the file extension, in lower case, without a \".\" prefix. File\n * extensions longer than 4 characters are not supported.\n */\nexport function normalizeExt(ext: MaybeFileish): Maybe<string> {\n  ext = isSimpleFile(ext) ? ext.ext : ext instanceof Dirent ? ext.name : ext\n  const result = map(ShortExtRe.exec(toS(ext)), m => m[1])?.toLowerCase()\n  // hack to normalize all JPEG to \"jpg\"\n  return JpegExts.includes(result as any) ? \"jpg\" : result\n}\n\nexport function isExt(ext: MaybeFileish, ...exts: string[]): boolean {\n  ext = normalizeExt(ext)\n  return exts.some(ea => normalizeExt(ea) === ext)\n}\n\nexport function isJpegExt(ext: MaybeFileish): boolean {\n  return isExt(ext, ...JpegExts)\n}\nexport function isJsonExt(ext: MaybeFileish): boolean {\n  return isExt(ext, \"json\")\n}\nexport function isCsvExt(ext: MaybeFileish): boolean {\n  return isExt(ext, \"csv\")\n}\n\nexport const SidecarFiletypes = {\n  \"application/rdf+xml\": [\"xmp\"],\n  \"application/json\": [\"json\"],\n  \"application/x-mie\": [\"mie\"],\n  \"application/x-exif\": [\"exif\"],\n  \"application/vnd.apple.photos\": [\"aae\"],\n  \"image/x-exv\": [\"exv\"] // BOO it's not an image!\n} as const\n\nexport const SidecarExts = flatten(\n  values(SidecarFiletypes)\n) as unknown as string[]\n\n/**\n * Note that JSON is considered a sidecar type\n */\nexport function isSidecarExt(ext: MaybeFileish): boolean {\n  return isExt(ext, ...SidecarExts)\n}\n\nexport const extAliases = lazy(() => {\n  const result = new Map<string, string[]>()\n  for (const arr of [\n    JpegExts,\n    [\"tif\", \"tiff\"],\n    [\"heif\", \"heic\"],\n    [\"html\", \"htm\"],\n    [\"jp2\", \"jp2k\"]\n  ] as string[][]) {\n    for (const ea of arr) {\n      result.set(ea, arr)\n    }\n  }\n  return result\n})\n\nconst regexCache = new Map<string, RegExp>()\n\n/**\n * NOTE: Assumes exts doesn't need normalization, and comes directly from getExtInfo!\n */\nexport function mkExtsRegExp(exts: string[]): RegExp {\n  return getOrSet(\n    regexCache,\n    exts.join(\",\"),\n    () => new RegExp(\"\\\\.(?:\" + exts.join(\"|\") + \")$\", \"im\")\n  )\n}\n","import fs from \"fs\"\nimport { stat } from \"fs/promises\"\nimport { pick } from \"../../fe/Object\"\nimport { SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\n\nexport type FileStats = Pick<fs.Stats, \"size\" | \"mtimeMs\">\n\nexport async function fileStats_(f: SimpleFileOrString): Promise<FileStats> {\n  return pick((await stat(toNativePath_(f)))!, \"size\", \"mtimeMs\")\n}\n","import { FileTypeResult, fromBuffer } from \"file-type\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { mkLogger } from \"../Logger\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { normalizeExt } from \"../fs/FileExt\"\nimport { readRawField } from \"../tags/ExifTool\"\nimport { mimetypeExt } from \"../tags/FileTypes\"\nimport { PosixFile } from \"./PosixFile\"\nimport { readFilePart_ } from \"./ReadFilePart\"\nimport { exists } from \"./Stat\"\n\nconst logger = lazy(() => mkLogger(\"fs.FileType\"))\n\n// file-type doesn't handle these correctly:\nconst BadMimes = [\"image/tiff\", \"audio/mpeg\"]\n\n/**\n * You probably want readMimeType(), which tries to use existing ExifTool\n * caches first before falling back to calling this function.\n */\nexport async function readFileType_(\n  nativePath: string\n): PromiseMaybe<FileTypeResult> {\n  try {\n    // PERF: don't stat then read. Just hit it.\n    // We need to fetch at least 197 bytes to work with AVCHD properly:\n    const { buffer } = await readFilePart_({\n      nativePath,\n      position: 0,\n      length: 256\n    })\n    const result = await fromBuffer(buffer)\n    if (result != null && !BadMimes.includes(result.mime)) {\n      return {\n        ext: normalizeExt(result.ext) ?? result.ext,\n        mime: result.mime\n      } as FileTypeResult\n    }\n\n    // Don't bother exiftool if the file doesn't exist:\n    if (!(await exists(nativePath))) return\n\n    const mime = await readRawField(nativePath, \"MIMEType\")\n    const ext = normalizeExt(PosixFile.for(nativePath)) ?? mimetypeExt(mime)\n    return blank(mime) || blank(ext)\n      ? undefined\n      : ({ ext, mime } as FileTypeResult)\n  } catch (cause: any) {\n    if (cause?.code === \"EISDIR\") {\n      return undefined\n    } else {\n      logger().warn(\"readFileType() failed for \" + nativePath, cause)\n      throw new WrappedError(\"Failed to read mimetype for \" + nativePath, {\n        cause,\n        ignorable: true,\n        retriable: false,\n        fatal: false,\n        path: nativePath\n      })\n    }\n  }\n}\n","import { map } from \"../../fe/Maybe\"\nimport { thenOrTimeout } from \"../../fe/ThenOrTimeout\"\nimport { sortIgnoreCase } from \"../String\"\nimport { shortFsStringSha } from \"../StringHash\"\nimport { configDir } from \"../dir/ConfigDir\"\nimport { FsLock } from \"./FsLock\"\nimport { PosixFile } from \"./PosixFile\"\n\nexport function defaultFsAdvisoryLockDir() {\n  return map(configDir(), ea => PosixFile.for(ea).join(\"advisory-locks\"))\n}\n\nexport async function withFsAdvisoryLocks_<T>({\n  name,\n  lockNames,\n  f,\n  timeoutMs,\n  lockDir = defaultFsAdvisoryLockDir()\n}: {\n  name: string\n  lockNames: string[]\n  f: () => Promise<T>\n  timeoutMs: number\n  lockDir?: PosixFile\n}): Promise<T> {\n  if (lockDir == null) return f()\n  await lockDir.mkdirp_()\n  const fsSafeLockNames = sortIgnoreCase(lockNames)\n  const locks = fsSafeLockNames.map(lockName =>\n    FsLock.for({\n      name: lockName,\n      file: lockDir.join(shortFsStringSha(lockName)),\n      timeoutMs\n    })\n  )\n  try {\n    for (const lock of locks) {\n      if (true !== (await thenOrTimeout(lock.acquire_(), timeoutMs))) {\n        throw new Error(\n          \"Failed to acquire lock for \" +\n            name +\n            \": \" +\n            lock.opts.name +\n            \" was busy\"\n        )\n      }\n    }\n    return await f()\n  } finally {\n    for (const lock of locks) {\n      lock.release()\n    }\n  }\n}\n","import { pidExists } from \"batch-cluster\"\nimport { Dirent } from \"fs\"\nimport fse from \"fs-extra\"\nimport { clearTimeout } from \"timers\"\nimport { compactBlanks, filterInPlace } from \"../../fe/Array\"\nimport { at } from \"../../fe/At\"\nimport { secondMs } from \"../../fe/Date\"\nimport { eql } from \"../../fe/Eql\"\nimport { fmtDuration } from \"../../fe/FmtDuration\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, round, toInt } from \"../../fe/Number\"\nimport { randomFloat } from \"../../fe/Random\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { toS } from \"../../fe/toS\"\nimport { isTest } from \"../NodeEnv\"\nimport { escapeRegExp } from \"../RegExp\"\nimport { serviceName } from \"../ServiceNames\"\nimport { EndableRank, EndableRanks, ending } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { oneAtATime } from \"../async/OneAtATime\"\nimport { InternalErrorFlag } from \"../error/ErrorFlags\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { TokenRadix } from \"../math/Radix\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { BaseFile } from \"./BaseFile\"\nimport {\n  PsLockExt,\n  fsLockDir,\n  fsLockFileBasename,\n  isPsLockFileOrDir\n} from \"./FsLockDir\"\nimport { SimpleFileOrString, basename } from \"./SimpleFile\"\n\nexport interface FsLockOptions {\n  name?: string\n  file: BaseFile\n  /**\n   * If 0, no timeout\n   */\n  timeoutMs: number\n  noopIfContested?: boolean\n  /**\n   * If true, ignore fslock\n   */\n  skipFsLock?: boolean\n\n  endableRank?: EndableRank\n\n  /**\n   * If this is lock in a cache directory, don't bother running rmdir'ing the\n   * lock dir on release.\n   */\n  dirty?: boolean\n}\n\ntype VacuumArg = { vacuum: boolean }\n\nconst LastNumberRe = new RegExp(\"-(?<pid>\\\\d+)\" + escapeRegExp(PsLockExt) + \"$\")\n\n/**\n * FsLock is a filesystem-based advisory lock for a given file, where:\n *  - lock contention is expected both inter and intra processes\n *  - fair lock acquisition (first in, first served)\n *  - locks are only held temporarily\n *  - locks are held per given instance, not per process\n *\n * The instance that holds the lock is the instance whose filename is\n * alphabetically first in the lock dir.\n */\nexport class FsLock extends EndableWrapper {\n  static #lastUidTime: number = 0\n  static internalErrors = 0\n  static #instanceCount = 0\n\n  static newUid(pid = process.pid) {\n    // Make sure lastUidTime is always increasing:\n    this.#lastUidTime = Math.max(Date.now(), this.#lastUidTime + 1)\n    // The time uid MUST BE FIRST in the UID to ensure locks are acquired in\n    // temporal order:\n    return compactBlanks([\n      TokenRadix.encode(this.#lastUidTime), // filename-safe radix\n      serviceName.prior(),\n      toS(pid)\n    ]).join(\"-\")\n  }\n\n  static pidFromLockfile(lockfile: SimpleFileOrString | Dirent): Maybe<number> {\n    return FsLock.pidFromBasename(basename(lockfile))\n  }\n\n  static pidFromBasename(base: string): Maybe<number> {\n    return toInt(LastNumberRe.exec(toS(base))?.groups?.pid)\n  }\n\n  static #instances: FsLock[] = []\n\n  /**\n   * Use `FsLock.for()` instead of the constructor to ensure the same fslock\n   * instance is used for the same file\n   */\n  static for(opts: FsLockOptions): FsLock {\n    return (\n      this.#instances.find(ea => ea.opts.file === opts.file) ?? new FsLock(opts)\n    )\n  }\n\n  readonly #instanceId = ++FsLock.#instanceCount\n  readonly lockdir: BaseFile\n  #acquired = false\n  /** only set when acquisition is requested */\n  lockfile: Maybe<BaseFile>\n  #refreshTimer: Maybe<NodeJS.Timer>\n  #rmLockdirLater: Maybe<NodeJS.Timeout>\n  #lastVacuumTs = Date.now()\n  readonly staleMs: number\n\n  constructor(readonly opts: FsLockOptions) {\n    super(\n      opts.name ?? \"FsLock\",\n      () => this.release(),\n      opts.endableRank ?? EndableRanks.postdb,\n      commandTimeoutMs()\n    )\n    this.lockdir = fsLockDir(this.opts.file)\n\n    if (opts.name == null) {\n      this.name =\n        \"fs.FsLock(\" + opts.file.baseWithGrandparent + \")#\" + this.#instanceId\n    }\n\n    // files should be checked for being stale at least once during the\n    // timeoutMs period. We make this a random period less than timeoutMs to\n    // avoid a thundering herd of processes all trying to vacuum at the same\n    // time.\n    this.staleMs = round(this.opts.timeoutMs / randomFloat(2, 4))\n    FsLock.#instances.push(this)\n  }\n\n  get acquired() {\n    return this.#acquired\n  }\n\n  toLogJSON() {\n    return {\n      name: this.name,\n      acquired: this.acquired\n    }\n  }\n\n  async #maybeVacuum(arg?: VacuumArg) {\n    const why =\n      true === arg?.vacuum\n        ? \"arg.vacuum\"\n        : gt0(this.staleMs) && Date.now() > this.#lastVacuumTs + this.staleMs\n        ? \"lastVacuumTs was too long ago\"\n        : undefined\n\n    return this.logger.tap({\n      msg: \"#maybeVacuum()\",\n      level: why == null ? \"trace\" : \"debug\",\n      result: why == null ? undefined : await this.#vacuum(),\n      meta: { why }\n    })\n  }\n\n  async #vacuum() {\n    this.#lastVacuumTs = Date.now()\n    const survivors: string[] = []\n\n    // NOTE: we don't no-op this whole section if #staleMs is 0, because we\n    // can still determine lockfiles are stale if their pid is gone.\n\n    const names = await this.#selfAndSiblingNames_()\n\n    for (const ea of names) {\n      const child = this.lockdir.join(ea)\n      if (gt0(this.staleMs)) {\n        const staleAt =\n          Math.round((Date.now() - (this.staleMs + secondMs)) / 1000) * 1000\n        const childMtimeMs = await child.mtimeMs({ refresh: true })\n        if (childMtimeMs != null && childMtimeMs < staleAt) {\n          this.logger.warn(\n            \"#vacuum(): child \" +\n              child.base +\n              \" is stale by \" +\n              fmtDuration(staleAt - childMtimeMs),\n            { staleMs: this.staleMs, childMtimeMs, staleAt }\n          )\n          await child.unlink()\n          continue\n        }\n      }\n      const pid = FsLock.pidFromLockfile(child)\n      if (pid == null) {\n        this.logger.error(\n          \"#vacuum(): Lockfile \" +\n            child.base +\n            \" has no pid.\" +\n            InternalErrorFlag\n        )\n        FsLock.internalErrors++\n        await child.unlink()\n        continue\n      }\n      if (!pidExists(pid)) {\n        this.logger.warn(\n          \"#vacuum(): Lockfile \" + child.base + \"'s pid is gone.\",\n          { pid }\n        )\n        await child.unlink()\n        continue\n      }\n      this.logger.debug(\n        \"#vacuum(): Lockfile \" + child.base + \" is still valid.\",\n        { pid }\n      )\n      survivors.push(ea)\n    }\n    return survivors\n  }\n\n  async #selfAndSiblingNames_() {\n    const arr = await fse.readdir(this.lockdir.nativePath, {\n      withFileTypes: true\n    })\n    return arr\n      .filter(ea => ea.isFile() && isPsLockFileOrDir(ea))\n      .map(ea => ea.name)\n  }\n\n  async selfAndSiblingNames_(arg?: VacuumArg): Promise<string[]> {\n    return (await this.#maybeVacuum(arg)) ?? this.#selfAndSiblingNames_()\n  }\n\n  async siblingNames(arg?: VacuumArg): Promise<string[]> {\n    return (await this.selfAndSiblingNames_(arg)).filter(\n      ea => ea !== this.lockfile?.base\n    )\n  }\n\n  async #iAmNext_(arg?: VacuumArg): Promise<boolean> {\n    if (this.lockfile == null) {\n      this.release()\n      return false\n    }\n    const children = await this.selfAndSiblingNames_(arg)\n    // someone can sneak into .release() while I was checking sibling names:\n    if (this.lockfile == null) {\n      this.release()\n      return false\n    }\n    if (!children.includes(this.lockfile.base)) {\n      if (isTest) {\n        FsLock.internalErrors++\n        this.logger.throw(\n          \"#iAmNext_(): missing lockfile, \" + this.lockfile + InternalErrorFlag,\n          { children, lockfile: this.lockfile }\n        )\n      } else {\n        this.release()\n        return false\n      }\n    }\n\n    const result = children[0] === this.lockfile.base\n    if (result) {\n      this.#acquired = true\n    } else {\n      // If the current owner is dead, vacuum.\n      if (arg?.vacuum !== true) {\n        const ownerPid = FsLock.pidFromBasename(children[0])\n        if (gt0(ownerPid) && !pidExists(ownerPid)) {\n          this.logger.info(\"#iAmNext_(): auto-vacuuming, owner pid is gone.\")\n          return this.#iAmNext_({ vacuum: true })\n        }\n      }\n    }\n    return this.logger.tap({\n      msg: \"#iAmNext_()\",\n      result,\n      meta: {\n        lockfiles: children\n      }\n    })\n  }\n\n  async iAmLast_(arg?: VacuumArg): Promise<boolean> {\n    return (\n      this.lockfile != null &&\n      at(await this.selfAndSiblingNames_(arg), -1) === this.lockfile.base\n    )\n  }\n\n  async iAmOnly_(arg?: VacuumArg): Promise<boolean> {\n    return (\n      this.lockfile != null &&\n      eql(await this.selfAndSiblingNames_(arg), [this.lockfile.base]) === true\n    )\n  }\n\n  readonly tryAcquire_ = oneAtATime<boolean>({\n    runLaterIfBusy: false,\n    undefinedIfBusy: true,\n    fn: async () => {\n      if (this.#acquired) return true\n      await (this.lockfile ??= this.lockdir.join(\n        fsLockFileBasename(FsLock.newUid())\n      )).touch_()\n      this.startRefreshTimer_()\n      try {\n        // something may have raced us to release() before we could check if\n        // we were next:\n        if (this.lockfile == null) return false\n        if (await this.#iAmNext_()) {\n          this.logger.debug(\"tryAcquire(): acquired\")\n          return true\n        }\n        return false\n      } catch (error) {\n        this.release()\n        this.logger.error(\"tryAcquire() failed\", error)\n        return false\n      }\n    }\n  })\n\n  startRefreshTimer_() {\n    if (this.#refreshTimer == null) {\n      if (this.staleMs > 0) {\n        const lockfileRefreshMs = Math.max(\n          // Make sure we refresh more frequently than the staleMs:\n          this.staleMs / 2,\n          // But not more than once a second:\n          isTest ? 10 : secondMs\n        )\n        this.#refreshTimer = setInterval(\n          () => this.#refreshLockfile_(),\n          lockfileRefreshMs\n        )\n      }\n    }\n  }\n\n  stopRefreshTimer() {\n    if (this.#refreshTimer != null) {\n      clearInterval(this.#refreshTimer)\n      this.#refreshTimer = undefined\n    }\n  }\n\n  async #refreshLockfile_() {\n    if (\n      this.lockfile == null ||\n      (await this.lockfile.notExists({ refresh: true }))\n    ) {\n      // This _shouldn't_ happen...\n      this.logger.warn(\"#refreshLockfile_(): null or missing lockfile\", {\n        lockfile: this.lockfile,\n        notExists: await this.lockfile?.notExists()\n      })\n      // But if it does, do the bookkeeping to make sure our state is in sync\n      // with the filesystem:\n      this.release()\n    } else {\n      try {\n        await this.lockfile.touch_()\n        this.logger.debug(\"#refreshLockfile_(): Touched lockfile\", {\n          lockfile: this.lockfile,\n          selfAndSiblings: await this.#selfAndSiblingNames_()\n        })\n      } catch (err) {\n        this.logger.warn(\"#refreshLockfile_(): failed, force-releasing.\", err)\n        this.release()\n        throw err\n      }\n    }\n  }\n\n  async acquire_({\n    releaseOnFailure = true,\n    timeoutMs = this.opts.timeoutMs\n  }: {\n    releaseOnFailure?: boolean\n    timeoutMs?: number\n  } = {}): Promise<boolean> {\n    if (this.#acquired) {\n      return true\n    }\n\n    try {\n      // Feeling lucky? (if this works, we can skip the fswatch!)\n      if (await this.tryAcquire_()) return true\n\n      await this.lockdir.watchUntil({\n        f: () => this.tryAcquire_(),\n        persistent: false,\n        recursive: false,\n        timeoutMs,\n        intervalMs: Math.round(Math.min(this.staleMs, timeoutMs) / 5)\n      })\n\n      if (!this.acquired && releaseOnFailure) {\n        this.release()\n      }\n      return this.acquired\n    } catch (error) {\n      if (releaseOnFailure) this.release()\n      this.logger.warn(\"acquire_() failed\", { error })\n      throw error\n    }\n  }\n\n  #rmLockDir() {\n    this.logger.debug(\"#rmLockDir() attempting lockdir rmdir...\", {\n      // This will fail if there is other contents (we're not calling .rmrf!)\n      success: this.lockdir.rmdirSync(\"trace\")\n    })\n  }\n\n  // sync to avoid concurrent state changes:\n  release(): boolean {\n    if (this.ended) {\n      filterInPlace(\n        FsLock.#instances,\n        ea => ea.#instanceId !== this.#instanceId\n      )\n    }\n    this.stopRefreshTimer()\n\n    // we set our state first, before we change the filesystem to make sure\n    // the lockfile refresher doesn't re-touch the lockfile:\n    this.#acquired = false\n\n    map(this.#rmLockdirLater, ea => clearTimeout(ea))\n\n    try {\n      // release is sync to avoid concurrent state changes:\n      this.lockfile?.unlinkSync(LogLevels.trace)\n      this.lockfile = undefined\n      this.logger.debug(\"#release() success\")\n      return true\n    } catch (err) {\n      this.logger.warn(\"#release() failed to delete lockfile\", err)\n      return false\n    } finally {\n      if (this.opts.dirty === true) {\n        // no need to do anything else.\n      } else if (ending() || this.ended) {\n        // Don't wait, just try now (which might fail, but who cares)\n        void this.#rmLockDir()\n      } else {\n        // Try to clean up the lockdir but only after a bit, to make sure there's\n        // no subsequent lock contention:\n        this.logger.debug(\"#release() scheduling lockdir cleanup\", {\n          ms: this.staleMs * 2\n        })\n        // unref'ed timer--it doesn't need to keep the process alive:\n        this.#rmLockdirLater = setTimeout(\n          () => this.#rmLockDir(),\n          this.staleMs * 2\n        )\n        this.#rmLockdirLater.unref()\n      }\n    }\n  }\n\n  /**\n   * @return undefined if the lock couldn't be acquired, or the result of f()\n   * @throws if f() throws\n   */\n  async withLock_<T>(f: (lock: FsLock) => T | Promise<T>): Promise<Maybe<T>> {\n    if (this.opts.skipFsLock === true) {\n      this.logger.debug(\"withLock(): skipLock is true, running f()\")\n      return f(this)\n    }\n    if (this.#acquired) {\n      // nested locks (!)\n      this.logger.debug(\"withLock() already acquired\")\n      return f(this)\n    }\n    try {\n      const acquired = await (this.opts.noopIfContested === true\n        ? this.tryAcquire_()\n        : this.acquire_())\n      this.logger.debug(\"withLock()\", { acquired })\n      if (acquired) {\n        return await thenOrTimeoutError(f(this), this.opts.timeoutMs, false)\n      } else {\n        return undefined\n      }\n    } catch (err) {\n      this.logger.warn(\"withLock_() rejected\", err)\n      throw err\n    } finally {\n      this.release()\n    }\n  }\n}\n\n/**\n * Two-phase lock. Try to make the .fslock dir, then write my id into the\n * lockdir. I only have the lock once I am the least-valued UID. Once I am\n * done with the lock, I remove my id file. If I am the last one in, I delete\n * the lockdir.\n *\n * Note that this lock is unique per call, per process--if the lock is already\n * acquired by a previous stackframe, this will deadlock.\n */\nexport async function withLock_<T>(\n  opts: FsLockOptions,\n  f: (lock?: FsLock) => T | Promise<T>\n): PromiseMaybe<T> {\n  if (opts.skipFsLock === true) return f()\n  const l = new FsLock(opts)\n  try {\n    return await l.withLock_(f)\n  } finally {\n    void l.end()\n  }\n}\n","import { Dirent } from \"fs\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ensurePrefixSuffix } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { BaseFile } from \"./BaseFile\"\nimport { SimpleFileOrString, basename } from \"./SimpleFile\"\n\nexport const PsLockExt = \".pslock\"\n\nexport function fsLockDir(f: BaseFile): BaseFile {\n  return f.sibling(\n    ensurePrefixSuffix(f.base, { prefix: \".\", suffix: PsLockExt })\n  )\n}\n\nexport function fsLockFileBasename(id: string): string {\n  // The lockfiles don't need to be hidden, but it makes isPsLockFileOrDir()\n  // much simpler.\n  return ensurePrefixSuffix(id, { prefix: \".\", suffix: PsLockExt })\n}\n\nexport function uidFromFsLockfile(\n  f: Maybe<SimpleFileOrString | Dirent>\n): Maybe<string> {\n  if (f == null || blank(toS(f))) return\n  const name = basename(f)\n  return basenameIsPsLockFileOrDir(name)\n    ? name.substring(1, name.length - PsLockExt.length)\n    : undefined\n}\n\nexport function isPsLockFileOrDir(f: SimpleFileOrString | Dirent): boolean {\n  return blank(f) ? false : basenameIsPsLockFileOrDir(basename(f))\n}\n\nfunction basenameIsPsLockFileOrDir(name: string): boolean {\n  return notBlank(name) && name.startsWith(\".\") && name.endsWith(PsLockExt)\n}\n","import fs from \"fs\"\nimport fse from \"fs-extra\"\nimport { lazy } from \"../../core/Lazy\"\nimport { or } from \"../../fe/Boolean\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { eql } from \"../../fe/Eql\"\nimport { MemoizedThunk } from \"../../fe/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { thenOrTimeout, Timeout } from \"../../fe/ThenOrTimeout\"\nimport { debounce } from \"../async/Debounce\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableInterval } from \"../async/EndableInterval\"\nimport { oneAtATime } from \"../async/OneAtATime\"\nimport { ee } from \"../event/EventEmitter\"\nimport { diff } from \"../Set\"\nimport { Settings } from \"../settings/Settings\"\nimport { sortIgnoreCase } from \"../String\"\nimport { uid } from \"../UID\"\nimport { fileSha_ } from \"./Hash\"\nimport { PosixFile } from \"./PosixFile\"\nimport { SimpleFile, toNativePath_ } from \"./SimpleFile\"\nimport { statMaybe } from \"./Stat\"\nimport { statSync } from \"./StatSync\"\n\nexport const DefaultWatchedStatFields: (keyof fs.Stats)[] = [\n  \"ino\",\n  \"size\",\n  \"mtimeMs\",\n  \"birthtimeMs\"\n]\n\nclass WatchMgr extends EndableInterval {\n  static readonly instance = new WatchMgr()\n  readonly path2watcher = new Map<string, fs.FSWatcher>()\n  readonly id2watchers = new Map<string, FsWatcher>()\n\n  private constructor() {\n    super({\n      name: \"fs.WatchMgr\",\n      callback: () => this.vacuum(),\n      intervalMs: minuteMs,\n      unref: true\n    })\n    this.onEnds.push(() => {\n      for (const [k, v] of this.path2watcher) {\n        try {\n          v.close()\n        } catch (err) {\n          this.logger.warn(\"failed to close FsWatcher for \" + k, err)\n        }\n      }\n    })\n  }\n\n  vacuumEnded() {\n    for (const [id, w] of this.id2watchers) {\n      if (w.ended) this.id2watchers.delete(id)\n    }\n  }\n\n  registeredPaths() {\n    return new Set(\n      [...this.id2watchers.values()].map(ea => ea.target.nativePath)\n    )\n  }\n\n  watchedPaths() {\n    return [...this.path2watcher.keys()]\n  }\n\n  vacuum() {\n    this.vacuumEnded()\n    const oldPaths = diff(this.watchedPaths(), this.registeredPaths())\n    // remove any now-unwatched paths:\n    for (const k of oldPaths) {\n      try {\n        this.logger.warn(\"closing orphaned FsWatcher for \" + k)\n        this.path2watcher.get(k)?.close()\n        this.path2watcher.delete(k)\n      } catch (err) {\n        this.logger.warn(\"failed to close FsWatcher for \" + k, err)\n      }\n    }\n    const unwatchedPaths = diff(this.registeredPaths(), this.watchedPaths())\n    // Are there any paths we can watch now?\n    for (const np of unwatchedPaths) {\n      this.maybeWatch(np)\n    }\n\n    this.logger.debug(\"vacuum() complete\", {\n      watchedPaths: [...this.watchedPaths()],\n      registeredPaths: [...this.registeredPaths()],\n      oldPaths: [...oldPaths],\n      unwatchedPaths: [...unwatchedPaths]\n    })\n  }\n\n  maybeWatch(nativePath: string) {\n    if (this.watchersForPath(nativePath).length === 0) {\n      throw new Error(\"no registered watchers for \" + nativePath)\n    }\n    if (this.path2watcher.get(nativePath) != null) return\n\n    // only add a FSWatcher if the file or dir exists\n    if (fs.existsSync(nativePath)) {\n      const arr = this.watchersForPath(nativePath)\n      const persistent = or(arr.map(ea => ea.args.persistent))\n      this.logger.info(\"Setting up fs.watch for \" + nativePath)\n      const fsw = fs.watch(nativePath, { persistent }, () =>\n        this.onChange(nativePath)\n      )\n      this.path2watcher.set(nativePath, fsw)\n      fsw.on(\"close\", () => {\n        this.path2watcher.delete(nativePath)\n      })\n      fsw.on(\"error\", error => {\n        this.path2watcher.delete(nativePath)\n        this.logger.warn(\"fs.watch failed\", {\n          error,\n          watchers: this.watchersForPath(nativePath)\n            ?.filter(ea => !ea.ended)\n            .map(ea => ea.name)\n        })\n      })\n    }\n  }\n\n  registerWatcher(w: FsWatcher) {\n    this.id2watchers.set(w.id, w)\n    this.maybeWatch(w.target.nativePath)\n  }\n\n  watchersForPath(nativePath: string) {\n    const result: FsWatcher[] = []\n    for (const ea of this.id2watchers.values()) {\n      if (ea.target.eql(nativePath)) {\n        result.push(ea)\n      }\n    }\n    return result\n  }\n\n  onChange(nativePath: string) {\n    for (const ea of this.id2watchers.values()) {\n      if (ea.target.eql(nativePath)) {\n        ea.debouncedCheck()\n      }\n    }\n  }\n}\n\n// TODO: use https://www.npmjs.com/package/@parcel/watcher ?\n\nexport type FsWatcherArgs = ConstructorParameters<typeof FsWatcher>[0]\n\nexport class FsWatcher extends EndableInterval {\n  readonly id = uid()\n  readonly target: PosixFile\n  #partialStatPrior: Maybe<Partial<fs.Stats>>\n  #shaPrior: Maybe<string>\n  #childrenPrior: Maybe<string[]>\n\n  constructor(\n    readonly args: {\n      target: string | SimpleFile\n      onChange: () => void\n      maxPollIntervalMs: number\n      initialDelayMs?: number\n      sha?: boolean\n      watchDebounceMs?: number\n      applyOnChangeAtSetupIfExists?: boolean\n      applyOnChangeIfTargetMissing?: boolean\n      persistent?: boolean\n    }\n  ) {\n    super({\n      name: `fs.FileWatcher(${toNativePath_(args.target)})`,\n      callback: () => this.debouncedCheck(),\n      intervalMs: args.maxPollIntervalMs,\n      rank: EndableRanks.first,\n      initialDelayMs: args.initialDelayMs\n    })\n    this.target = PosixFile.for(args.target)\n\n    const watchDebounceMs =\n      args.watchDebounceMs ?? Settings.watchDebounceMs.valueOrDefault\n    const maxPollIntervalMs = args.maxPollIntervalMs\n    if (gt0(maxPollIntervalMs) && maxPollIntervalMs <= watchDebounceMs) {\n      args.maxPollIntervalMs = watchDebounceMs + 100\n      this.setIntervalMs(args.maxPollIntervalMs)\n      this.logger.error(\n        \"Bad configuration: watchDebounceMs must be less than maxPollIntervalMs. Increasing maxPollIntervalMs.\",\n        {\n          watchDebounceMs,\n          maxPollIntervalMs,\n          newMaxPollIntervalMs: args.maxPollIntervalMs\n        }\n      )\n    }\n    this.onEnds.push(() => {\n      this.reset()\n      later(() => WatchMgr.instance.vacuum())\n    })\n    this.logger.debug(\"new FsWatcher()\", {\n      watchDebounceMs,\n      maxPollIntervalMs: args.maxPollIntervalMs\n    })\n    void this.setup()\n    WatchMgr.instance.registerWatcher(this)\n  }\n\n  get nativePath() {\n    return this.target.nativePath\n  }\n\n  readonly setup: MemoizedThunk<Promise<FsWatcher>> = lazy(async () => {\n    const s = statSync(this.nativePath)\n    this.#partialStatPrior =\n      s == null ? undefined : pick(s, ...DefaultWatchedStatFields)\n    if (true === s?.isDirectory()) await this.#checkDirChanged()\n    if (true === s?.isFile()) await this.#checkFileChanged()\n    this.logger.info(\"setup()\", {\n      stat: this.#partialStatPrior,\n      sha: this.#shaPrior,\n      children: this.#childrenPrior\n    })\n    if (s != null && true === this.args.applyOnChangeAtSetupIfExists) {\n      this.args.onChange()\n    }\n    return this\n  })\n\n  // exposed for tests\n  get partialStatPrior() {\n    return this.#partialStatPrior\n  }\n\n  get debounceMs(): number {\n    return this.debouncedCheck.timeoutMs()\n  }\n\n  readonly debouncedCheck = debounce(\n    () => this.check(),\n    this.args.watchDebounceMs ?? Settings.watchDebounceMs.valueOrDefault\n  )\n\n  forcedCheck() {\n    this.debouncedCheck.reset()\n    return this.check.force()\n  }\n\n  async #checkDirChanged() {\n    const children = await thenOrTimeout(\n      fse.readdir(this.nativePath),\n      Settings.statTimeoutMs.valueOrDefault\n    )\n    if (children === Timeout) {\n      this.logger.warn(\"Failed to read directory: timeout\", {\n        timeoutMs: Settings.statTimeoutMs.valueOrDefault\n      })\n      this.#childrenPrior = undefined\n      return false\n    }\n    const now = sortIgnoreCase(children)\n    if (!eql(this.#childrenPrior, now)) {\n      this.logger.debug(\"checkDirChanged(): children changed\", {\n        now,\n        prior: this.#childrenPrior\n      })\n      this.#childrenPrior = now\n      return true\n    } else {\n      return false\n    }\n  }\n\n  async #checkFileChanged() {\n    if (true !== this.args.sha) return true\n    const sha = await fileSha_(this.nativePath).catch(() => undefined)\n    if (sha != null && sha === this.#shaPrior) {\n      return false\n    } else {\n      this.#shaPrior = sha\n      return true\n    }\n  }\n\n  // exposed for tests\n  readonly check = oneAtATime({\n    fn: async () => {\n      if (this.ended) return\n\n      this.logger.debug(\"check(): starting\", {\n        prior: this.#partialStatPrior\n      })\n\n      const partialStatPrior = this.#partialStatPrior\n      const statNow = await statMaybe(this.nativePath)\n\n      if (statNow == null) {\n        if (\n          this.#partialStatPrior != null &&\n          true === this.args.applyOnChangeIfTargetMissing\n        ) {\n          this.target.clear()\n          this.args.onChange()\n        }\n        this.logger.debug(\"check(): missing stat, closing file watcher\")\n        this.reset()\n        // file or directory onChange shouldn't care when target is deleted\n        return\n      }\n\n      later(() => WatchMgr.instance.registerWatcher(this))\n\n      const partialStatNow = pick(statNow!, ...DefaultWatchedStatFields)\n      const statEql = eql(partialStatPrior, partialStatNow)\n\n      // .stat() on directories may not change when children are added or deleted, so we always have to check:\n      const changed = statNow.isDirectory()\n        ? await this.#checkDirChanged()\n        : statEql\n        ? false\n        : statNow.isFile()\n        ? await this.#checkFileChanged()\n        : false\n\n      // this.logger.log(result ? LogLevels.debug : LogLevels.trace, \".check()\", {\n      this.logger.debug(\".check()\", {\n        changed,\n        partialStatNow,\n        partialStatPrior,\n        isDir: statNow.isDirectory(),\n        isFile: statNow.isFile()\n      })\n      if (changed) {\n        ee().emit(\"fileChanged\", this.nativePath)\n        this.#partialStatPrior = partialStatNow\n        this.args.onChange()\n      }\n    }\n  })\n\n  reset() {\n    // no infinite loops (where w.close() calls this.close()):\n    this.#partialStatPrior = undefined\n    this.#shaPrior = undefined\n    this.#childrenPrior = undefined\n  }\n}\n","import { blank, toNotBlank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { isString, stripPrefix } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { extractInt } from \"../Number\"\nimport { ParsedFile, parsePosixPath } from \"./Path\"\nimport { SimpleFile } from \"./SimpleFile\"\n\nconst CopiesRe = [\n  // macOS, when you copy-paste-paste, you get\n  // img.jpg\n  // img copy.jpg\n  // img copy 2.jpg\n  // img copy 3.jpg\n\n  // Windows, when you copy-paste-paste, you get\n  // img.jpg\n  // img - Copy.jpg\n  // img - Copy 2.jpg\n  // img - Copy 3.jpg\n  /\\s*-?\\s*copy(?:\\s*\\d{1,3}\\s*)?$/i,\n\n  // img - Copy (2).jpg\n  // img - Copy (3).jpg\n  // img - Copy (101).jpg\n  /\\s*-?\\s*copy(?:\\s*\\(\\s*\\d{1,3}\\s*\\))$/i,\n\n  // Ubuntu when you copy-paste-paste-paste, you get\n  // img.jpg\n  // img (copy).jpg\n  // img (another copy).jpg // <-- srsly wth\n  // img (3rd copy).jpg\n  // img (4th copy).jpg\n  /\\s*\\((?:another|\\d+[a-z]{2})?\\s*copy\\)$/i,\n\n  // foobar(1).jpg\n  // foobar (1).jpg\n  // foobar ( 32 ).jpg\n  // foobar-(1).jpg\n  // foobar-( 32 ).jpg\n  /\\s*-?\\(\\s*\\d{1,4}\\s*\\)$/,\n\n  // frakkin google sidecars chop the right bit off the UUID.\n  // https://forum.photostructure.com/t/574/7\n\n  // The \"38\" means we leave a - on the end of UUIDs. That dash should make all\n  // other patterns not match, so this regex will be the only one applied.\n  /(?<=[0-9a-f-]{37}-)[0-9a-f-]+$/i,\n\n  // Variations added by EnsureNew.\n  // P432781234-1.jpg\n  // P432781234-01.jpg\n  // P432781234-001.jpg\n\n  /\\s*-\\s*\\d{1,3}$/\n]\n\nconst Copies2Re = [\n  ...CopiesRe,\n  // // img edit.jpg\n  // // img-edit.jpg\n  // // img edited.jpg\n  // // img-edited.jpg\n  /\\s*-?edit(?:ed)?$/i\n]\n\nexport const ymdIsoRE = /^(?:\\d\\d){1,2}-\\d\\d-\\d\\d$/\n\nexport function ciStablePosixPath(posixPath: string): string {\n  const path = posixPath.split(\"/\")\n  const basename = path.pop()\n  if (blank(basename)) return posixPath\n  const parsed = parsePosixPath(basename)\n  const strippedName = stripCopySuffixFromName(parsed, { aggressive: false })\n  return [...path, strippedName + parsed.ext].join(\"/\").normalize()\n}\n\n/**\n * @return the file's name, stripped of any suffixes due to copies. DOES NOT LOWER CASE OR NORMALIZE.\n */\nexport function stripCopySuffixFromName(\n  f: SimpleFile | ParsedFile | string,\n  opts: { aggressive: boolean } = { aggressive: true }\n): string {\n  return _stripCopySuffixFromName(toNotBlank((f as any).name) ?? toS(f), opts)\n}\n\nfunction _stripCopySuffixFromName(\n  initialName: string,\n  opts: { aggressive: boolean }\n): string {\n  // Don't touch yyyy-mm-dd:\n  if (ymdIsoRE.test(initialName)) return initialName\n  let name = initialName\n  for (const re of opts.aggressive ? Copies2Re : CopiesRe) {\n    const m = name.match(re)\n    if (gt0(m?.index)) {\n      const s = name.slice(0, m!.index).trim()\n      if (s.length > 0) name = s\n    }\n  }\n  // If you make a copy of a copy, you'll get \"image - Copy 2 - copy\". We\n  // don't want to hit the exported function, because then the file ext may be\n  // stripped multiple times.\n  return initialName === name\n    ? initialName\n    : _stripCopySuffixFromName(name, opts)\n}\n\nexport function copySuffixCountFromName(\n  f: string | SimpleFile | ParsedFile\n): Maybe<number> {\n  const name = (isString(f) ? f : f.name).toLowerCase().normalize()\n  const strip = stripCopySuffixFromName(name)\n  const stripped = stripPrefix(name.toLowerCase().normalize(), strip)\n  return map(extractInt(stripped), Math.abs)\n}\n\nconst burstRe = /(?:burst)\\s*([\\w-]{8,})\\s*$/i\n\nconst coverRe = /(?<=.{6})_cover$/i\n\n// https://en.wikipedia.org/wiki/Design_rule_for_Camera_File_system\n// IMG_E0001.JPG is an edited version of IMG_0001.JPG\nconst dscPrefixRe =\n  /^(?:(?:dsc|dscf|img|gpfr|gopro?|gf|gh|gp|mov|mvi|mvimg|p|vid)(?:[-_ ]{0,2}e?))(\\d.+)$/i\nexport function stripDSC(f: SimpleFile | string): string {\n  let name = (isString(f) ? f : f.name).trim().replace(coverRe, \"\").trim()\n  map(burstRe.exec(name), m => (name = m[1].trim()))\n  map(dscPrefixRe.exec(name), m => (name = m[1].trim()))\n  return name\n}\n","import fs from \"fs\"\nimport { Transform, TransformCallback } from \"stream\"\nimport { pipeline } from \"stream/promises\"\nimport { toS } from \"../../fe/toS\"\nimport { LineReader } from \"./LineReader\"\nimport { SimpleFile, toNativePath_ } from \"./SimpleFile\"\nimport { WritableToBuffer } from \"./WritableToBuffer\"\n\nexport class GrepReader extends Transform {\n  constructor(\n    readonly pattern: RegExp,\n    readonly sep = \"\\n\"\n  ) {\n    super({ objectMode: false, autoDestroy: true })\n  }\n\n  _transform(chunk: any, _encoding: BufferEncoding, done: TransformCallback) {\n    const str = toS(chunk)\n    const m = str.match(this.pattern)\n    if (m != null) {\n      this.push(m[1] ?? m[0] + this.sep)\n    }\n    done()\n  }\n}\n\nexport async function fileGrep_(file: SimpleFile | string, pattern: RegExp) {\n  const output = new WritableToBuffer()\n  await pipeline([\n    fs.createReadStream(toNativePath_(file)),\n    new LineReader(),\n    new GrepReader(pattern),\n    output\n  ])\n  return (await output.buffer).toString()\n}\n","import _fs from \"fs\"\nimport _fse from \"fs-extra\"\nimport { pipeline } from \"stream/promises\"\nimport _zlib from \"zlib\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { escapeRegExp } from \"../RegExp\"\n\nexport async function gzip_(nativePath: string): Promise<string> {\n  if (nativePath.endsWith(\".gz\")) return nativePath\n  const out = nativePath + \".gz\"\n  await pipeline(\n    _fs.createReadStream(nativePath, { autoClose: true }),\n    _zlib.createGzip(),\n    _fs.createWriteStream(out, { autoClose: true })\n  )\n  await _fse.unlink(nativePath)\n  return out\n}\n\nexport function isExtOrCompressedExt(\n  actualExt: string,\n  expectedExt: string\n): boolean {\n  return matcherForExtOrCompressedExt(expectedExt)(actualExt)\n}\n\nconst extMatchers = new Map<string, (actualExt: string) => boolean>()\n\nexport function matcherForExtOrCompressedExt(\n  ext: string\n): (actualExt: string) => boolean {\n  return getOrSet(extMatchers, ext, () => {\n    const re = new RegExp(\"^\" + escapeRegExp(ext) + \"(?:\\\\.(gz|br))?$\", \"i\")\n    return (actualExt: string) => re.exec(actualExt) != null\n  })\n}\n","import crypto from \"crypto\"\nimport fs from \"fs\"\nimport { pipeline } from \"stream/promises\"\nimport { lazy } from \"../../core/Lazy\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { eql } from \"../../fe/Eql\"\nimport { stringify } from \"../../fe/JSON\"\nimport { pick } from \"../../fe/Object\"\nimport { FifoCacheAsync } from \"../FifoCacheAsync\"\nimport { HashBits } from \"../HashBits\"\nimport { mkLogger } from \"../Logger\"\nimport { shim1 } from \"../Shim1\"\nimport { stringShaToBuffer } from \"../StringHash\"\nimport { FileStats, fileStats_ } from \"./FileStats\"\nimport { SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\nimport { stat_ } from \"./Stat\"\n\nconst logger = lazy(() => mkLogger(\"fs.Hash\"))\n\nexport interface ShaMeta {\n  sha: string\n  stats: FileStats\n  elapsedMs: number\n}\n\nconst cache = lazy(\n  () =>\n    // we're not using a FileCache here, because SHAs are so expensive we want\n    // to manage cache invalidation ourselves.\n    new FifoCacheAsync<ShaMeta>({\n      name: \"fs.fileSha\",\n      maxSize: 512,\n      timeoutMs: 0, // TODO: we should be able to read any file in under a minute? What about videos?\n      clearEveryMs: 0, // no periodic clearing--no need.\n      useFsCache: true,\n      fsCacheTtlMs: 30 * minuteMs\n    })\n)\n\n/**\n * Consumers should not directly call this: use {@link fileSha_()} instead.\n * @return a Buffer with the first 192 bits of a SHA512 digest.\n * @throws on read error\n */\nexport const shimmedFileSha_ = shim1({\n  name: \"fs.Hash\",\n  cache,\n  impl: uncachedFileSha_\n})\n\n/**\n * Automatically invalidates SHAs whose stats have changed.\n */\nexport async function fileShaMeta_(\n  f: SimpleFileOrString,\n  { autoInvalidate = true }: { autoInvalidate?: boolean } = {}\n): Promise<ShaMeta> {\n  const nativePath = toNativePath_(f)\n  if (autoInvalidate) {\n    const prior = cache().get(nativePath)\n    if (prior != null) {\n      if (eql(prior.stats, await fileStats_(f))) {\n        logger().debug(\"fileSha_() cache matches current Stats\", {\n          nativePath,\n          prior\n        })\n        return prior\n      } else {\n        logger().debug(\"fileSha_() prior cache is invalid, re-reading SHA\", {\n          nativePath,\n          prior\n        })\n        cache().delete(nativePath) // prior sha is invalid!\n      }\n    }\n  }\n  return shimmedFileSha_(f)\n}\n\n/**\n * Automatically invalidates SHAs whose stats have changed.\n */\nexport async function fileSha_(f: SimpleFileOrString): Promise<string> {\n  return (await fileShaMeta_(f)).sha\n}\n\n/**\n * Uncached file SHA. Throws on error.\n */\nexport async function uncachedFileSha_(f: SimpleFileOrString) {\n  const start = Date.now()\n  const nativePath = toNativePath_(f)\n  return {\n    sha: await streamSha_(fs.createReadStream(nativePath)),\n    stats: pick(await stat_(nativePath), \"size\", \"mtimeMs\"),\n    elapsedMs: Date.now() - start\n  }\n}\n\nexport async function streamSha_(\n  source: NodeJS.ReadableStream,\n  transforms: NodeJS.ReadWriteStream[] = [],\n  hashAlgorithm: string = \"sha512\"\n): Promise<string> {\n  const hash = crypto.createHash(hashAlgorithm)\n  await pipeline([source, ...transforms, hash])\n  return hash\n    .digest()\n    .subarray(0, HashBits / 8)\n    .toString(\"base64\")\n}\n\n// /**\n//  * Take the SHA of a readable\n//  */\n// export async function readableShaB64(reader: Readable): Promise<string> {\n//   const hash = crypto.createHash(\"sha512\")\n//   await  pipelinePromise([reader, hash])\n//   return sliced(hash.digest()).toString(\"base64\")\n// }\n\nexport function numericSha(obj: any, msbits = 48): number {\n  return parseInt(stringShaToBuffer(stringify(obj), msbits).toString(\"hex\"), 16)\n}\n\nexport function randomSha() {\n  return crypto.randomBytes(HashBits / 8).toString(\"base64\")\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { secondMs } from \"../../fe/Date\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { toInt } from \"../../fe/Number\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { ee } from \"../event/EventEmitter\"\nimport { isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { PowerShell, pwshQuote } from \"../pwsh/PowerShell\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { BaseFile } from \"./BaseFile\"\nimport { FileCache } from \"./FileCache\"\nimport {\n  SimpleFile,\n  SimpleFileOrString,\n  isSimpleFile,\n  toNativePath_\n} from \"./SimpleFile\"\nimport { exists } from \"./Stat\"\n\nexport async function hide_(file: SimpleFile | string) {\n  if (!isWin && !isMac) return\n  const nativePath = toNativePath_(file)\n  if (!(await exists(nativePath))) return\n  if (isWin) {\n    await PowerShell.instance().execute(\n      `(Get-Item ${pwshQuote(nativePath)}).Attributes += 'Hidden'`,\n      () => undefined\n    )\n  } else if (isMac) {\n    await stdout_(\"chflags\", [\"hidden\", nativePath], {\n      timeoutMs: 10 * secondMs\n    })\n  }\n  ee().emit(\"fileChanged\", nativePath)\n  return\n}\n\nasync function isHiddenWin(file: SimpleFile) {\n  const json = await PowerShell.instance().executeJsonToA(\n    [\n      \"Get-Item -Force -LiteralPath\",\n      pwshQuote(file.nativePath),\n      \"-ErrorAction SilentlyContinue\",\n      \"| Select-Object -Property Name, Mode\"\n    ].join(\" \")\n  )\n  // See https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-5.1#examples\n  return mapOr(\n    json?.[0]?.Mode,\n    mode => [\"s\", \"h\"].some(ea => mode.includes(ea)),\n    () => false\n  )\n}\n\nasync function isHiddenMac(file: SimpleFile) {\n  try {\n    const out = await stdout_(\"stat\", [\"-f\", \"%f\", file.nativePath], {\n      timeoutMs: 10 * secondMs\n    })\n    const flags = toInt(out)\n    if (flags != null) {\n      return (flags & 0x8000) > 0 // from /usr/include/sys/stat.h\n    } else {\n      return false\n    }\n  } catch (err) {\n    return false\n  }\n}\n\nconst cache = lazy(\n  () =>\n    new FileCache<boolean>({\n      name: \"fs.hidden\",\n      maxSize: 512,\n      timeoutMs: commandTimeoutMs()\n    })\n)\n\n/**\n * Doesn't match posix-hidden (\".\"-prefixed) files--only looks for windows or\n * mac hidden metadata flags.\n */\nexport function isHidden(f: SimpleFileOrString): SyncOrAsync<boolean> {\n  // Don't check for posixHidden here-that's handled by a glob (that the user\n  // can omit!)\n  if (isLinux) return false // no way to hide on linux except with \".\"\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n  return isWin\n    ? cache().getOrSetAsync(sf.nativePath, () => isHiddenWin(sf))\n    : isMac\n    ? cache().getOrSetAsync(sf.nativePath, () => isHiddenMac(sf))\n    : false\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { isTest } from \"../NodeEnv\"\nimport { isMac } from \"../platform/Platform\"\nimport { isExcludedMountpoint } from \"../volumes/PosixVolumes\"\n\nconst DevMounts = /^\\/dev(\\/|$)/i\n\n// Mojave mounts to /private/var/vm.\n// BigSur mounts to /System/Volumes/VM, /System/Volumes/Preboot, /System/Volumes/xarts, ...\n\n// mrm@mini ~ % mount | sed -e \"s/map auto/map_auto/\" | cut -d\\  -f3\n// /\n// /dev\n// /System/Volumes/Data\n// /private/var/vm\n// /Volumes/Mojave\n// /System/Volumes/Data/home\n// /System/Volumes/Hardware\n// /Volumes/Update\n// /Volumes/Install\n// /Volumes/SSD\n// /Volumes/Big\n// /Volumes/Update\n// /Volumes/Mojave\n// /Volumes/Recovery\n// mrm@mini ~ % uname -a\n// Darwin mini 19.6.0 Darwin Kernel Version 19.6.0: Sun Nov 14 19:58:51 PST 2021; root:xnu-6153.141.50~1/RELEASE_X86_64 x86_64\n\nconst MacSystemVolumes =\n  isMac || isTest\n    ? [\n        \"/dev\",\n        \"/System/Volumes/Hardware\",\n        \"/System/Volumes/iSCPreboot\",\n        \"/System/Volumes/Preboot\",\n        \"/System/Volumes/Update\",\n        \"/System/Volumes/VM\",\n        \"/System/Volumes/xarts\",\n        \"/Volumes/Install\",\n        \"/Volumes/Recovery\"\n      ].map(ea => ea.toLowerCase())\n    : undefined\n\nconst MacPrivate = isMac || isTest ? /^\\/private\\//i : undefined\n\n// macOS installation media\nconst MacOsInstall =\n  isMac || isTest ? /^\\/Volumes\\/install macos\\b/i : undefined\n\nconst MacNotDmg =\n  isMac || isTest // support \"v1.2\", \"v1.2.3\", \"v1.2.3-beta.4\", \"v1.2.3-beta.4-pre\", ...\n    ? /^\\/Volumes\\/PhotoStructure v?[\\d\\.]{3,}/i\n    : undefined\n\nexport function isPhotoStructureDmg(mountpoint: string): boolean {\n  return MacNotDmg?.exec(toS(mountpoint)) != null\n}\n\nexport function isIgnorableMountpoint(mountpoint: string): boolean {\n  return whyIgnorableMountpoint(mountpoint) != null\n}\n\nexport function whyIgnorableMountpoint(mountpoint: string): Maybe<string> {\n  return blank(mountpoint)\n    ? \"blank\"\n    : isExcludedMountpoint(mountpoint)\n    ? \"excluded\"\n    : DevMounts.test(mountpoint)\n    ? \"/dev\"\n    : MacSystemVolumes?.includes(mountpoint.toLowerCase()) === true\n    ? \"macOS system volume\"\n    : MacOsInstall?.test(mountpoint) === true\n    ? \"macOS installer volume\"\n    : MacPrivate?.test(mountpoint) === true\n    ? \"macOS private volume\"\n    : isPhotoStructureDmg(mountpoint)\n    ? \"PhotoStructure dmg\"\n    : undefined\n}\n","export const JpegExts = [\"jpg\", \"jpeg\", \"jpe\"] as const\n","import { lazy } from \"../../core/Lazy\"\nimport { map } from \"../../fe/Maybe\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { mkLogger } from \"../Logger\"\nimport { PosixFile } from \"./PosixFile\"\n\nexport interface CreatedAt {\n  createdAt: number\n}\n\nexport class JsonFileStore<T extends CreatedAt> {\n  constructor(\n    readonly file: PosixFile,\n    readonly mkObject: () => MaybeSyncOrAsync<T>,\n    readonly onWrite?: (pf: PosixFile, object: T) => any\n  ) {}\n\n  private readonly prior = lazy(() => this.file.readJson<T>(\"debug\"))\n\n  async read_(): PromiseMaybe<T> {\n    return (\n      (await this.prior()) ?? map(await this.mkObject(), t => this.write_(t))\n    )\n  }\n\n  async write_(t: T): Promise<T> {\n    try {\n      await this.file.writeJson_(t, { spaces: 2 })\n      this.prior.set(Promise.resolve(t))\n      mkLogger(\"fs.JsonFileStore\").info(\"wrote to \" + this.file, t)\n      if (this.onWrite != null) {\n        await this.onWrite(this.file, t)\n      }\n      return t\n    } catch (err) {\n      throw new WrappedError(\"Failed to write to \" + this.file, {\n        cause: err,\n        path: this.file.nativePath\n      })\n    }\n  }\n}\n","import { Transform, TransformCallback } from \"stream\"\nimport { newlineRe } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\n\nexport class LineReader extends Transform {\n  private _prior: string = \"\"\n\n  constructor() {\n    super({ objectMode: false, autoDestroy: true })\n  }\n\n  _transform(chunk: any, _encoding: BufferEncoding, done: TransformCallback) {\n    const lines = (this._prior + toS(chunk)).split(newlineRe())\n    const last = lines.pop()\n    // if the last line is \"\", we ended with a newline, and we don't have a prior.\n    this._prior = last ?? \"\"\n    let delay = false\n    for (const ea of lines) {\n      // .push returns true if additional chunks of data may continue to be pushed; false otherwise\n      delay ||= !this.push(ea)\n    }\n    if (delay) setTimeout(done, 1)\n    else done()\n  }\n\n  _flush(done: TransformCallback): void {\n    if (this._prior !== \"\") this.push(this._prior)\n    this._prior = \"\"\n    done()\n  }\n}\n","import _path from \"path\"\nimport { SimpleFile, toNativePath_ } from \"./SimpleFile\"\nimport { writeTextfile_ } from \"./WriteFile\"\n\nexport function mkNoMedia_(dir: SimpleFile | string) {\n  return writeTextfile_(\n    _path.join(toNativePath_(dir), \".NoMedia\"),\n    `This directory's contents are excluded from PhotoStructure libraries.`,\n    ``,\n    `See https://photostructure.com/nomedia/ for details.`\n  )\n}\n","import _path, { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { Halt } from \"../Halt\"\nimport { mkLogger } from \"../Logger\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { BaseFile } from \"./BaseFile\"\nimport {\n  CACHEDIR_TAG,\n  isCachedirTagDirectory,\n  isCachedirTagFile\n} from \"./CachedirTag\"\nimport { FileCache } from \"./FileCache\"\nimport { readdir, readdirCached } from \"./Readdir\"\nimport { SimpleDirent } from \"./SimpleDirent\"\nimport {\n  SimpleFileOrString,\n  isSimpleFile,\n  someSelfOrAncestor\n} from \"./SimpleFile\"\nimport { exists } from \"./Stat\"\n\nconst logger = lazy(() => mkLogger(\"fs.hasNoMedia()\"))\n\n// We're making the dot optional (although that isn't part of the spec)\nconst nomediaRe = /^\\.?NoMedia$/i\n\nconst NoMedia = \"NoMedia\"\n\nfunction variants(s: string) {\n  return [s, s.toLowerCase(), s.toUpperCase()]\n}\n\nconst NoMediaNames = Object.freeze([\n  ...variants(\".\" + NoMedia),\n  ...variants(NoMedia)\n])\n\nexport function isNoMediaName(basename: string): boolean {\n  return nomediaRe.exec(basename) != null\n}\n\nconst noMediaDirsCache = lazy(\n  () => new FileCache<boolean>({ name: \"fs.noMediaDirsCache\" })\n)\n\nexport async function hasNoMediaRecursive(\n  f: Maybe<SimpleFileOrString>\n): PromiseMaybe<boolean> {\n  if (f == null) return false\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n  return someSelfOrAncestor(sf, hasNoMedia)\n}\n\nexport async function isNoMedia(f: SimpleFileOrString): Promise<boolean> {\n  if (f == null) return false\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n  return isNoMediaName(sf.base) || (await isCachedirTagFile(sf))\n}\n\nexport async function hasNoMedia(f: SimpleFileOrString): Promise<boolean> {\n  if (f == null) return false\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n\n  if (sf.base === CACHEDIR_TAG) {\n    return logger().tap({\n      msg: sf.nativePath + \" is a CACHEDIR.TAG file\",\n      // return FALSE if the header doesn't exist?\n      result: await isCachedirTagFile(sf)\n    })\n  }\n\n  // Are we an actual NoMedia file?\n\n  if (isNoMediaName(sf.base)) {\n    // this doesn't need to be cached, it's almost a no-op:\n    return logger().tap({ msg: sf + \" basename is NoMedia\", result: true })\n  }\n\n  if (await sf.isDirectory()) {\n    return noMediaDirsCache().getOrSetAsync(sf.nativePath, () =>\n      dirHasNoMediaChild(sf.nativePath)\n    )\n  } else {\n    return false\n  }\n}\n\nasync function dirHasNoMediaChild(nativePath: string): Promise<boolean> {\n  const halt = new Halt()\n\n  // If we can only hit the readdir cache, that'd be great:\n  const cached: Maybe<SimpleDirent[]> = readdirCached(nativePath)\n  if (cached != null) {\n    return someIsNoMedia(nativePath, cached, halt)\n  }\n\n  // Otherwise, race:\n  const result: boolean = await Promise.race([\n    _dirHasNoMediaChild(nativePath, halt),\n    _readdirHasNoMediaChild(nativePath, halt)\n  ])\n  halt.halt() // < stop the loser\n  return result\n}\n\nasync function _dirHasNoMediaChild(\n  nativePath: string,\n  halt?: Halt\n): Promise<boolean> {\n  for (const ea of NoMediaNames) {\n    if (halt?.halted === true) {\n      return null as any\n    }\n    if (await exists(_path.join(nativePath, ea), LogLevels.trace)) {\n      return logger().tap({\n        msg: nativePath + \" is a directory and has a noMedia child, \" + ea,\n        result: true\n      })\n    }\n  }\n  if (halt?.halted === true) return null as any\n  return isCachedirTagDirectory(nativePath)\n}\n\nasync function someIsNoMedia(\n  dir: string,\n  arr: SimpleDirent[],\n  halt?: Halt\n): Promise<boolean> {\n  for (const ea of arr) {\n    if (halt?.halted === true) return null as any\n    if (isNoMediaName(ea.basename)) {\n      return logger().tap({\n        msg: dir + \" has a noMedia child, \" + ea.basename,\n        result: true\n      })\n    }\n    if (ea.basename === CACHEDIR_TAG) {\n      if (await isCachedirTagFile(join(dir, ea.basename))) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nasync function _readdirHasNoMediaChild(\n  nativePath: string,\n  halt?: Halt\n): Promise<boolean> {\n  const arr = await readdir(nativePath)\n  return arr == null ? false : someIsNoMedia(nativePath, arr, halt)\n}\n","import _fse from \"fs-extra\"\nimport _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ensurePrefix, splitLast } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { greatestBy } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport {\n  ensureSuffix,\n  equalsIgnoreCase,\n  spliceCapture,\n  stripPrefix\n} from \"../String\"\nimport { isRetriableError } from \"../error/ErrorTypes\"\nimport { isPosix, isWin } from \"../platform/Platform\"\nimport { native2posix, posix2native } from \"./PosixNative\"\nimport {\n  SimpleFile,\n  SimpleFileOrString,\n  isSimpleFile,\n  toNativePath_\n} from \"./SimpleFile\"\nimport { isReadableDirectory } from \"./Stat\"\nimport { isReadWriteableDirectorySync } from \"./StatSync\"\n\nexport const logger = lazy(() => mkLogger(\"fs.Path\"))\n\nexport function isHiddenBasename(f: SimpleFileOrString): boolean {\n  const base = isSimpleFile(f) ? f.base : _path.basename(_path.resolve(f))\n  return base.startsWith(\".\")\n}\n\nexport function containsHiddenPathname(f: SimpleFileOrString): boolean {\n  return toPathnames(f).some(isHiddenBasename)\n}\n\nexport function isNotHiddenPosixPath(f: SimpleFileOrString): boolean {\n  return toPathnames(f).every(ea => !isHiddenBasename(ea))\n}\n\nconst driveRe = /^(?<drive>[A-Z]:)(?<path>[\\\\/].*)?$/i\n\nfunction upcaseDriveLetters(nativePath: string): string {\n  const g = driveRe.exec(nativePath)?.groups\n  return g == null\n    ? nativePath\n    : g.drive.toUpperCase() + toS(g.path ?? _path.sep)\n}\n\nexport function resolveSimpleFile(f: SimpleFileOrString) {\n  return isSimpleFile(f) ? f.nativePath : resolve(f.toString())\n}\n\nexport function resolve(...paths: string[]): string {\n  if (blank(paths.join(\"\"))) {\n    throw new Error(\"resolve(): empty paths\")\n  }\n  return _path.resolve(upcaseDriveLetters(paths[0]), ...paths.slice(1))\n}\n\n/**\n * Reject if any of the paths are blank\n */\nexport function resolveMaybe(...paths: Maybe<string>[]): Maybe<string> {\n  return paths.some(blank) ? undefined : resolve(...(paths as string[]))\n}\n\nexport interface ParsedFile {\n  /** \"/home/user/dir\" of \"/home/user/dir/file.txt\" */\n  readonly dir: string\n  /** \"file.txt\" of \"/home/user/dir/file.txt\" */\n  readonly base: string\n  /** \"file\" of \"/home/user/dir/file.txt\" */\n  readonly name: string\n  /** \".txt\" or \".log.gz\" of \"/home/user/dir/file.txt\" */\n  readonly ext: string\n}\n\nexport function parsePosixPath(posixPath: string): ParsedFile {\n  return parseNativePath(posix2native(posixPath))\n}\n\n/** @return \".txt\" or \".log.gz\" of \"/home/user/dir/file.txt\" */\nexport function extname(nativePath: string): string {\n  return parseNativePath(nativePath).ext\n}\n\n/**\n * @return parent directory of `fileish`\n */\nexport function dirname(fileish: SimpleFileOrString): string {\n  return _path.dirname(toNativePath_(fileish))\n}\n\nexport function extMatches(pathlike1: Maybe<string>, pathlike2: Maybe<string>) {\n  if (blank(pathlike1) || blank(pathlike2)) return false\n  return equalsIgnoreCase(\n    _path.parse(pathlike1).ext,\n    _path.parse(pathlike2).ext\n  )\n}\n\nconst CompressedExtRE = /(\\.(?:gz|z|7z|xz|bz2))$/i\n\n/**\n * Supports hidden files and extracting \".log.gz\" as the `ext` for \"file.log.gz\"\n */\nexport function parseNativePath(nativePath: string): ParsedFile {\n  const r = spliceCapture(nativePath, CompressedExtRE)\n  const p = _path.parse(r?.uncaptured ?? nativePath)\n  return {\n    ...p,\n    ...(r == null\n      ? {}\n      : {\n          ext: p.ext + r.captured,\n          base: p.base + r.captured\n        })\n  }\n}\n\n// BEWARE!\n\n// > require(\"path\").parse(\"C:\")\n// { root: 'C:', dir: 'C:', base: '', ext: '', name: '' }\n\n/**\n * Return the name (NOT the path!) of the parent directory\n */\nexport function parentBasename(nativePath: SimpleFileOrString) {\n  const p = _path.parse(toNativePath_(nativePath))\n  return p.root === p.dir ? p.root : splitLast(p.dir, _path.sep)\n}\n\nexport function grandParentBasename(nativePath: SimpleFileOrString) {\n  return parentBasename(_path.parse(toNativePath_(nativePath)).dir)\n}\n\nexport function containedByNativePath(args: {\n  ancestor: Maybe<SimpleFileOrString>\n  descendant: Maybe<SimpleFileOrString>\n  acceptSelf?: boolean // false\n}): boolean {\n  try {\n    if (args.descendant == null || args.ancestor == null) return false\n    const ancestor = toNativePath_(args.ancestor)\n    const descendant = toNativePath_(args.descendant)\n    if (blank(ancestor) || blank(descendant)) return false\n    const acceptSelf = args.acceptSelf ?? false\n    if (ancestor === descendant) return acceptSelf\n    return descendant.startsWith(ensureSuffix(ancestor, _path.sep))\n  } catch (error) {\n    logger().warn(\"containedByNativePath() failed (returning false)\", {\n      args,\n      error\n    })\n    return false\n  }\n}\n\nexport function toPathnames(nativePath: SimpleFileOrString): string[] {\n  return isSimpleFile(nativePath)\n    ? nativePath.pathnames\n    : nativePath.split(_path.sep).filter(ea => ea != null && ea !== \"\")\n}\n\nexport function pathIsRoot(f: Maybe<SimpleFileOrString>): boolean {\n  return notBlank(f) && toPathnames(f).length === (isWin ? 1 : 0)\n}\n\nexport function pathDepth(f: Maybe<SimpleFileOrString>): Maybe<number> {\n  return blank(f) ? undefined : toPathnames(f).length - (isWin ? 1 : 0)\n}\n\nexport type NativePathed = Pick<SimpleFile, \"nativePath\">\n\nexport function posixPathFrom(\n  parent: string | NativePathed,\n  child: string | NativePathed\n): string {\n  const p = toNativePath_(parent)\n  const c = toNativePath_(child)\n  if (blank(p) || blank(c))\n    throw new Error(\"posixPathFrom empty args \" + stringify({ parent, child }))\n\n  return p === c\n    ? \"\"\n    : // The ensureSuffix handles windows drive letters properly:\n      stripPrefix(\n        native2posix(c).normalize(),\n        ensureSuffix(native2posix(p), \"/\").normalize()\n      ).normalize() // < macOS requires us to normalize\n}\n\n/**\n * @return the native path of `p`. If the full path is longer than\n * `maxLength`, only include the root and parent directory names until the\n * path is at most `maxLength` characters long.\n */\nexport function ellipsizePath({\n  p,\n  maxLength\n}: {\n  p: SimpleFileOrString\n  maxLength: number\n}) {\n  const np = toNativePath_(p)\n  if (np.length <= maxLength) return np\n  const pathnames = toPathnames(p)\n  const base = pathnames.pop()!\n  const lhs = []\n  const rhs = [base]\n  while (pathnames.length > 0) {\n    if (lhs.length < rhs.length) {\n      // pop off something for lhs:\n      lhs.push(pathnames.shift()!)\n      if (joinNativePath([...lhs, ...rhs]).length >= maxLength) {\n        pathnames.unshift(lhs.pop()!)\n        break\n      }\n    } else {\n      rhs.unshift(pathnames.pop()!)\n      if (joinNativePath([...lhs, ...rhs]).length >= maxLength) {\n        pathnames.push(rhs.shift()!)\n        break\n      }\n    }\n  }\n\n  if (pathnames.length > 0) {\n    lhs.push(\"…\")\n  }\n  return joinNativePath([...lhs, ...rhs])\n}\n\nexport function posixPathFromParent(nativePath: string): string {\n  return toPathnames(nativePath).slice(-2).join(\"/\")\n}\n\nexport function posixPathFromGrandparent(nativePath: string): string {\n  return toPathnames(nativePath).slice(-3).join(\"/\")\n}\n\nexport function addNameSuffix(basename_: string, suffix: string): string {\n  const p = parseNativePath(basename_)\n  return `${p.base}${suffix}${p.ext}`\n}\n\nexport function isUNC(nativePath: string) {\n  return nativePath.startsWith(\"\\\\\\\\\")\n}\n\nexport function isAbsolute(nativePath: string) {\n  return (\n    (isPosix && nativePath.startsWith(\"/\")) ||\n    (isWin && (isUNC(nativePath) || nativePath.match(driveRe) != null))\n  )\n}\n\nexport async function mkdirp_(nativePath: string) {\n  try {\n    // Don't try to make the mountpoint (or, say, \"c:\")\n    if (await isReadableDirectory(nativePath)) return\n    await _fse.mkdirp(nativePath)\n  } catch (err) {\n    // concurrent mkdirp() calls spuriously throw EACCES or EEXIST\n    if (await isReadableDirectory(nativePath)) return\n    else throw err\n  }\n}\n\nexport function mkdirpSync_(\n  nativePath: string,\n  options?: _fse.EnsureDirOptions\n) {\n  try {\n    // Don't try to make the mountpoint (or, say, \"c:\")\n    if (isReadWriteableDirectorySync(nativePath)) return\n    _fse.mkdirpSync(nativePath, options)\n  } catch (err) {\n    // concurrent mkdirp() calls spuriously throw EACCES\n    if (isReadWriteableDirectorySync(nativePath)) return\n    else throw err\n  }\n}\n\nexport async function move_(srcNativePath: string, destNativePath: string) {\n  return retryOnReject(\n    () => _fse.move(srcNativePath, destNativePath, { overwrite: true }),\n    {\n      errorIsRetriable: isRetriableError,\n      maxRetries: 5, // windows may throw EBUSY\n      retryDelay: 250\n    }\n  )\n}\n\nexport function splitNativePath(nativePath: SimpleFileOrString): string[] {\n  const result = toNativePath_(nativePath)\n  // DON'T USE compactBlanks: (correct) tests will fail, because a path can\n  // validly be \" \"\n  return result.split(_path.sep).filter(ea => ea != null && ea !== \"\")\n}\n\nexport function joinNativePath(filePaths: string[]): string {\n  return ensurePrefix(\n    compactBlanks(filePaths).join(_path.sep),\n    isWin ? \"\" : _path.sep\n  )\n}\n\nexport function joinNativePathMaybe(...paths: Maybe<string>[]): Maybe<string> {\n  return paths.some(blank) ? undefined : joinNativePath(paths as string[])\n}\n\nexport function bestMountpointForDir(\n  dir: SimpleFileOrString,\n  mountpoints: SimpleFileOrString[]\n): Maybe<SimpleFileOrString> {\n  return greatestBy(mountpoints, ea =>\n    // containedByNativePath handles blank and null properly:\n    containedByNativePath({\n      ancestor: ea,\n      descendant: dir,\n      acceptSelf: true\n    })\n      ? [toNativePath_(ea).length]\n      : undefined\n  )\n}\n\nexport function posixPathIncludesPathElement(\n  posixPath: string,\n  name: string\n): boolean {\n  return posixPath.split(\"/\").includes(name)\n}\n","import _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, uniq } from \"../../fe/Array\"\nimport { toNotBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt } from \"../../fe/Number\"\nimport { ensureSuffix } from \"../../fe/String\"\nimport { KiB } from \"../../fe/Units\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { env } from \"../env/Env\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { isLinux, isWin } from \"../platform/Platform\"\nimport { access, isStatRX } from \"./Access\"\nimport { actualPath } from \"./ActualPath\"\nimport { BaseFile } from \"./BaseFile\"\nimport { statMaybe } from \"./Stat\"\n\nconst logger = lazy(() => mkLogger(\"fs.PathTo\"))\n\n// This file is instead of depending on the npm \"which \" package, which doesn't have fallbacks, nor min filesize, nor access validation\n\n// dcraw_emu.exe is the smallest binary, and it's 26K.\nconst MinBinarySize = KiB\n\nasync function isBinaryFile(nativePath: string): Promise<boolean> {\n  const stat = await statMaybe(nativePath, \"trace\")\n  return (\n    stat != null &&\n    stat.isFile() &&\n    gt(stat.size, MinBinarySize) &&\n    access({ stat, r: true, x: true })\n  )\n}\n\nfunction fallbackPathDirectories() {\n  if (isWin) {\n    const systemRoot = toNotBlank(getEnv(\"SystemRoot\")) ?? \"C:\\\\Windows\"\n    return [\n      systemRoot,\n      _path.join(systemRoot, \"System32\"),\n      _path.join(systemRoot, \"System32\", \"Wbem\") // < wmic is hiding in Wbem\n    ]\n  } else {\n    return [\"/usr/local/bin\", \"/usr/bin\", \"/bin\", \"/usr/sbin\", \"/sbin\"]\n  }\n}\n\nfunction pathDirectories() {\n  const paths = toS(env().PATH).split(_path.delimiter)\n  return uniq(compactBlanks([...paths, ...fallbackPathDirectories()]))\n}\n\nexport async function pathTo(tool: string): PromiseMaybe<string> {\n  const base = isWin ? ensureSuffix(tool, \".exe\") : tool\n  const dirs = pathDirectories()\n\n  for (const dir of dirs) {\n    const nativePath = _path.join(dir, base)\n    if (await isBinaryFile(nativePath)) {\n      // only run actualPath for case-insensitive OSes:\n      return isLinux ? nativePath : actualPath(nativePath)\n    }\n  }\n  logger().warn(\"Failed to find tool\", { tool, dirs })\n  return\n}\n\nexport async function pathIfExists(f: Maybe<BaseFile>) {\n  const s = await f?.stat({ logLevel: \"debug\" })\n  return s != null && s.isFile() && s.size > MinBinarySize && isStatRX(s)\n    ? f!.nativePath\n    : undefined\n}\n\nexport const wmic = () => \"wmic\"\nexport const fsutil = () => \"fsutil\"\nexport const nslookupWin = () => \"nslookup\"\nexport const pingWin = () => \"ping\"\nexport const arpWin = () => \"arp\"\n\n// export const wmic = lazy(() => pathTo(\"wmic\", [\"OS\", \"GET\", \"localdatetime\"], [\"System32\", \"wbem\"]) )\n// export const fsutil = lazy(() => pathTo(\"fsutil\", []))\n// export const nslookupWin = lazy(() => pathTo(\"nslookup\", [\"127.0.0.1\"]))\n// export const pingWin = lazy(() => pathTo(\"ping\", [\"-n\", \"1\", \"localhost\"]))\n// export const arpWin = lazy(() => pathTo(\"arp\", [\"-a\"]))\n","import fs from \"fs\"\nimport * as _fse from \"fs-extra\"\nimport fsp from \"fs/promises\"\nimport _path from \"path\"\nimport stream from \"stream\"\nimport { pipeline } from \"stream/promises\"\nimport util from \"util\"\nimport { MemoizedThunk, lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { blank, notBlank, notBlankOr } from \"../../fe/Blank\"\nimport { fmtYMDHMS, minuteMs, secondMs } from \"../../fe/Date\"\nimport { errorCode } from \"../../fe/Error\"\nimport { fmtDuration } from \"../../fe/FmtDuration\"\nimport { map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe, MaybePromiseMaybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { approximates, clamp, gte } from \"../../fe/Number\"\nimport { StringValued, omit } from \"../../fe/Object\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport {\n  PS_LIBRARY_SCHEME,\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n} from \"../../fe/URI\"\nimport { MiB } from \"../../fe/Units\"\nimport { toS } from \"../../fe/toS\"\nimport { contextFilter, max } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport {\n  countChars,\n  ensurePrefix,\n  equalsIgnoreCase,\n  isString,\n  stripPrefix\n} from \"../String\"\nimport { thenMap, thenMapOr } from \"../async/Promise\"\nimport { time } from \"../async/PromiseTimer\"\nimport { untilTrue } from \"../async/until\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { libraryDir, originalsDir } from \"../dir/LibraryDir\"\nimport { DoNotSendErrorFlag, NonRetriableErrorFlag } from \"../error/ErrorFlags\"\nimport { isNonRetriableError } from \"../error/ErrorTypes\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\nimport { Radix58 } from \"../math/Radix\"\nimport { isMac, isWin } from \"../platform/Platform\"\nimport { PullProgressObserver } from \"../progress/PullProgressObserver\"\nimport { PowerShell, pwshQuote } from \"../pwsh/PowerShell\"\nimport { Settings } from \"../settings/Settings\"\nimport { defaultSidecarExt, existingSidecars } from \"../tags/Sidecars\"\nimport { nativePath2uri, uri2nativePath } from \"../uri/FileURI\"\nimport { URI, toURI } from \"../uri/URI\"\nimport { uriIsEquivalent } from \"../uri/UriNormalization\"\nimport { mountpoints } from \"../volumes/Mountpoints\"\nimport { MinIoRate, commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { bestMountpoint } from \"../volumes/Volumes\"\nimport { BaseFile, RefreshArgs } from \"./BaseFile\"\nimport { DirectoryEntry } from \"./DirectoryEntry\"\nimport { FileCache } from \"./FileCache\"\nimport { isJsonExt, isSidecarExt } from \"./FileExt\"\nimport { withLock_ } from \"./FsLock\"\nimport { hide_, isHidden } from \"./Hidden\"\nimport { mkNoMedia_ } from \"./MkNoMedia\"\nimport { hasNoMedia, hasNoMediaRecursive } from \"./NoMedia\"\nimport { containedByNativePath, move_ } from \"./Path\"\nimport { SimpleFile, SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\nimport { ByteCounter } from \"./Streams\"\nimport { touch_ } from \"./Touch\"\nimport { WipPrefix, WipTimeoutMs } from \"./WIP\"\nimport { WriteOptions } from \"./WriteOptions\"\nimport { zpipe_ } from \"./zcat\"\n\nconst cache = lazy(() => new FileCache<PosixFile>({ name: \"fs.PosixFile\" }))\n\nfunction sortFiles(paths: PosixFile[]) {\n  return sortBy(paths, ea => ea.nativePath)\n}\n\nexport function uniquePrefixes(paths: PosixFile[]) {\n  return contextFilter(\n    sortFiles(paths),\n    // This also does a uniq():\n    (ea, _idx, last) => last == null || !ea.isDescendantOf(last)\n  )\n}\n\nexport const NoOp = Symbol(\"no-op\")\n\n/**\n * Ensures a given path is only \"posix-ized\" once, and holds promises for more\n * expensive information about the file, like inode stats, SHA1, and EXIF tags.\n */\nexport class PosixFile extends BaseFile implements SimpleFile {\n  protected readonly pflog = lazy(() =>\n    mkLogger(\"fs.PosixFile(\" + this.nativePath + \")\")\n  )\n\n  protected constructor(\n    readonly nativePath: string,\n    dirent?: DirectoryEntry\n  ) {\n    super(nativePath, dirent)\n  }\n\n  [util.inspect.custom]() {\n    return this.toJSON()\n  }\n\n  static forDirectoryEntry(de: DirectoryEntry) {\n    return PosixFile.for(de.nativePath, de)\n  }\n\n  static forMaybe(nativePathOrFile: Maybe<SimpleFileOrString>) {\n    return notBlank(nativePathOrFile)\n      ? PosixFile.for(nativePathOrFile)\n      : undefined\n  }\n\n  static for(\n    nativePathOrFile: SimpleFileOrString,\n    dirent?: DirectoryEntry\n  ): PosixFile {\n    if (nativePathOrFile instanceof PosixFile) {\n      return nativePathOrFile\n    }\n\n    if (blank(nativePathOrFile)) {\n      throw new Error(\"PosixFile.for(): empty nativePathOrFile\")\n    }\n\n    if (isString(nativePathOrFile)) {\n      // avoid expensive resolve() call:\n      const prior = cache().get(nativePathOrFile)\n      if (prior != null) return prior\n    }\n    const resolved = toNativePath_(nativePathOrFile)\n    const result = new PosixFile(resolved, dirent)\n    if (isString(nativePathOrFile)) {\n      cache().set(nativePathOrFile, result)\n    }\n    cache().set(resolved, result)\n    return result\n  }\n\n  static forPosix(posixPath: string): PosixFile {\n    return PosixFile.for(posixPath.replace(/\\//g, _path.sep))\n  }\n\n  static forUri(uri: string, mountpoint?: string): PromiseMaybe<PosixFile> {\n    return thenMap(uri2nativePath(uri, mountpoint), nativePath =>\n      PosixFile.for(nativePath)\n    )\n  }\n\n  for(nativePath: string, dirent?: DirectoryEntry): this {\n    return PosixFile.for(nativePath, dirent) as this\n  }\n\n  forDirectoryEntry(de: DirectoryEntry): this {\n    return PosixFile.for(de.nativePath, de) as this\n  }\n\n  clear({ emit } = { emit: true }): this {\n    super.clear({ emit })\n    this.uriObject_.unset()\n    this.uri_.unset()\n    this.normalizedPathUri_.unset()\n    this.fileuri.unset()\n    this.etag.unset()\n    this.existingSidecars.unset()\n    this.unlock.unset()\n    return this\n  }\n\n  readonly uriObject_ = lazy(() => nativePath2uri(this.nativePath))\n  readonly uri_ = lazy(async () => (await this.uriObject_()).toString())\n  uri(): PromiseMaybe<string> {\n    return this.trap(\"uri\", () => this.uri_())\n  }\n  readonly fileuri = lazy(() => URI.file(this.nativePath).toString())\n\n  readonly normalizedPathUri_: MemoizedThunk<PromiseMaybe<string>> = lazy(\n    async () => (await this.normalize()).uri_()\n  )\n\n  async mountpoint(): PromiseMaybe<PosixFile> {\n    if (\n      containedByNativePath({\n        // HEY FUTURE ME: referencing libraryDirPosixFile creates a deploop _don't do that_\n        ancestor: libraryDir(),\n        descendant: this,\n        acceptSelf: true\n      }) ||\n      containedByNativePath({\n        ancestor: originalsDir(),\n        descendant: this,\n        acceptSelf: true\n      })\n    ) {\n      return\n    }\n    if (isWin && this.nativePath.startsWith(\"\\\\\\\\\")) {\n      return PosixFile.for(this.nativePath.split(\"\\\\\").slice(0, 4).join(\"\\\\\"))\n    }\n    return map(bestMountpoint(this.nativePath, await mountpoints()), ea =>\n      PosixFile.for(ea)\n    )\n  }\n\n  /**\n   * @return true iff this file or directory doesn't exist, and the mountpoint\n   * is currently mounted, or some parent directory exists.\n   */\n  async isDeletedUri(_uri?: URI | string): PromiseMaybe<boolean> {\n    if (await this.exists({ refresh: true })) return false // NOT deleted\n\n    if (this.isUNC) {\n      return this.pflog().tap({\n        result: await this.isDeleted(),\n        msg: \"isDeletedUri(): is UNC, delegating to isDeleted()\"\n      })\n    }\n\n    const uri = map(\n      notBlankOr(_uri, () => this.uri_() as any),\n      toURI\n    )\n\n    if (uri == null) {\n      return this.pflog().tap({\n        result: await this.isDeleted(),\n        level: \"warn\",\n        msg: \"isDeletedUri(): missing URI, delegating to isDeleted()\"\n      })\n    }\n\n    if (uri.isRootPath()) {\n      // don't descend any farther, we're at (least a prior) mountpoint\n      return this.pflog().tap({\n        result: await this.notExists(),\n        msg: \"isDeletedUri(): uri isRootPath\",\n        meta: { uri }\n      })\n    }\n\n    // Is the uri relevant to this path?\n\n    if (toS(uri.pathBase).normalize() !== this.base.normalize()) {\n      return this.pflog().tap({\n        level: \"warn\",\n        result: await this.notExists(),\n        msg: \"isDeleted(): uri isn't correct, returning notExists()\",\n        meta: { uri, expectedBase: this.base, uriBase: uri.pathBase }\n      })\n    }\n\n    // C:\\goo\\bar\\file.jpg\n    // /opt/library/file.jpg\n\n    // NOTE: we're counting slashes in the _URI_, not the native path, because\n    // that goes to the mountpoint.\n\n    // pslib:/dir/file.jpg\n    // psfile:/UUID/dir/file.jpg\n    // psnet:/server/share/dir/file.jpg\n\n    const schemeDiscount =\n      uri.scheme === PS_LIBRARY_SCHEME\n        ? 1\n        : uri.scheme === PS_LOCAL_FILE_SCHEME\n        ? 2\n        : uri.scheme === PS_NETWORK_FILESYSTEM_SCHEME\n        ? 3\n        : 1\n\n    const maxDepth = countChars(uri.path, \"/\") - schemeDiscount\n\n    // we don't need to log.tap this result: BaseFile will already log it.\n    return this.isDeleted(maxDepth)\n  }\n\n  readonly etag = lazy(() =>\n    thenMap(this.stat(), s =>\n      [s.size, s.mtime.getTime()].map(n => Radix58.encode(n)).join(\"-\")\n    )\n  )\n\n  async httpHeaders(): Promise<StringValued> {\n    return {\n      ETag: await this.etag(),\n      \"Last-Modified\": await this.lastModifiedUtc()\n    }\n  }\n\n  hide(): MaybePromiseMaybe<this> {\n    if (!isWin && !isMac) return\n    return this.trap(\"hide\", async () => {\n      await hide_(this)\n      return this\n    })\n  }\n\n  /**\n   * @throws on error\n   */\n  async mkNoMedia_() {\n    return mkNoMedia_(this)\n  }\n\n  /**\n   * @return this, not the .NoMedia file, so the method can be chained.\n   */\n\n  async mkNoMedia(): PromiseMaybe<this> {\n    try {\n      await this.mkNoMedia_()\n      return this\n    } catch (err) {\n      this.pflog().warn(\"Could not add .NoMedia file to \" + this, err)\n      return undefined\n    }\n  }\n\n  hasNoMedia(): PromiseMaybe<boolean> {\n    return hasNoMedia(this)\n  }\n\n  hasNoMediaRecursive(): PromiseMaybe<boolean> {\n    return hasNoMediaRecursive(this)\n  }\n\n  async hidden() {\n    return isHidden(this)\n  }\n\n  readonly isMountpoint = lazy(\n    async () =>\n      (await this.isDirectory()) &&\n      (await thenMapOr(\n        mountpoints(),\n        arr => arr.includes(this.nativePath),\n        () => false\n      ))\n  )\n\n  isSidecar() {\n    return isSidecarExt(this.ext)\n  }\n\n  /**\n   * @return all JSON and non-JSON sidecars\n   */\n  readonly existingSidecars = lazy(() => existingSidecars(this))\n\n  /**\n   * Returns non-JSON sidecars that ExifTool can read (.xmp, .mie, ...)\n   *\n   * @return oldest sidecars first (so newest sidecar metadata wins, as they are\n   * layered on top of eachother)\n   */\n  async existingExifSidecars() {\n    return (await this.existingSidecars()).filter(ea => !isJsonExt(ea))\n  }\n\n  /**\n   * Should only be used for writes\n   */\n  async sidecar() {\n    const existing = await this.existingExifSidecars()\n    return (\n      existing.find(ea => equalsIgnoreCase(ea.ext, defaultSidecarExt())) ??\n      this.defaultSidecar()\n    )\n  }\n\n  defaultSidecar() {\n    return this.sibling(this.base + defaultSidecarExt())\n  }\n\n  async jsonSidecars() {\n    return (await this.existingSidecars()).filter(ea => isJsonExt(ea))\n  }\n\n  async sidecareStats(opts?: RefreshArgs): Promise<fs.Stats[]> {\n    const refresh = opts?.refresh ?? false\n    if (refresh) this.existingSidecars.unset()\n    return compact(\n      await Promise.all(\n        [this, ...(await this.existingSidecars())].map(ea => ea.stat(opts))\n      )\n    )\n  }\n\n  async thisOrSidecareMaxMtimeMs(opts?: RefreshArgs) {\n    const ss = await this.sidecareStats(opts)\n    return max(ss.map(ea => ea.mtimeMs))\n  }\n\n  /**\n   * @throws so when readables encounter errors in the midst of reading, they\n   * can propagate the error to the caller\n   */\n  async writeStream_(\n    readable: stream.Readable,\n    options?: WriteOptions & { onProgress?: (bytes: number) => any }\n  ): PromiseMaybe<this> {\n    await pipeline(\n      compact([\n        readable,\n        map(options?.onProgress, f => new ByteCounter(f)),\n        _fse.createWriteStream(this.nativePath, {\n          autoClose: true,\n          ...omit(options, \"onProgress\")\n        })\n      ])\n    )\n    readable.destroy()\n    return this.clearThisAndParent()\n  }\n\n  /**\n   * @param f_ must throw an error on failure, or we'll wait for a minute for\n   * the command to finish (!!)\n   */\n  async applyIfEmpty_({\n    fn_,\n    minSizeBytes = 0,\n    returnUndefinedIfNotEmpty = false,\n    timeoutMs = 2 * minuteMs,\n    skipWip = false,\n    skipFsLock = false,\n    retries = 2,\n    dirty = false\n  }: {\n    fn_: (destination: PosixFile) => Promise<any>\n    minSizeBytes?: number\n    returnUndefinedIfNotEmpty?: boolean\n    timeoutMs?: number\n    skipWip?: boolean\n    skipFsLock?: boolean\n    retries?: number\n    dirty?: boolean\n  }): PromiseMaybe<this> {\n    return retryOnReject(\n      async () => {\n        const initiallyNotEmpty = await this.clear().isNonEmptyFile(\n          minSizeBytes\n        )\n\n        if (!initiallyNotEmpty) {\n          if (skipWip && skipFsLock) {\n            return fn_(this)\n          } else {\n            await this.applyWip_({\n              fn_: async dest => {\n                if (await this.clear().isNonEmptyFile(minSizeBytes)) {\n                  // someone got a file lock before us and did the work!\n                  return NoOp\n                } else {\n                  return fn_(dest)\n                }\n              },\n              skipFsLock,\n              minSizeBytes,\n              timeoutMs,\n              dirty\n            })\n          }\n        }\n\n        return initiallyNotEmpty && returnUndefinedIfNotEmpty\n          ? undefined\n          : this.utimes()\n      },\n      {\n        maxRetries: retries,\n        timeoutMs: timeoutMs * 2,\n        retryDelay: 3 * secondMs,\n        errorIsRetriable: e => errorCode(e) === \"EBUSY\"\n      }\n    )\n  }\n\n  /**\n   * @returns a hidden file .wip file\n   */\n  wip(): this {\n    return this.sibling(ensurePrefix(this.base, WipPrefix))\n  }\n\n  isWip(): boolean {\n    return this.name.startsWith(WipPrefix)\n  }\n\n  async wipIsRecent(staleMs = WipTimeoutMs): Promise<boolean> {\n    return (\n      (await this.wip().isFile()) &&\n      gte(await this.wip().clear().maxStatMs(), Date.now() - staleMs)\n    )\n  }\n\n  unwipBase() {\n    return stripPrefix(this.base, WipPrefix)\n  }\n\n  /**\n   * If this is a WIP, rename to the \"source\" file (by removing the WipToken\n   * (\".WIP-\") prefix\n   */\n  unwip_(): Promise<this> {\n    return this.mv_(this.sibling(this.unwipBase()))\n  }\n\n  async applyWip_<T>({\n    fn_,\n    minSizeBytes = 0,\n    skipFsLock = false,\n    timeoutMs,\n    dirty = false\n  }: {\n    fn_: (destination: PosixFile) => Promise<T>\n    timeoutMs: number\n    skipFsLock: boolean\n    minSizeBytes?: number\n    dirty?: boolean\n  }): PromiseMaybe<T> {\n    await this.parent().mkdirp_()\n    return withLock_(\n      {\n        file: this,\n        skipFsLock,\n        timeoutMs,\n        dirty\n      },\n      async () => {\n        const wip = this.wip()\n        try {\n          // NOTE: don't touch() WIP file, ExifTool's no-clobber policy will be\n          // grumpy!\n          await wip.unlink(\"trace\") // < should be a no-op\n\n          const result = await thenOrTimeoutError(fn_(wip), timeoutMs)\n\n          if ((result as any) === NoOp) return result\n\n          const isNonEmpty = await untilTrue(\n            () => wip.clear().isNonEmptyFile(minSizeBytes),\n            {\n              timeoutMs: ShortCommandTimeoutMs,\n              intervalMs: 250 // short interval because it's just a stat()\n            }\n          )\n\n          if (isNonEmpty) {\n            await wip.mv_(this) // throws errors if issues\n            return result\n          } else {\n            throw new Error(\n              this +\n                \"applyWip(): still empty after waiting \" +\n                fmtDuration(ShortCommandTimeoutMs)\n            )\n          }\n        } catch (err) {\n          this.pflog().warn(\"applyWip() threw error\", err)\n          await wip.unlink(\"trace\")\n          await this.unlink(\"trace\")\n          throw err\n        }\n      }\n    )\n  }\n\n  /**\n   * Atomically overwrite `destOrDestDir.join(paths)` with the contents of\n   * `this`. Use `.ensureNew` on destOrDestDir if you want to prevent\n   * overwriting.\n   *\n   * If the result of joining `destOrDestDir` and `paths` results in an\n   * extensionless name, the path will be assumed to be a containing directory,\n   * and this name will be appended to the result.\n   *\n   * @throws if there are any errors\n   */\n  copyFile_(destFileOrDir: this): Promise<this> {\n    return time(\"fs.copyFile\", async () => {\n      const dest = this.dest(destFileOrDir)\n      if (this.nativePath === dest.nativePath) {\n        return this\n      }\n\n      if (Settings.onlyNativeFileCopy.valueOrDefault !== true)\n        try {\n          return await this.#copyFile_(dest)\n        } catch (error) {\n          if (isNonRetriableError(error) === true) {\n            return this.pflog().throw(\n              \"_copyFile failed, but error wasn't retriable\",\n              {\n                error,\n                dest: dest.nativePath,\n                src: this.nativePath\n              }\n            )\n          }\n\n          this.pflog().warn(\"_copyFile failed, trying _nativeCopyFile\", {\n            dest: dest.nativePath,\n            src: this.nativePath,\n            error\n          })\n        }\n\n      return await this.#nativeCopyFile_(dest)\n    })\n  }\n\n  async maybeVerifySameOrThrow_(dest: this) {\n    const start = Date.now()\n    if (Settings.verifyFileCopies.valueOrDefault) {\n      // we don't need to refresh this.sha().\n      if (\n        await untilTrue(() => this.matchesContent(dest), {\n          timeoutMs: commandTimeoutMs(),\n          intervalMs: secondMs\n        })\n      ) {\n        // YAY COPY WORKED\n      } else {\n        this.pflog().throw(\n          \"copyFile_() failed (contents did not match after copy)\",\n          { dest, elapsedMs: Date.now() - start }\n        )\n      }\n    }\n  }\n\n  async #copyFile_(dest: this): Promise<this> {\n    let obs: Maybe<PullProgressObserver>\n    let result = dest\n    const copyDest = dest.wip()\n    try {\n      const s = await this.stat_()\n      if (s == null) {\n        return this.pflog().throw(\n          \"Can't copy missing files\" + NonRetriableErrorFlag\n        )\n      }\n      if (s.size > 0) {\n        // skip copy for empty files\n        if (Settings.verifyFileCopies.valueOrDefault) {\n          if ((await this.sha()) == null) {\n            return this.pflog().throw(\n              \"Can't copy file without SHA\" + NonRetriableErrorFlag\n            )\n          }\n        }\n        const mkdir = await copyDest.parent().mkdirp()\n        if (mkdir == null)\n          return this.pflog().throw(\"Cannot mkdirp \" + dest.dir)\n\n        await fsp.copyFile(\n          this.nativePath,\n          copyDest.nativePath,\n          // COPYFILE_FICLONE: copy operation will attempt to create a\n          // copy-on-write reflink. If the underlying platform does not\n          // support copy-on-write, then a fallback copy mechanism is used.\n          fs.constants.COPYFILE_FICLONE\n        )\n        if (s.size > 5 * MiB) {\n          obs = new PullProgressObserver(\n            {\n              op: \"Copying\",\n              path: this.nativePath,\n              dest: dest.nativePath\n            } as any,\n            s.size,\n            () => copyDest.size({ refresh: true })\n          )\n        }\n        const sizeMatches = await untilTrue(\n          async () =>\n            approximates(s.size, await copyDest.size({ refresh: true })),\n          // it was already supposed to be done, so waiting a minute is really\n          // just to wait for sync (which might take ages!):\n          { intervalMs: secondMs, timeoutMs: minuteMs }\n        )\n        if (!sizeMatches) {\n          return this.pflog().throw(\"copyFile_() failed\", {\n            expectedSize: s.size,\n            actualSize: await copyDest.size({ refresh: true })\n          })\n        }\n\n        await this.maybeVerifySameOrThrow_(copyDest)\n\n        result = dest.eql(copyDest)\n          ? dest\n          : await copyDest.mv_(dest, LogLevels.trace)\n      }\n      try {\n        // this doesn't need to fail the whole operation:\n        await touch_({\n          file: result,\n          btimeMs: s.birthtimeMs,\n          mtimeMs: s.mtimeMs,\n          ensureFile: false\n        })\n      } catch (err) {\n        this.pflog().warn(\n          `copyFile_(${result.nativePath}): couldn't set utimes to match source: ${err}`\n        )\n      }\n      try {\n        // this doesn't need to fail the whole operation:\n        await _fse.chmod(result.nativePath, s.mode)\n      } catch (err) {\n        this.pflog().warn(\n          `copyFile_(${result.nativePath}): couldn't chmod to ${s.mode}: ${err}`\n        )\n      }\n      this.pflog().debug(`copyFile_(${result.nativePath}): success`)\n      return result\n    } catch (err) {\n      this.pflog().warn(`copyFile_(${copyDest?.nativePath}) failed: ${err}`)\n      await copyDest.unlink()\n      if (!copyDest.eql(dest)) {\n        await dest.unlink()\n      }\n      throw err\n    } finally {\n      result?.clearThisAndParent()\n      void map(obs, ea => ea.end())\n    }\n  }\n\n  async zCopyFile_(dest: this, options?: { start?: number; end?: number }) {\n    await dest.parent().mkdirp_()\n    await zpipe_(\n      this.nativePath,\n      fs.createWriteStream(dest.nativePath, { autoClose: true }),\n      options\n    )\n    return dest.clear()\n  }\n\n  async copyTimeoutMs(): Promise<number> {\n    return clamp(\n      ShortCommandTimeoutMs, // don't go shorter than this!\n      10 * minuteMs,\n      ((await this.size()) ?? 0) * MinIoRate\n    )\n  }\n\n  async #nativeCopyFile_(dest: this): Promise<this> {\n    let obs: Maybe<PullProgressObserver>\n    const wipDest = dest.wip()\n\n    try {\n      if (null == (await dest.parent().mkdirp())) {\n        return this.pflog().throw(\"Can't mkdir destination directory\", {\n          src: this.nativePath,\n          dest: dest.nativePath\n        })\n      }\n      const s = await this.stat_()\n      const size = s?.size\n      if (s == null || size == null) {\n        return this.pflog().throw(\"Can't copy missing files\")\n      }\n      if (size > 5 * MiB) {\n        obs = new PullProgressObserver(\n          {\n            op: \"Copying\",\n            path: this.nativePath,\n            dest: wipDest.nativePath\n          } as any,\n          size,\n          () => dest.clear().size()\n        )\n      }\n\n      if (isWin) {\n        await PowerShell.instance().execute(\n          `Copy-Item -LiteralPath ${pwshQuote(\n            this.nativePath\n          )} -Destination ${pwshQuote(wipDest.nativePath)}`,\n          ea => ea\n        )\n      } else if (isMac) {\n        await stdout_(\"ditto\", [this.nativePath, wipDest.nativePath], {\n          timeoutMs: await this.copyTimeoutMs()\n        })\n      } else {\n        // -a means archive, or -pPR on macOS or -dR --preserve=all on debian\n        // -f means force. If existing dest cannot be opened, remove it and try again.\n        await stdout_(\"cp\", [\"-a\", \"-f\", this.nativePath, wipDest.nativePath], {\n          timeoutMs: await this.copyTimeoutMs()\n        })\n      }\n      await this.maybeVerifySameOrThrow_(wipDest)\n      await wipDest.mv_(dest, LogLevels.trace)\n      await touch_({ file: dest, reference: this, ensureFile: false })\n      return dest.clearThisAndParent()\n    } catch (error) {\n      await wipDest.unlink()\n      return this.pflog().throw(\n        \"_nativeCopyFile(\" + dest + \") failed\" + DoNotSendErrorFlag,\n        { error }\n      )\n    } finally {\n      void map(obs, ea => ea.end())\n    }\n  }\n\n  dest(destOrDestDir: this): this {\n    const destOrDir = destOrDestDir.clear() // < bust cache\n    return (notBlank(this.ext) && blank(destOrDir.ext)) ||\n      destOrDir.isDirectorySync()\n      ? destOrDir.join(this.base)\n      : destOrDir\n  }\n\n  /**\n   * @throws if errors\n   */\n  async renameYMDHMS_(\n    args: { subdir?: string; ts?: number } = {}\n  ): Promise<this> {\n    if (await this.clear().notExists()) {\n      throw new Error(\"Cannot rename: \" + this + \" doesn't exist.\")\n    }\n    const ts = fmtYMDHMS(args.ts ?? (await this.mtime()) ?? Date.now())\n    const destDir = mapOr(\n      args.subdir,\n      ea => this.parent().join(ea),\n      () => this.parent()\n    )\n    return this.mv_(destDir.join(this.name + \"-\" + ts + this.ext))\n  }\n\n  /**\n   * @throws on error\n   */\n  async renameWithNameSuffix_(nameSuffix: string): PromiseMaybe<this> {\n    return thenMap(\n      this.withNameSuffix(nameSuffix).ensureNew_({ emptyIsNew: true }),\n      dest => dest.unlink(\"debug\").then(() => this.mv_(dest))\n    )\n  }\n\n  /**\n   * If `this` exists and has new contents for this current directory, rename it\n   * to a new file with the given base (and possibly a count, to ensure new\n   * overwriting).\n   *\n   * If `this` is empty, or already has the same contents as another file in\n   * this directory, return that file and unlink this file.\n   */\n  async saveIfNewOrDelete(base: string): PromiseMaybe<this> {\n    if (await this.clear().isEmpty()) {\n      // don't complain about removing a missing file:\n      await this.unlink(\"trace\")\n      return\n    }\n    const prior = await this.siblingWithSameContents()\n    if (prior != null) {\n      await this.unlink()\n      return prior\n    }\n    const dest = await this.sibling(base).ensureNew_()\n    return this.mv_(dest)\n  }\n\n  /**\n   * SITS: Mac sometimes locks files when they've been copied. No, I couldn't\n   * find out why, but if I own the file, I can chflags the file back to being\n   * unlocked.\n   *\n   * This should only be applied to newly-copied files, and not for files that\n   * PhotoStructure didn't create.\n   */\n  readonly unlock = lazy(() =>\n    !isMac\n      ? undefined\n      : stdout_(\"chflags\", [\"nouchg\", this.nativePath], {\n          quiet: true,\n          timeoutMs: ShortCommandTimeoutMs\n        })\n  )\n\n  /**\n   * Move this to `destFileOrDir`. If dest exists, it will be overwritten.\n   *\n   * @return the file that was copied into\n   * @throws error if there are issues\n   */\n  async mv_(\n    destFileOrDir: this | string,\n    level: LogLevel = LogLevels.debug\n  ): Promise<this> {\n    const dest = isString(destFileOrDir)\n      ? this.parent().join(destFileOrDir)\n      : this.dest(destFileOrDir)\n    if (this.nativePath === dest.nativePath) {\n      this.pflog().warn(\"mv(): no-op\", new Error(\"internal error\"))\n      return this\n    }\n    if (this.dir !== dest.dir) {\n      await dest.parent().mkdirp_()\n    }\n    this.pflog().log(level, \"mv_()\", { dest })\n    try {\n      // windows can throw EBUSY:\n      await move_(this.nativePath, dest.nativePath)\n    } catch (err) {\n      this.pflog().warn(\"mv() failed. Calling unlock() and retrying...\", err)\n      await Promise.all([this.unlock(), dest.unlock()])\n      await move_(this.nativePath, dest.nativePath)\n    }\n    if (this.dir !== dest.dir) this.clearThisAndParent()\n    return dest.clearThisAndParent()\n  }\n\n  /**\n   * @return true if the provided URI is equivalent to this\n   */\n  async equalsUri_(uri: string | URI): Promise<boolean> {\n    return uriIsEquivalent(await this.uriObject_(), uri)\n  }\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { includes } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, gte, lte, toInt } from \"../../fe/Number\"\nimport { toS } from \"../../fe/toS\"\nimport { allNotBlank } from \"../Array\"\nimport { thenMapOr } from \"../async/Promise\"\nimport {\n  Predicate,\n  PredicateBundle,\n  Predicates\n} from \"../predicates/Predicates\"\nimport { Settings } from \"../settings/Settings\"\nimport { extractDurationSec } from \"../tags/Duration\"\nimport { readRawTags, readTags } from \"../tags/ExifTool\"\nimport { rawTagKeywords } from \"../tags/KeywordTags\"\nimport { isAssetFileMimeType } from \"../tags/MimeTypes\"\nimport { readMimeType } from \"../tags/ReadMimeType\"\nimport { extractSizeInfoFromFile } from \"../tags/SizeInfo\"\nimport { leafIsExcluded } from \"../tags/TagPaths\"\nimport { isBaseFile } from \"./BaseFile\"\nimport { isAssetFileExtension } from \"./BaseFilePredicates\"\nimport { isExcludedDirectory, notExcludedFilePredicates } from \"./Excluded\"\nimport { PosixFile } from \"./PosixFile\"\nimport { SimpleFile } from \"./SimpleFile\"\nimport { exists } from \"./Stat\"\n\nfunction mkTagFilter(f: (tags: Tags) => boolean): Predicate<PosixFile> {\n  return async (file: PosixFile) =>\n    thenMapOr(readRawTags(file, false), f, () => false)\n}\n\nexport function requiredTagsFilter(\n  requiredExifTags: (keyof Tags)[]\n): Predicate<PosixFile> {\n  return mkTagFilter((t: Tags) =>\n    allNotBlank(...requiredExifTags.map(ea => t[ea]))\n  )\n}\n\nexport async function notDimensionsTooSmall(f: PosixFile) {\n  if (\n    !gt0(Settings.minVideoDimension.valueOrDefault) &&\n    !gt0(Settings.minImageDimension.valueOrDefault)\n  ) {\n    return\n  }\n  const m = await readMimeType(f)\n  if (m == null || (!m.startsWith(\"image/\") && !m.startsWith(\"video/\")))\n    return false\n  const min = m.startsWith(\"video/\")\n    ? Settings.minVideoDimension.valueOrDefault\n    : Settings.minImageDimension.valueOrDefault\n  if (!gt0(min)) return\n  return thenMapOr(\n    extractSizeInfoFromFile(f),\n    dim => gte(dim.ImageWidth, min) && gte(dim.ImageHeight, min),\n    () => false\n  )\n}\n\nasync function notVideoTooShort(f: PosixFile) {\n  if (!gt0(Settings.minVideoDurationSec.valueOrDefault)) return\n  const m = await readMimeType(f)\n  if (m == null) return false\n  if (!m.startsWith(\"video/\")) return\n  const t = await readRawTags(f, false)\n  if (t == null) return false\n  return gte(extractDurationSec(t), Settings.minVideoDurationSec.valueOrDefault)\n}\n\nasync function notVideoTooLong(f: PosixFile) {\n  if (!gt0(Settings.maxVideoDurationSec.valueOrDefault)) return\n  const m = await readMimeType(f)\n  if (m == null) return false\n  if (!m.startsWith(\"video/\")) return\n  const t = await readRawTags(f, false)\n  if (t == null) return false\n  return lte(extractDurationSec(t), Settings.maxVideoDurationSec.valueOrDefault)\n}\n\nasync function notMissingMimeType(f: PosixFile): Promise<boolean> {\n  return !blank(await readMimeType(f))\n}\n\n// A rating of -1 is considered \"rejected\"\nasync function notRejectedRating(f: PosixFile): Promise<boolean | undefined> {\n  if (Settings.rejectRatingsLessThan.valueOrDefault === -100) return undefined\n  const t = await readTags(f)\n  const rating = toInt(t?.Rating)\n  return (\n    rating == null || rating >= Settings.rejectRatingsLessThan.valueOrDefault\n  )\n}\n\n// Any keywords matching excludedKeywords?\nasync function notExcludedKeyword(f: PosixFile): Promise<boolean | undefined> {\n  if (Settings.keywordBlocklist.values.length === 0) return undefined\n  const tagPaths = rawTagKeywords(await readTags(f))\n  return tagPaths.every(\n    ea => leafIsExcluded(ea, Settings.keywordBlocklist.values) !== true\n  )\n}\n\nexport const hasBrowserImgMimeType = mkTagFilter((t: Tags) =>\n  includes([\"image/jpeg\", \"image/png\"], toS(t.MIMEType))\n)\n\nasync function notMissingMakeAndModelTags(f: PosixFile) {\n  const skip = !Settings.requireMakeModel.valueOrDefault\n  if (skip) return\n  const t = await readRawTags(f)\n  if (t == null || blank(t.MIMEType)) return\n  if (t.MIMEType.startsWith(\"image/\")) {\n    return t != null && notBlank(t.Make) && notBlank(t.Model)\n  } else {\n    return // not applicable\n  }\n}\n\nexport async function notFileMissing(file: SimpleFile) {\n  return isBaseFile(file) ? file.exists() : exists(file.nativePath)\n}\n\n// Skip over files that are < 50kb or > 1 gb, assuming that > 1 gb files are\n// downloaded movies. (1 gb is 10-20 minutes of FHD video, or > 5 minutes of\n// UHD video). kb = 1e3, mb = 1e6, gb = 1e9\n\n// If we're copying a file from a NAS to an external drive, we might be looking\n// at ~5-10mb/s. Transferring 1.5gb @ 5 mb/s is 5 minutes.\n\n// TODO: if we make asset import timeouts based on filesize, we can make this\n// limit much larger.\n\n// (Note that a 1600x1200 JPEG at 50% quality is ~150k, so 50k should be very\n// conservative.)\nexport async function notFileTooSmall(\n  file: SimpleFile\n): Promise<boolean | null> {\n  const min = Settings.minAssetFileSizeBytes.valueOrDefault\n  if (min <= 0) return null // disabled\n  const size = await file.size()\n  return gte(size, min)\n}\n\nexport async function notFileTooBig(file: SimpleFile): Promise<boolean | null> {\n  const max = Settings.maxAssetFileSizeBytes.valueOrDefault\n  if (max <= 0) return null\n  const size = await file.size()\n  return lte(size, max)\n}\n\nexport function simpleFileFiltersFor(\n  file: SimpleFile\n): PredicateBundle<SimpleFile> {\n  return [\n    { isPhotoOrVideoExtension: isAssetFileExtension },\n    ...notExcludedFilePredicates(file),\n    { notFileMissing },\n    { notFileTooSmall, notFileTooBig }\n  ] as PredicateBundle<SimpleFile>\n}\n\nexport function whyRejectFileSimple(file: SimpleFile): PromiseMaybe<string> {\n  return Predicates.whyRejected(file, ...simpleFileFiltersFor(file))\n}\n\nexport function acceptFileSimple(file: SimpleFile): Promise<boolean> {\n  return Predicates.accepted(file, ...simpleFileFiltersFor(file))\n}\n\nexport async function acceptParentAndFileAndSimple(\n  file: SimpleFile\n): Promise<boolean> {\n  const parent = await file.parent()\n  return (\n    parent != null &&\n    !(await isExcludedDirectory(parent)) &&\n    (await Predicates.accepted(file, ...simpleFileFiltersFor(file)))\n  )\n}\n\n// NOTE 1: These are named to make PredicateNames.negateFilterName simple (so,\n// \"notMissingMimeType\" becomes \"missing mime type\")\n\nexport function expensiveFileFiltersFor(\n  file: PosixFile\n): PredicateBundle<PosixFile> {\n  return [\n    ...simpleFileFiltersFor(file),\n    { notMissingMimeType },\n    { supportedMimeType: isAssetFileMimeType },\n    { notMissingMakeAndModelTags },\n    { notDimensionsTooSmall },\n    { notVideoTooShort },\n    { notVideoTooLong },\n    { notRejectedRating },\n    { notExcludedKeyword }\n  ] as PredicateBundle<PosixFile> // SITS TYPING (why is the as cast necessary?)\n}\n\nexport async function whyRejectFile(file: PosixFile): PromiseMaybe<string> {\n  return Predicates.whyRejected(file, ...expensiveFileFiltersFor(file))\n}\n\nexport async function acceptFile(file: PosixFile): Promise<boolean> {\n  return null == (await whyRejectFile(file))\n}\n","import _path from \"path\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { equalsIgnoreCase } from \"../String\"\n\nexport function posix2native(posixPath: string, hostname?: string): string {\n  if (blank(posixPath)) return posixPath\n  if (_path.sep === _path.posix.sep) return posixPath\n  const prefix = notBlank(hostname)\n    ? _path.sep + _path.sep + hostname + _path.sep\n    : \"\"\n  const split = posixPath.split(_path.posix.sep)\n  if (equalsIgnoreCase(split[0], hostname)) split.unshift()\n  return prefix + split.join(_path.sep)\n}\n\nexport function native2posix(nativePath: string): string {\n  if (blank(nativePath)) return nativePath\n  if (_path.sep === _path.posix.sep) return nativePath\n  return _path.posix.sep === _path.sep\n    ? nativePath\n    : nativePath.split(_path.sep).join(_path.posix.sep)\n}\n","import _path from \"path\"\nimport process from \"process\"\nimport { lazy, MemoizedThunk } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { uniqInPlace } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { isElectron, isMac } from \"../platform/Platform\"\nimport { ancestors, hasChildren } from \"./Ancestors\"\nimport { isPhotoStructureDmg } from \"./IgnorableMountpoint\"\n\nexport const execDir = lazy(() => _path.dirname(process.execPath))\n\nfunction pathTo(...child: string[]): MemoizedThunk<string> {\n  return lazy<string>(() => _path.join(ProjectPath.Root() as string, ...child))\n}\n\nexport const ProjectPath = {\n  Root: lazy(() => {\n    const projectDirs = [\"data\", \"public\", \"views\"]\n    const dirs: string[] = []\n    if (isDocker()) {\n      dirs.push(\"/opt/photostructure\")\n    }\n    if (isElectron) {\n      dirs.push(\n        _path.join(execDir(), \"resources\"), // win electron\n        _path.join(execDir(), \"..\", \"Resources\") // mac electron\n      )\n    }\n    dirs.push(...compactBlanks([execDir(), process.cwd(), __dirname]))\n    uniqInPlace(dirs)\n    for (const dir of dirs) {\n      if (hasChildren(dir, projectDirs)) return dir\n      // don't go too far up:\n      for (const parent of ancestors(dir).slice(0, 4)) {\n        if (hasChildren(parent, projectDirs)) return parent\n        const npx = _path.join(dir, \"node_modules\", \"photostructure\")\n        if (hasChildren(npx, projectDirs)) return npx\n      }\n    }\n    return mkLogger(\"fs.ProjectPath\").throw(\n      \"Failed to find project root. Looked in \" + dirs\n    )\n  }),\n  Bin: pathTo(\"bin\"), // only present in docker and node\n  Data: pathTo(\"data\"),\n  ICC: pathTo(\"data\", \"icc\"),\n  Migrations: pathTo(\"data\", \"migrations\"),\n  Public: pathTo(\"public\"),\n  Tools: pathTo(\"tools\"),\n  Views: pathTo(\"views\"),\n  isInDMG: function (projectPathRoot?: string) {\n    if (!isMac) return false\n\n    // If PhotoStructure.app has a sibling called .background with a\n    // nobg-background.tiff, we're still in the DMG, but that will break if we\n    // change the DMG background. We could also check to see that we live in an\n    // Applications directory, but that's also not guaranteed.\n    return isPhotoStructureDmg(projectPathRoot ?? ProjectPath.Root())\n  }\n}\n","import * as fs from \"fs\"\nimport { readFile } from \"fs-extra\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { mkLogger } from \"../Logger\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\n\nconst logger = lazy(() => mkLogger(\"fs.ReadFile\"))\n\nexport async function readFileMaybe(\n  nativePath: string,\n  errLogLevel: LogLevel = LogLevels.info\n): PromiseMaybe<Buffer> {\n  try {\n    return await readFile(nativePath)\n  } catch (err) {\n    logger().log(errLogLevel, \".readFileMaybe(\" + nativePath + \")\", err)\n    return\n  }\n}\n\nexport function readFileSync(nativePath: string): Maybe<Buffer> {\n  try {\n    return fs.readFileSync(nativePath)\n  } catch {\n    //\n  }\n  return\n}\n\nexport function intFromFileSync(nativePath: string): Maybe<number> {\n  return logger().tap({\n    msg: \"intFromFileSync()\",\n    result: toInt(readFileSync(nativePath)?.toString(), {\n      defaultValue: undefined\n    }),\n    meta: { nativePath }\n  })\n}\n","import { close, open, read, stat } from \"fs-extra\"\nimport { mapGte0 } from \"../Number\"\n\n/**\n * @param position where to begin reading from in the file\n * @param length the number of bytes to read\n * @throws if fs.open or fs.read throws\n */\nexport async function readFilePart_({\n  nativePath,\n  position = 0,\n  length\n}: {\n  nativePath: string\n  position?: number\n  length?: number\n}) {\n  let fd = -1\n  try {\n    // only stat() if the length is not provided:\n    const bufLen = length ?? (await stat(nativePath)).size - position\n    const b = Buffer.alloc(bufLen)\n    fd = await open(nativePath, \"r\")\n    return await read(fd, b, 0, bufLen, position)\n  } finally {\n    mapGte0(fd, close)\n  }\n}\n","import { readFile } from \"fs-extra\"\nimport { splitCompactLines } from \"./CRLF\"\n\nexport async function readLines_(nativePath: string): Promise<string[]> {\n  return splitCompactLines(await readFile(nativePath))\n}\n","import { Readable } from \"stream\"\n\nexport class ReadableBuffer extends Readable {\n  constructor(buffer: Buffer | string) {\n    super()\n    this.push(buffer)\n    this.push(null)\n  }\n}\n","import fsp from \"fs/promises\"\nimport { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toGt0 } from \"../../fe/Number\"\nimport {\n  Timeout,\n  thenOrTimeout,\n  thenOrTimeoutAt,\n  toNotTimeout\n} from \"../../fe/ThenOrTimeout\"\nimport { FifoSet } from \"../FifoSet\"\nimport { mkLogger } from \"../Logger\"\nimport { onTimeout } from \"../async/TimeoutHandler\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Settings } from \"../settings/Settings\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { FileCache } from \"./FileCache\"\nimport { SimpleDirent } from \"./SimpleDirent\"\nimport { statTimeoutMs } from \"./StatTimeout\"\n\nexport interface CachedReaddir {\n  ts: number\n  path: string\n  result: SimpleDirent[]\n}\n\nexport const ReadDirCacheName = \"readdircache\"\n\nexport const readdirCacheDir = lazy(() =>\n  join(Settings.cacheDir.valueOrDefault, ReadDirCacheName)\n)\n\nconst logger = lazy(() => mkLogger(\"fs.Readdir\"))\n\nexport async function clearReaddirCaches() {\n  try {\n    await fsp.rm(readdirCacheDir(), { force: true, recursive: true })\n  } catch (error) {\n    logger().warn(\"clearReaddirCaches(): failed\", { error })\n  }\n}\n\nconst path2cache = lazy(\n  () =>\n    new FileCache<SimpleDirent[]>({\n      name: \"fs.readdir\",\n      maxSize: 256,\n      timeoutMs: commandTimeoutMs(),\n      clearEveryMs: minuteMs,\n      useFsCache: true,\n      fsCacheTtlMs: Settings.readdirCacheMs.valueOrDefault\n    })\n)\n\nexport function clearCachedReaddir(nativePath: string) {\n  if (!blank(nativePath)) {\n    path2cache.prior()?.delete(nativePath)\n  }\n}\n\nlater(() => {\n  Settings.cacheDir.watchLater(() => {\n    readdirCacheDir.clear()\n    void path2cache.prior()?.clear()\n    slowDirs.prior()?.clear()\n  })\n  ee().on(\"clearCache\", () => {\n    slowDirs.prior()?.clear()\n    // path2cache is a FileCache--they're already watching for \"clearCache\" and fileChanged.\n    return clearReaddirCaches()\n  })\n  ee().on(\"fileChanged\", nativePath =>\n    blank(nativePath) ? clearReaddirCaches() : clearCachedReaddir(nativePath)\n  )\n})\n\n// Only exposed for tests\nexport const slowDirs = lazy(() => new FifoSet<string>(256))\n\nexport async function isSlowDir(nativePath: string) {\n  if (blank(nativePath)) return false\n  if (slowDirs().has(nativePath)) return true\n  if (path2cache().has(nativePath)) {\n    slowDirs().add(nativePath)\n    return true\n  }\n  return false\n}\n\nexport function setSlowDir(nativePath: string) {\n  clearCachedReaddir(nativePath)\n  slowDirs().add(nativePath)\n}\n\nexport async function isCachedDir(nativePath: string) {\n  return path2cache().get(nativePath) != null\n}\n\nexport async function childDirectories_(nativePath: string): Promise<string[]> {\n  return (await readdir_(nativePath))\n    .filter(ea => ea.isDirectory)\n    .map(ea => join(nativePath, ea.basename))\n}\n\nexport async function readdir(\n  nativePath: string\n): PromiseMaybe<SimpleDirent[]> {\n  try {\n    return await (gt0(Settings.readdirCacheMs.valueOrDefault)\n      ? readdir_(nativePath)\n      : readdirUncached_(nativePath))\n  } catch (err) {\n    logger().warn(\"readdir() failed for \" + nativePath, err)\n    return\n  }\n}\n\n/**\n * @throws if readdir() fails.\n */\nexport async function readdir_(nativePath: string): Promise<SimpleDirent[]> {\n  return logger().tap({\n    level: \"trace\",\n    msg: \"readdir_(\" + nativePath + \")\",\n    result: await path2cache().getOrSetAsync(nativePath, () =>\n      _readdir_(nativePath)\n    )\n  })\n}\n\nexport function readdirCached(nativePath: string): Maybe<SimpleDirent[]> {\n  return path2cache().get(nativePath)\n}\n\nasync function _readdir_(nativePath: string): Promise<SimpleDirent[]> {\n  const ts = Date.now()\n  const timeoutAt = ts + statTimeoutMs() * 2\n\n  const p = readdirUncached_(nativePath)\n\n  // If readdir() completes quickly, don't bother with .json caching (which is\n  // expensive and generates a bunch of GC)\n\n  const quickResult = await thenOrTimeout(\n    p,\n    toGt0(Settings.fsCacheSlowMs.valueOrDefault) ?? statTimeoutMs()\n  )\n\n  if (quickResult === Timeout) {\n    onTimeout({ soft: false })\n  }\n\n  if (\n    quickResult !== Timeout &&\n    quickResult.length < Settings.readdirSizeCacheThresh.valueOrDefault\n  ) {\n    return quickResult\n  }\n\n  // Dang, we're dealing with a slow or very large directory.\n  logger().info(\"readdir(): slow or large dir\", { nativePath })\n  slowDirs().add(nativePath)\n\n  const result =\n    toNotTimeout(quickResult) ?? (await thenOrTimeoutAt(p, timeoutAt))\n\n  if (result === Timeout) {\n    return logger().throw(\"readdir() timeout\", { nativePath, doNotSend: true })\n  }\n\n  return result\n}\n\n/**\n * NOTE: CALLER SHOULD WRAP WITH A TIMEOUT!\n */\nexport async function readdirUncached_(\n  nativePath: string\n): Promise<SimpleDirent[]> {\n  const r = await fsp.readdir(nativePath, { withFileTypes: true })\n  return sortBy(\n    // this strips off the node 20 added \"path\" field:\n    r.map(ea => ({\n      basename: ea.name,\n      isFile: ea.isFile(),\n      isDirectory: ea.isDirectory()\n    })),\n    ea => [\n      ea.isFile, // < order files last\n      ea.basename.toLowerCase(), // < case insensitive sort (ish, but good enough here)\n      ea.basename // < for determinism with colliding FILE.txt and file.txt\n    ]\n  )\n}\n","import { CountingSet } from \"../CountingSet\"\nimport { Settings } from \"../settings/Settings\"\nimport { toPathnames } from \"./Path\"\nimport { SimpleFileOrString } from \"./SimpleFile\"\n\n/**\n * naïve detection of symlink loops\n */\nexport function seemsLikeSymlinkLoop(s: SimpleFileOrString): boolean {\n  const cs = new CountingSet()\n  for (const ea of toPathnames(s)) {\n    cs.incr(ea.toLowerCase().normalize())\n  }\n  return cs.max() > Settings.maxDuplicatePathElements.valueOrDefault\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { isBoolean } from \"../../fe/Boolean\"\n\nexport interface SimpleDirent {\n  /**  isFile */\n  isFile: boolean\n  /**  isDirectory */\n  isDirectory: boolean\n  /** full base name */\n  basename: string\n}\nexport function isSimpleDirent(d: any): d is SimpleDirent {\n  return (\n    d != null &&\n    notBlank(d.basename) &&\n    isBoolean(d.isFile) &&\n    isBoolean(d.isDirectory)\n  )\n}\n","import _fs from \"fs\"\nimport _path from \"path\"\nimport { blank } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe, MaybePromiseMaybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { equalsIgnoreCase, isString, stripPrefix } from \"../String\"\nimport { isWin } from \"../platform/Platform\"\nimport { NativePathed, resolve } from \"./Path\"\nimport { isSimpleDirent } from \"./SimpleDirent\"\n\n// BEST TYPE NAME EVAR\nexport type SimpleFileOrString = SimpleFile | string\n\nexport interface SimpleFile {\n  /**\n   * Absolute path\n   */\n  readonly nativePath: string\n  /**\n   * Absolute path elements\n   */\n  readonly pathnames: string[]\n  /**\n   * The file name including extension (if any) such as 'index.html'\n   */\n  readonly base: string\n  /**\n   * The file extension (if any) such as '.html'\n   */\n  readonly ext: string\n  /**\n   * The file name without extension (if any) such as 'index'\n   */\n  readonly name: string\n  /**\n   * The nativePath of the parent directory\n   */\n  readonly dir: string\n\n  /**\n   * True iff this directory has no parent\n   */\n  readonly isRoot: boolean\n\n  isFile(): SyncOrAsync<boolean>\n  isDirectory(): SyncOrAsync<boolean>\n  isFileSync(): boolean\n  isDirectorySync(): boolean\n\n  // No isSymbolicLink, as this method is only valid when using fs.lstat():\n  // https://nodejs.org/dist/latest-v14.x/docs/api/fs.html#fs_stats_issymboliclink\n\n  children(): MaybePromiseMaybe<this[]>\n  childNames(): MaybePromiseMaybe<string[]>\n  parent(): SyncOrAsync<Maybe<this>>\n\n  size(): SyncOrAsync<Maybe<number>>\n  mtimeMs(): SyncOrAsync<Maybe<number>>\n}\n\nexport function isSimpleFile(object: any): object is SimpleFile {\n  return (\n    object != null &&\n    // HEY FUTURE ME! Don't `instanceof DirectoryEntry` or BaseFile here: that\n    // causes a deploop\n    typeof object === \"object\" &&\n    !Array.isArray(object) &&\n    typeof object.nativePath === \"string\" &&\n    typeof object.base === \"string\" &&\n    typeof object.ext === \"string\" &&\n    typeof object.base === \"string\" &&\n    typeof object.dir === \"string\" &&\n    typeof object.isFile === \"function\"\n  ) // meh good enough\n}\n\nexport function toNativePath_(s: string | NativePathed) {\n  if (s == null) {\n    throw new Error(\"toNativePath(null)\")\n  }\n  if (blank(s)) {\n    throw new Error(\"toNativePath(blank)\")\n  }\n  if (isString(s)) {\n    // only resolve strings--if it has a nativePath, it's already resolved:\n    return resolve(s)\n  }\n  if (blank(s.nativePath)) {\n    throw new Error(`toNativePath(${stringify(s)})`)\n  }\n  return s.nativePath\n}\n\nexport function basename(s: SimpleFileOrString | _fs.Dirent) {\n  return s instanceof _fs.Dirent\n    ? s.name\n    : isSimpleFile(s)\n    ? s.base\n    : _path.basename(toNativePath_(s))\n}\n\nexport function dirname(s: SimpleFileOrString) {\n  return isSimpleFile(s) ? s.dir : _path.dirname(toNativePath_(s))\n}\n\nconst winDriveRE = /^[a-z]:$/i\n\nexport function rootDir(s: SimpleFileOrString): Maybe<string> {\n  // TODO: handle UNC paths\n  if (isSimpleFile(s)) {\n    const arr = s.pathnames\n    return isWin && arr[0].match(winDriveRE) != null ? arr[1] : arr[0]\n  } else {\n    const str = stripPrefix(s, \"/\") // ignore the initial \"/\"\n    const i = str.indexOf(_path.sep)\n    return i > 0 ? str.slice(1, i) : undefined\n  }\n}\n\nexport function findFileIndex(\n  needle: SimpleFile,\n  haystack: SimpleFile[]\n): number {\n  for (let i = 0; i < haystack.length; i++) {\n    if (haystack[i].nativePath === needle.nativePath) return i\n  }\n  for (let i = 0; i < haystack.length; i++) {\n    if (equalsIgnoreCase(haystack[i].nativePath, needle.nativePath)) return i\n  }\n  return -1\n}\n\nexport function isFileSync(s: SimpleFileOrString) {\n  if (blank(s)) return false\n\n  if (s instanceof _fs.Dirent) return s.isFile()\n\n  for (const ea of [s, (s as any)[\"dirent\"]]) {\n    if (isSimpleDirent(ea)) return ea.isFile // < not a method.\n  }\n\n  try {\n    const stat = _fs.statSync(toNativePath_(s))\n    return stat.isFile()\n  } catch {\n    return false\n  }\n}\n\nexport async function someSelfOrAncestor<T extends SimpleFile>(\n  sf: Maybe<T>,\n  predicate: (t: T) => SyncOrAsync<boolean>\n): Promise<boolean> {\n  if (sf == null) return false\n  const result = await predicate(sf)\n  return result === true || sf.isRoot\n    ? result\n    : someSelfOrAncestor(await sf.parent(), predicate)\n}\n\nexport async function firstSelfOrAncestor<T extends SimpleFile, R>(\n  sf: Maybe<T>,\n  predicate: (t: T) => SyncOrAsync<R>\n): PromiseMaybe<R> {\n  if (sf == null) return\n  const result = await predicate(sf)\n  return result != null || sf.isRoot\n    ? result\n    : firstSelfOrAncestor(await sf.parent(), predicate)\n}\n","import { Stats } from \"fs\"\nimport _fse from \"fs-extra\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { isDate, unixtime } from \"../../fe/Date\"\nimport { Maybe, MaybePromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { diff, isNumber } from \"../../fe/Number\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { onTimeout } from \"../async/TimeoutHandler\"\nimport { isRecentMs } from \"../date/Date\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\nimport { access, isStatRWX } from \"./Access\"\nimport { isEmptyStats } from \"./StatSync\"\nimport { statTimeoutMs } from \"./StatTimeout\"\n\nconst logger = lazy(() => mkLogger(\"fs.Stat\"))\n\nexport async function stat_(nativePath: Maybe<string>): Promise<Stats> {\n  if (blank(nativePath)) {\n    return logger().throw(\"stat_() for blank path\", {\n      nativePath,\n      retriable: false,\n      fatal: false\n    })\n  }\n  const start = Date.now()\n  try {\n    return await thenOrTimeoutError(\n      _fse.stat(nativePath), // < no throwIfNoEntry option for async stat()\n      statTimeoutMs(),\n      true\n    )\n  } finally {\n    const elapsedMs = Date.now() - start\n    if (elapsedMs > statTimeoutMs() / 2) {\n      logger().warn(\"soft timeout for \" + nativePath, { elapsedMs })\n      onTimeout({ soft: true })\n    }\n  }\n}\n\nexport function statMaybe(\n  nativePath: Maybe<string>,\n  logLevel: LogLevel = LogLevels.info\n): MaybePromiseMaybe<Stats> {\n  return blank(nativePath)\n    ? undefined\n    : stat_(nativePath).catch(error => {\n        logger().log(logLevel, \"stat() failed\", { error, nativePath })\n        return undefined\n      })\n}\n\nexport function statToType(a: Stats) {\n  return a.isDirectory() ? \"directory\" : a.isFile() ? \"file\" : \"special\"\n}\n\nfunction statFieldToComparable(ea: Maybe<number | Date>): Maybe<number> {\n  return isDate(ea) ? unixtime(ea) : isNumber(ea) ? ea : undefined\n}\n\n/**\n * Given `Stats` objects from the same path, is it likely that the file has\n * changed?\n */\nexport function whyStatNotEql(a: Maybe<Stats>, b: Maybe<Stats>) {\n  if (a == null || b == null) {\n    return (\n      \"both must be defined: \" +\n      (a == null ? \"null\" : \"stat\") +\n      \" ≠ \" +\n      (b == null ? \"null\" : \"stat\")\n    )\n  }\n  const aType = statToType(a)\n  const bType = statToType(b)\n  if (aType !== bType) {\n    return \"inconsistent file type: \" + aType + \" ≠ \" + bType\n  }\n  // no atime, and birthtime isn't settable on linux--we're assuming we're\n  // comparing the same path.\n  for (const field of [\"size\", \"mtime\"] as const) {\n    const aVal = a[field]\n    const bVal = b[field]\n    const delta = diff(statFieldToComparable(aVal), statFieldToComparable(bVal))\n    // mtime and birthtime may be fractional milliseconds off.\n    if (delta == null || delta > 1) {\n      return \"unmatched \" + field + \": \" + aVal + \" ≠ \" + bVal\n    }\n  }\n  return\n}\n\nexport function statEql(a: Maybe<Stats>, b: Maybe<Stats>) {\n  return whyStatNotEql(a, b) == null\n}\n\nexport async function exists(\n  nativePath: string,\n  logLevel: LogLevel = LogLevels.info\n) {\n  return null != (await statMaybe(nativePath, logLevel))\n}\n\n/**\n * @return if the file is missing or empty\n */\nexport async function isEmptyFile(\n  nativePath: string,\n  opts?: { emptyIsNew?: boolean; logLevel?: LogLevel }\n) {\n  const s = await statMaybe(nativePath, opts?.logLevel ?? LogLevels.trace)\n  return s == null || (opts?.emptyIsNew ?? true) ? isEmptyStats(s) : false\n}\n\nexport async function isNonEmptyFile(nativePath: string, minFileSize = 0) {\n  const s = await statMaybe(nativePath)\n  return s != null && s.isFile() && s.size >= minFileSize\n}\n\nexport async function nativePathIsFile(\n  nativePath: Maybe<string>,\n  logLevel = LogLevels.info\n): Promise<boolean> {\n  return true === (await statMaybe(nativePath, logLevel))?.isFile()\n}\n\nexport async function isDirectory(nativePath: Maybe<string>): Promise<boolean> {\n  return true === (await statMaybe(nativePath))?.isDirectory()\n}\n\nexport async function isReadableDirectory(\n  nativePath: Maybe<string>,\n  logLevel: LogLevel = LogLevels.trace\n): Promise<boolean> {\n  const stat = await statMaybe(nativePath, logLevel)\n  return (\n    stat != null && stat.isDirectory() && access({ stat, r: true, x: true })\n  )\n}\n\nexport async function isReadWriteableDirectory(\n  nativePath: Maybe<string>,\n  logLevel: LogLevel = LogLevels.trace\n): Promise<boolean> {\n  const stat = await statMaybe(nativePath, logLevel)\n  return stat != null && stat.isDirectory() && isStatRWX(stat)\n}\n\nexport async function isMtimeRecent(\n  nativePath: Maybe<string>,\n  staleMs: number\n): Promise<boolean> {\n  return isRecentMs((await statMaybe(nativePath))?.mtimeMs, staleMs)\n}\n\n/**\n * @return the uniq stat times, including birthtime and mtime (not atime or\n * ctime!)\n */\nexport function statTimes(s: Stats): number[] {\n  return uniq(\n    // birthtimeMs will be 0 on OSes that don't support it. remember that\n    // ctime is last-status-change-time, (directory-change-time), _not_\n    // create-time. We don't want ctime!\n    [s.birthtimeMs, s.mtimeMs].filter(ea => ea != null && ea !== 0)\n  )\n}\n","import fs from \"fs\"\nimport { resolve } from \"path\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isRecentMs } from \"../date/Date\"\nimport { access } from \"./Access\"\nimport { posix2native } from \"./PosixNative\"\n\nexport function statSync(nativePath: Maybe<string>) {\n  if (blank(nativePath)) return\n  try {\n    return fs.statSync(nativePath, { throwIfNoEntry: false })\n  } catch {\n    // only will throw on older node.js versions:\n    return\n  }\n}\n\nexport function nativePathExistsSync(nativePath: Maybe<string>) {\n  if (blank(nativePath)) return false\n  try {\n    return fs.existsSync(nativePath)\n  } catch {\n    return false\n  }\n}\n\nexport function nativePathSizeSync(nativePath: Maybe<string>): Maybe<number> {\n  return statSync(nativePath)?.size\n}\n\nexport function isFileSync(nativePath: string, minSize = 0): boolean {\n  const s = statSync(nativePath)\n  return s != null && s.isFile() && s.size >= minSize\n}\n\nexport function isEmptyFileSync(\n  nativePath: string,\n  opts: { emptyIsNew: boolean } = { emptyIsNew: true }\n) {\n  const s = statSync(nativePath)\n  return opts.emptyIsNew ? s == null : isEmptyStats(s)\n}\n\nexport function isMtimeRecentSync(\n  nativePath: Maybe<string>,\n  staleMs: number\n): boolean {\n  return isRecentMs(statSync(nativePath)?.mtimeMs, staleMs)\n}\n\nexport function isEmptyStats(s: Maybe<fs.Stats>) {\n  return s == null || (s.isFile() && s.size === 0)\n}\n\nexport function isDirectorySync(nativePath: Maybe<string>): boolean {\n  return statSync(nativePath)?.isDirectory() === true\n}\n\nexport function isReadableDirectorySync(nativePath: Maybe<string>): boolean {\n  const stat = statSync(nativePath)\n  return (\n    stat != null && stat.isDirectory() && access({ stat, r: true, x: true })\n  )\n}\n\nexport function isReadWriteableDirectorySync(\n  nativePath: Maybe<string>\n): boolean {\n  if (blank(nativePath)) return false\n  const stat = statSync(nativePath)\n  return (\n    stat != null &&\n    stat.isDirectory() &&\n    access({ stat, r: true, w: true, x: true })\n  )\n}\n\nexport function firstExistingDirectory(paths: Maybe<string>[]): Maybe<string> {\n  for (const ea of paths) {\n    if (notBlank(ea)) {\n      const d = resolve(ea)\n      if (isDirectorySync(d)) return d\n    }\n  }\n  return undefined\n}\n\nexport function posixPathExistsSync(posixPath: Maybe<string>) {\n  return blank(posixPath)\n    ? false\n    : nativePathExistsSync(posix2native(posixPath))\n}\n","import { Settings } from \"../settings/Settings\"\n\nexport function statTimeoutMs() {\n  return Settings.statTimeoutMs.valueOrDefault\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { Latch } from \"../../fe/Latch\"\n\nexport function onDataChunked(\n  r: NodeJS.ReadableStream,\n  sep: string | RegExp,\n  onData: (data: string) => any\n): Latch {\n  const c = new Chunker(sep, onData, true)\n  c.read(r)\n  return c.done\n}\n\n/**\n * Handles data streams that may come in with disjoint chunks (like `[\"hel\",\n * \"lo\\n\"]`)\n */\nexport class Chunker {\n  private incompleteChunk = \"\"\n  readonly done = new Latch()\n\n  constructor(\n    readonly sep: string | RegExp,\n    readonly onData: (data: string) => any,\n    readonly filterBlanks = true\n  ) {}\n\n  onChunk(chunk: string | Buffer) {\n    if (chunk == null) return\n    const s = this.incompleteChunk + chunk.toString()\n    const split = s.split(this.sep)\n    // If s is not terminated by a separator, the last element in the array will\n    // be non-blank. If the string ends in a separator, an empty string will be\n    // the last element of the array, and this \"clears out\" incompleteChunk (as\n    // we'd want), so both cases are handled appropriately here:\n    this.incompleteChunk = split.pop()!\n    split.forEach(ea => {\n      if (!this.filterBlanks || notBlank(ea)) {\n        this.onData(ea)\n      }\n    })\n  }\n\n  clear() {\n    this.onChunk(\"\")\n    if (notBlank(this.incompleteChunk)) this.onData(this.incompleteChunk)\n    this.incompleteChunk = \"\"\n  }\n\n  read(r: NodeJS.ReadableStream) {\n    r.on(\"data\", ea => this.onChunk(ea))\n    r.on(\"end\", () => {\n      this.clear()\n      void this.done.resolve()\n    })\n    return this\n  }\n}\n","import { WriteStream } from \"tty\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\n\nexport function streamEnded(s: Maybe<WriteStream>): boolean {\n  return (\n    s == null ||\n    !s.writable ||\n    s.destroyed ||\n    s.writableEnded ||\n    s.writableFinished\n  )\n}\n","import { ChildProcess } from \"child_process\"\nimport _n from \"net\"\nimport _s from \"stream\"\nimport { delay } from \"../../fe/Delay\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, MaybeNull } from \"../../fe/MaybeTypes\"\nimport { maybeCall } from \"../../fe/Object\"\nimport { NoOp } from \"../../fe/Thunk\"\nimport { Try } from \"../Object\"\nimport { ending } from \"../async/Endable\"\nimport { isIgnorableError } from \"../error/ErrorTypes\"\n\nexport class PassthroughStream extends _s.Duplex {\n  _write(chunk: any, encoding: BufferEncoding) {\n    this.push(chunk, encoding)\n  }\n}\n\n/**\n * Handles backpressure by optionally waiting for the drain event\n */\nexport async function writeAsync(\n  stream: _s.Writable,\n  data: string | Buffer\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    if (\n      false ===\n      stream.write(data, err => {\n        if (err) reject(err)\n      })\n    ) {\n      stream.once(\"drain\", resolve)\n    } else {\n      resolve()\n    }\n  })\n}\n\n// I don't want to just Pick<Writable, \"end\"> because I don't want to require\n// all the overloaded signatures as well.\nexport interface EndableStream {\n  end(chunk: any, cb?: () => void): void\n}\n\nexport async function endStream(\n  endable: MaybeNull<EndableStream>\n): Promise<void> {\n  if (endable == null) return\n  // Make sure we don't hang waiting for this stream:\n  Try(() => maybeCall(endable, \"unref\"))\n  if (ending()) {\n    // no need to wait for the end callback:\n    endable.end(null)\n  } else {\n    // Half-closes the socket (!!)\n    await new Promise<void>(resolve => endable.end(null, resolve))\n  }\n  await delay(50)\n\n  // Ensures that no more I/O activity happens on this socket\n  Try(() => maybeCall(endable, \"destroy\"))\n  return\n}\n\nexport interface ClosableStream {\n  close(callback: () => void): void\n}\n\nexport async function closeStream(\n  closable: Maybe<ClosableStream>\n): Promise<void> {\n  if (closable == null) return\n  Try(() => maybeCall(closable, \"unref\"))\n  if (ending()) {\n    closable.close(NoOp)\n  } else {\n    await new Promise<void>(resolve => closable.close(resolve))\n  }\n  // I don't think this is necessary (and caused errors with electron last year):\n  // await delay(50)\n  // Try(() => maybeCall(closable, \"destroy\"))\n  return\n}\n\nexport function onChildError(\n  cp: ChildProcess,\n  f: (src: \"cp\" | \"stdin\" | \"stdout\" | \"stderr\", err: Error) => void\n): void {\n  ;[\n    { name: \"cp\", ea: cp },\n    { name: \"stdin\", ea: cp.stdin },\n    { name: \"stdout\", ea: cp.stdout },\n    { name: \"stderr\", ea: cp.stderr }\n  ].forEach(({ name, ea }) =>\n    map(ea, ea2 =>\n      ea2.on(\"error\", err => {\n        if (isIgnorableError(err) === false) f(name as any, err)\n      })\n    )\n  )\n}\n\nexport function closeStreams(cp: ChildProcess) {\n  for (const ea of [cp?.stdin, cp?.stdout, cp?.stderr]) {\n    try {\n      ea?.destroy()\n    } catch {\n      //\n    }\n  }\n}\n\nexport type Pipeline = [\n  NodeJS.ReadableStream,\n  ...(NodeJS.ReadWriteStream | NodeJS.WritableStream)[]\n]\n\nexport function remoteDesc(s: _n.Socket): string {\n  return s.destroyed\n    ? \"destroyed\"\n    : `${s.remoteFamily}:${s.remoteAddress}:${s.remotePort}`\n}\n\nexport class ByteCounter extends _s.Transform {\n  private bytes = 0\n  constructor(readonly onProgress: (bytes: number) => any) {\n    super({\n      transform: (\n        chunk: any,\n        _encoding: BufferEncoding,\n        callback: _s.TransformCallback\n      ) => {\n        this.onProgress((this.bytes += chunk.length))\n        callback(chunk)\n      }\n    })\n  }\n}\n","import { createWriteStream } from \"fs\"\nimport { DateTime } from \"luxon\"\nimport { unparse } from \"papaparse\"\nimport { Writable } from \"stream\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { dayMs } from \"../../fe/Date\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gte } from \"../../fe/Number\"\nimport { entries, keys } from \"../../fe/Object\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { wrap } from \"../../fe/String\"\nimport { TimeoutError } from \"../../fe/TimeoutError\"\nimport { toS } from \"../../fe/toS\"\nimport { BoundedList } from \"../BoundedList\"\nimport { isTest } from \"../NodeEnv\"\nimport { diff } from \"../Set\"\nimport { stdoutWrite } from \"../StdoutWrite\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { filestamp } from \"../date/Filestamp\"\nimport { librarySyncReportsDir } from \"../dir/LibraryDirs\"\nimport { logDir } from \"../dir/LogDir\"\nimport { errorToS } from \"../error/Error\"\nimport { InternalErrorFlag } from \"../error/ErrorFlags\"\nimport { stack } from \"../error/stack\"\nimport { isCsvExt } from \"../fs/FileExt\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { endStream } from \"../fs/Streams\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { Settings } from \"../settings/Settings\"\nimport { Newline } from \"./CRLF\"\nimport { writeTextfile_ } from \"./WriteFile\"\n\nexport const AssetFileSyncStates = strEnum(\n  \"noop\",\n  \"deleted\",\n  \"skipped\",\n  \"synced\",\n  \"unknown\"\n)\nexport type AssetFileSyncState = StrEnumKeys<typeof AssetFileSyncStates>\n\nexport const SyncFileStates = strEnum(\n  ...AssetFileSyncStates.values,\n  \"rejected\",\n  \"failed\",\n  \"timeout\",\n  \"enqueued\",\n  \"started\",\n  \"copied\",\n  \"note\"\n)\nexport type SyncFileState = StrEnumKeys<typeof SyncFileStates>\n\nexport const FileDoneStates = diff<SyncFileState>(SyncFileStates.values, [\n  \"enqueued\",\n  \"started\",\n  \"note\"\n])\n\nexport const SyncDirStates = strEnum(\n  \"scanning\",\n  \"canceled\",\n  \"failed\",\n  \"timeout\",\n  \"skipped\",\n  \"scanned\"\n)\nexport type SyncDirState = StrEnumKeys<typeof SyncDirStates>\n\nexport type SyncReportState = SyncDirState | SyncFileState\n\nexport function isRejectedState(state: Maybe<SyncReportState>): boolean {\n  return (\n    state == null ||\n    [\n      \"canceled\",\n      \"deleted\",\n      \"failed\",\n      \"rejected\",\n      \"timeout\",\n      \"unknown\"\n    ].includes(state)\n  )\n}\n\nconst FileStateDescriptions: Record<SyncFileState, string> = {\n  enqueued:\n    \"the file looks promising, and will be attempted to be imported soon.\",\n  rejected:\n    \"the file did not pass all import filters. The details column will explain why.\",\n  started:\n    \"the file was dequeued from the work queue, and is now going to be processed.\",\n  noop: `the current file metadata already matches your library database, so no operation was needed to sync this file.`,\n  deleted:\n    \"the file was determined to be deleted (the prior mountpoint exists, but the file doesn't exist anymore)\",\n  skipped: \"the file lives on a volume that isn't currently mounted.\",\n  synced: \"the file was imported.\",\n  failed: \"something went wrong. The details column will explain why.\",\n  timeout: \"the file wasn't processed in a reasonable amount of time.\",\n  copied: `\"automatic organization\" is enabled (copyAssetsToLibrary=true), and the photo or video was copied into your library originals directory. The details column will contain the source file path.`,\n  note: \"sidecars will be referenced here. The details column will specify which source file(s) it will be associated with.\",\n  unknown: \"an internal error occurred during processing.\"\n}\n\nconst DirStateDescriptions: Record<SyncDirState, string> = {\n  scanning: \"the directory contents are about to be read.\",\n  scanned: \"the directory contents were completely processed.\",\n  skipped: \"the directory was excluded. The details column will explain why.\",\n\n  canceled: \"PhotoStructure was shut down before the directory was processed.\",\n  failed: \"reading the directory contents failed.\",\n  timeout: \"reading the directory contents took too long.\"\n}\n\nfunction recordToBullets(obj: Record<string, string>): string {\n  return entries(obj)\n    .map(([k, v]) => `  - \"${k}\": ${v}`)\n    .join(\"\\n\")\n}\n\nconst WarnStates = new Set<string>([\n  AssetFileSyncStates.deleted,\n  SyncFileStates.failed,\n  SyncFileStates.timeout,\n  SyncDirStates.canceled\n])\n\n// only used for typing, and so we can get a non-runtime-erased set of keys for\n// the header:\nclass SyncReportClass {\n  constructor(\n    readonly ts: number,\n    readonly at: string,\n    readonly path: string,\n    readonly state: SyncReportState,\n    readonly from: string,\n    readonly elapsedMs?: number,\n    readonly details?: string,\n    readonly url?: string\n  ) {}\n}\n\nexport const SyncReportHeaders = strEnum(\n  ...keys(\n    new SyncReportClass(\n      Date.now(), // ts\n      \"\", // at\n      \"\", // path\n      \"\" as any, //state\n      \"\", // from\n      0, // elapsedMs\n      \"\", // details\n      \"\" // url\n    )\n  )\n)\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SyncReportRow extends SyncReportClass {}\nexport type SyncProgress = Omit<SyncReportClass, \"ts\" | \"at\">\nexport type WrapSyncProgress = Partial<Omit<SyncProgress, \"state\">> &\n  Pick<SyncProgress, \"state\"> & { error?: string }\n\nexport function syncReportDir() {\n  // in production we shouldn't need a sync report unless we have a library, but\n  // when testing within core, we won't always have a library set up.\n  return librarySyncReportsDir() ?? PosixFile.for(logDir()).join(\"sync-reports\")\n}\n\nexport function syncReportReadme(): PosixFile {\n  return syncReportDir().join(\"README.txt\")\n}\n\nexport const ensureSyncReportReadme = lazy(() =>\n  writeTextfile_(\n    syncReportReadme().nativePath,\n    wrap(\n      `\n\nHowdy from PhotoStructure!\n\nThis directory contains your recent \"sync reports\". \n\nThese files are written as your scan paths are examined for photos and videos.\n\nPhotoStructure creates a new file when it restarts and when it completes importing a given scan path directory.\n\nThese CSV files can be opened with most spreadsheet applications, like LibreOffice.\n\n\nColumn descriptions\n===================\n\nThe \"ts\" column is the timestamp for the row, in millis from 1970-01-01. Most spreadsheet applications don’t know how to parse these values, though, so we also add the at column.\n\nThe \"at\" column is ts in ISO format with only second resolution, and should be parsable by most spreadsheet software.\n\nThe \"path\" column is the native path of the directory or file.\n\nThe \"state\" column explains why that row was added.\n\nThe \"from\" column specifies which codepath added the sync report row.\n\nThe \"elapsedMs\" column is only added to rows completing a given path, and records how long that process took.\n\nThe \"details\" column will include information about the path, like why a given file or folder were rejected.\n\nThe \"url\" column is only added to rows when a file or directory is imported. You may need to adjust the domain name of the URL to make it work correctly (it defaults to localhost).\n\n\nDirectory state values\n======================\n\nThe \"state\" column for directories will be\n\n${recordToBullets(DirStateDescriptions)}\n\n\nFile state values\n=================\n\nThe \"state\" column for files will be\n\n${recordToBullets(FileStateDescriptions)}\n\n\nSee https://photostructure.com/go/sync-reports\n\n`,\n      { maxLineLen: 80 }\n    ).join(\"\\n\")\n  )\n)\n\nfunction mkSyncReportPath() {\n  const dt = DateTime.now()\n  return syncReportDir().join(\n    dt.toFormat(\"y-MM-dd\"),\n    filestamp() + \"-sync-report.csv\"\n  )\n}\n\nexport async function recentSyncReports(agoMs = dayMs) {\n  const min_mtime = Date.now() - agoMs\n  return syncReportDir().descendants(\n    async ea => isCsvExt(ea) && gte(await ea.mtimeMs(), min_mtime)\n  )\n}\n\nexport const syncReport = lazy(() => new SyncReport())\n\nexport class SyncReport extends EndableWrapper {\n  #outputFile: Maybe<PosixFile>\n  #output: Maybe<Writable>\n  #rowCount = 0\n  readonly outputFiles = new BoundedList<string>(64)\n\n  constructor() {\n    super(\n      `fs.SyncReport()`,\n      () => {\n        return this.close()\n      },\n      EndableRanks.service\n    )\n    void ensureSyncReportReadme()\n  }\n\n  get outputNativePath() {\n    return this.#outputFile?.nativePath\n  }\n\n  get rowCount() {\n    return this.#rowCount\n  }\n\n  onProgress(s: SyncProgress) {\n    if (s == null || blank(s.path) || blank(s.state)) {\n      return this.logger.error(\".onProgress(): invalid input\", {\n        s,\n        from: stack()\n      })\n    } else {\n      this.logger.log(\n        WarnStates.has(s.state) ? LogLevels.warn : LogLevels.info,\n        \"onProgress()\",\n        s\n      )\n      const ts = Date.now()\n      const rowObj: SyncReportRow = {\n        ts,\n        at: new Date(ts).toISOString(),\n        path: s.path,\n        state: s.state,\n        from: s.from,\n        details: toS(s.details).trim().replace(/\\r?\\n/gm, \"; \"),\n        url: s.url, // OpenOffice doesn't auto-link angle-bracket-wrapped urls SAD\n        elapsedMs: s.elapsedMs\n      }\n      const row = unparse([rowObj], {\n        header: false,\n        columns: SyncReportHeaders.values\n      })\n      this.output.write(row + Newline, err => {\n        if (err != null) {\n          this.logger.error(\"Failed to write\", err)\n        }\n      })\n      if (++this.#rowCount > Settings.syncReportMaxRows.valueOrDefault) {\n        void this.close()\n      }\n    }\n  }\n\n  /**\n   * Run the given function `fn_`, ensuring both start and finish rows are\n   * written\n   *\n   * @throws any error thrown by `fn_` after writing an error report row\n   */\n  async wrap_<T extends WrapSyncProgress>({\n    path,\n    from,\n    fn_\n  }: {\n    path: string\n    from: string\n    fn_: () => Promise<T>\n  }): Promise<T> {\n    const start = Date.now()\n    this.onProgress({\n      path,\n      from,\n      state: SyncFileStates.started\n    })\n    try {\n      const result = await fn_()\n      const state =\n        result.state ??\n        (result.error != null ? SyncFileStates.failed : SyncFileStates.unknown)\n      if (state === SyncFileStates.unknown) {\n        this.logger.error(\n          from + \" returned result with no state!\" + InternalErrorFlag,\n          { path, result }\n        )\n      }\n      syncReport().onProgress({\n        path,\n        from,\n        elapsedMs: Date.now() - start,\n        ...result,\n        state\n      })\n      return result\n    } catch (error) {\n      this.onProgress({\n        path,\n        from,\n        state:\n          error instanceof TimeoutError\n            ? SyncFileStates.timeout\n            : SyncFileStates.failed,\n        details: errorToS(error),\n        elapsedMs: Date.now() - start\n      })\n\n      throw error\n    }\n  }\n\n  get output() {\n    return this.#output ?? this.#setupOutput()\n  }\n\n  // must be sync\n  #setupOutput(): Writable {\n    this.#outputFile = mkSyncReportPath().ensureNewSync_({ emptyIsNew: false })\n    this.outputFiles.push(this.#outputFile.nativePath)\n    this.logger.info(\"Opening new report: \" + this.#outputFile)\n    if (isTest) stdoutWrite({ syncReport: this.#outputFile.nativePath }, false)\n    this.#output = createWriteStream(this.#outputFile.nativePath)\n    this.#output.write(\n      unparse([SyncReportHeaders.values], {\n        header: false\n      }) + Newline\n    )\n    return this.#output\n  }\n\n  /**\n   * Close the current sync report. The next onProgress() will create a new\n   * report.\n   */\n  async close(): PromiseMaybe<PosixFile> {\n    const output = this.#output\n    this.#output = undefined\n    this.#rowCount = 0\n    await endStream(output)\n    return output == null ? undefined : this.#outputFile\n  }\n}\n","import _os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { map } from \"../../fe/Maybe\"\nimport { firstDefinedLater } from \"../async/Later\"\nimport { FatalErrorFlag } from \"../error/ErrorFlags\"\nimport { isWin, platformName } from \"../platform/Platform\"\nimport { BaseFile } from \"./BaseFile\"\nimport { pathIfExists, pathTo } from \"./PathTo\"\nimport { ProjectPath } from \"./ProjectPath\"\n\nconst toolsDir = lazy(() => map(ProjectPath.Tools(), ea => BaseFile.for(ea)))\n\n/**\n * @param tool \".exe\" is appended if the local platform is windows.\n * @throws if tool is not found\n */\nexport async function pathToTool_(tool: string): Promise<string> {\n  if (true !== (await toolsDir()?.isDirectory())) {\n    // Electron builds always have a tools dir:\n    throw new Error(\"Cannot find project path for /tools/\" + FatalErrorFlag)\n  }\n\n  return firstDefinedLater<string>(\n    // See https://github.com/photostructure/base-tools/blob/main/Dockerfile\n    () => pathIfExists(toolsDir()?.join(\"bin\", tool)),\n\n    () => devPathToTool(tool),\n    // system-installed tool:\n    () => systemPathToTool(tool)\n  ) as any\n}\n\nfunction devPathToTool(tool: string) {\n  return pathIfExists(\n    toolsDir()?.join(\n      platformName + \"-\" + _os.arch(),\n      tool + (isWin ? \".exe\" : \"\")\n    )\n  )\n}\n\nasync function systemPathToTool(tool: string): Promise<string> {\n  return firstDefinedLater<string>(\n    // system-installed tool:\n    () => pathTo(tool),\n    () => {\n      throw new Error(\"Cannot find path for \" + tool)\n    }\n  ) as any\n}\n\nexport const dcrawEmuNativePath_ = lazy(() => {\n  return pathToTool_(\"dcraw_emu\")\n})\nexport const rawIdentifyNativePath_ = lazy(() => {\n  return pathToTool_(\"raw-identify\")\n})\nexport const jpegtranNativePath_ = lazy(() => {\n  return pathToTool_(\"jpegtran\")\n})\nexport const sqliteNativePath_ = lazy(() => {\n  return pathToTool_(\"sqlite3\")\n})\n","import fse from \"fs-extra\"\nimport { utimes } from \"utimes\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { isDate } from \"../../fe/Date\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { compactValues, keys } from \"../../fe/Object\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { Settings } from \"../settings/Settings\"\nimport { mkdirp_ } from \"./Path\"\nimport {\n  SimpleFile,\n  SimpleFileOrString,\n  dirname,\n  toNativePath_\n} from \"./SimpleFile\"\nimport { statMaybe } from \"./Stat\"\nimport { statTimeoutMs } from \"./StatTimeout\"\n\n// const logger = lazy(() => mkLogger(\"fs.Touch\"))\n\nfunction toMs(d: number | Date | undefined): Maybe<number> {\n  return d == null\n    ? undefined\n    : isDate(d)\n    ? d.getTime()\n    : gt0(d)\n    ? d\n    : undefined\n}\n\nexport async function touch_(args: {\n  file: SimpleFileOrString\n  ensureFile?: boolean\n  atimeMs?: number | Date\n  mtimeMs?: number | Date\n  btimeMs?: number | Date\n  reference?: SimpleFile\n}): Promise<void> {\n  const ensureFile = args.ensureFile ?? true\n  if (args.file == null || blank(args.file))\n    throw new Error(\"can't touch blank path\")\n  const nativePath = toNativePath_(args.file)\n  if (ensureFile) {\n    await mkdirp_(dirname(args.file))\n  }\n  const rStat = lazy(() => statMaybe(args.reference?.nativePath))\n  const mtimeMs = Math.round(\n    toMs(args.mtimeMs) ?? (await rStat())?.mtimeMs ?? Date.now()\n  )\n  const atimeMs = Math.round(\n    toMs(args.atimeMs) ?? (await rStat())?.atimeMs ?? mtimeMs\n  )\n  const btimeMs = map(toMs(args.btimeMs) ?? (await rStat())?.birthtimeMs, ea =>\n    Math.round(ea)\n  )\n  // logger().debug(\"touch_(): utime()\", { args, mtimeMs, atimeMs, btimeMs })\n  try {\n    await thenOrTimeoutError(\n      btimeMs != null && Settings.retainFileBirthtimes.valueOrDefault\n        ? utimes(\n            nativePath,\n            compactValues({\n              atime: atimeMs,\n              mtime: mtimeMs,\n              btime: btimeMs\n            })\n          )\n        : fse.utimes(nativePath, new Date(atimeMs), new Date(mtimeMs)),\n      statTimeoutMs()\n    )\n  } catch (error: any) {\n    if (ensureFile && error.code === \"ENOENT\") {\n      // fsp.ensureFile() has issues: the file may not exist when the returned\n      // promise is resolved.\n      await thenOrTimeoutError(fse.ensureFile(nativePath), statTimeoutMs())\n      if (keys(args).length > 1) {\n        // args has more than just \"file\":\n        await touch_({ ...args, ensureFile: false })\n      }\n    } else {\n      throw error\n    }\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { later } from \"../../fe/Delay\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { safeRandomUid } from \"../Random\"\nimport { version } from \"../Version\"\nimport { configDir } from \"../dir/ConfigDir\"\nimport { ee } from \"../event/EventEmitter\"\nimport { TokenRadix } from \"../math/Radix\"\nimport { Settings } from \"../settings/Settings\"\nimport { CreatedAt, JsonFileStore } from \"./JsonFileStore\"\nimport { PosixFile } from \"./PosixFile\"\nimport { SimpleFileOrString } from \"./SimpleFile\"\n\nexport interface UidFile extends CreatedAt {\n  uid: string\n  version: string\n  type: \"library\" | \"system\"\n}\n\nexport function mkuid() {\n  return safeRandomUid({ radix: TokenRadix, chars: 24, splitEveryN: 4 })\n}\n\nexport class UIDStore extends JsonFileStore<UidFile> {\n  constructor(\n    readonly rootDir: PosixFile,\n    readonly type: UidFile[\"type\"]\n  ) {\n    // we hide it, because why not:\n    super(\n      // system-uid.json and library-uid.json\n      rootDir.join(\".\" + type + \"-uid.json\"),\n      () => ({\n        uid: mkuid(),\n        version,\n        type: this.type,\n        createdAt: Date.now()\n      }),\n      f => f.hide()\n    )\n  }\n\n  /**\n   * @return just the UUID, not the UidFile struct\n   */\n  readonly readUid_ = lazy(async () => (await this.read_())?.uid)\n}\n\n// /**\n//  * We store this so the system UID stays consistent even if the local hostname\n//  * changes\n//  */\nexport const SystemUIDStore = lazy(() =>\n  map(configDir(), ea => new UIDStore(PosixFile.for(ea), \"system\"))\n)\n\nexport const LibraryUIDStore = lazy(libraryUidStore)\n\nexport function libraryUidStore(\n  libraryDir: Maybe<SimpleFileOrString> = Settings.libraryDir.valueOrDefault\n) {\n  return map(PosixFile.forMaybe(libraryDir), ea => new UIDStore(ea, \"library\"))\n}\n\nlater(() => {\n  ee().on(\"clearCache\", () => {\n    SystemUIDStore.unset()\n    LibraryUIDStore.unset()\n  })\n  Settings.libraryDir.watchLater(() => LibraryUIDStore.unset())\n})\n","import * as fsp from \"node:fs/promises\"\nimport trash from \"trash\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniqBy } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { OneOrMore, toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { mapAsyncSerial, thenNot } from \"../async/Promise\"\nimport { untilTrue } from \"../async/until\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Settings } from \"../settings/Settings\"\nimport { uri2nativePath } from \"../uri/FileURI\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\nimport { nativePathIsFile } from \"./Stat\"\n\nconst logger = lazy(() => mkLogger(\"fs.Unlink\"))\n\nexport interface TrashOrUnlinkResult {\n  nativePath: Maybe<string>\n  unlinked: boolean\n}\n\nexport async function unlink(arr: OneOrMore<SimpleFileOrString>) {\n  for (const ea of toA(arr)) {\n    try {\n      if (ea != null) await fsp.unlink(toNativePath_(ea))\n    } catch (error) {\n      logger().warn(\"Failed to unlink \" + ea, { error })\n    }\n  }\n}\n\nexport async function trashOrUnlinkFileUris_(\n  arr: { uri: string; mountpoint?: Maybe<string> }[]\n) {\n  // macOS soft-deletions are _not great_. Only do one at a time to work\n  // around https://github.com/sindresorhus/trash/issues/24\n\n  return mapAsyncSerial({\n    name: \"trashOrUnlinkFileUris_\",\n    arr: uniqBy(arr, ea => ea.uri),\n    f: async ({ uri, mountpoint }) => {\n      const nativePath = await uri2nativePath(uri, mountpoint)\n      if (blank(nativePath)) {\n        return logger().tap({\n          msg: \"trashOrUnlink: Failed to resolve URI to delete\",\n          result: undefined,\n          meta: { uri, mountpoint }\n        })\n      }\n\n      try {\n        return logger().tap({\n          msg: \"trashOrUnlink\",\n          result: await trashOrUnlinkNativePath_(nativePath),\n          meta: { nativePath, uri, mountpoint }\n        })\n      } catch (error) {\n        logger().error(\"Failed to unlink()\", {\n          nativePath,\n          uri,\n          mountpoint,\n          error\n        })\n      }\n      return\n    },\n    timeoutMs: commandTimeoutMs()\n  })\n}\n\n/**\n * @return true if the file was unlinked, false if the file was missing\n * @throws error on file permission error\n */\nexport async function trashOrUnlinkFileUri_(\n  uri: string,\n  mountpoint?: Maybe<string>\n): Promise<TrashOrUnlinkResult> {\n  const nativePath = await uri2nativePath(uri, mountpoint)\n  if (blank(nativePath)) {\n    return logger().tap({\n      msg: \"trashOrUnlinkFileUri_: null nativePath\",\n      result: { nativePath, unlinked: false },\n      meta: { uri, mountpoint }\n    })\n  } else {\n    return logger().tap({\n      msg: \"trashOrUnlinkFileUri_()\",\n      result: await trashOrUnlinkNativePath_(nativePath),\n      meta: {\n        uri,\n        mountpoint\n      }\n    })\n  }\n}\n\nexport async function trashOrUnlinkNativePath_(\n  nativePath: string\n): Promise<TrashOrUnlinkResult> {\n  if (!(await nativePathIsFile(nativePath))) {\n    return logger().tap({\n      level: \"warn\",\n      msg: \"trashOrUnlinkFileUri_: path is not a file, refusing to unlink.\",\n      result: { nativePath, unlinked: false }\n    })\n  }\n\n  if (Settings.trySoftDeletes.valueOrDefault) {\n    try {\n      await trash(nativePath, { glob: false })\n      if (\n        await untilTrue(() => thenNot(nativePathIsFile(nativePath)), {\n          timeoutMs: ShortCommandTimeoutMs\n        })\n      ) {\n        logger().info(\"soft-delete(\" + nativePath + \") successful\")\n        return { nativePath, unlinked: true }\n      } else {\n        logger().warn(\n          \"soft-delete(\" +\n            nativePath +\n            \") didn't seem to work: the file is still there?\"\n        )\n      }\n    } catch (error) {\n      logger().warn(\n        \"Tried to soft-delete, but that failed. We'll try to hard-delete.\",\n        { error }\n      )\n    }\n  }\n\n  await unlink(nativePath)\n  ee().emit(\"fileChanged\", nativePath)\n  logger().info(\"unlink(\" + nativePath + \") successful\")\n  return { nativePath, unlinked: true }\n}\n","import { Dirent } from \"fs\"\nimport { blank } from \"../../fe/Blank\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { basename, SimpleFile } from \"./SimpleFile\"\n\nexport const WipTimeoutMs = ShortCommandTimeoutMs\nexport const WipPrefix = \".WIP-\"\n\nexport function isWip(p: SimpleFile | string | Dirent): boolean {\n  return !blank(p) && basename(p).startsWith(WipPrefix)\n}\n","import { Writable, WritableOptions } from \"stream\"\nimport { Deferred } from \"../async/Deferred\"\n\n/**\n * Concats the result of a stream's data into a `Buffer`\n */\nexport class WritableToBuffer extends Writable {\n  private readonly deferred = new Deferred<Buffer>(\"WritableToBuffer\")\n  private readonly _buf: Buffer[] = []\n\n  constructor(opts?: WritableOptions) {\n    super(opts)\n    this.on(\"finish\", () => {\n      void this.deferred.resolve(this.data)\n    })\n    this.on(\"error\", err => {\n      void this.deferred.reject(err)\n    })\n  }\n\n  get data(): Buffer {\n    return Buffer.concat(this._buf)\n  }\n\n  /**\n   * Final result. Will only be resolved on finish.\n   */\n  get buffer(): Promise<Buffer> {\n    return this.deferred.promise\n  }\n\n  _write(chunk: any, encoding: BufferEncoding, next: () => void) {\n    this._buf.push(\n      Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding)\n    )\n    next()\n  }\n}\n","import _fse from \"fs-extra\"\nimport _path from \"path\"\nimport { ensureSuffix, wrap } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { ee } from \"../event/EventEmitter\"\nimport { crlf } from \"./CRLF\"\nimport { mkdirpSync_, mkdirp_ } from \"./Path\"\n\nexport async function writeFile_(nativePath: string, data: string | Buffer) {\n  const dir = _path.dirname(nativePath)\n  await mkdirp_(dir)\n  await _fse.writeFile(nativePath, data)\n  ee().emit(\"fileChanged\", dir) // because the parent directory has a new child!\n}\n\nexport async function writeText_(nativePath: string, ...txt: string[]) {\n  return writeFile_(\n    nativePath,\n    crlf(ensureSuffix(txt.map(toS).join(\"\\n\"), \"\\n\"))\n  )\n}\n\nexport async function writeTextfile_(nativePath: string, ...txt: string[]) {\n  const data = crlf(...wrap(txt))\n  await writeFile_(nativePath, data)\n}\n\nexport function writeFileSync_(nativePath: string, data: string | Buffer) {\n  const dir = _path.dirname(nativePath)\n  mkdirpSync_(dir)\n  _fse.writeFileSync(nativePath, data)\n  ee().emit(\"fileChanged\", dir) // because the parent directory has a new child!\n}\n\nexport function writeTextSync_(nativePath: string, ...txt: string[]) {\n  return writeFileSync_(\n    nativePath,\n    crlf(ensureSuffix(txt.map(toS).join(\"\\n\"), \"\\n\"))\n  )\n}\n","import _fs from \"fs\"\nimport { parse } from \"path\"\nimport _s from \"stream\"\nimport { pipeline } from \"stream/promises\"\nimport { createBrotliDecompress, createGunzip, createGzip } from \"zlib\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { parseJSON } from \"../JSON\"\nimport { mkLogger } from \"../Logger\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { mkdirp_ } from \"../fs/Path\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\nimport { ReadableBuffer } from \"./ReadableBuffer\"\nimport { Pipeline } from \"./Streams\"\nimport { WritableToBuffer } from \"./WritableToBuffer\"\n\nconst logger = lazy(() => mkLogger(\"fs.zcat\"))\n\n/**\n * @throw if the file is missing or unreadable\n */\nexport async function zcat_(\n  nativePath: string,\n  options?: { start?: number; end?: number }\n): Promise<string> {\n  return (await zCopyToBuffer_(nativePath, options)).toString()\n}\n\nexport async function zcat(\n  nativePath: string,\n  options?: { start?: number; end?: number }\n): PromiseMaybe<string> {\n  try {\n    return zcat_(nativePath, options)\n  } catch (err) {\n    logger().warn(\"zcat failed to read \" + nativePath, err)\n    return undefined\n  }\n}\n\nexport async function zpipe_(\n  nativePath: string,\n  outputStream: _s.Writable,\n  options?: { start?: number; end?: number }\n) {\n  const causes: Error[] = []\n  const p: Pipeline = [\n    _fs\n      .createReadStream(nativePath, { autoClose: true, ...options })\n      .on(\"error\", err => causes.push(err))\n  ]\n  if (nativePath.toLowerCase().endsWith(\".gz\")) {\n    p.push(createGunzip().on(\"error\", err => causes.push(err)))\n  } else if (nativePath.toLowerCase().endsWith(\".br\")) {\n    p.push(createBrotliDecompress().on(\"error\", err => causes.push(err)))\n  }\n  p.push(outputStream)\n  await pipeline(p)\n  if (isNotEmpty(causes)) {\n    throw new WrappedError(\"zPipe(\" + nativePath + \") failed\", {\n      causes,\n      path: nativePath\n    })\n  }\n}\n\n/**\n * `readFile`, but on-the-fly decompression for .gz and .br\n * @throws on error\n */\nexport async function zCopyToBuffer_(\n  nativePath: string,\n  options?: { start?: number; end?: number }\n): Promise<Buffer> {\n  const w = new WritableToBuffer()\n  await zpipe_(nativePath, w, options)\n  return await w.buffer\n}\n\nexport async function readJsonGz_<T = any>(nativePath: string) {\n  return parseJSON(await zCopyToBuffer_(nativePath)) as Maybe<T>\n}\n\nexport async function readJsonGz<T = any>(\n  nativePath: string,\n  level: LogLevel = LogLevels.warn\n) {\n  try {\n    return await readJsonGz_<T>(nativePath)\n  } catch (err) {\n    logger().log(level, \"readJsonGz(\" + nativePath + \"): failed\", err)\n    return\n  }\n}\n\nexport async function outputJsonGz_<T = any>(nativePath: string, obj: T) {\n  const json = stringify(obj)\n  await mkdirp_(parse(nativePath).dir)\n  await pipeline(\n    new ReadableBuffer(json),\n    createGzip(),\n    _fs.createWriteStream(nativePath, { autoClose: true })\n  )\n}\n\nexport async function outputJsonGz<T = any>(\n  nativePath: string,\n  obj: T,\n  level: LogLevel = LogLevels.warn\n) {\n  try {\n    await outputJsonGz_(nativePath, obj)\n  } catch (err) {\n    logger().log(level, \"outputJsonGz(\" + nativePath + \"): failed\", err)\n  }\n}\n","import { tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { errorToS } from \"../error/Error\"\nimport { exiftool, exiftoolVersion } from \"../tags/ExifTool\"\nimport { ver } from \"../Ver\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const exiftoolHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Tools\",\n    id: \"tools-exiftool\",\n    pendingMsg: \"Checking ExifTool…\",\n    settings: [],\n    later: async () => {\n      try {\n        const version = ver(await exiftoolVersion())\n        return {\n          level: \"ok\",\n          msg: [\"ExifTool is OK\", version, tt(exiftool().options.exiftoolPath)],\n          meta: { version }\n        }\n      } catch (error) {\n        return {\n          level: \"error\", // < bad enough to not run!\n          msg: \"Something's amiss with ExifTool: \" + errorToS(error as any)\n        }\n      }\n    }\n  })\n)\n","import { readdir } from \"fs/promises\"\nimport * as pf from \"platform-folders\"\nimport { uniq } from \"../../fe/Array\"\nimport { li, tt } from \"../../fe/BabyMarkdown\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { defer } from \"../../fe/Defer\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { sortByCaseInsensitive } from \"../String\"\nimport { defaultApplePhotosLibrary } from \"../dir/DefaultApplePhotosLibrary\"\nimport { homeDir } from \"../dir/HomeDir\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const externalDirsHealthCheck = defer(() =>\n  isDocker()\n    ? undefined\n    : HealthCheck.for({\n        section: \"System\",\n        id: \"media-directories\",\n        pendingMsg: \"Checking default photo directories…\",\n        settings: [],\n        rejectIsWarn: true,\n        later: async () => {\n          const arr = uniq([\n            homeDir(),\n            pf.getHomeFolder(),\n            pf.getPicturesFolder(),\n            pf.getVideosFolder(),\n            pf.getDesktopFolder(),\n            await defaultApplePhotosLibrary()\n          ]).sort()\n\n          const errs = new MultiMap<string, string>()\n          const dirs = uniq(arr.filter(notBlank)).sort()\n          for (const dir of dirs) {\n            try {\n              await readdir(dir, { withFileTypes: true })\n            } catch (err: any) {\n              if (notBlank(err?.code)) {\n                errs.add(err.code, dir)\n              }\n            }\n          }\n          errs.delete(\"ENOTDIR\") // don't care\n          errs.delete(\"ENOENT\") // don't care\n\n          if (errs.valueCount() > 0) {\n            return {\n              level: \"warn\",\n              msg: [\n                \"Problem trying to read the following directories:\",\n                li(\n                  sortByCaseInsensitive(errs.tuples(), ([, v]) => v).map(\n                    ([k, v]) => `${tt(v)}: ${k}`\n                  )\n                )\n              ]\n            }\n          } else {\n            return {\n              level: \"ok\",\n              msg: [\n                \"Default media directories are readable.\\nChecked the following:\",\n                li(dirs.map(tt))\n              ]\n            }\n          }\n        }\n      })\n)\n","import { lazy } from \"../../core/Lazy\"\nimport {\n  compact,\n  filterInPlace,\n  isEmpty,\n  isNotEmpty,\n  uniq,\n  uniqBy\n} from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { tt } from \"../../fe/BabyMarkdown\"\nimport { fmtDateShort, secondMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { shortStack } from \"../../fe/Error\"\nimport { flatten } from \"../../fe/Flatten\"\nimport {\n  BaseHealthCheckSummary,\n  HealthCheckLevel,\n  HealthCheckLevels,\n  HealthCheckResult,\n  HealthCheckSection,\n  HealthCheckSections,\n  HealthCheckSummary,\n  Link,\n  levelIsNotOK\n} from \"../../fe/HealthChecks\"\nimport { Later } from \"../../fe/Later\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { Comparable } from \"../../fe/Primitive\"\nimport { randomInt } from \"../../fe/Random\"\nimport { RunStateEnum, RunStates } from \"../../fe/RunStateEnum\"\nimport { isString, stripSuffix } from \"../../fe/String\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { thenOrTimeoutAs, thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { tot } from \"../../fe/Thunk\"\nimport { plur } from \"../../fe/Units\"\nimport { UnreachableCaseError } from \"../../fe/UnreachableCaseError\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { leastBy, partition } from \"../Array\"\nimport { BoundedList } from \"../BoundedList\"\nimport { CountingSet } from \"../CountingSet\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { debounce } from \"../async/Debounce\"\nimport { Deferred } from \"../async/Deferred\"\nimport { ending } from \"../async/Endable\"\nimport { MemoizedDeferred, lazyAsync } from \"../async/LazyAsync\"\nimport { Promises } from \"../async/Promises\"\nimport { libraryDirPosixFile } from \"../dir/LibraryDirs\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { errorToS } from \"../error/Error\"\nimport { isFatalError } from \"../error/ErrorTypes\"\nimport { LogLevel } from \"../log/LogLevel\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { HealthCheckId, HealthCheckIds } from \"./HealthCheckIds\"\nimport {\n  DockerVolumeLink,\n  WhatIsALibraryLink,\n  restartResetOrShutdownButtons\n} from \"./LibraryAdminLinks\"\n\nexport interface HealthCheckTest\n  extends Partial<Pick<HealthCheckResult, \"level\" | \"links\">> {\n  // no buttons!\n  msg: string | Maybe<string>[]\n}\n\nexport const HealthCheckLevelToLogLevel: Record<HealthCheckLevel, LogLevel> = {\n  error: \"error\",\n  \"no-library\": \"info\",\n  pending: \"debug\",\n  \"stop-sync\": \"info\",\n  warn: \"warn\",\n  ok: \"info\",\n  disabled: \"debug\"\n}\n\nconst HealthCheckLevelOrder = [\n  \"error\",\n  \"no-library\",\n  \"pending\",\n  \"stop-sync\",\n  \"warn\"\n] as const satisfies ReadonlyArray<HealthCheckLevel>\n\nfunction summaryForLevel(\n  level: (typeof HealthCheckLevelOrder)[number]\n): Pick<HealthCheckSummary, \"level\" | \"state\" | \"msg\" | \"links\" | \"buttons\"> {\n  switch (level) {\n    case \"error\":\n      return {\n        level,\n        state: \"failed\",\n        msg: [\n          \"Some health checks failed\",\n          \"Your library won't be synced until these issues are addressed.\"\n        ],\n        buttons: restartResetOrShutdownButtons()\n      }\n    case \"no-library\":\n      if (\n        isDocker() &&\n        true !== libraryDirPosixFile()?.isReadWriteExecutableSync()\n      ) {\n        return {\n          level,\n          state: \"failed\",\n          msg: [\n            \"Your docker container is missing a bind mount for \" +\n              tt(Settings.libraryDir.valueOrDefault)\n          ],\n          links: [DockerVolumeLink],\n          buttons: [\n            {\n              text:\n                \"Shut down and add a bind mount for \" +\n                Settings.libraryDir.valueOrDefault,\n              type: \"button\",\n              method: \"POST\",\n              url: \"/admin/shutdown\",\n              icon: \"power\"\n            }\n          ]\n        }\n      } else {\n        return {\n          level,\n          state: \"welcome\",\n          msg: [\"No PhotoStructure library is open\"],\n          links: [WhatIsALibraryLink],\n          buttons: [\n            {\n              text: \"Set up your library\",\n              type: \"button\",\n              method: \"GET\",\n              url: \"/welcome\",\n              icon: \"rocket_launch\"\n            }\n          ]\n        }\n      }\n\n    case \"pending\":\n      return {\n        level,\n        state: \"loading\",\n        msg: [\"Some health checks are still pending\"]\n      }\n    case \"stop-sync\":\n      return {\n        level,\n        state: \"ready\",\n        msg: [\n          \"Some health checks are preventing your library from being synced.\",\n          \"You should still be able to view your library, however.\"\n        ]\n      }\n    case \"warn\":\n      return {\n        level,\n        state: \"ready\",\n        msg: [\n          \"Some health checks are not OK\",\n          \"Your library will still be synced, but you may want to address these issues.\"\n        ]\n      }\n    default:\n      throw new UnreachableCaseError(level)\n  }\n}\n\nconst logger = lazy(() => mkLogger(\"health.HealthCheck\"))\n\nexport interface RepairTask extends Pick<HealthCheckResult, \"id\" | \"section\"> {\n  (): Promise<void>\n}\n\nexport type EnabledHealthCheckLevel = Exclude<HealthCheckLevel, \"disabled\">\n\nexport interface HealthCheckWatcher {\n  (result: {\n    hcr: HealthCheckResult\n    hc: HealthCheck\n    priorLevel: HealthCheckLevel\n  }): void\n}\n\nexport class HealthCheck {\n  /**\n   * Deferred that need to resolve or reject before #isLoading can be set to false\n   */\n  static #pending: Deferred<any>[] = []\n\n  static #p = new Promises(\"HealthCheck\")\n\n  static #vacuumPending() {\n    filterInPlace(this.#pending, ea => !ea.isPending)\n    return this.#pending\n  }\n\n  static traceLater_<T>(\n    desc: string,\n    fn: SyncOrAsync<T> | (() => SyncOrAsync<T>)\n  ): Deferred<T> | Promise<T> {\n    const d = new Deferred<T>(desc)\n    void d.catch(error => {\n      this.#errors.push(desc + \": failed: \" + errorToS(error))\n      this.onResultChange()\n    })\n    this.#vacuumPending().push(d)\n    try {\n      return d.observe(tot(fn))\n    } catch (error) {\n      void d.reject(error)\n      throw error\n    }\n  }\n\n  static #errors = new BoundedList<string>(10)\n  static #priorUniqSummaryStates = new BoundedList<{\n    state: RunStateEnum\n    ts: number\n  }>(10)\n\n  static priorRunStates() {\n    return this.#priorUniqSummaryStates.toA()\n  }\n\n  static #loadingMsgs = new BoundedList<{ at: number; msg: string }>(100)\n  static #shownMsgs = new CountingSet<string>()\n  static #instances: HealthCheck[] = []\n  static readonly all = lazy(() =>\n    Object.freeze(sortBy(this.#instances, ea => ea.sortBy))\n  )\n\n  static addError(error: Error | string | any) {\n    this.#errors.push(isString(error) ? error : errorToS(error))\n    this.onResultChange()\n  }\n\n  static addLoadingMsg(msg: string) {\n    this.#loadingMsgs.push({ at: Date.now(), msg })\n  }\n\n  static normalizeMsg(msg: string | Maybe<string>[]) {\n    return compact(toA(msg))\n      .map(toS)\n      .join(\"\\n\")\n      .replace(/\\n{3,}/g, \"\\n\\n\") // no more than 2 blank lines\n      .replace(/\\n{2,}  - /g, \"\\n  - \") // no blank lines before or between bullets\n      .trim() // no blank lines at start or end\n      .split(\"\\n\")\n  }\n\n  static unseenOrOldestPendingTrace() {\n    const pending = this.all()\n      .map(ea => ea.result())\n      .filter(ea => ea.isPending)\n    pending.push(...this.#vacuumPending())\n    logger().info(\"unseenOrOldestPendingTrace\", {\n      pending: pending.map(ea => ({ name: ea.name, id: ea.id })),\n      shownCounts: this.#shownMsgs.entriesByCountDesc()\n    })\n\n    // Show oldest unshown message first:\n    // If there's a message I haven't shown yet, that's great, show that.\n    return map(\n      leastBy(pending, ea => [this.#shownMsgs.get(ea.name), ea.startedAt]),\n      ea => ({\n        msg: this.findById(ea.name)?.pendingMsg ?? ea.name,\n        at: ea.startedAt\n      })\n    )\n  }\n\n  static loadingMsg() {\n    const result =\n      this.#loadingMsgs.shift() ?? this.unseenOrOldestPendingTrace()\n    map(result, ea => this.#shownMsgs.incr(ea.msg))\n    return logger().tap({\n      msg: \"loadingMsg\",\n      level: \"info\",\n      result: result?.msg,\n      meta: {\n        runState: this.summary().state\n      }\n    })\n  }\n\n  static enableAll() {\n    return this.disableAll(false)\n  }\n\n  static disableAll(b = true) {\n    // AKA skipAllHealthChecks\n    const skipHealthCheckIds = b ? HealthCheckIds.values : []\n    Settings.skipHealthCheckIds.envValue = skipHealthCheckIds\n    return HealthCheck.reset()\n  }\n\n  static findById(id: string) {\n    return this.#instances.find(ea => ea.id === id)\n  }\n\n  static testResults(): Deferred<HealthCheckResult>[] {\n    return this.all().map(ea => ea.result())\n  }\n\n  static async errorResults(): Promise<HealthCheckResult[]> {\n    return (await Promise.all(this.testResults())).filter(\n      ea => ea.level === \"error\"\n    )\n  }\n\n  static async notOkResults(): Promise<HealthCheckResult[]> {\n    return (await Promise.all(this.testResults())).filter(ea =>\n      levelIsNotOK(ea.level)\n    )\n  }\n\n  static runState() {\n    return this.summary().state\n  }\n\n  static readonly summary = lazy(() => {\n    return this.#summary()\n  })\n\n  static summaryFromResults(results: HealthCheckResult[]) {\n    const result = this.#summary(results)\n    this.summary.set(result)\n    return result\n  }\n\n  static #summary(results?: HealthCheckResult[]): HealthCheckSummary {\n    const result = logger().tap({\n      level: \"info\",\n      msg: \"#summary()\",\n      result: this.#_summary(results)\n    })\n    if (result.state !== this.#priorUniqSummaryStates.last?.state) {\n      this.#priorUniqSummaryStates.push({ state: result.state, ts: Date.now() })\n    }\n    return result\n  }\n\n  /** DO NOT USE. See #summary() or summary() */\n  static #_summary(results?: HealthCheckResult[]): HealthCheckSummary {\n    const all = this.all() as HealthCheck[]\n    results ??= this.all().map(ea => ea.toResultSync())\n\n    const pendingIds = results\n      .filter(ea => ea.level === \"pending\")\n      .map(ea => ea.id)\n    const pendingCount = pendingIds.length\n    const settledCount = all.length - pendingCount\n    const settled = pendingCount === 0\n\n    if (this.#errors.length > 0) {\n      return {\n        ...BaseHealthCheckSummary,\n        level: HealthCheckLevels.error,\n        settled,\n        pendingIds,\n        pendingCount,\n        settledCount,\n        ts: Date.now(),\n        state: RunStates.failed,\n        msg: [\n          \"Errors encountered during setup:\",\n          uniq(this.#errors.map(ea => errorToS(ea))).join(\"\\n---\\n\")\n        ],\n        buttons: restartResetOrShutdownButtons()\n      }\n    }\n\n    for (const level of HealthCheckLevelOrder) {\n      const hcWithLevel = results.filter(ea => ea.level === level)\n      if (isNotEmpty(hcWithLevel)) {\n        // Any other messages we should show?\n        const hcNotOK = results.filter(\n          ea => !hcWithLevel.includes(ea) && levelIsNotOK(ea.level)\n        )\n        const args = summaryForLevel(level)\n\n        return logger().tap({\n          msg:\n            \"summary() found \" +\n            hcWithLevel.length +\n            \" \" +\n            args.level +\n            \" checks\",\n          level: HealthCheckLevelToLogLevel[args.level],\n          result: {\n            ...BaseHealthCheckSummary,\n            level: args.level,\n            state: args.state,\n            links: args.links,\n            buttons: args.buttons,\n            settled,\n            pendingIds,\n            pendingCount,\n            settledCount,\n            linkIds: hcWithLevel.map(ea => ea.id),\n            ts: Date.now(),\n            msg: uniq([\n              ...args.msg,\n              ...(args.level === HealthCheckLevels.pending\n                ? []\n                : flatten([...hcWithLevel, ...hcNotOK].map(ea => ea.msg[0])))\n            ])\n          },\n          meta: { checks: hcWithLevel.map(ea => ea.id) }\n        })\n      }\n    }\n\n    return logger().tap({\n      msg: \"summary(): all are passing\",\n      result: {\n        ...BaseHealthCheckSummary,\n        level: HealthCheckLevels.ok,\n        state: RunStates.ready,\n        settled,\n        pendingIds,\n        pendingCount,\n        settledCount,\n        ts: Date.now(),\n        msg: [\n          \"All health checks pass\",\n          plur(results.length, \"health check\") + \" were run\",\n          \"Last updated: \" + fmtDateShort(Date.now())\n        ]\n      }\n    })\n  }\n\n  static allResults(): AsyncGenerator<HealthCheckResult> {\n    return Deferred.toAsyncIterable(this.all().map(ea => ea.result()))\n  }\n\n  static async awaitSettled(): Promise<HealthCheckSummary> {\n    let result = HealthCheck.summary()\n    // TODO SITS: This retry hack is horrible, but handles the case where\n    // HealthChecks.testResults() are in a limbo state of being\n    // partially-invalidated.\n    let retries = 2\n    if (!result.settled && retries-- > 0) {\n      logger().info(\"awaitSettled(): waiting for all to settle...\", {\n        summary: result\n      })\n      const results = await Promise.all(HealthCheck.testResults())\n      result = HealthCheck.summaryFromResults(results)\n    }\n    return logger().tap({\n      msg: \"awaitSettled(): done\",\n      level: \"info\",\n      result\n    })\n  }\n\n  static rerunSetup() {\n    this.reset()\n    return this.awaitSettled()\n  }\n\n  static onResultChange() {\n    HealthCheck.summary.unset()\n  }\n\n  static resetDebounced = debounce(() => HealthCheck.reset(), 50)\n\n  static reset() {\n    if (ending()) {\n      logger().warn(\"Rejecting reset() when ending()\", shortStack())\n      return\n    }\n    this.onResultChange()\n    this.#errors.clear()\n    this.#loadingMsgs.clear()\n    this.#shownMsgs.clear()\n    this.#pending.length = 0\n    for (const ea of this.all()) {\n      ea.reset()\n    }\n  }\n\n  static for(args: {\n    section: HealthCheckSection\n    id: HealthCheckId\n    pendingMsg: string\n    settings: (keyof typeof Settings)[]\n    later: Later<HealthCheckTest>\n    ordinal?: number\n    links?: Link[]\n    okLinks?: Link[]\n    warnLinks?: Link[]\n    noLibraryLinks?: Link[]\n    errorLinks?: Link[]\n    onReset?: () => void\n    ttlMs?: number\n    timeoutMs?: number\n    rejectIsWarn?: boolean\n  }) {\n    const prior = this.findById(args.id)\n    if (prior != null) {\n      throw new Error(\n        `Health check with id ${args.id} already exists in section ${prior.section}`\n      )\n    }\n    const result = new HealthCheck(\n      args.section,\n      args.id,\n      args.pendingMsg,\n      args.settings,\n      args.later,\n      args.ordinal,\n      args.links,\n      args.okLinks,\n      args.warnLinks,\n      args.noLibraryLinks,\n      args.errorLinks,\n      args.onReset,\n      args.ttlMs,\n      args.timeoutMs,\n      args.rejectIsWarn\n    )\n    this.#instances.push(result)\n    this.all.unset()\n    return result\n  }\n\n  readonly logger: Logger\n  readonly sortBy: Comparable[]\n  readonly result: MemoizedDeferred<HealthCheckResult>\n\n  private constructor(\n    readonly section: HealthCheckSection,\n    readonly id: HealthCheckId,\n    readonly pendingMsg: string,\n    readonly settings: (keyof typeof Settings)[],\n    later: Later<HealthCheckTest>,\n    readonly ordinal?: number,\n    private readonly links?: Link[],\n    private readonly okLinks?: Link[],\n    private readonly warnLinks?: Link[],\n    private readonly noLibraryLinks?: Link[],\n    private readonly errorLinks?: Link[],\n    readonly onReset?: () => void,\n    readonly ttlMs?: number,\n    readonly timeoutMs?: number,\n    readonly rejectIsWarn = false\n  ) {\n    this.sortBy = [\n      HealthCheckSections.ordinal(this.section),\n      ordinal ?? 999,\n      // id is included for determinism and as a backstop for lazy health\n      // checks that don't have an ordinal:\n      this.id\n    ]\n    this.logger = mkLogger(\"health.HealthCheck.\" + this.id)\n    this.result = lazyAsync({\n      desc: this.pendingMsg,\n      later: () =>\n        HealthCheck.#p.enqueue({\n          name: this.id,\n          l: () => this.#wrapLater(later)\n        }),\n      ttlMs,\n      timeoutMs\n    })\n    for (const ea of this.settings) {\n      Settings[ea].watchLater(() => this.reset())\n    }\n    this.result.watchLater({\n      onChange: () => HealthCheck.onResultChange(),\n      onError: () => HealthCheck.onResultChange()\n    })\n  }\n\n  isPending() {\n    return this.toResultSyncMaybe() == null\n  }\n\n  settledAtLeastOnce() {\n    return this.result.settledCount()\n  }\n\n  /**\n   * Clear the prior test result so that it will be re-evaluated on next\n   * access.\n   *\n   * NOTE: this forces this HealthCheck back to the pending state!\n   */\n  reset() {\n    this.result.unset()\n    this.onReset?.()\n  }\n\n  /**\n   * Rerun the test now\n   */\n  refresh() {\n    return this.result.refresh()\n  }\n\n  isSkipped() {\n    return Settings.skipHealthCheckIds.values.includes(this.id)\n  }\n\n  async #wrapLater(later: Later<HealthCheckTest>): Promise<HealthCheckResult> {\n    logger().debug(\"#wrapLater() starting\", { id: this.id })\n    try {\n      if (this.isSkipped()) {\n        return this.#toResult({\n          level: \"disabled\",\n          msg: [\"Disabled by \" + Settings.skipHealthCheckIds.key]\n        })\n      }\n      const timeoutMs = this.timeoutMs ?? commandTimeoutMs()\n      const result = await thenOrTimeoutError(\n        getDevEnvFlag(\"PS_SLOMO\")\n          ? // make .8 to avoid timeout, or 1.5 to exercise timeout error handling:\n            delay(randomInt(secondMs, timeoutMs * 0.3)).then(later)\n          : later(),\n        timeoutMs / 2\n      )\n      return this.#toResult(result)\n    } catch (err) {\n      return this.#toErrorResult(err)\n    }\n  }\n\n  // All results go through this method\n  #toResult(test: HealthCheckTest, src = \"#toResult\"): HealthCheckResult {\n    // normalize lines:\n    const msg = HealthCheck.normalizeMsg(test.msg)\n    const level =\n      test.level ??\n      (toS(msg).toLowerCase().includes(\"error\")\n        ? \"error\"\n        : toS(msg).toLowerCase().includes(\"warn\")\n        ? \"warn\"\n        : \"ok\")\n    const links = compact([\n      ...(test?.links ??\n        (level === \"ok\" || level === \"pending\"\n          ? this.okLinks\n          : level === \"warn\"\n          ? this.warnLinks\n          : level === \"no-library\"\n          ? this.noLibraryLinks\n          : level === \"error\"\n          ? this.errorLinks\n          : []) ??\n        []),\n      ...(this.links ?? [])\n    ])\n    const result: HealthCheckResult = {\n      section: this.section,\n      id: this.id,\n      ts: Date.now(),\n      level,\n      elapsedMs: this.result.elapsedMs(),\n      msg,\n      ...partitionLinks(links)\n    }\n    // don't bother to log if we're ending\n    return ending()\n      ? result\n      : this.logger.tap({\n          level: HealthCheckLevelToLogLevel[level],\n          msg: src,\n          result\n        })\n  }\n\n  #toErrorResult(error: any, level?: HealthCheckLevel): HealthCheckResult {\n    this.logger.warn(\"#toErrorResult\", { error, level })\n    const msg =\n      stripSuffix(this.pendingMsg, \"…\") +\n      \" failed:\\n\" +\n      (map(error, errorToS) ?? \"Unknown error\")\n    level ??=\n      this.rejectIsWarn ||\n      (!isFatalError(error) && msg.toLowerCase().includes(\"warn\"))\n        ? \"warn\"\n        : \"error\"\n    return this.#toResult({ msg, level }, \"#toErrorResult\")\n  }\n\n  toLevelSync() {\n    return this.result.prior()?.value?.level ?? \"pending\"\n  }\n\n  toResultSyncMaybe(): HealthCheckResult | undefined {\n    return this.result()?.value ?? this.result.lastValue()\n  }\n\n  toResultSync(): HealthCheckResult {\n    return (\n      this.toResultSyncMaybe() ?? {\n        section: this.section,\n        id: this.id,\n        ts: Date.now(),\n        level: \"pending\",\n        msg: [this.pendingMsg]\n      }\n    )\n  }\n\n  async resultOrTimeout(timeoutMs: number): Promise<HealthCheckResult> {\n    return (\n      (await thenOrTimeoutAs({ f: this.result(), timeoutMs, as: undefined })) ??\n      this.#toErrorResult(\"Timeout\", \"warn\")\n    )\n  }\n}\n\nfunction partitionLinks(\n  arr: Maybe<Link[]>\n): Pick<HealthCheckResult, \"links\" | \"buttons\"> {\n  if (isEmpty(arr)) return {}\n  const [buttons, links] = partition(\n    arr,\n    ea => ea.type === \"button\" || ea.method === \"POST\"\n  )\n  const result = {} as Pick<HealthCheckResult, \"links\" | \"buttons\">\n  if (isNotEmpty(links)) result.links = uniqBy(links)\n  if (isNotEmpty(buttons)) result.buttons = uniqBy(buttons)\n  return result\n}\n","import { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\n\nexport const HealthCheckIds = strEnum(\n  \"library-db\",\n  \"library-directories\",\n  \"library-free-space\",\n  \"library-nothing-to-sync\",\n  \"media-directories\",\n  \"nodejs-version\",\n  \"proc-memory-use\",\n  \"proc-not-in-dmg\",\n  \"proc-not-superuser\",\n  \"settings-env\",\n  \"settings-library\",\n  \"settings-system\",\n  \"sync-paused\",\n  \"system-load\",\n  \"system-volumes\",\n  \"tools-exiftool\",\n  \"tools-heif\",\n  \"tools-powershell\",\n  \"tools-sqlite-version\",\n  \"tools-video\",\n  \"volume-uuids\"\n)\nexport type HealthCheckId =\n  | StrEnumKeys<typeof HealthCheckIds>\n  | \"summary\"\n  | \"test-health-check\"\n","import { lazy } from \"../../core/Lazy\"\nimport { b, li, tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { HealthCheckLevels } from \"../../fe/HealthChecks\"\nimport { mkLogger } from \"../Logger\"\nimport { isProd } from \"../NodeEnv\"\nimport { env } from \"../env/Env\"\nimport { ee } from \"../event/EventEmitter\"\nimport { libraryHasSettings } from \"../settings/SettingsIO\"\nimport { exiftoolHealthCheck } from \"./ExiftoolHealthCheck\"\nimport { externalDirsHealthCheck } from \"./ExternalDirsHealthCheck\"\nimport { HealthCheck } from \"./HealthCheck\"\nimport { heifHealthCheck } from \"./HeifHealthCheck\"\nimport { libraryDirectoriesCheck } from \"./LibraryDirectoriesCheck\"\nimport { libraryFreeSpaceCheck } from \"./LibraryFreeSpaceCheck\"\nimport { memoryHealthCheck } from \"./MemoryHealthCheck\"\nimport { nodejsHealthCheck } from \"./NodeHealthCheck\"\nimport { notInDMGHealthCheck } from \"./NotInDMGHealthCheck\"\nimport { powershellHealthCheck } from \"./PowerShellHealthCheck\"\nimport { sqliteHealthCheck } from \"./SQLiteVersionHealthCheck\"\nimport { securityHealthCheck } from \"./SecurityHealthCheck\"\nimport { settingsEnvHealthCheck } from \"./SettingsEnvHealthCheck\"\nimport { settingsLibraryHealthCheck } from \"./SettingsLibraryHealthCheck\"\nimport { settingsSystemHealthCheck } from \"./SettingsSystemHealthCheck\"\nimport { systemLoadHealthCheck } from \"./SystemLoadHealthCheck\"\nimport { videoHealthCheck } from \"./VideoHealthCheck\"\nimport { volumeHealthCheck } from \"./VolumeHealthCheck\"\n\nconst logger = defer(() => mkLogger(\"health.HealthCheckSetup\"))\n\nexport const testHealthCheck = defer(() => {\n  return HealthCheck.for({\n    section: \"System\",\n    id: \"test-health-check\",\n    ordinal: 0,\n    settings: [],\n    pendingMsg: \"Test check…\",\n    later: async () => {\n      const level = HealthCheckLevels.validOrElse(\n        env().PS_TEST_HEALTH_CHECK_LEVEL,\n        HealthCheckLevels.ok\n      )\n      return {\n        level,\n        msg: [\n          `Test health check: ${level.toUpperCase()}`,\n          `These are ${b(\"details\")}:`,\n          li(\"alpha\", tt(\"bravo\"), \"charlie\")\n        ]\n      }\n    }\n  })\n})\n\nexport const healthCheckSetup = lazy(() => {\n  exiftoolHealthCheck()\n  heifHealthCheck()\n  libraryDirectoriesCheck()\n  libraryFreeSpaceCheck()\n  settingsEnvHealthCheck()\n  settingsSystemHealthCheck()\n  settingsLibraryHealthCheck()\n  externalDirsHealthCheck()\n  memoryHealthCheck()\n  nodejsHealthCheck()\n  notInDMGHealthCheck()\n  powershellHealthCheck()\n  securityHealthCheck()\n  sqliteHealthCheck()\n  systemLoadHealthCheck()\n  videoHealthCheck()\n  volumeHealthCheck()\n\n  if (!isProd) {\n    testHealthCheck()\n  }\n\n  let lastLibraryHasSettings = libraryHasSettings()\n\n  libraryHasSettings.watchLater(newValue => {\n    if (newValue != null && lastLibraryHasSettings !== newValue) {\n      logger().warn(\"libraryHasSettings changed. Resetting health checks.\", {\n        newValue\n      })\n      lastLibraryHasSettings = newValue\n      HealthCheck.resetDebounced()\n    }\n  })\n  for (const ea of [\"volumesChanged\", \"mountpointsChanged\", \"error\"] as const) {\n    ee().on(ea, () => {\n      logger().debug(\"Clearing health check cache\", { event: ea })\n      HealthCheck.resetDebounced()\n    })\n  }\n\n  ee().on(\"fatal\", err => HealthCheck.addError(err))\n})\n","import { tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { later } from \"../../fe/Delay\"\nimport { map } from \"../../fe/Maybe\"\nimport { ee } from \"../event/EventEmitter\"\nimport { getHeifSupportDetails } from \"../img/Heif\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const heifHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Tools\",\n    id: \"tools-heif\",\n    pendingMsg: \"Checking HEIF/HEIC tooling…\",\n    settings: [\"heifConvertPath\"],\n    links: [\n      {\n        text: \"Read about PhotoStructure HEIF support\",\n        url: \"https://photostructure.com/getting-started/heif-support/\",\n        icon: \"docs\"\n      }\n    ],\n\n    // if the HEIF tooling is not installed, we don't want to block the server\n    // from starting:\n    rejectIsWarn: true,\n\n    later: async () => {\n      const vtd = await getHeifSupportDetails()\n      if (vtd.ok) {\n        return {\n          level: \"ok\",\n          msg: [\"HEIF images will be imported\", vtd.version, map(vtd.path, tt)]\n        }\n      } else {\n        return {\n          level: \"warn\",\n          msg: [\"HEIF images will not be imported\", vtd.msg]\n        }\n      }\n    }\n  })\n)\n\nlater(() => {\n  ee().on(\"clearToolCache\", () => heifHealthCheck.prior()?.reset())\n})\n","import { compact } from \"../../fe/Array\"\nimport { Link } from \"../../fe/HealthChecks\"\nimport { libraryHasSettings } from \"../settings/SettingsIO\"\n\nexport const DockerVolumeLink: Link = {\n  type: \"link\",\n  text: \"Read about PhotoStructure docker volumes\",\n  url: \"https://photostructure.com/go/docker-volumes/\",\n  icon: \"docs\"\n}\n\nexport const WhatIsALibraryLink: Link = {\n  type: \"link\",\n  text: `What's a \"PhotoStructure library?\"`,\n  url: \"https://photostructure.com/faq/library/\",\n  icon: \"docs\"\n}\n\nexport function restartResetOrShutdownButtons(): Link[] {\n  return compact([\n    libraryHasSettings()\n      ? {\n          text: \"Try again\",\n          title: \"Restart the current library\",\n          type: \"button\",\n          method: \"POST\",\n          url: \"/admin/restart\",\n          icon: \"refresh\"\n        }\n      : undefined,\n    {\n      text: \"Change PhotoStructure library\",\n      title: \"Create a new library or switch to an existing library\",\n      type: \"button\",\n      method: \"POST\",\n      url: \"/admin/clear-library\",\n      icon: \"switch_folder\"\n    },\n    {\n      text: \"Exit PhotoStructure\",\n      title:\n        \"Shut down PhotoStructure. Your library will no longer be accessible until you re-launch PhotoStructure.\",\n      type: \"button\",\n      method: \"POST\",\n      url: \"/admin/shutdown\",\n      icon: \"power\"\n    }\n  ])\n}\n","import { li, tt } from \"../../fe/BabyMarkdown\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { defer } from \"../../fe/Defer\"\nimport { Link } from \"../../fe/HealthChecks\"\nimport { userDesc } from \"../UserInfo\"\nimport { libraryDirPosixFile, setupLibraryDirs_ } from \"../dir/LibraryDirs\"\nimport { errorToS } from \"../error/Error\"\nimport { isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { libraryHasSettings } from \"../settings/SettingsIO\"\nimport { HealthCheck, HealthCheckTest } from \"./HealthCheck\"\nimport { DockerVolumeLink } from \"./LibraryAdminLinks\"\n\nexport const libraryDirectoriesCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Library\",\n    id: \"library-directories\",\n    ordinal: 0,\n    pendingMsg: \"Checking library directories…\",\n    settings: [\"libraryDir\", \"originalsDir\", \"previewsDir\", \"cacheDir\"],\n    ttlMs: minuteMs,\n    links: [\n      {\n        text: `What's a \"PhotoStructure library?\"`,\n        icon: \"docs\",\n        url: \"https://photostructure.com/faq/library/\"\n      },\n      ...(isDocker()\n        ? [\n            {\n              text: `Read how to setup up Docker`,\n              icon: \"docs\",\n              url: \"https://photostructure.com/server/photostructure-for-docker/\"\n            }\n          ]\n        : [])\n    ] as Link[],\n\n    okLinks: [\n      {\n        type: \"button\",\n        text: \"Run library maintenance jobs\",\n        url: \"/admin/run-maintenance\",\n        method: \"POST\",\n        icon: \"handyman\"\n      }\n    ],\n    later: isDocker() ? testDockerLibraryDir : testLibraryDir\n  })\n)\n\nasync function verifyLibraryDirs_(): Promise<HealthCheckTest> {\n  const dirs = await setupLibraryDirs_()\n  if (libraryHasSettings()) {\n    return {\n      level: \"ok\",\n      msg: [\n        \"Library directories are OK\",\n        `Verified directory permissions for the following directories:`,\n        li(...dirs.map(d => tt(d)))\n      ]\n    }\n  } else {\n    return {\n      level: \"no-library\",\n      msg: [\"Your PhotoStructure library hasn't been set up yet\"]\n    }\n  }\n}\n\nasync function testDockerLibraryDir(): Promise<HealthCheckTest> {\n  const libraryDir = libraryDirPosixFile()\n  if (libraryDir == null) {\n    return {\n      level: \"error\", // < we can't recover from this. They didn't set up the bind mount correctly.\n      msg: [\n        `Something's amiss: ${tt(\"PS_LIBRARY_DIR\")} is blank`,\n        `The default is ${tt(\n          Settings.libraryDir.toEnvLine(Settings.libraryDir.defaultValue)\n        )}`\n      ]\n    }\n  }\n\n  // We can't just mkdir the library dir--it has to be a bind mount.\n  try {\n    if (!(await libraryDir.isReadWriteExecutable_())) {\n      return {\n        level: \"error\",\n        msg: [\n          `Your library directory, ${tt(libraryDir)}, is not read/write${\n            isWin ? \"\" : \"/execute\"\n          } by ${await userDesc()}`,\n          \"Please fix the permissions for this bind mount and restart the container.\"\n        ],\n        links: [DockerVolumeLink]\n      }\n    }\n    return await verifyLibraryDirs_()\n  } catch (error: any) {\n    return {\n      level: \"error\",\n      msg: [\n        `Your library directory, ${tt(\n          libraryDir\n        )}, can't be set up for ${await userDesc()}.`,\n        errorToS(error, { maxLen: 80 }),\n        \"Please fix the permissions for this bind mount and restart the container.\"\n      ],\n      links: [DockerVolumeLink]\n    }\n  }\n}\n\nasync function testLibraryDir(): Promise<HealthCheckTest> {\n  const libraryDir = libraryDirPosixFile()\n  if (libraryDir == null) {\n    return {\n      level: \"no-library\",\n      msg: \"No PhotoStructure library is open\"\n    }\n  }\n\n  // if we got to here, the directory is either missing or is read/write.\n  // If we have settings, we're all good:\n  if (!libraryHasSettings()) {\n    return {\n      level: \"no-library\",\n      msg: [\n        \"No PhotoStructure library is open\",\n        Settings.libraryDir.hasValue()\n          ? tt(Settings.libraryDir.toEnvLine())\n          : undefined\n      ]\n    }\n  }\n  try {\n    if (!(await libraryDir.isReadWriteExecutable_())) {\n      return {\n        level: \"no-library\",\n        msg: [\n          `Your library directory, ${tt(libraryDir)}, is not read/write${\n            isWin ? \"\" : \"/execute\"\n          } by ${await userDesc()}`,\n          \"Please fix the permissions or pick a new library directory.\"\n        ]\n      }\n    }\n    return await verifyLibraryDirs_()\n  } catch (error: any) {\n    return {\n      level: \"no-library\",\n      msg: [\n        `Your library directory, ${tt(\n          libraryDir\n        )}, can't be set up for ${await userDesc()}`,\n        errorToS(error, { maxLen: 80 }),\n        \"Please fix the permissions for this bind mount and restart the container.\"\n      ]\n    }\n  }\n}\n","import { uniq } from \"../../fe/Array\"\nimport { b, li, tt } from \"../../fe/BabyMarkdown\"\nimport { dayMs } from \"../../fe/Date\"\nimport { defer } from \"../../fe/Defer\"\nimport { gt0 } from \"../../fe/Number\"\nimport { tap } from \"../../fe/Object\"\nimport { GB, fmtBytes } from \"../../fe/Units\"\nimport { libraryDirPosixFile, setupLibraryDirs_ } from \"../dir/LibraryDirs\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { Settings } from \"../settings/Settings\"\nimport { Volume } from \"../volumes/Volume\"\nimport { bestVolumeForPath } from \"../volumes/Volumes\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const libraryFreeSpaceCheck = defer(() =>\n  tap(\n    HealthCheck.for({\n      section: \"Library\",\n      id: \"library-free-space\",\n      settings: [\n        \"libraryDir\",\n        \"minDiskFreeGb\",\n        \"originalsDir\",\n        \"previewsDir\",\n        \"cacheDir\"\n      ],\n      pendingMsg: \"Checking free space on library volume(s)…\",\n      ttlMs: dayMs,\n      later: async () => {\n        if (!gt0(Settings.minDiskFreeGb.valueOrDefault)) {\n          return {\n            level: \"disabled\",\n            msg: `Library disk free test disabled: ${tt(\n              Settings.minDiskFreeGb.key + \"=0\"\n            )}`\n          }\n        }\n\n        const libraryDir = libraryDirPosixFile()\n        if (libraryDir == null) {\n          return {\n            level: \"disabled\",\n            msg: `Library disk free test disabled: no library is open`\n          }\n        }\n        if (true !== (await libraryDir.isDirectory())) {\n          return {\n            level: \"disabled\",\n            msg: `Library disk free test disabled: ${tt(\n              libraryDir\n            )} is not a directory`\n          }\n        }\n\n        const toCheck: {\n          vol: Volume\n          paths: string[]\n        }[] = []\n\n        for (const pf of await setupLibraryDirs_()) {\n          const vol = await bestVolumeForPath(pf)\n          if (vol == null) {\n            return {\n              level: \"warn\",\n              msg: `Could not check for minimum disk free: no volume found for library path ${tt(\n                pf\n              )}`\n            }\n          }\n          let o = toCheck.find(ea => ea.vol.mountpoint === vol.mountpoint)\n          if (o == null) {\n            o = {\n              vol,\n              paths: []\n            }\n            toCheck.push(o)\n          }\n          o.paths.push(pf.nativePath)\n        }\n\n        const minFreeBytes = Settings.minDiskFreeGb.valueOrDefault * GB\n        const descriptions: string[] = []\n\n        for (const { vol, paths } of toCheck) {\n          const desc =\n            b(\n              `Volume ${tt(vol.mountpoint)} has ${fmtBytes(\n                vol.available\n              )} free.`\n            ) +\n            `\\nThis volume is used for these PhotoStructure directories:\\n${li(\n              uniq(paths).sort().map(tt)\n            )}`\n\n          if (\n            vol.available < minFreeBytes ||\n            getDevEnvFlag(\"PS_FORCE_FULLDISK\")\n          ) {\n            return {\n              level: \"stop-sync\",\n              msg:\n                \"Library volume is almost full\\n\" +\n                tt(Settings.minDiskFreeGb.key) +\n                \" is set to \" +\n                fmtBytes(minFreeBytes) +\n                \".\\n\" +\n                desc +\n                \"\\nPhotoStructure sync is automatically paused until you free up at least \" +\n                fmtBytes(minFreeBytes - vol.available) +\n                \" on \" +\n                vol.mountpoint\n            }\n          } else {\n            descriptions.push(desc)\n          }\n\n          if (vol.available < minFreeBytes * 0.75) {\n            return {\n              level: \"warn\",\n              msg: \"Library volume is almost full\" + desc\n            }\n          }\n        }\n        return {\n          level: \"ok\",\n          msg: [\n            \"Library free disk space is OK\",\n            ...descriptions,\n            \"\",\n            \"PhotoStructure sync will pause if free space drops below \" +\n              tt(Settings.minDiskFreeGb.key) +\n              \", set to \" +\n              fmtBytes(minFreeBytes) +\n              \".\"\n          ]\n        }\n      }\n    }),\n    ea => {\n      for (const setting of [\n        \"minDiskFreeGb\",\n        \"libraryDir\",\n        \"originalsDir\",\n        \"configDir\"\n      ] as const) {\n        Settings[setting].watchLater(() => ea.reset())\n      }\n    }\n  )\n)\n","import os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { li } from \"../../fe/BabyMarkdown\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { defer } from \"../../fe/Defer\"\nimport { HealthCheckLevel } from \"../../fe/HealthChecks\"\nimport { gt0 } from \"../../fe/Number\"\nimport { GB, MB, fmtBytes } from \"../../fe/Units\"\nimport { memoryUsageBytes, memoryUsageMb } from \"../Memory\"\nimport { serviceName } from \"../ServiceNames\"\nimport { Settings } from \"../settings/Settings\"\nimport { HealthCheck, HealthCheckTest } from \"./HealthCheck\"\n\nfunction asTest({\n  desc,\n  bytes,\n  level,\n  thresholdBytes\n}: {\n  desc: string\n  bytes: number\n  level: HealthCheckLevel\n  thresholdBytes: number\n}): HealthCheckTest {\n  return {\n    level,\n    msg: [\n      desc +\n        \" from \" +\n        serviceName() +\n        \" is \" +\n        (level === \"ok\" ? \"OK\" : \"high\") +\n        \".\",\n      li([\n        \"Current: \" + fmtBytes(bytes, 2),\n        \"Threshold: \" + fmtBytes(thresholdBytes, 2)\n      ])\n    ]\n  }\n}\n\nfunction memoryUsageTest(): HealthCheckTest {\n  if (os.totalmem() < GB) {\n    return {\n      level: \"warn\",\n      msg: \"PhotoStructure may need more than a GB of RAM to run, especially if your library is large.\"\n    }\n  } else if (\n    gt0(Settings.maxMemoryMb.valueOrDefault) &&\n    memoryUsageMb() > Settings.maxMemoryMb.valueOrDefault\n  ) {\n    return asTest({\n      level: \"error\",\n      desc: \"Used memory\",\n      bytes: memoryUsageBytes(),\n      thresholdBytes: Settings.maxMemoryMb.valueOrDefault * MB\n    })\n  } else if (\n    gt0(Settings.maxMemoryMb.valueOrDefault) &&\n    memoryUsageMb() > Settings.maxMemoryMb.valueOrDefault * 0.75\n  ) {\n    return asTest({\n      level: \"warn\",\n      desc: \"Used memory\",\n      bytes: memoryUsageBytes(),\n      thresholdBytes: Settings.maxMemoryMb.valueOrDefault * MB\n    })\n  } else {\n    return asTest({\n      level: \"ok\",\n      desc: \"Used memory\",\n      bytes: memoryUsageBytes(),\n      thresholdBytes: Settings.maxMemoryMb.valueOrDefault * MB\n    })\n  }\n}\n\nexport const memoryUsageIsHigh = lazy(\n  () => memoryUsageTest().level !== \"ok\",\n  secondMs\n)\n\nexport const memoryHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"System\",\n    id: \"proc-memory-use\",\n    pendingMsg: \"Checking memory usage…\",\n    settings: [\"maxMemoryMb\"],\n    errorLinks: [\n      {\n        text: \"Restart web service\",\n        type: \"button\",\n        method: \"POST\",\n        url: \"/admin/bounce\",\n        icon: \"refresh\"\n      }\n    ],\n    ttlMs: minuteMs,\n    later: async () => memoryUsageTest()\n  })\n)\n","import p from \"process\"\nimport { tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { isSupportedNode, RequiredNodeVersions } from \"../NodeVersion\"\nimport { ver } from \"../Ver\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const nodejsHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Tools\",\n    id: \"nodejs-version\",\n    pendingMsg: \"Checking Node.js…\",\n    settings: [],\n    // no ttlMs: this won't change at runtime\n    links: [\n      // this should only apply for PhotoStructure for Node users:\n      {\n        text: \"Read about PhotoStructure NodeJS support\",\n        icon: \"docs\",\n        url: \"https://photostructure.com/server/photostructure-for-node/#prerequisites\"\n      }\n    ],\n    later: async () => {\n      const msg =\n        \"You're running Node.js \" +\n        ver(p.versions.node) +\n        \".\\nPhotoStructure requires \" +\n        tt(RequiredNodeVersions) +\n        \".\"\n      return isSupportedNode()\n        ? {\n            level: \"ok\",\n            msg: [\"Node.js is OK\", msg]\n          }\n        : {\n            level: \"warn\",\n            msg: [\"Node.js is not a supported version\", msg]\n          }\n    }\n  })\n)\n","import { defer } from \"../../fe/Defer\"\nimport { ProjectPath } from \"../fs/ProjectPath\"\nimport { isElectron, isMac } from \"../platform/Platform\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const notInDMGHealthCheck = defer(() =>\n  isMac && isElectron\n    ? HealthCheck.for({\n        section: \"System\",\n        id: \"proc-not-in-dmg\",\n        pendingMsg: \"Checking PhotoStructure installation directory…\",\n        settings: [],\n        later: async () => {\n          if (ProjectPath.isInDMG()) {\n            return {\n              level: \"error\",\n              msg: \"PhotoStructure cannot run directly from a DMG disk image. Please drag and drop the PhotoStructure icon onto your Applications folder to install.\",\n              checkboxLabel:\n                \"Open https://photostructure.com/getting-started/installation/ in your browser\"\n            }\n          } else {\n            return {\n              level: \"ok\",\n              msg: \"PhotoStructure isn't running directly from a DMG disk image\"\n            }\n          }\n        }\n      })\n    : undefined\n)\n","import { minuteMs } from \"../../fe/Date\"\nimport { defer } from \"../../fe/Defer\"\nimport { errorToS } from \"../error/Error\"\nimport { isWin } from \"../platform/Platform\"\nimport { checkPowerShell_ } from \"../pwsh/PowerShell\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const powershellHealthCheck = defer(() =>\n  isWin\n    ? HealthCheck.for({\n        section: \"Tools\",\n        id: \"tools-powershell\",\n        pendingMsg: \"Checking PowerShell…\",\n        settings: [\"powerShellArgs\"],\n        ttlMs: minuteMs,\n        links: [\n          {\n            text: \"How to fix PowerShell issues\",\n            url: \"https://photostructure.com/fix-pwsh/\"\n          }\n        ],\n\n        later: async () => {\n          try {\n            const version = await checkPowerShell_()\n            return {\n              level: \"ok\",\n              msg: `PowerShell version ${version} is installed and working properly.`,\n              meta: {\n                version\n              }\n            }\n          } catch (error) {\n            return {\n              level: \"error\",\n              msg: \"PowerShell failed: \" + errorToS(error as any)\n            }\n          }\n        }\n      })\n    : undefined\n)\n","import { li, tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { sqliteVersion_ } from \"../db/SQLiteVersion\"\nimport { errorToS } from \"../error/Error\"\nimport { ver } from \"../Ver\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const sqliteHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Tools\",\n    id: \"tools-sqlite-version\",\n    ordinal: 0,\n    pendingMsg: \"Checking SQLite…\",\n    settings: [],\n    // ttlMs: minuteMs, // it's either or not at startup, no need to recheck.\n    links: [\n      {\n        text: \"Read about PhotoStructure SQLite support\",\n        url: \"https://forum.photostructure.com/t/whats-ps-force-local-db-replica/837\",\n        icon: \"docs\"\n      }\n    ],\n    async later() {\n      try {\n        const v = await sqliteVersion_.refresh()\n        if (v == null)\n          return {\n            level: \"error\",\n            msg: \"SQLite version could not be found\"\n          }\n\n        return {\n          level: \"ok\",\n          msg: [\n            \"SQLite is OK\",\n            li([\n              \"embedded: \" + ver(v.libraryVersion),\n              tt(v.sqliteNativePath) + \": \" + ver(v.toolVersion)\n            ])\n          ]\n        }\n      } catch (error) {\n        return {\n          level: \"error\",\n          msg: \"Something's amiss with SQLite: \" + errorToS(error as any)\n        }\n      }\n    }\n  })\n)\n","import { b, tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { groupid, isRootUser, userid, username } from \"../UserInfo\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { env } from \"../env/Env\"\nimport { DevEnvFlags } from \"../env/EnvKeys\"\nimport { isWin } from \"../platform/Platform\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const securityHealthCheck = defer(() => {\n  const desc = isWin ? \"an administrator\" : \"root\"\n\n  return HealthCheck.for({\n    section: \"System\",\n    id: \"proc-not-superuser\",\n    pendingMsg: \"Checking user permission level…\",\n    settings: [],\n    // no need to ever expire!\n    later: async () => {\n      if (env().PUID === \"0\") {\n        return {\n          level: \"disabled\",\n          msg: `Admin health check is disabled (${tt(\"PUID=0\")}).`\n        }\n      }\n      const msg = [\n        \"Current user id: \" + b(tt(userid())),\n        \"Current group id: \" + b(tt(groupid())),\n        \"Current user name: \" + b(tt((await username()) ?? \"(unknown)\"))\n      ]\n\n      if (\n        true === (await isRootUser()) ||\n        getDevEnvFlag(DevEnvFlags.PS_FAIL_SECURITY_HEALTH_CHECK)\n      ) {\n        return {\n          level: \"warn\",\n          msg: [\"PhotoStructure should not be run as \" + desc, ...msg],\n          links: [\n            {\n              text: \"Read why PhotoStructure should not be run as \" + desc,\n              url: \"https://photostructure.com/server/photostructure-for-docker/#why-not-run-as-root\"\n            }\n          ]\n        }\n      } else {\n        return {\n          msg: [\"PhotoStructure is not running as \" + desc, ...msg],\n          level: \"ok\"\n        }\n      }\n    }\n  })\n})\n","import { li, tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { plur } from \"../../fe/Units\"\nimport { allSettings } from \"../settings/Settings\"\nimport { verifyPsEnvSettings } from \"../settings/VerifyPsEnvSettings\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const settingsEnvHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Library\",\n    id: \"settings-env\",\n    pendingMsg: \"Checking environment settings…\",\n    settings: [],\n    links: [\n      {\n        text: \"Read about PhotoStructure environment settings\",\n        url: \"https://photostructure.com/faq/environment-variables/\",\n        icon: \"docs\"\n      }\n    ],\n\n    later: async () => {\n      const overrides: string[] = []\n      for (const ea of allSettings()) {\n        if (ea.hasValue() && ea._envValue() != null) {\n          const v =\n            ea.opts.sensitive === true\n              ? \"********\"\n              : ea.toEnvValue(ea._envValue())\n          if (v != null) overrides.push(tt(ea.key + \"=\" + v))\n        }\n      }\n      const msg = [plur(overrides.length, \"environment setting\"), li(overrides)]\n      const warnings = verifyPsEnvSettings()\n      if (warnings.length > 0) {\n        return {\n          level: \"warn\",\n          msg: [\n            \"Some environment settings may be misconfigured:\",\n            li(warnings.map(ea => tt(ea.envKey) + \": \" + ea.msg)),\n            \"---\",\n            ...msg\n          ]\n        }\n      }\n      return {\n        level: \"ok\",\n        msg\n      }\n    }\n  })\n)\n","import { defer } from \"../../fe/Defer\"\nimport { librarySettingsFile } from \"../settings/SettingsIO\"\nimport { HealthCheck } from \"./HealthCheck\"\nimport { validateSettingsToml } from \"./SettingsSystemHealthCheck\"\n\nexport const settingsLibraryHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Library\",\n    id: \"settings-library\",\n    pendingMsg: \"Checking library settings…\",\n    settings: [\"libraryDir\"],\n    links: [\n      {\n        text: \"Read about PhotoStructure library settings\",\n        url: \"https://photostructure.com/getting-started/advanced-settings/#library-settings\",\n        icon: \"docs\"\n      }\n    ],\n\n    later: () => validateSettingsToml(librarySettingsFile(), \"library\")\n  })\n)\n","import { isNotEmpty } from \"../../fe/Array\"\nimport { b, li, tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { plur } from \"../../fe/Units\"\nimport { capitalize } from \"../String\"\nimport { errorToS } from \"../error/Error\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { importFileSettings_ } from \"../settings/SettingsIO\"\nimport { systemSettingsFile } from \"../settings/SystemSettings\"\nimport { HealthCheck, HealthCheckTest } from \"./HealthCheck\"\n\nexport async function validateSettingsToml(\n  file: Maybe<PosixFile>,\n  flavor: \"system\" | \"library\"\n): Promise<HealthCheckTest> {\n  try {\n    if (file == null) {\n      return {\n        level: \"disabled\",\n        msg: \"No \" + flavor + \" settings is set.\"\n      }\n    }\n    if (await file.notExists()) {\n      return {\n        level: \"disabled\",\n        msg:\n          capitalize(flavor) + \" settings file \" + tt(file) + \" does not exist.\"\n      }\n    }\n    const result = await importFileSettings_(file)\n    if (isNotEmpty(result.warnings)) {\n      return {\n        level: \"warn\",\n        msg: tt(file) + \": \" + result.warnings.join(\", \")\n      }\n    } else {\n      return {\n        level: \"ok\",\n        msg: [\n          plur(result.settings.length, flavor + \" setting override\"),\n          b(\"Source:\"),\n          tt(file),\n          b(\"Settings:\"),\n          li(result.settings.map(s => tt(s.key + \"=\" + s.toEnvValue(s.value))))\n        ]\n      }\n    }\n  } catch (error) {\n    return {\n      level: \"error\",\n      msg: \"Failed to parse \" + file + \":\\n\" + errorToS(error)\n    }\n  }\n}\n\nexport const settingsSystemHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Library\",\n    id: \"settings-system\",\n    pendingMsg: \"Checking system settings…\",\n    settings: [],\n    links: [\n      {\n        text: \"Read about PhotoStructure system settings\",\n        url: \"https://photostructure.com/getting-started/advanced-settings/#system-settings\",\n        icon: \"docs\"\n      }\n    ],\n\n    later: () =>\n      validateSettingsToml(PosixFile.forMaybe(systemSettingsFile()), \"system\")\n  })\n)\n","import { tt } from \"../../fe/BabyMarkdown\"\nimport { secondMs } from \"../../fe/Date\"\nimport { defer } from \"../../fe/Defer\"\nimport { fmtPct } from \"../../fe/Number\"\nimport { Settings } from \"../settings/Settings\"\nimport { CpuUsage, isTooBusy } from \"../work/CpuUsage\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const systemLoadHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"System\",\n    id: \"system-load\",\n    pendingMsg: \"Checking system load…\",\n    settings: [\"cpuLoadPercent\"],\n    ttlMs: 15 * secondMs,\n    later: async () => {\n      const tooBusy = isTooBusy()\n      const level = tooBusy ? \"stop-sync\" : \"ok\"\n      const msg =\n        \"CPU utilization is at \" +\n        fmtPct(CpuUsage.instance().busyPct()) +\n        \".\\n\" +\n        (tooBusy\n          ? \"PhotoStructure sync is paused until CPU utilization drops below\"\n          : \"PhotoStructure sync will pause if CPU utilization exceeds\") +\n        \" \" +\n        tt(Settings.cpuLoadPercent.key) +\n        \": \" +\n        fmtPct(Settings.cpuLoadPercent.valueOrDefault)\n      return { level, msg }\n    }\n  })\n)\n","import { defer } from \"../../fe/Defer\"\nimport { later } from \"../../fe/Delay\"\nimport { ee } from \"../event/EventEmitter\"\nimport { getVideoToolDetails } from \"../img/Video\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const videoHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Tools\",\n    id: \"tools-video\",\n    timeoutMs: ShortCommandTimeoutMs,\n    pendingMsg: \"Checking video tooling…\",\n    settings: [\"ffmpegPath\", \"vlcPath\"],\n    links: [\n      {\n        text: \"Read about PhotoStructure video support\",\n        url: \"https://photostructure.com/getting-started/video-support/\",\n        icon: \"docs\"\n      }\n    ],\n    warnLinks: isDocker()\n      ? []\n      : [\n          {\n            text: \"Re-check for video tooling\",\n            icon: \"refresh\",\n            method: \"POST\",\n            type: \"button\",\n            url: \"/admin/recheck-tools\"\n          }\n        ],\n    rejectIsWarn: true, // if the video tooling is not installed, we don't want to block the server from starting.\n    later: async () => {\n      const vtd = await getVideoToolDetails()\n      if (vtd.ok) {\n        return {\n          level: \"ok\",\n          msg: [\"Videos will be imported\", vtd.msg],\n          meta: {\n            version: vtd.version\n          }\n        }\n      } else {\n        return {\n          level: \"warn\",\n          msg: vtd.msg\n        }\n      }\n    }\n  })\n)\n\nlater(() => {\n  ee().on(\"clearToolCache\", () => videoHealthCheck.prior()?.reset())\n})\n","import { isNotEmpty } from \"../../fe/Array\"\nimport { li } from \"../../fe/BabyMarkdown\"\nimport { fmtAgo, minuteMs } from \"../../fe/Date\"\nimport { defer } from \"../../fe/Defer\"\nimport { Timeout, thenOrTimeout } from \"../../fe/ThenOrTimeout\"\nimport { plur } from \"../../fe/Units\"\nimport { partition } from \"../Array\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { isWin } from \"../platform/Platform\"\nimport { dfPosixRawLocal_ } from \"../volumes/DfPosixRaw\"\nimport { getLocalVolumesWin_ } from \"../volumes/DfWin\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { volumes } from \"../volumes/Volumes\"\nimport { HealthCheck } from \"./HealthCheck\"\n\nexport const volumeHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"System\",\n    id: \"system-volumes\",\n    ordinal: 0,\n    pendingMsg: \"Checking volumes…\",\n    settings: [],\n    // ttlMs: we're relying on mountpointsChanged to trigger a recheck\n    links: [\n      {\n        text: `What's a “volume”?`,\n        url: \"https://photostructure.com/faq/what-is-a-volume/\",\n        icon: \"docs\"\n      }\n    ],\n    warnLinks: isWin\n      ? [\n          {\n            text: \"Check this page for troubleshooting tips\",\n            url: \"https://photostructure.com/faq/windows-troubleshooting/#unhealthy-network-shares\"\n          }\n        ]\n      : undefined,\n    later: async () => {\n      const start = Date.now()\n      const vols = await thenOrTimeout(volumes(), commandTimeoutMs())\n      if (vols === Timeout) {\n        // are local volumes ok?\n        const localVolumes = await thenOrTimeout<any>(\n          isWin ? getLocalVolumesWin_() : dfPosixRawLocal_(),\n          ShortCommandTimeoutMs\n        )\n        // try again after 5 minutes?\n        volumeHealthCheck().logger.warn(\"volumes() timed out, retrying in 5m\")\n        setTimeout(() => volumeHealthCheck().refresh(), 5 * minuteMs)\n        return {\n          level: \"warn\",\n\n          msg: [\n            localVolumes === Timeout\n              ? \"Something seems wrong with your computer's volumes\"\n              : \"Something seems wrong with one or more remote filesystem mounts\",\n            \"Gathering volume metadata took longer than \" +\n              fmtAgo(start, \"\") +\n              \".\"\n          ]\n        }\n      }\n\n      const notOk = vols.filter(ea => ea.ok === false)\n      if (isNotEmpty(notOk)) {\n        return {\n          level: \"warn\",\n          msg: [\n            \"One or more volumes are not healthy\",\n            \"Check the following mountpoints:\",\n            li(notOk.map(ea => ea.mountpoint))\n          ]\n        }\n      }\n\n      const [remote, local] = partition(vols, ea => ea.remote === true)\n      return {\n        level: \"ok\",\n        msg: [\n          \"Volumes seem OK\",\n          plur(local.length, \"local volume\") +\n            \" and \" +\n            plur(remote.length, \"remote volume\") +\n            \" checked.\"\n        ]\n      }\n    }\n  })\n)\n","import _sharp from \"sharp\"\nimport { inspect } from \"util\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, diff, isNotEmpty } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { Dimensions, dmegapixels, fmtDim } from \"../../fe/Dimensions\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { pick } from \"../../fe/Object\"\nimport { leastBy } from \"../Array\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { shim1 } from \"../Shim1\"\nimport {\n  SortableAssetFile,\n  sortAssetFiles\n} from \"../asset-file/AssetFileSorter\"\nimport { getAssetFileNativePath } from \"../asset-file/IAssetFile\"\nimport { InternalError } from \"../error/InternalError\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { isBaseFile } from \"../fs/BaseFile\"\nimport { FileCache } from \"../fs/FileCache\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { whyRejectFile } from \"../fs/PosixFileFilters\"\nimport { unlink } from \"../fs/Unlink\"\nimport { PushProgressObserver } from \"../progress/PushProgressObserver\"\nimport {\n  ForceContext,\n  RequiredForceContext,\n  forceContextOrSetting\n} from \"../settings/ForceContext\"\nimport { Settings } from \"../settings/Settings\"\nimport { readTags } from \"../tags/ExifTool\"\nimport { AssetPreviewInfo, AssetPreviews } from \"./AssetPreviews\"\nimport { equivalentFitSizes, fitSizes } from \"./FitSizes\"\nimport { isHeifMimeType } from \"./HeifFilter\"\nimport { ImageSize } from \"./ImageSize\"\nimport { includePreviewTags_ } from \"./IncludePreviewTags\"\nimport { Fit } from \"./Reducers\"\nimport { sharpReadable_, toSharp } from \"./SharpReadable\"\nimport { throwIfInvalidFile_ } from \"./ValidFile\"\n\nexport interface PreviewAssetFile extends SortableAssetFile {\n  id?: number\n  assetId?: number\n  rotation?: number\n}\n\nexport async function mkPreviewAssetFile_(\n  f: PosixFile\n): Promise<PreviewAssetFile> {\n  const t = (await readTags(f))!\n  return {\n    nativePath: f.nativePath,\n    fileSize: (await f.size())!,\n    mtime: (await f.thisOrSidecareMaxMtimeMs())!,\n    uri: (await f.uri_())!,\n    mountpoint: (await f.mountpoint())?.nativePath,\n    mimetype: t.mimetype,\n    rotation: t.rotation,\n    ...t.dimensions,\n    sha: await f.sha_()\n  }\n}\n\nconst badShaCache = lazy(\n  () =>\n    new FileCache<boolean>({\n      name: \"img.badShaCache\",\n      maxSize: 256,\n      timeoutMs: minuteMs\n    })\n)\n\n// PERF: minimize GC\nconst fp = Promise.resolve(false)\nconst impl = (_sha: string) => fp\n\nexport const isBadSha = shim1({\n  name: \"isBadSha\",\n  impl,\n  cache: badShaCache\n})\n\nexport class AssetPreviewBuilder {\n  private readonly logger: Logger\n  private readonly ctx: RequiredForceContext\n  constructor(\n    readonly ap: AssetPreviews,\n    readonly assetFiles: PreviewAssetFile[],\n    ctx: ForceContext\n  ) {\n    this.logger = mkLogger(\"AssetPreviewBuilder(\" + ap.assetId + \")\")\n    this.ctx = forceContextOrSetting(ctx)\n    this.assetFiles = sortAssetFiles(this.assetFiles)\n  }\n\n  [inspect.custom]() {\n    return {\n      ctor: \"AssetPreviewBuilder\",\n      assetId: this.ap.assetId,\n      assetFiles: this.assetFiles\n    }\n  }\n\n  /**\n   * The caller is assumed to have a per-asset advisory lock to prevent\n   * concurrent runs for the same asset.\n   */\n  async build_(): Promise<AssetPreviewInfo> {\n    this.logger.info(\n      \"build_(): asset file candidates:\",\n      this.assetFiles.map(ea => pick(ea, \"id\", \"uri\"))\n    )\n    const causes: any[] = []\n    for (const af of this.assetFiles) {\n      const pf = PosixFile.forMaybe(await getAssetFileNativePath(af))\n      if (pf == null) {\n        this.logger.info(\"skipping: failed to get PosixFile\", { af })\n        causes.push(\n          new Error(\n            \"Cannot get path from URI \" +\n              stringify(pick(af, \"uri\", \"mountpoint\", \"nativePath\"))\n          )\n        )\n        continue\n      }\n      {\n        const whyRejected = await whyRejectFile(pf)\n        if (!blank(whyRejected)) {\n          this.logger.info(\"skipping: rejected\", { pf, whyRejected })\n        }\n      }\n      const sha = af.sha ?? (await pf.sha())\n      if (sha == null) {\n        this.logger.info(\"skipping: cannot read SHA\", pf)\n        causes.push(new Error(\"Cannot read \" + pf.nativePath))\n        continue\n      }\n      if (true === (await isBadSha(sha))) {\n        this.logger.info(\"skipping: bad SHA\", pf)\n        continue\n      }\n      try {\n        return await this._build(pf, af)\n      } catch (error) {\n        causes.push(error)\n        badShaCache().set(sha, true)\n        this.logger.warn(\"Failed to set shown file to \", { best: af, error })\n      } finally {\n        // Make sure we don't have a stale view of the parent contents:\n        this.ap.parent.clear()\n      }\n    }\n    return this.logger.throw(\n      \"Cannot build previews: none of the files are valid\",\n      {\n        doNotSend: true, // < don't send this to Sentry\n        retriable: false,\n        files: this.assetFiles.map(ea => ea.nativePath ?? ea.uri),\n        causes\n      }\n    )\n  }\n\n  private async infoForBest_(\n    pf: PosixFile,\n    best: PreviewAssetFile\n  ): Promise<AssetPreviewInfo> {\n    await throwIfInvalidFile_(pf)\n    const filesize = await pf.size()\n    const mtime = await pf.thisOrSidecareMaxMtimeMs()\n    this.logger.debug(\"_build\", { filesize, mtime, best: best.uri })\n    if (filesize == null || mtime == null) {\n      return this.logger.throw(\"build(): missing stat info for best file\", {\n        ignorable: true,\n        best\n      })\n    }\n\n    const { uri, width, height, sha, mimetype } = best\n\n    if (\n      uri == null ||\n      width == null ||\n      height == null ||\n      mimetype == null ||\n      sha == null\n    ) {\n      return this.logger.throw(\n        \"build(): internal error: missing fields for best file \" + pf,\n        { ignorable: true, best }\n      )\n    }\n\n    const fits = fitSizes(best as Dimensions, best.mimetype)\n\n    return {\n      assetId: best.assetId!,\n      assetFileId: best.id!,\n      uri,\n      uris: this.assetFiles.map(ea => ea.uri),\n      path: pf.nativePath,\n      mtime,\n      filesize,\n      width,\n      height,\n      sha,\n      mimetype,\n      fitSizes: fits.map(([, ea]) => ea.name).join(\",\"),\n      sqWidths: compact(ImageSize.sq().map(ea => ea.outputSize(best)?.width)),\n      fitWidths: fits.map(([ea]) => ea.width)\n    }\n  }\n\n  private async priorIfValid_(\n    best: PreviewAssetFile,\n    info: AssetPreviewInfo\n  ): PromiseMaybe<AssetPreviewInfo> {\n    if (this.ctx.forceSync || this.ctx.forceRebuildPreviews) return\n    // Make sure we fetch the latest json with .refresh():\n    const priorInfo = await this.ap.readInfo.refresh()\n    if (priorInfo != null) {\n      if (priorInfo.assetId !== info.assetId) {\n        throw new InternalError(\n          \"priorIfValid_(): mismatched asset IDs for \" +\n            best +\n            \": \" +\n            stringify({ priorInfo, info })\n        )\n      }\n      const priorFits = priorInfo.fitSizes.split(\",\")\n      const currFits = info.fitSizes.split(\",\")\n\n      if (\n        priorInfo.sha != null &&\n        priorInfo.sha === info.sha &&\n        priorInfo.rotation === info.rotation &&\n        equivalentFitSizes(priorFits, currFits)\n      ) {\n        // This is a no-op as far as the previews are concerned, but in order to\n        // be deterministic, we should change the metadata to make it point to\n        // (possibly) the library version.\n\n        const fits = fitSizes(best as Dimensions, best.mimetype)\n\n        // Are there previews that were orphaned?\n        const leftovers = diff(priorFits, currFits)\n        if (isNotEmpty(leftovers)) {\n          this.logger.info(\n            \"priorIfValid_(): removing previews that aren't required anymore.\",\n            { leftovers }\n          )\n          for (const fitname of leftovers) {\n            const fitsize = fits.find(([, ea]) => ea.name === fitname)\n            if (fitsize == null) {\n              this.logger.warn(\n                \"priorIfValid_(): Failed to clean up: missing fit size\",\n                { fitsize, fits }\n              )\n            } else {\n              const victim = this.ap.fileForWidth(\n                fitsize[1].reducer.name,\n                fitsize[0].width\n              )\n              this.logger.debug(\n                \"priorIfValid_(): unlinking unwanted preview \" + victim,\n                { fitsize }\n              )\n              await victim.unlink(\"warn\")\n            }\n          }\n        }\n\n        this.logger.debug(\n          \"priorIfValid_(): SHA and rotation match, and previews exist.\",\n          {\n            info,\n            priorInfo\n          }\n        )\n        await this.ap.writeInfo(info)\n        return info\n      }\n    }\n    return\n  }\n\n  private async _build(\n    srcFile: PosixFile,\n    best: PreviewAssetFile\n  ): Promise<AssetPreviewInfo> {\n    this.logger.info(\"_build(\" + srcFile + \")\", { uri: best.uri })\n\n    const info = await this.infoForBest_(srcFile, best)\n\n    // Is the prior preview sufficient?\n    const prior = await this.priorIfValid_(best, info)\n    if (prior != null) return prior\n\n    // By rebuilding all sizes we ensure all the previews are from the same\n    // source (especially noticeable with assets are rotated!)\n\n    const pe = new PushProgressObserver(\n      { path: srcFile.nativePath, op: \"Building previews\" },\n      ImageSize.sq().length + ImageSize.fit().length\n    )\n\n    this.logger.debug(\"Rebuilding all previews from \" + best.uri, {\n      assetId: best.assetId,\n      info\n    })\n\n    if (null == (await this.ap.parent.mkdirp())) {\n      throw new Error(\n        \"build(): Failed to create previews directory, \" +\n          this.ap.parent +\n          \" for \" +\n          best\n      )\n    }\n\n    // It'd be easier to remove these files now, but it means there aren't\n    // previews available while we rebuild them, and that makes the UI 404.\n    // We'll delete them after we finish rebuilding the previews.\n    const priorExistingFiles = await this.ap.existingFiles()\n\n    const origSharpReadable = await sharpReadable_(\n      srcFile,\n      ImageSize.largestFit().max\n    )\n    if (origSharpReadable == null) {\n      throw new WrappedError(\n        \"AssetPreviewBuilder.build(): \" +\n          best.uri +\n          \", \" +\n          srcFile.nativePath +\n          \", is not readable by sharp.\",\n        {\n          retriable: false\n        }\n      )\n    }\n\n    const origSharp = toSharp(origSharpReadable)\n    // TODO: should I restore this? DID IT WORK?\n    // const origSharp = await maybeApplyColorspace(pf, toSharp(origSharpReadable))\n\n    // videos are auto-rotated by Video.extractVideoFrame\n    if (\n      best.mimetype.startsWith(\"image/\") &&\n      !isHeifMimeType(best.mimetype) &&\n      best.rotation != null &&\n      best.rotation !== 0\n    ) {\n      origSharp.rotate(best.rotation) // we don't use auto-rotate.\n      this.logger.debug(\"build(): rotating \" + best.rotation + \"°\")\n    }\n\n    if (\n      isBaseFile(origSharpReadable) &&\n      origSharpReadable.desc.toLowerCase().includes(\"thumbnail\")\n    ) {\n      // JPEG thumbnails are regularly \"letterboxed\". Delete that:\n      try {\n        origSharp.trim(1)\n      } catch {\n        // don't care\n      }\n    }\n\n    const fits = fitSizes(best as Dimensions, best.mimetype)\n    // These are the thumbnail/preview images we're generating:\n    const files: PosixFile[] = []\n    // This is a subset of files, which should be tagged:\n    const previewTagFiles: PosixFile[] = []\n    let sqDim: Maybe<Dimensions> // = origDim\n    let sqSharp: Maybe<_sharp.Sharp> // = origSharp\n\n    // Pick the smallest fit size that's larger than the largest square:\n    const lsq = ImageSize.largestSq()\n    const bestFitNameForSq = leastBy(fits, ([outputSize, fit]) =>\n      map(lsq.outputSize(outputSize), () => fit.megapixels())\n    )?.[1].name\n\n    const origDim = pick(best, \"width\", \"height\") as Dimensions\n    {\n      let fitSharp = origSharp.clone()\n      let fitDim = origDim\n\n      for (const [outputSize, fit] of fits) {\n        const start = Date.now()\n        const inputDim = fitDim\n        const dest = this.ap\n          .fileForWidth(fit.reducer.name, outputSize.width)\n          .wip()\n        fitSharp = fit.resize(outputSize, fitSharp)\n        fitDim = outputSize\n\n        if (fit.name === bestFitNameForSq) {\n          sqSharp = fitSharp.clone()\n          sqDim = outputSize\n        }\n\n        if (\n          dmegapixels(outputSize) >= 1 &&\n          fit.reducer === Fit &&\n          Settings.includePreviewTags.valueOrDefault\n        ) {\n          previewTagFiles.push(dest)\n        }\n\n        await fit.toJpeg({\n          path: dest.nativePath,\n          sh: fitSharp,\n          outputSize\n        })\n        pe.onProgress()\n\n        this.logger.debug(\n          \"resize(\" +\n            fit.name +\n            \") \" +\n            fmtDim(inputDim) +\n            \" -> \" +\n            fmtDim(outputSize) +\n            \" in \" +\n            (Date.now() - start) +\n            \" ms\"\n        )\n        files.push(dest)\n      }\n    }\n\n    // sq\n    {\n      if (sqSharp == null) {\n        this.logger.debug(\"square resize(): resorting to \", {\n          origDim,\n          bestFitNameForSq\n        })\n        sqSharp = origSharp\n        sqDim = origDim\n      } else {\n        this.logger.debug(\"square resize(): using to \", {\n          sqDim,\n          bestFitNameForSq\n        })\n      }\n\n      let positioned = false\n\n      // We do square resizing synchronously to ensure the crop is consistent:\n\n      for (const sq of ImageSize.sq()) {\n        const start = Date.now()\n        const inputDim = sqDim!\n        const outputSize = sq.outputSize(sqDim ?? origDim)\n        if (outputSize == null) {\n          this.logger.debug(\"skipping square output for \" + sq.max)\n          continue\n        }\n\n        // Positioning the crop takes time, even if it's a no-op, so only do it if\n        // the input isn't square already.\n        if (!positioned) {\n          outputSize.position = Settings.squareThumbStrategy.valueOrDefault\n          positioned = true\n        }\n\n        this.logger.debug(\"Applying \", { outputSize })\n\n        const dest = this.ap\n          .fileForWidth(sq.reducer.name, outputSize.width)\n          .wip()\n\n        sq.resize(outputSize, sqSharp!)\n\n        sqDim = outputSize\n        await sq.toJpeg({\n          path: dest.nativePath,\n          sh: sqSharp!,\n          outputSize\n          // no srcFile, no need to embed previews for tiny squares.\n        })\n        pe.onProgress()\n        files.push(dest)\n        this.logger.debug(\n          \"resize(\" +\n            sq.name +\n            \") \" +\n            fmtDim(inputDim) +\n            \" -> \" +\n            fmtDim(outputSize) +\n            \" in \" +\n            (Date.now() - start) +\n            \" ms\"\n        )\n      }\n    }\n\n    try {\n      await includePreviewTags_(srcFile, previewTagFiles).catch(error => {\n        this.logger.warn(\n          \"Failed to restore metadata tags into previews for \" + srcFile,\n          {\n            error\n          }\n        )\n      })\n      // don't unlink just-unwipped files!\n      const oldPaths = new Set(priorExistingFiles.map(ea => ea.nativePath))\n      for (const ea of files) {\n        const unwipped = await ea.unwip_()\n        oldPaths.delete(unwipped.nativePath)\n      }\n      await unlink(oldPaths)\n      await this.ap.writeInfo(info)\n      this.logger.debug(\"Previews unwipped and info written\", { info })\n    } catch (cause) {\n      await unlink(files)\n      throw new WrappedError(\"Failed to create previews from \" + srcFile, {\n        cause,\n        path: srcFile.nativePath,\n        fatal: false\n      })\n    }\n    return info\n  }\n}\n","import { Downloadable } from \"../../fe/api/Asset\"\nimport { assetImgLink } from \"../../fe/AssetUrls\"\nimport { Dimensions, dimToSize, fmtDim } from \"../../fe/Dimensions\"\nimport { ReducerName, ReducerNames } from \"../../fe/ImageReducers\"\nimport { map2 } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toInt } from \"../../fe/Number\"\nimport { SizeDescription } from \"../../fe/Units\"\nimport { thenMap } from \"../async/Promise\"\nimport { extname } from \"../fs/Path\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { mkLogger } from \"../Logger\"\nimport { extractInt } from \"../Number\"\nimport { stripSuffix } from \"../String\"\nimport { dimensions } from \"./FileDimensions\"\n\nexport interface PreviewInfo {\n  file: PosixFile\n  assetId: number\n  reducer?: ReducerName\n  width?: number\n}\n\nconst epilog = mkLogger(\"extractPreviewInfo\")\n\nexport function extractPreviewInfo(\n  previewsRoot: PosixFile,\n  file: PosixFile\n): Maybe<PreviewInfo> {\n  // OMG WTH AMIRITE?\n  // For \".photostructure/previews/000/000/21-sq-w480.jpg\"\n  const posixPath = file.posixPathFrom(previewsRoot)\n  // \"000/000/21-sq-w480.jpg\"\n  const arr = posixPath.replace(/\\//g, \"\").split(\"-\")\n  // \"00000021\", \"sq\", \"w480.jpg\"\n  const assetId = toInt(arr[0])\n  const reducer = ReducerNames.validOrElse(arr[1], undefined)\n  const width = extractInt(arr[2])\n  if (!gt0(assetId)) {\n    epilog.warn(\"Failed to extract preview info\", {\n      file,\n      previewsRoot,\n      arr,\n      assetId,\n      reducer,\n      width\n    })\n    return\n  } else {\n    return { file, assetId, reducer, width }\n  }\n}\n\nexport async function previewToDownloadable(\n  basename: string,\n  pi: PreviewInfo\n): PromiseMaybe<Downloadable> {\n  return map2(pi.assetId, pi.width, (assetId, width) =>\n    thenMap(dimensions(pi.file), d => {\n      const size = dimToSize(d)\n      const name = stripSuffix(basename, extname(basename))\n      return {\n        size,\n        basename: `${name}-${size}${pi.file.ext}`,\n        title: mkDownloadableTitle(pi.file, size, \"image\", d),\n        description: `Download ${size}`,\n        details: `(${fmtDim(d)} ${pi.file.ext})`,\n        href: assetImgLink({ assetId, reducer: ReducerNames.fit, width })\n      }\n    })\n  )\n}\n\nexport function mkDownloadableTitle(\n  f: PosixFile,\n  s: SizeDescription,\n  imageOrVideo: string,\n  d: Dimensions\n): string {\n  return `Download ${s} ${f.ext} ${imageOrVideo} (${fmtDim(d)})`\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, isNotEmpty } from \"../../fe/Array\"\nimport { sort } from \"../../fe/ArraySort\"\nimport {\n  assetImgAttrs,\n  assetImgLink,\n  assetSqImgAttrs\n} from \"../../fe/AssetUrls\"\nimport { ReducerName, ReducerNames } from \"../../fe/ImageReducers\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { StringValued, pick } from \"../../fe/Object\"\nimport { leftPad } from \"../../fe/Pad\"\nimport { ID, id2id } from \"../../fe/api/ID\"\nimport { greatestBy, leastBy } from \"../Array\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { splitEvery } from \"../String\"\nimport { mapAsyncSerial, sortByAsync, thenOrElse } from \"../async/Promise\"\nimport { InternalErrorFlag } from \"../error/ErrorFlags\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { PreviewInfo, extractPreviewInfo } from \"./AssetPreviewInfo\"\n\n/**\n * Contents of the JSON metadata files stored alongside the previews:\n */\nexport interface AssetPreviewInfo {\n  assetId: number\n  assetFileId: number\n  uri: string\n  uris: string[]\n  path: string\n  mimetype: string\n  width: number\n  height: number\n  /**\n   * If filesize and maxStatMs matches, we can assume this metadata is still correct:\n   */\n  mtime: number\n  filesize: number\n  sha: string\n  rotation?: number\n  fitSizes: string\n  sqWidths: number[]\n  fitWidths: number[]\n}\n\nexport class AssetPreviews {\n  readonly logger: Logger\n  readonly assetId: number\n  readonly parent: PosixFile\n  readonly basename: string\n\n  constructor(\n    readonly previewsRoot: PosixFile,\n    id: number | ID\n  ) {\n    this.logger = mkLogger(\"AssetPreviews(assetId:\" + id2id(id) + \")\")\n    this.assetId = id2id(id)!\n    // To simplify debugging, we use the base-10 (rather, than, say, geohash\n    // radix encoded) ID in the path.\n\n    // MacOS finder and Windows Explorer crashes with folders > 1000, so that\n    // (ish) should be considered the largest allowable number of items in a\n    // given directory. dir_stat reads in chunks of 32k, so smaller than that is\n    // better.\n\n    // FAT and FAT32 maximum number of files on disk: 65,517\n\n    // As there will be ~10 files per image, we can have ~100 assets per\n    // directory\n\n    // See discussion:\n    // https://docs.google.com/document/d/1UzrntF9-gQhvmvKgecMI3Em623hsMP5iKBdkPHR5mC0/edit#heading=h.kyfjnq6c2j4i\n\n    // If we pad to 8 digits and split every 3 (assuming 99 million is an upper\n    // bound, which is ridiculously large), we get /000/000/01-fit-w480.jpg\n\n    // We could make this leftPad(5 or 8 or 11) based on the size of assetId,\n    // but let's just make this simple and only support assetIds < 100 million.\n    const paddedId = leftPad(this.assetId, 8, \"0\")\n    const assetPath = splitEvery(paddedId, 3)\n    // NOTE: make sure the \"-\" stays here, or else removeAll may remove other\n    // asset's files!\n    this.basename = assetPath.pop() + \"-\"\n    this.parent = previewsRoot.join(...assetPath)\n  }\n\n  parentNotExists() {\n    return this.parent.clear().notExists()\n  }\n\n  existingFiles() {\n    return thenOrElse(\n      this.parent.clear().childFiles(ea => ea.base.startsWith(this.basename)),\n      () => []\n    )\n  }\n\n  existingJpgs() {\n    return thenOrElse(\n      this.parent\n        .clear()\n        .childFiles(\n          ea => ea.base.startsWith(this.basename) && ea.ext === \".jpg\"\n        ),\n      () => []\n    )\n  }\n\n  // Sorted by size ascending\n  async previews(): Promise<PreviewInfo[]> {\n    const arr = await this.existingFiles()\n    return sortByAsync({\n      name: \"img.AssetPreviews.previews\",\n      arr: compact(arr.map(ea => extractPreviewInfo(this.previewsRoot, ea))),\n      f: ea => ea?.file.size()\n    })\n  }\n\n  async deleteAll() {\n    const arr = await this.existingFiles()\n    if (arr.length > 20) {\n      throw new Error(\n        \"deleteAll(): rejected: > 20 existing files?!\" + InternalErrorFlag\n      )\n    }\n    await mapAsyncSerial({\n      name: \"AssetPreviews.deleteAll\",\n      arr,\n      f: ea => ea.unlink(),\n      timeoutMs: commandTimeoutMs()\n    })\n    return arr\n  }\n\n  fileForSuffix(suffix: string): PosixFile {\n    return this.parent.join(this.basename + suffix)\n  }\n\n  mp4(): PosixFile {\n    return this.fileForSuffix(\"video.mp4\")\n  }\n\n  infoJson(): PosixFile {\n    return this.fileForSuffix(\"info.json\")\n  }\n\n  readonly readInfo = lazy<PromiseMaybe<AssetPreviewInfo>>(() =>\n    // PERF: don't stat then read--just try to read.\n    this.infoJson().readJson<AssetPreviewInfo>(\"debug\")\n  )\n\n  writeInfo(info: AssetPreviewInfo): PromiseMaybe<PosixFile> {\n    this.readInfo.unset()\n    return this.infoJson().writeJson(\n      // make sure we only write out expected fields\n      pick(\n        info,\n        \"assetId\",\n        \"assetFileId\",\n        \"uri\",\n        \"uris\",\n        \"path\",\n        \"mimetype\",\n        \"width\",\n        \"height\",\n        \"mtime\",\n        \"filesize\",\n        \"sha\",\n        \"rotation\",\n        \"fitSizes\",\n        \"fitWidths\"\n      )\n    )\n  }\n\n  fileForWidth(reducer: ReducerName, width: number): PosixFile {\n    return this.fileForSuffix(reducer + \"-w\" + width + \".jpg\")\n  }\n\n  async filesForReducer(reducer: ReducerName): Promise<PosixFile[]> {\n    const prefix = this.basename + reducer + \"-\"\n    return this.logger.tap({\n      msg: \"filesForReducer(\" + reducer + \")\",\n      result: (await this.existingFiles()).filter(ea =>\n        ea.base.startsWith(prefix)\n      )\n    })\n  }\n\n  async smallestFileForReducer(reducer: ReducerName): PromiseMaybe<PosixFile> {\n    return leastBy(\n      await this.filesForReducer(reducer),\n      f => extractPreviewInfo(this.previewsRoot, f)?.width\n    )\n  }\n\n  async largestFileForReducer(reducer: ReducerName): PromiseMaybe<PosixFile> {\n    return greatestBy(\n      await this.filesForReducer(reducer),\n      f => extractPreviewInfo(this.previewsRoot, f)?.width\n    )\n  }\n\n  async widths(reducer: ReducerName): Promise<number[]> {\n    const info = await this.readInfo()\n\n    const field = reducer === ReducerNames.sq ? \"sqWidths\" : \"fitWidths\"\n\n    if (info != null && isNotEmpty(info?.[field])) {\n      return info[field]\n    }\n\n    const files = await this.filesForReducer(reducer)\n    const result = sort(\n      compact(files.map(f => extractPreviewInfo(this.previewsRoot, f)?.width))\n    )\n    if (info != null) {\n      info[field] = result\n      // on-the-fly repair\n      await this.writeInfo(info)\n    }\n    return result\n  }\n\n  async posterLink(): Promise<string> {\n    const widths = await this.widths(ReducerNames.fit)\n    return assetImgLink({\n      assetId: this.assetId,\n      reducer: ReducerNames.fit,\n      width: Math.max(...widths)\n    })\n  }\n\n  /**\n   * @param stat if true, always look at the filesystem\n   */\n  async imgAttrs(\n    reducer: ReducerName,\n    stat = false,\n    lazyLoad = true\n  ): Promise<StringValued> {\n    if (!stat && reducer === ReducerNames.sq) {\n      return assetSqImgAttrs({ assetId: this.assetId, lazyLoad })\n    } else {\n      const info =\n        reducer === ReducerNames.fit ? await this.readInfo() : undefined\n      return assetImgAttrs({\n        assetId: this.assetId,\n        reducer,\n        widths: await this.widths(reducer),\n        lazyLoad,\n        af: info\n      })\n    }\n  }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const CropStrategies = strEnum(\"center\", \"entropy\", \"attention\")\nexport type CropStrategy = StrEnumKeys<typeof CropStrategies>\n","import sharp from \"sharp\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { rgb2labArray } from \"../color/Colorspace\"\n\n// From https://github.com/btd/sharp-phash/blob/master/index.js\n\nconst SAMPLE_SIZE = 32\n\nfunction initSQRT(len: number) {\n  const c = new Array(len)\n  for (let i = 1; i < len; i++) {\n    c[i] = 1\n  }\n  c[0] = 1 / Math.sqrt(2.0)\n  return c\n}\n\nconst SQRT = initSQRT(SAMPLE_SIZE)\n\nfunction initCOS(len: number) {\n  const cosines = new Array(len)\n  for (let k = 0; k < len; k++) {\n    cosines[k] = new Array(len)\n    for (let n = 0; n < len; n++) {\n      cosines[k][n] = Math.cos(((2 * k + 1) / (2 * len)) * n * Math.PI)\n    }\n  }\n  return cosines\n}\n\nconst COS = initCOS(SAMPLE_SIZE)\n\nfunction applyDCT(matrix: number[][], size: number) {\n  const N = size\n\n  const F = new Array(N)\n  for (let u = 0; u < N; u++) {\n    F[u] = new Array(N)\n    for (let v = 0; v < N; v++) {\n      let sum = 0\n      for (let i = 0; i < N; i++) {\n        for (let j = 0; j < N; j++) {\n          sum += COS[i][u] * COS[j][v] * matrix[i][j]\n        }\n      }\n      sum *= (SQRT[u] * SQRT[v]) / 4\n      F[u][v] = sum\n    }\n  }\n  return F\n}\n\nconst LOW_SIZE = 8\n\nexport async function dctHash(img: sharp.Sharp): Promise<(0 | 1)[]> {\n  return dctPixels(\n    await img\n      .greyscale()\n      .resize({ width: SAMPLE_SIZE, height: SAMPLE_SIZE, fit: sharp.fit.fill })\n      .raw()\n      .toBuffer()\n  )\n}\n\nexport async function dctHashCIELAB(img: sharp.Sharp): Promise<(0 | 1)[]> {\n  const rgb = await img\n    .resize({ width: SAMPLE_SIZE, height: SAMPLE_SIZE, fit: sharp.fit.fill })\n    .raw()\n    .toBuffer()\n  const lab = rgb2labArray(rgb)\n  return flatten(lab.map(dctPixels))\n}\n\nexport function dctPixels(pixels: Buffer | number[]): (0 | 1)[] {\n  // copy signal\n  const s: number[][] = new Array(SAMPLE_SIZE)\n  for (let x = 0; x < SAMPLE_SIZE; x++) {\n    s[x] = new Array(SAMPLE_SIZE)\n    for (let y = 0; y < SAMPLE_SIZE; y++) {\n      s[x][y] = pixels[SAMPLE_SIZE * y + x]\n    }\n  }\n\n  // apply 2D DCT II\n  const dct = applyDCT(s, SAMPLE_SIZE)\n\n  // get AVG on high frequencies\n  let totalSum = 0\n  for (let x = 0; x < LOW_SIZE; x++) {\n    for (let y = 0; y < LOW_SIZE; y++) {\n      totalSum += dct[x + 1][y + 1]\n    }\n  }\n\n  const avg = totalSum / (LOW_SIZE * LOW_SIZE)\n\n  // compute hash\n  const result: (0 | 1)[] = [] // not new Array(): we're just using push().\n\n  for (let x = 0; x < LOW_SIZE; x++) {\n    for (let y = 0; y < LOW_SIZE; y++) {\n      result.push(dct[x + 1][y + 1] > avg ? 1 : 0)\n    }\n  }\n\n  return result\n}\n","import { compact } from \"../../fe/Array\"\nimport { Dimensions, dmegapixels } from \"../../fe/Dimensions\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, lt, lte, sigFigs, toInt } from \"../../fe/Number\"\nimport { toS } from \"../../fe/toS\"\nimport { ExifTags } from \"../tags/ExifTags\"\nimport { roundAspectRatio } from \"./Ratio\"\n\nexport function tmegapixels(t: ExifTags) {\n  if (t.dimensions != null) return dmegapixels(t.dimensions)\n  if (gt0(t.Megapixels)) return t.Megapixels\n  return\n}\n\n/**\n * @return true if `lhs` is wholly contained by `rhs`.\n */\nexport function ltBoth(lhs: Partial<Dimensions>, rhs: Partial<Dimensions>) {\n  return lt(lhs.width, rhs.width) && lt(lhs.height, rhs.height)\n}\n\n/**\n * @return true if `lhs` is wholly contained by `rhs`.\n */\nexport function lteBoth(lhs: Partial<Dimensions>, rhs: Partial<Dimensions>) {\n  return lte(lhs?.width, rhs?.width) && lte(lhs?.height, rhs?.height)\n}\n\n/**\n * @return true if `lhs` is wholly contained by `rhs`.\n */\nexport function ltEither(lhs: Partial<Dimensions>, rhs: Partial<Dimensions>) {\n  return lt(lhs.width, rhs.width) || lt(lhs.height, rhs.height)\n}\n\nexport function parseDimensions(s: Maybe<string>): Maybe<Dimensions> {\n  const arr = compact(\n    toS(s)\n      .split(/[x×]/)\n      .map(ea => toInt(ea))\n  )\n  return arr.length === 2 ? { width: arr[0], height: arr[1] } : undefined\n}\n\nexport function fitToResolution(\n  dim: Dimensions,\n  pixelCount: number\n): Dimensions {\n  if (dim.width * dim.height <= pixelCount) return dim\n  const aspect_ratio = dim.width / dim.height\n  const widthF = Math.round(Math.sqrt(pixelCount * aspect_ratio))\n  return {\n    width: widthF,\n    height: Math.round(widthF / aspect_ratio)\n  }\n}\n\nexport function aspectRatio(d: Maybe<Partial<Dimensions>>): Maybe<number> {\n  return d != null && gt0(d.width) && gt0(d.height)\n    ? sigFigs(roundAspectRatio(d.width / d.height), 3)\n    : undefined\n}\n","import { Sharp } from \"sharp\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Dimensions } from \"../../fe/Dimensions\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { map2Numeric } from \"../../fe/Number\"\nimport { mkLogger } from \"../Logger\"\nimport { thenMap } from \"../async/Promise\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { extractSizeInfoFromFile } from \"../tags/SizeInfo\"\nimport { isSharp } from \"./Sharp\"\n\nconst logger = lazy(() => mkLogger(\"img.FileDimensions\"))\n\nexport async function dimensions(\n  file: Maybe<PosixFile | string | Sharp>\n): PromiseMaybe<Dimensions> {\n  try {\n    if (file == null) return\n    if (isSharp(file)) {\n      const m = await file.metadata()\n      return map2Numeric(m.width, m.height, (width, height) => ({\n        width,\n        height\n      }))\n    } else {\n      return thenMap(extractSizeInfoFromFile(file), ea => ({\n        width: ea.ImageWidth,\n        height: ea.ImageHeight\n      }))\n    }\n  } catch (error) {\n    logger().warn(\"dimensions() failed\", { error })\n    return\n  }\n}\n","import { compactBlanks, includesAll } from \"../../fe/Array\"\nimport { Dimensions, dmegapixels } from \"../../fe/Dimensions\"\nimport { isMimeTypeSupportedByBrowser } from \"../tags/MimeTypes\"\nimport { ImageSize } from \"./ImageSize\"\nimport { OutputSize } from \"./Reducers\"\n\n// For tag galleries, we always want the littlest sizes:\nconst FitAlways = [ImageSize.QVGA, ImageSize.QQVGA]\n\n/**\n * @param dim is final, post-rotated dimension (the caller must flip if rotation\n * is 90 or 270)\n */\nexport function fitSizes(\n  dim: Dimensions,\n  mimetype: string\n): [OutputSize, ImageSize][] {\n  const sizes = ImageSize.fit()\n\n  const results: [OutputSize, ImageSize][] = []\n  let smallestDim = isMimeTypeSupportedByBrowser(mimetype) ? dim : undefined\n\n  for (let idx = 0; idx < sizes.length; idx++) {\n    const size = sizes[idx]\n    const d = size.outputSize(dim)\n    if (d == null) continue\n\n    // The goal here is to generate the \"correct\" number of thumbnails: we\n    // want to avoid too many different resolutions (which would waste disk\n    // space), and at the same time, we want to be efficient with network\n    // bandwidth (which would prefer lots of different resolutions).\n    const keep =\n      smallestDim == null ||\n      FitAlways.includes(size) ||\n      dmegapixels(smallestDim) / dmegapixels(d) > 3 ||\n      dmegapixels(d) - dmegapixels(smallestDim) > 2.5\n\n    if (keep) {\n      smallestDim = d\n      results.push([d, size])\n    }\n  }\n  return results\n}\n\nfunction old2new(s: string) {\n  // Unfortunately, prior v0.3.8 encoded wvga as qhd, and wvgap as qhdp.\n  // As of v0.6.0, portrait sizes went away.\n  if (s === \"qhd\") return \"wvga\"\n  if (s === \"uhd\") return \"uhd4k\"\n  return s\n}\n\nexport function equivalentFitSizes(\n  oldArr: string[],\n  newArr: string[]\n): boolean {\n  return includesAll(\n    compactBlanks(oldArr).map(old2new),\n    compactBlanks(newArr).map(old2new)\n  )\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { ver } from \"../Ver\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { errorToS } from \"../error/Error\"\nimport { ee } from \"../event/EventEmitter\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { isMac } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\nimport { heif2png_, heifConvertPath } from \"./HeifConvert\"\nimport { ToolDetails } from \"./ToolDetails\"\nimport { sips2jpeg_, sipsPath } from \"./sips\"\n\nconst logger = lazy(() => mkLogger(\"img.Heif\"))\n\nexport const getHeifSupportDetails = lazy<Promise<ToolDetails>>(async () => {\n  try {\n    if (isMac) {\n      try {\n        const msg = await sipsPath()\n        if (!blank(msg)) {\n          return { ok: true, msg }\n        }\n      } catch (err) {\n        logger().error(\n          \"Failed to find the sips tool (either in PATH or /usr/bin).\",\n          err\n        )\n      }\n    }\n\n    const path = await heifConvertPath()\n    if (blank(path)) {\n      return {\n        ok: false,\n        msg: Settings.heifConvertPath.valueOrDefault + \": not installed\"\n      }\n    } else {\n      let errs = \"\"\n      const output = await stdout_(path, [], {\n        timeoutMs: ShortCommandTimeoutMs,\n        quiet: true,\n        ignoreExitCode: true, // help message returns 5\n        isIgnorableError: err => {\n          errs += err.message\n          return true\n        }\n      })\n      // Video tools use `${toolName} ${version}` for msg:\n      return {\n        ok: true,\n        version: map(extractHeifConvertVersion(output + errs), ver),\n        path,\n        msg: \"ok\"\n      }\n    }\n  } catch (err) {\n    return {\n      ok: false,\n      msg: errorToS(err)\n    }\n  }\n})\n\nexport function extractHeifConvertVersion(helptext: string): Maybe<string> {\n  // version 1.14 and later will emit version information to stderr:\n\n  // $ heif-convert.exe\n  // heif-convert  libheif version: 1.14.0\n  // -------------------------------------------\n  // Usage: heif-convert [options]  <input-image> <output-image>\n\n  // The program determines the output file format from the output filename suffix.\n  // These suffices are recognized: jpg, jpeg, png, y4m.\n  // Options:\n  //  -h, --help              show help\n  //  -q, --quality           quality (for JPEG output)\n  //      --with-aux          also write auxiliary images (e.g. depth images)\n  //      --with-xmp          write XMP metadata to file (output filename with .xmp suffix)\n  //      --with-exif         write EXIF metadata to file (output filename with .exif suffix)\n  //      --skip-exif-offset  skip EXIF metadata offset bytes\n  //      --no-colons         replace ':' characters in auxiliary image filenames with '_'\n  //      --quiet             do not output status messages to console\n\n  // Versions before 1.14:\n\n  // USAGE: heif-convert [-q quality 0..100] <filename> <output>\n\n  return toS(helptext).match(\n    // the /s allows the version string to line wrap:\n    /libheif version.*?(?<version>[\\d.]{5,})\\b/is\n  )?.groups?.version\n}\n\nexport async function isHeifSupported() {\n  return (await getHeifSupportDetails()).ok\n}\n\n/**\n * Converts the given HEIF to either a JPEG or PNG, depending on the platform\n */\nexport async function heif2img(src: PosixFile) {\n  if (isMac) {\n    return sips2jpeg_(src)\n  } else if (await isHeifSupported()) {\n    return heif2png_(src)\n  } else {\n    logger().throw(\"HEIF support is missing\", {\n      src: src.nativePath\n    })\n    return\n  }\n}\n\nlater(() => ee().on(\"clearCache\", () => getHeifSupportDetails.unset()))\n","import { lazy } from \"../../core/Lazy\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { KB } from \"../../fe/Units\"\nimport { mkLogger } from \"../Logger\"\nimport { stdoutResult_ } from \"../child/ChildProcess\"\nimport { ee } from \"../event/EventEmitter\"\nimport { pathTo } from \"../fs/PathTo\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { dimensions } from \"./FileDimensions\"\nimport { withImageCache_ } from \"./ImageCache\"\n\nconst logger = lazy(() => mkLogger(\"img.HeifConvert\"))\n\nexport const heifConvertPath = lazy(async () => {\n  const result = logger().tap({\n    msg: \"heifConvertPath\",\n    result: await pathTo(Settings.heifConvertPath.valueOrDefault)\n  })\n  // They may install heif-convert after we check. If it's missing, try again in a minute:\n  heifConvertPath.setTTL(result == null ? minuteMs : undefined)\n  return result\n})\n\nfunction clearCache() {\n  heifConvertPath.unset()\n}\n\nlater(() => {\n  ee().on(\"clearCache\", clearCache)\n  ee().on(\"clearToolCache\", clearCache)\n})\n\nexport async function isHeifConvertSupported() {\n  return notBlank(await heifConvertPath())\n}\n\n/**\n * Returns a file holding the binary stream associated to the given tag.\n * Orientation is copied from the src to the result.\n */\nexport async function heif2png_(src: PosixFile): PromiseMaybe<PosixFile> {\n  if (!(await isHeifConvertSupported())) return\n  const dims = await dimensions(src)\n  if (dims == null) {\n    logger().throw(\"heif2png_() failed: no dimensions for \" + src)\n  }\n\n  // PNG (vs JPG) IS A BUG WORKAROUND FOR\n  // https://forum.photostructure.com/t/incorrectly-rotated-heic-images/34/15?u=mrm\n\n  return withImageCache_(src, \"heif\", \".png\", dest => _heif2png_(src, dest))\n}\n\nasync function _heif2png_(src: PosixFile, dest: PosixFile) {\n  try {\n    await stdoutResult_(\n      Settings.heifConvertPath.valueOrDefault,\n      [\n        // No need to specify quality: the output is a lossless PNG.\n        // \"-q\",\n        // String(Settings.previewQuality.valueOrDefault),\n        src.nativePath,\n        // heif-convert does TERRIBLE things to the output path.\n        dest.base\n      ],\n      {\n        cwd: dest.dir,\n        timeoutMs: minuteMs, // should only take a couple seconds\n        ignoreStderr: true // heif-convert may grump about \"Can't open -urn:com:apple:photo:2020:aux:hdrgainmap.WIP-heif.png: Invalid argument\\ncould not write auxiliary image\"\n      }\n    )\n    if (await dest.clear().isEmptyFile(KB)) {\n      logger().throw(\"heif2png_() failed: empty output\", { src, dest })\n    }\n  } catch (error) {\n    logger().throw(\"heif2png() failed\", { error, src: src.nativePath })\n  }\n}\n","import { toS } from \"../../fe/toS\"\n\nconst HeifMimeTypeRE = /^image\\/hei[fc]$/i\n\nexport function isHeifMimeType(mimetype: string) {\n  return HeifMimeTypeRE.exec(toS(mimetype)) != null\n}\n","import { rm } from \"fs/promises\"\nimport { lazy } from \"../../core/Lazy\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { isProd, isTest } from \"../NodeEnv\"\nimport { ensurePrefix, splitEvery } from \"../String\"\nimport { shortFsStringSha } from \"../StringHash\"\nimport { ciSafePath } from \"../ciSafePath\"\nimport { cacheDir_ } from \"../dir/CacheDir\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { ee } from \"../event/EventEmitter\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile, basename } from \"../fs/SimpleFile\"\nimport { TokenRadix } from \"../math/Radix\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"img.ImgCache\"))\n\nexport const ImageCacheName = \"image-cache\"\n// NOTE: sync service is in charge of cleaning cacheDir. See `setup()`.\n\n/**\n * @throws if imgCacheDir cannot be created.\n */\nexport const imageCacheDir_ = lazy(() => {\n  watchCacheDir()\n  return PosixFile.for(cacheDir_()).join(ImageCacheName).mkdirp_()\n})\n\nconst watchCacheDir = lazy(() => {\n  cacheDir_.watchLater(() => imageCacheDir_.unset())\n})\n\nexport async function rmImageCacheDir() {\n  if (isProd) throw new Error(\"rmImgCacheDir is for tests\")\n  for (const ea of toA(await (await imageCacheDir_()).clear().children())) {\n    await rm(ea.nativePath, {\n      recursive: ea.isDirectorySync(),\n      maxRetries: 32,\n      retryDelay: 250,\n      force: true\n    })\n  }\n  ee().emit(\"fileChanged\")\n  ee().emit(\"clearCache\")\n}\n\nfunction imgCacheSubdir(src: PosixFile): string[] {\n  // Ideally, we'd use the file SHA, but that's expensive, so use a less stable but cheaper hash that includes filesize and mtime:\n  const s = src.statSync({ refresh: true })\n\n  // We're SHA'ing the JSON to avoid name collisions with files that end with\n  // a file size (! highly unlikely)\n  const sha = shortFsStringSha(\n    JSON.stringify({\n      // we have to use baseWithGrandparent for tests (as SharpReadable.spec\n      // uses these paths!)\n      np: isTest ? ciSafePath(src) : src.nativePath,\n      size: s?.size,\n      mtime: isTest ? 0 : s?.mtime // < make tests deterministic\n    }),\n    24\n  )\n\n  // Truncated to 24 to hopefully avoid max path issues on windows: (linux\n  // kernel has to truncate to 15 chars (64 bits) to avoid collisions, so 24\n  // at base32 (120 bits) should be fine). we could probably get away with\n  // dropping all the files directly into the imgtmp dir because they have to\n  // be cleaned up, but having 2-deep directories (1024 * 1024) should cover\n  // at least an hour of processing:\n\n  return splitEvery(sha.slice(0, 24), 2, 3)\n}\n\n/**\n * Random tempfile for easy-to-produce image caching.\n *\n * DON'T USE FOR RAW! use cachedImgFile_() instead!\n */\nexport async function tmpImageFile_(args: {\n  src: SimpleFile\n  tag: string\n  ext: string\n}): Promise<PosixFile> {\n  const dir = await imageCacheDir_()\n  const result = getDevEnvFlag(\"PS_NO_RANDOM_IMAGE_CACHE\")\n    ? // path needs to be predictable for tests\n      dir.join(\n        \"tmp\",\n        basename(args.src.dir).normalize(),\n        args.src.name.normalize(),\n        args.tag + args.ext\n      )\n    : dir.join(\n        \"tmp-\" + TokenRadix.randomChars(2),\n        TokenRadix.randomChars(16) + toS(args.ext)\n      )\n  await result.parent().mkdirp_()\n  return result\n}\n\n/**\n * @throws on error\n */\nexport async function cachedImageFile_(\n  src: PosixFile,\n  desc?: string,\n  ext?: string\n): Promise<PosixFile> {\n  const dir = await imageCacheDir_()\n\n  desc ??= src.name\n  ext = ensurePrefix(ext ?? src.ext, \".\")\n\n  const parent = dir.join(...imgCacheSubdir(src))\n  await parent.mkdirp_()\n  // make sure we don't prematurely delete the parent cache dir.\n\n  // note: we don't need to touch the whole directory ancestry: we just need to\n  // touch the parent (grandparents will then not be empty)\n\n  // we're using utimes() here instead of touch() to avoid the extra call to\n  // ensureExists():\n  await parent.utimes()\n\n  const result = parent.join(desc + ext)\n\n  logger().debug(\"cachedImgFile(\" + src.baseWithGrandparent + \")\", {\n    desc,\n    ext,\n    result\n  })\n  return result\n}\n\n/**\n * Only applies the readable thunk if the tmpfile doesn't already exist.\n *\n * @throws if f() has issues generating a readable, or the readable has errors\n * during stream.\n */\nexport async function readableToFile_({\n  src,\n  desc,\n  suffix,\n  f\n}: {\n  src: PosixFile\n  desc: string\n  suffix: string\n  f: (destination: PosixFile) => Promise<void>\n}): PromiseMaybe<PosixFile> {\n  const dest = await cachedImageFile_(src, desc, suffix)\n  return dest.applyIfEmpty_({ fn_: f })\n}\n\n/** Only applies the thunk if the tmpfile doesn't already exist */\nexport async function withImageCache_(\n  src: PosixFile,\n  desc: string,\n  ext: string,\n  applyIfEmpty_: (dest: PosixFile) => Promise<any>\n): Promise<PosixFile> {\n  try {\n    const dest = await cachedImageFile_(src, desc, ext)\n    await dest.applyIfEmpty_({\n      fn_: applyIfEmpty_,\n      skipFsLock: false,\n      skipWip: false,\n      timeoutMs: commandTimeoutMs(),\n      minSizeBytes: 256,\n      dirty: true // It's ok to leave the fslock directories. They'll get cleaned up later. Speedy finishes SharpReadable.spec in 40s with dirty, 55s with !dirty.\n    })\n    return dest\n  } catch (error) {\n    return logger().throw(\"withImgCache_() failed\", {\n      error,\n      src: src.nativePath,\n      desc,\n      ext\n    })\n  }\n}\n","import _sharp from \"sharp\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { dmegapixels } from \"../../fe/Dimensions\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { time } from \"../async/PromiseTimer\"\nimport { rgb2labTriplets } from \"../color/Colorspace\"\nimport { DominantColor } from \"../color/DominantColor\"\nimport { extractDominantColors } from \"../color/DominantColors\"\nimport { labsAreGreyscale } from \"../color/Lab\"\nimport { isModeData, omitModeData, WithModeData } from \"../color/ModeData\"\nimport { isEnvTrue } from \"../env/GetEnv\"\nimport { DoNotSendErrorFlag, NonFatalErrorFlag } from \"../error/ErrorFlags\"\nimport { FileCache } from \"../fs/FileCache\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile, toNativePath_ } from \"../fs/SimpleFile\"\nimport { mkLogger } from \"../Logger\"\nimport { b64encodeBits } from \"../math/b64\"\nimport { Settings } from \"../settings/Settings\"\nimport { shim1 } from \"../Shim1\"\nimport { isVideoMimeType } from \"../tags/MimeTypes\"\nimport { extractSizeInfoFromFile, SizeInfo } from \"../tags/SizeInfo\"\nimport { dctHash, dctHashCIELAB } from \"./DCTHash\"\nimport { fitToResolution } from \"./Dimensions\"\nimport { meanDiffHash, meanDiffHashCIELAB } from \"./MeanDiffHash\"\nimport {\n  DescribedSharpReadable,\n  sharpReadable_,\n  toSharp\n} from \"./SharpReadable\"\n\n// https://datascience.stackexchange.com/questions/48642/how-to-measure-the-similarity-between-two-images\n\n// Research later: https://erdogant.github.io/undouble/pages/html/hash_functions.html\n\nexport interface ImageHash {\n  mimetype: string\n\n  /**\n   * b64 8x8 L*a*b* triplet ahash\n   */\n  meanHash: string\n  dctHash: string\n  diffHash: string\n\n  dominantColors: DominantColor[]\n  dominantColorsDescription?: string\n  dominantColorScore?: number\n\n  /** width of original image */\n  width: number\n  /** height of original image */\n  height: number\n  /** is the original image greyscale? */\n  isGreyscale: boolean // asset files don't have this\n\n  /** is the image on disk rotated by metadata? */\n  rotation: number\n}\n\n/**\n * How many bits-wide values can be bit-concatted into a single value?\n */\nexport function maxPerBits(bits: number): number {\n  // We don't want to overflow Javascript numbers, hence the 52:\n  return Math.floor(52 / bits)\n}\n\nconst logger = lazy(() => mkLogger(\"img.ImageHash\"))\n\n/**\n * Image fingerprint to find duplicate images (so strive for no false\n * positives).\n *\n * May match against global exposure changes.\n *\n * Does not need to match cropping or free rotations.\n *\n * Moving the pixels to L*a*b* means we can pick bin to perceptual ranges.\n */\nexport async function imageHash(\n  f: string | SimpleFile\n): Promise<Maybe<ImageHash>> {\n  try {\n    return await imageHash_(toNativePath_(f))\n  } catch (err) {\n    logger().warn(\"imageHash() failed for \" + f, err)\n    return\n  }\n}\n\nconst cache = lazy(\n  () =>\n    new FileCache<Maybe<ImageHash>>({\n      name: \"img.imageHash\",\n      timeoutMs: minuteMs,\n      useFsCache: true,\n      fsCacheTtlMs: 5 * minuteMs\n    })\n)\n\nexport const imageHash_ = shim1({\n  name: \"img.imageHash\",\n  cache,\n  impl: _imageHash_\n})\n\nexport async function _imageHash_(nativePath: string): Promise<ImageHash> {\n  const file = PosixFile.for(nativePath)\n\n  const sizeInfo = await extractSizeInfoFromFile(file)\n  if (sizeInfo == null) {\n    throw new Error(\n      \"Failed to read dimensions for \" +\n        nativePath +\n        NonFatalErrorFlag +\n        DoNotSendErrorFlag\n    )\n  }\n\n  const minDim = fitToResolution(\n    sizeInfo.dimensions,\n    Math.round(Settings.dominantColorPixels.valueOrDefault)\n  )\n\n  // Don't count sharp-readable time inside the image-hash time!\n  const readable = await sharpReadable_(file, minDim)\n  return time(`img.imageHash`, () => __imageHash_({ file, readable, sizeInfo }))\n}\n\nexport function isImageHash(o: any): o is ImageHash {\n  return (\n    o != null &&\n    notBlank(o.meanHash) &&\n    notBlank(o.mimetype) &&\n    isNotEmpty(o.dominantColors) // < prevents empty dominant color array from \"matching\"\n    // isGreyscale is optional\n  )\n}\n\nexport type ImageHashish =\n  | ImageHash\n  | (Omit<ImageHash, \"dominantColors\"> & WithModeData)\n\nexport function toImageHash(ih: Maybe<ImageHashish>): Maybe<ImageHash> {\n  if (ih == null) return\n  if (isImageHash(ih)) {\n    return ih\n  }\n  // The AssetFile model is stores the colors in columns:\n  if (isModeData(ih)) {\n    const result = {\n      ...omitModeData(ih),\n      dominantColors: DominantColor.fromModeData(ih)\n    }\n    if (isImageHash(result)) return result\n  }\n  return\n}\n\n// If this is 4, SyncService tests fail to validate against preview images:\nexport const HashDim = 8\n// larger values don't seem to impact accuracy:\n// meanHamm 3: { k: 18, avg: 0.962, min: 0.86, max: 1, sd: 0.05 }\n// meanHamm 4: { k: 18, avg: 0.968, min: 0.89, max: 1, sd: 0.04 }\n// meanHamm 5: { k: 18, avg: 0.963, min: 0.87, max: 1, sd: 0.03 },\n// meanHamm 6: { k: 18, avg: 0.958, min: 0.88, max: 1, sd: 0.04 },\n// meanHamm 7: { k: 18, avg: 0.945, min: 0.86, max: 1, sd: 0.04 }\n// meanHamm 8: { k: 18, avg: 0.959, min: 0.85, max: 1, sd: 0.04 },\n\n// Most EXIF thumbprints are 120x160, so less than that should be fine.\n// NOTE: smaller dimensions (like 48) cause panoramas to fail tests.\n\nasync function __imageHash_({\n  file,\n  readable,\n  sizeInfo\n}: {\n  file: PosixFile\n  readable: Maybe<DescribedSharpReadable>\n  sizeInfo: SizeInfo\n}): Promise<ImageHash> {\n  const l = mkLogger(\"ImageHash(\" + file + \")\")\n  if (readable == null) {\n    return l.throw(\"Cannot build readable stream\")\n  }\n\n  const s1dims = fitToResolution(\n    sizeInfo.dimensions,\n    Settings.dominantColorPixels.valueOrDefault\n  )\n\n  if (isEnvTrue(\"DEBUG_IMAGE_HASH\" as any)) {\n    const out = \"/tmp/image-hash-\" + file.base + \"-orig.jpg\"\n    await toSharp(readable).jpeg().toFile(out)\n    console.log({ out, readable })\n  }\n\n  let s1 = toSharp(readable)\n    // PNGs and TIFFs can have an alpha channel. We don't want that.\n    .removeAlpha()\n  // Some TIFFs and HEIFs are in a different colorspace. Normalize to sRGB.\n  // .toColorspace(\"srgb\")\n  // NOTE: DON'T NORMALIZE s1, it mucks up what the actual dominant colors are!\n\n  // Video frames will have been rotated for us already by ffmpeg.\n  if (!isVideoMimeType(readable.mimetype)) {\n    // Sharp doesn't do rotation correctly with raw images, so we have to be\n    // explicit with the rotation.\n    s1 = s1.rotate(sizeInfo.rotation)\n  }\n\n  if (dmegapixels(sizeInfo.dimensions) < 0.1) {\n    s1 = s1\n      // Some thumbnails have \"letterboxing\" (black bars) on the top and bottom. This won't be found on larger previews or original images.\n      .trim({ background: \"#000\", threshold: 0 })\n  }\n\n  s1 = s1.resize({\n    fit: _sharp.fit.outside,\n    ...s1dims,\n    withoutEnlargement: true\n  })\n\n  // _We_ have to do the RGB to L*a*b* conversion because raw() doesn't work:\n  // https://github.com/lovell/sharp/issues/681\n  const { data: rgb, info: rgbInfo } = await s1\n    .raw()\n    .toBuffer({ resolveWithObject: true })\n\n  if (isEnvTrue(\"DEBUG_IMAGE_HASH\" as any)) {\n    const out = \"/tmp/image-hash-\" + file.base + \"-\" + rgbInfo.width + \"w.jpg\"\n    await _sharp(rgb, { raw: { ...rgbInfo, channels: 3 } })\n      .jpeg()\n      .toFile(out)\n    console.log({ out, rgbInfo, readable })\n  }\n\n  const labTriplets = rgb2labTriplets(rgb)\n\n  const dc = extractDominantColors(labTriplets)\n\n  const isGreyscale = labsAreGreyscale(labTriplets)\n\n  const img = () => _sharp(rgb, { raw: { ...rgbInfo, channels: 3 } })\n\n  const meanDiff = await (isGreyscale ? meanDiffHash : meanDiffHashCIELAB)(\n    img()\n  )\n  const phashBits = await (isGreyscale ? dctHash : dctHashCIELAB)(img())\n\n  return {\n    meanHash: b64encodeBits(meanDiff.meanHash),\n    diffHash: b64encodeBits(meanDiff.diffHash),\n    dctHash: b64encodeBits(phashBits),\n    dominantColors: dc.dominantColors,\n    dominantColorsDescription: dc.description,\n    dominantColorScore: dc.dominantColorScore,\n\n    isGreyscale,\n    mimetype: readable.mimetype,\n    ...sizeInfo.dimensions,\n    rotation: sizeInfo.rotation ?? 0\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { sum } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { isCloseAspectRatio, maybeDimSwap } from \"../../fe/Dimensions\"\nimport { andList } from \"../../fe/FmtList\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { clamp, gte, isNumber, lt, sigFigs } from \"../../fe/Number\"\nimport { padding } from \"../../fe/Pad\"\nimport { greatestBy } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { hammRatioIntArrays, within } from \"../Number\"\nimport { closestLab } from \"../color/Colorspace\"\nimport { diffCIECorr } from \"../color/DeltaE\"\nimport { dominantColorCorrelation } from \"../color/DominantColorCorrelation\"\nimport { Triplet } from \"../color/Triplet\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { LogLevel } from \"../log/LogLevel\"\nimport { Average } from \"../math/Average\"\nimport { rotateSquareMatrix } from \"../math/SquareMatrix\"\nimport { avg } from \"../math/Vector\"\nimport { b64decode, b64encode } from \"../math/b64\"\nimport { Settings } from \"../settings/Settings\"\nimport { aspectRatio } from \"./Dimensions\"\nimport {\n  HashDim,\n  ImageHashish,\n  imageHash,\n  isImageHash,\n  toImageHash\n} from \"./ImageHash\"\nimport { fmtAspectRatio } from \"./Ratio\"\n\nconst logger = lazy(() => mkLogger(\"img.ImageHashComparison\"))\n\nexport type ImageHashComparison = NonNullable<\n  ReturnType<typeof compareImageHashes>\n>\n\n// export interface ImageHashComparison {\n//   a: ImageHash\n//   b: ImageHash\n//   // rename these \"corr\" to \"coeff\"\n//   meanHashCorr: number\n//   // not set if images are rotated\n//   diffHashCorr?: number\n//   // not set if images are rotated\n//   dctHashCorr?: number\n//   minImageCorr: number\n//   imageCoeffDelta: number\n//   colorCorr: number\n//   minColorCorr: number\n//   colorCoeffDelta: number\n//   isGreyscale: boolean\n//   /**\n//    * How many degrees does `a` need to be rotated to match `b`?\n//    */\n//   aRotation: number\n//   aAspectRatio?: number\n//   bAspectRatio?: number\n//   isSimilar: boolean\n//   whyNotSimilar: Maybe<string>\n// }\n\nexport function isImageHashComparison(obj: any): obj is ImageHashComparison {\n  return (\n    obj != null &&\n    isImageHash(obj.a) &&\n    isImageHash(obj.b) &&\n    [obj.imageCorr, obj.colorCorr, obj.aRotation].every(isNumber)\n  )\n}\n\n/** @return 1 for full color correlation, 0 for no color correlation */\nexport function labsCorr2(a: Triplet[], b: Triplet[]) {\n  const diffs =\n    sum(a, ea => diffCIECorr(ea, closestLab(b, ea))) +\n    sum(b, ea => diffCIECorr(ea, closestLab(a, ea)))\n\n  const len = Math.max(a.length, b.length, diffs)\n\n  return (len - diffs) / len\n}\n\nconst GreyscaleRE = /A{20}=?$/\n\nexport function isGreyscaleMeanHash(meanHash: Maybe<string>) {\n  // 11 characters to encode 64 bits with base 64 (b64 encodes 6 bits per\n  // character)\n  return (\n    meanHash != null &&\n    (within(7, 12, meanHash.length) || meanHash?.match(GreyscaleRE) != null)\n  )\n}\n\nconst Degrees = [0, 90, 270, 180]\n\n/**\n * image hashes are produced by b64encodeBits(flatten(l[], a[], b[])): so the\n * lightness mean bits are the first dim^2 bits.\n *\n * @param b64 assumed to have been produced by b64encodeBits(flatten(l[], a[], b[])):\n *\n * @return number[] dim^2 long, ready to be rotated.\n */\nfunction splitbits(\n  b64: string,\n  greyscale: boolean,\n  dim: number = HashDim\n): number[] {\n  // We may be given a color meanhash but asked to render as greyscale.\n  const bits = b64decode(b64)\n    .toString(2)\n    .split(\"\")\n    .map(ea => (ea === \"1\" ? 1 : 0)) // < binary parseInt\n\n  const dim2 = dim * dim\n\n  // left pad with 0s\n  while (bits.length % dim2 !== 0) {\n    bits.unshift(0)\n  }\n\n  // console.log(\"splitbits()\", {\n  //   b64,\n  //   decoded: b64decode(b64),\n  //   bitsLen: bits.length\n  // })\n\n  const only_l_bits = bits.length === dim2\n  if (only_l_bits || greyscale) return bits.slice(0, dim2)\n\n  const result = bits.slice(0, dim2).map((ea, idx) => {\n    const l = ea\n    const a = bits[idx + dim2]\n    const b = bits[idx + dim2 * 2]\n    return l * 4 + a * 2 + b\n  })\n\n  return result\n}\n\nexport function meanHashVariants(\n  a: string,\n  greyscale = false,\n  dim: number = HashDim\n) {\n  greyscale = greyscale || a.match(GreyscaleRE) != null\n  const suffix = greyscale ? padding(\"0\", 2 * dim * dim) : \"\"\n  const m_a = splitbits(a, greyscale, dim)\n  return Degrees.map(deg =>\n    b64encode(\n      BigInt(\n        \"0b0\" +\n          rotateSquareMatrix(m_a, deg)\n            .map(ea => ea.toString(2))\n            .join(\"\") +\n          suffix\n      )\n    )\n  )\n}\n\n/**\n * @param a is a b64-encoded set of ModeBits^2 triple-bits (one bit for L*, one\n * for a*, one for b*).\n */\nexport function hammRatio({\n  a,\n  b,\n  greyscale,\n  dim = HashDim,\n  noRotation = false\n}: {\n  a: Maybe<string>\n  b: Maybe<string>\n  greyscale: boolean\n  dim?: number\n  noRotation?: boolean\n}): { hammRatio: number; aRotation: number } {\n  if (blank(a) || blank(b)) return { hammRatio: 0, aRotation: 0 }\n  if (a === b) return { hammRatio: 1, aRotation: 0 }\n\n  const m_a = splitbits(a, greyscale, dim)\n  const m_b = splitbits(b, greyscale, dim)\n\n  const results = (noRotation ? [0] : Degrees).map(aRotation => ({\n    aRotation,\n    hammRatio: sigFigs(\n      hammRatioIntArrays(\n        rotateSquareMatrix(m_a, aRotation),\n        m_b,\n        greyscale ? 1 : 3\n      ),\n      2\n    )\n  }))\n\n  logger().debug(\"hammRatio()\", { results })\n\n  // console.log(\"hammRatio()\", {\n  //   a,\n  //   m_a,\n  //   b,\n  //   m_b,\n  //   results,\n  //   greyscale\n  // })\n\n  // If quality scores are similar, prefer no rotation, or 90 degrees left or\n  // right:\n  const result = greatestBy(results, ea => [\n    sigFigs(ea.hammRatio, 1),\n    Degrees.indexOf(ea.aRotation as any)\n  ])!\n  return {\n    aRotation: result.aRotation,\n    hammRatio: sigFigs(result.hammRatio, 2)\n  }\n}\n\nexport async function isSimilarImage(\n  a: PosixFile,\n  b: PosixFile,\n  level: LogLevel = \"debug\",\n  opts: ComparisonOptions = {}\n): PromiseMaybe<boolean> {\n  return logger().tap({\n    msg: `isSimilarImage(${a},${b})`,\n    level,\n    result: isSimilarImageHash(await imageHash(a), await imageHash(b), opts)\n  })\n}\n\nexport interface ComparisonOptions {\n  capturedAtIsFuzzy?: boolean\n  forceColor?: boolean\n  forceGreyscale?: boolean\n  minImageCorr?: number\n  minColorCorr?: number\n  noRotation?: boolean\n}\n\nexport function compareImageHashes(\n  a_: Maybe<ImageHashish>,\n  b_: Maybe<ImageHashish>,\n  opts: ComparisonOptions = {}\n) {\n  // toImageHash will return null if the object is invalid (like if dominantColors is empty or meanHash is blank)\n  const a = toImageHash(a_)\n  const b = toImageHash(b_)\n  if (a == null || b == null) return\n\n  const capturedAtIsFuzzy = isTrue(opts.capturedAtIsFuzzy)\n  const isGreyscale = isTrue(opts.forceColor)\n    ? false\n    : isTrue(opts.forceGreyscale) ||\n      (a.isGreyscale ?? isGreyscaleMeanHash(a.meanHash)) ||\n      (b.isGreyscale ?? isGreyscaleMeanHash(b.meanHash))\n\n  const meanHashCorr = hammRatio({\n    a: a.meanHash,\n    b: b.meanHash,\n    greyscale: isGreyscale,\n    noRotation: opts.noRotation\n  })\n\n  const diffHashCorr = hammRatio({\n    a: a.diffHash,\n    b: b.diffHash,\n    greyscale: isGreyscale,\n    noRotation: true // < dhash bits can't be rotated\n  })\n\n  const dctHashCorr = hammRatio({\n    a: a.dctHash,\n    b: b.dctHash,\n    greyscale: isGreyscale, // dcthash is always greyscale\n    noRotation: true // < DCT matrix can't be rotated\n  })\n\n  const colorCorr = dominantColorCorrelation(a.dominantColors, b.dominantColors)\n\n  if (colorCorr == null) {\n    logger().debug(\"imageHashCompare(): missing color correlation\")\n    return\n  }\n\n  const mimeMatches = a.mimetype === b.mimetype\n\n  const aAspectRatio = aspectRatio(maybeDimSwap(a, meanHashCorr.aRotation))\n  const bAspectRatio = aspectRatio(b)\n\n  // Only reject image hashes if they both include an aspect ratio, and they aren't rotated.\n  const aspectRatioMismatches =\n    aAspectRatio != null &&\n    bAspectRatio != null &&\n    !isCloseAspectRatio(aAspectRatio, bAspectRatio)\n\n  let imageCoeffDelta = 0\n  let colorCoeffDelta = 0\n\n  if (capturedAtIsFuzzy) {\n    colorCoeffDelta += Settings.imageHashFuzzyDateDelta.valueOrDefault\n    imageCoeffDelta += Settings.imageHashFuzzyDateDelta.valueOrDefault\n  }\n  if (!mimeMatches) {\n    colorCoeffDelta += Settings.imageHashDifferentMimetypesDelta.valueOrDefault\n    imageCoeffDelta += Settings.imageHashDifferentMimetypesDelta.valueOrDefault\n  }\n  if (isGreyscale) {\n    imageCoeffDelta += Settings.imageHashGreyscaleDelta.valueOrDefault\n    colorCoeffDelta += Settings.imageHashGreyscaleDelta.valueOrDefault\n  }\n\n  const minImageCorr = clamp01(\n    (imageCoeffDelta +\n      (opts.minImageCorr ?? Settings.minImageCoeffPct.valueOrDefault)) /\n      100\n  )\n\n  const minColorCorr = clamp01(\n    (colorCoeffDelta +\n      (opts.minColorCorr ?? Settings.minColorCoeffPct.valueOrDefault)) /\n      100\n  )\n\n  const why: string[] = []\n\n  if (aspectRatioMismatches) {\n    why.push(\n      `aspect ratio mismatch (${fmtAspectRatio(\n        aAspectRatio\n      )} vs ${fmtAspectRatio(bAspectRatio)})`\n    )\n  }\n\n  const failingImageHashes: string[] = []\n  const hashAvg = new Average()\n  hashAvg.push(meanHashCorr.hammRatio)\n\n  if (meanHashCorr.hammRatio < minImageCorr) {\n    failingImageHashes.push(\"mean\")\n  }\n\n  // We can't use these hashes if there's rotation involved. *tear*\n  const onlyMeanHash = meanHashCorr.aRotation !== 0\n  if (!onlyMeanHash) {\n    map(diffHashCorr?.hammRatio, ea => hashAvg.push(ea))\n    map(dctHashCorr?.hammRatio, ea => hashAvg.push(ea))\n\n    if (lt(diffHashCorr?.hammRatio, minImageCorr)) {\n      failingImageHashes.push(\"gradient\")\n    }\n    if (lt(dctHashCorr?.hammRatio, minImageCorr)) {\n      failingImageHashes.push(\"DCT\")\n    }\n  }\n\n  if (failingImageHashes.length > 0) {\n    why.push(\"different image content (\" + andList(failingImageHashes) + \")\")\n  }\n\n  const colorPass = colorCorr >= minColorCorr\n  // If any of the hashes are quite sure they are different, they will pull\n  // down the average to reject the match.\n  const isSimilar = colorPass && hashAvg.avg! >= minImageCorr\n\n  if (!colorPass) {\n    why.push(\"different dominant colors\")\n  }\n\n  return logger().tap({\n    msg: \"compareImageHashes()\",\n    level: \"info\",\n    result: {\n      a,\n      b,\n      meanHashCorr: sigFigs(meanHashCorr.hammRatio, 2),\n      diffHashCorr: onlyMeanHash\n        ? undefined\n        : map(diffHashCorr, ea => sigFigs(ea.hammRatio, 2)),\n      dctHashCorr: onlyMeanHash\n        ? undefined\n        : map(dctHashCorr, ea => sigFigs(ea.hammRatio, 2)),\n      hashCorrAvg: hashAvg.avg!,\n      minImageCorr,\n      imageCoeffDelta,\n      colorCorr: sigFigs(colorCorr, 2),\n      minColorCorr,\n      colorCoeffDelta,\n      isGreyscale,\n      aRotation: meanHashCorr.aRotation,\n      aAspectRatio,\n      bAspectRatio,\n      isSimilar,\n      whyNotSimilar: isSimilar ? undefined : andList(why)\n    }\n  })\n}\n\nexport async function isVerySimilarImage(\n  a: PosixFile,\n  b: PosixFile,\n  level: LogLevel = \"debug\",\n  opts: ComparisonOptions = {}\n): PromiseMaybe<boolean> {\n  return isSimilarImage(a, b, level, {\n    ...opts,\n    minImageCorr: 0.92,\n    minColorCorr: 0.92\n  })\n}\n\nexport function isSimilarImageHash(\n  a: Maybe<ImageHashish>,\n  b: Maybe<ImageHashish>,\n  opts?: ComparisonOptions\n): boolean {\n  return compareImageHashes(a, b, opts)?.isSimilar ?? false\n}\n\nfunction clamp01(i: number): number {\n  return sigFigs(clamp(0, 1, i), 3)\n}\n\nexport function isVerySimilarImageHash(\n  a: Maybe<ImageHashish>,\n  b: Maybe<ImageHashish>,\n  opts: ComparisonOptions = {}\n): boolean {\n  return isVerySimilarComparison(compareImageHashes(a, b, opts))\n}\n\nexport function isVerySimilarComparison(\n  c: Maybe<ImageHashComparison>\n): boolean {\n  if (c == null) return false\n  return gte(c.meanHashCorr, 0.9) && gte(c.colorCorr, 0.9)\n}\n\n/**\n * @return 1 for perfect match, < .6 for different images\n */\nexport function imageHashSimilarity(\n  a: Maybe<ImageHashish>,\n  b: Maybe<ImageHashish>\n): Maybe<number> {\n  return map(compareImageHashes(a, b), c => avg([c.meanHashCorr, c.colorCorr]))\n}\n","import _sharp from \"sharp\"\nimport { inspect } from \"util\"\nimport { lazy } from \"../../core/Lazy\"\nimport {\n  Dimensions,\n  dimSwap,\n  dmegapixels,\n  isPortrait\n} from \"../../fe/Dimensions\"\nimport { ImageSizeName } from \"../../fe/ImageSizes\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { megapixels } from \"../../fe/Units\"\nimport { greatestBy } from \"../Array\"\nimport { Settings } from \"../settings/Settings\"\nimport { Fit, OutputSize, Reducer, Square } from \"./Reducers\"\nimport { sharpRenderOptions } from \"./Sharp\"\n\n// https://www.bhphotovideo.com/FrameWork/charts/resolutionChartPopup.html\n// says 2240 x 1680, or 4 Megapixels, is \"Photo Quality\" 8x10 prints. That's\n// ~210 pixels per inch, which is fine for some continuous tone images, but\n// high-contrast line art should see 300 at least.\n\n// We want to render assets on a 5k display quickly.\n\n// If we can cheaply stream the original file, we don't need to save a\n// 5K UHD-resized version.\n\n// \"cheaply stream\" requires the following to be true:\n\n// * not RAW\n// * not enormous (> 20MP)\n\n// x2 image resolutions results in a 20MB, 318 file previews directory.\n// x3 image resolutions results in a 17MB, 210 file previews directory.\n\n// Possible resize strategies:\n\n// megapixel-based (.5MP, 1MP, 2MP, 3MP, ...)\n\n// file size based (2k, 8k, 32k, 128k, ...)\n\n// use popular display sizes, k-means grouping with 4 sizes\n\n// there are *many* display resolutions from 720p through 5k--we'll get it\n// wrong--so what are we trying to do here?\n\n// * We want to make the UI fast by reducing the bytes needed to render a page,\n//   so we want different sizes of previews.\n\n// * We want to minimize the work the browser and webserver need to do to per\n//   request, so if we're going to resize previews, it needs to be < 100ms of\n//   work per image.\n\n// * We want a previews directory that is only as large as it needs to be.\n\n// We could probably serve smaller image resizes on the fly if the source image\n// was small enough (< 2 MP)? But that won't save much disk space.\n\n// A page of several hundred thumbnails would crush the webserver's CPU if the\n// per-request expense is sufficiently high.\n\n// Each halving of width quarters the size of the image, of course, so size\n// drops geometrically.\n\n// https://docs.google.com/spreadsheets/d/18j8oBFwPu9lwQKk2RgpeDIZ5k2bpb5WF7rbHFQwP_4s/edit?usp=sharing\n\n// Display sizes:\n// 1136 × 640: iPhone SE\n// 1280 × 720: HD, cheap android phones\n// 1334 x 750: iPhone 6, iPhone 7\n// 1920 x 1080: FHD: TVs, iPhone 6 Plus, iPhone 7 Plus, Google Pixel, Nexus 5x, Chromebooks\n// 2048 x 1536: iPads, Nexus 9\n// 2436 x 1125: iPhone X\n// 2560 x 1440: QHD: Nexus 6P, Google Pixel XL, Samsung Note 5\n// 3120 x 1440: OnePlus 7 Pro\n// 2560 x 1600: 13\" Retina Macbook\n// 2880 x 1440: QHD+: Pixel 2 XL\n// 2732 x 2048: iPad Pro\n// 2880 x 1800: 15\" Retina Macbook\n// 3840 × 2160: UHD 4k monitor\n// 5120 × 2880: iMac 5k\n\n// Camera resolutions:\n// First(ish) camera with selfie cam: iPhone 4: front: VGA (480P) rear: 2592x1936\n\n// srcset only works with widths, so images fit to common native screen\n// resolutions will most likely not be the native resolution width, hence the\n// name\n\n// https://en.wikipedia.org/wiki/Graphics_display_resolution\n// https://en.wikipedia.org/wiki/Pixel#/media/File:Sensoraufl%C3%B6sungen.svg\n\nexport class ImageSize {\n  static readonly #sizes: ImageSize[] = []\n\n  static sq(): ImageSize[] {\n    return this.#sizes.filter(ea => ea.reducer === Square)\n  }\n  static largestSq(): ImageSize {\n    return greatestBy(this.sq(), ea => ea.megapixels())!\n  }\n\n  static fit(): ImageSize[] {\n    const arr = Settings.previewResolutions.valueOrDefault\n    return this.#sizes.filter(ea => ea.reducer === Fit && arr.includes(ea.name))\n  }\n  static largestFit(): ImageSize {\n    return greatestBy(this.fit(), ea => ea.megapixels())!\n  }\n\n  static all(): ImageSize[] {\n    return [...this.#sizes]\n  }\n\n  // Landscape fullscreen native resolution sizes:\n\n  // These images are fit to these boundaries without any cropping\n\n  // static readonly UHD5K = new ImageSize(\"uhd5k\", 5120, 5120, Fit)\n\n  // fit-* files are reduced in size until the entire image fits in the given\n  // dimensions. No cropping is done.\n\n  // Given that we always serve the original as a width, UHD and QHD isn't\n  // needed. FHD is only used to reduce network load.\n\n  // 5K UHD: (14.7 MP)\n  // UHD: (8.3 MP) ~1MiB\n  // FHD: (2 MP) ~500KiB\n  // FWXGA: (1.2 MP) ~300K\n  // HD: (.9 MP) ~100K\n  // SD: (.3 MP) 46K\n  // w240 (.1 MP) 13K\n\n  // These aren't rotational (as of 2020):\n  static readonly UHD8k = new ImageSize(\"uhd8k\", 7680, 4320, Fit, false)\n  static readonly UHD5k = new ImageSize(\"uhd5k\", 5120, 2880, Fit, false) // < 15 MP\n\n  // As of 2020, 4k displays are *normally* landscape.\n  static readonly UHD = new ImageSize(\"uhd4k\", 4096, 2160, Fit)\n\n  // Flagship smartphone screens. Rotational.\n  static readonly QHD = new ImageSize(\"qhd\", 3120, 1440, Fit)\n\n  // 1920x1080 is 1080p. fit to 1920x1920 to fill a 1080p display (most smartphones)\n  // Only one of these will be built, and it depends on the orientation of the image:\n  static readonly FHD = new ImageSize(\"fhd\", 1920, 1080, Fit)\n\n  // FWXGA is so close to FHD, just send them the fhd and save time and space.\n  // // 1366x768 (FWXGA) is (at least as of 2018) the most popular screen\n  // // resolution, according to\n  // // http://gs.statcounter.com/screen-resolution-stats/desktop/worldwide\n  // but 720 video is 720x1280, so this makes a better poster image:\n  static readonly HD = new ImageSize(\"hd\", 1280, 720, Fit)\n\n  // 720x480 is WVGA or 480p (aka \"EDTV\"). Presumably will be used if the window\n  // isn't full screen.\n  static readonly WVGA = new ImageSize(\"wvga\", 720, 480, Fit)\n\n  // old videos are 320x240, so 256 is slightly too big, and made the thumbnails horrible.\n  static readonly QVGA = new ImageSize(\"qvga\", 320, 240, Fit)\n\n  // 160x100 is the wonderfully descriptive QQVGA standard.\n  static readonly QQVGA = new ImageSize(\"qqvga\", 160, 120, Fit)\n\n  // Anything smaller than qqvga is silly, because sending <1k JPEGs vs ~1.5k\n  // JPEGs, it's still just one TCP packet. Note that each additional file\n  // also makes scanning the previews directory slower.\n\n  // sq-* are constrained to a square:\n\n  // Typical file sizes:\n  // sq-w480: ~40-100k\n  // sq-w240: 10-30k\n  // sq-w120: 4-8k\n  // sq-w60: 1-3k\n\n  static readonly S480 = new ImageSize(\"s480\", 480, 480, Square)\n  static readonly S240 = new ImageSize(\"s240\", 240, 240, Square)\n  static readonly S120 = new ImageSize(\"s120\", 120, 120, Square)\n  static readonly S60 = new ImageSize(\"s60\", 60, 60, Square)\n\n  // See the note about about f80 being silly.\n\n  // static readonly S32 = new ImageSize(\"s32\", 32, 32, Square, \"s64\")\n\n  readonly max: Dimensions\n\n  private constructor(\n    readonly name: ImageSizeName,\n    readonly maxWidth: number,\n    readonly maxHeight: number,\n    readonly reducer: Reducer,\n    readonly rotational = true\n  ) {\n    this.max = { width: maxWidth, height: maxHeight }\n    ImageSize.#sizes.push(this)\n  }\n\n  [inspect.custom]() {\n    return {\n      ctor: \"ImageSize\",\n      name: this.name + \" (\" + this.reducer.name + \")\",\n      maxDim: this.maxWidth + \"×\" + this.maxHeight,\n      maxMP: this.megapixels()\n    }\n  }\n\n  get aspectRatio() {\n    return this.maxWidth / this.maxHeight\n  }\n\n  get maxPixels() {\n    return this.maxWidth * this.maxHeight\n  }\n\n  get minDimension() {\n    return Math.min(this.maxWidth, this.maxHeight)\n  }\n\n  readonly megapixels = lazy(() => megapixels(this.maxWidth * this.maxHeight))\n\n  outputSize(inputSize: Dimensions): Maybe<OutputSize> {\n    return this.reducer.reduce(\n      this.rotational && isPortrait(inputSize) ? dimSwap(this.max) : this.max,\n      inputSize\n    )\n  }\n\n  resize(outputSize: Dimensions, s: _sharp.Sharp): _sharp.Sharp {\n    // SITS: SHARP TYPINGS ARE CRAP\n    s = (s as any).resize({\n      ...outputSize,\n      fit: this.reducer.fit,\n      withoutEnlargement: true\n    })\n\n    return s\n  }\n\n  toJpeg({\n    path,\n    sh,\n    outputSize\n  }: {\n    path: string\n    sh: _sharp.Sharp\n    outputSize: Dimensions\n  }): Promise<_sharp.OutputInfo> {\n    // we don't need to add colorspace or metadata, as sRGB and tag stripping is\n    // on by default.\n\n    const mp = dmegapixels(outputSize)\n    if (mp < 2 || Settings.previewSharpen.valueOrDefault) {\n      sh = sh.sharpen()\n    }\n    return sh.jpeg(sharpRenderOptions()).toFile(path)\n  }\n\n  toString() {\n    return this.name\n  }\n}\n","import { WriteTags } from \"exiftool-vendored\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { assignFields, isEmptyObj, pick } from \"../../fe/Object\"\nimport { mkLogger } from \"../Logger\"\nimport { time } from \"../async/PromiseTimer\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { ExifTags } from \"../tags/ExifTags\"\nimport { overwriteTags_, readTags } from \"../tags/ExifTool\"\n\nconst logger = lazy(() => mkLogger(\"img.includePreviewTags\"))\n\nexport async function includePreviewTags_(src: PosixFile, files: PosixFile[]) {\n  if (\n    false === Settings.includePreviewTags.valueOrDefault ||\n    Settings.includedPreviewTags.isEmpty() ||\n    isEmpty(files)\n  ) {\n    // no-op\n    return\n  }\n\n  logger().info(\"Re-adding metadata to previews...\")\n  await time(\"img.includePreviewTags\", async () => {\n    const writeTags: Partial<ExifTags> & WriteTags = pick(\n      (await readTags(src)) as any,\n      ...Settings.includedPreviewTags.values\n    )\n    // also handle the captured-at and exposure settings\n    const ca = writeTags?.capturedAt\n    if (ca != null) {\n      delete writeTags.capturedAt\n      assignFields(writeTags, ca.asExifTag())\n    }\n    const exp = writeTags?.exposureSettings\n    if (exp != null) {\n      delete writeTags.exposureSettings\n      // These tag locations make Eye of Gnome and Apple Previews happy:\n      writeTags.FocalLength = exp.focalLength\n      writeTags.FNumber = exp.aperture\n      writeTags.ExposureTime = exp.shutterSpeed\n      writeTags.ISO = exp.iso\n    }\n    if (Settings.includedPreviewTags.has(\"Source\")) {\n      writeTags.Source = src.nativePath\n    }\n    if (isEmptyObj(writeTags)) {\n      logger().warn(\n        \"not adding tags to previews: no values for tags in source file\",\n        {\n          src,\n          includedPreviewTags: Settings.includedPreviewTags.values\n        }\n      )\n    } else {\n      logger().info(\"Overwriting preview tags...\", {\n        src,\n        writeTags\n      })\n      await Promise.all(files.map(ea => overwriteTags_(ea, writeTags)))\n    }\n  })\n}\n","import sharp from \"sharp\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { toA } from \"../../fe/toA\"\nimport { rgb2labArray } from \"../color/Colorspace\"\nimport { avg } from \"../math/Vector\"\nimport { HashDim } from \"./ImageHash\"\n\nexport type Binary = 0 | 1\n\nexport function mhash(arr: Buffer | number[]): Binary[] {\n  const m = avg(arr)\n  // Buffer.map() DOES NOT DO WHAT YOU WANT. toA() is REQUIRED.\n  return m == null ? [] : toA(arr).map(ea => (ea >= m ? 1 : 0))\n}\n\nexport function dhash(arr: Buffer | number[]): (0 | 1)[] {\n  // Buffer.map() DOES NOT DO WHAT YOU WANT. toA() is REQUIRED.\n  const pixels = toA(arr)\n  const dim = Math.round(Math.sqrt(pixels.length))\n  return pixels.map((ea, idx) => {\n    // first pixel looks down. first column looks up. all others look left.\n    const p =\n      idx === 0 ? arr[dim] : idx % dim === 0 ? arr[idx - dim] : arr[idx - 1]\n    return ea >= p ? 1 : 0\n  })\n}\n\nexport async function meanDiffHash(img: sharp.Sharp, hashSize = HashDim) {\n  const pixels = await img\n    .greyscale()\n    .resize({\n      // We want to resize to a small square. \"fill\" ignores the aspect ratio:\n      fit: sharp.fit.fill,\n      width: hashSize,\n      height: hashSize\n    })\n    .raw()\n    .toBuffer()\n\n  return {\n    meanHash: mhash(pixels),\n    diffHash: dhash(pixels)\n  }\n}\n\nexport async function meanDiffHashCIELAB(img: sharp.Sharp, hashSize = HashDim) {\n  const rgb = await img\n    .resize({\n      // We want to resize to a small square. \"fill\" ignores the aspect ratio:\n      fit: sharp.fit.fill,\n      width: hashSize,\n      height: hashSize\n    })\n    .raw()\n    .toBuffer()\n\n  // [[L* values], [a* values], [b* values]]:\n  const lab = rgb2labArray(rgb)\n  return {\n    meanHash: flatten(lab.map(mhash)),\n    diffHash: flatten(lab.map(dhash))\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { map } from \"../../fe/Maybe\"\nimport { ID } from \"../../fe/api/ID\"\nimport { mkLogger } from \"../Logger\"\nimport { shim1 } from \"../Shim1\"\nimport { libraryPreviewsDirPosixFile } from \"../dir/LibraryDirs\"\nimport { ForceContext } from \"../settings/ForceContext\"\nimport { AssetPreviewBuilder, PreviewAssetFile } from \"./AssetPreviewBuilder\"\nimport { AssetPreviews } from \"./AssetPreviews\"\n\nexport class Previews {\n  static readonly instance = lazy(() => {\n    mkLogger(\"Previews\").info(\".instance()\", {\n      libraryPreviewsDir: libraryPreviewsDirPosixFile()\n    })\n    return map(libraryPreviewsDirPosixFile(), dir => new Previews(dir))\n  })\n\n  constructor(readonly root: PosixFile) {}\n\n  apb(\n    assetId: number,\n    assetFiles: PreviewAssetFile[],\n    opts: ForceContext\n  ): AssetPreviewBuilder {\n    return new AssetPreviewBuilder(this.ap(assetId), assetFiles, opts)\n  }\n\n  ap(assetId: number | ID) {\n    return new AssetPreviews(this.root, assetId)\n  }\n}\n\nexport interface BuildAssetPreviewsArgs extends ForceContext {\n  assetId: number\n  assetFiles: PreviewAssetFile[]\n  validate?: boolean | undefined\n}\n\nexport const buildAssetPreviews_ = shim1({\n  name: \"img.buildAssetPreviews\",\n  impl: (opts: BuildAssetPreviewsArgs) =>\n    Previews.instance()!.apb(opts.assetId, opts.assetFiles, opts).build_()\n})\n","import { uniqBy } from \"../../fe/Array\"\nimport { Dimensions, maybeDimSwap } from \"../../fe/Dimensions\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { absdiff, isNumber, sigFigs, toGt0 } from \"../../fe/Number\"\nimport { lt } from \"../../fe/Primitive\"\nimport { flatMap, leastBy, leastByCtx } from \"../Array\"\nimport { mapGt0f } from \"../Number\"\n\nexport const Ratios = uniqBy(\n  flatMap(\n    // Common image ratios (hopefully in order of popularity):\n    [\n      [3, 2],\n      [4, 3],\n      [16, 9],\n      [1, 1],\n      [10, 8],\n      [7, 5],\n      // panoramas:\n      [2, 1],\n      [3, 1],\n      [4, 1],\n      [5, 1]\n    ],\n    ([w, h]) => [\n      { i: w / h, s: w + \":\" + h },\n      { i: h / w, s: h + \":\" + w }\n    ]\n  ),\n  ea => ea.s\n)\n\nexport const StandardAspectRatios = Ratios.map(ea => ea.i)\nexport const RatioEpsilon = 0.045\n\nexport function roundToNearestRatio(\n  ratioOrDimension: number | Dimensions,\n  delta: number = RatioEpsilon * 2\n): Maybe<number> {\n  return mapGt0f(\n    isNumber(ratioOrDimension)\n      ? ratioOrDimension\n      : (toGt0(ratioOrDimension.width) ?? 0) /\n          (toGt0(ratioOrDimension.height) ?? 0),\n    ratio => {\n      const closest = leastBy(StandardAspectRatios, ea => {\n        const diff = Math.abs(ratio - ea)\n        return diff > delta ? undefined : diff\n      })\n      return closest ?? ratio\n    }\n  )\n}\n\nexport function similarRatios(\n  a: number | Dimensions,\n  b: number | Dimensions,\n  delta: number = RatioEpsilon\n): boolean {\n  return lt(absdiff(roundToNearestRatio(a), roundToNearestRatio(b)), delta)\n}\n\nexport function similarRatiosWithRotation(\n  a: { dimensions: Dimensions; rotation?: number },\n  b: { dimensions: Dimensions; rotation?: number },\n  delta: number = 0.05\n) {\n  return similarRatios(\n    maybeDimSwap(a.dimensions, a.rotation),\n    maybeDimSwap(b.dimensions, b.rotation),\n    delta\n  )\n}\n\nfunction nearestAspectRatio(n: number, thresh: number) {\n  return leastByCtx(Ratios, ea => {\n    const diff = Math.abs(ea.i - n)\n    return diff < thresh ? diff : undefined\n  })\n}\n\nexport function roundAspectRatio(n: number, thresh = 0.05) {\n  return nearestAspectRatio(n, thresh)?.result.i ?? n\n}\n\nexport function fmtAspectRatio(n: number, thresh = 0.05): string {\n  return nearestAspectRatio(n, thresh)?.result.s ?? String(sigFigs(n, 3))\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Dimensions } from \"../../fe/Dimensions\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toGt0 } from \"../../fe/Number\"\nimport { FifoCacheAsync } from \"../FifoCacheAsync\"\nimport { mkLogger } from \"../Logger\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { ee } from \"../event/EventEmitter\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { statTimeoutMs } from \"../fs/StatTimeout\"\nimport { rawIdentifyNativePath_ } from \"../fs/Tools\"\n\nconst logger = lazy(() => mkLogger(\"img.RawInfo\"))\n\nexport type RawInfo = {\n  Filename: string\n  Make: string\n  Model: string\n  ImageSize: Dimensions\n}\n\nconst cache = lazy(\n  () =>\n    new FifoCacheAsync<RawInfo>({\n      maxSize: 512,\n      name: \"img.RawInfoCache\",\n      timeoutMs: ShortCommandTimeoutMs\n    })\n)\n\nee().on(\"clearCache\", () => cache.prior()?.clear())\nee().on(\"fileChanged\", ea =>\n  ea == null ? cache.prior()?.clear() : cache.prior()?.delete(ea)\n)\n\nexport async function rawInfo(src: PosixFile): PromiseMaybe<RawInfo> {\n  return rawInfo_(src).catch(error => {\n    logger().warn(\"rawInfo() failed\", { error, src })\n    return undefined\n  })\n}\n\nexport async function rawInfo_(src: PosixFile): Promise<RawInfo> {\n  return cache().getOrSetAsync(src.nativePath, async () => {\n    const cmd = await rawIdentifyNativePath_()\n    // -u -f returns something that _isn't_ the rendered TIFF dimensions.\n    return parseRawInfoOutput_(\n      await stdout_(cmd, [\"-s\", src.nativePath], {\n        timeoutMs: statTimeoutMs()\n      })\n    )\n  })\n}\n\nexport function parseRawInfoOutput_(input: string): RawInfo {\n  const [Filename, Make, Model, w, h] = input.split(\"\\t\")\n  const width = toGt0(w)\n  const height = toGt0(h)\n  if (width == null || height == null) {\n    return logger().throw(\"parseRawInfoOutput_ failed (missing dimensions)\", {\n      cause: input\n    })\n  } else {\n    return logger().tap({\n      msg: \"parseRawInfoOutput()\",\n      result: {\n        Filename,\n        Make,\n        Model,\n        ImageSize: { width, height }\n      },\n      meta: { input }\n    })\n  }\n}\n","import { ResizeOptions } from \"sharp\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Dimensions, fmtDim, pixels } from \"../../fe/Dimensions\"\nimport { fitInside } from \"../../fe/Fit\"\nimport { ReducerName, ReducerNames } from \"../../fe/ImageReducers\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { mkLogger } from \"../Logger\"\nimport { ltBoth, lteBoth } from \"./Dimensions\"\n\n// See http://sharp.pixelplumbing.com/en/stable/api-resize/ and\n// https://github.com/lovell/sharp/issues/1135\nexport const SharpFits = strEnum(\n  \"cover\",\n  \"contain\", // this adds background to fill the expected dim, instead of cropping\n  \"fill\",\n  \"inside\",\n  \"outside\"\n)\nexport type SharpFit = StrEnumKeys<typeof SharpFits>\n\nexport type OutputSize = ResizeOptions & Dimensions\n\nexport interface Reducer {\n  name: ReducerName\n  fit: SharpFit\n  reduce(max: Dimensions, input: Dimensions): Maybe<OutputSize>\n}\n\n/**\n * Reduce the smaller dimension and crop the larger dimension to fill the given\n * constraints. As this is the default behavior of sharp, the implementation is\n * the identity function.\n */\nexport namespace Square {\n  const logger = lazy(() => mkLogger(\"img.Reducers.Square\"))\n  export const name = ReducerNames.sq\n  export const fit = \"cover\"\n  export function reduce(\n    max: Dimensions,\n    input: Dimensions\n  ): Maybe<OutputSize> {\n    const result = !lteBoth(max, input)\n      ? undefined\n      : {\n          ...max,\n          fit: SharpFits.cover\n        }\n\n    return logger().tap({\n      msg: \"reduce()\",\n      result,\n      meta: {\n        max,\n        input\n      }\n    })\n  }\n}\n\n/**\n * Reduce `input` to match `aspectRatio`'s aspect ratio.\n */\nexport function fitInsideToAspectRatio(\n  input: Dimensions,\n  aspectRatio: number\n): Dimensions {\n  return input.width / input.height >= aspectRatio\n    ? {\n        width: Math.floor(input.height * aspectRatio),\n        height: input.height\n      }\n    : {\n        width: input.width,\n        height: Math.floor(input.width / aspectRatio)\n      }\n}\n\n/**\n * Reduce `input` to match `aspectRatio`'s aspect ratio.\n */\nexport function fitInsideToMaxPixels(\n  input: Dimensions,\n  maxPixels: number\n): Maybe<Dimensions> {\n  if (input == null || !gt0(input.width) || !gt0(input.height)) return\n  if (pixels(input) < maxPixels) return // no need to reduce\n  const aspectRatio = input.width / input.height\n  const height = Math.floor(Math.sqrt(maxPixels / aspectRatio))\n  const width = Math.floor(aspectRatio * height)\n  return { width, height }\n}\n\n/**\n * Reduce the entire image to fit given constraints\n */\nexport namespace Fit {\n  const logger = lazy(() => mkLogger(\"img.Reducers.Fit\"))\n\n  export const name = ReducerNames.fit\n  export const fit = \"inside\"\n  export function reduce(\n    max: Dimensions,\n    input: Dimensions\n  ): Maybe<OutputSize> {\n    // if input height < max AND input width < max, max is too big.\n    if (ltBoth(input, max)) {\n      logger().trace(\n        `reduce(): input ${fmtDim(input)} is too small for ${fmtDim(max)}`\n      )\n      return\n    }\n    return fitInside(input, max)\n  }\n}\n\n// /**\n//  * Reduce the entire image to fit given constraints\n//  */\n// export namespace Fill {\n//   const logger = lazy(() => mkLogger(\"img.Reducers.Fill\"))\n\n//   export const name = ReducerNames.fill\n//   export const fit = \"inside\"\n//   export function reduce(\n//     max: Dimensions,\n//     input: Dimensions\n//   ): Maybe<OutputSize> {\n//     // if input height < max AND input width < max, max is too big.\n//     if (ltEither(input, max)) {\n//       logger().debug(\"reduce(): input is too small for max\", { input, max })\n//       return\n//     }\n\n//     const inputAspectRatio = input.width / input.height\n//     const maxAspectRatio = max.width / max.height\n\n//     return inputAspectRatio >= maxAspectRatio\n//       ? {\n//           // wider, height takes aspect ratio into account.\n//           width: Math.floor((input.width * max.height) / input.height),\n//           height: max.height\n//         }\n//       : {\n//           // too tall, width takes aspect ratio\n//           width: max.width,\n//           height: Math.floor((input.height * max.width) / input.width)\n//         }\n//   }\n// }\n\n// Ensure all namespaces implement Reducer:\nexport const Reducers: Reducer[] = [Square, Fit]\n","import _sharp, { JpegOptions } from \"sharp\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../Logger\"\nimport { Settings } from \"../settings/Settings\"\n\n// SITS: why isn't this exported in the typing?\nexport interface OutputInfo {\n  format: string\n  size: number\n  width: number\n  height: number\n  channels: number\n}\n\nconst logger = lazy(() => mkLogger(\"img.Sharp\"))\n\nexport function isSharp(object: any): object is _sharp.Sharp {\n  return (\n    typeof object === \"object\" &&\n    typeof object.jpeg === \"function\" &&\n    typeof object.raw === \"function\" &&\n    typeof object.toBuffer === \"function\"\n  )\n}\n\nexport async function sharpClone(s: _sharp.Sharp): Promise<_sharp.Sharp> {\n  try {\n    return s.clone()\n  } catch (err) {\n    logger().info(\"sharp.clone() failed\", err)\n  }\n  try {\n    const { data, info } = await s.raw().toBuffer({ resolveWithObject: true })\n    return sharpFromRawBuffer(data, info)\n  } catch (error) {\n    return logger().throw(\"clone via sharp.raw().toBuffer() failed\", {\n      error\n    })\n  }\n}\n\nexport function sharpFromRawBuffer(\n  b: Buffer,\n  info: Pick<OutputInfo, \"width\" | \"height\" | \"channels\">\n) {\n  return _sharp(b, {\n    raw: info as any\n  })\n}\n\nexport function sharpRenderOptions(): JpegOptions {\n  return {\n    quality: Settings.previewQuality.valueOrDefault,\n    progressive: Settings.previewProgressive.valueOrDefault,\n    mozjpeg: Settings.previewMinimized.valueOrDefault\n  }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const SharpFailOns = strEnum(\"none\", \"truncated\", \"error\", \"warning\")\nexport type SharpFailOn = StrEnumKeys<typeof SharpFailOns>\n","import { BinaryField, Tags } from \"exiftool-vendored\"\nimport _sharp, { Sharp } from \"sharp\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { Dimensions, dmegapixels } from \"../../fe/Dimensions\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { closeTo, gt, lt } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { isString } from \"../../fe/String\"\nimport { toErr } from \"../../fe/toErr\"\nimport { mkLogger } from \"../Logger\"\nimport { map2Gt0 } from \"../Number\"\nimport { LaterMaybe } from \"../async/Later\"\nimport { thenMap } from \"../async/Promise\"\nimport { time } from \"../async/PromiseTimer\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile, isSimpleFile } from \"../fs/SimpleFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { exiftool, extractBinaryTag, readRawTags } from \"../tags/ExifTool\"\nimport {\n  isLibrawMimeType,\n  isSharpMimeType,\n  isVideoMimeType\n} from \"../tags/MimeTypes\"\nimport { readMimeType } from \"../tags/ReadMimeType\"\nimport { extractSizeInfoFromFile } from \"../tags/SizeInfo\"\nimport { sharpThreadsPerProcess } from \"../work/MaxCpus\"\nimport { aspectRatio, lteBoth } from \"./Dimensions\"\nimport { heif2img, isHeifSupported } from \"./Heif\"\nimport { isHeifMimeType } from \"./HeifFilter\"\nimport { tmpImageFile_ } from \"./ImageCache\"\nimport { isSharp } from \"./Sharp\"\nimport { SharpFailOn } from \"./SharpFailOn\"\nimport { extractVideoFrame_, isVideoSupported } from \"./Video\"\nimport { raw2tiff_ } from \"./libraw\"\n\nconst logger = lazy(() => mkLogger(\"img.SharpReadable\"))\n\n// Sharp can cause RSS bloat with high-CPU-count machines. See\n// https://github.com/lovell/sharp/issues/955\nconst setupSharp = lazy(() => {\n  _sharp.simd(Settings.enableSIMD.valueOrDefault)\n  _sharp.cache(Settings.enableVipsCache.valueOrDefault)\n  _sharp.concurrency(sharpThreadsPerProcess())\n})\n\nexport async function _imgFromExif_(\n  src: PosixFile,\n  tag: keyof Tags,\n  useBuffer: boolean\n): PromiseMaybe<string | Buffer> {\n  if (useBuffer) {\n    return await exiftool().extractBinaryTagToBuffer(tag, src.nativePath)\n  } else {\n    return (await extractImageForThumbs_(src, tag))?.nativePath\n  }\n}\n\n/**\n * If the file is rotated (in camera or post), there aren't good assumptions to\n * be made regarding the embedded image, so we can't use it.\n *\n * If orientation of the original image is normal, and EXIF thumb aspect ratio\n * agrees with source image, EXIF thumb is valid. In all other jpeg cases, EXIF\n * thumb needs to be ignored. For raw and video, which are much less likely to\n * be edited, if both raw images are landscape, use the orientation.\n */\nexport async function imgFromExif_(\n  src: PosixFile,\n  tags: Maybe<Tags>,\n  tag: keyof Tags,\n  minDim: Dimensions,\n  fileAspectRatio: Maybe<number>\n): PromiseMaybe<SharpReadable> {\n  const val = tags?.[tag] as Maybe<BinaryField>\n  if (!(val instanceof BinaryField)) return\n\n  const useBuffer = val.bytes < Settings.maxEmbeddedBuffer.valueOrDefault\n\n  try {\n    const input = await _imgFromExif_(src, tag, useBuffer)\n    if (input == null) return\n\n    const s = _sharp(input, {\n      failOn: Settings.imageFailOn.valueOrDefault as SharpFailOn\n    })\n    const m = await s.metadata()\n\n    // This is the aspect ratio without taking EXIF orientation into account:\n    const renderedAspectRatio = aspectRatio(m)\n\n    // TODO: when is m.width or m.height not set?\n\n    // If the fileAspectRatio  the aspect ratio incorrect?\n    if (\n      fileAspectRatio != null &&\n      renderedAspectRatio != null &&\n      !closeTo(fileAspectRatio, renderedAspectRatio, 0.2)\n    ) {\n      // (ignore square dimension requests)\n      logger().info(\n        \"imgFromExif(\" +\n          src +\n          \", \" +\n          tag +\n          \"): rejecting (aspect ratio mismatch)\",\n        {\n          fileAspectRatio,\n          renderedAspectRatio\n        }\n      )\n      return\n    }\n\n    const valid = lteBoth(minDim, m)\n\n    logger().debug(\"imgFromExif(\" + src + \", \" + tag + \")\", {\n      valid,\n      minDim,\n      useBuffer,\n      fileAspectRatio,\n      renderedAspectRatio,\n      dim: pick(m, \"width\", \"height\")\n    })\n    return valid\n      ? {\n          sharp: s,\n          file: isString(input) ? PosixFile.for(input) : undefined\n        }\n      : undefined\n  } catch (error) {\n    logger().info(\"Failed to read image from EXIF tag \" + tag, { src, error })\n    return\n  }\n}\n\nexport function toSharp(s: SharpReadable): Sharp {\n  const a: any = s // TODO SITS TS TYPING\n  if (isSharp(a.sharp)) {\n    return a.sharp\n  } else if (isSimpleFile(a.file)) {\n    return _sharp(a.file.nativePath, {\n      failOn: Settings.imageFailOn.valueOrDefault as SharpFailOn\n    })\n  } else {\n    throw new Error(\"toSharp(): not a Sharp object: \" + stringify(s))\n  }\n}\n\ntype HasPosixFile = { file: SimpleFile }\ntype HasSharp = { sharp: _sharp.Sharp }\n\nexport type SharpReadable = HasPosixFile | HasSharp | (HasPosixFile & HasSharp)\n\nexport type Described = { desc: string; rot?: number; mimetype: string }\n\nexport type DescribedSharpReadable = SharpReadable & Described\n\n/**\n * @throws if we can't get `src` into a format that sharp can read.\n */\nexport function sharpReadable_(\n  src: PosixFile,\n  minDim?: Dimensions\n): PromiseMaybe<DescribedSharpReadable> {\n  return time(`img.sharpReadable${src.ext.toUpperCase()}`, () =>\n    _sharpReadable_(src, minDim)\n  )\n}\n\nasync function _sharpReadable_(\n  src: PosixFile,\n  minDim?: Dimensions\n): PromiseMaybe<DescribedSharpReadable> {\n  const log = logger().addParameterContext(src.nativePath)\n  setupSharp()\n  const mt = await readMimeType(src)\n  if (blank(mt)) {\n    // this shouldn't happen: PosixFileFilters should have rejected this file already!\n    return log.throw(src + \" is not supported (missing MIMEType)\", {\n      doNotSend: true\n    })\n  }\n\n  const sizeInfo = await extractSizeInfoFromFile(src)\n  if (sizeInfo == null) {\n    log.warn(\"Failed to extract size info from \" + src)\n    return\n  }\n\n  const _strategies: ({ desc: string } & LaterMaybe<SharpReadable>)[] = []\n\n  function addStrategy(desc: string, f: LaterMaybe<SharpReadable>) {\n    ;(f as any).desc = desc\n    _strategies.push(f as any)\n  }\n\n  const rot = sizeInfo.rotation\n  const isVideo = isVideoMimeType(mt)\n  const isRaw = isLibrawMimeType(mt)\n\n  // libRaw is _really_ expensive, and doesn't always render correct images\n  // (like with Canon .cr3 and newer Sony cameras): if an embedded preview is\n  // 90% of the desired dimension, and we don't have rotation, just use that.\n\n  const sid = sizeInfo.dimensions\n\n  const dim: Maybe<Dimensions> =\n    minDim ??\n    map2Gt0(sid.width, sid.height, (w, h) => ({\n      width: Math.round(w * 0.9),\n      height: Math.round(h * 0.9)\n    }))\n\n  if (dim?.width == null || dim?.height == null) {\n    return log.throw(src + \" is not supported (missing dimensions)\", {\n      dim,\n      doNotSend: true,\n      mimetype: mt,\n      isRaw,\n      isVideo\n    })\n  }\n\n  // Don't include metadata thumbnails if:\n\n  // 1. src is a video, because some thumbnails are cutesy and add filmstrip\n  //    borders, which we don't really want to try to \"trim\"\n\n  // 2. the on-file dimensions are portrait--this means the image has been\n  //    rotated/edited, and the preview thumbnails are no longer trustworthy\n\n  const fileAspectRatio = aspectRatio(sizeInfo.fileDimensions)\n  const isFilePortrait = lt(fileAspectRatio, 1)\n  const isSharpMimeAndNoMinDim = isSharpMimeType(mt) && minDim == null\n\n  if (isVideo || isFilePortrait || isSharpMimeAndNoMinDim) {\n    log.debug(\"not pulling previews from tags\", {\n      isVideo,\n      isFilePortrait,\n      isSharpMimeAndNoMinDim\n    })\n  } else {\n    const includeSidecars = false\n    const t = await readRawTags(src, includeSidecars)\n    if (t == null) {\n      log.warn(\"Cannot pull previews from tags: readRawTags() failed\")\n    } else {\n      const tagsToExtract = [...Settings.embeddedPreviews.values] as string[]\n      if (minDim != null && dmegapixels(minDim) < 1) {\n        tagsToExtract.unshift(...Settings.embeddedThumbnails.values)\n      }\n      // We're trying to fetch the nearest thumbnail to deliver at least minDim.\n      // Previews compressed more than 95% will look terrible:\n      const minBytes = dim.width * dim.height * 0.05\n      const sizeSortedTagNames = sortBy(\n        tagsToExtract.filter(key => (t as any)[key] instanceof BinaryField),\n        key => {\n          const bytes = (t as any)[key]?.bytes\n          return gt(bytes, minBytes) ? bytes : undefined\n        }\n      )\n      if (!isEmpty(sizeSortedTagNames)) {\n        log.debug(\"checking previews from tags\", { sizeSortedTagNames })\n        for (const ea of sizeSortedTagNames) {\n          addStrategy(\"imgFromExif.\" + ea, () =>\n            imgFromExif_(src, t, ea as any, dim, fileAspectRatio)\n          )\n        }\n      }\n    }\n  }\n\n  if (isSharpMimeType(mt)) {\n    addStrategy(\"sharp\", async () => ({ file: src }))\n  }\n\n  if (isHeifMimeType(mt) && (await isHeifSupported())) {\n    addStrategy(\"heif\", () => thenMap(heif2img(src), file => ({ file })))\n  }\n\n  if (isRaw) {\n    addStrategy(\"raw2tiff\", () => thenMap(raw2tiff_(src), file => ({ file })))\n  }\n\n  if (isVideo) {\n    addStrategy(\"extractVideoFrame\", async () => {\n      if (!(await isVideoSupported())) {\n        log.warn(\"video file, but video support is missing\", {\n          src: src.nativePath,\n          mimetype: mt,\n          minDim\n        })\n        return\n      } else {\n        try {\n          return await thenMap(extractVideoFrame_(src), file => ({ file }))\n        } catch (error: any) {\n          throw new WrappedError(\n            \"Failed to extract video frame for \" + src,\n            error\n          )\n        }\n      }\n    })\n  }\n\n  const causes: Error[] = []\n\n  for (const s of _strategies) {\n    try {\n      const result = await time(\"img.read.\" + s.desc, s)\n      if (result != null) {\n        log.debug(s.desc + \" strategy succeeded\", {\n          src,\n          minDim,\n          rot,\n          img: (result as any).file?.nativePath\n        })\n        return {\n          desc: s.desc,\n          rot,\n          mimetype: mt,\n          ...result\n        }\n      } else {\n        log.debug(s.desc + \" returned null\", {\n          src,\n          minDim,\n          rot\n        })\n      }\n    } catch (error) {\n      log.warn(s.desc + \" failed\", error)\n      causes.push(toErr(error)!)\n    }\n  }\n\n  throw new WrappedError(\"Failed to render \" + src, {\n    causes,\n    path: String(src),\n    fatal: false,\n    doNotSend: true,\n    retriable: false\n  })\n}\n\n/**\n * Returns a file holding the binary stream associated to the given tag.\n * Orientation is copied from the src to the result.\n */\nexport async function extractImageForThumbs_(\n  src: PosixFile,\n  tag: keyof Tags\n): PromiseMaybe<PosixFile> {\n  const suffix = tag.toLowerCase().endsWith(\"tiff\") ? \".tiff\" : \".jpg\"\n  try {\n    // extracting a binary tag takes millis. No need to re-use between\n    // processes, because handling errors and lock contention is something we\n    // can just skip here.\n    const f = await tmpImageFile_({ src, tag, ext: suffix })\n    return await f.applyIfEmpty_({\n      retries: 2,\n      fn_: dest => extractBinaryTag(tag, src.nativePath, dest.nativePath)\n    })\n  } catch (error) {\n    // if this returns undefined, applyIfEmpty_ will wait for a timeout.\n    logger().throw(\n      \"Failed to extract embedded \" + tag + \" from \" + src.nativePath,\n      { error }\n    )\n    return\n  }\n}\n","import { lerp2d } from \"../../core/math/Lerp\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { orElse } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { MB } from \"../../fe/Units\"\nimport { thenMap } from \"../async/Promise\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { mapGt0 } from \"../Number\"\nimport { Settings } from \"../settings/Settings\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { readRawTags } from \"../tags/ExifTool\"\nimport { isRawImageExt, isVideoExt } from \"../tags/FileTypes\"\nimport { commandTimeoutMs, MinIoRate } from \"../volumes/VolumeTtls\"\n\n// Handle general system churn/hiccups/external drive spinups:\nexport const MinSyncFileTimeoutMs = minuteMs\n\n// This number needs to be greater than the slowest computer's file processing\n// time under load.\n\n// TODO: LATER: make timeouts more accurate by using the current system's\n// processing times.\n\n// If it takes > 6x slower than realtime to transcode we've got issues.\nexport const DurationMultiplier = 6\n\n// Sync file time is going to be governed by\n\n// 1. DB insert time (normally less than a second, let's say 5 seconds)\n// 2. Metadata extraction (should be less than a second, worst-case, 30 seconds)\n// 3. Copy to library (assume 4-5mb/sec transfer speed for a slow nas, should\n//    typically be more like 20-50mb/s, though) + SHA, == MaxFileSize / 4mb\n// 4. Thumbnail generation (normally less than a second, can be 30 seconds for\n//    RAW images)\n// 5. Video transcoding (may a no-op, or only be remuxing, which is fast, or\n//    actual transcoding, which is ~1-10x longer than the actual duration of the\n//    video, and can be limited by disk I/O as well).\n\n// linux timings:\n//           ubu mac win\n//  7M .MTS:     30s\n// 18M .MTS: 23s 60s\n// 8M  .AVI: 4s\n// 30M .MOV: 18s 40s\n\n// 5,931 ms for speedy to convert 56,637,237 bytes, so roughly 10mb/s, or divide bytes by 10,000 to get millis.\n\n// I suspect RPi to be 6-10x slower, so 1mb/s: divide bytes by 1000.\n\n// These timings are all from the Raspberry Pi 4, the slowest supported CPU.\n\nconst ImagePoints = {\n  p0: { x: 0.8 * MB, y: 4 * secondMs },\n  p1: { x: 20 * MB, y: 12 * secondMs }\n}\n\nconst RawPoints = {\n  p0: { x: 11 * MB, y: 12 * secondMs },\n  p1: { x: 26 * MB, y: 24 * secondMs }\n}\n\nexport function transcodeTimeoutForFile(file: PosixFile) {\n  return isVideoExt(file.ext)\n    ? thenMap(readMeta(file), transcodeTimeout)\n    : undefined\n}\n\nexport function transcodeTimeout(opts: FileTimeoutMeta): number {\n  return isVideoExt(opts.ext)\n    ? Math.max(\n        commandTimeoutMs(), // no very short timeouts for short duration videos\n        mapGt0(opts.durationMs, d => d * DurationMultiplier) ?? 0,\n        opts.bytes / 512 // even an rPi3 should be able to transcode a video at 1kb/s\n      )\n    : 0\n}\n\nexport function syncFileTimeoutForFileMs(file: PosixFile) {\n  return thenMap(syncFileTimeoutForFile(file), ea => ea.result)\n}\n\nexport function syncFileTimeoutForFile(file: PosixFile) {\n  return thenMap(readMeta(file), syncFileTimeout)\n}\n\nfunction readMeta(file: PosixFile): PromiseMaybe<FileTimeoutMeta> {\n  return thenMap(file.size(), async bytes => ({\n    bytes,\n    ext: file.ext,\n    durationMs: isVideoExt(file.ext)\n      ? await thenMap(readRawTags(file), t =>\n          mapGt0(t.Duration, d => d * secondMs)\n        )\n      : undefined\n  }))\n}\n\nexport interface FileTimeoutMeta {\n  bytes: number\n  ext: string\n  durationMs?: number\n}\n\nexport function dcrawTimeout(bytes: Maybe<number>): number {\n  return lerp2d(\n    clamp(11 * MB, 100 * MB, orElse(bytes, 0)),\n    RawPoints.p0,\n    RawPoints.p1\n  )\n}\n\nexport function syncFileTimeout(meta: FileTimeoutMeta) {\n  // Time to sync is DB + tags + copy op + sha + thumbs + transcode.\n\n  // db lookup time. Should be ~10ms, but the system might be borked:\n  const dbMs = ShortCommandTimeoutMs\n\n  // tag extraction time. Should be normally ~5-50ms, but we may need to fetch\n  // tags for sibling variants (5? 10?) over a slow LAN NAS.\n  const tagMs = commandTimeoutMs()\n\n  // Copy time will be directly proportional to the asset size. Assume 2mb/s for\n  // a really crappy NAS and a 100baseT network, and that we need to do it twice\n  // (once to copy, once to SHA-verify the copy):\n\n  const copyMs = meta.bytes / MinIoRate\n\n  const lerpPoints = (p: typeof ImagePoints) =>\n    lerp2d(clamp(0.5 * MB, 50 * MB, meta.bytes), p.p0, p.p1)\n\n  const thumbMs = lerpPoints(ImagePoints)\n\n  const rawDecodeMs = isRawImageExt(meta.ext) ? lerpPoints(RawPoints) : 0\n\n  const transcodeMs = transcodeTimeout(meta)\n  const validateMs = Settings.validateVideos.valueOrDefault\n    ? 2 * (meta.durationMs ?? copyMs)\n    : 0\n\n  const result = isVideoExt(meta.ext)\n    ? 0\n    : Math.max(\n        MinSyncFileTimeoutMs,\n        dbMs + tagMs + copyMs + thumbMs + rawDecodeMs + transcodeMs + validateMs\n      )\n\n  return {\n    result,\n    dbMs,\n    tagMs,\n    copyMs,\n    thumbMs,\n    rawDecodeMs,\n    transcodeMs,\n    validateMs\n  }\n}\n","import _sharp, { FailOnOptions } from \"sharp\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { mkLogger } from \"../Logger\"\nimport { shim1 } from \"../Shim1\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { FileCache } from \"../fs/FileCache\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport {\n  SimpleFileOrString,\n  isSimpleFile,\n  toNativePath_\n} from \"../fs/SimpleFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { isLibrawMimeType, isVideoMimeType } from \"../tags/MimeTypes\"\nimport { readMimeType } from \"../tags/ReadMimeType\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { isSharp } from \"./Sharp\"\nimport { DescribedSharpReadable, sharpReadable_ } from \"./SharpReadable\"\nimport { validVideo_ } from \"./Video\"\nimport { validJpeg_ } from \"./jpegtran\"\nimport { raw2tiff_ } from \"./libraw\"\n\nconst logger = lazy(() => mkLogger(\"img.ValidFile\"))\n\n/**\n * @return true if the file is valid, or false if the file is invalid.\n */\nexport async function isValidFile(\n  fileOrPath: SimpleFileOrString\n): Promise<boolean> {\n  return blank(await whyInvalidFile(toNativePath_(fileOrPath)))\n}\n\n/**\n * Try to validate the contents of an image or video are not corrupt\n * @throws on invalid file\n */\nexport async function throwIfInvalidFile_(\n  fileOrPath: SimpleFileOrString\n): Promise<void> {\n  if (\n    // it's turned off:\n    !Settings.validateJpegImages.valueOrDefault &&\n    !Settings.validateVideos.valueOrDefault\n  ) {\n    logger().debug(\"file validation is disabled for \" + fileOrPath, {\n      validateJpegImages: Settings.validateJpegImages.valueOrDefault,\n      validateVideos: Settings.validateVideos.valueOrDefault\n    })\n    return\n  }\n  const nativePath = toNativePath_(fileOrPath)\n\n  const why = logger().tap({\n    msg: \"whyInvalidFile(\" + nativePath + \")\",\n    result: await whyInvalidFile(nativePath)\n  })\n\n  if (notBlank(why)) {\n    logger().throw(why, {\n      path: nativePath,\n      retriable: false,\n      doNotSend: true, // we expect these to happen.\n      ignorable: true // we expect these to happen.\n    })\n  }\n}\n\nconst cache = lazy(\n  () =>\n    new FileCache<string>({\n      name: \"img.validFile\",\n      maxSize: 256,\n      useFsCache: true,\n      // https://forum.photostructure.com/t/initial-import-of-library-fails/1643/2\n      timeoutMs: Math.max(\n        minuteMs,\n        Settings.validateVideos.valueOrDefault\n          ? 5 * minuteMs\n          : commandTimeoutMs()\n      )\n    })\n)\n\nexport function clearInvalidFileCache() {\n  return cache().clear()\n}\n\nexport const whyInvalidFile = shim1({\n  name: \"img.whyInvalidFile\",\n  cache,\n  toKey: toNativePath_,\n  impl: async (nativePath: string) => {\n    const src = PosixFile.for(nativePath)\n    if (!(await src.isFile()) || !(await src.isReadable())) {\n      return src + \" is not a readable file\"\n    }\n    if (await src.isEmpty()) {\n      return src + \" is empty\"\n    }\n    // Use the raw tags--if we're missing dimensions or something else, it still\n    // might be valid.\n    try {\n      const mt = await readMimeType(src)\n      if (mt == null) {\n        throw new Error(\"Cannot validate, no mimetype\")\n      }\n      if (isVideoMimeType(mt)) {\n        if (Settings.validateVideos.valueOrDefault) {\n          logger().debug(\"validating \" + src)\n          await validVideo_(src)\n        }\n      } else if (mt.startsWith(\"image/\")) {\n        if (mt === \"image/jpeg\") {\n          if (Settings.validateJpegImages.valueOrDefault) {\n            await validJpeg_(src)\n          }\n        } else if (isLibrawMimeType(mt)) {\n          if (Settings.validateRawImages.valueOrDefault) {\n            await raw2tiff_(src)\n          }\n        } else if (Settings.validateRawImages.valueOrDefault) {\n          // heif? what else?\n          const sr = await sharpReadable_(src)\n          const s = await toSharpFailOnError(sr)\n          await s.tiff().toBuffer()\n        }\n      } else {\n        throw new Error(\"Unsupported mimetype \" + stringify(mt))\n      }\n      return \"\"\n    } catch (cause) {\n      // The error doesn't need to include the filename: the sync report will\n      // already be on that line.\n      return new WrappedError(\"Failed to validate\", {\n        cause,\n        path: nativePath,\n        doNotSend: true\n      }).toS()\n    }\n  }\n})\n\nasync function toSharpFailOnError(\n  input: Maybe<DescribedSharpReadable>,\n  failOn: FailOnOptions = Settings.imageFailOn.valueOrDefault as FailOnOptions\n): Promise<_sharp.Sharp> {\n  const a: any = input\n\n  if (isSimpleFile(a.file)) {\n    return _sharp(a.file.nativePath, { failOn })\n  }\n\n  if (isSharp(a.sharp)) {\n    const { data, info } = await a.sharp\n      .raw()\n      .toBuffer({ resolveWithObject: true })\n    return _sharp(data, { ...info, failOnError: true })\n  }\n\n  throw new Error(\"Cannot read input \" + input?.desc)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../Logger\"\nimport { joinPatterns } from \"../RegExp\"\nimport { errorToS } from \"../error/Error\"\nimport { Settings } from \"../settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"img.ValidationError\"))\n\nexport function isIgnorableValidationError(err: any) {\n  const s = errorToS(err)\n  return logger().tap({\n    msg: \"isIgnorableValidationError\",\n    result:\n      validationErrorAllowlist().test(s) || !validationErrorBlocklist().test(s),\n    meta: { err }\n  })\n}\nconst validationErrorBlocklist = lazy(() =>\n  joinPatterns(Settings.validationErrorBlocklist.values, \"i\")\n)\nconst validationErrorAllowlist = lazy(() =>\n  joinPatterns(Settings.validationErrorAllowlist.values, \"i\")\n)\n","import { Tags } from \"exiftool-vendored\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { pixels } from \"../../fe/Dimensions\"\nimport { orElse } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { approximates, clamp, gt0, gte, sigFigs } from \"../../fe/Number\"\nimport { gt } from \"../../fe/Primitive\"\nimport { mkLogger } from \"../Logger\"\nimport { isProd } from \"../NodeEnv\"\nimport { mapGt0 } from \"../Number\"\nimport { shim1 } from \"../Shim1\"\nimport { includesIgnoreCase } from \"../String\"\nimport { ver } from \"../Ver\"\nimport { time } from \"../async/PromiseTimer\"\nimport { untilTrue } from \"../async/until\"\nimport { ee } from \"../event/EventEmitter\"\nimport { FileCache } from \"../fs/FileCache\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile, toNativePath_ } from \"../fs/SimpleFile\"\nimport { lerp2d } from \"../math/Lerp\"\nimport { PullProgressObserver } from \"../progress/PullProgressObserver\"\nimport { Settings } from \"../settings/Settings\"\nimport { extractBitrateKbps } from \"../tags/Bitrate\"\nimport { extractDurationSec } from \"../tags/Duration\"\nimport { deleteAllTags_, readRawTags, readTags } from \"../tags/ExifTool\"\nimport { isVideoMimeType } from \"../tags/MimeTypes\"\nimport { extractRotation } from \"../tags/Orientation\"\nimport { extractSizeInfoFromTags } from \"../tags/SizeInfo\"\nimport { dimensions } from \"./FileDimensions\"\nimport { cachedImageFile_ } from \"./ImageCache\"\nimport { fitInsideToMaxPixels } from \"./Reducers\"\nimport { transcodeTimeout } from \"./SyncFileTimeout\"\nimport { ToolDetails } from \"./ToolDetails\"\nimport {\n  ffmpegFrame_,\n  ffmpegTranscode_,\n  ffmpegValidVideo_,\n  ffmpegVersion,\n  isFFmpegSupported\n} from \"./ffmpeg\"\nimport { rotateInPlace_ } from \"./jpegtran\"\nimport { isVlcSupported, vlcFrame, vlcInfo, vlcTranscode_ } from \"./vlc\"\n\nfunction mkLog(method: string, src: string | SimpleFile) {\n  return mkLogger(\"img/Video.\" + method + \"(\" + src + \")\")\n}\n\nexport async function getVideoToolDetails(opts?: {\n  ignoreffmpeg: any\n  ignorevlc: any\n}): Promise<ToolDetails> {\n  if (isProd) opts = undefined\n  const ffmpeg = isTrue(opts?.ignoreffmpeg) ? undefined : await ffmpegVersion()\n  // prefer ffmpeg:\n  if (ffmpeg != null) {\n    return {\n      ok: true,\n      msg: \"FFmpeg \" + ver(ffmpeg)\n    }\n  }\n  // don't wait for vlc before trying ffmpeg:\n  const vlc = isTrue(opts?.ignorevlc) ? undefined : await vlcInfo()\n  if (vlc != null) {\n    return {\n      ok: true,\n      msg: \"VLC \" + ver(vlc.version)\n    }\n  } else {\n    return { ok: false, msg: \"(no video tools were found)\" }\n  }\n}\n\nexport const isVideoSupported = lazy(\n  async () => (await getVideoToolDetails()).ok\n)\n\nlater(() => ee().on(\"clearCache\", () => isVideoSupported.unset()))\n\n// These are \"high quality\" bitrates for a given video resolution.\nexport const bitrateKps = (pixelCount: number) =>\n  sigFigs(\n    lerp2d(\n      pixelCount,\n      { x: 320 * 240, y: Settings.transcodeBitrateQVGA.valueOrDefault },\n      { x: 3840 * 2160, y: Settings.transcodeBitrateUHD.valueOrDefault }\n    ),\n    2\n  )\n\nfunction extractMaxBitrate(src: PosixFile, rawTags: Tags) {\n  const log = mkLog(\"extractMaxBitrate\", src)\n  // These dimensions will be enforced by PosixFileFilters, before this. We need\n  // reasonable dimensions to give to VLC, though, so re-validating them here is\n  // excusable. Hopefully.\n  const minDim = Settings.minVideoDimension.valueOrDefault\n  const width = rawTags.ImageWidth\n  if (width != null && !gte(width, minDim)) {\n    return log.throw(\"invalid width: \" + width, { ignorable: true })\n  }\n  const height = rawTags.ImageHeight\n  if (height != null && !gte(height, minDim)) {\n    return log.throw(\"invalid height: \" + height, { ignorable: true })\n  }\n\n  const bitrateKbps = orElse(\n    extractBitrateKbps(rawTags),\n    Settings.transcodeBitrateUHD.valueOrDefault\n  )\n\n  // Don't let video bitrate exceed the encoded bitrate:\n  const videoBitrateKbps = mapGt0(width, w =>\n    mapGt0(height, h => clamp(0, bitrateKbps, bitrateKps(w * h)))\n  )\n\n  const result = { width, height, videoBitrateKbps }\n  log.debug(\"dim()\", { src, result })\n  return result\n}\n\nconst cache = lazy(\n  () =>\n    new FileCache<string>({\n      name: \"img.videoFrame\",\n      timeoutMs: minuteMs\n    })\n)\n\nexport async function extractVideoFrame_(file: string | PosixFile) {\n  return (await isVideoSupported())\n    ? PosixFile.for(await _extractVideoFrame_(toNativePath_(file)))\n    : undefined\n}\n\n// only exported for shim\nexport const _extractVideoFrame_ = shim1({\n  name: \"img.extractVideoFrame\",\n  cache,\n  impl: (nativePath: string) => __extractVideoFrame_(nativePath)\n})\n\n// only exported for tests\nexport async function __extractVideoFrame_(\n  nativePath: string,\n  forceImpl?: {\n    useFfmpeg?: boolean\n    useVlc?: boolean\n  }\n): Promise<string> {\n  const log = mkLog(\"extractVideoFrame\", nativePath)\n  const src = PosixFile.for(nativePath)\n  const useFfmpeg = isTrue(forceImpl?.useVlc)\n    ? false\n    : isTrue(forceImpl?.useFfmpeg) || (await isFFmpegSupported()) // < try to use ffmpeg if possible\n  const useVlc =\n    !useFfmpeg && isTrue(forceImpl?.useVlc) && (await isVlcSupported())\n  if (!useFfmpeg && !useVlc) return log.throw(\"no video implementation\")\n\n  // We don't use BaseFile.applyIfEmpty here, because we want to verify the\n  // dimensions are reasonable:\n\n  const dest = await cachedImageFile_(src, \"frame\", \".jpg\")\n  log.debug(\"extractVideoFrame(\" + dest + \")\")\n\n  const srcMtime = await src.mtimeMs()\n  if (srcMtime == null) {\n    return log.throw(\"null mtime\")\n  }\n\n  const rawTags = await readRawTags(src)\n  if (rawTags == null) {\n    return log.throw(\"no tags\")\n  }\n  const rot = extractRotation(rawTags)\n  log.debug(\"video orientation:\" + rot)\n\n  // Note that width and height may be missing from videos like AVCHD:\n  const srcDim = extractSizeInfoFromTags(rawTags, rot)?.dimensions\n\n  const destStat = await dest.stat()\n  // If the file doesn't exist, don't tease ExifTool:\n  const destDim = destStat == null ? undefined : await dimensions(dest)\n\n  if (\n    destStat != null &&\n    destStat.mtimeMs > srcMtime &&\n    destDim != null &&\n    (srcDim == null ||\n      (destDim.height === srcDim.height && destDim.width === srcDim.width))\n  ) {\n    log.debug(\"prior dest, \" + dest + \" seems reasonable\", { srcDim, destDim })\n    return dest.nativePath\n  }\n  const duration = extractDurationSec(rawTags)\n  const startAtSec = Math.min(\n    duration ?? 0,\n    Settings.videoFrameAtSec.valueOrDefault\n  )\n  log.info(\"extracted metadata\", {\n    startAtSec,\n    duration\n  })\n\n  await dest.applyIfEmpty_({\n    fn_: async destWip => {\n      const args = {\n        src,\n        dest: destWip,\n        startAtSec,\n        ...srcDim\n      }\n\n      await (useFfmpeg ? ffmpegFrame_(args) : vlcFrame(args))\n\n      if (\n        false ===\n        (await untilTrue(\n          async () =>\n            log.tap({\n              msg: \"frame extracted?\",\n              result: await destWip.clear().isNonEmptyFile()\n            }),\n          { timeoutMs: 5 * secondMs, intervalMs: 500 }\n        ))\n      ) {\n        log.throw((useFfmpeg ? \"ffmpeg\" : \"vlc\") + \" failed to extract frame\")\n      }\n\n      await deleteAllTags_(destWip, destWip)\n\n      // VLC doesn't auto-rotate. FFmpeg does.\n      if (useVlc && rot != null && rot !== 0) {\n        log.info(\"rotating in place...\" + destWip, { rot })\n        await rotateInPlace_(destWip, rot)\n      }\n    }\n  })\n  return dest.nativePath\n}\n\nexport async function isVideoTranscodingSupported() {\n  return (\n    Settings.transcodeVideos.valueOrDefault &&\n    ((await isFFmpegSupported()) || (await isVlcSupported()))\n  )\n}\n\nexport async function needsTranscoding(f: PosixFile) {\n  const log = mkLog(\"needsTranscoding\", f)\n\n  if (!(await isVideoTranscodingSupported())) {\n    return log.tap({\n      msg: \"videoTranscodingSupported is false\",\n      result: false\n    })\n  }\n\n  const t = await readRawTags(f)\n  if (t == null) {\n    return log.tap({\n      msg: \"Cannot transcode files that exiftool can't read\",\n      result: false\n    })\n  }\n\n  const mimetype = t.MIMEType!\n\n  if (!isVideoMimeType(mimetype)) {\n    return log.tap({\n      msg: \"not transcoding (unsupported mimetype)\",\n      result: false,\n      meta: { mimetype }\n    })\n  }\n\n  const duration = extractDurationSec(t)\n\n  if (!gt(duration, Settings.minVideoDurationSec.valueOrDefault)) {\n    return log.tap({\n      msg: \"not transcoding (video duration is too short)\",\n      result: false,\n      meta: { duration }\n    })\n  }\n\n  const audioCodecs = compactBlanks([t.AudioFormat])\n  const isSafeAudioCodec = audioCodecs.some(ea =>\n    includesIgnoreCase(Settings.doNotTranscodeAudioCodecs.values, ea)\n  )\n\n  const videoCodecs = compactBlanks([\n    t.VideoCodec,\n    t.CompressorID,\n    (t as any).CompressorName\n  ])\n  const isSafeVideoCodec = videoCodecs.some(ea =>\n    includesIgnoreCase(Settings.doNotTranscodeVideoCodecs.values, ea)\n  )\n\n  const isSafeMimeType = includesIgnoreCase(\n    Settings.doNotTranscodeMimeTypes.values,\n    mimetype\n  )\n\n  return log.tap({\n    level: \"info\",\n    msg: \"result\",\n    result: !(isSafeAudioCodec && isSafeVideoCodec && isSafeMimeType),\n    meta: {\n      mimetype,\n      isSafeMimeType,\n      audioCodecs,\n      isSafeAudioCodec,\n      videoCodecs,\n      isSafeVideoCodec\n    }\n  })\n}\n\n/**\n * @return true iff `dest` seems to be an up to date transcoded version of\n * `src`\n */\nasync function isTranscode(src: PosixFile, dest: PosixFile) {\n  if (await dest.notExists()) return false\n  const destRawTags = await readRawTags(dest)\n  if (destRawTags == null) return false\n  const srcRawTags = await readRawTags(src)\n  if (srcRawTags == null) return false\n  const srcDurationSec = extractDurationSec(srcRawTags)\n  if (\n    srcDurationSec != null &&\n    !approximates(srcDurationSec, extractDurationSec(destRawTags))\n  ) {\n    return false\n  }\n  // At this point, at least the duration is correct. We could check the\n  // aspect ratio, or even build image hashes, but let's assume we're ok.\n  return true\n}\n\n/**\n * This will no-op if a reasonable transcoded video already exists at dest\n */\nexport async function transcode_(\n  src: PosixFile,\n  dest: PosixFile,\n  ctx?: { force?: boolean }\n): PromiseMaybe<PosixFile> {\n  if (false === (await needsTranscoding(src))) return\n  const log = mkLog(\"transcode\", src)\n\n  const size = await src.size()\n  if (!gt0(size)) {\n    return log.throw(\"source is empty or cannot read\")\n  }\n\n  const tags = await readTags(src)\n  if (tags == null) {\n    return log.throw(\"source cannot be read by ExifTool\")\n  }\n\n  if (true === ctx?.force) {\n    await dest.unlink()\n  } else {\n    if (await isTranscode(src, dest)) {\n      log.info(\"no-op, dest duration looks reasonable\", { dest })\n      return dest\n    }\n  }\n\n  return time(\"video.transcode()\", async () => {\n    const durationSec = extractDurationSec(tags) ?? 60\n    const timeoutMs = Math.max(\n      minuteMs,\n      transcodeTimeout({\n        bytes: size,\n        durationMs: durationSec * secondMs,\n        ext: src.ext\n      })\n    )\n    const args: any = {\n      src,\n      timeoutMs,\n      ...extractMaxBitrate(src, tags)\n    }\n    const expectedFilesize = guessExpectedSize(\n      size,\n      args.videoBitrateKbps,\n      durationSec\n    )\n\n    const maxPixels = Settings.transcodeMaxResolution.valueOrDefault\n    const srcPixels = pixels(tags.dimensions)\n    if (gt0(maxPixels) && gt(srcPixels, maxPixels)) {\n      const output = fitInsideToMaxPixels(tags.dimensions, maxPixels)\n      if (output == null) {\n        log.warn(\n          \"Cannot downsample transcoded video: fitInsideToMaxPixels() returned null\",\n          { input: tags.dimensions, maxPixels }\n        )\n      } else {\n        args.width = output.width\n        args.height = output.height\n        log.info(\"Downsampling transcoded video\", {\n          original: tags.dimensions,\n          output\n        })\n      }\n    }\n\n    const minSizeBytes = expectedFilesize / 3\n\n    const _transcode_ = async (destWip: PosixFile) => {\n      log.info(\"starting...\", { destWip })\n      const start = Date.now()\n\n      const obs = new PullProgressObserver(\n        { path: src.nativePath, op: \"Transcoding video\" },\n        expectedFilesize,\n        async () => {\n          const bySize = (await dest.clear().size()) ?? 0\n          const byTime = clamp(0, 1, (Date.now() - start) / timeoutMs)\n          return Math.max(bySize, byTime)\n        }\n      )\n\n      args.dest = destWip\n\n      const result = await obs.observe(\n        (await isFFmpegSupported())\n          ? ffmpegTranscode_(args)\n          : vlcTranscode_(args)\n      )\n      if (result.code !== 0) {\n        log.throw(\"transcode failed with code \" + result.code)\n      }\n    }\n\n    return dest.applyIfEmpty_({\n      fn_: destWip => _transcode_(destWip),\n      minSizeBytes\n    })\n  })\n}\n\nexport function guessExpectedSize(\n  filesize: number,\n  videoBitrateKbps: Maybe<number>,\n  durationSec: Maybe<number>\n) {\n  return Math.min(\n    filesize,\n    // SITS: these constants are not really defensible\n    orElse(durationSec, 60) * orElse(videoBitrateKbps, 1000)\n  )\n}\n\n/**\n * @throws on errors\n */\nexport async function validVideo_(src: PosixFile) {\n  const f = await extractVideoFrame_(src)\n  if (f == null) {\n    mkLog(\"validVideo\", src).throw(\"Could not extract a video frame\")\n  }\n  if (await isFFmpegSupported()) {\n    return ffmpegValidVideo_(src)\n  } else {\n    mkLog(\"validVideo\", src).info(\"VLC cannot be used for video validation\")\n    // TODO: implement vlcValidVideo()\n    return\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, compactBlanks } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { isDisabled } from \"../../fe/Boolean\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, gt0, round, sigFigs } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { map2Gt0, mapGte0f } from \"../Number\"\nimport { thenMapOr } from \"../async/Promise\"\nimport { untilTrue } from \"../async/until\"\nimport { StdoutResult, stdoutResult_ } from \"../child/ChildProcess\"\nimport { ee } from \"../event/EventEmitter\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { maxCpus } from \"../work/MaxCpus\"\nimport { isIgnorableValidationError } from \"./ValidationErrors\"\n\nconst logger = lazy(() => mkLogger(\"img.ffmpeg\"))\n\n// If we're doing multiple video file imports, don't hammer the system too hard:\nconst ffmpegThreads = lazy(() =>\n  clamp(1, 8, Settings.ffmpegThreads.value ?? round(maxCpus() / 4))\n)\n\n// This may be something reasonable, like \"ffmpeg version 3.2.1\", but if it's a\n// nightly build, \"ffmpeg version N-94833-g9d1e98afee\"\nconst versionRe = /ffmpeg version (\\S+)/i\n\nconst _ffmpegVersion = lazy(async () => {\n  try {\n    const result = await stdoutResult_(\n      Settings.ffmpegPath.valueOrDefault,\n      [\"-version\"],\n      {\n        timeoutMs: commandTimeoutMs(),\n        ignoreStderr: true,\n        isIgnorableError: () => true\n      }\n    )\n    const version: Maybe<string> = versionRe.exec(result.result)?.[1]\n    logger().debug(\"ffmpegVersion\", {\n      version,\n      code: result.code,\n      stdout: result.result.split(\"\\n\", 1)[0]\n    })\n    return result.code === 0 && notBlank(version) ? version : undefined\n  } catch (err) {\n    return\n  }\n})\n\nexport const ffmpegVersionDescription = lazy(() =>\n  thenMapOr(\n    _ffmpegVersion(),\n    ver => \"version \" + ver,\n    () => \"(not found)\"\n  )\n)\n\nfunction clearCaches() {\n  _ffmpegVersion.unset()\n  ffmpegVersionDescription.unset()\n}\n\nlater(() => {\n  ee().on(\"clearCache\", clearCaches)\n  ee().on(\"clearToolCache\", clearCaches)\n})\n\nexport async function ffmpegVersion() {\n  return (await _ffmpegVersion.prior()) ?? _ffmpegVersion.refresh()\n}\n\nexport async function isFFmpegSupported() {\n  // TODO: what versions do we *actually* require?\n  return (await _ffmpegVersion()) != null\n}\n\n// Example errors:\n\n// [h264 @ 0x5642cf833640] left block unavailable for requested intra mode\n\n// [h264 @ 0x5642cf833640] error while decoding MB 0 16, bytestream 99553\n\n// [mov,mp4,m4a,3gp,3g2,mj2 @ 0x556e03cfb8c0] stream 0, offset 0x184ef: partial file\n\n// Invalid data found when processing input\n\n// Nothing was written into output file 0 (pipe:), because at least one of its streams received no packets.\n\n// Error: [mov,mp4,m4a,3gp,3g2,mj2 @ 0x560b7c7f59a0] Referenced QT chapter track not found\n\n/*\n-vframes number (output) Set the number of video frames to output. This is an\nalias for \"-frames:v\".\n\n-f fmt (input/output) Force input or output file format. The format is normally\nauto detected for input files and guessed from the file extension for output\nfiles, so this option is not needed in most cases.\n\npipe:[number] number is the number corresponding to the file descriptor of the\npipe (e.g. 0 for stdin, 1 for stdout, 2 for stderr). If number is not specified,\nby default the stdout file descriptor will be used for writing, stdin for\nreading.\n\n-ss position (input/output) When used as an input option (before -i), seeks in\nthis input file to position. Note that in most formats it is not possible to\nseek exactly, so ffmpeg will seek to the closest seek point before position.\nWhen transcoding and -accurate_seek is enabled (the default), this extra segment\nbetween the seek point and position will be decoded and discarded. When doing\nstream copy or when -noaccurate_seek is used, it will be preserved.\n\nWhen used as an output option (before an output url), decodes but discards input\nuntil the timestamps reach position.\n\nposition must be a time duration specification, see (ffmpeg-utils)the Time\nduration section in the ffmpeg-utils(1) manual.\n*/\nexport async function ffmpegFrame_(args: {\n  src: PosixFile\n  dest: PosixFile\n  startAtSec?: number\n  width?: number\n  height?: number\n}) {\n  await args.dest.parent().mkdirp_()\n\n  await stdoutResult_(\n    Settings.ffmpegPath.valueOrDefault,\n    compact([\n      // we don't use hwaccel here: it doesn't speed things up.\n      \"-loglevel\",\n      \"error\",\n      \"-i\",\n      args.src.nativePath,\n      ...(mapGte0f(args.startAtSec, ea => [\"-ss\", ea.toFixed(1)]) ?? []),\n      \"-vframes\",\n      \"1\",\n      // This didn't seem to really help much, and made it slower.\n      // \"-q:v\", // require quality to be <= 2 (range between 1 and 31)\n      // \"2\",\n      // This seems to lead to distorted outputs?\n      // ...(args.width != null && args.height != null\n      //   ? [\"-s\", `${round(args.width)}x${round(args.height)}`]\n      //   : []),\n      \"-y\", // overwrite output files\n      args.dest.nativePath\n    ]),\n    {\n      timeoutMs: minuteMs, // extracting a single frame should take less than a second.\n      isIgnorableError: isIgnorableValidationError\n    }\n  )\n  if (\n    !(await untilTrue(() => args.dest.clear().isNonEmptyFile(), {\n      timeoutMs: 3 * secondMs\n    }))\n  ) {\n    throw new Error(\"Failed to extract frame for \" + args.src)\n  }\n}\n\nfunction hwaccel() {\n  const s = Settings.ffmpegHwaccel.valueOrDefault\n  return blank(s) || isDisabled(s) ? [] : [\"-hwaccel\", s]\n}\n\nexport async function ffmpegTranscode_(args: {\n  src: PosixFile\n  dest: PosixFile\n  width: Maybe<number>\n  height: Maybe<number>\n  videoBitrateKbps?: number\n}) {\n  // https://trac.ffmpeg.org/wiki/Limiting%20the%20output%20bitrate\n  const bitrate = opt(args.videoBitrateKbps)\n    .filter(gt0)\n    .map(ea => sigFigs(ea, 2))\n    .map(m => [\n      \"-b:v\",\n      m + \"k\",\n      \"-maxrate\",\n      m + \"k\",\n      \"-bufsize\",\n      sigFigs(m / 2, 2) + \"k\"\n    ])\n    .getOrElse(() => [])\n\n  await args.dest.parent().mkdirp_()\n\n  return stdoutResult_(\n    Settings.ffmpegPath.valueOrDefault,\n    compactBlanks([\n      \"-loglevel\",\n      \"error\",\n      ...hwaccel(),\n      \"-threads\",\n      toS(ffmpegThreads()),\n      \"-i\",\n      args.src.nativePath,\n      ...Settings.ffmpegAvcTranscodeArgs.values,\n      // the `-vf scale=\"720:480\"` format doesn't seem to work (!?!)\n      ...(map2Gt0(args.width, args.height, (w, h) => [\"-s\", `${w}x${h}`]) ??\n        []),\n      ...bitrate,\n      args.dest.nativePath\n    ]),\n    {\n      timeoutMs: 0,\n      isIgnorableError: isIgnorableValidationError\n    }\n  )\n}\n\n/**\n * @throws on errors\n */\nexport async function ffmpegValidVideo_(src: PosixFile): Promise<StdoutResult> {\n  return logger().tap({\n    msg: \"ffmpegValidVideo\",\n    meta: { src: src.nativePath },\n    result: await stdoutResult_(\n      Settings.ffmpegPath.valueOrDefault,\n      // `-v error` may also complains about minor encoding issues, so we have to\n      // pass the error messages through that RegExp.\n      [\n        \"-v\",\n        \"error\",\n        \"-nostats\",\n        \"-threads\",\n        toS(ffmpegThreads()),\n        \"-i\",\n        src.nativePath,\n        \"-f\",\n        \"null\",\n        \"-\"\n      ],\n      {\n        timeoutMs: 0,\n        isIgnorableError: isIgnorableValidationError,\n        ignoreExitCode: true,\n        quiet: false // < raise the error\n      }\n    )\n  })\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { isRotation } from \"../../fe/Rotation\"\nimport { mkLogger } from \"../Logger\"\nimport { stdoutResult_, stdout_ } from \"../child/ChildProcess\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { jpegtranNativePath_ } from \"../fs/Tools\"\nimport { isWin } from \"../platform/Platform\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { isIgnorableValidationError } from \"./ValidationErrors\"\n\nconst devnull = isWin ? \"NUL\" : \"/dev/null\"\n\nconst logger = lazy(() => mkLogger(\"img.jpegtran\"))\n\n/**\n * @throws if the jpeg is not valid.\n */\nexport async function validJpeg_(\n  src: PosixFile,\n  isIgnorableError = isIgnorableValidationError\n): Promise<void> {\n  const cmd = await jpegtranNativePath_()\n  try {\n    await stdoutResult_(cmd, [\"-outfile\", devnull, src.nativePath], {\n      timeoutMs: commandTimeoutMs(),\n      isIgnorableError,\n      ignoreExitCode: true\n    })\n  } catch (cause: any) {\n    logger().warn(\"validJpeg caught invalid file\", { src, cause })\n    throw new WrappedError(\"Invalid JPEG: \" + src, {\n      cause,\n      path: src.nativePath,\n      doNotSend: true,\n      fatal: false,\n      retriable: false\n    })\n  }\n}\n\n/**\n * @throws if error\n */\nexport async function rotateInPlace_(\n  src: PosixFile,\n  degrees: number\n): Promise<void> {\n  logger().info(\"rotateInPlace(\" + src + \")\", degrees)\n  await src.applyWip_({\n    fn_: dest => rotate_(src, dest, degrees),\n    skipFsLock: false,\n    minSizeBytes: 512,\n    timeoutMs: minuteMs\n  })\n}\n\n/**\n * @throws if error\n */\nexport async function rotate_(\n  src: PosixFile,\n  dest: PosixFile,\n  degrees: number\n): Promise<void> {\n  const cmd = await jpegtranNativePath_()\n  if (!isRotation(degrees)) {\n    throw new Error(\"refusing to rotate(\" + src + \", \" + degrees + \")\")\n  }\n  await stdout_(\n    cmd,\n    [\n      \"-copy\",\n      \"all\",\n      \"-trim\",\n      \"-rotate\",\n      degrees.toFixed(0),\n      \"-outfile\",\n      dest.nativePath,\n      src.nativePath\n    ],\n    { timeoutMs: minuteMs }\n  )\n  dest.clear() // < emit fileChanged\n  return\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { dmegapixels } from \"../../fe/Dimensions\"\nimport { MB } from \"../../fe/Units\"\nimport { isError } from \"../../fe/isError\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { endProcess, execFile } from \"../child/ChildProcess\"\nimport { errorToS } from \"../error/Error\"\nimport { DoNotSendErrorFlag, NonRetriableErrorFlag } from \"../error/ErrorFlags\"\nimport { WrappedError, toWrappedError } from \"../error/WrappedError\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { dcrawEmuNativePath_ } from \"../fs/Tools\"\nimport { PullProgressObserver } from \"../progress/PullProgressObserver\"\nimport { Settings } from \"../settings/Settings\"\nimport { isLibrawMimeType } from \"../tags/MimeTypes\"\nimport { readMimeType } from \"../tags/ReadMimeType\"\nimport { dimensions } from \"./FileDimensions\"\nimport { readableToFile_ } from \"./ImageCache\"\nimport { ImageSize } from \"./ImageSize\"\nimport { dcrawTimeout } from \"./SyncFileTimeout\"\nimport { isIgnorableValidationError } from \"./ValidationErrors\"\n\nconst logger = lazy(() => mkLogger(\"img.libraw\"))\n\nexport async function librawSupported(src: PosixFile): Promise<boolean> {\n  // THIS SHOULD NOT CALL mimetype(), because we may already be trying to\n  // service a readTags request for src.\n  try {\n    return isLibrawMimeType(await readMimeType(src.nativePath))\n  } catch (err) {\n    logger().warn(\"librawSupported(\" + src + \"): failed to read filetype\", err)\n    return false\n  }\n}\n\nexport async function raw2tiff_(src: PosixFile) {\n  return readableToFile_({\n    src,\n    desc: \"dcraw\", // < this becomes the basename\n    suffix: \".tiff\",\n    f: dest => dcraw_emu_(src, dest)\n  })\n}\n\nconst TiffOutput = [\"-T\"]\nconst WriteToStdout = [\"-Z\", \"-\"]\n// -o [0-6]  Output colorspace (raw,sRGB,...):\nconst Colorspace = [\"-o\", \"1\"]\n// disable auto-flip/auto-rotate, because libraw is sometimes wrong:\nconst IgnoreOrientation = [\"-t\", \"0\", \"-j\"]\n\n/**\n * Tell dcraw to convert src to dest (as a TIFF)\n */\nexport async function dcraw_emu_(\n  src: PosixFile,\n  dest: PosixFile\n): Promise<void> {\n  // NOTE: this is already time()d by sharpReadable\n  const start = Date.now()\n\n  const srcDim = await dimensions(src)\n  if (srcDim == null) {\n    return logger().throw(\n      \"Cannot decode RAW \" +\n        src +\n        \": no EXIF dimensions.\" +\n        DoNotSendErrorFlag +\n        NonRetriableErrorFlag\n    )\n  }\n\n  const fitDim = ImageSize.largestFit().outputSize(srcDim)\n\n  const maybeHalfSize: string[] = []\n\n  if (fitDim != null && 4 * dmegapixels(fitDim) < dmegapixels(srcDim)) {\n    logger().debug(\"Large original source: using -h\")\n    maybeHalfSize.push(\"-h\")\n  }\n\n  const cmd = await dcrawEmuNativePath_()\n  const args = [\n    ...TiffOutput,\n    ...WriteToStdout,\n    ...Colorspace,\n    ...maybeHalfSize,\n    ...IgnoreOrientation,\n    ...Settings.dcrawEmuArgs.values,\n    src.nativePath\n  ]\n  const timeout = 5 * minuteMs\n  const opts = {\n    encoding: \"buffer\",\n    timeout,\n    maxBuffer: 250 * MB\n  }\n  logger().debug(\"dcraw_emu()\", { cmd, args, opts })\n  const childProc = execFile(cmd, args, timeout, opts)\n  const errors: Error[] = []\n\n  function onError(err: Error | string | Buffer) {\n    const msg = isError(err) ? errorToS(err) : toS(err)\n    if (isIgnorableValidationError(msg)) {\n      logger().info(\"dcraw_emu():  warning\", { src, msg })\n    } else {\n      logger().warn(\"dcraw_emu(): error\", { src, msg })\n      const e = isError(err) ? err : toWrappedError(msg, { fatal: false })\n      errors.push(e)\n    }\n  }\n  childProc.on(\"error\", onError)\n  childProc.stderr!.on(\"data\", onError)\n\n  // The timeout is very pessimistic:\n  const expectedElapsedMs = dcrawTimeout(await src.size()) / 7\n\n  const obs = new PullProgressObserver(\n    { path: src.nativePath, op: \"Converting raw image\" },\n    expectedElapsedMs,\n    () => Date.now() - start\n  )\n\n  childProc.on(\"close\", () => obs.end())\n  await dest.writeStream_(childProc.stdout!)\n  if (isNotEmpty(errors)) {\n    throw new WrappedError(\"Failed to convert RAW image \" + src, {\n      causes: errors,\n      path: src.nativePath\n    })\n  }\n\n  void endProcess(childProc)\n\n  return\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { stdoutResult_ } from \"../child/ChildProcess\"\nimport { pathTo } from \"../fs/PathTo\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { isMac } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { withImageCache_ } from \"./ImageCache\"\n\n// No one knows nor cares about the version: we just hope they're all compatible with eachother, ish.\n\nexport const sipsPath = lazy(async () => {\n  return isMac ? pathTo(\"sips\") : undefined\n})\n\n// sips -s format png oldpic.jpg --out newpic.png\n\nexport async function sips2jpeg_(src: PosixFile): PromiseMaybe<PosixFile> {\n  return withImageCache_(src, \"heif\", \".jpeg\", dest =>\n    stdoutResult_(\n      \"sips\",\n      [\n        \"-s\",\n        \"format\",\n        \"jpeg\",\n        \"-s\",\n        \"formatOptions\",\n        String(Settings.previewQuality.valueOrDefault),\n        src.nativePath,\n        \"--out\",\n        dest.base\n      ],\n      {\n        cwd: dest.dir,\n        timeoutMs: commandTimeoutMs()\n      }\n    )\n  )\n}\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { blank, mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { stringify } from \"../../fe/JSON\"\nimport { denull } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { mkLogger } from \"../Logger\"\nimport { mapGt0 } from \"../Number\"\nimport { stripPrefix } from \"../String\"\nimport { thenMap, thenMapOr } from \"../async/Promise\"\nimport { StdoutResult, stdoutResult_ } from \"../child/ChildProcess\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { NonRetriableErrorFlag } from \"../error/ErrorFlags\"\nimport { ee } from \"../event/EventEmitter\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { isRaspberryPi } from \"../platform/isRaspberryPi\"\nimport { PowerShell, pwshQuote } from \"../pwsh/PowerShell\"\nimport { Settings } from \"../settings/Settings\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"img.vlc\"))\n\nexport function vlcVersionDescription() {\n  return thenMapOr(\n    vlcInfo().catch(() => undefined),\n    vlc => \"version \" + vlc.version,\n    () => \"(not found)\"\n  )\n}\n\nconst VersionRe = /VLC (?:version|media player) ([0-9\\.]+)/i\n\nexport interface VLCInfo {\n  path?: string\n  version?: string\n}\n\n// See: https://superuser.com/questions/947116/how-do-i-use-vlc-command-line-in-windows-batch-line-without-showing-gui\n\nconst DefaultVlcArgs = [\n  \"--intf=dummy\", // don't render the interface\n  \"--vout=dummy\", // don't render the video\n  \"--aout=dummy\", // don't render the audio\n  \"--quiet\"\n]\n\nlater(() => {\n  ee().on(\"clearCache\", () => _vlcInfo.unset())\n  ee().on(\"clearToolCache\", () => _vlcInfo.unset())\n})\n\nexport async function vlcInfo() {\n  return (await _vlcInfo()) ?? _vlcInfo.refresh()\n}\n\nexport async function isVlcSupported() {\n  // 20200320: The raspbian/ARM port of VLC doesn't work correctly.\n  return !isRaspberryPi() && notBlank((await vlcInfo())?.version)\n}\n\nexport function vlcPath() {\n  return thenMap(vlcInfo(), ea => (ea.version == null ? undefined : ea.path))\n}\n\nasync function versionPosix(path: string): PromiseMaybe<string> {\n  return thenMap(\n    stdoutResult_(\n      path,\n      // VLC on linux and mac don't use `--dummy-quiet`.\n      [...DefaultVlcArgs, \"--version\"],\n      {\n        timeoutMs: commandTimeoutMs(),\n        // VLC burps \"VLC media player 3.0.6 Vetinari (revision\n        // 3.0.6-0-g5803e85)\" to stderr. SRSLY WTH. STDERR.\n        ignoreStderr: true,\n        quiet: true,\n        isIgnorableError: () => true\n      }\n    ),\n    result =>\n      opt(result.result)\n        .filter(notBlank)\n        .map(ea => ea.trim())\n        .flatMap(ea => VersionRe.exec(ea))\n        .flatMap(ea => ea[1])\n        .get()\n  )\n}\n\nfunction versionWin(path: string): PromiseMaybe<string> {\n  // Windows VLC --version pops up a terminal no matter what options you give\n  // it. YAY\n  return thenMap(\n    PowerShell.instance()\n      .execute(\n        `(Get-Item -path ${pwshQuote(path)}).VersionInfo.FileVersion`,\n        ea => ea\n      )\n      .catch(err => {\n        logger().warn(\"Failed to run vlcInfoWin: \" + path + \": \" + err)\n        return undefined\n      }),\n    result => denull(result.trim())\n  )\n}\n\nconst _vlcInfo = lazy<PromiseMaybe<VLCInfo>>(async () => {\n  const paths: (string | PosixFile)[] = []\n\n  // Always add \"vlc\" in PATH if we're on linux:\n  if (Settings.vlcPath.hasValue() || isLinux) {\n    // we're pushing the string here, rather than a PosixFile, so we try even if\n    // the path doesn't exist (as it may be in the PATH)\n    paths.push(Settings.vlcPath.valueOrDefault)\n  }\n\n  function add(...arr: string[]) {\n    paths.push(PosixFile.for(join(...arr)))\n  }\n\n  if (isMac) {\n    const subpath = \"/Applications/VLC.app/Contents/MacOS/VLC\"\n    mapNotBlank(getEnv(\"HOME\"), ea => add(ea + subpath))\n    add(subpath)\n  }\n  if (isWin) {\n    const subpath = [\"VideoLAN\", \"VLC\", \"vlc.exe\"]\n    mapNotBlank(getEnv(\"LOCALAPPDATA\"), ea => {\n      add(ea, \"Apps\", ...subpath)\n    })\n    mapNotBlank(getEnv(\"ProgramFiles\"), ea => {\n      add(ea, ...subpath)\n    })\n    mapNotBlank(getEnv(\"ProgramFiles(x86)\"), ea => {\n      add(ea, ...subpath)\n    })\n  }\n  if (isLinux) {\n    // backstop if PATH isn't set:\n    add(\"/usr/bin/vlc\")\n  }\n\n  for (const pathOrFile of paths) {\n    try {\n      if (\n        pathOrFile instanceof PosixFile &&\n        (await pathOrFile.clear().notExists())\n      ) {\n        continue\n      }\n      const path = pathOrFile.toString()\n      const version = await (isWin ? versionWin(path) : versionPosix(path))\n      if (blank(version)) {\n        logger().warn(\"vlcInfo(): no VLC version found for \" + pathOrFile)\n        continue\n      } else {\n        return logger().tap({ msg: \"vlcInfo()\", result: { path, version } })\n      }\n    } catch (err) {\n      logger().warn(\"vlcInfo(): err:\" + err, { path: pathOrFile })\n    }\n  }\n  return\n})\n\n// https://wiki.videolan.org/How_to_create_thumbnails/\nexport async function vlcFrame(args: {\n  src: PosixFile\n  dest: PosixFile\n  startAtSec?: number\n  width?: number\n  height?: number\n}): PromiseMaybe<StdoutResult> {\n  const vlc = await vlcPath()\n  if (blank(vlc)) {\n    return logger().throw(\"vlcFrame(): empty vlcPath\", {\n      ...args,\n      ignorable: true\n    })\n  }\n  const format = stripPrefix(args.dest.ext, \".\").toLowerCase()\n  if (![\"png\", \"jpg\"].includes(format)) {\n    return logger().throw(\n      \"vlcFrame(): Invalid destination extension\" + NonRetriableErrorFlag,\n      { format, args }\n    )\n  }\n  const startTime = args.startAtSec ?? 0\n  const stopTime = startTime + 1\n  const result = await stdoutResult_(\n    vlc,\n    compact([\n      // BEWARE! VLC NEEDS THIS ORDER OF ARGUMENTS TO WORK! SRSLYWTF\n      ...DefaultVlcArgs,\n      \"--avcodec-hw=none\", // https://forum.videolan.org/viewtopic.php?f=13&t=129067&p=486082&hilit=snapshot#p433025\n      \"--video-filter=scene\", // enable post-processing to make image quality better\n      \"--scene-format=\" + format,\n      \"--scene-replace\",\n      // Ratio of images to record. 3 means that one image out of three is\n      // recorded. This is ridiculously large so we only get one frame:\n      \"--scene-ratio=500\",\n\n      // VLC doesn't quite do dimensions correctly, but as of 20191205, it's\n      // better than what we have otherwise, so this is commented out.\n      // map(args.width, ea => \"--scene-width=\" + ea),\n      // map(args.height, ea => \"--scene-height=\" + ea),\n\n      \"--scene-path=\" + args.dest.dir,\n      \"--scene-prefix=\" + args.dest.name,\n      \"--start-time=\" + startTime.toFixed(1), // this makes the poster image match the start of the video.\n      \"--stop-time=\" + stopTime.toFixed(1),\n      args.src.nativePath,\n      \"vlc://quit\"\n    ]),\n    {\n      timeoutMs: minuteMs,\n      ignoreStderr: true\n    }\n  )\n  // console.log(\"vlcFrame()\", { result })\n  // if (gt0(result.pid)) {\n  //   if (!(await until(() => pidNotExists(result.pid), 7 * secondMs))) {\n  //     await kill(result.pid, true)\n  //   }\n  // }\n  args.dest.clear()\n  if (gt0(result.code)) {\n    throw new Error(\"vlc failed: \" + stringify(result))\n  }\n  return result\n}\n\nexport async function vlcTranscode_(args: {\n  src: PosixFile\n  dest: PosixFile\n  width: Maybe<number>\n  height: Maybe<number>\n  videoBitrateKbps?: number\n  timeoutMs: number\n}) {\n  const vlc = await vlcPath()\n  if (blank(vlc)) {\n    throw new Error(\n      \"vlc.transcode(): VLC is not installed, cannot transcode \" + args.src\n    )\n  }\n\n  // Enable debug logging within VLC, restart, then run a convert job. These\n  // options will be in the log.\n\n  // mp4 is the most compatible format, according to https://en.wikipedia.org/wiki/HTML5_video\n\n  // AAC encoding seems to be required for audio playback across different\n  // source video formats.\n\n  // $ ffmpeg -hide_banner -f lavfi -i nullsrc -c:v libx264 -preset faster -f mp4 -\n\n  // options: cabac=1 ref=2 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=4 psy=1\n  // psy_rd=1.00:0.00 mixed_ref=0 me_range=16 chroma_me=1 trellis=1 8x8dct=1\n  // cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=0 threads=6\n  // lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0\n  // bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1\n  // b_bias=0 direct=1 weightb=1 open_gop=0 weightp=1 keyint=250 keyint_min=25\n  // scenecut=40 intra_refresh=0 rc_lookahead=20 rc=crf mbtree=1 crf=23.0\n  // qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\n\n  // mrm@i3:~$ ffmpeg -hide_banner -f lavfi -i nullsrc -c:v libx264 -preset slow\n  // -f mp4 -\n\n  // options: cabac=1 ref=5 deblock=1:0:0 analyse=0x3:0x113 me=umh subme=8 psy=1\n  // psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1\n  // cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=6\n  // lookahead_threads=1 sliced_threads=0 nr=0 decimate=1 interlaced=0\n  // bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=2\n  // b_bias=0 direct=3 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=25\n  // scenecut=40 intra_refresh=0 rc_lookahead=50 rc=crf mbtree=1 crf=23.0\n  // qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\n\n  const tcOpts = compact([\n    \"vcodec=h264\",\n    mapGt0(args.videoBitrateKbps, ea => \"vb=\" + ea),\n    mapGt0(args.width, w => \"width=\" + Math.floor(w)),\n    mapGt0(args.height, h => \"height=\" + Math.floor(h)),\n    // These are the \"faster\" options that differ from the \"slower\" presets:\n    \"venc=x264{ref=2:me=hex:mixed_ref=0:chroma_qp_offset=0:b_adapt=1:direct=1:weightp=1:rc_lookahead=20}\",\n    // https://support.plex.tv/articles/200250347-transcoder/\n    // \"faster encoding\": (basically the same speed as hq)\n    // \"venc=x264{subme=0:me_range=4:rc_lookahead=10:me=dia:no_chroma_me:8x8dct=0:partitions=none}\",\n    // \"hq encoding\":\n    // \"venc=x264{subme=0:me_range=4:rc_lookahead=10:me=hex:8x8dct=0:partitions=none}\",\n    // \"make my cpu hurt\":\n    // \"venc=x264{subme=0:me_range=4:rc_lookahead=10:me=hex:8x8dct=1}\",\n    \"acodec=mp4a\",\n    \"ab=128\",\n    \"channels=2\",\n    \"samplerate=44100\",\n    \"scodec=none\",\n    \"deinterlace\"\n  ]).join(\",\")\n\n  const stdOpts = [\n    \"access=file{overwrite}\",\n    \"mux=mp4\",\n    \"dst=\" + args.dest.base\n  ].join(\",\")\n\n  return stdoutResult_(\n    vlc,\n    [\n      ...DefaultVlcArgs,\n      \"--no-repeat\",\n      \"--no-loop\",\n      args.src.fileuri(),\n      `--sout=#transcode{${tcOpts}}:standard{${stdOpts}}`,\n      \"vlc://quit\"\n    ],\n    {\n      cwd: args.dest.dir,\n      timeoutMs: args.timeoutMs,\n      ignoreStderr: true\n    }\n  )\n}\n","import { brotliDecompressSync } from \"zlib\"\n\n/**\n * Decode and parse a brotli-compressed, base64 string\n */\nexport function j(s: string) {\n  return JSON.parse(\n    brotliDecompressSync(Buffer.from(s, \"base64\")).toString(\"utf8\")\n  )\n}\n","import { License } from \"../../fe/api/License\"\nimport { S } from \"../../fe/api/Subscriptions\"\nimport { compact, uniq } from \"../../fe/Array\"\nimport { dayMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { Obj } from \"../../fe/Object\"\nimport { cmp, Comparable } from \"../../fe/Primitive\"\nimport { intersection } from \"../Array\"\nimport { within } from \"../Number\"\nimport { k, ParsedLicense } from \"./Licensing\"\nimport { prefix2scheme } from \"./SystemIdSchemes\"\n\nexport class L implements ParsedLicense {\n  static for(opts: {\n    str: string\n    l: Maybe<License>\n    sids: string[]\n    src: string\n  }) {\n    return new this(opts.str, opts.l, opts.sids, opts.src)\n  }\n  readonly meta: Obj\n  /**\n   * @param s the actual license string\n   * @param _l the parsed License\n   */\n  private constructor(\n    readonly s: string,\n    readonly _l: Maybe<License>,\n    readonly _sids: string[],\n    src: string\n  ) {\n    this.meta = { src }\n  }\n\n  get l(): Maybe<License> {\n    return this._l\n  }\n\n  get ok(): boolean {\n    if (this._l == null) return false\n    const matchedUids = intersection(this._sids, this._l.uids)\n    const matchedSchemePrefixes = uniq(matchedUids.map(ea => ea.split(\":\")[0]))\n    const matchedSchemes = compact(\n      matchedSchemePrefixes.map(ea => prefix2scheme(ea as any))\n    )\n    const uidsOK = matchedSchemes.length >= this._l.mat\n    const dateOK = within(\n      this._l.iat?.getTime(),\n      this._l.exp?.getTime() + dayMs,\n      Date.now()\n    )\n\n    this.meta[k().o] = dateOK\n    this.meta[k().u] = uidsOK\n    this.meta[k().m] = matchedSchemes\n\n    // console.log(\"L.ok()\", {\n    //   dateOK,\n    //   uidsOK,\n    //   sids: this._sids,\n    //   l_uids: this._l.uids,\n    //   matchedSchemes,\n    //   matchedUids,\n    //   matchedSchemePrefixes\n    // })\n    return dateOK && uidsOK\n  }\n\n  cmpVal(): Comparable[] {\n    return [\n      this.ok,\n      -(S.indexOf(this.l?.[k().T]) ?? 0),\n      this.l?.exp?.getTime() ?? 1,\n      this.meta.matchedSchemes // more is better\n    ]\n  }\n\n  /**\n   * @return 1 if this > b, -1 if this < b, 0 if this == b.\n   */\n  cmp(p: L) {\n    return cmp(this.cmpVal(), p.cmpVal())\n  }\n}\n","import { rolazy } from \"../../core/Lazy\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { defer } from \"../../fe/Defer\"\nimport { later } from \"../../fe/Delay\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toGte0 } from \"../../fe/Number\"\nimport { Obj } from \"../../fe/Object\"\nimport { ensurePrefix } from \"../../fe/String\"\nimport { License } from \"../../fe/api/License\"\nimport { S } from \"../../fe/api/Subscriptions\"\nimport { isError } from \"../../fe/isError\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { AppName } from \"../AppName\"\nimport { mkLogger } from \"../Logger\"\nimport { someOrTimeout, sortByAsync } from \"../async/Promise\"\nimport { utcIsoToTs } from \"../date/Date\"\nimport { configDir } from \"../dir/ConfigDir\"\nimport { libraryDataDirPosixFile } from \"../dir/LibraryDirs\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { ee } from \"../event/EventEmitter\"\nimport { BaseFile } from \"../fs/BaseFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { j } from \"./BrotliDecode\"\nimport { L } from \"./L\"\nimport { V } from \"./Paseto\"\nimport { sids } from \"./SystemIds\"\nimport { UserTimeoutMs } from \"./UserTimeoutMs\"\n\n// prevent greps for \"*license*\" or \"*validate*\":\n\n// console.dir(\n//   require(\"zlib\")\n//     .brotliCompressSync(\n//       JSON.stringify({\n//         a: \"mat\",\n//         b: \"uids\",\n//         c: \"reloadLicenses\",\n//         d: \"licenses\",\n//         e: \"Token verification failed: \",\n//         f: \"lite\",\n//         g: \"plus\",\n//         l: \"Licensing\",\n//         i: \"iat\",\n//         r: \"exp\",\n//         m: \"matchedSchemes\",\n//         n: \"set\",\n//         o: \"dateOK\",\n//         p: \"v2.public.\",\n//         R: \"autoRefreshLicense\",\n//         L: \"license\",\n//         T: \"tier\",\n//         t: \"trial\",\n//         u: \"uidsOK\",\n//         v: \"validate\",\n//         x: \"PS_FORCE_LITE\",\n//         y: \"PS_FORCE_TRIAL\"\n//       })\n//     )\n//     .toString(\"base64\")\n// )\n\n/**\n * licensing keys\n */\nexport const k = rolazy<{\n  a: \"mat\"\n  b: \"uids\"\n  c: \"reloadLicenses\"\n  d: \"licenses\"\n  e: \"Token verification failed: \"\n  f: \"lite\"\n  g: \"plus\"\n  l: \"Licensing\"\n  i: \"iat\"\n  r: \"exp\"\n  m: \"matchedSchemes\"\n  n: \"set\"\n  o: \"dateOK\"\n  p: \"v2.public.\"\n  R: \"autoRefreshLicense\"\n  L: \"license\"\n  T: \"tier\"\n  t: \"trial\"\n  u: \"uidsOK\"\n  v: \"validate\"\n  x: \"PS_FORCE_LITE\"\n  y: \"PS_FORCE_TRIAL\"\n}>(() =>\n  j(\n    \"G1UBABwHdkz4hUIkFCfPXW5LlfvrWKSr9W3AIyIhUiw68NDfvLLHVop/bGoNnRxQlnqi2TZp0IJaX+lUHBoi+vMy2LMNpHCv8xVkUGsmQsgB8ldHoDqJeUQzbdybwikWVRs2KSWKjE5LnuqhTNSp3gTLhNfE9EqBLeaXP+UM9YqTGSXcyrcL03rIPMDAVyJplSZC0xoUgguOYJKvrcYFbNArN7BrQsnnsJ4hMtcSxOTxxRdxzETtL93qa3vjDw==\"\n  )\n)\n\nconst logger = defer(() => mkLogger(k().l))\n\n// /**\n//  * Extract the footer from a token\n//  */\n// function extractFooter(t: string): Maybe<string> {\n//   return map(t.split(\".\")[3], b64decodeString)\n// }\n\n/**\n * Verify token, but don't validate against current system IDs\n */\nexport async function v_(str: Maybe<string>) {\n  const o = (await V(ensurePrefix(toS(str).trim(), k().p))) as Obj\n  const iat = utcIsoToTs(o[k().i])\n  if (iat == null) {\n    throw new Error(\"bad \" + k().i + \": \" + o[k().i] + \" (\" + str + \")\")\n  }\n  const exp = utcIsoToTs(o[k().r])\n  if (exp == null) {\n    throw new Error(\"bad \" + k().r + \": \" + o[k().r] + \" (\" + str + \")\")\n  }\n\n  // Set PS_FORCE_TRIAL=1 to force all licenses into trial mode\n  if (getDevEnvFlag(k().y)) {\n    o[k().t] = true\n  }\n\n  o[k().a] = toGte0(o[k().a]) ?? 2\n  o[k().i] = new Date(iat)\n  o[k().r] = new Date(exp)\n  o[k().b] = toS(o.uids).split(\",\")\n  return o as License\n}\n\nexport interface ParsedLicense {\n  ok: boolean\n  /**\n   * the actual license string\n   */\n  s: string\n  l?: License\n  meta: Obj\n}\n\n/**\n * Verify and validate the given stringified license\n */\nexport async function v(\n  str: Maybe<string>,\n  src: string,\n  timeoutMs: number,\n  _sids?: string[]\n): PromiseMaybe<ParsedLicense | L> {\n  try {\n    return blank(str)\n      ? undefined\n      : L.for({\n          str,\n          l: await v_(str),\n          sids: _sids != null ? _sids : await sids({ timeoutMs }),\n          src\n        })\n  } catch (err) {\n    return logger().tap({\n      msg: k().v,\n      result: {\n        s: str!,\n        ok: false,\n        meta: { err }\n      }\n    })\n  }\n}\n\n/**\n * Only return an L if the license string validates and is currently good.\n */\nexport async function vok(\n  str: Maybe<string>,\n  src: string,\n  timeoutMs: number\n): PromiseMaybe<L> {\n  if (blank(str)) return\n  const ea = await v(str, src, timeoutMs)\n  return isTrue(ea?.ok) && ea instanceof L ? ea : undefined\n}\n\n/**\n * Return all available licenses and metadata from either the PS_LICENSE\n * environment variable, or licenses stored on the filesystem.\n *\n * The first element will be the \"best\" license.\n */\nexport const m = rolazy<Promise<ParsedLicense[]>>(async () => {\n  // Set PS_FORCE_LITE=1 to ignore all licenses\n  if (getDevEnvFlag(k().x)) {\n    return []\n  }\n  const _sids = await sids({ timeoutMs: UserTimeoutMs })\n  const ud = map(configDir(), ea => BaseFile.for(ea))\n  const result = sorted(\n    flatten(\n      (\n        await someOrTimeout<ParsedLicense | ParsedLicense[]>(\n          [\n            // Read from env, system, and library. sb() will sort the best one to be the first\n            () => rawLicenseFromSettings(_sids),\n            () => rawFromDir(ud?.join(k().d), _sids),\n            () => rawFromDir(libraryDataDirPosixFile()?.join(k().d), _sids),\n            () =>\n              rawFromDir(\n                ud?.sibling(AppName().toLowerCase()).join(k().d),\n                _sids\n              )\n          ],\n          { timeoutMs: UserTimeoutMs }\n        )\n      ).filter(ea => {\n        if (ea instanceof Error) {\n          return false\n        } else {\n          return true\n        }\n      })\n    )\n  )\n  return logger().tap({\n    msg: k().d + \"()\",\n    result\n  })\n})\n\nfunction rawLicenseFromSettings(_sids: string[]) {\n  return v(\n    Settings[k().L].value,\n    \"Settings\",\n    UserTimeoutMs,\n    _sids\n  ) as Promise<ParsedLicense>\n}\n\nasync function rawFromDir(dir: Maybe<BaseFile>, _sids: string[]) {\n  const results: ParsedLicense[] = []\n  const children = await sortByAsync({\n    name: \"rawLicenseFromDir(\" + dir + \")\",\n    arr: dir?.childFiles(),\n    f: ea => ea.mtimeMs()\n  })\n\n  // youngest files first:\n  for (const ea of children.reverse()) {\n    const result = await v(\n      toA(await ea.readLines())\n        .map(str => str.trim())\n        .join(\"\"),\n      ea.nativePath,\n      UserTimeoutMs,\n      _sids\n    )\n    if (result != null) results.push(result)\n  }\n  return results\n}\n/**\n * @return ParsedLicense[], best license first.\n */\nfunction sorted(arr: Maybe<Partial<ParsedLicense> | Error>[]): ParsedLicense[] {\n  return sortBy(\n    // If .l (the License object) is null, it couldn't be parsed:\n    arr.filter(ea => {\n      if (ea == null) return false\n      if (isError(ea)) {\n        logger().warn(k().d + \": \", ea)\n      }\n      return ea != null && !isError(ea) && ea?.l != null\n    }) as ParsedLicense[],\n    ea => [\n      !ea.ok,\n      S.indexOf(ea.l?.[k().T]) ?? S.length + 1,\n      -(ea.l?.exp?.getTime() ?? 1) // later expiration is better\n    ]\n  )\n}\n\nlater(() => {\n  ee().on(\"clearCache\", () => m.unset())\n  ee().on(k().c, () => m.unset()) // reloadLicenses\n})\n\n/**\n * @return the best license available\n */\nexport async function b() {\n  const arr = await m()\n  return arr[0]?.ok ? arr[0] : undefined\n}\n\n/**\n * @return the current subscription tier\n */\nexport async function t() {\n  return (await b())?.l?.[k().T] ?? k().f\n}\n\n/**\n * @return true if the license is \"lite\"\n */\nexport async function l() {\n  try {\n    return (await t()) === k().f\n  } catch {\n    return true\n  }\n}\n\n/**\n * @return true if the license is \"plus\"\n */\nexport async function p() {\n  try {\n    return (await t()) === k().g\n  } catch {\n    return false\n  }\n}\n","import { decode, V2 } from \"paseto\"\nimport { lazy } from \"../../core/Lazy\"\nimport { notBlankOr } from \"../../fe/Blank\"\nimport { j } from \"./BrotliDecode\"\n\n// console.dir(\n//   require(\"zlib\")\n//     .brotliCompressSync(\n//       JSON.stringify({\n//         c: \"crypto\",\n//         m: \"createPublicKey\",\n//         d: \"2RHuDkCTP\", // default license if k is missing\n//         o: [\n//           {\n//             k: \"2RHuDkCTP\",\n//             format: \"pem\",\n//             type: \"spki\",\n//             key: \"-----BEGIN PUBLIC KEY-----\\nMCowBQYDK2VwAyEA5XK+l4rxUbUfFOUkFN3S5kk0xpQo4zA3bGNY9SdL1XE=\\n-----END PUBLIC KEY-----\\n\"\n//           },\n//           {\n//             k: \"2SoVY4nUP\",\n//             format: \"pem\",\n//             type: \"spki\",\n//             key: \"-----BEGIN PUBLIC KEY-----\\nMCowBQYDK2VwAyEAb3JzxWd0rNW8Sft1X9FgEXcbPmCtKT/Eqmh+qx3wczk=\\n-----END PUBLIC KEY-----\\n\"\n//           }\n//         ],\n//         w: \"verify\"\n//       })\n//     )\n//     .toString(\"base64\")\n// )\n\nexport const l = lazy<{\n  c: \"crypto\"\n  m: \"createPublicKey\"\n  d: \"2RHuDkCTP\" // default license if k is missing\n  o: [\n    {\n      k: \"2RHuDkCTP\"\n      format: \"pem\"\n      type: \"spki\"\n      key: \"-----BEGIN PUBLIC KEY-----\\nMCowBQYDK2VwAyEA5XK+l4rxUbUfFOUkFN3S5kk0xpQo4zA3bGNY9SdL1XE=\\n-----END PUBLIC KEY-----\\n\"\n    },\n    {\n      k: \"2SoVY4nUP\"\n      format: \"pem\"\n      type: \"spki\"\n      key: \"-----BEGIN PUBLIC KEY-----\\nMCowBQYDK2VwAyEAb3JzxWd0rNW8Sft1X9FgEXcbPmCtKT/Eqmh+qx3wczk=\\n-----END PUBLIC KEY-----\\n\"\n    }\n  ]\n  w: \"verify\"\n}>(\n  () =>\n    j(\n      \"G54BgBwHzrkukKDR8Ar6KkW29gbXlfrqQX46gTu5Wfq6dELYTjfBokB0d5+E2SAINBtxlmPquWe3PMUoNgaJrD982QMslkNeZ4BEqcBbQT59DVl9RnoTNi50diuT7NQg0YHxkr8SwDwtmFUOf+LwNVDDnPXUrzTOU++M3b+lcyfr7PXZndKHzho8iztNkZgt+/19//aXe+gvmC0HIdnn64wdLeYeLM7S9jmjTp52SzFsvIVbd4D0+rdtdjiz6R4vc2cmY398kuXiKG7fNXWS/I93etxXiVNPd4RXJF+k6JnuMUKk03GWHQQ=\"\n    ) as any\n)\n\n/**\n * V2.verify the given token string\n */\nexport function V(s: string) {\n  const d = decode(s)\n  const payload: any = d.payload\n  if (payload == null) throw new Error(\"Missing payload\")\n  // Tokens generated in 2021 didn't have a public key sha. Default to the 2021 key:\n  const sha = notBlankOr(payload.k, l().d)\n  const k = l().o.find(ea => ea.k === sha)\n  if (k == null) throw new Error(\"Unknown key\")\n  return V2.verify(s, k)\n}\n","import { uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { defer } from \"../../fe/Defer\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { toS } from \"../../fe/toS\"\nimport { CountingSet } from \"../CountingSet\"\nimport { lazy } from \"../Lazy\"\nimport { mkLogger } from \"../Logger\"\nimport { shortStringSha } from \"../StringHash\"\nimport { Radix58 } from \"../math/Radix\"\nimport { j } from \"./BrotliDecode\"\n\n// To edit:\n\n// 1. Uncomment the console.dir() call below.\n// 2. Edit the object passed to JSON.stringify().\n// 3. Run the console.dir() call in Node REPL.\n// 4. Copy the output and paste it into the j() call below.\n// 5. Copy the object to the k type, and reformat.\n\n// console.dir(\n//   require(\"zlib\")\n//     .brotliCompressSync(\n//       JSON.stringify({\n//         // Sort order:\n//         cu: \"customerUid\",\n\n//         // linux\n//         lc: \"linuxCpuUid\", // cpu serial from `cpuid` (not available on docker)\n//         lm: \"linuxMachineUid\", // /etc/machine-id or /var/lib/dbus/machine-id\n//         lp: \"linuxProductUid\", // /sys/class/dmi/id/product_uuid (root-only)\n//         lb: \"linuxBoardSerial\", // /sys/devices/virtual/dmi/id/board_serial (root-only).\n\n//         // mac\n//         mp: \"macOsPlatformUid\", // IOPlatformUUID\n//         ms: \"macOsPlatformSerial\", // IOPlatformSerialNumber\n\n//         // windows\n//         wm: \"windowsMachineUid\",\n\n//         // less-good hardware ids:\n//         cm: \"cpuModel\", // SHA of os.cpus()[0].model\n//         bm: \"boardModel\", // SHA of /sys/devices/virtual/dmi/id/board_[vendor,name] (grep -iv o.e.m)\n\n//         // filesystem ids:\n//         li: \"libraryUid\",\n//         si: \"systemUid\",\n//         vl: \"volumeUid\"\n//       })\n//     )\n//     .toString(\"base64\")\n// )\n\n/**\n * licensing keys\n */\nconst k = defer<{\n  // Sort order:\n  cu: \"customerUid\"\n\n  // linux\n  lc: \"linuxCpuUid\" // cpu serial from `cpuid` (not available on docker)\n  lm: \"linuxMachineUid\" // /etc/machine-id or /var/lib/dbus/machine-id\n  lp: \"linuxProductUid\" // /sys/class/dmi/id/product_uuid (root-only)\n  lb: \"linuxBoardSerial\" // /sys/devices/virtual/dmi/id/board_serial (root-only).\n\n  // mac\n  mp: \"macOsPlatformUid\" // IOPlatformUUID\n  ms: \"macOsPlatformSerial\" // IOPlatformSerialNumber\n\n  // windows\n  wm: \"windowsMachineUid\"\n\n  // less-good hardware ids:\n  cm: \"cpuModel\" // SHA of os.cpus()[0].model\n  bm: \"boardModel\" // SHA of /sys/devices/virtual/dmi/id/board_[vendor,name] (grep -iv o.e.m)\n\n  // filesystem ids:\n  li: \"libraryUid\"\n  si: \"systemUid\"\n  vl: \"volumeUid\"\n}>(() =>\n  j(\n    \"Gw4BAJwHdkw3jGZwdfhCSSa3p25L/alKN8jpOgyDDw7nmjosfSGiboOD9bBqjNYm3xQMVQxVsNjNWd0YJot5Iv42vEebXH9OVsAsyRrZsEtvh2Ty1GkkP8E7OtaNOwTKrY1ZtKTsVKzuhi9t0Bse0EQ276liOIoyG4qgGkQ/FFk9FS84GxsD\"\n  )\n)\n\n// Don't use MAC address: it's randomized on all systems except desktop linux.\n\n/**\n * System ID schemes, in order of importance\n */\nexport const S = strEnum(\n  \"cu\",\n  \"lc\",\n  \"lm\",\n  \"lp\",\n  \"lb\",\n  \"mp\",\n  \"ms\",\n  \"wm\",\n  \"cm\",\n  \"bm\",\n  \"li\",\n  \"si\",\n  \"vl\"\n)\nexport type SchemePrefix = StrEnumKeys<typeof S>\n\nexport function getScheme(uid: string): Maybe<SchemePrefix> {\n  const scheme = uid.split(\":\", 1)[0]\n  return S.includes(scheme) ? scheme : undefined\n}\n\nexport function sortUids(uids: string[]) {\n  return sortBy(uniq(uids.filter(isValidUid)), ea => [\n    S.indexOf(getScheme(ea)) ?? S.length + 1,\n    ea\n  ])\n}\n\nexport function prefix2scheme(prefix: SchemePrefix) {\n  return k()[prefix]\n}\n\nconst GenericUUIDs = [\n  // https://www.freedesktop.org/software/systemd/man/machine-id.html#Initialization\n  \"uninitialized\",\n  // https://github.com/Kicksecure/dist-base-files/blob/master/etc/machine-id\n  \"b08dfa6083e7567a1921a715000001fb\"\n]\n\nexport const UidLength = 15\n\nexport function toUID(\n  pfx: SchemePrefix,\n  id: Maybe<string | Buffer>\n): Maybe<string> {\n  try {\n    const str = toS(id).replace(/[^a-z0-9=/+]+/gi, \"\")\n    return blank(str) ||\n      GenericUUIDs.includes(str.toLowerCase()) ||\n      str.match(/^[\\s0:_\\/-]*$/) != null\n      ? undefined\n      : pfx + \":\" + shortStringSha(str, UidLength, Radix58)\n  } catch (err) {\n    mkLogger(\"toUID\").warn(\"failed\", { pfx, err })\n    return\n  }\n}\n\nconst uidRE = defer(\n  () => new RegExp(`^(?:${S.values.join(\"|\")}):[0-9a-zA-Z]{${UidLength}}$`)\n)\n\nexport function isValidUid(s: string) {\n  return s != null && uidRE().exec(s) != null\n}\n\nexport class SchemeCounts {\n  readonly #uids = new Set<string>()\n\n  constructor(uids?: string[]) {\n    if (uids != null) this.addUids(uids)\n  }\n\n  get size() {\n    return this.#uids.size\n  }\n\n  addUids(uids: string[]) {\n    for (const ea of uids) {\n      if (getScheme(ea) != null && !this.#uids.has(ea)) {\n        this.#uids.add(ea)\n        this.schemeCounts.unset()\n      }\n    }\n  }\n\n  count(scheme: SchemePrefix): number {\n    return this.schemeCounts().get(scheme)\n  }\n\n  readonly schemeCounts = lazy(() => {\n    const cs = new CountingSet<SchemePrefix>()\n    for (const ea of this.#uids) {\n      const s = getScheme(ea)\n      if (s != null) cs.incr(s)\n    }\n    return cs\n  })\n}\n","import { compactBlanks, uniq } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { secondMs } from \"../../fe/Date\"\nimport { defer } from \"../../fe/Defer\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { entries } from \"../../fe/Object\"\nimport { isString } from \"../../fe/String\"\nimport { ThunkOrLater } from \"../../fe/Thunk\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { someOrTimeout, thenMap } from \"../async/Promise\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { fileGrep_ } from \"../fs/GrepReader\"\nimport { readFileMaybe } from \"../fs/ReadFile\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { LibraryUIDStore, SystemUIDStore } from \"../fs/UIDStore\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\nimport { volumes } from \"../volumes/Volumes\"\nimport { cpuInfo } from \"../work/CpuInfo\"\nimport { j } from \"./BrotliDecode\"\nimport { S, sortUids, toUID } from \"./SystemIdSchemes\"\n\n// console.dir(\n//   require(\"zlib\")\n//     .brotliCompressSync(\n//       JSON.stringify({\n//         n: \"SystemIds\",\n//         i: \"ioreg\",\n//         pc: \"/proc/cpuinfo\",\n//         ia: [\"-rd1\", \"-c\", \"IOPlatformExpertDevice\"],\n//         lm: [\"/etc/machine-id\", \"/var/lib/dbus/machine-id\"],\n//         lp: [\"/sys/class/dmi/id/product_uuid\"],\n//         lb: [\"/sys/devices/virtual/dmi/id/board_serial\"],\n//         bm: [\n//           \"/sys/devices/virtual/dmi/id/board_vendor\",\n//           \"/sys/devices/virtual/dmi/id/board_name\"\n//         ],\n//         w: \"Get-ItemProperty -Path hklm:\\\\SOFTWARE\\\\Microsoft\\\\Cryptography -Name MachineGuid | Select-Object -Property MachineGuid\"\n//       })\n//     )\n//     .toString(\"base64\")\n// )\n\n/**\n * licensing keys\n */\nexport const k = defer<{\n  n: \"SystemIds\"\n  i: \"ioreg\"\n  pc: \"/proc/cpuinfo\"\n  ia: [\"-rd1\", \"-c\", \"IOPlatformExpertDevice\"]\n  lm: [\"/etc/machine-id\", \"/var/lib/dbus/machine-id\"]\n  lp: [\"/sys/class/dmi/id/product_uuid\"]\n  lb: [\"/sys/devices/virtual/dmi/id/board_serial\"]\n  bm: [\n    \"/sys/devices/virtual/dmi/id/board_vendor\",\n    \"/sys/devices/virtual/dmi/id/board_name\"\n  ]\n  w: \"Get-ItemProperty -Path hklm:\\\\SOFTWARE\\\\Microsoft\\\\Cryptography -Name MachineGuid | Select-Object -Property MachineGuid\"\n}>(() =>\n  j(\n    \"G9ABYIzDOIZ8NLQ4t7qW8tNrmrOzz+qFGfAxl8jW4E2tLxwWRZT5TueCnPcwgTzT1DN3veRB+e7EYGlYHg6nhjBDQv7zI6EcYWk35z6QuZC3Q0itjrLCbmgd0iED0BvGiYLBJwRU1O9/3Agbl8IfG6ITVFWDRwyTw3rbUMo/XMyAVW7R23mkwUx0l4/7iA13RV/nmPuJFKp5BvJW7SoXJZoWEfdSNYYhN5UCtkbC7O1AaPIbU3P6uRLmEyb4TaHWzFigvrlmZVUzzp9j/Mz55vqN88ewd1Nrfh7gkVRQ7TtB7Ztz3XJxYC3ogdJHg8HGsG4=\"\n  )\n)\n\nconst logger = defer(() => mkLogger(k().n))\n\nexport async function readInfo(\n  f: string | SimpleFile = k().pc\n): PromiseMaybe<string[]> {\n  // This is really only found on Raspberry Pis, but certainly not on Windows:\n  if (!isLinux) return\n  try {\n    const info = await fileGrep_(\n      f,\n      /^\\s*(?:hardware|revision|serial|model)\\s*[:=]\\s*[a-z0-9]{6,}.*$/i\n    )\n    // normalize whitespace and order:\n    const lines = compactBlanks(\n      splitLines(info).map(ea => ea.replace(/\\s+/g, \" \"))\n    ).sort()\n    return lines.some(ea => ea.match(/^serial/i) != null) ? lines : undefined\n  } catch {\n    //\n    return\n  }\n}\n\nconst cpuinfoSerial = defer(() =>\n  thenMap(readInfo(), arr => toUID(S.lc, arr.join(\",\")))\n)\n\nconst oemRe = /o\\.e\\.m\\./i\n\nasync function readFiles(key: keyof ReturnType<typeof k>) {\n  return uniq(\n    await Promise.all(\n      (k()[key] as string[]).map(ea => readFileMaybe(ea, LogLevels.trace))\n    )\n  )\n    .map(toS)\n    .filter(ea => notBlank(ea) && null == ea.match(oemRe))\n}\n\nasync function linuxMachineUid() {\n  return isLinux\n    ? (await readFiles(\"lm\")).map(ea => toUID(S.lm, ea))\n    : undefined\n}\n\nasync function linuxProductUid() {\n  return isLinux\n    ? (await readFiles(\"lp\")).map(ea => toUID(S.lp, ea))\n    : undefined\n}\n\nasync function linuxBoardSerial() {\n  return isLinux\n    ? (await readFiles(\"lb\")).map(ea => toUID(S.lb, ea))\n    : undefined\n}\n\nasync function mac_IOPlatformUUID_() {\n  const out = await stdout_(k().i, k().ia, {\n    timeoutMs: 5 * secondMs\n  })\n  // \"IOPlatformUUID\" = \"123ABC45-67DE-8F90-ABC1-23456DEF7890\"\n  const mp = out.match(/uuid\" = \"([a-z0-9-]{12,})\"/i)?.[1]\n\n  // \"IOPlatformSerialNumber\" = \"ABC0123XYZ45\"\n  const ms = out.match(/SerialNumber\" = \"([a-z0-9-]{10,})\"/i)?.[1]\n  return { mp, ms }\n}\n\nasync function macUids() {\n  if (!isMac) return\n  try {\n    return entries(await mac_IOPlatformUUID_()).map(([pfx, id]) =>\n      toUID(pfx, id)\n    )\n  } catch (err) {\n    logger().warn(k().i + \" failed\", err)\n    return\n  }\n}\n\n// exposed for tests\nexport async function win_machineGuid_() {\n  return (await PowerShell.instance().executeJson(k().w))?.MachineGuid\n}\n\nasync function winMachineUid() {\n  return isWin ? toUID(S.wm, await win_machineGuid_()) : undefined\n}\n\nconst cpuModel = defer(() => toUID(S.cm, cpuInfo()[0].model))\n\nasync function boardModel() {\n  return isLinux\n    ? toUID(\n        S.bm,\n        compactBlanks(await readFiles(\"bm\"))\n          .map(ea => ea.trim())\n          .join(\"\\n\")\n      )\n    : []\n}\n\nasync function libraryUid() {\n  return toUID(S.li, await LibraryUIDStore()?.readUid_())\n}\n\nasync function systemUid() {\n  return toUID(S.si, await SystemUIDStore()?.readUid_())\n}\n\nasync function volumeIds() {\n  return toA(await volumes()).map(v => toUID(S.vl, v.uuid))\n}\n\nconst priorSids = new Set<string>()\n\nexport async function sids({ timeoutMs }: { timeoutMs: number }) {\n  const startTs = Date.now()\n  const sidFuncs: ThunkOrLater<Maybe<string | Maybe<string>[]>>[] = [\n    // easiest/most important first:\n    cpuModel,\n    cpuinfoSerial,\n    libraryUid,\n    systemUid,\n    boardModel,\n    linuxMachineUid,\n    linuxProductUid,\n    linuxBoardSerial,\n    winMachineUid,\n    macUids,\n    volumeIds\n  ]\n  const flat = flatten(await someOrTimeout(sidFuncs, { timeoutMs }))\n  const arr = flat.filter(isString)\n  for (const ea of arr) {\n    priorSids.add(ea)\n  }\n  return logger().tap({\n    msg: \"sids()\",\n    result: sortUids([...priorSids, ...arr]),\n    meta: {\n      timeoutMs,\n      elapsedMs: Date.now() - startTs\n    }\n  })\n}\n\nexport function addSids(arr: string[]) {\n  if (isTest) {\n    for (const ea of arr) {\n      priorSids.add(ea)\n    }\n  }\n}\n\nexport function clearSids() {\n  if (isTest) priorSids.clear()\n}\n","import { secondMs } from \"../../fe/Date\"\n\n// 8 seconds is considered \"broken\" for any user-facing operation, according\n// to Internet Lore\nexport const UserTimeoutMs = 7 * secondMs\n","import { inspect } from \"util\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport {\n  bgBlack,\n  bgRedBright,\n  black,\n  blue,\n  blueBright,\n  cyan,\n  darkGrey,\n  green,\n  magenta,\n  redBright,\n  yellow,\n  yellowBright\n} from \"../Chalk\"\nimport { isTest } from \"../NodeEnv\"\nimport { processName } from \"../ServiceNames\"\nimport { Settings } from \"../settings/Settings\"\nimport { LogEntry } from \"./LogEntry\"\nimport { logFilter } from \"./LogFilter\"\nimport { FormatterOptions, LogFormatter } from \"./LogFormatter\"\nimport { LogLevel } from \"./LogLevel\"\nimport { prepMeta } from \"./LogMeta\"\n\nconst procColors = lazy(() => [\n  { re: /billing|worker/, f: cyan },\n  { re: /sync/, f: blue },\n  { re: /web/, f: green },\n  { re: /main/, f: yellow },\n  { re: /info/, f: blueBright },\n  { re: /test|log/, f: magenta }\n])\n\nexport function colorProcessName(s: string): string {\n  if (blank(s)) return \"\"\n  const pc = procColors().find(ea => s.match(ea.re))\n  return pc != null ? bgBlack(pc.f(s)) : s\n}\n\nexport class ColoredLogFormatter implements LogFormatter {\n  private readonly logLevels: Record<LogLevel, string> = {\n    trace: \"trace\",\n    debug: darkGrey(\"debug\"),\n    // the underscores support grepping by log level:\n    info: cyan(\"info_\"),\n    warn: yellowBright(\"warn_\"),\n    error: redBright(\"error_\"),\n    fatal: bgRedBright(black(\"fatal\"))\n  }\n\n  readonly inspectOptions: FormatterOptions\n\n  defaultProcessName!: string\n\n  constructor(readonly _inspectOptions: Partial<FormatterOptions> = {}) {\n    this.inspectOptions = {\n      showHidden: false,\n      depth: 5,\n      colors: true,\n      compact: true,\n      customInspect: true,\n      maxArrayLength: Settings.logContextLimit.valueOrDefault + 3, // +3 so inspect doesn't do any array trimming\n      processName: processName,\n      ...this._inspectOptions\n    }\n    if (isTest) {\n      this.inspectOptions.breakLength = 255\n    }\n    // This assumes we'll only make one of these! DON'T LEAK!\n    Settings.logContextLimit.watchLater(curr => {\n      this.inspectOptions.maxArrayLength = curr + 1\n    })\n    this.inspectOptions.processName.watch(\n      ea => (this.defaultProcessName = colorProcessName(ea))\n    )\n  }\n\n  formatMeta(meta?: Maybe<any[]>) {\n    if (meta == null) return undefined\n    const m = prepMeta(meta)\n    return m == null ? undefined : inspect(m, this.inspectOptions)\n  }\n\n  formatLogEntry(le: LogEntry): string {\n    const contextColor = logFilter().highlight(le.ctx) ? yellow : blue\n    return compactBlanks([\n      darkGrey(new Date(le.ts).toISOString()),\n      le.from == null ? this.defaultProcessName : colorProcessName(le.from),\n      this.logLevels[le.l],\n      contextColor(le.ctx),\n      le.msg,\n      this.formatMeta(le.meta)\n    ])\n      .map(ea => toS(ea))\n      .join(\" \")\n  }\n\n  format(\n    level: LogLevel,\n    context: string,\n    message: string,\n    meta?: any\n  ): string {\n    return this.formatLogEntry({\n      ts: Date.now(),\n      l: level,\n      from: processName(),\n      ctx: context,\n      msg: message,\n      meta\n    })\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { processName } from \"../ServiceNames\"\nimport { logFilter } from \"./LogFilter\"\nimport { SimpleLogger } from \"./Logger\"\nimport { LogLevel } from \"./LogLevel\"\nimport { pushLogEntries } from \"./LogTailEntries\"\n\n/**\n * Works in concert with LogTail so both local and remote log messages are\n * emitted in chronological order.\n */\nexport class ConsoleLogger implements SimpleLogger {\n  static readonly instance = lazy(() => new ConsoleLogger())\n\n  log(level: LogLevel, context: string, msg: string, meta?: any) {\n    if (this.enabled(level, context)) {\n      pushLogEntries({\n        ts: Date.now(),\n        l: level,\n        from: processName(),\n        ctx: context,\n        msg,\n        meta\n      })\n    }\n  }\n\n  enabled(level: LogLevel, context: string): boolean {\n    return logFilter().enabled(level, context)\n  }\n\n  async flush() {\n    // no op\n  }\n\n  end() {\n    // no op\n  }\n\n  toJSON() {\n    // if we add an object that contains a logger to LogEntry.meta...\n    return {\n      _ctor: \"ConsoleLogger\"\n    }\n  }\n}\n","import { Logger } from \"batch-cluster\"\nimport { toNotBlank } from \"../../fe/Blank\"\nimport { shortStack } from \"../../fe/Error\"\nimport { Later } from \"../../fe/Later\"\nimport { map } from \"../../fe/Maybe\"\nimport { Obj } from \"../../fe/Object\"\nimport { Thunk } from \"../../fe/Thunk\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { rootLoggers } from \"../Logger\"\nimport { mapGt0 } from \"../Number\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { AbortError } from \"../async/AbortError\"\nimport { NewWrappedError, toWrappedError } from \"../error/WrappedError\"\nimport { LogLevel, LogLevels, msTolevel } from \"./LogLevel\"\nimport { SimpleLogger } from \"./Logger\"\n\n/**\n * Delegates to a SimpleLogger, applying filters, and exposing level-specific\n * log methods.\n */\nexport class ContextualLogger implements SimpleLogger, Logger {\n  readonly context: string\n  constructor(\n    context: string,\n    readonly loggers = rootLoggers\n  ) {\n    // shite goes real south if context is blank, so let's make sure it's not:\n    this.context =\n      toNotBlank(context) ??\n      // We have to skip over lazy(), mkLogger(), and this constructor:\n      shortStack().find(ea => !ea.includes(\"Logger\")) ??\n      \"\"\n  }\n\n  toLogJSON() {\n    return \"CtxLogger(\" + this.context + \")\"\n  }\n\n  /**\n   * @return `this.context + s`\n   */\n  addContext(s: string) {\n    return new ContextualLogger(this.context + s, this.loggers)\n  }\n\n  addParameterContext(param: string) {\n    return new ContextualLogger(this.context + \"(\" + param + \")\", this.loggers)\n  }\n\n  throwIfAborted(signal?: AbortSignal) {\n    if (signal?.aborted === true) {\n      const reason = signal.reason ?? \"(no reason given)\"\n      this.warn(\"process aborted: \" + (signal.reason ?? \"(no reason given)\"))\n      throw new AbortError(reason)\n    }\n  }\n\n  throw(\n    e: string | Error,\n    meta?: (NewWrappedError & { error: Error }) | Obj\n  ): never {\n    const result = toWrappedError(e, { ...meta, message: this.context })\n    this.log(\n      result.ignorable === true ? \"warn\" : \"error\",\n      \".throw() \" + result.message,\n      { stack: result.stack, ...meta }\n    )\n    throw result\n  }\n\n  tap<T>(o: { level?: LogLevel; msg: string; result: T; meta?: any }): T {\n    const level =\n      o.level ?? mapGt0(o.meta?.elapsedMs, msTolevel) ?? LogLevels.debug\n    this.log(level, o.msg, { result: o.result, ...o.meta })\n    return o.result\n  }\n\n  tapThunk<T>(o: {\n    level?: LogLevel\n    msg: string\n    result: Thunk<T>\n    meta?: any\n  }): T {\n    const start = Date.now()\n    let slowTimer\n    try {\n      slowTimer = setTimeout(\n        () => this.log(\"warn\", \"slow: \" + o.msg),\n        ShortCommandTimeoutMs\n      )\n      const result = o.result()\n      const elapsedMs = Date.now() - start\n      return this.tap({\n        level: o.level,\n        msg: o.msg,\n        result,\n        meta: { ...o.meta, elapsedMs }\n      })\n    } catch (error) {\n      this.log(\"error\", \"error: \" + o.msg, { error, ...o.meta })\n      throw error\n    } finally {\n      map(slowTimer, clearTimeout)\n    }\n  }\n\n  async tapAsync<T>(o: {\n    level?: LogLevel\n    errorLevel?: LogLevel\n    msg: string\n    errorMsg?: string\n    result: Later<T> | Promise<T>\n    meta?: any\n  }): Promise<T> {\n    const level =\n      o.level ?? mapGt0(o.meta?.elapsedMs, msTolevel) ?? LogLevels.debug\n    try {\n      const result = await (isFunction(o.result) ? o.result() : o.result)\n      this.log(level, o.msg, { result, ...o.meta })\n      return result\n    } catch (error) {\n      this.log(o.errorLevel ?? \"warn\", o.errorMsg ?? o.msg + \" failed\", {\n        error,\n        ...o.meta\n      })\n      throw error\n    }\n  }\n\n  /**\n   * Is _any_ logger enabled?\n   */\n  enabled(level: LogLevel, context?: string): boolean {\n    // PERF: avoid closure allocation:\n    for (const ea of this.loggers()) {\n      if (ea.enabled(level, context ?? this.context)) return true\n    }\n    return false\n  }\n\n  log(level: LogLevel, message: string, meta?: any): void {\n    for (const ea of this.loggers()) {\n      ea.log(level, this.context, message, meta)\n    }\n  }\n\n  elapsed(message: string, elapsedMs: number, meta?: any) {\n    this.log(msTolevel(elapsedMs), message, { elapsedMs, ...meta })\n  }\n\n  async flush() {\n    for (const ea of this.loggers()) {\n      await ea.flush()\n    }\n  }\n\n  async end() {\n    for (const ea of this.loggers()) {\n      await ea.end()\n    }\n  }\n\n  // Using fat arrows force the methods to stay bound to this instance:\n  readonly error = (msg: string, args?: any) => {\n    this.log(\"error\", msg, args)\n  }\n\n  readonly warn = (msg: string, args?: any) => {\n    this.log(\"warn\", msg, args)\n  }\n\n  readonly info = (msg: string, args?: any) => {\n    this.log(\"info\", msg, args)\n  }\n\n  readonly debug = (msg: string, args?: any) => {\n    this.log(\"debug\", msg, args)\n  }\n\n  readonly trace = (msg: string, args?: any) => {\n    this.log(\"trace\", msg, args)\n  }\n}\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { rootLoggers } from \"../Logger\"\nimport { LogWriter } from \"./LogWriter\"\n\nexport function currentFileLogger(): Maybe<LogWriter> {\n  return rootLoggers().find(ea => ea instanceof LogWriter) as LogWriter\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { LogFormatter } from \"./LogFormatter\"\nimport { PlaintextLogFormatter } from \"./PlaintextLogFormatter\"\n\nexport const DefaultLogFormatter = lazy<LogFormatter>(\n  () => new PlaintextLogFormatter()\n)\n","import { UnwrapLazy, lazy } from \"../../core/Lazy\"\nimport { compactBlanks, uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { entries, fromEntries } from \"../../fe/Object\"\nimport { SimpleAppName } from \"../AppName\"\nimport { serviceName } from \"../ServiceNames\"\nimport { stripAnsiEsc } from \"../String\"\nimport { errorToVerbose } from \"../error/Error\"\nimport { LogEntry } from \"./LogEntry\"\nimport { LogFormatter } from \"./LogFormatter\"\nimport { level2syslog } from \"./LogLevel\"\nimport { prepMeta } from \"./LogMeta\"\n\n// https://docs.greylog.org/v1/docs/gelf#gelf-payload-specification\ninterface Payload {\n  version: \"1.1\"\n  host: string\n  short_message: string\n  full_message?: string\n  timestamp: number\n  // https://en.wikipedia.org/wiki/Syslog#Severity_level\n  level: number\n}\n\nconst defaultFrom = lazy<{ _service: string; _pid?: number }>(() => ({\n  _service: serviceName(),\n  _pid: process.pid\n}))\n\nlater(() => serviceName.watchLater(() => defaultFrom.unset()))\n\nfunction extractFrom(from?: Maybe<string>): UnwrapLazy<typeof defaultFrom> {\n  if (from == null) {\n    return defaultFrom()\n  } else {\n    const [_service, pidStr] = from.split(\"-\", 2)\n\n    return blank(_service) ? defaultFrom() : { _service, _pid: toInt(pidStr) }\n  }\n}\n\n/**\n * @see https://docs.greylog.org/v1/docs/gelf\n */\nexport class GelfLogFormatter implements LogFormatter {\n  formatLogEntry(logEntry: LogEntry): string {\n    const payload: Payload = {\n      version: \"1.1\",\n      level: level2syslog(logEntry.l) ?? 7,\n      host: SimpleAppName,\n      timestamp: logEntry.ts / 1000,\n      short_message: stripAnsiEsc(\n        uniq(compactBlanks([logEntry.ctx, logEntry.msg])).join(\" \")\n      ),\n      full_message: map(logEntry.meta?.error, errorToVerbose)\n    }\n\n    return stringify({\n      ...payload,\n      ...extractFrom(logEntry.from),\n      ...fromEntries(\n        entries(prepMeta(logEntry.meta, 3) ?? {}).map(([k, v]) =>\n          k === \"id\" ? undefined : [\"_\" + k, stringify(v)]\n        )\n      )\n    })\n  }\n\n  format(\n    level: \"fatal\" | \"error\" | \"warn\" | \"info\" | \"debug\" | \"trace\",\n    ctx: string,\n    msg: string,\n    meta?: any\n  ): string {\n    return this.formatLogEntry({\n      ts: Date.now(),\n      l: level,\n      ctx,\n      msg,\n      meta\n    })\n  }\n}\n","import { createConnection, Socket } from \"net\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Latch } from \"../../fe/Latch\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toInt } from \"../../fe/Number\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { mkConsoleLogger } from \"../Logger\"\nimport { rateLimited } from \"../RateLimited\"\nimport { Settings } from \"../settings/Settings\"\nimport { GelfLogFormatter } from \"./GelfLogFormatter\"\nimport { LogFilterImpl } from \"./LogFilterImpl\"\nimport { SimpleLogger } from \"./Logger\"\nimport { LogLevel } from \"./LogLevel\"\n\nconst consoleLogger = lazy(() => mkConsoleLogger(\"log.LogBroadcaster\"))\n\nconst nul = String.fromCharCode(0)\n\nfunction parseLogServerSetting() {\n  const [host, portStr] = (Settings.logServer.valueOrDefault ?? \"\").split(\":\")\n  const port = toInt(portStr)\n  return blank(host) || !gt0(port) ? undefined : { host, port }\n}\n\nexport const logBroadcaster = lazy(() => {\n  const server = parseLogServerSetting()\n  if (server == null) {\n    if (Settings.logServer.hasValue()) {\n      consoleLogger().info(\n        `setup(): no-op: invalid PS_LOG_SERVER setting (expecting \"host:port\", got ${stringify(\n          Settings.logServer.valueOrDefault\n        )})`\n      )\n    }\n    return\n  } else {\n    return new LogBroadcaster(server.host, server.port)\n  }\n})\n\nclass LogBroadcaster extends EndableWrapper implements SimpleLogger {\n  readonly logFormatter = new GelfLogFormatter()\n  readonly logFilter = new LogFilterImpl(Settings.logServerLevel)\n  socket: Maybe<Socket>\n\n  constructor(\n    readonly host: string,\n    readonly port: number\n  ) {\n    super(\n      \"log.LogBroadcaster(\" + host + \":\" + port + \")\",\n      () => this.socket?.end(),\n      EndableRanks.logtail\n    )\n    void this.#mkSocket()\n  }\n\n  enabled(level: LogLevel, context?: string | undefined): boolean {\n    return this.logFilter.enabled(level, context)\n  }\n\n  log(level: LogLevel, context: string, msg: string, meta?: any) {\n    if (this.enabled(level, context)) {\n      try {\n        const s = this.socket\n        if (s == null) {\n          void this.#mkSocket()\n        } else {\n          s.write(this.logFormatter.format(level, context, msg, meta) + nul)\n        }\n      } catch (error) {\n        consoleLogger().warn(\"Failed to write log entry to socket\", {\n          level,\n          context,\n          msg,\n          meta,\n          error\n        })\n      }\n    }\n  }\n\n  flush() {\n    const l = new Latch()\n    this.socket?.write(\"\", () => l.resolve())\n    return l.promise\n  }\n\n  readonly #mkSocket = rateLimited({\n    f: async () => {\n      try {\n        const s = (this.socket = createConnection({\n          host: this.host,\n          port: this.port\n        }))\n        s.on(\"close\", () => {\n          this.socket = undefined\n        })\n        s.on(\"error\", (error: any) => {\n          consoleLogger().warn(\"Error from logging server\", error)\n          try {\n            s.end()\n          } catch {\n            //\n          }\n        })\n      } catch (error) {\n        consoleLogger().warn(\"Failed to connect to the log server\", error)\n      }\n    },\n    minCallDelayMs: minuteMs,\n    name: \"#mkSocket\"\n  })\n}\n","export const DefaultLogFlushMs = 250\n","import { join } from \"path\"\nimport { fmtIsoDate } from \"../../fe/Date\"\nimport { Settings } from \"../settings/Settings\"\n\nexport function datedLogDir(logDir?: string, date?: Date): string {\n  return join(\n    logDir ?? Settings.logDir.valueOrDefault,\n    fmtIsoDate(date ?? new Date())\n  )\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { weekMs } from \"../../fe/Date\"\nimport { isBillingService } from \"../ServiceNames\"\nimport { FileCleanup } from \"../fs/FileCleanup\"\nimport { isExt } from \"../fs/FileExt\"\nimport { Settings } from \"../settings/Settings\"\n\n// Don't run logdir cleanup on account.photostructure.com!\n\nexport const LogDirCleanup = lazy(() =>\n  isBillingService()\n    ? undefined\n    : new FileCleanup(\n        \"logDirCleanup\",\n        () => Settings.logDir.valueOrDefault,\n        weekMs,\n        f => isExt(f.ext, \".log\", \".log.gz\")\n      )\n)\n","import { sortByInPlace } from \"../../fe/ArraySort\"\nimport { isNumber } from \"../../fe/Number\"\nimport { isString } from \"../../fe/String\"\nimport { LogLevel, LogLevels } from \"./LogLevel\"\n\n/**\n * field names are abbreviated as they are encoded in JSON on disk.\n */\nexport interface LogEntry {\n  /**\n   * timestamp\n   */\n  ts: number\n  /**\n   * log level\n   */\n  l: LogLevel\n  /**\n   * context\n   */\n  ctx: string\n  /** message */\n  msg: string\n  meta?: any\n  from?: string\n}\n\nexport function isLogEntry(ea: any): ea is LogEntry {\n  return (\n    ea != null &&\n    isNumber(ea?.ts) &&\n    isString(ea?.msg) &&\n    LogLevels.includes(ea.l)\n  )\n}\n\nexport function logEntrySorter(ea: LogEntry) {\n  return ea?.ts\n}\n\nexport function sortLogEntriesInPlace(arr: LogEntry[]) {\n  sortByInPlace(arr, ea => ea.ts)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { levelIndex, LogLevel, LogLevels } from \"./LogLevel\"\n\nexport interface LogFilter {\n  highlight(context: string): boolean\n\n  /**\n   * @return true iff the given level and context are not configured to be\n   * squelched/omitted from downstream log writers.\n   */\n  enabled(level: LogLevel, context?: string): boolean\n  /**\n   * The level index that is enabled by default (ignoring context-specific overrides)\n   */\n  readonly defaultLevelIndex: number\n  silent: boolean\n}\n\nexport class SimpleLogFilter implements LogFilter {\n  readonly defaultLevelIndex\n  constructor(readonly minLogLevel: LogLevel) {\n    this.defaultLevelIndex = levelIndex(minLogLevel)\n  }\n  highlight() {\n    return false\n  }\n  enabled(level: LogLevel) {\n    // fatal < error < info < debug < trace\n    return levelIndex(level) <= this.defaultLevelIndex\n  }\n  silent = false\n}\n\nexport const LogLevelRe = /^(?:(.+?):)?(fatal|error|warn|info|debug|trace)$/i\n\nexport interface LogLevelContext {\n  prefix: string\n  levelIndex: number\n}\n\n// Replaced with a LogFilterImpl at log setup time (to avoid a dependency loop)\nexport const logFilter = lazy<LogFilter>(\n  () => new SimpleLogFilter(LogLevels.warn)\n)\n\n// set to watch Settings.logLevel by SetupLogger:\nexport const defaultLogLevel = lazy(\n  () => LogLevels.values[logFilter().defaultLevelIndex]\n)\n\nexport function isDefaultLogLevelAtLeast(logLevel: LogLevel) {\n  return logFilter().defaultLevelIndex >= levelIndex(logLevel)\n}\n\nexport function silently<T>(f: () => T): T {\n  try {\n    logFilter().silent = true\n    return f()\n  } finally {\n    logFilter().silent = false\n  }\n}\n\nexport async function silentlyAsync<T>(f: () => PromiseLike<T>): Promise<T> {\n  try {\n    logFilter().silent = true\n    return await f()\n  } finally {\n    logFilter().silent = false\n  }\n}\n\n/**\n * Apply `f()` if the given logLevel is enabled.\n */\nexport function ifLog<T>(logLevel: LogLevel, f: () => T): Maybe<T> {\n  return logFilter().enabled(logLevel) ? f() : undefined\n}\n\nexport function isLogged(logLevel: LogLevel, context?: string) {\n  return logFilter().enabled(logLevel, context)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { Settings } from \"../settings/Settings\"\nimport { StringSetting } from \"../settings/StringSetting\"\nimport { LogFilter, LogLevelContext, LogLevelRe } from \"./LogFilter\"\nimport { LogLevel, LogLevels, levelIndex } from \"./LogLevel\"\n\nexport class LogFilterImpl implements LogFilter {\n  silent = false\n  defaultLevelIndex!: number\n  private readonly contexts: LogLevelContext[] = []\n\n  /**\n   * Parse out directives like LOG=ExifTag:debug,FileIterator:info,warn\n   */\n  constructor(readonly setting: StringSetting = Settings.logLevel) {\n    setting.watch(() => this.#setup.refresh())\n  }\n\n  readonly #setup = lazy(() => {\n    this.contexts.length = 0\n    const logLevel = this.setting.valueOrDefault\n    this.defaultLevelIndex =\n      LogLevels.indexOf(logLevel) ??\n      LogLevels.indexOf(this.setting.defaultValue) ??\n      LogLevels.indexOf(LogLevels.warn)!\n    const arr = compactBlanks(logLevel.split(/[,;]/))\n    for (const ea of arr) {\n      const match = LogLevelRe.exec(ea.trim())\n      if (match == null) {\n        console.error(\"LogFilterImpl: Ignoring '\" + ea + \"' from \" + logLevel)\n      } else {\n        const prefix = toS(match[1]).toLowerCase()\n        const idx = levelIndex(match[2])\n        if (blank(prefix)) {\n          this.defaultLevelIndex = idx\n        } else {\n          this.contexts.push({ prefix, levelIndex: idx })\n        }\n      }\n    }\n  })\n\n  private contextOverride(context?: string): Maybe<LogLevelContext> {\n    if (context == null || this.contexts.length === 0 || blank(context)) return\n    const s = toS(context).toLowerCase()\n    return this.contexts.find(ea => s.startsWith(ea.prefix))\n  }\n\n  enabled(level: LogLevel, context?: string): boolean {\n    if (this.silent) return false\n    const li = levelIndex(level)\n\n    // PERF: unrolled from Opt\n    if (context != null) {\n      const co = this.contextOverride(context)\n      if (co != null) {\n        return li <= co.levelIndex\n      }\n    }\n    return li <= this.defaultLevelIndex\n  }\n\n  highlight(context: string): boolean {\n    // PERF: unrolled from Opt\n    const co = this.contextOverride(context)\n    return co != null && co.levelIndex >= this.defaultLevelIndex\n  }\n}\n","import { secondMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte } from \"../../fe/Number\"\nimport { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\n/**\n * These are driven by the `console` API\n */\nexport const LogLevels = strEnum(\n  \"fatal\",\n  \"error\",\n  \"warn\",\n  \"info\",\n  \"debug\",\n  \"trace\"\n)\nexport type LogLevel = StrEnumKeys<typeof LogLevels>\n\nconst TraceLevelIndex = LogLevels.indexOf(\"trace\")!\n\nexport function levelIndex(logLevel: string): number {\n  return (\n    LogLevels.indexOf(logLevel) ??\n    LogLevels.indexOf(logLevel.trim().toLowerCase()) ??\n    TraceLevelIndex\n  )\n}\n\nexport function levelGte(lhs: LogLevel | string, rhs: LogLevel | string) {\n  return gte(LogLevels.indexOf(lhs), LogLevels.indexOf(rhs))\n}\n\n// https://en.wikipedia.org/wiki/Syslog#Severity_level\nconst LogLevel2SyslogLevel = new Map<LogLevel, number>([\n  [LogLevels.fatal, 1],\n  [LogLevels.error, 3],\n  [LogLevels.warn, 4],\n  [LogLevels.info, 6],\n  [LogLevels.debug, 7]\n])\n\nexport function level2syslog(logLevel: string): Maybe<number> {\n  return LogLevel2SyslogLevel.get(logLevel as any)\n}\n\nexport function msTolevel(\n  elapsedMs: number,\n  errorMs: number = 7 * secondMs\n): LogLevel {\n  return elapsedMs >= errorMs\n    ? \"error\"\n    : elapsedMs >= errorMs / 2\n    ? \"warn\"\n    : elapsedMs >= errorMs / 4\n    ? \"info\"\n    : \"debug\"\n}\n","import { inspect } from \"util\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { keys } from \"../../fe/Object\"\nimport { isPromiseLike } from \"../../fe/Promise\"\nimport { ellipsize, isString } from \"../../fe/String\"\nimport { isError } from \"../../fe/isError\"\nimport { diff } from \"../Array\"\nimport { mapNullEntries } from \"../Object\"\nimport { errorToVerbose } from \"../error/Error\"\nimport { Settings } from \"../settings/Settings\"\nexport const PromisePlaceholder = \"(promise)\"\n\n/**\n * Prepare a log entry's `meta` for serialization\n */\nexport function prepMeta(meta: any, levels = 4): any {\n  if (meta == null) {\n    return null // <- util.inspect removes `undefined` object key/value pairs\n  }\n  if (levels < 0) return \"…\"\n  // If it's a primitive, we're done:\n  if (isString(meta) || Buffer.isBuffer(meta)) {\n    return ellipsize(meta.toString(), 256, 32)\n  }\n  if (isError(meta)) {\n    return errorToVerbose(meta)\n  }\n  if (Array.isArray(meta)) {\n    const limit = Settings.logContextLimit.valueOrDefault\n    const len = Math.floor(limit / 2)\n    return meta.length <= limit\n      ? meta\n      : [\n          ...meta.slice(0, len).map(ea => prepMeta(ea, levels - 1)),\n          `… (${meta.length} total entries)`,\n          ...meta.slice(-len).map(ea => prepMeta(ea, levels - 1))\n        ]\n  }\n  // lazy() returns a function!\n  if (typeof meta === \"object\" || typeof meta === \"function\") {\n    for (const meth of [\"toLogJSON\", \"toJSON\", inspect.custom]) {\n      if (typeof meta[meth] === \"function\") {\n        return prepMeta(meta[meth](), levels - 1)\n      }\n    }\n    if (isPromiseLike(meta)) {\n      // Deferred and Latch already have a toLogJSON, so meta must not be\n      // something from us.\n      return PromisePlaceholder\n    }\n\n    // Have we already truncated this object?\n    if (\"…\" in meta) return meta\n\n    const result = mapNullEntries(\n      meta,\n      (_, v) => prepMeta(v, levels - 1),\n      Settings.logContextLimit.valueOrDefault\n    )\n\n    const omittedKeys = diff(keys(meta), keys(result))\n    if (isNotEmpty(omittedKeys)) {\n      result[\"…\"] = \"omitted: \" + ellipsize(omittedKeys.join(\", \"), 128, 32)\n    }\n    return result\n  }\n\n  // Otherwise give up:\n  return meta\n}\n","import { FSWatcher, watch } from \"fs\"\nimport { join, sep } from \"path\"\nimport { pid, stdout } from \"process\"\nimport { clearInterval, setInterval } from \"timers\"\nimport { lazy } from \"../../core/Lazy\"\nimport { notBlank, notBlankOr } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte } from \"../../fe/Primitive\"\nimport { thenMap } from \"../../fe/Promise\"\nimport { isTest } from \"../NodeEnv\"\nimport { serviceName } from \"../ServiceNames\"\nimport { consoleError, consoleLog } from \"../Stdout\"\nimport { stdoutEnded } from \"../StdoutEnded\"\nimport { TTLSet } from \"../TTLSet\"\nimport { EndableRanks, ending } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { Promises } from \"../async/Promises\"\nimport { nowish } from \"../date/Date\"\nimport { errorToS } from \"../error/Error\"\nimport { DirectoryEntry } from \"../fs/DirectoryEntry\"\nimport { mkdirp_ } from \"../fs/Path\"\nimport { Settings } from \"../settings/Settings\"\nimport { readSystemSettings } from \"../settings/SettingsIO\"\nimport { DefaultLogFormatter } from \"./DefaultLogFormatter\"\nimport { DefaultLogFlushMs } from \"./LogCommon\"\nimport { datedLogDir } from \"./LogDir\"\nimport { LogEntry } from \"./LogEntry\"\nimport { ifLog } from \"./LogFilter\"\nimport { LogLevels } from \"./LogLevel\"\nimport {\n  popExpiredLogEntries,\n  pushLogEntries,\n  setLogTailEnabled\n} from \"./LogTailEntries\"\nimport { readLogEntries } from \"./ReadLogEntries\"\n\nexport function DefaultLogEntryWriter(arr: LogEntry[]) {\n  const f = DefaultLogFormatter()\n  for (const ea of arr) {\n    consoleLog(f.formatLogEntry(ea))\n  }\n}\n\n/**\n * Tail all PhotoStructure✱/log/✱✱/✱.log files.\n */\nexport class LogTail extends EndableWrapper {\n  static readonly instance = lazy(() => {\n    return stdoutEnded() ? undefined : new LogTail()\n  })\n  private root!: DirectoryEntry\n  private watchers: Map<string, FSWatcher> = new Map()\n  private flushTimeout?: NodeJS.Timeout\n  private scanTimeout?: NodeJS.Timeout\n  private ignorableFilename: string\n  private readonly filenameMutexes = new Promises(\"log.LogTail\", () => 8)\n\n  private readonly file2pos = new Map<string, number>()\n  private readonly lastReadFiles = new TTLSet<string>(5 * secondMs)\n\n  constructor(\n    readonly rootNativePath: Maybe<string> = undefined,\n    readonly writer = DefaultLogEntryWriter\n  ) {\n    super(\"LogTail\", () => this.close(), EndableRanks.logtail)\n    this.ignorableFilename = sep + serviceName() + \"-\" + pid + \"-\"\n    if (stdout.writableFinished) return\n\n    setLogTailEnabled(true)\n    // Not an unref'ed interval, so logtail doesn't exit:\n    this.flushTimeout = setInterval(() => this.flush(), DefaultLogFlushMs / 2)\n    this.scanTimeout = setInterval(() => this.scan(), minuteMs)\n    stdout.on(\"end\", () => this.end())\n    void this.setup()\n  }\n\n  readonly setup = lazy(async () => {\n    await readSystemSettings()\n    const logdir = notBlankOr(\n      this.rootNativePath,\n      Settings.logDir.valueOrDefault\n    )\n    if (isTest) consoleLog(\"tailing \" + logdir + \"...\")\n    await mkdirp_(logdir)\n    this.root = (await DirectoryEntry.for(logdir))!\n    await this.scan(true)\n  })\n\n  async flush() {\n    this.writer(popExpiredLogEntries())\n  }\n\n  private readable(nativePath: string) {\n    return (\n      // Don't tail .gz files: they're never updated.\n      nativePath.endsWith(\".log\") &&\n      !nativePath.includes(this.ignorableFilename)\n    )\n  }\n\n  private watchDir(dir: string) {\n    if (ending() || this.ended) return\n    getOrSet(this.watchers, dir, () => {\n      ifLog(LogLevels.debug, () => consoleLog(\"LogTail(): watching \" + dir))\n      try {\n        return watch(dir, (event: string, filename: string | null) => {\n          if (notBlank(filename)) {\n            void this.watchListener(event, join(dir, filename))\n          }\n        })\n      } catch (err) {\n        ifLog(LogLevels.warn, () =>\n          consoleError(\"LogTail(): failed to read \" + dir, err)\n        )\n        return\n      }\n    })\n  }\n\n  async scan(firstTime = false) {\n    if (ending() || this.ended) return\n    // scan through logs and set the position for all current entries:\n    await this.root.visitDescendants(async ea => {\n      if (!this.readable(ea.nativePath)) return\n      if (firstTime) {\n        await thenMap(ea.size(), size => this.file2pos.set(ea.nativePath, size))\n      }\n      if (nowish(await ea.mtimeMs(), 5 * minuteMs)) {\n        this.watchDir(ea.dir)\n      }\n    })\n    if (ending() || this.ended) return\n    const currentLogDir = datedLogDir(this.root.nativePath)\n    try {\n      // if they start logtail before anything else, we want to see those new\n      // files:\n      await mkdirp_(currentLogDir)\n      this.watchDir(currentLogDir)\n    } catch (err) {\n      ifLog(LogLevels.warn, () =>\n        consoleError(\n          \"LogTail(): Failed to list or mkdir -p \" +\n            currentLogDir +\n            \": there may be permission issues.\",\n          err\n        )\n      )\n    }\n    if (ending() || this.ended) return\n    if (firstTime) {\n      consoleLog(\"LogTail(): Tailing \" + this.root + \"/**/*.log...\")\n    }\n  }\n\n  private async close() {\n    setLogTailEnabled(false)\n    map(this.flushTimeout, clearInterval)\n    this.flushTimeout = undefined\n    map(this.scanTimeout, clearInterval)\n    this.scanTimeout = undefined\n    for (const ea of this.watchers.values()) {\n      ea.close()\n    }\n    this.watchers.clear()\n    for (const ea of this.lastReadFiles) {\n      await this.watchListener(\"onEnd\", ea)\n    }\n    try {\n      this.writer(popExpiredLogEntries(-1))\n    } catch (error) {\n      console.warn(\"failed to flush last log entries\", error)\n    }\n  }\n\n  private async watchListener(event: string, filename: string) {\n    if (!this.readable(filename) || event === \"rename\") {\n      return\n    }\n    await this.filenameMutexes.serial(filename, async () => {\n      try {\n        const f = await DirectoryEntry.for(filename)\n        if (f == null) {\n          // file was deleted or compressed. DON'T FREAK OUT.\n          return\n        }\n        // if (!nowish(await f.mtimeMs(), 10 * minuteMs)) return // old file\n        const currentSize = await f.size()\n        if (currentSize == null || currentSize <= 0) {\n          // consoleError(\"watchListener: empty file\", { event, filename })\n          return\n        }\n        const priorSize = this.file2pos.get(f.nativePath) ?? 0\n        if (gte(priorSize, currentSize)) return\n        await thenMap(\n          readLogEntries(f, { start: priorSize, end: currentSize }),\n          arr => pushLogEntries(...arr)\n        )\n        this.lastReadFiles.add(f.nativePath)\n        // If gzip reading fails, don't update current size:\n        this.file2pos.set(f.nativePath, currentSize)\n      } catch (err) {\n        ifLog(LogLevels.warn, () =>\n          consoleError(\"Failed to read \" + filename + \": \" + errorToS(err))\n        )\n      }\n    })\n    return\n  }\n}\n","import { SortedSet } from \"../SortedSet\"\nimport { stdoutEnded } from \"../StdoutEnded\"\nimport { DefaultLogFormatter } from \"./DefaultLogFormatter\"\nimport { DefaultLogFlushMs } from \"./LogCommon\"\nimport { LogEntry, logEntrySorter } from \"./LogEntry\"\n\n// Separated from LogTail to break dependency loops\n\nlet _logTailEnabled = false\n\nexport function logTailEnabled() {\n  return _logTailEnabled\n}\n\nexport function setLogTailEnabled(b: boolean) {\n  _logTailEnabled = b\n}\n\nexport const logEntries = new SortedSet<LogEntry>(logEntrySorter)\n\n// WTH, AMIRITE? ConsoleLogger calls this method. If we're not tailing logs,\n// we don't need to order our log entries correctly, and can just console.log\n// immediately.\n\nexport function pushLogEntries(...arr: LogEntry[]) {\n  // PERF: for loop instead of .forEach\n  for (const ea of arr) {\n    // don't use Settings.logTail:\n    if (_logTailEnabled) {\n      logEntries.add(ea)\n    } else {\n      // if stdout is closed, don't try to write to it!\n      if (!stdoutEnded()) {\n        console.log(DefaultLogFormatter().formatLogEntry(ea))\n      }\n    }\n  }\n}\n\n/**\n * @param ttl if zero, pop everything (we're shutting down)\n */\nexport function popExpiredLogEntries(ttl = DefaultLogFlushMs * 2) {\n  return logEntries.shiftLte(Date.now() - ttl)\n}\n","import _fs from \"fs\"\nimport { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { nextMidnightTs, secondMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { Thunk } from \"../../fe/Thunk\"\nimport { RateLimited, rateLimited } from \"../RateLimited\"\nimport { processName } from \"../ServiceNames\"\nimport { stripAnsiEsc } from \"../String\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableInterval } from \"../async/EndableInterval\"\nimport { ensureNewNativePath_ } from \"../fs/EnsureNew\"\nimport { gzip_ } from \"../fs/Gzip\"\nimport { endStream } from \"../fs/Streams\"\nimport { Settings } from \"../settings/Settings\"\nimport { ConsoleLogger } from \"./ConsoleLogger\"\nimport { DefaultLogFlushMs } from \"./LogCommon\"\nimport { datedLogDir } from \"./LogDir\"\nimport { LogEntry } from \"./LogEntry\"\nimport { LogFilter, logFilter } from \"./LogFilter\"\nimport { ContextProvider } from \"./LogFormatter\"\nimport { LogLevel } from \"./LogLevel\"\nimport { prepMeta } from \"./LogMeta\"\nimport { SimpleLogger } from \"./Logger\"\nimport { clearRecentLogEntries, recentLogEntries } from \"./RecentLogs\"\n\nexport class CaptureLogger implements SimpleLogger {\n  readonly logEntries: LogEntry[] = []\n  log(level: LogLevel, context: string, message: string, meta?: any) {\n    this.logEntries.push({\n      ts: Date.now(),\n      l: level,\n      ctx: context,\n      msg: message,\n      meta\n    })\n  }\n\n  enabled() {\n    return true\n  }\n\n  end() {\n    // no-op\n  }\n\n  async flush() {\n    // no-op\n  }\n}\n\nexport interface LogWriterOptions extends ContextProvider {\n  maxLinesPerFile: number\n  errorLogger: SimpleLogger\n  flushEveryMs: number\n  logFilter?: Thunk<LogFilter>\n}\n\ninterface Logfile {\n  stream: NodeJS.WritableStream\n  nativePath: string\n}\n\nfunction defaultLogWriterOptions(): Required<LogWriterOptions> {\n  return {\n    maxLinesPerFile: 250000, // ~ 10-20 Mb\n    errorLogger: ConsoleLogger.instance(),\n    flushEveryMs: DefaultLogFlushMs,\n    processName: processName,\n    logFilter: logFilter\n  }\n}\n\n/**\n * Writes to logDir/YYYY-MM-DD/name-00N.log\n */\nexport class LogWriter extends EndableInterval implements SimpleLogger {\n  private readonly logOpts: Required<LogWriterOptions>\n  private readonly pendingWrites: LogEntry[] = []\n  private _linesSinceRotate: number = 0\n  private _nextForcedRotateTs = nextMidnightTs()\n  private _logfile: Maybe<Logfile>\n\n  readonly flush: RateLimited<void>\n\n  private _startIndex = 0\n\n  // gzipping the logfiles should not take longer than 10 seconds (assuming logs\n  // are on fast local disk)\n  readonly endTimeoutMs = 15 * secondMs\n\n  constructor(\n    readonly logDir: string,\n    options: Partial<LogWriterOptions> = {}\n  ) {\n    super({\n      name: \"LogWriter(\" + logDir + \")\",\n      callback: () => this.flush(),\n      intervalMs: Math.round(options.flushEveryMs ?? DefaultLogFlushMs * 1.25),\n      rank: EndableRanks.logger\n    })\n    this.logOpts = {\n      ...defaultLogWriterOptions(),\n      ...options\n    }\n    this.onEnds.push(() => this.#end())\n    this.setIntervalMs(this.logOpts.flushEveryMs)\n\n    this.flush = rateLimited({\n      name: \"LogWriter.flush()\",\n      minCallDelayMs: this.logOpts.flushEveryMs,\n      f: () => this.#flush()\n    })\n  }\n\n  toJSON() {\n    return {\n      _ctor: \"LogWriter\",\n      logDir: this.logDir\n    }\n  }\n\n  enabled(level: LogLevel, context?: string): boolean {\n    return this.logOpts.logFilter().enabled(level, context)\n  }\n\n  log(level: LogLevel, context: string, msg: string, meta?: any) {\n    if (this.enabled(level, context)) {\n      if (this.ended && level === \"error\") {\n        // If it's bad, send the message someplace, at least.\n        this.logOpts.errorLogger.log(level, context, msg, meta)\n      } else {\n        const entry: LogEntry = { ts: Date.now(), l: level, ctx: context, msg }\n        if (meta != null) entry.meta = prepMeta(meta)\n        if (level === \"error\") {\n          // If we push entry before this, the recentLogEntries show out of order:\n          this.writeRecentLogEntries()\n        }\n        this.pendingWrites.push(entry)\n      }\n    }\n  }\n\n  // must not be async (so this.log can stay sync)\n  writeRecentLogEntries() {\n    this.pendingWrites.push(...recentLogEntries())\n    // we don't want to write these entries more than once:\n    clearRecentLogEntries()\n  }\n\n  readonly #end = lazy(async () => {\n    await this.flush.force()\n    return this.#closeCurrent()\n  })\n\n  shouldRotate() {\n    return (\n      this._logfile == null ||\n      this._linesSinceRotate >= this.logOpts.maxLinesPerFile ||\n      Date.now() >= this._nextForcedRotateTs\n    )\n  }\n\n  async #flush() {\n    const toFlush = [...this.pendingWrites]\n    this.pendingWrites.length = 0\n    while (toFlush.length > 0) {\n      if (this.shouldRotate()) await this.#rotate()\n      const stream = this._logfile?.stream\n      if (stream == null) {\n        this.logOpts.errorLogger.log(\n          \"error\",\n          \"LogWriter.flush()\",\n          \"this._rotate() returned an empty stream\"\n        )\n        return\n      }\n      const remainingCapacity = clamp(\n        0,\n        toFlush.length,\n        this.logOpts.maxLinesPerFile - this._linesSinceRotate\n      )\n\n      const lines = toFlush.splice(0, remainingCapacity)\n\n      this._linesSinceRotate += lines.length\n      stream.write(lines.map(ea => stringify(ea) + \"\\n\").join(\"\"))\n    }\n    return\n  }\n\n  #onError(source: string, error: any) {\n    this.logOpts.errorLogger.log(\"error\", \"Caught error from \" + source, error)\n  }\n\n  #errback(source: string) {\n    return (error: any) => {\n      this.#onError(source, error)\n      return this.#closeCurrent()\n    }\n  }\n\n  // Must only be called by this._flush()\n  async #rotate(): Promise<void> {\n    await this.#closeCurrent()\n    const name = stripAnsiEsc(this.logOpts.processName())\n    const nativePath = await ensureNewNativePath_({\n      nativePath: join(datedLogDir(this.logDir), name + \".log\"),\n      emptyIsNew: true,\n      startIndex: ++this._startIndex,\n      requireNumber: true,\n      leftPad: 3 // we're in trouble if we're writing more than 100 log files a day.\n    })\n    const stream = _fs\n      .createWriteStream(nativePath)\n      .on(\"error\", this.#errback(\"file write stream\"))\n    this._logfile = { stream, nativePath }\n    this._nextForcedRotateTs = nextMidnightTs()\n  }\n\n  async #closeCurrent() {\n    // not this.end(), because we don't want to flush:\n    const prior = this._logfile\n    this._logfile = undefined\n    this._linesSinceRotate = 0\n\n    if (prior != null) {\n      try {\n        await endStream(prior.stream)\n        if (Settings.logCompression.valueOrDefault) {\n          // let logtail see the result of the file:\n          await delay(this.logOpts.flushEveryMs)\n          await gzip_(prior.nativePath)\n        }\n      } catch (err) {\n        this.#onError(\"_closeCurrent()\", err)\n      }\n    }\n  }\n}\n","import { inspect, InspectOptions } from \"util\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { fromEntries } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport { processName } from \"../ServiceNames\"\nimport { rightPad, stripAnsiEsc } from \"../String\"\nimport { LogEntry } from \"./LogEntry\"\nimport { LogFormatter } from \"./LogFormatter\"\nimport { LogLevel, LogLevels } from \"./LogLevel\"\n\nexport class PlaintextLogFormatter implements LogFormatter {\n  constructor(\n    readonly inspectOptions: InspectOptions = {\n      colors: false,\n      depth: 4,\n      compact: true,\n      customInspect: true\n    }\n  ) {}\n\n  readonly paddedLogLevels = fromEntries(\n    LogLevels.values.map(ea => [ea, rightPad(ea, 5, \" \")])\n  )\n\n  formatLogEntry(le: LogEntry): string {\n    return compactBlanks([\n      new Date(le.ts).toISOString(),\n      le.from ?? processName(),\n      this.paddedLogLevels[le.l],\n      stripAnsiEsc(le.ctx),\n      stripAnsiEsc(le.msg),\n      map(le.meta, ea => inspect(ea, this.inspectOptions))\n    ])\n      .map(ea => toS(ea))\n      .join(\" \")\n  }\n\n  format(\n    level: LogLevel,\n    context: string,\n    message: string,\n    meta?: any\n  ): string {\n    return this.formatLogEntry({\n      ts: Date.now(),\n      l: level,\n      from: processName(),\n      ctx: context,\n      msg: message,\n      meta\n    })\n  }\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { stripCopySuffixFromName } from \"../fs/FuzzyNames\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { zcat } from \"../fs/zcat\"\nimport { LogEntry, isLogEntry } from \"./LogEntry\"\n\nexport async function readLogEntries(\n  f: SimpleFile,\n  options?: { start?: number; end?: number }\n): PromiseMaybe<LogEntry[]> {\n  const from = stripCopySuffixFromName(f.name)\n  const result: LogEntry[] = []\n  const buf = await zcat(f.nativePath, options)\n  if (buf != null) {\n    for (const line of splitLines(buf)) {\n      const le = chunkToLogEntry(line)\n      if (le != null) result.push({ ...le, from })\n    }\n  }\n  return result\n}\n\nexport function chunkToLogEntry(chunk: any): Maybe<LogEntry> {\n  if (blank(chunk)) return\n  try {\n    const le = JSON.parse(chunk)\n    return isLogEntry(le) ? le : undefined\n  } catch (error) {\n    return\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { fromEntries, values } from \"../../fe/Object\"\nimport { BoundedList } from \"../BoundedList\"\nimport { LogEntry } from \"./LogEntry\"\nimport { LogLevel, LogLevels } from \"./LogLevel\"\n\nexport const SentLogLevels = lazy(() =>\n  LogLevels.values.filter(ea => ea !== LogLevels.trace)\n)\n\nconst MaxPerLevel = 48\n\n// https://github.com/Microsoft/TypeScript/issues/24220#issuecomment-449325451\ntype Level2Recent = { [l in LogLevel]: BoundedList<LogEntry> }\n\n/**\n * These are log entries that were *not* written to the log file (but will be\n * interesting if we want to \"send recent logs\".\n *\n * They are flushed to the logfile by log.error or by calling\n * writeRecentLogEntries()\n */\nconst recentLogEntriesByLevel = lazy<Level2Recent>(() =>\n  fromEntries(\n    SentLogLevels().map(ea => [ea, new BoundedList<LogEntry>(MaxPerLevel)])\n  )\n)\n\nexport function clearRecentLogEntries() {\n  values(recentLogEntriesByLevel()).forEach(ea => ea.clear())\n}\n\nexport function addRecentLogEntry(le: LogEntry) {\n  recentLogEntriesByLevel()[le.l]?.push(le)\n}\n\nexport function recentLogEntries() {\n  const arr: LogEntry[] = []\n  for (const bl of values(recentLogEntriesByLevel())) {\n    arr.push(...bl.toA())\n  }\n  return sortBy(arr, ea => ea.ts)\n}\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { map } from \"../../fe/Maybe\"\nimport { setColorEnabled } from \"../Chalk\"\nimport { rootLoggers } from \"../Logger\"\nimport { end } from \"../async/Endable\"\nimport { cacheDir } from \"../dir/CacheDir\"\nimport { logDir } from \"../dir/LogDir\"\nimport { env } from \"../env/Env\"\nimport { isEnvTrue } from \"../env/GetEnv\"\nimport { writeTextfile_ } from \"../fs/WriteFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { ColoredLogFormatter } from \"./ColoredLogFormatter\"\nimport { ConsoleLogger } from \"./ConsoleLogger\"\nimport { currentFileLogger } from \"./CurrentFileLogger\"\nimport { DefaultLogFormatter } from \"./DefaultLogFormatter\"\nimport { logBroadcaster } from \"./LogBroadcaster\"\nimport { defaultLogLevel, logFilter } from \"./LogFilter\"\nimport { LogFilterImpl } from \"./LogFilterImpl\"\nimport { LogTail } from \"./LogTail\"\nimport { LogWriter } from \"./LogWriter\"\nimport { SimpleLogger } from \"./Logger\"\nimport { PlaintextLogFormatter } from \"./PlaintextLogFormatter\"\n\nconst readme = `PhotoStructure writes logfiles to this directory.\n\nAlthough you _can_ directly read these .json files, you don't need to!\n\nUse PhotoStructure's \"logcat\" and \"logtail\" tools to merge and pretty-print these files.\n\nSee https://photostructure.com/server/tools/#logging for details.\n`\n\nexport const setupLogger = lazy(() => {\n  if (!(logFilter() instanceof LogFilterImpl)) {\n    logFilter.set(new LogFilterImpl())\n  }\n  setupLogFormatter()\n\n  const dir = logDir()\n  let fl = currentFileLogger()\n  if (fl == null || fl.logDir !== dir) {\n    void end(fl)\n    void writeTextfile_(join(dir, \"README.txt\"), readme).catch(() => null)\n    fl = new LogWriter(dir)\n  }\n  const loggers: SimpleLogger[] = [fl]\n  const pushConsoleLogger =\n    isEnvTrue(\"logStdout\") ||\n    Settings.logStdout.valueOrDefault ||\n    Settings.tailLogs.valueOrDefault\n\n  if (pushConsoleLogger) {\n    loggers.push(ConsoleLogger.instance())\n  }\n  map(logBroadcaster(), ea => loggers.push(ea))\n\n  rootLoggers.set(loggers)\n\n  if (Settings.tailLogs.valueOrDefault) {\n    LogTail.instance()\n  }\n\n  Settings.logLevel.watchLater(() => defaultLogLevel.unset())\n\n  setColorEnabled(Settings.logColor.valueOrDefault)\n\n  // make sure cacheDir() is set up for FileCache():\n  cacheDir()\n\n  // After we're done, then watch for later changes:\n  watchSettings()\n})\n\nexport const setupLogFormatter = lazy(() => {\n  const current = DefaultLogFormatter()\n  const currentIsColored = current instanceof ColoredLogFormatter\n  const settingIsColored =\n    env().NO_COLOR == null && Settings.logColor.valueOrDefault\n  if (currentIsColored !== settingIsColored) {\n    DefaultLogFormatter.set(\n      settingIsColored ? new ColoredLogFormatter() : new PlaintextLogFormatter()\n    )\n  }\n})\n\nconst watchSettings = lazy(() => {\n  // watch later, because this is called by setupLogger() already...\n  Settings.logStdout.watchLater(() => setupLogger.refresh())\n  Settings.logDir.watchLater(() => setupLogger.refresh())\n  Settings.tailLogs.watchLater(() => setupLogger.refresh())\n  Settings.logColor.watchLater(() => setupLogFormatter.refresh())\n})\n","import { inspect } from \"util\"\nimport { mapNotEmpty } from \"../../fe/Array\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isNumber, sigFigs } from \"../../fe/Number\"\nimport { tap } from \"../../fe/Object\"\nimport { toA } from \"../../fe/toA\"\nimport { zip } from \"../Array\"\nimport { BoundedList } from \"../BoundedList\"\nimport { CountingSet } from \"../CountingSet\"\nimport { mapGte0f } from \"../Number\"\nimport {\n  MaybeNumericList,\n  avg,\n  max,\n  min,\n  slope,\n  stdDev,\n  variance,\n  weightedAvg\n} from \"./Vector\"\n\nexport interface AverageStats {\n  k: number\n  mean?: number\n  mode?: number\n  sd?: number\n  max?: number\n  min?: number\n  sum?: number\n}\n\nexport function averageStats(vec: number[]) {\n  return new Average().pushAll(vec).stats()\n}\n\nexport class Average {\n  static merge(a: Average, b: Average): Average {\n    if (a.n === 0 && b.n === 0) {\n      return new Average(Math.max(a.maxSamples, b.maxSamples))\n    } else if (a.n === 0) {\n      return b.clone()\n    } else if (b.n === 0) {\n      return a.clone()\n    } else if (a.n <= a.maxSamples) {\n      const r = b.clone()\n      r.pushAll(a.samples)\n      return r\n    } else if (b.n <= b.maxSamples) {\n      const r = a.clone()\n      r.pushAll(b.samples)\n      return r\n    } else {\n      const r = new Average(Math.max(a.maxSamples, b.maxSamples))\n      r._n = a.n + b.n\n      r._min = Math.min(a._min!, b._min!)\n      r._max = Math.max(a._max!, b._max!)\n      r._m = (a._m! * a.n) / r.n + (b._m! * b.n) / r.n\n      r._s = (a._s! * a.n) / r.n + (b._s! * b.n) / r.n\n      const samples = flatten(zip(a.samples, b.samples))\n      r._samples.push(...samples)\n      r._weightedTotalAvg = weightedAvg([r._m, ...samples])\n      return r\n    }\n  }\n\n  protected _n: number\n  protected _min?: number\n  protected _max?: number\n  protected _m?: number\n  protected _s?: number\n  protected _weightedTotalAvg?: number\n  protected readonly _samples: BoundedList<number>\n\n  constructor(readonly maxSamples: number = 20) {\n    this._n = 0\n    this._samples = new BoundedList(maxSamples)\n  }\n\n  [inspect.custom]() {\n    return this.stats()\n  }\n\n  toJSON() {\n    return {\n      _ctor: \"Average\",\n      n: this._n,\n      _m: this._m,\n      _s: this._s,\n      min: this._min,\n      max: this._max,\n      samples: this._samples.toA()\n    }\n  }\n\n  static fromJSON(obj: ReturnType<Average[\"toJSON\"]>) {\n    return new Average().with(obj)\n  }\n\n  with(obj: ReturnType<Average[\"toJSON\"]>) {\n    this._n = obj.n\n    this._min = obj.min\n    this._max = obj.max\n    this._m = obj._m\n    this._s = obj._s\n    this._samples.push(...toA(obj.samples))\n  }\n\n  merge(b: Maybe<Average>) {\n    if (b == null || b.n === 0) return this\n    if (this.n === 0) return this.with(b.toJSON())\n    this._min = min([this._min, b.min])\n    this._max = max([this._max, b.max])\n    const n = this.n + b.n\n    this._m = (this._m! * this.n) / n + (b._m! * b.n) / n\n    this._s = (this._s! * this.n) / n + (b._s! * b.n) / n\n    this._n += b._n\n    this._samples.push(...toA(b.samples))\n    return this\n  }\n\n  push(x: number): number {\n    if (!isFinite(x)) throw new Error(\"Average.push(\" + x + \"): not a number\")\n    this._n++\n    this._samples.push(x)\n    this._min = this._min == null ? x : Math.min(x, this._min)\n    this._max = this._max == null ? x : Math.max(x, this._max)\n\n    // https://math.stackexchange.com/a/116344\n    // https://www.johndcook.com/blog/standard_deviation/\n    if (\n      this._n === 1 ||\n      this._m == null ||\n      this._s == null ||\n      this._weightedTotalAvg == null\n    ) {\n      this._m = x\n      this._s = 0\n      this._weightedTotalAvg = x\n    } else {\n      const priorM = this._m\n      this._m += (x - priorM) / this._n\n      // CAUTION: this isn't correct variation: it's a streaming estimation.\n      this._s += ((x - this._m) * (x - this._m) - this._s!) / this._n\n      this._weightedTotalAvg = (this._weightedTotalAvg + x) / 2\n    }\n    return x\n  }\n\n  clone(): Average {\n    return tap(new Average(this.maxSamples), ea => {\n      ea._n = this._n\n      ea._m = this._m\n      ea._s = this._s\n      ea._min = this._min\n      ea._max = this._max\n      ea._weightedTotalAvg = this._weightedTotalAvg\n      ea._samples.push(...this._samples)\n    })\n  }\n\n  pushAll(arr: MaybeNumericList): this {\n    if (arr != null) {\n      for (const ea of arr) {\n        if (isNumber(ea)) this.push(ea)\n      }\n    }\n    return this\n  }\n\n  stats(sigfigs = 2): AverageStats {\n    const sf = (i?: number) =>\n      map(i, (ea: number) => (ea > 100 ? Math.round(ea) : sigFigs(ea, sigfigs)))\n    const o: AverageStats = {} as any\n    o.k = sf(this.n)!\n    if (!this.empty) {\n      o.mean = sf(this.avg)\n      o.sum = sf(this.sum)\n      // o.mode = sf(this.sampleMode)\n      o.sd = sf(this.stdDev)\n      o.max = sf(this.max)\n      o.min = sf(this.min)\n    }\n    return o\n  }\n\n  get empty(): boolean {\n    return this._n === 0\n  }\n\n  /**\n   * @return the total number of samples provided to `push()`\n   */\n  get n(): number {\n    return this._n\n  }\n\n  get avg(): Maybe<number> {\n    return this.empty ? undefined : sigFigs(this._m!, 4)\n  }\n\n  get sum(): number {\n    return this._n > 0 ? this._m! * this._n : 0\n  }\n\n  get max(): Maybe<number> {\n    return this._max\n  }\n\n  get min(): Maybe<number> {\n    return this._min\n  }\n\n  get last(): Maybe<number> {\n    return this._samples.last\n  }\n\n  #p(sigmasFromMean: number) {\n    return mapGte0f(this.avg, mu =>\n      mapGte0f(this.stdDev, sigma => sigFigs(mu + sigma * sigmasFromMean, 4))\n    )\n  }\n\n  // https://www.desmos.com/calculator/s2ybihaqjup\n\n  /**\n   * @return mean - 1 SD\n   */\n  get p16(): Maybe<number> {\n    return this.#p(-1)\n  }\n\n  get p29(): Maybe<number> {\n    return this.#p(-0.5)\n  }\n\n  get p38(): Maybe<number> {\n    return this.#p(-0.25)\n  }\n\n  /**\n   * @return mean + 1 SD\n   * @see https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule\n   */\n  get p84(): Maybe<number> {\n    return this.#p(1)\n  }\n\n  /**\n   * 97.5% = 50% + (95% / 2)\n   * @return mean + 1 SD\n   * @see https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule\n   */\n  get p98(): Maybe<number> {\n    return this.#p(2)\n  }\n\n  /**\n   * 99.86% = 50% + (99.73% / 2)\n   * @return mean + 1 SD\n   * @see https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule\n   */\n  get p99(): Maybe<number> {\n    return this.#p(3)\n  }\n\n  /**\n   * @return streaming estimation of variance\n   */\n  get variance(): Maybe<number> {\n    return this._s\n  }\n\n  /**\n   * @return streaming estimation of stdev\n   */\n  get stdDev(): Maybe<number> {\n    const v = this.variance\n    return v == null ? undefined : Math.sqrt(v)\n  }\n\n  get sampleMode(): Maybe<number> {\n    return this.sampleModes(1)?.[0]\n  }\n\n  sampleModes(n: number): Maybe<number[]> {\n    if (this.empty) return\n    const c = new CountingSet<number>()\n    this._samples.forEach(ea => c.incr(ea))\n    return c.topKeys(n)\n  }\n\n  get sampleVariance(): Maybe<number> {\n    return mapNotEmpty(this._samples, variance)\n  }\n\n  get sampleStdDev(): Maybe<number> {\n    return mapNotEmpty(this._samples, stdDev)\n  }\n\n  get sampleAvg(): Maybe<number> {\n    return mapNotEmpty(this._samples, avg)\n  }\n\n  get sampleSlope(): number {\n    return orElse(mapNotEmpty(this._samples, slope), 0)\n  }\n\n  get samples(): number[] {\n    return [...this._samples]\n  }\n\n  /**\n   * weighted average of the last `sampleCount` values\n   */\n  get weightedSampleAvg(): Maybe<number> {\n    return map(weightedAvg(this._samples), ea => sigFigs(ea, 4))\n  }\n\n  /**\n   * weighted average of all values\n   */\n  get weightedTotalAvg(): Maybe<number> {\n    return this._weightedTotalAvg\n  }\n\n  clear(): void {\n    this._n = 0\n    this._m = undefined\n    this._s = undefined\n    this._weightedTotalAvg = 0\n    this._samples.length = 0\n  }\n}\n","import { sum } from \"../../fe/Array\"\nimport { map2 } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { absdiff, clamp, times, toInt } from \"../../fe/Number\"\nimport { randomInt } from \"../../fe/Random\"\nimport { zip } from \"../Array\"\nimport { BitZipDimension } from \"./BitZipDimension\"\nimport { avg } from \"./Vector\"\n\nexport interface Dimension {\n  min: number\n  max: number\n}\nexport interface ValuedDimension extends Dimension {\n  value: number\n}\n\nexport interface BitMixArgs {\n  dims: ValuedDimension[]\n  bitDepth: number\n}\n\nexport function concatBits(arr: number[], bitsPerValue: number): number {\n  const max = Math.pow(2, bitsPerValue)\n  return arr.reduce(\n    (acc, i) => acc * max + clamp(0, max, toInt(i, { defaultValue: 0 })!),\n    0\n  )\n}\n\nexport function splitBits(n: number, bitsPerValue: number): number[] {\n  const max = Math.pow(2, bitsPerValue)\n  const result: number[] = []\n  while (n > 0) {\n    result.unshift(n % max)\n    n = Math.floor(n / max)\n  }\n  return result\n}\n\nexport function diffConcattedBits(\n  a: Maybe<number>,\n  b: Maybe<number>,\n  bitsPerValue: number\n): Maybe<number> {\n  return map2(a, b, (ea1, ea2) =>\n    sum(\n      zip(splitBits(ea1, bitsPerValue), splitBits(ea2, bitsPerValue)),\n      ([i, j]) => absdiff(i, j)!\n    )\n  )\n}\n\nexport class BitZip {\n  constructor(readonly dims: BitZipDimension[]) {}\n\n  clampValue(arr: number[]): number[] {\n    return arr.map((ea, i) => clamp(this.dims[i].min, this.dims[i].max, ea))\n  }\n\n  randomValue() {\n    return this.dims.map(dim => randomInt(dim.min, dim.max))\n  }\n\n  zipMin(bitDepth: number): number {\n    return this.zip(\n      this.dims.map(ea => ea.min),\n      bitDepth\n    )\n  }\n\n  zipMax(bitDepth: number): number {\n    return this.zip(\n      this.dims.map(ea => ea.max),\n      bitDepth\n    )\n  }\n\n  zip(value: number[], bitDepth: number) {\n    // We clone these because we change them as we process bits.\n    const min = this.dims.map(d => d.min)\n    const max = this.dims.map(d => d.max)\n    const clamped = this.clampValue(value)\n\n    let result = 0\n\n    for (let bit = 0; bit < bitDepth; bit++) {\n      // shift left, but this may be > 32 bits, so we can't use << operator,\n      // YAY JAVASCRIPT\n      result *= 2\n\n      const dimIndex = bit % min.length\n      const mid = (min[dimIndex] + max[dimIndex]) / 2\n      if (clamped[dimIndex] > mid) {\n        result += 1 // < no bit twiddling, we may be > 32 bits!\n        min[dimIndex] = mid\n      } else {\n        max[dimIndex] = mid\n      }\n    }\n    return result\n  }\n\n  unzip(n: number, bitDepth: number) {\n    const min = this.dims.map(d => d.min)\n    const max = this.dims.map(d => d.max)\n    for (let bit = 0; bit < bitDepth; bit++) {\n      const dIdx = bit % min.length\n      const mid = (min[dIdx] + max[dIdx]) / 2\n      if (isBitSet(n, bitDepth - bit - 1)) min[dIdx] = mid\n      else max[dIdx] = mid\n    }\n    return times(min.length, i => (min[i] + max[i]) / 2)\n  }\n}\n\nconst BitShiftMax = Math.pow(2, 32) - 1\n\nexport function isBitSet(n: number, bit: number, disableBitshifting?: boolean) {\n  if (disableBitshifting !== true && n < BitShiftMax && bit < 32) {\n    return ((n >> bit) & 1) === 1\n  } else {\n    return 1 === Math.floor(n / Math.pow(2, bit)) % 2\n  }\n}\n\nexport function bitZip(a: BitMixArgs): number {\n  a.dims.forEach(dim => (dim.value = clamp(dim.min, dim.max, dim.value)))\n\n  let result = 0\n\n  for (let bit = 0; bit < a.bitDepth; bit++) {\n    result *= 2 // < no bit twiddling, we may be > 32 bits!\n    const dIdx = bit % a.dims.length\n    const d = a.dims[dIdx]\n    const mid = avg([d.min, d.max])!\n    if (d.value > mid) {\n      result += 1 // < no bit twiddling, we may be > 32 bits!\n      d.min = mid\n    } else {\n      d.max = mid\n    }\n  }\n  return result\n}\n\nexport interface BitUnmixArgs {\n  dims: Dimension[]\n  bitDepth: number\n}\n\nexport function bitUnzip(n: number, a: BitUnmixArgs): Maybe<number[]> {\n  if (a.bitDepth > 52 || a.bitDepth < 0) return\n  const setBits = bitsSetBig(n)\n  for (let bit = 0; bit < a.bitDepth; bit++) {\n    const dIdx = bit % a.dims.length\n    const d = a.dims[dIdx]\n    const mid = avg([d.min, d.max])!\n    if (setBits.includes(a.bitDepth - bit - 1)) {\n      d.min = mid\n    } else {\n      d.max = mid\n    }\n  }\n  return a.dims.map(d => avg([d.min, d.max])!)\n}\n\n// Supports > 32 bit numbers\nexport function bitsSetBig(n: number): number[] {\n  return [...n.toString(2)]\n    .reverse()\n    .map((ea, idx) => (ea === \"1\" ? idx : -1))\n    .filter(ea => ea !== -1)\n}\n\n/**\n * Number of set bits in `x`\n * @see https://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer#109117\n */\nexport function pop(x: number): number {\n  x = x - ((x >> 1) & 0x55555555)\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333)\n  x = (x + (x >> 4)) & 0x0f0f0f0f\n  x = x + (x >> 8)\n  x = x + (x >> 16)\n  return x & 0x0000003f\n}\n\nexport function bits<T>(arr: T[], f: (t: T, index: number) => boolean): number {\n  return sum(arr, (ea, index) =>\n    f(ea, index) ? Math.pow(2, arr.length - index - 1) : 0\n  )\n}\n","import { sortBy } from \"../../fe/ArraySort\"\n\nconst ml_kmeans = require(\"ml-kmeans\")\n\nexport interface KMeansOptions {\n  maxIterations: number\n  tolerance: number\n  withIterations: boolean\n  distanceFunction: (a: number[], b: number[]) => number\n  seed: number\n  initialization: \"kmeans++\" | \"random\" | \"mostDistant\" | number[][]\n  description?: string\n  id?: string\n}\n\nexport interface Centroid {\n  centroid: number[]\n  error?: number\n  size: number\n}\n\nexport interface KMeansResult {\n  clusters: number[][]\n  centroids: Centroid[]\n  iterations: number\n  converged: boolean\n}\n\nexport function kmeans(\n  data: number[][],\n  k: number,\n  options?: Partial<KMeansOptions>\n): KMeansResult {\n  const result: KMeansResult = ml_kmeans(data, k, options)\n  return {\n    ...result,\n    centroids: sortBy(\n      result.centroids.filter(ea => ea.size > 0),\n      ea => -ea.size\n    )\n  }\n}\n\n// When ml-kmeans v6.0+ works:\n\n// import { kmeans as ml_kmeans } from \"ml-kmeans\"\n\n// export function kmeans(\n//   data: number[][],\n//   k: number,\n//   options?: Partial<KMeansOptions>\n// ): KMeansResult {\n//   const result = ml_kmeans(data, k, options ?? {})\n//   const info = result.computeInformation(data)\n//   return {\n//     ...result,\n//     centroids: sortBy(\n//       info.filter(ea => ea.size > 0),\n//       ea => -ea.size\n//     )\n//   }\n// }\n","import { sortBy } from \"../../fe/ArraySort\"\n\nexport function lerp(v0: number, v1: number, t = 0.5): number {\n  // See https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\n  return (1 - t) * v0 + t * v1\n}\n\nexport interface Point {\n  x: number\n  y: number\n}\n\n/**\n * @return y for the given x, given the line defined p0 and p1\n */\nexport function lerp2d(x: number, ...arr: Point[]): number {\n  const nearest2 = sortBy(arr, ea => Math.abs(x - ea.x)).slice(0, 2)\n  const [p0, p1] = sortBy(nearest2, ea => ea.x)\n\n  const dx = p1.x - p0.x\n  const xdx = x - p0.x\n  const t = xdx / dx\n  return lerp(p0.y, p1.y, t)\n}\n\nexport function lerp2d_(x: number, p0: Point, p1: Point): number {\n  // https://en.wikipedia.org/wiki/Linear_interpolation\n  return (p0.y * (p1.x - x) + p1.y * (x - p0.x)) / (p1.x - p0.x)\n}\n","import { range, stepRange } from \"../../fe/Array\"\nimport { mapFinite } from \"../../fe/Number\"\nimport { concat, greatestIndex, leastIndex } from \"../Array\"\nimport { Average } from \"./Average\"\nimport { mode, sumf } from \"./Vector\"\n\nexport function vecXvec(a: number[], b: number[]): number[] {\n  return a.map((v, idx) => v * b[idx])\n}\n\nexport function matXvec(matrix: number[][], vector: number[]): number[] {\n  return matrix.map((row, rowIdx) => {\n    if (row.length !== vector.length) {\n      throw new Error(\"misshaped matrix on row \" + rowIdx)\n    }\n    return sumf(row, (col, colIdx) => col * vector[colIdx])\n  })\n}\n\nexport interface Index2d {\n  col: number\n  row: number\n}\n\n/**\n * @param to is exclusive, like slice\n */\nexport function slice(m: number[][], from: Index2d, to: Index2d): number[][] {\n  const rowFrom = Math.max(0, from.row)\n  const rowTo = Math.min(m.length, to.row) // range is exclusive\n  const colFrom = Math.max(0, from.col)\n  const colTo = Math.min(m[0].length, to.col)\n  return range(rowFrom, rowTo, row => m[row].slice(colFrom, colTo))\n}\n\nexport function index1D(dim: Index2d, row: number, col: number) {\n  return row * dim.col + col\n}\n\n/**\n * Returns the index values for a 1d matrix that correspond with the given\n * from and to.\n * @param dim holds the number of rows and columns in the 2d matrix\n * @param from inclusive\n * @param to exclusive\n */\nexport function submatrixForEach(\n  dim: Index2d,\n  from: Index2d,\n  to: Index2d,\n  f: (i: number) => any\n): void {\n  const rowFrom = Math.floor(Math.max(0, from.row))\n  const rowTo = Math.ceil(Math.min(dim.row, to.row)) // range is exclusive\n  const colFrom = Math.floor(Math.max(0, from.col))\n  const colTo = Math.ceil(Math.min(dim.col, to.col))\n  for (let row = rowFrom; row < rowTo; row++) {\n    for (let col = colFrom; col < colTo; col++) {\n      f(row * dim.col + col)\n    }\n  }\n}\n\nexport function submatrixMagnitude(\n  m: number[],\n  dim: Index2d,\n  from: Index2d,\n  to: Index2d\n): number {\n  let agg = 0\n  submatrixForEach(dim, from, to, i => mapFinite(m[i], v => (agg += v * v)))\n  return Math.sqrt(agg)\n}\n\nexport function submatrixStdDev(\n  m: number[],\n  dim: Index2d,\n  from: Index2d,\n  to: Index2d\n): number {\n  const a = new Average()\n  submatrixForEach(dim, from, to, i => mapFinite(m[i], v => a.push(v)))\n  return a.stdDev!\n}\n\nexport function submatrixMode(\n  m: number[],\n  dim: Index2d,\n  from: Index2d,\n  to: Index2d\n): number {\n  const arr: number[] = []\n  submatrixForEach(dim, from, to, i => mapFinite(m[i], v => arr.push(v)))\n  return mode(arr)!\n}\n\n/**\n * Returns the quarter submatrix with the largest magnitude, in quadrant order:\n *\n * 1 | 0\n * - + -\n * 2 | 3\n */\nexport function leastMagQuarter(m: number[], dim: Index2d): number {\n  const c = dim.col\n  const r = dim.row\n  const quarterMagnitudes = [\n    submatrixMagnitude(m, dim, { col: c / 2, row: 0 }, { col: c, row: r / 2 }),\n    submatrixMagnitude(m, dim, { col: 0, row: 0 }, { col: c / 2, row: r / 2 }),\n    submatrixMagnitude(m, dim, { col: 0, row: r / 2 }, { col: c / 2, row: r }),\n    submatrixMagnitude(m, dim, { col: c / 2, row: r / 2 }, { col: c, row: r })\n  ]\n  return leastIndex(quarterMagnitudes)\n}\n\nexport function leastVariantQuarter(m: number[], dim: Index2d): number {\n  const c = dim.col\n  const r = dim.row\n  return leastIndex([\n    submatrixStdDev(m, dim, { col: c / 2, row: 0 }, { col: c, row: r / 2 }),\n    submatrixStdDev(m, dim, { col: 0, row: 0 }, { col: c / 2, row: r / 2 }),\n    submatrixStdDev(m, dim, { col: 0, row: r / 2 }, { col: c / 2, row: r }),\n    submatrixStdDev(m, dim, { col: c / 2, row: r / 2 }, { col: c, row: r })\n  ])\n}\n\n/**\n * Returns the quarter submatrix with the largest magnitude, in quadrant order:\n *\n *   0\n * 1 + 3\n *   2\n */\nexport function greatestHalf(m: number[], dim: Index2d): number {\n  const c = dim.col\n  const r = dim.row\n  const quarterMagnitudes = [\n    submatrixMode(m, dim, { col: 0, row: 0 }, { col: c, row: r / 2 }),\n    submatrixMode(m, dim, { col: 0, row: 0 }, { col: c / 2, row: r }),\n    submatrixMode(m, dim, { col: 0, row: r / 2 }, { col: c, row: r }),\n    submatrixMode(m, dim, { col: c / 2, row: 0 }, { col: c, row: r })\n  ]\n  return greatestIndex(quarterMagnitudes)\n}\n\nexport function submatrixCollect(\n  dim: Index2d,\n  from: Index2d,\n  to: Index2d\n): number[] {\n  const r: number[] = []\n  submatrixForEach(dim, from, to, i => r.push(i))\n  return r\n}\n\n/**\n * Reduce to dimXdim matrix, using the mode of surrounding values in the\n * matrix\n */\nexport function modeReduce(\n  m: number[],\n  fromDim: Index2d,\n  toDim: Index2d\n): number[] {\n  const colDelta = Math.floor(fromDim.col / toDim.col)\n  const rowDelta = Math.floor(fromDim.row / toDim.row)\n  const avg = new Average(Math.ceil(colDelta * rowDelta))\n  return concat(\n    ...stepRange(0, fromDim.row, rowDelta, rowStart =>\n      stepRange(0, fromDim.col, colDelta, colStart => {\n        avg.clear()\n        const from = { col: colStart, row: rowStart }\n        const to = { col: colStart + colDelta, row: rowStart + rowDelta }\n        submatrixForEach(fromDim, from, to, i =>\n          mapFinite(m[i], ea => avg.push(ea))\n        )\n        return avg.sampleMode\n      })\n    )\n  )\n}\n","import { sortBy } from \"../../fe/ArraySort\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { sigFigs } from \"../../fe/Number\"\nimport { PrimeBins, PrimesPerBin, SeedCount } from \"../../fe/PRNG\"\nimport { numericSha } from \"../fs/Hash\"\nimport { memoize } from \"../MemoizedFunc\"\nimport { encodeDigits } from \"./Radix\"\n\n// TODO: This whole thing is SITS, because we should be able to just give the\n// random function in SQLite a seed\n\n// but we can't\n\n// because everything is terrible\n\n// The score for a given row is (ax^2 + bx)(cx + d)\n\n// X^2 is required for reasonable diff distribution between X_ks.\n\n// Related: https://en.wikipedia.org/wiki/Linear_congruential_generator\n\nexport function prngOrderByClause(\n  seed: number,\n  idColumn: string,\n  max: number\n): string {\n  const [a, b, c, d, e] = factors(seed)\n  const x = idColumn\n  const i = `(${a}*${x}*${x}+${b}*${x})%${max}`\n  const j = `(${c}*${x}+${d})%${max}`\n  return `((${i})*(${j})+${e})%${max}`\n}\n\nexport function prng(seed: number, x: number, max: number): number {\n  const [a, b, c, d, e] = factors(seed)\n  const y1 = (a * x * x + b * x) % max\n  const y2 = (c * x + d) % max\n  return Math.round((y1 * y2 + e) % max)\n}\n\n// https://primes.utm.edu/curios/index.php?start=5&stop=5\nexport const primes = [\n  [353868013, 472882027, 479001599, 517294153],\n  [1012573, 1230587, 1355297, 1572751],\n  [756065159, 812182027, 899809343, 989450477],\n  [3959297, 4514113, 4823201, 5133127],\n  [573259391, 666101999, 694847533, 746151647],\n  [2275327, 2770513, 3073703, 3511973],\n  [173313197, 182557181, 203457869, 222230231],\n  [6054613, 6189107, 7752103, 9852103]\n]\n\n// 20200902: Adding a static intercept didn't help the quality of the PRNG.\n\nexport const primeInt = [\n  1012573, 1101689, 1183811, 1196089, 1230587, 1355297, 1419641, 1483733,\n  1572751, 2275327, 2770513, 3010349, 3073703, 3118691, 3174823, 3511973,\n  3959297, 4514113, 4690451, 4823201, 5133127, 5375327, 6019889, 6054613,\n  6189107, 7752103, 7752103, 9852103\n]\n\nexport function primeSeeds(seed: number): number[] {\n  const indexes = encodeDigits(PrimesPerBin, seed, PrimeBins)\n  return indexes.map((ea, idx) => primes[idx][ea])\n}\n\nexport const factors = memoize(\n  (seed: number) => {\n    const [a, b, c, d, e, f, g, h] = primeSeeds(seed % SeedCount)\n    const result = [a / b, c / d, e / f, g / h].map(ea => sigFigs(ea, 7))\n    result.push(primeInt[seed % primeInt.length])\n    return result\n  },\n  { maxSize: 128, ttlMs: minuteMs }\n)\n\nexport function stableIndexShuffle<T>(arr: T[], seed = 1): T[] {\n  return sortBy(arr, (_, idx) => prng(seed, idx, arr.length))\n}\n\nexport function stableContentShuffle<T>(arr: T[], seed = 1): T[] {\n  return sortBy(arr, ea => numericSha(String(ea) + seed))\n}\n","import { randomBytes } from \"crypto\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { identity } from \"../Object\"\nimport { splitEvery } from \"../String\"\n\nconst zero: any = BigInt(0)\n\nexport function encodeDigits(base: number, i: number, minLength = 0): number[] {\n  if (!isFinite(i) || base <= 1) return []\n\n  const digits: number[] = []\n  if (i === 0) {\n    digits.unshift(0)\n  } else {\n    while (i > 0) {\n      digits.unshift(i % base)\n      i = Math.floor(i / base)\n    }\n  }\n  while (digits.length < minLength) digits.unshift(0)\n  return digits\n}\n\nexport class Radix {\n  readonly base: number\n  constructor(\n    readonly name: string,\n    readonly numerals: string,\n    readonly decodePreparser: (s: string) => string = identity\n  ) {\n    this.base = numerals.length\n  }\n\n  private digitsToNumerals(digits: number[]): string {\n    return digits.map(d => this.numerals[d]).join(\"\")\n  }\n\n  encode(num: number, minLength: number = 0): string {\n    if (!isFinite(num)) return \"\"\n    // r is a reversed array of chars:\n    const negate = num < 0\n    if (negate) {\n      num = Math.abs(num)\n      minLength-- // accommodate the sign\n    }\n    return (\n      (negate ? \"-\" : \"\") +\n      this.digitsToNumerals(encodeDigits(this.base, num, minLength))\n    )\n  }\n\n  encodeBigInt(bi: bigint): string {\n    if (typeof bi !== \"bigint\") throw new Error(\"bad input\")\n    if (bi === zero) return this.numerals[0]\n\n    const digits: number[] = []\n    const b = BigInt(this.base)\n    let i: any = bi\n\n    while (i > zero) {\n      digits.push(Number(i % b))\n      i = i / b\n    }\n    return this.digitsToNumerals(digits.reverse())\n  }\n\n  encodeBuffer(buf: Buffer): string {\n    if (buf == null || buf.length === 0) return \"\"\n    const digits = [0]\n    for (let b of buf) {\n      digits.forEach((d, i) => {\n        // const b0 = b\n        b += d << 8\n        digits[i] = b % this.base\n        b = Math.floor(b / this.base)\n        // console.dir({ i, b0, b, d0: d, d: digits[i], digits })\n      })\n\n      while (b > 0) {\n        digits.push(b % this.base)\n        b = Math.floor(b / this.base)\n        // console.dir({ b, digits })\n      }\n    }\n    return this.digitsToNumerals(digits.reverse())\n  }\n\n  decode(s: Maybe<string>): Maybe<number> {\n    return map(this.decodeBigInt(s), ea => {\n      if (ea > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\"decode(\" + s + \") is > 2^53\")\n      } else {\n        return Number(ea)\n      }\n    })\n  }\n\n  normalize(s: string): string {\n    return this.decodePreparser(s)\n  }\n\n  decodeBigInt(s: Maybe<string>): Maybe<bigint> {\n    if (s == null || blank(s)) return\n    s = isFunction(this.decodePreparser) ? this.decodePreparser(s) : s\n    const negate = s[0] === \"-\"\n    if (negate) {\n      s = s.slice(1)\n    }\n    const b = BigInt(this.base)\n    let acc = BigInt(0)\n    for (const ch of s) {\n      const idx = this.numerals.indexOf(ch)\n      if (idx < 0) {\n        return undefined\n      }\n      acc = acc * b + BigInt(idx)\n    }\n    return negate ? BigInt(-1) * acc : acc\n  }\n\n  randomChars(length: number): string {\n    // bits per char is Math.log2(this.base).\n    // we need bpc * length / 8 = random bytes.\n    const s = this.encodeBuffer(\n      randomBytes(Math.ceil((Math.log2(this.base) * (length + 4)) / 8))\n    )\n    return s.slice(2, 2 + length)\n  }\n\n  /**\n   * UIDs are easier to parse or read if dashes break up the string.\n   *\n   * Reading 4-char groups is comfortable, 5 chars \"won-aye-six-gee-why\" is\n   * doable, I think, so split every 5?\n   *\n   * For GeoRadix, each char encodes 5 bits, so 20 chars is only 100 bits of\n   * entropy. 24 chars is 120. We need 32 chars for 160 bits, that's a lot.\n   */\n  randomUid(chars = 20, splitEveryN = 5, sepChar = \"-\"): string {\n    return splitEvery(this.randomChars(chars), splitEveryN).join(sepChar)\n  }\n\n  tokenEql(a: string, b: string, minLen: number): boolean {\n    const an = this.normalizeToken(a)\n    const bn = this.normalizeToken(b)\n    return an.length >= minLen && an === bn\n  }\n\n  normalizeToken(a: string) {\n    return [...this.decodePreparser(a.trim())]\n      .filter(ea => this.numerals.includes(ea))\n      .join(\"\")\n  }\n}\n\nexport const Hex = new Radix(\"hex\", \"0123456789abcdef\", s => s.toLowerCase())\n\n/**\n * URL-safe charset used for bitcoin and IPFS hashes\n * @see https://en.wikipedia.org/wiki/Base58\n */\nexport const Radix58 = new Radix(\n  \"Radix58\",\n  \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n)\n\n/**\n * CAUTION! This doesn't do standard base64 padding!\n * @see b64.ts\n */\nexport const Base64 = new Radix(\n  \"Radix64\",\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n)\n\n/**\n * Used by StringSimilarity.radixDiff\n */\nexport const RadixAlphaNum = new Radix(\n  \"RadixAlphaNum\",\n  \"0123456789abcdefghijklmnopqrstuvwxyz\",\n  s => s.toLowerCase()\n)\n\n/**\n * Base 32 charset for case-insensitive filesystems and human consumption\n * @see https://en.wikipedia.org/wiki/Geohash\n */\nexport const GeoRadix = new Radix(\n  \"GeoRadix\",\n  \"0123456789bcdefghjkmnpqrstuvwxyz\", // y no a?\n  s => s.toLowerCase()\n)\n\n/**\n * Base 32 charset for case-insensitive filesystems and human consumption.\n *\n * Similar glyphs include 0O, 1lI, 2z, 5S, 9g\n */\nexport const TokenRadix = new Radix(\n  \"TokenRadix\",\n  \"0123456789abcdefhjkmnpqrtuvwxy\",\n  s =>\n    s\n      .toLowerCase()\n      .replace(/o/g, \"0\")\n      .replace(/[il]/g, \"1\")\n      .replace(/z/g, \"2\")\n      .replace(/s/g, \"5\")\n      .replace(/g/g, \"9\")\n)\n\nexport const AlphaRadix = new Radix(\n  \"AlphaRadix\",\n  \"abcdefghjkmnopqrtuvwxyz\",\n  s =>\n    s\n      .toLowerCase()\n      .replace(/0/g, \"o\")\n      .replace(/2/g, \"z\")\n      .replace(/5/g, \"s\")\n      .replace(/9/g, \"g\")\n)\n\nexport const NumericRadix = new Radix(\"NumericRadix\", \"0123456789\", s =>\n  s\n    .toLowerCase()\n    .replace(/o/g, \"0\")\n    .replace(/[il]/g, \"1\")\n    .replace(/z/g, \"2\")\n    .replace(/s/g, \"5\")\n    .replace(/g/g, \"9\")\n)\n","import { Rate } from \"batch-cluster\"\n\nexport function rateStats(r: Rate) {\n  return {\n    eventCount: r?.eventCount,\n    eventsPerSecond: r?.eventsPerSecond,\n    msSinceLastEvent: r?.msSinceLastEvent\n  }\n}\n","import { normalizeRotation } from \"../../fe/Rotation\"\n\nexport function rotateSquareMatrix<T>(m: T[], degrees: number) {\n  const d = normalizeRotation(degrees)\n  // clone m so we don't cause side-effects:\n  return d === 0 ? m : new SquareMatrix([...m]).rotate(degrees).m\n}\n\nexport class SquareMatrix<T> {\n  readonly rows: number\n  constructor(\n    readonly m: T[],\n    readonly ary = 1\n  ) {\n    this.rows = Math.sqrt(m.length / ary)\n    if (this.rows !== Math.floor(this.rows)) {\n      throw new Error(\n        `Only square tuple matrices are supported: ${\n          this.ary === 1 ? \"\" : this.ary\n        }(${this.rows}×${this.rows}) != ${m.length}`\n      )\n    }\n  }\n\n  index(row: number, col: number) {\n    return this.ary * (col + row * this.rows)\n  }\n\n  swap(index_a: number, index_b: number) {\n    for (let i = 0; i < this.ary; i++) {\n      const n = this.m[index_a + i]\n      this.m[index_a + i] = this.m[index_b + i]\n      this.m[index_b + i] = n\n    }\n  }\n\n  transpose(): this {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = row + 1; col < this.rows; col++) {\n        this.swap(this.index(row, col), this.index(col, row))\n      }\n    }\n    return this\n  }\n\n  reverseRows(): this {\n    for (let col = 0; col < this.rows; col++) {\n      for (let row = 0; row < this.rows / 2; row++) {\n        this.swap(this.index(row, col), this.index(this.rows - 1 - row, col))\n      }\n    }\n    return this\n  }\n\n  reverseCols(): this {\n    for (let row = 0; row < this.rows; row++) {\n      for (let col = 0; col < this.rows / 2; col++) {\n        this.swap(this.index(row, col), this.index(row, this.rows - 1 - col))\n      }\n    }\n    return this\n  }\n\n  reverse(): this {\n    const l = this.rows ** 2\n    for (let i = 0; i < l / 2; i++) {\n      this.swap(i, l - 1 - i)\n    }\n    return this\n  }\n\n  rotate(degrees: number): this {\n    switch (normalizeRotation(degrees)) {\n      case 0:\n        break\n      case 90:\n        this.transpose()\n        this.reverseCols()\n        break\n      case 180:\n        this.reverse()\n        break\n      case 270:\n        this.transpose()\n        this.reverseRows()\n        break\n      default:\n        throw new Error(\"unsupported rotate(\" + degrees + \")\")\n    }\n    return this\n  }\n}\n","import { randomBytes } from \"crypto\"\nimport { decuss } from \"../words/Cuss\"\n\n/**\n * Type-4 UUID\n *\n * @see https://en.wikipedia.org/wiki/Universally_unique_identifier\n */\nexport function uuid() {\n  const b = randomBytes(16)\n\n  // Set the version bits:\n  b[6] = (b[6] & 0x0f) | 0x40\n\n  // RFC 4122 Section 3 requires that the characters be generated in lower case\n  const s = b.toString(\"hex\")\n\n  // canonical 8-4-4-4-12 format string:\n  return [\n    s.slice(0, 8),\n    s.slice(8, 12),\n    s.slice(12, 16),\n    s.slice(16, 20),\n    s.slice(20)\n  ].join(\"-\")\n}\n\n/**\n * Type-4 UUID without naughty words\n */\nexport function safeUUID(): string {\n  return decuss(uuid)\n}\n\n// only useful for tests:\nexport const UUIDRegExp = /^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/\n","import { isEmpty } from \"../../fe/Array\"\nimport { List } from \"../../fe/List\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, finiteOrElse, isNumber } from \"../../fe/Number\"\nimport { toA } from \"../../fe/toA\"\nimport { CountingSet } from \"../CountingSet\"\nimport { intersection, union } from \"../Set\"\nimport { Average } from \"./Average\"\n\nexport type NumericList =\n  | List<number>\n  | Iterable<number>\n  | number[]\n  | Float32Array\n  | Uint32Array\n  | Int32Array\n\nexport type MaybeNumericList =\n  | List<Maybe<number>>\n  | Iterable<Maybe<number>>\n  | Maybe<number>[]\n  | Float32Array\n  | Uint32Array\n  | Int32Array\n\nexport function min<T>(vec: List<Maybe<T>>): Maybe<T> {\n  let result\n  for (const ea of vec) {\n    if (ea != null) {\n      if (result == null || ea < result) {\n        result = ea\n      }\n    }\n  }\n  return result\n}\n\nexport function max<T>(vec: List<Maybe<T>>) {\n  let result\n  for (const ea of vec) {\n    if (ea != null) {\n      if (result == null || ea > result) {\n        result = ea\n      }\n    }\n  }\n  return result\n}\n\n/**\n * @return `[arr[1] - arr[0], arr[2] - arr[1], ...]`\n */\nexport function deltas(vec: NumericList): number[] {\n  const l = toA(vec)\n  if (vec == null || l.length <= 1) return []\n  return l.slice(1).map((ea, idx) => ea - l[idx])\n}\n\nexport function modes(vec: MaybeNumericList, topN: number): number[] {\n  const cs = new CountingSet<number>()\n  for (const ea of vec) {\n    if (isNumber(ea)) {\n      cs.incr(ea)\n    }\n  }\n  return cs.topKeys(topN)\n}\n\nexport function mode(vec: MaybeNumericList): Maybe<number> {\n  return modes(vec, 1)[0]\n}\n\nexport function sum(vec: MaybeNumericList | Iterable<Maybe<number>>): number {\n  let acc = 0\n  for (const ea of vec) {\n    if (isNumber(ea)) {\n      acc += ea\n    }\n  }\n  return acc\n}\n\nexport function sumf<T>(\n  iter: Iterable<Maybe<T>>,\n  f: (t: T, index: number) => Maybe<number>\n): number {\n  let index = 0\n  let acc = 0\n  for (const ea of iter) {\n    if (ea != null) {\n      const i = f(ea, index)\n      if (isNumber(i)) {\n        acc += i\n      }\n    }\n    index++\n  }\n  return acc\n}\n\nexport class Mean {\n  #idx = 0\n  #mean: Maybe<number>\n\n  push(i: Maybe<number>) {\n    if (isNumber(i)) {\n      // prevent overflow:\n      // https://math.stackexchange.com/a/116344\n      // https://www.johndcook.com/blog/standard_deviation/\n      this.#mean =\n        this.#mean == null\n          ? i\n          : (this.#mean * this.#idx) / (this.#idx + 1) + i / (this.#idx + 1)\n      this.#idx++\n    }\n  }\n\n  get mean() {\n    return this.#mean\n  }\n}\n\nexport function avg(vec: MaybeNumericList): Maybe<number> {\n  const m = new Mean()\n  for (const ea of vec) {\n    m.push(ea)\n  }\n  return m.mean\n}\n\n// export function covariance(args: {\n//   a: number[]\n//   b: number[]\n//   aMean?: number\n//   bMean?: number\n// }): Maybe<number> {\n//   if (isEmpty(args.a) || isEmpty(args.b) || args.a.length !== args.b.length)\n//     return\n//   const a_mean = args.aMean ?? avg(args.a)!\n//   const b_mean = args.bMean ?? avg(args.b)!\n//   const cov = new Mean()\n//   for (let i = 0; i < args.a.length; i++) {\n//     cov.push((args.a[i] - a_mean) * (args.b[i] - b_mean))\n//   }\n//   return cov.mean\n// }\n\n/**\n * @param strength how strong should the normalization be applied. [0,1]\n */\nexport function normalize({\n  x,\n  strength = 1,\n  normMin,\n  normMax\n}: {\n  x: number[]\n  strength?: number\n  normMin: number\n  normMax: number\n}): number[] {\n  const xMin = min(x)!\n  const xRange = max(x)! - xMin\n  const normRange = normMax - normMin\n  return x.map(\n    ea =>\n      (1 - strength) * ea +\n      strength * (normMin + (normRange * (ea - xMin)) / xRange)\n  )\n}\n\nexport function slope(vec: MaybeNumericList): Maybe<number> {\n  const l = toA(vec).filter(isNumber)\n  const x_mean = avg(l)\n  if (x_mean != null) {\n    const y_mean = (l.length - 1) / 2\n    const num = sumf(l, (x, y) => (x - x_mean) * (y - y_mean))\n    const denom = sumf(l, x => (x - x_mean) ** 2)\n    return denom === 0 ? 0 : num / denom\n  } else {\n    return\n  }\n}\n\nexport function variance(arr: MaybeNumericList): Maybe<number> {\n  const mean = avg(arr)\n  if (mean == null) return undefined\n  let acc = 0\n  let len = 0\n  for (const i of arr) {\n    if (isNumber(i)) {\n      len++\n      acc += (i - mean) * (i - mean)\n    }\n  }\n  return acc / len\n}\n\nexport function stdDev(arr: MaybeNumericList): Maybe<number> {\n  return map(variance(arr), Math.sqrt)\n}\n\nexport function p84(arr: MaybeNumericList): Maybe<number> {\n  return new Average().pushAll(arr).p84\n}\n\n/**\n * @param carryForward ratio of prior means to average with subsequent values\n */\nexport function weightedAvg(\n  arr: List<number> | Iterable<number>,\n  carryForward = 0.5\n): Maybe<number> {\n  let acc\n  carryForward = clamp(0, 1, carryForward)\n  for (const ea of arr) {\n    acc = acc == null ? ea : acc * carryForward + ea * (1 - carryForward)\n  }\n  return acc\n}\n\n// export function euclidean<T extends NumericList>(x: T, y: T): number {\n//   return Math.sqrt(\n//     toA(x).reduce((sum_, ea, idx) => sum_ + Math.pow(ea - y[idx], 2), 0)\n//   )\n// }\n\nexport function centroid(vectors: number[][]): Maybe<number>[] {\n  const len = vectors[0].length\n  const arr: Maybe<number>[] = []\n  for (let i = 0; i < len; i++) {\n    arr.push(avg(vectors.map(ea => ea[i])))\n  }\n  return arr\n}\n\n/**\n * Euclidean norm, or L2 norm, of a given vector\n * @see https://en.wikipedia.org/wiki/Norm_(mathematics)\n */\nexport function l2norm(vec: List<number>): number {\n  // PERF: no closures\n  let acc = 0\n  for (const ea of vec) {\n    acc += ea * ea\n  }\n  return Math.sqrt(acc)\n}\n\n/**\n * @see https://en.wikipedia.org/wiki/Euclidean_vector#Dot_product\n */\nexport function dot(x: number[], y: number[]): number {\n  // PERF: no closures\n  let acc = 0\n  for (let i = 0; i < x.length; i++) {\n    acc += x[i] * y[i]\n  }\n  return acc\n}\n\n/**\n * Ranges between -1 (anticorrelation) to 1 (correlation)\n * @see https://en.wikipedia.org/wiki/Cosine_similarity\n */\nexport function cosineSimilarity(x: number[], y: number[]): Maybe<number> {\n  return finiteOrElse(dot(x, y) / (l2norm(x) * l2norm(y)), undefined)\n}\n\n/**\n * Ranges between 0 (no overlap) to 1 (complete overlap)\n */\nexport function jaccard(x: number[], y: number[]): Maybe<number> {\n  return isEmpty(x) && isEmpty(y)\n    ? 0\n    : finiteOrElse(intersection(x, y).size / union(x, y).size, undefined)\n}\n","import { gunzipSync, gzipSync } from \"zlib\"\nimport { mapNotBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { hammRatioBigInt } from \"../Number\"\n\nexport function hex2b64(hex: string): string {\n  return Buffer.from(hex, \"hex\").toString(\"base64\")\n}\n\nexport function b64encode(i: number | bigint): string {\n  const hex = i.toString(16)\n  // Make sure we're padded to even characters. Buffer.from(\"\", \"hex\") IGNORES ODD LENGTHS !!!WTFOMG!?!\n  const pad = hex.length % 2 === 0 ? \"\" : \"0\"\n  return Buffer.from(pad + hex, \"hex\").toString(\"base64\")\n}\n\nexport function b64decode(base64: string): bigint {\n  return BigInt(\"0x0\" + Buffer.from(base64, \"base64\").toString(\"hex\"))\n}\n\n// use gzip rather than brotli as a head-fake to licensing\nexport function gz64encodeString(s: string): string {\n  return gzipSync(Buffer.from(s, \"utf8\")).toString(\"base64\")\n}\n\nexport function d(s: string): string {\n  return gunzipSync(Buffer.from(s, \"base64\")).toString(\"utf8\")\n}\n\nexport const gz64decodeString = d\n\n/**\n * hamm...ratio...operator\n */\nexport function b64hammRatio(\n  a: Maybe<string>,\n  b: Maybe<string>\n): Maybe<number> {\n  return mapNotBlank(a, ea1 =>\n    mapNotBlank(b, ea2 => hammRatioBigInt(b64decode(ea1), b64decode(ea2)))\n  )\n}\n\nexport function b64encodeBits(m: (0 | 1)[]): string {\n  // TODO: don't just use BigInt and Buffer, but actually do the work ourselves.\n  return b64encode(BigInt(\"0b0\" + m.map(ea => (ea === 1 ? \"1\" : \"0\")).join(\"\")))\n}\n","import _os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { stripDiacritics } from \"../String\"\nimport { Settings } from \"../settings/Settings\"\n\nexport const hostname = lazy(() => Settings.hostname.value ?? _os.hostname())\n\nlater(() => Settings.hostname.watchLater(() => hostname.unset()))\n\nexport function cleanHostname(_hostname?: Maybe<string>) {\n  if (blank(_hostname)) {\n    if (!blank(Settings.hostname.value)) return Settings.hostname.value\n  }\n  return (_hostname ?? _os.hostname())\n    .replace(/\\.local$/, \"\")\n    .replace(/-?\\d+$/, \"\")\n}\n\nexport function fsSafeHostname(_hostname = hostname()) {\n  return stripDiacritics(_hostname)\n    .replace(/[^a-z0-9-\\s]/gi, \"\")\n    .trim()\n    .replace(/\\s+/g, \"-\")\n    .toLowerCase()\n}\n","import { networkInterfaces } from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, uniq } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { values } from \"../../fe/Object\"\nimport { mkLogger } from \"../Logger\"\nimport { stripPrefix } from \"../String\"\n\nexport const myIpAddresses = lazy(\n  () =>\n    uniq(\n      compactBlanks(flatten(values(networkInterfaces())).map(ea => ea.address))\n    ),\n  minuteMs\n)\n\nexport function myExternalIpAddresses() {\n  return myIpAddresses().filter(ea => !isLoopback(ea))\n}\n\nexport function myExternalIp4Addresses() {\n  return myExternalIpAddresses().filter(ea => !ea.includes(\":\"))\n}\n\nconst logger = lazy(() => mkLogger(\"net.ip\"))\n\nconst loopbackPatterns = [\n  /^127\\.\\d{1,3}.\\d{1,3}.\\d{1,3}$/,\n  /^(?:::ffff:)?127\\.\\d{1,3}.\\d{1,3}.\\d{1,3}$/i,\n  /^::1$/\n]\n\nexport function isLoopback(address: string) {\n  return (\n    notBlank(address) && loopbackPatterns.some(re => re.exec(address) != null)\n  )\n}\n\nexport function isLocalhost(address: string) {\n  return logger().tap({\n    msg: \"isLocalhost\",\n    level: \"info\",\n    result: blank(address)\n      ? false\n      : myIpAddresses().includes(address) ||\n        myIpAddresses().includes(stripPrefix(address, \"::ffff:\")) ||\n        isLoopback(address),\n    meta: { address }\n  })\n}\n","import { promises as dns } from \"dns\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { Timeout, thenOrTimeout } from \"../../fe/ThenOrTimeout\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { within } from \"../Number\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { equalsIgnoreCase } from \"../String\"\nimport { memoizeAsync } from \"../async/MemoizedAsyncFunc\"\nimport { thenMap2Or } from \"../async/Promise\"\nimport { ee } from \"../event/EventEmitter\"\nimport { ipv4Re } from \"./ping\"\n\nconst octetRE = new RegExp(\"^\" + ipv4Re.source + \"$\")\n\n/**\n * Try to return the \"canonical\" name for the given `ipOrName`.\n */\nexport const friendlyname = memoizeAsync(\n  async (ipOrName: string) => {\n    const result =\n      octetRE.exec(ipOrName) == null ? ipOrName : await nslookup(ipOrName)\n    return toS(result).toLowerCase().normalize()\n  },\n  {\n    name: \"net.nslookup.friendlyname\",\n    maxSize: 128,\n    timeoutMs: ShortCommandTimeoutMs\n  }\n)\n\nconst loopbackRE =\n  /^(?:(?:localhost(?:\\.?(?:localdomain\\.?)?))|(?:127(?:\\.\\d{1,3}){3}))$/i\n\nexport function isLoopback(name: string): boolean {\n  return loopbackRE.exec(name) != null\n}\n\nexport function octets(nameOrIp: string): Maybe<number[]> {\n  const result: number[] = nameOrIp\n    .split(\".\")\n    .map(ea => toInt(ea))\n    .filter(ea => within(0, 255, ea)) as number[]\n  return result.length === 4 ? result : undefined\n}\n\n/**\n * @return 1 or more IPv4 addresses for the given name or IP address\n */\nexport const resolve4 = memoizeAsync(\n  async (nameOrIp: string): PromiseMaybe<string[]> => {\n    if (blank(nameOrIp)) return\n    if (octets(nameOrIp) != null) return [nameOrIp]\n    try {\n      return await dns.resolve4(nameOrIp)\n    } catch (err) {\n      logger().warn(\"No name found for \" + nameOrIp)\n      return\n    }\n  },\n  {\n    name: \"net.nslookup.resolve4\",\n    maxSize: 256,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n\nconst logger = lazy(() => mkLogger(\"net.nslookup\"))\n\nlater(() => ee().on(\"clearCache\", () => nslookup.clear()))\n\n/**\n * @return the name or IP address\n */\nexport const nslookup = memoizeAsync(\n  async (nameOrIp: string) => {\n    try {\n      const names = await thenOrTimeout(\n        isLoopback(nameOrIp)\n          ? nameOrIp.startsWith(\"127.\")\n            ? [\"localhost\"]\n            : [\"127.0.0.1\"]\n          : octets(nameOrIp) != null\n          ? dns.reverse(nameOrIp)\n          : dns.resolve4(nameOrIp),\n        5 * secondMs // < DNS resolution should be milliseconds.\n      )\n      if (names === Timeout) {\n        logger().info(\"nslookup(\" + nameOrIp + \"): timeout\")\n        return nameOrIp\n      }\n      const firstNonBlank = names.find(notBlank)\n      if (firstNonBlank == null) {\n        logger().warn(\"No name found for \" + nameOrIp)\n        return nameOrIp\n      } else {\n        return firstNonBlank\n      }\n    } catch (err) {\n      logger().warn(\"Failed to look up \" + nameOrIp + \", using name.\", err)\n      return nameOrIp\n    }\n  },\n  {\n    name: \"net.nslookup\",\n    maxSize: 256,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n\nexport async function isEquivalentHost(\n  a: Maybe<string>,\n  b: Maybe<string>\n): Promise<boolean> {\n  if (blank(a) || blank(b)) return false\n  if (equalsIgnoreCase(a, b)) return true\n  if (isLoopback(a) && isLoopback(b)) return true\n  return thenMap2Or(\n    resolve4(a),\n    resolve4(b),\n    (aAddrs, bAddrs) => aAddrs.some(ea => bAddrs.includes(ea)),\n    () => false\n  )\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { times } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { toS } from \"../../fe/toS\"\nimport { memoizeAsync } from \"../async/MemoizedAsyncFunc\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { pingWin } from \"../fs/PathTo\"\nimport { isWin } from \"../platform/Platform\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\n\nexport const ping = memoizeAsync(\n  async (target: string) => {\n    const cmd = isWin ? pingWin() : \"ping\"\n    return stdout_(cmd, [isWin ? \"-n\" : \"-c\", \"1\", target], {\n      timeoutMs: 5 * secondMs\n    })\n  },\n  {\n    name: \"net.ping\",\n    maxSize: 255,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n\nexport const ipv4Re = new RegExp(\n  \"\\\\b\" + times(4, () => \"[0-9]{1,3}\").join(\"\\\\.\") + \"\\\\b\"\n)\n\nexport const ipAddrFromPing = memoizeAsync(\n  async (target: string) => {\n    return opt(\n      await ping(target).catch(err => {\n        console.warn(\"failed to ping: \" + err)\n        return undefined\n      })\n    )\n      .filter(notBlank)\n      .flatMap(result => ipv4Re.exec(toS(result)))\n      .map(match => match[0])\n      .get()\n  },\n  {\n    name: \"net.ipAddrFromPing\",\n    maxSize: 255,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { toS } from \"../../fe/toS\"\n\n// Expect __filename to be something like\n// '/home/mrm/src/photostructure/src/core/dist/core/platform/IsPacked.js' if\n// we're not web-packed.\n\nexport const isPacked = lazy(\n  () => !toS(__filename).includes(join(\"core\", \"platform\", \"IsPacked\"))\n)\n","import os from \"os\"\nimport process from \"process\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { ELECTRON_RUN_AS_NODE } from \"../env/EnvKeys\"\n\n// THIS IS USED BY EVERYONE IN CORE, so only rely on fe code!\n\nconst _platform = os.platform()\n\nexport const inspectFlag =\n  process.argv.includes(\"--inspect\") || isTrue(process.env.NODE_INSPECT)\n\nexport const isCI = isTrue(process.env[\"CI\"])\n\nexport const isWin = _platform === \"win32\" || _platform === \"cygwin\"\nexport const isWinPortable =\n  isWin && notBlank(process.env.PORTABLE_EXECUTABLE_DIR)\n\nexport const isMac = _platform === \"darwin\"\n\nexport const isLinux = _platform === \"linux\"\nexport const isLinux_x64 = isLinux && os.arch() === \"x64\"\nexport const isArm = null != /^arm\\b/i.exec(os.arch()) // \"arm\" on RPi, \"arm64\" on M1\nexport const isLinux_arm = isLinux && isArm\nexport const isLinuxAppImage =\n  isLinux && (notBlank(process.env.APPIMAGE) || notBlank(process.env.APPDIR))\nexport const isLinuxSnap = isLinux && notBlank(process.env.SNAP_USER_DATA)\n\nexport const isPosix = isMac || isLinux\n\nexport const isMainElectron = process.versions[\"electron\"] != null\n\nexport const isElectron =\n  isMainElectron || isTrue(process.env[ELECTRON_RUN_AS_NODE])\n\n/**\n * Compatible with electron-builder:\n */\nexport type Platform = \"win\" | \"mac\" | \"linux\"\n\nexport const platformName: Platform = isWin\n  ? \"win\"\n  : isMac\n  ? \"mac\"\n  : isLinux\n  ? \"linux\"\n  : (_platform as any) // < punt\n","import { lazy } from \"../../core/Lazy\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { PS_IS_DOCKER } from \"../env/EnvKeys\"\nimport { isLinux } from \"../platform/Platform\"\n\n// HEY FUTURE ME: no need to get clever here with checking for Alpine Linux or\n// /.dockerenv. KISS.\n\n// NOTE TO THE FUTURE: we used to parse out the owner from /proc/1/cgroup but\n// that was missing from UnRAID docker containers.\n\nexport const isDocker = lazy(() => isLinux && isTrue(process.env[PS_IS_DOCKER]))\n","import fs from \"fs\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isLinux, isLinux_arm, isMac, isWin } from \"../platform/Platform\"\n\n// this works in and out of docker containers:\nexport function containsRpiModel(cpuinfoPath = \"/proc/cpuinfo\") {\n  if (isWin || isMac) return false\n  try {\n    const contents = fs.readFileSync(cpuinfoPath).toString()\n    return null != contents.match(/^\\s*model\\s*:\\s*Raspberry Pi/im)\n  } catch {\n    return false\n  }\n}\n\nexport const isRaspberryPi = lazy(() => isLinux_arm && containsRpiModel())\n\n/**\n * This seems to only be set on Raspberry PIs:\n */\nexport const procDeviceModel = lazy(() => {\n  try {\n    return isLinux\n      ? // \"Raspberry Pi 4 Model B Rev 1.1\" on pi4\n        fs.readFileSync(\"/proc/device-tree/model\").toString()\n      : undefined\n  } catch {\n    return\n  }\n})\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { stripPrefix } from \"../../fe/String\"\nimport { camel2words } from \"../StringCase\"\n\nexport function negateFilterName(s: Maybe<string>) {\n  if (blank(s)) return undefined\n  // If we have any spaces in the string, assume it's already human-friendly.\n  const w = /\\s/.test(s)\n    ? s\n    : camel2words(s).replace(/\\bphoto structure\\b/gi, \"PhotoStructure\")\n  return w.match(/^not\\b/)\n    ? w.replace(/^not\\b/, \"\").trim()\n    : \"not \" + stripPrefix(w, \"is \")\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { entries, Valued, values } from \"../../fe/Object\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { negateFilterName } from \"./PredicateNames\"\nimport { SyncPredicate } from \"./SyncPredicates\"\n\nconst _logger = lazy(() => mkLogger(\"predicates.Predicates\"))\n\nexport interface Predicate<A> {\n  (a: A): boolean | null | Promise<boolean | null>\n}\n\nexport type PredicateValued<A> = Valued<Predicate<A> | SyncPredicate<A>>\n\nexport type PredicateBundle<A> = PredicateValued<A>[]\n\nexport class Predicates {\n  static async accepted<A>(\n    a: A,\n    ...predicates: PredicateValued<A>[]\n  ): Promise<boolean> {\n    for (const obj of predicates) {\n      for (const ea of values(obj)) {\n        if (false === (await ea(a))) return false\n      }\n    }\n    return true\n  }\n\n  static async rejected<A>(\n    a: A,\n    ...predicates: PredicateBundle<A>\n  ): Promise<boolean> {\n    return !(await Predicates.accepted(a, ...predicates))\n  }\n\n  static async explain<A>(a: A, ...predicates: PredicateBundle<A>) {\n    const accepted: string[] = []\n    const rejected: string[] = []\n    const notApplicable: string[] = []\n    for (const obj of predicates) {\n      for (const [name, ea] of entries(obj)) {\n        const result = await ea(a)\n        if (result === true) {\n          accepted.push(name)\n        } else if (result === false) {\n          rejected.push(name)\n        } else {\n          notApplicable.push(name)\n        }\n      }\n    }\n    return {\n      accepted,\n      rejected,\n      notApplicable\n    }\n  }\n\n  static async whyRejected<A>(\n    a: A,\n    ...predicates: PredicateBundle<A>\n  ): Promise<string | undefined> {\n    return negateFilterName(await Predicates.firstFalse(a, ...predicates))\n  }\n\n  static async firstFalse<A>(\n    a: A,\n    ...predicates: PredicateBundle<A>\n  ): Promise<string | undefined> {\n    for (const obj of predicates) {\n      for (const [k, v] of entries(obj)) {\n        try {\n          const result = await v(a)\n          if (false === result) {\n            return k\n          }\n        } catch (error) {\n          _logger().warn(\"firstFalse() caught from \" + k, { error })\n        }\n      }\n    }\n    return\n  }\n\n  static async logged<A>({\n    a,\n    logger,\n    msg,\n    predicates\n  }: {\n    a: A\n    logger: Logger\n    msg: string\n    predicates: PredicateBundle<A>\n  }) {\n    const { accepted, rejected } = await Predicates.explain(a, ...predicates)\n    return logger.tap({\n      msg,\n      result: isEmpty(rejected),\n      meta: { a, accepted, rejected }\n    })\n  }\n}\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { entries, Valued } from \"../../fe/Object\"\nimport { negateFilterName } from \"./PredicateNames\"\n\nexport interface SyncPredicate<A> {\n  (a: A): boolean | null\n}\n\nexport type SyncPredicateBundle<A> = Valued<SyncPredicate<A>>[]\n\nexport class SyncPredicates {\n  static firstFalse<A>(\n    a: A,\n    ...predicates: SyncPredicateBundle<A>\n  ): Maybe<string> {\n    for (const obj of predicates) {\n      for (const [k, v] of entries(obj)) {\n        const result = v(a)\n        if (false === result) {\n          return k\n        }\n      }\n    }\n    return\n  }\n\n  static firstTrue<A>(\n    a: A,\n    ...predicates: SyncPredicateBundle<A>\n  ): Maybe<string> {\n    for (const obj of predicates) {\n      for (const [name, ea] of entries(obj)) {\n        if (true === ea(a)) return name\n      }\n    }\n    return\n  }\n\n  static firstDefined<A>(\n    a: A,\n    ...predicates: SyncPredicateBundle<A>\n  ): Maybe<{ name: string; result: boolean }> {\n    for (const obj of predicates) {\n      for (const [name, ea] of entries(obj)) {\n        const result = ea(a)\n        if (result != null) return { name, result }\n      }\n    }\n    return\n  }\n\n  static accepted<A>(a: A, ...predicates: SyncPredicateBundle<A>): boolean {\n    return null == SyncPredicates.firstFalse(a, ...predicates)\n  }\n\n  static whyRejected<A>(\n    a: A,\n    ...predicates: SyncPredicateBundle<A>\n  ): string | undefined {\n    return negateFilterName(SyncPredicates.firstFalse(a, ...predicates))\n  }\n}\n","import { compactBlanks } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { fmtPct } from \"../../fe/Number\"\nimport { ellipsizePath } from \"../fs/Path\"\nimport { within } from \"../Number\"\n\n// \"ProgressEvent\" is part of lib.dom. Let's not collide.\n\nexport interface ProgressEvt {\n  path?: string\n  op: string\n  pct: number\n  elapsedMs?: number\n  done?: boolean\n}\n\nexport function progressEvtToS(pe: ProgressEvt): string {\n  const path = blank(pe.path)\n    ? null\n    : ellipsizePath({ p: pe.path, maxLength: 80 })\n  return compactBlanks([\n    path,\n    pe.op,\n    pe.done === true ? \"done\" : fmtPct(pe.pct)\n  ]).join(\": \")\n}\n\nexport type ProgressEvtWithPath = ProgressEvt &\n  Required<Pick<ProgressEvt, \"path\">>\n\nexport type ProgressEvtWithoutPct = Pick<ProgressEvt, \"path\" | \"op\">\n\nexport function isProgressEvt(o: any): o is ProgressEvt {\n  return o != null && notBlank(o.op) && within(0, 100, o.pct)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte } from \"../../fe/Number\"\nimport { shim1 } from \"../Shim1\"\nimport { TTLMap } from \"../TTLMap\"\nimport { ee } from \"../event/EventEmitter\"\nimport { ProgressEvt, ProgressEvtWithPath, isProgressEvt } from \"./ProgressEvt\"\n\nexport const DefaultThrottleMs = 500\n\nexport const recentProgress = lazy(\n  () => new TTLMap<string, ProgressEvtWithPath>(15 * secondMs)\n)\n\nexport const recentDone = lazy(\n  () => new TTLMap<string, ProgressEvtWithPath>(2 * minuteMs)\n)\n\nexport function emitProgressEvt(pe: Maybe<ProgressEvt>) {\n  if (isProgressEvt(pe)) {\n    const done = true === pe.done\n    if (done) {\n      if (pe.path != null) recentDone().set(pe.path, pe as any)\n    }\n    // Throttle progress for any given file, unless it's done.\n    // Don't throttle progress without a file.\n    if (\n      done ||\n      pe.path == null ||\n      !gte(\n        recentProgress().lastSetOrGetTs(pe.path),\n        Date.now() - DefaultThrottleMs\n      )\n    ) {\n      void onProgressEvt(pe)\n      if (pe.path != null) recentProgress().set(pe.path, pe as any)\n    }\n  }\n}\n\nexport const onProgressEvt = shim1({\n  name: \"onProgressEvt\",\n  impl: async (pe: ProgressEvt) => {\n    ee().emit(\"progress\", pe)\n  }\n})\n","import { stringify } from \"../../fe/JSON\"\nimport { Maybe, MaybePromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, pct } from \"../../fe/Number\"\nimport { rateLimited } from \"../RateLimited\"\nimport { EndableRanks, ending } from \"../async/Endable\"\nimport { EndableInterval } from \"../async/EndableInterval\"\nimport { thenMap } from \"../async/Promise\"\nimport { errorToS } from \"../error/Error\"\nimport { ProgressEvt } from \"./ProgressEvt\"\nimport { DefaultThrottleMs, emitProgressEvt } from \"./ProgressObserver\"\n\nexport class PullProgressObserver extends EndableInterval {\n  private readonly start = Date.now()\n  private done?: boolean\n\n  constructor(\n    readonly ctx: Pick<ProgressEvt, \"path\" | \"op\">,\n    readonly total: number,\n    readonly progress: () => Maybe<number> | MaybePromiseMaybe<number>,\n    readonly throttleMs: number = DefaultThrottleMs\n  ) {\n    super({\n      name: \"PullProgressObserver(\" + stringify(ctx) + \")\",\n      callback: () => this.onInterval(),\n      intervalMs: throttleMs,\n      rank: EndableRanks.first\n    })\n  }\n\n  readonly onInterval = rateLimited({\n    name: \"PullProgressObserver.onInterval\",\n    f: () =>\n      ending() ? this.end() : thenMap(this.progress(), ea => this.emit(ea)),\n    minCallDelayMs: this.throttleMs\n  })\n\n  observe<T>(p: Promise<T>): Promise<T> {\n    // we throw this promise chain away:\n    p.then(\n      () => this.completed(),\n      err => {\n        this.logger.warn(\"failed: \", err)\n        this.ctx.op += \" (failed: \" + errorToS(err, { maxLen: 128 }) + \")\"\n        void this.end()\n      }\n    )\n    return p\n  }\n\n  private emit(current: Maybe<number>) {\n    if (gt0(current)) {\n      emitProgressEvt({\n        ...this.ctx,\n        pct: pct(current, this.total),\n        elapsedMs: Date.now() - this.start,\n        done: this.done\n      })\n    }\n  }\n\n  completed() {\n    this.done = true\n    if (this.ended) return\n    this.emit(this.total)\n    void this.end()\n  }\n}\n","import { gte, pct } from \"../../fe/Number\"\nimport { ProgressEvtWithoutPct } from \"./ProgressEvt\"\nimport { emitProgressEvt } from \"./ProgressObserver\"\n\nexport class PushProgressObserver {\n  private readonly start = Date.now()\n  private current?: number\n  private done?: boolean\n  constructor(\n    readonly context: ProgressEvtWithoutPct,\n    readonly total: number\n  ) {}\n\n  toJSON() {\n    return undefined // not serializable\n  }\n\n  incrProgress(incremental: number) {\n    this.onProgress(incremental + (this.current ?? 0))\n  }\n\n  onProgress(current?: number) {\n    this.current = (current ?? this.current ?? 0) + 1\n    if (gte(this.current, this.total)) this.done = true\n    this.emit()\n  }\n\n  completed() {\n    this.done = true\n    this.current = this.total\n    this.emit()\n  }\n\n  emit() {\n    emitProgressEvt({\n      ...this.context,\n      pct: pct(this.current, this.total),\n      elapsedMs: Date.now() - this.start,\n      done: this.done\n    })\n  }\n}\n","import { BatchCluster, Parser, Task } from \"batch-cluster\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank, mapNotBlankOr, notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { Obj } from \"../../fe/Object\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { BatchClusterObserver } from \"../BatchClusterObserver\"\nimport { thenElapsed } from \"../Elapsed\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { ellipsize, ensureSuffix, stripPrefix } from \"../String\"\nimport { EndableRanks, ending } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { thenMap } from \"../async/Promise\"\nimport { until } from \"../async/until\"\nimport { execFile } from \"../child/ChildProcess\"\nimport { ee } from \"../event/EventEmitter\"\nimport { isWin } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\n\nconst Done = \"{ready}\"\n\nconst ConvertToCompressedJson = \" | ConvertTo-Json -Compress\"\n\nexport type Result = { stdout: string; stderr?: string; passed: boolean }\n\nexport interface PowerShellVersion {\n  Major: number\n  Minor: number\n  Build: number\n  Revision: number\n  MajorRevision: number\n  MinorRevision: number\n}\n\nexport function pwshQuote(s: string): string {\n  const s2 = s\n    .replace(/['`\"“”#]/g, ea => \"`\" + ea)\n    .replace(/\\0/g, \"`0\")\n    .replace(/\\n/g, \"`n\")\n    .replace(/\\r/g, \"`r\")\n    .replace(/\\t/g, \"`t\")\n    .replace(/\\v/g, \"`v\")\n  return '\"' + s2 + '\"'\n}\n\nfunction versionCommand() {\n  return [\n    `function prompt {\"${Done}\"}`,\n    ...mapNotBlankOr(\n      Settings.powerShellCulture.valueOrDefault,\n      ea => [\n        `[System.Threading.Thread]::CurrentThread.CurrentCulture = '${ea}'`,\n        `[System.Threading.Thread]::CurrentThread.CurrentUICulture = '${ea}'`\n      ],\n      []\n    )\n  ].join(\";\")\n}\n\nlater(() =>\n  ee().on(\"clearCache\", () => PowerShell.instance.prior()?.clearMockResults())\n)\n\nexport class PowerShell extends EndableWrapper {\n  static ensureInstance() {\n    const prior = this.instance()\n    return prior.ended ? this.instance.refresh() : prior\n  }\n  static readonly instance = lazy(() => {\n    if (!isWin) throw new Error(\"PowerShell isn't available on this platform\")\n    return new PowerShell()\n  })\n  private readonly bco: BatchClusterObserver<BatchCluster>\n  private readonly pwsh: BatchCluster\n  private readonly mockResults = new Map<string, Result>()\n\n  // always access through PowerShell.instance():\n  private constructor() {\n    super(\"PowerShell\", () => this.bco.end(), EndableRanks.postdb)\n    this.bco = new BatchClusterObserver(\n      \"PowerShell\",\n      new BatchCluster({\n        processFactory: () =>\n          execFile(\"powershell\", Settings.powerShellArgs.values),\n        logger: () => mkLogger(\"PowerShell\"),\n        versionCommand: versionCommand(),\n        pass: Done,\n        fail: \"Error\",\n        exitCommand: \"exit\",\n        maxProcs: Settings.powerShellProcs.valueOrDefault,\n        taskTimeoutMillis: commandTimeoutMs(),\n\n        maxIdleMsPerProcess: minuteMs,\n        cleanupChildProcs: false // we do this with the Pids class.\n      }),\n      EndableRanks.postdb // last to shut down.\n    )\n    Settings.powerShellProcs.watch(() =>\n      this.bco.t.setMaxProcs(Settings.powerShellProcs.valueOrDefault)\n    )\n    this.pwsh = this.bco.t\n  }\n\n  get lastStartError() {\n    return this.bco.lastStartError\n  }\n\n  get lastTaskError() {\n    return this.bco.lastTaskError\n  }\n\n  get ended() {\n    return this.pwsh.ended\n  }\n\n  versionPojo(): PromiseMaybe<PowerShellVersion> {\n    return this.executeJson(\"$PSVersionTable.PSVersion\")\n  }\n\n  version(): PromiseMaybe<string> {\n    return thenMap(\n      this.executeJson(\"$PSVersionTable.PSVersion\"),\n      ea => `${ea.Major}.${ea.Minor}.${ea.Build}`\n    )\n  }\n\n  get spawnedProcCount() {\n    return this.pwsh.spawnedProcCount\n  }\n\n  pushMockJsonResult(cmd: string, result: Result) {\n    this.pushMockResult(ensureSuffix(cmd, ConvertToCompressedJson), result)\n  }\n\n  pushMockResult(cmd: string, result: Result) {\n    this.mockResults.set(cmd, result)\n  }\n\n  clearMockResults() {\n    this.mockResults.clear()\n  }\n\n  async execute<T>(cmd: string, parser: Parser<T>): PromiseMaybe<T> {\n    if (this.pwsh.ended || ending()) {\n      this.logger.warn(\"execute() failed (ended)\", { cmd })\n      return\n    }\n\n    if (isTest && this.mockResults.has(cmd)) {\n      const f = this.mockResults.get(cmd)!\n      return parser(f.stdout, f.stderr, f.passed)\n    }\n\n    try {\n      const r = await thenElapsed(\n        this.pwsh.enqueueTask(\n          new Task(\n            cmd,\n            (stdout: string, stderr: string | undefined, passed: boolean) =>\n              parser(map(stdout, ea => stripPrefix(ea, cmd))!, stderr, passed)\n          )\n        )\n      )\n      return this.logger.tap({\n        msg: \"execute()\",\n        result: r.result,\n        meta: {\n          elapsedMs: r.elapsedMs,\n          cmd\n        }\n      })\n    } catch (err) {\n      this.logger.warn(\"execute() failed: \" + err, { cmd })\n      return\n    }\n  }\n\n  async executeJson(cmd: string): PromiseMaybe<any> {\n    const r = await this.execute(\n      ensureSuffix(cmd, ConvertToCompressedJson),\n      (stdout, stderr, passed) => ({ stdout, stderr, passed })\n    )\n    if (r == null) {\n      this.logger.warn(\"executeJson(): null result\", { cmd })\n      return\n    }\n    if (blank(r.stdout) || notBlank(r.stderr) || !r.passed) {\n      this.logger.warn(\"executeJson(): failed result\", { cmd, ...r })\n      return\n    }\n    try {\n      return JSON.parse(r.stdout)\n    } catch (err) {\n      const fixed = r.stdout.replace(/\\\\/g, \"\\\\\\\\\")\n      this.logger.info(\n        \"executeJson(): parsing failed, trying dub-whack fix...\",\n        { before: ellipsize(r.stdout), after: ellipsize(fixed) }\n      )\n      return JSON.parse(fixed)\n    }\n  }\n\n  async executeJsonToA(cmd: string): PromiseMaybe<Obj[]> {\n    return thenMap(this.executeJson(cmd), json =>\n      Array.isArray(json) ? json : [json]\n    )\n  }\n\n  /**\n   * @return the path to the command, if it's available on the PATH\n   */\n  async which(cmd: string): PromiseMaybe<string> {\n    // Note to Future Me: `where` (Windows' version of `which`) doesn't seem to\n    // find binaries reliably, and this prevents spawning a binary (double win!)\n    const json = await this.executeJson(\n      \"Get-Command -ErrorAction SilentlyContinue \" +\n        pwshQuote(cmd) +\n        \" | Select-Object -Property Source\"\n    )\n    return Array.isArray(json) ? json[0]?.Source : json?.Source\n  }\n}\n\n/**\n * @return the PowerShell version, or undefined on unsupported platforms.\n * @throws if PowerShell times out or has issues\n */\nexport async function checkPowerShell_() {\n  if (!isWin) return\n  const ps = PowerShell.instance()\n  if (ps.ended || ending()) return\n  const version = await thenOrTimeoutError(\n    () => ps.version(),\n    commandTimeoutMs()\n  )\n  if (blank(version)) {\n    const err = await until(() => orElse(ps.lastStartError, ps.lastTaskError), {\n      timeoutMs: ShortCommandTimeoutMs,\n      intervalMs: 250\n    })\n    if (err != null) throw err\n    else throw new Error(\"(unknown error)\")\n  }\n  return version\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const AggregateTypes = strEnum(\"union\", \"intersection\")\nexport type AggregateType = StrEnumKeys<typeof AggregateTypes>\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\n// order here is the default sort order!\nexport const AssetFileSortCriteria = strEnum(\n  // more pixels are always better (this is quantized using variantSortCriteriaPower):\n  \"resolution\",\n  // prefer files in the library:\n  \"schemeIdx\",\n\n  // prefer files with a more accurate date:\n  \"capturedAtPrecision\",\n  // prefer files with more fields with metadata we care about:\n  \"metadataCoverage\",\n  // prefer files we can directly throw at the browser:\n  \"isBrowserSupported\",\n\n  // if they edit a file, we should prefer that newly edited version:\n  \"mtime\",\n\n  // If we have a burst files, prefer the \"burst cover\"\n  \"isCover\",\n\n  // If there are many copies of a file (image.jpg, image (1).jpg, image\n  // (2).jpg), prefer the one with the highest number (assuming that's the\n  // latest copy):\n  \"count\",\n\n  // help make things deterministic:\n  \"fileSize\",\n  // help make things deterministic:\n  \"basename\",\n  // help make things deterministic:\n  \"parentBasename\",\n  // just to make things deterministic:\n  \"uri\"\n)\n\nexport type AssetFileSortCriterion = StrEnumKeys<typeof AssetFileSortCriteria>\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { toBoolean } from \"../../fe/Boolean\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class BooleanSetting extends Setting<boolean> {\n  constructor(opts: SettingOpts<boolean>) {\n    super({\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toBoolean\n    })\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class BoundedFloatSetting extends Setting<number> {\n  constructor(\n    readonly options: SettingOpts<number> & { min: number; max: number }\n  ) {\n    super({\n      ...options,\n      toEnv: notBlankToS,\n      fromEnv: (value: Maybe<string>) =>\n        opt(value)\n          .flatMap(parseFloat)\n          .map(ea => clamp(options.min, options.max, ea))\n          .get()\n    })\n  }\n  addToJSON() {\n    return {\n      \"minimum value\": this.options.min,\n      \"maximum value\": this.options.max\n    }\n  }\n}\n","import { notBlank, notBlankToS } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, toInt } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class BoundedIntegerSetting extends Setting<number> {\n  constructor(\n    readonly options: SettingOpts<number> & { min: number; max: number }\n  ) {\n    super({\n      ...options,\n      toEnv: notBlankToS,\n      fromEnv: (value: Maybe<string>) =>\n        opt(value)\n          .filter(notBlank)\n          .flatMap(toInt)\n          .map(ea => clamp(options.min, options.max, ea))\n          .get()\n    })\n  }\n\n  get min(): number {\n    return this.options.min\n  }\n\n  get max(): number {\n    return this.options.max\n  }\n\n  clamp(value: Maybe<number>) {\n    return clamp(this.min, this.max, value ?? this.min)\n  }\n\n  addToJSON() {\n    return {\n      \"minimum value\": this.options.min,\n      \"maximum value\": this.options.max\n    }\n  }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const ColorDistanceFunctions = strEnum(\"cie76\", \"cie94\", \"ciede2000\")\nexport type ColorDistanceFunction = StrEnumKeys<typeof ColorDistanceFunctions>\n","export const DominantColorKmeansRunsDefault = 7\n\n// Results from running ImageHash.spec.ts with different values:\n\n// with 32 runs: (mean: 108ms, sum: 5810ms)\n// dominantColorScore { k: 60, mean: 8.1, sum: 485, sd: 1.9, max: 15, min: 4.8 }\n\n// with 16 runs: (mean: 62ms, sum: 3327ms),\n// dominantColorScore { k: 60, mean: 8.2, sum: 494, sd: 2, max: 16, min: 5 }\n\n// with 8 runs: (mean: 36ms, sum: 1958ms)\n// dominantColorScore { k: 60, mean: 8.5, sum: 510, sd: 2.1, max: 17, min: 5 }\n\n// with 7 runs: (mean: 31ms, sum: 1636ms)\n// dominantColorScore { k: 60, mean: 8.5, sum: 511, sd: 2.1, max: 16, min: 4.8 }\n\n// with 5 runs: (mean: 24ms, sum: 1165ms )\n// dominantColorScore { k: 60, mean: 8.7, sum: 519, sd: 2.2, max: 17, min: 5.1 }\n\n// with 4 runs: (mean: 23ms, sum: 1067ms)\n// dominantColorScore { k: 60, mean: 8.7, sum: 523, sd: 2.2, max: 17, min: 5.2 }\n\n// with 3 runs: (mean: 19ms, sum: 611ms)\n// dominantColorScore { k: 60, mean: 8.8, sum: 528, sd: 2.3, max: 17, min: 5.2 }\n","export const DominantColorPixelsDefault = 1024\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { decodeDuration, encodeDuration } from \"../date/DurationCodec\"\nimport { fmtFullDuration } from \"../date/DurationFormat\"\nimport { BaseSettingOpts, Setting, SettingOpts } from \"./Setting\"\n\nexport class DurationSetting extends Setting<number> {\n  constructor(opts: SettingOpts<string | number>) {\n    super({\n      ...(opts as any),\n      toEnv: encodeDuration,\n      fromEnv: decodeDuration\n    })\n  }\n\n  get valueOrDefault() {\n    // code is expecting this to be in millis.\n    return decodeDuration(super.valueOrDefault) as any\n  }\n\n  get value() {\n    // code is expecting this to be in millis.\n    return decodeDuration(super.value) as any\n  }\n\n  set value(o: any) {\n    super.userValue = decodeDuration(o)\n  }\n\n  get humanValue() {\n    return fmtFullDuration(this.value)\n  }\n\n  // the file value is the only one 8601-encoded:\n  get fileValue() {\n    return encodeDuration(super.fileValue) as any\n  }\n\n  set fileValue(o: any) {\n    super.fileValue = decodeDuration(o)\n  }\n}\n\nexport class OptionalDurationSetting extends Setting<Maybe<number>> {\n  constructor(opts: BaseSettingOpts<Maybe<string | number>>) {\n    super({\n      ...(opts as any),\n      toEnv: encodeDuration,\n      fromEnv: decodeDuration,\n      defaultValue: undefined\n    })\n  }\n\n  get valueOrDefault() {\n    return this.value ?? decodeDuration(this.defaultValue as any)!\n  }\n\n  get fileValue() {\n    return encodeDuration(super.fileValue) as any\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { toFloat } from \"../../fe/Number\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class FloatSetting extends Setting<number> {\n  constructor(opts: SettingOpts<number>) {\n    super({\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toFloat\n    })\n  }\n}\n","import { isTrue } from \"../../fe/Boolean\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { fromEntries, pick } from \"../../fe/Object\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { Settings } from \"./Settings\"\n\n// Hey, so, why don't we just use Settings.forceSync?\n\n// BECAUSE, future me, sync might be doing multiple tasks simultaneously: the\n// call stack is the only place we can ensure tasks don't pollute any other\n// concurrent tasks.\n\nconst ForceContextKeys = strEnum(\n  /**\n   * If true, ignore all short-circuiting paths if we think the file or asset\n   * is already in sync.\n   */\n  \"forceSync\",\n  /**\n   * If true, don't build previews: we'll do it later.\n   */\n  \"skipPreviews\",\n  /**\n   * If true, always rebuild previews\n   */\n  \"forceRebuildPreviews\",\n  /**\n   * If true, don't build previews: we'll do it later.\n   */\n  \"skipAssetTagging\",\n  \"recountAllTags\"\n)\nexport type ForceContextKey = StrEnumKeys<typeof ForceContextKeys>\n\nexport type ForceContext = Partial<Record<ForceContextKey, boolean>> & {\n  retries?: number\n}\n\nexport type RequiredForceContext = Required<ForceContext>\n\nexport function pickForceContext<T extends ForceContext>(o: T): ForceContext {\n  return pick(o, ...ForceContextKeys.values)\n}\n\nexport function forceContextOrSetting(\n  ctx?: Maybe<ForceContext>\n): RequiredForceContext {\n  return fromEntries(\n    ForceContextKeys.values.map(k => [\n      k,\n      // defer to Settings if ctx is undefined, but remember that not all keys\n      // are settings!\n      ctx?.[k] ?? isTrue((Settings as any)[k]?.valueOrDefault)\n    ])\n  )\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { toInt } from \"../../fe/Number\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class IntegerSetting extends Setting<number> {\n  constructor(opts: SettingOpts<number>) {\n    super({\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toInt\n    })\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { hourMs, minuteMs } from \"../../fe/Date\"\nimport { gt0 } from \"../../fe/Number\"\nimport { entries } from \"../../fe/Object\"\nimport { ensureSuffix } from \"../../fe/String\"\nimport { mkLogger } from \"../Logger\"\nimport { mapGt0 } from \"../Number\"\nimport { picturesDir } from \"../dir/PicturesDir\"\nimport { ColorDistanceFunctions } from \"./ColorDistanceFunctions\"\nimport { DominantColorKmeansRunsDefault } from \"./DominantColorKmeansRunsDefault\"\nimport { DominantColorPixelsDefault } from \"./DominantColorPixelsDefault\"\nimport { Setting } from \"./Setting\"\nimport { Settings } from \"./Settings\"\nimport { TagInferenceSettingValues } from \"./TagInferenceSettingValues\"\n\nconst logger = lazy(() => mkLogger(\"settings.MetaSettings\"))\n\nfunction getSettingValue<T extends keyof typeof Settings>(\n  name: T,\n  arr: Setting<any>[]\n): (typeof Settings)[T][\"valueOrDefault\"] {\n  return (Settings[name].value ??\n    arr.find(ea => ea.name === name)?.value ??\n    Settings[name].defaultValue) as T\n}\n\nexport function handleMetaSettings(imported: Setting<any>[]) {\n  // Yes, we actually want valueOrDefault (so if we're rpi, we're true if\n  // unset), and we don't need getSettingValue here.\n  setQuickSyncMode(Settings.quickSyncMode.valueOrDefault)\n\n  if (getSettingValue(\"disableAllFilters\", imported)) {\n    disableAllFilters()\n  }\n\n  if (getSettingValue(\"strictDeduping\", imported)) {\n    setStrictDeduping()\n  }\n\n  if (getSettingValue(\"allowFilesystemSleep\", imported)) {\n    allowFilesystemSleep()\n  }\n}\n\nexport async function handleDeprecatedSettings() {\n  {\n    //\n    // scanMyPictures\n    //\n    if (isTrue(Settings.scanMyPictures.value)) {\n      Settings.scanMyPictures.unset()\n      const newPath = await picturesDir()\n      logger().info(\"Upgrading setting scanMyPictures to scanPaths\", {\n        priorValues: Settings.scanPaths.values,\n        newPath\n      })\n      Settings.scanPaths.push(newPath)\n    }\n  }\n\n  {\n    //\n    // assetSubdirectoryDatestampFormat\n    //\n    const prior = Settings.assetSubdirectoryDatestampFormat.value\n    Settings.assetSubdirectoryDatestampFormat.unset()\n    if (blank(Settings.assetPathnameFormat.value) && notBlank(prior)) {\n      const newValue = ensureSuffix(prior, \"/\") + \"BASE\"\n      logger().info(\n        \"Upgrading setting assetSubdirectoryDatestampFormat to assetPathnameFormat\",\n        { prior, newValue }\n      )\n      Settings.assetPathnameFormat.value = newValue\n    }\n  }\n\n  {\n    //\n    // syncIntervalHours\n    //\n    const prior = Settings.syncIntervalHours.value\n    Settings.syncIntervalHours.unset()\n    const newValue = mapGt0(prior, ea => ea * hourMs)\n\n    if (!Settings.syncNewIntervalMs.hasValue() && gt0(newValue)) {\n      logger().info(\n        \"Upgrading setting syncIntervalHours to syncNewIntervalMs\",\n        { prior, newValue }\n      )\n      Settings.syncNewIntervalMs.value = newValue\n    }\n\n    if (!Settings.syncChangedIntervalMs.hasValue() && gt0(newValue)) {\n      logger().info(\n        \"Upgrading setting syncIntervalHours to syncChangedIntervalMs\",\n        { prior, newValue }\n      )\n      Settings.syncChangedIntervalMs.value = newValue\n    }\n  }\n\n  {\n    //\n    // dbBackupIntervalMinutes\n    //\n    if (\n      Settings.dbBackupIntervalMinutes.hasValue() &&\n      !Settings.dbBackupIntervalMs.hasValue()\n    ) {\n      const newValue =\n        Settings.dbBackupIntervalMinutes.valueOrDefault * minuteMs\n      logger().info(\n        \"Upgrading setting dbBackupIntervalMinutes to dbBackupIntervalMs\",\n        { newValue }\n      )\n\n      Settings.dbBackupIntervalMs.value = newValue\n    }\n  }\n\n  {\n    //\n    // enableSiblingInference\n    //\n    if (\n      Settings.enableSiblingInference.hasValue() &&\n      !Settings.siblingInference.hasValue()\n    ) {\n      const newValue = Settings.enableSiblingInference.valueOrDefault\n        ? Settings.siblingInference.valueOrDefault\n        : TagInferenceSettingValues.never\n      logger().info(\n        \"Upgrading setting enableSiblingInference to siblingInference\",\n        { newValue }\n      )\n\n      Settings.siblingInference.value = newValue\n    }\n  }\n}\n\n// We use envValue here (rather than tmpValue) to forcefully ignore any env or\n// file overrides.\n\nexport function disableAllFilters() {\n  Settings.disableAllFilters.envValue = true\n\n  Settings.disableIgnorableFilters.envValue = true\n\n  Settings.respectFileExtensions.envValue = false\n\n  Settings.requireMakeModel.envValue = false\n  Settings.rejectRatingsLessThan.envValue = -100\n\n  Settings.minImageDimension.envValue = 0\n  Settings.minVideoDimension.envValue = 0\n\n  Settings.minVideoDurationSec.envValue = 0\n  Settings.maxVideoDurationSec.envValue = 0\n\n  Settings.minAssetFileSizeBytes.envValue = 0\n  Settings.maxAssetFileSizeBytes.envValue = 0\n\n  Settings.validateJpegImages.envValue = false\n  Settings.validateRawImages.envValue = false\n  Settings.validateVideos.envValue = false\n}\n\nexport function setStrictDeduping() {\n  Settings.strictDeduping.envValue = true\n  Settings.useImageHashes.envValue = true\n  Settings.minExposureSettingsCoeffPct.envValue = 98\n  Settings.minImageCoeffPct.envValue = 95\n  Settings.imageHashFuzzyDateDelta.envValue = 1\n  Settings.imageHashDifferentMimetypesDelta.envValue = -10\n  Settings.imageHashGreyscaleDelta.envValue = 1\n}\n\nexport function allowFilesystemSleep() {\n  Settings.sharedStatePollMs.envValue = 0\n}\n\nconst quickSyncSettings = [\n  Settings.validateJpegImages,\n  Settings.validateRawImages,\n  Settings.validateVideos,\n  Settings.transcodeVideos,\n  Settings.previewMinimized,\n  Settings.previewProgressive,\n  Settings.previewSharpen,\n  Settings.useImageHashes,\n  Settings.enableSiblingInference\n]\n\nconst argonDefaults = {\n  argon2TimeCost: 8,\n  argon2MemoryCostMB: 64,\n  argon2Parallelism: 1\n} as const\nconst argonQuick = {\n  argon2TimeCost: 4,\n  argon2MemoryCostMB: 32,\n  argon2Parallelism: 1\n} as const\n\nexport function setQuickSyncMode(quick: boolean) {\n  for (const s of quickSyncSettings) {\n    if (quick) {\n      s.tmpValueIfUnset = false\n    } else {\n      s.tmpValue = undefined\n    }\n  }\n  const argon = quick ? argonQuick : argonDefaults\n  for (const [k, v] of entries(argon)) {\n    Settings[k].defaultValue = v\n  }\n  Settings.dominantColorPixels.defaultValue = quick\n    ? 256\n    : DominantColorPixelsDefault\n  Settings.dominantColorKmeansRuns.defaultValue = quick\n    ? 0\n    : DominantColorKmeansRunsDefault\n\n  Settings.dominantColorDeltaE.defaultValue = quick\n    ? ColorDistanceFunctions.cie76\n    : ColorDistanceFunctions.ciede2000\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { resolve } from \"../fs/Path\"\nimport { OptionalStringSetting } from \"./OptionalStringSetting\"\nimport { BaseSettingOpts, SettingOpts } from \"./Setting\"\n\nexport class OptionalFileSetting extends OptionalStringSetting {\n  constructor(\n    opts: BaseSettingOpts<Maybe<string>> & Partial<SettingOpts<Maybe<string>>>\n  ) {\n    super({\n      toEnv: ea => ea?.trim(),\n      fromEnv: ea => (blank(ea) ? undefined : resolve(ea)),\n      defaultValue: undefined,\n      ...opts\n    })\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toFloat } from \"../../fe/Number\"\nimport { BaseSettingOpts, DefaultValued, Setting } from \"./Setting\"\n\nexport class OptionalFloatSetting extends Setting<Maybe<number>> {\n  constructor(\n    opts: BaseSettingOpts<Maybe<number>> & Partial<DefaultValued<Maybe<number>>>\n  ) {\n    super({\n      defaultValue: undefined,\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toFloat\n    })\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { BaseSettingOpts, Setting } from \"./Setting\"\n\nexport class OptionalIntegerSetting extends Setting<Maybe<number>> {\n  constructor(opts: BaseSettingOpts<Maybe<number>>) {\n    super({\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toInt,\n      defaultValue: undefined\n    })\n  }\n}\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport {\n  BaseSettingOpts,\n  Setting,\n  SettingConverters,\n  SettingOpts\n} from \"./Setting\"\n\nexport class OptionalStringSetting extends Setting<Maybe<string>> {\n  constructor(\n    opts: BaseSettingOpts<Maybe<string>> &\n      Partial<SettingOpts<Maybe<string>>> &\n      Partial<SettingConverters<string>>\n  ) {\n    super({\n      toEnv: ea => ea?.trim(),\n      fromEnv: ea => ea,\n      defaultValue: undefined,\n      ...opts\n    })\n  }\n\n  hasValue() {\n    return this.value != null\n  }\n}\n","import { DateTime } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { replaceAll, stripPrefix } from \"../../fe/String\"\nimport { mkLogger } from \"../Logger\"\nimport { countChars, splitKeep, stripQuotes } from \"../String\"\nimport { Dated, datedToDateTime } from \"../date/Dated\"\nimport { datedToISO } from \"../date/FuzzyDate\"\nimport { hasZone } from \"../date/getZoneName\"\nimport { grandParentBasename, parentBasename } from \"../fs/Path\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { Settings } from \"./Settings\"\n\nconst logger = lazy(() => mkLogger(\"settings.PathToLibraryAsset\"))\n\nconst SingleQuote = \"′\"\n\nfunction esc(str: Maybe<string>): string {\n  return blank(str) ? \"\" : \"'\" + replaceAll(str, \"'\", SingleQuote) + \"'\"\n}\n\nfunction unesc(str: string) {\n  return replaceAll(str, SingleQuote, \"'\")\n}\n\nexport function pathToLibraryAsset(\n  capturedAt: Maybe<Dated>,\n  src: SimpleFile\n): Maybe<string[]> {\n  // If we can directly convert to DateTime (with toDateTime) we should do that,\n  // instead of converting back and forth with an ISO date string.\n  const dt =\n    datedToDateTime(capturedAt) ??\n    map(datedToISO(capturedAt), iso => DateTime.fromISO(iso))\n\n  if (dt == null || !dt.isValid) {\n    return logger().tap({\n      msg: \"pathToLibraryAsset(): failed to convert to a valid date\",\n      result: undefined,\n      meta: { capturedAt, src, dt }\n    })\n  }\n\n  const withZone = hasZone(capturedAt)\n\n  // A strung-together set of .replace may trip over prior substitutions, so we\n  // split the tokens into an array and handle each token exactly once.\n\n  const assetPathnameFormat = stripQuotes(\n    Settings.assetPathnameFormat.valueOrDefault\n  )\n\n  const tokens = splitKeep(\n    assetPathnameFormat,\n    /((?:GRAND)?PARENT|BASE|NAME|EXT|ISO)/g\n  )\n\n  for (let i = 0; i < tokens.length; i++) {\n    switch (tokens[i]) {\n      case \"GRANDPARENT\":\n        tokens[i] = esc(grandParentBasename(src))\n        break\n      case \"PARENT\":\n        tokens[i] = esc(parentBasename(src))\n        break\n      case \"BASE\":\n        tokens[i] = esc(src.base)\n        break\n      case \"NAME\":\n        tokens[i] = esc(src.name)\n        break\n      case \"EXT\":\n        tokens[i] = esc(stripPrefix(src.ext, \".\"))\n        break\n      case \"ISO\":\n        tokens[i] = \"yyyy-MM-dd'T'HH:mm:ss.SSS\" + (withZone ? \"ZZ\" : \"\")\n        break\n      default:\n        if (countChars(tokens[i], \"'\") % 2 === 1) {\n          tokens[i] = replaceAll(tokens[i], \"'\", SingleQuote)\n        }\n    }\n  }\n\n  const formatted = unesc(dt.toFormat(tokens.join(\"\")))\n  const paths = formatted.split(\"/\")\n  return logger().tap({\n    msg: \"pathToLibraryAsset()\",\n    result: compactBlanks(paths),\n    meta: { capturedAt, src, dt, assetPathnameFormat, tokens }\n  })\n}\n","import { ensurePrefix } from \"../../fe/String\"\nimport { camel2snake, snake2camel } from \"../StringCase\"\nimport { SettingsName } from \"./SettingsName\"\n\nexport function nameFromEnv(name: string): string {\n  return snake2camel(name.replace(/^PS_/, \"\").toLowerCase())\n}\n\nexport function envFromName(name: SettingsName | string): string {\n  return ensurePrefix(camel2snake(name).toUpperCase(), \"PS_\")\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { filterInPlace, isEmpty, uniq } from \"../../fe/Array\"\nimport { ChangeListener } from \"../../fe/ChangeListener\"\nimport { shallowClone } from \"../../fe/Clone\"\nimport { eql } from \"../../fe/Eql\"\nimport { orList } from \"../../fe/FmtList\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Defined, map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe, MaybeNull } from \"../../fe/MaybeTypes\"\nimport { Obj, StringValued, entries } from \"../../fe/Object\"\nimport { padding } from \"../../fe/Pad\"\nimport { pluralize } from \"../../fe/Pluralize\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { Thunk, tot } from \"../../fe/Thunk\"\nimport { toA } from \"../../fe/toA\"\nimport { CaseInsensitiveValued } from \"../CaseInsensitiveValued\"\nimport { wrap } from \"../String\"\nimport { env } from \"../env/Env\"\nimport { caseInsensitiveEnv } from \"../env/GetEnv\"\nimport { ee } from \"../event/EventEmitter\"\nimport { envFromName } from \"./PsEnvNames\"\nimport { wrapTomlToLines } from \"./TomlStringify\"\nimport { WrapComments } from \"./WrapComments\"\n\n// LIMIT DEPS TO FE AND BASE CLASSES! #NODEPLOOPS NO DE PLOOPS!\n\nexport const SettingCategories = strEnum(\n  // System settings:\n  \"Paths\",\n  \"Desktops\",\n  \"Filesystem\",\n  \"Cache\",\n  \"Logging\",\n  \"Networking\",\n  \"Processes\",\n  \"Security\",\n  \"Tools\",\n  \"Updates\",\n  // Library settings:\n  \"Auth\",\n  \"Color\",\n  \"Db\",\n  \"Deduping\",\n  \"Events\",\n  \"Filters\",\n  \"HealthChecks\",\n  \"Parsing\",\n  \"Previews\",\n  \"Reporting\",\n  \"Sidecars\",\n  \"Subscriptions\",\n  \"Sync\",\n  \"Tagging\",\n  \"Video\",\n  \"Volumes\",\n  \"Web\"\n)\nexport type SettingCategory = StrEnumKeys<typeof SettingCategories>\n\nexport const LibraryCategories: ReadonlyArray<SettingCategory> = Object.freeze([\n  // we include reporting in the library because their email won't change\n  SettingCategories.Auth,\n  SettingCategories.Color,\n  SettingCategories.Db,\n  SettingCategories.Deduping,\n  SettingCategories.Events,\n  SettingCategories.Filters,\n  SettingCategories.HealthChecks,\n  SettingCategories.Parsing,\n  SettingCategories.Previews,\n  SettingCategories.Reporting,\n  SettingCategories.Sidecars,\n  SettingCategories.Subscriptions,\n  SettingCategories.Sync,\n  SettingCategories.Tagging,\n  SettingCategories.Video,\n  SettingCategories.Volumes,\n  SettingCategories.Web\n])\n\n// System is everything not library:\nexport const SystemCategories: ReadonlyArray<SettingCategory> = Object.freeze(\n  SettingCategories.values.filter(ea => !LibraryCategories.includes(ea))\n)\n\nexport interface BaseSettingOpts<T> {\n  aliases?: string[]\n  envAliases?: string[]\n  category: SettingCategory\n  description: string\n  exampleValue?: Thunk<Maybe<T>>\n  transient?: boolean // defaults to false\n  advanced?: Thunk<boolean>\n  deprecated?: boolean // be sure to add a migrator to MetaSettings!\n  sensitive?: boolean\n}\n\nexport interface SettingConverters<T> {\n  readonly toEnv: (value: Maybe<T>) => Maybe<string>\n  readonly fromEnv: (value: Maybe<string>) => Maybe<T>\n}\n\nexport interface DefaultValued<T> {\n  defaultValue: T | Thunk<T>\n}\n\nexport type SettingOpts<T> = BaseSettingOpts<T> & DefaultValued<T>\n\nexport interface SavedSetting {\n  key: string\n  value: any\n}\n\nexport function settingsToObj(arr: Setting[]): Obj {\n  const obj: Obj = {}\n  for (const ea of arr) {\n    if (ea.hasValue()) obj[ea.name] = ea.value\n  }\n  return obj\n}\n\nexport interface SettingState<T> {\n  user: Maybe<T>\n  env: Maybe<T>\n  file: Maybe<T>\n  tmp: Maybe<T>\n}\n\n/**\n * Supports env-overridden preferences that can be persisted to a file.\n *\n * 1. Setting an environment variable or command-line argument must not be\n *    persisted to the settings file, as that would become the default value.\n * 2. Settings file values should not override the command-line or environment's\n *    values, as that would cause the env or CLI value to be ignored.\n *\n * SO: we have to be able to distinguish between env or cli values and persisted\n * values.\n */\nexport class Setting<T = any> {\n  protected _name!: string\n  protected _names!: string[]\n  protected _key!: string\n  protected _keys!: string[]\n  protected _userValue: Maybe<T>\n  // This lets us only parse values out of the env when we actually need the\n  // value. We get circular dependency errors if we do this on construction\n  // time:\n  _envValue = lazy(() => this.readFromEnv())\n  protected _fileValue: Maybe<T>\n  protected _tmpValue: Maybe<T>\n  protected readonly watchers: ChangeListener<T>[] = []\n  protected optsOverrides: Partial<SettingOpts<T> & SettingConverters<T>> = {}\n\n  constructor(readonly opts: SettingOpts<T> & SettingConverters<T>) {}\n\n  getState(): SettingState<T> {\n    return {\n      user: this._userValue,\n      env: this.envValue,\n      file: this._fileValue,\n      tmp: this._tmpValue\n    }\n  }\n\n  dump() {\n    return {\n      name: this.name,\n      key: this.key,\n      ...this.getState(),\n      hasValue: this.hasValue(),\n      isUnset: this.isUnset(),\n      defaultValue: this.defaultValue\n    }\n  }\n\n  /**\n   * Used for testing: supports changing and restoring state without firing\n   * change observers.\n   */\n  setState(s: Partial<SettingState<T>>) {\n    if (s != null) {\n      this._userValue = s.user\n      this.envValue = s.env\n      this._fileValue = s.file\n      this._tmpValue = s.tmp\n    }\n  }\n\n  // TODO: Doesn't work. I don't know why it doesn't.\n  // runAndRestore<L>(newValue: T, l: () => L): L {\n  //   const priorState = this.getState()\n  //   try {\n  //     this.value = newValue\n  //     return l()\n  //   } finally {\n  //     this.setState(priorState)\n  //   }\n  // }\n\n  normalizeValue(v: Maybe<T>): Maybe<T> {\n    return v == null ? undefined : this.opts.fromEnv(this.opts.toEnv(v))\n  }\n\n  /**\n   * @return the value that should be persisted in a settings.toml. Ignores env\n   * and tmp values.\n   */\n  get fileValue(): Maybe<T> {\n    return this._userValue ?? this._fileValue\n  }\n\n  set fileValue(value: Maybe<T>) {\n    this.onChange(value, ea => (this._fileValue = ea))\n  }\n\n  get envValue(): Maybe<T> {\n    return this._userValue ?? this._envValue()\n  }\n\n  /**\n   * - Set the value for the current process and child processes.\n   * - Don't persist this value in the settings.toml.\n   */\n  set envValue(value: Maybe<T>) {\n    this.onChange(value, ea => {\n      this._envValue.set(ea)\n      this.addToEnv()\n    })\n  }\n\n  refreshEnvValue(args: { broadcastChange?: boolean } = {}) {\n    // if the env value doesn't change valueOrDefault, don't bother the watchers:\n    const prior = shallowClone(this.valueOrDefault)\n    this._envValue.unset()\n    if (true === args?.broadcastChange) this.maybeBroadcastChange(prior)\n  }\n\n  get tmpValue(): Maybe<T> {\n    return this._userValue ?? this._tmpValue\n  }\n\n  /**\n   * - Set the value for the current process (not child processes).\n   * - Don't persist this value in the settings.toml.\n   */\n  set tmpValue(value: Maybe<T>) {\n    this.onChange(value, ea => (this._tmpValue = ea))\n  }\n\n  /**\n   * @return the first set value from user, env, file, or tmp.\n   */\n  get value(): Maybe<T> {\n    return (\n      this._userValue ?? this._envValue() ?? this._fileValue ?? this._tmpValue\n    )\n  }\n\n  set value(value: MaybeNull<T>) {\n    this.userValue = value == null ? undefined : value\n  }\n\n  /**\n   * If there is a \"human-friendly\" version of the value, return that.\n   */\n  get humanValue(): Maybe<T | string> {\n    return this.value\n  }\n\n  set userValue(value: Maybe<T>) {\n    this.onChange(value, ea => (this._userValue = ea))\n  }\n\n  get valueOrThrow(): Defined<T> {\n    const v = this.value\n    if (v == null) {\n      throw new Error(\"Missing value for setting \" + this.name)\n    } else {\n      return v as any\n    }\n  }\n\n  hasValue() {\n    return this.value != null\n  }\n\n  isUnset() {\n    return this.value == null\n  }\n\n  /**\n   * Read the value from the given `Obj` or the ENV.\n   *\n   * THIS DOESN'T CHANGE ANY STATE. If you want to import from the env, use\n   * `importFromEnv`.\n   */\n  readFromEnv(obj?: StringValued): Maybe<T> {\n    const civ =\n      obj == null ? caseInsensitiveEnv() : new CaseInsensitiveValued(obj)\n    // Support PS_LOG_LEVEL and logLevel:\n    for (const k of [...this.keys, ...this.names]) {\n      const v = map(civ.get(k), ea => this.opts.fromEnv(ea))\n      if (v != null) return v\n    }\n    return\n  }\n\n  /**\n   * Should only be used directly by tests, as env shouldn't be wiggling around\n   * after a process starts.\n   */\n  setFromEnv(environment: StringValued = env()): Maybe<T> {\n    return (this.envValue = this.readFromEnv(environment))\n  }\n\n  setValueIfDefined(value: Maybe<T>) {\n    if (value != null) this.value = value\n  }\n\n  watchLater(l: ChangeListener<T>) {\n    this.watchers.push(l)\n  }\n\n  watch(l: ChangeListener<T>) {\n    this.watchLater(l)\n    // setImmediate allows the call to addListener() reference classes or\n    // instances that haven't been parsed yet:\n    setImmediate(() => this.broadcastChange())\n  }\n\n  unWatch(l: ChangeListener<T>) {\n    filterInPlace(this.watchers, ea => ea === l)\n  }\n\n  broadcastChange() {\n    const curr = this.valueOrDefault\n    for (const ea of this.watchers) {\n      ea(curr)\n    }\n    ee().emitDebounced(\"settingsChanged\")\n  }\n\n  /**\n   * @param mutateFunc may change this.value via one of the delegates\n   */\n  protected onChange(v: Maybe<T>, mutateFunc: (ea: Maybe<T>) => any) {\n    // We have to shallow clone prior if it's an array or object, because\n    // mutateFunc may modify prior directly, and then eql() will false-positive.\n    const prior = shallowClone(this.valueOrDefault)\n    mutateFunc(this.normalizeValue(v))\n    this.maybeBroadcastChange(prior)\n  }\n\n  protected maybeBroadcastChange(prior: T) {\n    if (!eql(this.valueOrDefault, prior)) this.broadcastChange()\n  }\n\n  /**\n   * This is the camelCasedVersionOfTheSettingName\n   */\n  get name(): string {\n    return this._name\n  }\n\n  get names(): string[] {\n    return this._names\n  }\n\n  // this is public so Settings can push field names down to instances\n  _setName(name: string) {\n    if (this._name != null) throw new Error(\"cannot set name twice\")\n    this._name = name\n    this._names = uniq([name, ...toA(this.opts.aliases)])\n    this._key = envFromName(name)\n    this._keys = uniq([\n      ...this._names.map(envFromName),\n      this._key,\n      ...toA(this.opts.envAliases)\n    ])\n  }\n\n  /**\n   * This is the environment variable name for this setting:\n   */\n  get key(): string {\n    return this._key\n  }\n\n  /**\n   * This is a list of all environment keys for this setting. It will always\n   * include `this.key`.\n   */\n  get keys(): string[] {\n    return this._keys\n  }\n\n  get altKeys(): string[] {\n    return this._keys.filter(ea => ea !== this._key)\n  }\n\n  get category(): SettingCategory {\n    return this.opts.category\n  }\n\n  get categoryType(): \"system\" | \"library\" {\n    return LibraryCategories.includes(this.category) ? \"library\" : \"system\"\n  }\n\n  get transient(): boolean {\n    return this.opts.transient === true\n  }\n\n  /**\n   * Is this setting an \"advanced\" option (and can be initially hidden)?\n   */\n  get advanced(): boolean {\n    return mapOr(\n      this.opts.advanced,\n      ea => ea(),\n      () => true\n    )\n  }\n\n  /**\n   * @return the env value encoding `this.valueOrDefault`\n   */\n  get envValueOrDefault(): Maybe<string> {\n    return this.opts.toEnv(this.valueOrDefault)\n  }\n\n  set tmpValueIfUnset(t: Maybe<T>) {\n    if (this.isUnset()) this.tmpValue = t\n  }\n\n  get defaultValue(): T {\n    return tot(this.optsOverrides.defaultValue ?? this.opts.defaultValue)\n  }\n\n  set defaultValue(t: T | Thunk<T>) {\n    const prior = shallowClone(this.valueOrDefault)\n    this.optsOverrides.defaultValue = t\n    this.maybeBroadcastChange(prior)\n  }\n\n  resetDefaultValue() {\n    this.optsOverrides.defaultValue = undefined\n  }\n\n  get exampleValue(): Maybe<T> {\n    return tot(this.optsOverrides.exampleValue ?? this.opts.exampleValue)\n  }\n\n  set exampleValue(t: Maybe<T>) {\n    this.optsOverrides.exampleValue = t as any\n  }\n\n  get valueOrDefault(): T {\n    return this.value ?? this.defaultValue\n  }\n\n  /**\n   * no-op if unset\n   */\n  addToEnvMaybe<SV extends StringValued>(obj?: SV, overrideValue?: T): SV {\n    const e: any = obj ?? env()\n    // If we don't have a value, let the child take the default, or the\n    // persisted value. This fixes\n    // https://gitlab.com/photostructure/photostructure/issues/202\n    const v = this.envValue ?? overrideValue\n    if (v != null) {\n      e[this.key] = this.opts.toEnv(v)\n    }\n    if (obj == null) {\n      caseInsensitiveEnv.unset()\n    }\n    return e as SV\n  }\n\n  toEnvValue(overrideValue?: T): Maybe<string> {\n    return this.opts.toEnv(overrideValue ?? this.valueOrDefault)\n  }\n\n  addToEnv<SV extends StringValued>(obj?: SV, overrideValue?: T): SV {\n    const e: any = obj ?? env()\n    const value = this.toEnvValue(overrideValue)\n    if (value != null) {\n      e[this.key] = value\n      if (obj == null) {\n        caseInsensitiveEnv.unset()\n      }\n    }\n    return e as SV\n  }\n\n  deleteFromEnv<SV extends StringValued>(obj?: SV): SV {\n    const cie =\n      map(obj, ea => new CaseInsensitiveValued(ea)) ?? caseInsensitiveEnv()\n    for (const ea of [...this.names, ...this.keys]) {\n      cie.delete(ea)\n    }\n    return cie.obj as SV\n  }\n\n  /**\n   * Removes tmp, env, and user-set values\n   */\n  unset() {\n    this.onChange(undefined, () => {\n      this._userValue = undefined\n      this._envValue.unset()\n      this._fileValue = undefined\n      this._tmpValue = undefined\n      this.optsOverrides = {}\n      this.deleteFromEnv()\n    })\n    return this\n  }\n\n  addToJSON(): Obj {\n    return {}\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      value: this.value,\n      defaultValue: this.opts.defaultValue\n    }\n  }\n\n  toCommentedLines() {\n    const title = this.name + \" or \" + this.key\n    const lines = wrap(\n      [\n        padding(\"-\", title.length),\n        title,\n        padding(\"-\", title.length),\n        \"\",\n        ...(this.opts.deprecated === true\n          ? [\n              \"NOTE: this setting has been deprecated and will be removed in a future version of PhotoStructure.\",\n              \"\"\n            ]\n          : []),\n        // make all newlines double-spaced:\n        `${this.opts.description.replace(/\\n+/g, \"\\n\\n\")}`\n      ],\n      WrapComments\n    )\n\n    function maybeAddList(key: string, arr: Maybe<string[]>) {\n      if (!isEmpty(arr)) {\n        lines.push(\n          ...wrap(\n            [\n              \"\",\n              (arr.length === 1 ? key : pluralize(key)) +\n                \": \" +\n                orList(arr.map(ea => stringify(ea)))\n            ],\n            WrapComments\n          )\n        )\n      }\n    }\n    maybeAddList(\"alias\", this.opts.aliases)\n    maybeAddList(\"environment alias\", this.altKeys)\n\n    for (const [key, value] of entries(this.addToJSON())) {\n      const v = Array.isArray(value)\n        ? orList(value.map(ea => stringify(ea)))\n        : stringify(value)\n      lines.push(...wrap([\"\", key + \": \" + v], WrapComments))\n    }\n\n    return lines\n  }\n\n  toEnvLine(value?: T): string {\n    return (\n      this.key +\n      \"=\" +\n      (map(value, ea => this.opts.toEnv(ea)) ?? this.envValueOrDefault)\n    )\n  }\n\n  toTomlLines(): string[] {\n    const lines: string[] = this.toCommentedLines()\n\n    wrapTomlToLines({\n      lines,\n      wrap: WrapComments,\n      key: \"example value\",\n      value: tot(this.exampleValue)\n    })\n\n    wrapTomlToLines({\n      lines,\n      wrap: WrapComments,\n      prepend: [\"Default value:\"],\n      key: this.name,\n      value: tot(this.defaultValue)\n    })\n\n    wrapTomlToLines({\n      lines,\n      key: this.name,\n      value: tot(this.fileValue)\n    })\n\n    return lines\n  }\n}\n","import { BatchClusterOptions } from \"batch-cluster\"\nimport { delimiter } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { diff, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { FitSizes } from \"../../fe/ImageSizes\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { entries, values } from \"../../fe/Object\"\nimport { GB, KB, fmtBytes } from \"../../fe/Units\"\nimport { toS } from \"../../fe/toS\"\nimport { CaseInsensitiveMap } from \"../CaseInsensitiveMap\"\nimport { CaseInsensitiveValued } from \"../CaseInsensitiveValued\"\nimport { DefaultSensitiveEnvRegexPattern } from \"../DefaultSensitiveEnvRegexPattern\"\nimport { noColor } from \"../NoColor\"\nimport { isProd as _isProd } from \"../NodeEnv\"\nimport { channel } from \"../PhotoStructureVersion\"\nimport { PriorityClasses } from \"../PriorityClass\"\nimport { DefaultDateTimeFormats } from \"../date/DefaultDateTimeFormats\"\nimport { encodeDuration } from \"../date/DurationCodec\"\nimport { AutoVacuumModes } from \"../db/AutoVacuumModes\"\nimport { CheckpointTypes } from \"../db/CheckpointTypes\"\nimport { RepairModes } from \"../db/RepairModes\"\nimport { SynchronousModes } from \"../db/SynchronousModes\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { HealthCheckIds } from \"../health/HealthCheckIds\"\nimport { CropStrategies } from \"../img/CropStrategies\"\nimport { SharpFailOns } from \"../img/SharpFailOn\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isElectron, isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { isRaspberryPi } from \"../platform/isRaspberryPi\"\nimport { DateTagFormats } from \"../tags/DateTagFormats\"\nimport {\n  DefaultCapturedAtTagsConst,\n  ProblematicCapturedAtTags\n} from \"../tags/DefaultCapturedAtTags\"\nimport { DefaultIncludedPreviewTags } from \"../tags/DefaultIncludedPreviewTags\"\nimport { DefaultLensMakes } from \"../tags/DefaultLensMakes\"\nimport { KeywordReparentingStrategies } from \"../tags/KeywordReparentingStrategies\"\nimport { NameTagFormats } from \"../tags/NameTagFormats\"\nimport { NameTagOrders } from \"../tags/NameTagOrders\"\nimport {\n  DefaultExcludedLinuxMountpointNames as DefaultExcludedLinuxMountpointBasenames,\n  DefaultExcludedLinuxMountpointPaths,\n  DefaultExcludedLinuxRoots\n} from \"../volumes/DefaultExcludedLinuxRoots\"\nimport { DefaultExcludedFilesystemTypes } from \"../volumes/DefaultIgnorableFilesystemTypes\"\nimport { HelmetPlugins } from \"../web/HelmetPlugins\"\nimport { cpuCount } from \"../work/CpuInfo\"\nimport { AggregateTypes } from \"./AggregateTypes\"\nimport { AssetFileSortCriteria } from \"./AssetFileSortCriteria\"\nimport { BooleanSetting } from \"./BooleanSetting\"\nimport { BoundedFloatSetting } from \"./BoundedFloatSetting\"\nimport { BoundedIntegerSetting } from \"./BoundedIntegerSetting\"\nimport { ColorDistanceFunctions } from \"./ColorDistanceFunctions\"\nimport { DominantColorKmeansRunsDefault } from \"./DominantColorKmeansRunsDefault\"\nimport { DominantColorPixelsDefault } from \"./DominantColorPixelsDefault\"\nimport { DurationSetting } from \"./DurationSetting\"\nimport { FloatSetting } from \"./FloatSetting\"\nimport { IntegerSetting } from \"./IntegerSetting\"\nimport { OptionalFileSetting } from \"./OptionalFileSetting\"\nimport { OptionalFloatSetting } from \"./OptionalFloatSetting\"\nimport { OptionalIntegerSetting } from \"./OptionalIntegerSetting\"\nimport { OptionalStringSetting } from \"./OptionalStringSetting\"\nimport {\n  LibraryCategories,\n  Setting,\n  SettingCategories,\n  SystemCategories\n} from \"./Setting\"\nimport { StringArraySetting } from \"./StringArraySetting\"\nimport { StringEnumSetting } from \"./StringEnumSetting\"\nimport { StringEnumsSetting } from \"./StringEnumsSetting\"\nimport { StringSetting } from \"./StringSetting\"\nimport { TagInferenceSettingValues } from \"./TagInferenceSettingValues\"\nimport { UpgradeChannels } from \"./UpgradeChannels\"\n\n// lazy so tests can isProd.set() us into production:\nexport const isProd = lazy(() => _isProd)\nconst isTest = () => !isProd()\n\n// WTH, amirite? This lets TypeScript not swoon over the Settings typings.\nfunction exposeNetworkWithoutAuth(): boolean {\n  return Settings.exposeNetworkWithoutAuth.valueOrDefault\n}\n\nexport const DefaultMaxEmbeddedBuffer = 250000\n\n// Most all Setting instances have keys that are prefixed with `PS_`, which let\n// them be used in environment variables without colliding with other\n// environment variables. The `PS_` prefix isn't needed otherwise.\n\n// Only Setting instances should be included in this namespace:\nexport const Settings = {\n  configDir: new OptionalStringSetting({\n    category: SettingCategories.Paths,\n    description: [\n      \"This is the system configuration directory. This can't be overridden in the system settings.toml, as it's used to _find_ the system settings.toml! This setting is here for documentation, and to allow the PS_CONFIG_DIR environment variable to override the default setting.\",\n      \"PhotoStructure's system configuration directory defaults to:\",\n      \"- Windows: %APPDATA%\\\\PhotoStructure (%APPDATA% is normally set to %HOME%/AppData/Roaming)\",\n      \"- macOS: ~/Library/Application Support/PhotoStructure\",\n      \"- Linux: ${XDG_CONFIG_DIR:$HOME/.config}/PhotoStructure.\"\n    ].join(\"\\n\"),\n    defaultValue: () => \"\", // < set by setSettingsDefaults()\n    advanced: () => false,\n    transient: true\n  }),\n\n  libraryDir: new OptionalFileSetting({\n    aliases: [\"libraryPath\", \"library\"],\n    category: SettingCategories.Paths,\n    description:\n      \"This is the absolute path to your PhotoStructure library. If missing, or set to an empty string, the welcome page will be shown when PhotoStructure launches. Use native file separators (so on windows, use back-slashes).\",\n    defaultValue: () => \"\", // < set by setSettingsDefaults()\n    advanced: () => false\n  }),\n\n  copyAssetsToLibrary: new BooleanSetting({\n    category: SettingCategories.Paths,\n    description: `Should PhotoStructure copy photos and videos to your PhotoStructure Library? This setting holds the value for the welcome page's \"May PhotoStructure organize your photos and videos?\" section, and is called \"automatic organization\" on the website.\\nRead more about this setting here: https://photostructure.com/getting-started/automatic-library-organization/ .`,\n    defaultValue: true,\n    advanced: () => false\n  }),\n\n  // todo: add new \"organize\" StringEnumSetting that is \"copy\", \"move\", \"softlink\", \"hardlink\"\n\n  previewsDir: new StringSetting({\n    category: SettingCategories.Paths,\n    description: `This is the directory that PhotoStructure uses to store preview images. This defaults to the \".photostructure/previews\" directory inside your PhotoStructure library. Absolute paths here are supported, but if you keep your library and previews directory separated, take care when you open your library on different computers, as this setting needs to be adjusted for those computers as well.\\nNOTE: \"originalDirs\" is recommended instead of this setting; If you get \"previewsDir\" wrong, your library won't work. If you get \"originalsDir\" wrong, you just break full-screen asset zooming and playback for non-transcoded videos.\\nSee https://forum.photostructure.com/t/hybrid-photostructure-libraries/775 .`,\n    defaultValue: () => \".photostructure/previews\"\n  }),\n\n  originalsDir: new StringSetting({\n    aliases: [\"originalDir\"],\n    category: SettingCategories.Paths,\n    description: `This is the directory that PhotoStructure uses to store original images when \"copyAssetsToLibrary\" is enabled. Absolute paths are supported. Relative paths are evaluated from your libraryDir. This setting defaults to \".\", which is the same as your PhotoStructure library directory, unless you are on docker, and a /ps/originals directory exists.\\nIf you open your PhotoStructure library on a different computer, and that computer doesn't have access to your originals volume, full-screen zoom won't work, and non-transcoded videos will not play.\\nThis system setting needs to be set appropriately on different computers (it won't be set automatically!)\\nIf you have a large library and want to use an SSD, we recommend you set your libraryDir to your SSD, and use this setting to store your originals on a larger volume, rather than using the \"previewsDir\" setting.\\nSee https://forum.photostructure.com/t/hybrid-photostructure-libraries/775 and https://forum.photostructure.com/t/new-easy-mode-for-docker-coming-in-v2-1/1278/6?u=mrm .`,\n    defaultValue: \"\" // < set by setSettingsDefaults()\n  }),\n\n  scanAllDrives: new BooleanSetting({\n    category: SettingCategories.Paths,\n    description:\n      \"Should PhotoStructure scan all folders on all drives available to this computer for photos and videos?\",\n    defaultValue: true,\n    advanced: () => false\n  }),\n\n  /**\n   * @deprecated\n   */\n  scanMyPictures: new BooleanSetting({\n    category: SettingCategories.Paths,\n    description: `If set, PhotoStructure will automatically add your pictures directory to your \"scanPaths\" setting and then flip this setting back to false. Add your Pictures directory directly to your scanPaths setting instead.`,\n    defaultValue: false,\n    deprecated: true\n  }),\n\n  scanPaths: new StringArraySetting({\n    aliases: [\"scanPath\"],\n    category: SettingCategories.Paths,\n    description: `This holds an array of absolute paths to scan for assets. If you are setting this via an environment variable, you may use either standard PATH formatting, like \\`PS_SCAN_PATHS=\"/path/one:/path/two\"\\`, or use JSON encoding, like \\`PS_SCAN_PATHS='[\"/path/one\",\"/path/two\"]'\\`.`,\n    advanced: () => false\n  }),\n\n  argvScanPaths: new StringArraySetting({\n    category: SettingCategories.Paths,\n    description: `This holds an array of absolute paths provided on the command line to import. This overrides \"scanPaths\", and should always be scanned for changes. See https://forum.photostructure.com/t/1597/4 . For internal use only.`,\n    transient: true,\n    advanced: () => true\n  }),\n\n  // TODO:\n\n  // watchPaths: new StringArraySetting({\n  //   aliases: [\"watchPath\"],\n  //   category: SettingCategories.Paths,\n  //   description: `This holds an array of absolute paths to directories that should be watched for changes recursively. Files added, deleted, or updated will be synchronized immediately.`,\n  //   advanced: () => true\n  // }),\n\n  pidFile: new OptionalStringSetting({\n    category: SettingCategories.Paths,\n    envAliases: [\"PIDFILE\"],\n    description:\n      \"This is the absolute path to the PID file for the main process. This is optional and only used by PhotoStructure for Servers. Make sure the UID/GID that PhotoStructure runs as can read and write to this file.\",\n    exampleValue: () => \"/var/run/photostructure.pid\"\n  }),\n\n  cacheDir: new StringSetting({\n    category: SettingCategories.Paths,\n    description:\n      \"Where would you like PhotoStructure's scratch file directory? This must be a fast, local disk with several gigabytes free.\\nNote that if PS_FORCE_LOCAL_DB_REPLICA is enabled, the local DB replica will be stored in this directory while PhotoStructure is running: don't delete it!\\nIf this is set to /tmp PhotoStructure will write to a user-specific /tmp/.photostructure-cache-$UID directory.\",\n    defaultValue: () => \"\" // < set by setSettingsDefaults()\n  }),\n\n  //\n  // Cache\n  //\n\n  fsCacheSlowMs: new DurationSetting({\n    category: SettingCategories.Cache,\n    description: `If a cache entry takes longer than this value to compute, cache results for later reuse to the filesystem.\\nThe default is very short, under the assumption that cache filesystem read/writes are <10ms.\\nSet this to 0 to never cache to the filesystem.`,\n    defaultValue: () => (isTest() ? \"1\" : \"25\")\n  }),\n\n  imageCacheMs: new DurationSetting({\n    category: SettingCategories.Cache,\n    description:\n      \"Assets requiring conversion may need intermediary file storage as they are imported. These intermediary files only need to live as long as the import process for that asset. Too short of a time will result in this conversion work being re-done during import. Too long of a time will result in additional diskspace in your cache directory being consumed.\",\n    defaultValue: \"15m\"\n  }),\n\n  readdirCacheMs: new DurationSetting({\n    category: SettingCategories.Cache,\n    description:\n      \"readdir() can take a long time over slow network shares and when directories are very large. This setting controls how long to cache readdir results that are slow (which take >= .5 seconds). Too short of a time will result in low cache hit rates, and very slow imports for these problematic directories. Too long of a time will result in PhotoStructure not seeing changes made to these directories.\\nSet to 0 to disable readdir() caching.\",\n    defaultValue: \"5m\"\n  }),\n\n  readdirSizeCacheThresh: new IntegerSetting({\n    category: SettingCategories.Cache,\n    description: `If readdir() has more than this number of child elements, always cache it.\\nSet to 0 to disable readdir() caching.`,\n    defaultValue: () => (isTest() ? 32 : 1024)\n  }),\n\n  //\n  // LOGGING\n  //\n\n  quiet: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"If true, the main service won't emit lifecycle messages to stdout. Note that logStdout=true or logTail=true will override quiet=true.\",\n    defaultValue: false\n  }),\n\n  logLevel: new StringSetting({\n    envAliases: [\"PS_LOG\", \"LOG\", \"LOG_LEVEL\"],\n    category: SettingCategories.Logging,\n    description: `Determines which level of log messages are emitted to log files. May be \"debug\", \"info\", \"warn\", \"error\", \"fatal\", or several log level directives followed by a context (like \"debug:web\").`,\n    defaultValue: () => (isProd() ? \"warn\" : \"info\")\n  }),\n\n  logDir: new StringSetting({\n    category: SettingCategories.Logging,\n    description: \"Determines the directory that log files will be written to.\",\n    defaultValue: () => \"\" // < set by setSettingsDefaults()\n  }),\n\n  logCompression: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description: \"Should log files be compressed as they are rotated?\",\n    defaultValue: () => isProd() // don't compress in test or dev so logtail is happy\n  }),\n\n  logWebRequests: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description: \"Write an access log for all web requests?\",\n    defaultValue: false\n  }),\n\n  logWebDir: new OptionalStringSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"Determines the directory that log files will be written to. If unset, will use logDir.\"\n  }),\n\n  logStdout: new BooleanSetting({\n    envAliases: [\"LOG_STDOUT\", \"PS_STDOUT\"],\n    category: SettingCategories.Logging,\n    description:\n      \"Log to stdout? This should be false unless you're running a service by hand.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  tailLogs: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"Output all logs from currently running PhotoStructure processes? This should be false unless you're running a service by hand.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  logColor: new BooleanSetting({\n    // we can't alias NO_COLOR, because according to no-color.org, it's true if\n    // it has _any_ value\n    category: SettingCategories.Logging,\n    description:\n      \"Output all logs with terminal escape codes to colorize output. If NO_COLOR=1 or TERM=dumb or TERM=unknown, this defaults to false. See https://no-color.org/ .\",\n    defaultValue: () => !noColor()\n  }),\n\n  logContextLimit: new IntegerSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"PhotoStructure will only log, at most, this number of elements or key/value pairs.\",\n    defaultValue: () => 64\n  }),\n\n  logSql: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"Log SQL queries to the default log level. **Enabling this negatively impacts performance.**.\\nThis defaults to false.\",\n    defaultValue: () => false\n  }),\n\n  logServer: new OptionalStringSetting({\n    category: SettingCategories.Logging,\n    description: `Format as hostname:port or ip_address:port.\\nIf set, processes will emit log entries, formatted as GELF and separated by null bytes, via TCP.\\nIf this is set, the default PS_LOG_LEVEL drops from \"error\" to \"info\".\\nSee https://docs.greylog.org/v1/docs/gelf .`,\n    exampleValue: () => \"localhost:12201\"\n  }),\n\n  logServerLevel: new StringSetting({\n    category: SettingCategories.Logging,\n    description: `If set, this will be the log level used to filter logs before sending them to \"logServer\".`,\n    defaultValue: () => LogLevels.info\n  }),\n\n  //\n  // Filesystem\n  //\n\n  useFsWatch: new BooleanSetting({\n    category: SettingCategories.Filesystem,\n    description: `If true, PhotoStructure will use the native filesystem watch APIs to detect file changes. This is the default and recommended setting. If false, PhotoStructure will poll the filesystem for changes instead. This is not recommended, but may be useful if you're running PhotoStructure on an OS or filesystem that doesn't support change notifications, like some network filesystems.\\nSee https://nodejs.org/api/fs.html#availability for more information.`,\n    defaultValue: () => true\n  }),\n\n  allowFilesystemSleep: new BooleanSetting({\n    category: SettingCategories.Filesystem,\n    description: `If true, PhotoStructure will set disable a handful of other settings which will allow the OS to put the filesystem to sleep when it's idle. This can save power, but can also cause PhotoStructure to miss file changes.\\nThis sets sharedStatePollMs=0 and dbFsLockStaleMs=0.`,\n    defaultValue: () => false\n  }),\n\n  statTimeoutMs: new DurationSetting({\n    category: SettingCategories.Filesystem,\n    description: `Filesystem traversal can be dangerous business with scratched CDROMs and old busted hard drives. To prevent PhotoStructure from getting \"stuck\" when trying to read these devices, it will timeout directory iteration if stat() or readdir() exceeds this value. The default of 30 seconds should cover most issues with spun-down hard drives and NAS/WAN latency.`,\n    defaultValue: () => \"30s\"\n  }),\n\n  watchDebounceMs: new DurationSetting({\n    category: SettingCategories.Filesystem,\n    description: `How long to wait for a file to \"settle down\" and stop changing before the file watcher notifies listeners that the file changed. Some applications (like PhotoStructure) use work-in-progress \"atomic\" writes, but many applications overwrite in-place, which can cause the file watcher to see incomplete results until the write process is complete.\\nThe default is 500ms (½ second) to handle slow remote NASes and slow-writing applications.\\nSet to 0 to disable.`,\n    defaultValue: () => \"500ms\"\n  }),\n\n  excludedFilesystemTypes: new StringArraySetting({\n    aliases: [\"ignoredFilesystemTypes\"],\n    category: SettingCategories.Filesystem,\n    description:\n      \"Volumes with these filesystem types will never be scanned or imported.\\nThese are only relevant to Linux and macOS systems.\",\n    defaultValue: () => DefaultExcludedFilesystemTypes\n  }),\n\n  excludedRootDirectories: new StringArraySetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"PhotoStructure won't descend into these root directories looking for assets.\",\n    defaultValue: () => DefaultExcludedLinuxRoots\n  }),\n\n  excludedMountpointPaths: new StringArraySetting({\n    aliases: [\"ignoredMountpoints\"],\n    category: SettingCategories.Filesystem,\n    description:\n      \"PhotoStructure won't descend into mountpoints that match these paths.\",\n    defaultValue: () => DefaultExcludedLinuxMountpointPaths\n  }),\n\n  excludedMountpointBasenames: new StringArraySetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"PhotoStructure won't descend into mountpoints that match these names.\",\n    defaultValue: () => DefaultExcludedLinuxMountpointBasenames\n  }),\n\n  validateMountpoints: new BooleanSetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"When true, PhotoStructure ignores volumes whose mountpoints do not exist. If any volumes are unhealthy, though, this may wedge volume handlers.\",\n    defaultValue: true\n  }),\n\n  mountpoints: new StringArraySetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"If set, this value will be used instead of the cross-platform mountpoints() method. Normally only for internal use.\"\n  }),\n\n  mountpointsTtlMs: new DurationSetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"How frequently should PhotoStructure scan for new volumes (so PhotoStructure can detect when drives are inserted or ejected)? Shorter than 10-15 seconds may cause issues on Windows. A value of 0 will cache indefinitely. This defaults to 15 minutes on Windows, which relies on polling. On Linux and macOS this is set to 0 because findmnt/gio and diskutil notify mountpoint changes without polling.\",\n    defaultValue: () => (isWin ? \"15m\" : \"0\") // docker should definitely be 0\n  }),\n\n  remoteFilesystemTypes: new StringArraySetting<string>({\n    category: SettingCategories.Filesystem,\n    description: `Filesystems with these types should always be considered \"remote\".`,\n    defaultValue: [\"sshfs\", \"s3fs\"]\n  }),\n\n  retainFileBirthtimes: new BooleanSetting({\n    category: SettingCategories.Filesystem,\n    description: `Should PhotoStructure try to retain file \"birth\" times (also known as \"creation\" times) when it copies files? If enabled, note that this is a best-effort approach--Linux and some remote filesystems (like SMB) do not support this feature.`,\n    defaultValue: () => true\n  }),\n\n  //\n  // Volumes\n  //\n\n  volumeUuidFilePaths: new StringArraySetting({\n    category: SettingCategories.Volumes,\n    description:\n      'PhotoStructure will append these paths to all mountpoints to look for previously-set volume universally unique identifiers (UUIDs). The first item in this list that exists will be used, and if \"writeVolumeUuidFiles\" is true, the first item in this list will be used to write the volume UUID (which will be the partition UUID, if available, or a random UUID if not available). Windows users should use a forward slash as a path separator.',\n    defaultValue: () => [\".uuid\", \"System Volume Information/IndexerVolumeGuid\"]\n  }),\n\n  readVolumeUuidFiles: new BooleanSetting({\n    category: SettingCategories.Volumes,\n    description: `When true, PhotoStructure uses \".uuid\" files found in the root directory of volumes as the volume universally unique identifier (UUID), which supports cross-host and cross-OS library portability. Set this to false if you don't want PhotoStructure to read these \".uuid\" files.\\nNote that \"globally unique identifier,\" or \"GUID,\" is synonymous with \"UUID\" in this case. Microsoft tends to use the term \"GUID\" instead of \"UUID.\"\\nSee https://photostructure.com/faq/what-is-a-volume for more information.`,\n    defaultValue: true\n  }),\n\n  writeVolumeUuidFiles: new BooleanSetting({\n    category: SettingCategories.Volumes,\n    description: `When true, PhotoStructure (tries to) write files with universally unique identifiers into the root directory of volumes, which enables cross-host library portability. Set this to false if you don't want PhotoStructure to try to write these \".uuid\" files. See https://photostructure.com/faq/what-is-a-volume for more information.`,\n    defaultValue: true\n  }),\n\n  writeVolumeUuidMountpointBlocklist: new StringArraySetting<string>({\n    category: SettingCategories.Volumes,\n    description: `Never try to write a volume UUID file to these directories.`,\n    defaultValue: [\"sshfs\", \"s3fs\"]\n  }),\n\n  volumeMetadataTtlMs: new DurationSetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"How frequently should PhotoStructure reload volume metadata (like bytes-free, which is used in a health check)? Values less than a minute are not necessary. A value of 0 will cache indefinitely.\",\n    defaultValue: \"15m\"\n  }),\n\n  //\n  // Networking\n  //\n\n  hostname: new OptionalStringSetting({\n    category: SettingCategories.Networking,\n    description:\n      \"If set, this overrides the local hostname. Useful under docker and when OSes change hostnames due to networking bugs (see macOS).\"\n  }),\n\n  localhost: new StringSetting({\n    category: SettingCategories.Networking,\n    description: `If \"exposeNetworkWithoutAuth\" is false, what value should PhotoStructure use for localhost? (Some firewalls are OK with \"127.0.0.1\", some require \"localhost\"). See https://letsencrypt.org/docs/certificates-for-localhost/ and https://photostructure.com/faq/troubleshooting/#windows-firewall-issues .`,\n    // See https://letsencrypt.org/docs/certificates-for-localhost/\n    // and https://tools.ietf.org/html/draft-ietf-dnsop-let-localhost-be-localhost-02\n    defaultValue: () => \"127.0.0.1\"\n  }),\n\n  httpPort: new IntegerSetting({\n    category: SettingCategories.Networking,\n    description: \"Network port for HTTP access to your PhotoStructure library.\",\n    defaultValue: 1787\n  }),\n\n  //\n  // Security\n  //\n\n  trustProxy: new StringSetting({\n    category: SettingCategories.Security,\n    description: `What reverse proxies should PhotoStructure \"trust\"? See <http://expressjs.com/en/guide/behind-proxies.html>.\\nThis setting should either be \"false\" (don't trust any proxies), \"loopback\", (only trust loopback/localhost), a single subnet (like \"192.168.1.0/24\"), or a comma-delimited set of subnets.`,\n    defaultValue: \"loopback\"\n  }),\n\n  exposeNetworkWithoutAuth: new BooleanSetting({\n    category: SettingCategories.Security,\n    description:\n      \"Normally the web service is only accessible to the computer running PhotoStructure. Setting this to true will expose your library to all computers on your network. You should own or trust all systems on that network, as there is no auth in PhotoStructure currently. Future versions of PhotoStructure will add authorization mechanisms, at which point this setting will be deleted.\\n**Don't enable this unless you know what you are doing**.\",\n    defaultValue: () => isDocker()\n  }),\n\n  cspReportOnly: new BooleanSetting({\n    category: SettingCategories.Security,\n    description:\n      \"DANGEROUS: do not enforce, and only report CSP violations. This should only be set to true temporarily to assist in debugging. See https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP .\",\n    defaultValue: () => false\n  }),\n\n  upgradeInsecureRequests: new BooleanSetting({\n    category: SettingCategories.Security,\n    description: `May PhotoStructure send the Upgrade-Insecure-Requests header? PhotoStructure will set the default to true automatically if it sees _any_ request is via https.\\nSet this explicitly to false if you access PhotoStructure via both http (inside your LAN) and https (outside your LAN).`,\n    defaultValue: () => false\n  }),\n\n  cspDirective: new OptionalStringSetting({\n    category: SettingCategories.Security,\n    description:\n      \"If you're seeing CSP errors with older browsers, add your externally-available base URL to this setting, and it will be appended to the CSP directives. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src .\",\n    exampleValue: () => \"https://myphotos.example.com\"\n  }),\n\n  disabledHelmetMiddleware: new StringEnumsSetting({\n    category: SettingCategories.Security,\n    description: `What Helmet middleware should PhotoStructure disable?\\nBy default, PhotoStructure enables all middleware, but if your reverse proxy is handling HTTP headers, you may want to remove some of Helmet's functionality.\\nDisable all middleware by using the value \"all\", but know that CSP management is handled by the \"cspDirective\" and \"cspReportOnly\" settings.\\nSee https://github.com/helmetjs/helmet#reference .`,\n    defaultValue: [],\n    strEnum: HelmetPlugins\n  }),\n\n  //\n  // Process management\n  //\n\n  // TODO:\n  // webProcs: new BoundedIntegerSetting({\n  //   category: SettingCategories.Processes,\n  //   description:\n  //     \"How many webservers should PhotoStructure spin up?\",\n  //   min: 1,\n  //   max: 8,\n  //   defaultValue: () => isTest() ? 2 : cpuInfo().length < 4 ? 1 : 2\n  // }),\n\n  shortProcessNames: new BooleanSetting({\n    category: SettingCategories.Processes,\n    description: `Should PhotoStructure name its own processes \"PhotoStructure\" + the name of the sub-process, or abbreviated \"phstr\"? This defaults to false on PhotoStructure for Desktops and true everywhere else.`,\n    defaultValue: () => !isElectron\n  }),\n\n  commandTimeoutMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"How long should PhotoStructure wait for a command that touches the filesystem (and doesn't do anything computationally expensive)? Note that external hard drives can take 10-15 seconds to spin up, and antivirus apps can hang for tens of seconds on slow machines, so values less than the default may result in undesired timeouts.\",\n    // There were filesystem timeout errors with 25 seconds:\n    defaultValue: () => \"16s\"\n  }),\n\n  minDelayBetweenSpawnMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"minDelayBetweenSpawnMillis\"],\n    description:\n      \"The shorter this time is, the faster PhotoStructure will ramp up parallelism at the start of a sync. Having a larger value here mitigates initial system load from forking. See https://photostructure.github.io/batch-cluster.js/classes/BatchClusterOptions.html#minDelayBetweenSpawnMillis .\",\n    defaultValue: () =>\n      encodeDuration(new BatchClusterOptions().minDelayBetweenSpawnMillis)!\n  }),\n\n  minDelayBetweenRetriesMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"minDelayBetweenSpawnMillis\"],\n    description:\n      \"If a task has an error, should we wait a bit before retrying? This may help temper error cascades.\",\n    defaultValue: () => \"250ms\"\n  }),\n\n  maxRetries: new IntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"If a task has an error, how many times should we retry before giving up?\\nIf you have a flaky network, this can help ensure imports are comprehensive.\\nSet this to 0 to disable retries.\",\n    defaultValue: () => 1\n  }),\n\n  streamFlushMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"streamFlushMillis\"],\n    description:\n      \"See https://photostructure.github.io/batch-cluster.js/classes/BatchClusterOptions.html#streamFlushMillis .\",\n    defaultValue: () => (isMac ? \"100ms\" : isWin ? \"200ms\" : \"30ms\")\n  }),\n\n  exiftoolProcsPerChild: new OptionalIntegerSetting({\n    category: SettingCategories.Processes,\n    description: `Each PhotoStructure process spins up an ExifTool when needed. Note that the \"web\" and \"sync\" services use exiftool, so the total number of exiftool processes will be several times larger than this value. If this is unset, this will default to roughly 50% of the number of supported concurrent imports.`\n  }),\n\n  sensitiveEnvRegExp: new StringSetting({\n    category: SettingCategories.Processes,\n    description: `PhotoStructure spawns several external processes, including \"exiftool\" and \"ffmpeg\".\\nPhotoStructure filters out environment keys  that are likely to contain sensitive information (like API access tokens or passwords) from these child processes so they aren't accidentally logged or accessible by external tools.\\nThis regex is applied case-insensitively.`,\n    defaultValue: () => DefaultSensitiveEnvRegexPattern\n  }),\n\n  syncExitTimeoutMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    description: `Wait at most this time for sync to shut down cleanly. This needs to be long enough to possibly copy the library database back to the remote filesystem if your library is stored on a network drive. Set to 0 to disable this timeout.`,\n    defaultValue: \"2m\"\n  }),\n\n  // TODO: delete this #smpfy\n  probationMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"Normally when subsystems crash, PhotoStructure restarts them after a delay. Unfortunately, if there is a persistent error, this means PhotoStructure keeps trying something that won't ever work; it looks busy, but it's just busy failing. To prevent this situation, PhotoStructure will shut down if there are high error rates within 2 minutes of starting. (2 minutes should be long enough to spin up the web process, sync process, and import at least one pending file). Setting this to 0 will prevent PhotoStructure from exiting due to high error rates.\",\n    defaultValue: \"2m\"\n  }),\n\n  minTimeBetweenServiceRestartsMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"If a service (like web or sync) is restarted due to an error, how many milliseconds must elapse before another restart is allowed? This helps prevent system load due to service flapping.\",\n    defaultValue: \"7s\"\n  }),\n\n  fatalErrorRatePerMinute: new IntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"If PhotoStructure sees errors at a higher rate per minute than this setting, PhotoStructure will shut down. If this value is too high, PhotoStructure may look busy, but it's just busy failing. If this value is set too low, temporary errors (due to network flakiness or USB hiccups) might shut down PhotoStructure needlessly.\",\n    defaultValue: 20\n  }),\n\n  minDiskFreeGb: new IntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"PhotoStructure will pause processing if the GB free on the disk that your library is stored on drops below this value. The value provided here will be multiplied by 1000^3. Note that many OSes will corrupt themselves when disks fill up, and SSDs can fail as they approach full capacity. A value of less than 8 may be unsafe (due to hibernation and OS update files).\\nSet this value to 0 to disable free disk space health checks.\",\n    defaultValue: 16\n  }),\n\n  cpuLoadPercent: new BoundedIntegerSetting({\n    category: SettingCategories.Processes,\n    description: `This setting is a rough goal for PhotoStructure to load the system during library synchronization. A higher value here will allow PhotoStructure to run more tasks in parallel, but may impact your system's responsiveness. Setting this value to 0 will still allow 1 import to run.\\nThis setting is ignored if \"maxConcurrentImports\" and \"sharpThreadsPerProcess\" are set.`,\n    defaultValue: 75,\n    min: 0,\n    max: 200\n  }),\n\n  timeoutThrottleCoeff: new FloatSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"When timeouts are detected, PhotoStructure throttles back concurrency automatically, with the assumption that some system is currently being overwhelmed and that less load should result in fewer failures due to timeouts.\\nSpecifically, concurrency will be set to 1 / current rate of timeouts per minute over the past several minutes.\\nThrottling will be more aggressive as this value approaches 0. For example a value of 0.1 will be very aggressive throttling. A value of 8 will only slow down sync after many soft timeouts.\\nDisable throttling by setting to 0.\",\n    defaultValue: 1\n  }),\n\n  maxConcurrentImports: new OptionalIntegerSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"maxSyncFileJobs\"],\n    advanced: () => true,\n    description: `How many imports can PhotoStructure schedule concurrently? This will be clamped between 1 and 32.\\nIf not set, a sensible value will be computed based on \"cpuLoadPercent\".\\nIf set explicitly, this and \"sharpThreadsPerProcess\" will override \"cpuLoadPercent\" and \"maxConcurrentImportsWhenRemote\" settings.`\n  }),\n\n  maxConcurrentImportsWhenRemote: new IntegerSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"maxSyncFileJobsWhenRemote\"],\n    description: `How many concurrent files can be imported if the library is on a remote volume? This defaults to 2 to try to avoid overwhelming HDD I/O on the remote NAS. If this is larger than (cpus.length * cpuLoadPercent) or max child processes given available memory, this value will be ignored.`,\n    defaultValue: 2\n  }),\n\n  sharpThreadsPerProcess: new BoundedIntegerSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"sharpThreadsPerJob\"],\n    advanced: () => true,\n    description: `How many image processing threads can be spun per process?\\nIf set to 0 (the default), PhotoStructure will pick an optimal value based on available memory and CPU cores.`,\n    min: 0,\n    max: 8, // we don't get faster throughput with > 8 gfx threads\n    defaultValue: 0\n  }),\n\n  processPriority: new StringEnumSetting({\n    category: SettingCategories.Processes,\n    description: `By default, PhotoStructure runs child processes with a \"below normal\" priority, so your system remains usable while imports run. Changing this value to \"normal\" or \"above normal\" may speed up imports but cause your system to be unresponsive. Changing this value to \"idle\" may prevent imports from running at all.\\nFor Linux and macOS systems, see https://en.wikipedia.org/wiki/Nice_%28Unix%29 .\\nFor Windows, see https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processpriorityclass?view=netframework-4.8 .`,\n    defaultValue: () => PriorityClasses.BelowNormal,\n    strEnum: PriorityClasses\n  }),\n\n  maxMemoryMb: new IntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"PhotoStructure will restart services if they use more than this value (measured in megabytes, or 1,000,000 bytes). Note that this is not the allocated memory. See maxRssMemoryMb for total allocated.\\nSet to 0 to deactivate this check.\",\n    defaultValue: () => 2048\n  }),\n\n  maxTasksPerProcess: new BoundedIntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"PhotoStructure will recycle threads and worker processes after they handle this number of requests. Smaller values may reduce overall memory pressure. Larger values amortize startup costs over fewer restarts.\",\n    defaultValue: () => (isTest() ? 50 : 500),\n    min: 1,\n    max: 5000\n  }),\n\n  //\n  // Auth\n  //\n\n  enableArchive: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Archive\" button in Asset views will be visible and enabled for all visitors.`,\n    defaultValue: () => true\n  }),\n\n  enableDelete: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Delete\" button in Asset views will be visible and enabled for all visitors.\\nThis is a temporary setting until PhotoStructure enforces authentication/authorization.`,\n    defaultValue: () => true\n  }),\n\n  enableEmptyTrash: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Empty Trash\" button will be enabled for all visitors.\\nUntil PhotoStructure has visitor user levels, if you don't trust all your users, disable this!\\nThis setting is disabled by default if exposeNetworkWithoutAuth is true.\\nThis is a temporary setting until PhotoStructure enforces authentication/authorization.`,\n    defaultValue: () => !exposeNetworkWithoutAuth()\n  }),\n\n  enableRemove: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Remove asset\" button in Asset views will be visible and enabled for all visitors.\\nThis is a temporary setting until PhotoStructure enforces authentication/authorization.`,\n    defaultValue: () => true\n  }),\n\n  enableRemoveAssets: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Remove Assets\" buttons will be visible and enabled for all visitors.\\nUntil PhotoStructure has visitor user levels, if you don't trust all your users, disable this!\\nThis setting is disabled by default if exposeNetworkWithoutAuth is true.\\nThis is a temporary setting until PhotoStructure enforces authentication/authorization.`,\n    defaultValue: () => !exposeNetworkWithoutAuth()\n  }),\n\n  argon2TimeCost: new IntegerSetting({\n    category: SettingCategories.Auth,\n    description: `PhotoStructure encrypts user passwords with Argon2. This value sets the Argon2 \"time\" cost parameter.`,\n    // NOTE! Keep in sync with MetaSettings.setQuickSyncMode:\n    defaultValue: 8\n  }),\n\n  argon2MemoryCostMB: new IntegerSetting({\n    category: SettingCategories.Auth,\n    description: `PhotoStructure encrypts user passwords with Argon2. This value sets the Argon2 \"memory\" cost parameter, and is specified in megabytes. Each parallel thread will consume this amount of RAM: don't exceed your system memory.`,\n    // NOTE! Keep in sync with MetaSettings.setQuickSyncMode:\n    defaultValue: 64\n  }),\n\n  argon2Parallelism: new IntegerSetting({\n    category: SettingCategories.Auth,\n    description: `PhotoStructure encrypts user passwords with Argon2. This value sets the Argon2 \"parallelism\" parameter. RAM consumption will be ((this value) × argon2MemoryCost) KB of RAM: don't exceed your system memory.`,\n    // NOTE! Keep in sync with MetaSettings.setQuickSyncMode:\n    defaultValue: 1\n  }),\n\n  //\n  // DB\n  //\n\n  // Use primary/replica terminology:\n\n  forceLocalDbReplica: new BooleanSetting({\n    category: SettingCategories.Paths, // NOT .Db! The location may be local or remote depending on configuration.\n    description:\n      \"Libraries on remote filesystems can suffer from bad performance and inconsistent transactions due to slow file I/O and missing file locking mechanics. When opening libraries on remote filesystems, or if this setting is `true`, PhotoStructure will copy the library database to the `cacheDir` and perform I/O against this local replica. Changes made to the local db replica are then periodically copied back to the remote library.\\nIf you've overridden this value in the past, know that v23.5 and after should automatically set this to the correct value for you.\\nFor more details, see https://forum.photostructure.com/t/whats-force-local-db-replica/837 and https://photostructure.com/about/2023-release-notes/#-sqlite-improvements .\",\n    defaultValue: () => false\n  }),\n  dbRetries: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"If SQLITE_BUSY is encountered, how many times should an operation be retried before giving up?\",\n    advanced: () => true,\n    defaultValue: 20\n  }),\n\n  // From https://sqlite.org/pragma.html#pragma_optimize\n\n  // \"Long-running applications might also benefit from setting a timer to run\n  // \"PRAGMA optimize\" every few hours.\"\n\n  dbBackupRetentionCount: new BoundedIntegerSetting({\n    aliases: [\"dbBackupsCount\"],\n    category: SettingCategories.Db,\n    description:\n      \"How many prior backups should PhotoStructure retain? These will typically be 10-500 MB, depending on the size of your library.\\nWe don't retain that many backups by default because they get stale pretty quickly, as they fall out of sync with your filesystem and previews directory contents.\",\n    advanced: () => true,\n    defaultValue: 3,\n    max: 128,\n    min: 1\n  }),\n\n  dbAutoVacuumMode: new StringEnumSetting({\n    category: SettingCategories.Db,\n    description:\n      \"SQLite can auto-vacuum your library database, which ensures the database stays performant. If this is set to NONE, PhotoStructure will periodically run vacuum and optimizations from the sync process. For details, https://sqlite.org/pragma.html#pragma_auto_vacuum .\",\n    advanced: () => true,\n    strEnum: AutoVacuumModes,\n    defaultValue: AutoVacuumModes.INCREMENTAL\n  }),\n\n  dbWalCheckpointType: new StringEnumSetting({\n    category: SettingCategories.Db,\n    description:\n      \"The write-ahead log of your PhotoStructure library database is checkpointed periodically.\\n- Choosing 0 will disable SQLite's built-in automatic PASSIVE checkpointing.\\n- PASSIVE, FULL, RESTART, and TRUNCATE values will enable.\\nSee https://sqlite.org/pragma.html#pragma_wal_checkpoint .\",\n    strEnum: CheckpointTypes,\n    defaultValue: CheckpointTypes.TRUNCATE\n  }),\n\n  dbWalAutoCheckpoint: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"The write-ahead log of your PhotoStructure library database is checkpointed periodically by the sync subprocess.\\n- Choosing 0 will disable SQLite's built-in automatic PASSIVE checkpointing.\\nSee https://sqlite.org/pragma.html#pragma_wal_autocheckpoint .\",\n    defaultValue: 1000\n  }),\n\n  dbInvalidFKThreshold: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"When PhotoStructure runs a database recovery, it will check for foreign key violations. If there are fewer than this number of invalid rows, PhotoStructure will drop those rows, with the hope that the next sync will finish the recovery.\\nSet this to 0 to disable this recovery step, which will make any foreign key violation fatal.\",\n    defaultValue: 64\n  }),\n\n  dbSynchronousMode: new StringEnumSetting({\n    category: SettingCategories.Db,\n    description: `Change SQLite's synchronous mode.\\n\"OFF\" will cause data corruption. \"FULL\" and \"EXTRA\" may be required if you're seeing dataloss.\\nSee https://sqlite.org/pragma.html#pragma_synchronous .`,\n    strEnum: SynchronousModes,\n    defaultValue: SynchronousModes.NORMAL\n  }),\n\n  dbRepairMode: new StringEnumSetting({\n    category: SettingCategories.Db,\n    description: `PhotoStructure will automatically attempt to repair library databases that don't pass validation tests. SQLite has two repair strategies:\\n- \"dump\", which will recover from minor errors and normally retains the current schema\\n- \"recover\", which will recover as much data as possible from corrupt db. Unfortunately, this can result in an invalid and unusable schema, which is why PhotoStructure defaults to \"dump\".\\nNote that PhotoStructure validates the schema after a repair, and will report via logs and the health check system if there are any issues.`,\n    strEnum: RepairModes,\n    defaultValue: RepairModes.dump\n  }),\n\n  maxBusyDbMs: new DurationSetting({\n    category: SettingCategories.Db,\n    description:\n      \"SQLite supports concurrent readers but concurrent writers may collide, causing a LOCKED or BUSY error. PhotoStructure will retry the db operation for maxBusyDbMs milliseconds. This defaults to 45 seconds to accommodate slow hard drive spinups and VACUUM write locks.\",\n    advanced: () => true,\n    defaultValue: () => \"45s\"\n  }),\n\n  dbBusyTimeoutMs: new DurationSetting({\n    category: SettingCategories.Db,\n    description:\n      \"SQLite can time out requests if the db file is unavailable. PhotoStructure will retry those requests (up to `maxBusyDbMs`). A shorter time may help overall throughput, but may require more work done in retry logic. A longer time may be better for slower machines and slower disks. Note that setting this value to be lower than disk I/O latency (~1ms-100ms) will cause all database queries to fail.\",\n    advanced: () => true,\n    defaultValue: () => \"2s\"\n  }),\n\n  dbBackupIntervalMs: new DurationSetting({\n    category: SettingCategories.Db,\n    description:\n      \"How frequently should PhotoStructure backup your library database?\",\n    advanced: () => true,\n    defaultValue: () => (isTest() ? \"15s\" : \"30m\")\n  }),\n\n  // We're using a bounded float so we can get fractional minutes for test, and\n  // users don't have to think in milliseconds.\n  dbBackupIntervalMinutes: new BoundedFloatSetting({\n    category: SettingCategories.Db,\n    description: `This setting was replaced by \"dbBackupIntervalMs\".`,\n    min: isTest() ? 0.5 : 1, // < force a backup in the middle of the SyncService and ModelDbUpdater tests to exercise pause-for-vacuum\n    max: 60 * 24,\n    advanced: () => true,\n    defaultValue: () => (isTest() ? 0.5 : 30)\n  }),\n\n  dbPageSizeBytes: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"This value will be used for SQLite's page_size PRAGMA. A default of 4k should be OK. This must be a power of 2. See https://sqlite.org/pragma.html#pragma_page_size for more information.\",\n    advanced: () => true,\n    defaultValue: 4096\n  }),\n\n  dbCacheSizeMb: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"This value will be used for SQLite's cache_size PRAGMA. The cache_size pragma should ideally be set such that the whole DB can be in memory. Note that PhotoStructure automatically increases this value to accommodate your library as it gets larger, if there is sufficient memory, so this setting is only a lower bound. See https://sqlite.org/pragma.html#pragma_cache_size for more information.\",\n    advanced: () => true,\n    defaultValue: 128\n  }),\n\n  dbBatchSelectSize: new BoundedIntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"How many objects can be selected at at time? The default should be fine. (Exposed for performance tests).\",\n    advanced: () => true,\n    defaultValue: 128,\n    min: 1,\n    max: 900\n  }),\n\n  dbBatchUpsertSize: new BoundedIntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"How many objects can be upserted at at time? The default should be fine. (Exposed for performance tests).\",\n    advanced: () => true,\n    defaultValue: 16,\n    min: 1,\n    max: 500\n  }),\n\n  dbForceRecover: new BooleanSetting({\n    category: SettingCategories.Db,\n    aliases: [\"dbForceRebuild\"],\n    transient: true,\n    description:\n      \"SQLite databases can sometimes be repaired with SQLite's .recover tooling. Set this to true to have PhotoStructure attempt a .recover on startup.\\nThis can take a while to perform, especially on large libraries or slow computers: don't set this value to true normally.\\nSee https://sqlite.org/recovery.html .\",\n    defaultValue: () => false\n  }),\n\n  dbBackupRemoteOnSuspend: new BooleanSetting({\n    aliases: [\"backupRemoteDbOnSuspend\"],\n    category: SettingCategories.Db,\n    description:\n      \"Run a database backup when system suspend is requested and the database is on a remote volume.\",\n    defaultValue: () => true\n  }),\n\n  // dbFtsTokenizer: new StringSetting({\n  //   category: SettingCategories.Db,\n  //   description: `PhotoStructure uses SQLite's full-text search index to support queries. The value provided here will be fed to the \"tokenize\" option. You may want to try the new \"trigram\" tokenizer, if you want substring tag path matches. Restart PhotoStructure to make this take affect.`,\n  //   defaultValue: \"unicode61\"\n  // }),\n\n  //\n  // Files\n  //\n\n  trySoftDeletes: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, \"Empty Trash\" will _try_ to move files into the \"Trash can\" or \"Recycle bin\", when possible. If moving a file into the trash can fails (due to permissions or filesystem functionality), the file will be \"hard\" deleted (or \"unlinked\"). This setting defaults to false on docker.`,\n    defaultValue: () => (isTest() ? true : !isDocker())\n  }),\n\n  //\n  // Health checks\n  //\n\n  skipHealthCheckIds: new StringEnumsSetting({\n    category: SettingCategories.HealthChecks,\n    description:\n      \"List of health check IDs to skip. Note that windows skips the 'proc-not-superuser' check by default, as most people on Windows run as an admin user.\",\n    defaultValue: isWin ? [\"proc-not-superuser\"] : [],\n    strEnum: HealthCheckIds\n  }),\n\n  //\n  // Video\n  //\n\n  ffmpegHwaccel: new StringSetting({\n    category: SettingCategories.Video,\n    description: `FFmpeg supports both software and hardware encoders. Valid values include \"auto\" which should work for everyone, \"cuda\" for NVIDIA GPUs, or use \"disable\", \"no\", \"false\", or \"\" to disable. Run \"ffmpeg -hwaccels\" to see supported acceleration methods. See https://forum.photostructure.com/t/hardware-accelerated-encoding-transcoding/166>, https://trac.ffmpeg.org/wiki/HWAccelIntro , and <https://github.com/NVIDIA/nvidia-docker for more details.`,\n    defaultValue: \"disable\"\n  }),\n\n  ffmpegThreads: new OptionalIntegerSetting({\n    category: SettingCategories.Video,\n    advanced: () => true,\n    description: `When transcoding videos, what value should we give to \"ffmpeg -threads\"?\\nThis defaults to min(1, <# of cpus> * cpuLoadPercent / 4).\\nNote that \"ffmpeg -threads\" _most likely doesn't do what you expect_: a value of 0 will consume all CPUs (which is why it isn't allowed). A value of N will actually mean > N CPUs are used (due to demux threading and other details). See https://stackoverflow.com/a/41010102 .`\n  }),\n\n  ffmpegAvcTranscodeArgs: new StringArraySetting({\n    category: SettingCategories.Video,\n    aliases: [\"ffmpegTranscodeArgs\"],\n    description: `The following are the default arguments added to transcode requests made to ffmpeg, when ffmpeg is available. The following arguments will follow \"ffmpeg -loglevel error -threads T -i INPUT_FILE_PATH\" (where T is replaced by ~half the available CPU threads, and INPUT_FILE_PATH is the full native pathname to the source video).\\nIf your videos are in high colorspace like bt2020, you may want to remove the \"-vf\" and \"colorspace=all=bt2020:iall=bt601-6-625:fast=1\" options, but this may cause rendering issues on SDR displays. See https://forum.photostructure.com/t/1003/3 for more details.\\nCAUTION: this is an advanced setting. Invalid values may cause videos that require transcoding to not be imported, or not be viewable on some browsers.`,\n    defaultValue: [\n      \"-c:a\",\n      \"aac\",\n      \"-c:v\",\n      \"libx264\",\n      // pix_fmt and profile are required by firefox (!!)\n      \"-pix_fmt\",\n      \"yuv420p\",\n      \"-vf\",\n      \"colorspace=all=bt709:iall=bt601-6-625:fast=1\",\n      \"-colorspace\",\n      \"bt709\",\n      // See\n      // https://forum.photostructure.com/t/trouble-transcoding-iphone8-video-possibly-stalling-progress-of-library-import/1003/3?u=mrm\n      // and\n      // https://medium.com/invideo-io/talking-about-colorspaces-and-ffmpeg-f6d0b037cc2f\n      // \"-color_trc\", \"smpte2084\", \"-color_primaries\", \"bt2020\",\n      // https://ffmpeg.org/ffmpeg-filters.html#colorspace\n      // https://ffmpeg.org/ffmpeg-formats.html#Options-11\n\n      // https://discord.com/channels/818905168107012097/818907922767544340/872836920948961381\n      // Zirro — 08/05/2021 A suggestion in case you haven't heard of it - you\n      // might want to look into using -movflags +faststart as part of the\n      // default ffmpeg transcoding arguments. It places the moov atom which\n      // contains essential metadata for streaming the video at the start rather\n      // than the end of the MP4 file. Otherwise browsers (and other streaming\n      // clients) have to download the whole file before they can start playing\n      // it, sometimes delaying playback significantly. The option is widely\n      // used and recommended, so I don't believe there are any concerns with\n      // regards to compatibility from using it. ( for the curious, looks like\n      // there's been some movement on supporting more pixel formats in Firefox\n      // within recent months:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1459526 )\n      \"-movflags\",\n      \"+faststart\"\n      // \"-profile:v\",\n      // \"high\"\n    ]\n  }),\n\n  transcodeMaxResolution: new IntegerSetting({\n    category: SettingCategories.Video,\n    description: `If a video that needs transcoding exceeds this total pixel resolution, the transcoded version will be downsampled to be at most this resolution, preserving the original aspect ratio.\\nVideos that are smaller than this resolution will not be downsampled.\\nThis setting does not work with VLC (use ffmpeg instead--it's faster!).\\nUse 2073600 for \"Full HD\", or 1080P.\\nUse 921600 for 720P (1280 × 720).\\nNote that in any case, videos that don't need transcoding will not be downsampled.\\nSet this to 0 to disable this setting.`,\n    defaultValue: 0\n  }),\n\n  transcodeVideos: new BooleanSetting({\n    category: SettingCategories.Video,\n    description: `Should videos that are not in a browser-supported format be transcoded during import? Note that this is a plus-only feature. FFmpeg or VLC must be installed. Note that this *dramatically* slows down imports, and *dramatically* increases the disk space your library will need to use, but allows you to see videos that aren't directly supported by your browser. If this is set to false, your browser will only render videos directly supported by your OS.`,\n    defaultValue: true\n  }),\n\n  transcodeBitrateQVGA: new IntegerSetting({\n    category: SettingCategories.Video,\n    description:\n      \"What max bitrate should PhotoStructure encode QVGA (320 × 240) videos? Videos with resolutions between QVGA and UHD will use an interpolated value between these two settings, and will not exceed the encoded bitrate of the original video. This value is in kilobytes per second.\",\n    defaultValue: 800\n  }),\n\n  transcodeBitrateUHD: new IntegerSetting({\n    category: SettingCategories.Video,\n    description:\n      \"What max bitrate should PhotoStructure encode UHD (3840 × 2160) videos? Videos with resolutions between QVGA and UHD will use an interpolated value between these two settings, and will not exceed the encoded bitrate of the original video. This value is in kilobytes per second.\",\n    defaultValue: 18_000\n  }),\n\n  doNotTranscodeMimeTypes: new StringArraySetting({\n    category: SettingCategories.Video,\n    description: `Videos are transcoded when the \"transcodeVideos\" is set to true and is not one of the following MIME types.\\nSee https://www.iana.org/assignments/media-types/media-types.xhtml#video for a complete list.\\nIf you are setting this via an environment variable, you can separate the values either like a PATH (like \"video/quicktime:video/mp4\") or use JSON encoding (like \"['video/quicktime','video/mp4']\").`,\n    defaultValue: () => [\n      \"video/quicktime\",\n      \"video/mp4\",\n      \"video/mpv\",\n      \"video/mp2t\"\n    ]\n  }),\n\n  doNotTranscodeVideoCodecs: new StringArraySetting({\n    category: SettingCategories.Video,\n    description: `Videos are transcoded when the \"transcodeVideos\" is set to true and is not one of the following video codecs. The video codec may be stored in the \"VideoCodec\", \"CompressorID\", or \"CompressorName\" tags.`,\n    defaultValue: () => [\"avc1\"] // CompressorID: \"hvc1\" is HEVC.\n  }),\n\n  doNotTranscodeAudioCodecs: new StringArraySetting({\n    category: SettingCategories.Video,\n    description: `Videos are transcoded when the \"transcodeVideos\" is set to true and is not one of the following audio codecs. The audio codec is stored in the \"AudioCodec\" tag.`,\n    defaultValue: () => [\"mp4a\", \"sowt\"]\n  }),\n\n  //\n  // TOOLS\n  //\n\n  enableSIMD: new BooleanSetting({\n    category: SettingCategories.Tools,\n    description: `Should PhotoStructure enable SIMD extensions when running image operations? This defaults to false on macOS and Raspberry Pis due to instability on those platforms.`,\n    // isTest() to make the result consistent across CI:\n    defaultValue: () => (isRaspberryPi() ? false : true)\n  }),\n\n  enableVipsCache: new BooleanSetting({\n    category: SettingCategories.Tools,\n    description: `Should PhotoStructure enable VIPS caching, which may help speed up image operations? Note that this increases memory usage, and cache hit rates are low.`,\n    defaultValue: () => false\n  }),\n\n  showFileInFolderUsesThunar: new BooleanSetting({\n    category: SettingCategories.Tools,\n    description: `If we're on Linux, should we use Thunar (via dbus) to \"show file in folder\"?`,\n    defaultValue: false\n  }),\n\n  showFileInFolderUsesFileUri: new BooleanSetting({\n    category: SettingCategories.Tools,\n    description: `Does the showFileInFolderCommand expect a file: URI to the file? If this is false, the native path will be appended instead.`,\n    exampleValue: () => true,\n    defaultValue: () => isLinux\n  }),\n\n  showFileInFolderCommand: new StringArraySetting({\n    category: SettingCategories.Tools,\n    description: `If set, the first argument will be used as a command (or path to command), and the subsequent arguments (if present) will be used as arguments. The native path to the file or the file: URI will be appended, based on the value given to the \"showFileInFolderUsesFileUri\" setting. If this is set to an empty array, the default tool for your platform will be used instead: \"nautilus -s\" on linux, \"open -R\" on mac, and \"explorer /select\" on Windows.\\nThis is provided to support Linux desktops that don't use Gnome.`,\n    defaultValue: []\n  }),\n\n  dcraw_emuPath: new StringSetting({\n    category: SettingCategories.Tools,\n    description: `This should be the absolute, native path to the \"dcraw_emu\" binary on this system. If this is set to \"dcraw_emu\", PhotoStructure will search your $PATH. See https://www.libraw.org/docs/Samples-LibRaw.html .`,\n    defaultValue: \"dcraw_emu\"\n  }),\n\n  ffmpegPath: new StringSetting({\n    category: SettingCategories.Tools,\n    description: `This should be the absolute, native path to the \"ffmpeg\" binary on this system. If this is set to \"ffmpeg\", PhotoStructure will search your $PATH. PhotoStructure prefers using ffmpeg to vlc. See https://photostructure.com/getting-started/video-support/ .`,\n    defaultValue: \"ffmpeg\"\n  }),\n\n  heifConvertPath: new StringSetting({\n    category: SettingCategories.Tools,\n    description: `This should be the absolute, native path to the \"heif-convert\" binary on this system. If this is set to \"heif-convert\", PhotoStructure will search your $PATH. See https://photostructure.com/getting-started/heif-support/ .`,\n    defaultValue: \"heif-convert\"\n  }),\n\n  powerShellArgs: new StringArraySetting({\n    category: SettingCategories.Tools,\n    description: `The following are the default arguments added to spin up PowerShell on Windows devices.\\nSee https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_powershell_exe?view=powershell-5.1 for all arguments that PowerShell.exe accepts.\\nSee https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-5.1 for a description of Bypass.\\nSee https://forum.photostructure.com/t/eliminate-powershell-profile-and-execution-policy-related-errors/184 for more details about why this needs to be configurable.\\n(Versions prior to v1.0.0 only specified \"-NoLogo\").`,\n    defaultValue: [\"-NoLogo\", \"-NoProfile\", \"-ExecutionPolicy\", \"Bypass\"]\n  }),\n\n  powerShellCulture: new StringSetting({\n    category: SettingCategories.Tools,\n    description:\n      \"If set to a non-blank value, PhotoStructure on Windows machines will set PowerShell's `[System.Threading.Thread]::CurrentThread.CurrentCulture` to this value. This allows PhotoStructure to parse PowerShell output reliably.\",\n    defaultValue: () => \"en-US\"\n  }),\n\n  powerShellProcs: new IntegerSetting({\n    category: SettingCategories.Tools,\n    description:\n      \"How many PowerShell child processes may each PhotoStructure process run? Defaults to max(2, (maxCpus() / 4)).\",\n    defaultValue: () => 2\n  }),\n\n  toolPaths: new StringArraySetting({\n    category: SettingCategories.Tools,\n    description: `These paths are appended to the PATH to ensure PhotoStructure can find and run external tools like ffmpeg. Use your operating system's separator to separate paths (\":\" for mac and linux, \";\" for windows).`,\n    defaultValue: () => [] as string[] // < set by setSettingsDefaults()\n  }),\n\n  vlcPath: new StringSetting({\n    category: SettingCategories.Tools,\n    description: `This should be the absolute, native path to the \"vlc\" binary on this system. If this is set to \"vlc\", PhotoStructure will search your $PATH.`,\n    defaultValue: \"vlc\"\n  }),\n\n  //\n  // Electron\n  //\n\n  updateChannel: new StringEnumSetting({\n    category: SettingCategories.Desktops,\n    description:\n      'TL:DR; keep this on \"stable.\" This setting only applies to PhotoStructure for Desktops, and controls which builds of PhotoStructure you are eligible to automatically update to. Please note that \"prealpha\" and \"alpha\" builds may not even launch, and \"beta\" builds have not been thoroughly tested. See https://forum.photostructure.com/t/alpha-beta-stable-and-latest-what-should-you-use/274 .',\n    defaultValue: () => (isTest() ? \"stable\" : channel()),\n    strEnum: UpgradeChannels\n  }),\n\n  updateOnLaunch: new BooleanSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"If true, PhotoStructure will check for updates automatically on launch.\",\n    defaultValue: true\n  }),\n\n  updateCheckMinutes: new IntegerSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"While running, PhotoStructure will check periodically for updates. The default is daily.\\nSet this to 0 to disable automatic updates.\",\n    defaultValue: 60 * 24\n  }),\n\n  autoHideMenuBar: new BooleanSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"If true, PhotoStructure for Desktops on Windows and Linux will auto hide the menu bar unless the Alt key is pressed.\",\n    defaultValue: false\n  }),\n\n  hideOnLaunch: new BooleanSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"If true, PhotoStructure for Desktops will not open the main window when launched. The tray icon will still be visible.\\nThis setting is ignored by PhotoStructure for Server editions.\",\n    defaultValue: false\n  }),\n\n  pauseSyncOnBattery: new BooleanSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"If true, PhotoStructure for Desktops will pause sync when the system is on battery power.\\nThis setting is ignored by PhotoStructure for Server editions.\",\n    defaultValue: false\n  }),\n\n  //\n  // Reporting\n  //\n\n  email: new OptionalStringSetting({\n    category: SettingCategories.Reporting,\n    description:\n      \"If set, this email will be used for license subscriptions and added to error reports, so we can contact you to help debug the issue. It is not required. Setting a value here does not subscribe you to any marketing emails.\",\n    exampleValue: () => \"email@example.com\",\n    advanced: () => false\n  }),\n\n  reportErrors: new BooleanSetting({\n    category: SettingCategories.Reporting,\n    description:\n      \"If true, PhotoStructure will send crash reports when it encounters errors. Crash reports may include the path to the file that caused an error, system metadata, and recent log messages.\",\n    defaultValue: true,\n    advanced: () => false\n  }),\n\n  maxErrorsPerDay: new IntegerSetting({\n    category: SettingCategories.Reporting,\n    description:\n      \"Set this to zero to remove all bugs in PhotoStructure.\\nHUR HUR #DADJOKE\\nIf your system generates more than this number of errors in the course of a day, the subsequent error reports will not be reported.\",\n    defaultValue: 3\n  }),\n\n  //\n  // WEB\n  //\n\n  minStreamCorrPct: new BoundedIntegerSetting({\n    category: SettingCategories.Web,\n    description: `Streams (shown on the asset page) are coalesced when the dice coefficient of their contents are greater than this value. A value of 100 requires streams to match exactly. A value of ~50 allows streams with a couple differences to be considered the \"same\" stream.`,\n    defaultValue: () => 50,\n    max: 100,\n    min: 1\n  }),\n\n  lazyLoadExtraVh: new IntegerSetting({\n    category: SettingCategories.Web,\n    description: `PhotoStructure only loads photos as they come close to the viewport. This setting determines what \"close to the viewport\" means, and is measured in \"vh\" units, or percentage points of your visitor's browsers view height.\\nThe default is 50, so approximately the next 50% of the screen will be pre-loaded before the user scrolls.\\nIf you have fast hardware and fast network, you could try bumping this up to 200.\\nIf you have very slow network, you might want to set this to 0.`,\n    defaultValue: 50\n  }),\n\n  hiddenHomeTags: new StringArraySetting({\n    category: SettingCategories.Web,\n    description: `The given root tags will be omitted from the home page. (Valid values include \"When\", \"Camera\", \"Lens\", \"Type\", \"Fs\", and \"Keyword\").`,\n    defaultValue: () => [\"Type\"]\n  }),\n\n  placeholderThumbs: new BooleanSetting({\n    category: SettingCategories.Web,\n    description:\n      \"Render missing asset previews as placeholder images (only useful for customer support).\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  fastForwardEmptyTags: new BooleanSetting({\n    category: SettingCategories.Web,\n    description: `When browsing tags in the UI, should tags that only have one child tag and no direct assets be skipped, or \"fast-forwarded,\" over? See https://forum.photostructure.com/t/volume-id-shows-as-a-tag/754/5 for context.`,\n    defaultValue: true\n  }),\n\n  // TODO:\n\n  // sessionTimeoutHours: new BoundedIntegerSetting({\n  //   category: SettingCategories.Web,\n  //   description:\n  //     \"How long should unused HTTP sessions exist before requiring visitors to log back in? This defaults to 180 days, just to maximize convenience.\",\n  //   defaultValue: 24 * 30 * 6,\n  //   max: 24 * 365,\n  //   min: 1\n  // }),\n\n  //\n  // Sync\n  //\n\n  syncReportsDir: new StringSetting({\n    category: SettingCategories.Sync,\n    description: `Detailed reports for every sync are stored in this directory, which defaults to \".photostructure/sync-reports\" within your PhotoStructure library. Absolute paths here are supported.`,\n    defaultValue: () => \".photostructure/sync-reports\"\n  }),\n\n  syncReportMaxRows: new IntegerSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"Some software can't open large CSVs, so PhotoStructure will start a new sync report if the rows exceed this value. Excel and LibreOffice can open million-row CSVs, so that's our default.\",\n    defaultValue: () => 1_000_000\n  }),\n\n  quickSyncMode: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should PhotoStructure disable a bunch of features to make imports faster? Note that this disables image validation, video transcoding, image hashing (required for good deduplication), metadata inference, and more efficient preview encoding. It is true by default on Raspberry Pis and false everywhere else.`,\n    defaultValue: () => isRaspberryPi()\n  }),\n\n  taskTimeoutMs: new DurationSetting({\n    category: SettingCategories.Sync,\n    aliases: [\"taskTimeoutMillis\"],\n    description:\n      \"What's the longest time it can validly take to fetch a file SHA, generate image previews for an asset, compute an image hash, or extract tags for a file?\\nOn a reasonable server and disk, these tasks should take a handful of seconds, but the default allows for a (busy!) RPi on a slow, remote disk to not timeout.\",\n    defaultValue: () => \"2m\"\n  }),\n\n  // it's \"scanPaths\", so \"scan\" should match here (rather than the \"sync\" prefix):\n  scanLibraryFirst: new BooleanSetting({\n    aliases: [\"syncLibraryFirst\"],\n    category: SettingCategories.Sync,\n    description:\n      \"Should PhotoStructure scan your library before all other paths are synchronized?\\nThis defaults to true if you are using automatic organization, to make sure existing files in your library are in sync with your library database. This prevents additional copies of the same SHA being copied into your library directory if you have automatic organization enabled.\",\n    defaultValue: true\n  }),\n\n  scanLibraryLast: new BooleanSetting({\n    aliases: [\"syncLibraryLast\"],\n    category: SettingCategories.Sync,\n    description:\n      \"Should PhotoStructure scan your library after all other paths are synchronized?\",\n    defaultValue: false\n  }),\n\n  progressRetentionDays: new IntegerSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"How many days of sync progress should we keep around in the database before it's removed?\",\n    defaultValue: 180\n  }),\n\n  progressStaleDays: new IntegerSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When sync starts, it tries to pick up where it was previously, but this doesn't make sense if the prior work was done a while ago, as it is more likely that the filesystem has changed since.\",\n    defaultValue: 6\n  }),\n\n  copyToLibraryMimeTypes: new StringArraySetting({\n    category: SettingCategories.Sync,\n    description: `When \"automatic organization\" is enabled, files whose mimetypes are included in this list will be copied into your originals directory.\\nNote that MIME types can include an asterisk to do glob-matching.\\nSee the related system setting \"copyAssetsToLibrary\".\\nA list of MIME types are here: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types .`,\n    defaultValue: () => [\"image/*\", \"video/*\"]\n  }),\n\n  onlyNativeFileCopy: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should PhotoStructure skip the built-in file copy code, and only use the \"OS native\" file copy mechanism?\\nPhotoStructure is typically faster than native file copies by 2x or more.\\nIf true, PhotoStructure will use \"cp\" on macOS and Linux, and PowerShell \"Copy-Item\" on Windows.`,\n    defaultValue: false\n  }),\n\n  verifyFileCopies: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should PhotoStructure verify all file copies by comparing SHAs of the source and destination? This shouldn't be necessary on most OSes and filesystems, and slows down library imports.`,\n    defaultValue: true\n  }),\n\n  assetPathnameFormat: new StringSetting({\n    category: SettingCategories.Sync,\n    description: `If you opt into \"automatic organization\" (see the setting \"copyAssetsToLibrary\"), they will be copied into <originals directory>/<result of assetPathnameFormat>.\\n- See the originalsDir system setting for what your <originals directory> is (it defaults to your library root directory).\\n- Please encode this path with forward-slashes, even if you're on Windows.\\n- If any patterns resolve to including forward-slashes, know that will be interpreted as subdirectories.\\n- If you want to add a static path, escape the pathname with single quotes (like \"'photos'/y/MM/dd\").\\n- The result of this will always be interpreted as a relative path from your PhotoStructure originals directory.\\n- Use token \"BASE\" as a shorthand for the original basename (\"photo.jpg\" for \"/path/to/photo.jpg\").\\n- Use token \"NAME\" as a shorthand for the original filename, without the file extension (\"photo\" for \"/path/to/photo.jpg\").\\n- Use token \"PARENT\" as a shorthand for the original file's parent directory name (\"to\" for \"/path/to/photo.jpg\").\\n- Use token \"GRANDPARENT\" as a shorthand for the original file's grandparent directory name (\"path\" for \"/path/to/photo.jpg\").\\n- Use token \"EXT\" for the filename's extension without the \".\" prefix (like \"jpg\" for \"/path/to/photo.jpg\").\\n- Use token \"ISO\" as a shorthand for \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\".\\n- You can escape other static text by wrapping with single quotes.\\n- For other tokens, see https://moment.github.io/luxon/#/formatting?id=table-of-tokens .\\n- See https://forum.photostructure.com/t/how-to-change-the-naming-structure/1184/2?u=mrm for more details.`,\n    defaultValue: \"y/y-MM-dd/BASE\"\n  }),\n\n  writeSourceTagToLibraryCopies: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should PhotoStructure write to the \"Source\" tag add metadata to assets copied into your library that includes the path where the file was originally found? This defaults to false to prevent adding sidecars to every file in your library.`,\n    defaultValue: false\n  }),\n\n  /**\n   * @deprecated\n   */\n  assetSubdirectoryDatestampFormat: new StringSetting({\n    category: SettingCategories.Sync,\n    envAliases: [\"PS_ASSET_SUBDIR_FORMAT\"],\n    description: `This setting has been replaced by \"assetPathnameFormat\".\\nIf this setting is provided, and assetPathnameFormat is _not_ provided, we will give assetPathnameFormat the value of this setting + \"/BASE\".`,\n    defaultValue: \"\",\n    deprecated: true\n  }),\n\n  startPaused: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"Should processing be paused by default when PhotoStructure starts? You'll have to manually resume processing via the system tray or nav menu.\",\n    defaultValue: false\n  }),\n\n  /**\n   * @deprecated\n   */\n  syncIntervalHours: new OptionalIntegerSetting({\n    category: SettingCategories.Sync,\n    description: `This setting has been replaced by \"syncNewIntervalMs\" and \"syncChangedIntervalMs\".`,\n    deprecated: true\n  }),\n\n  syncNewIntervalMs: new DurationSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"This value controls both how often the sync process discovers new files for any given volume.\\nNote that this value is the duration between the last completion time and when the next sync should be scheduled.\\nWARNING: Setting this value to a small value will mean PhotoStructure is constantly scanning your disks, which will add wear and tear and possibly reduce the lifespan of your storage media.\",\n    defaultValue: \"1d\"\n  }),\n\n  syncChangedIntervalMs: new DurationSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"This value controls both how often the sync process discovers new or changed files for any given volume.\\nNote that this value is the duration between the last completion time and when the next sync should be scheduled.\\nWARNING: Setting this value to a small value will mean PhotoStructure is constantly scanning your disks, which will add wear and tear and possibly reduce the lifespan of your storage media.\",\n    defaultValue: \"7d\"\n  }),\n\n  retryEnqueued: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `After finishing a directory sync, should PhotoStructure look at recent sync-reports and retry files that are \"stuck\" in \"enqueued\" state?\\nThis shouldn't be necessary, but it's a backstop to ensure syncs are comprehensive.`,\n    defaultValue: true\n  }),\n\n  forceRebuildLibrary: new BooleanSetting({\n    category: SettingCategories.Sync,\n    aliases: [\"rebuild\"],\n    description:\n      \"When set, all files in your library will be re-imported (caution: slow!).\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  dropWorkQueues: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, all files will be visited, even if the asset seems in sync with the filesystem.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  forceSync: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, all files will be visited, even if the asset seems in sync with the filesystem.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  forceRebuildPreviews: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, previews and transcoded videos will always be rebuilt.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  noModelUpdates: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, skip any pending library database updates (only used for tests).\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  exitWhenDone: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, the sync process will exit after jobs are completed (used internally and for tests).\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  overwriteOriginal: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should changes made through the UI, like rotations, captions, and keywords, overwrite the original file? This is potentially dangerous, as your original may be lost if the disk has errors, or there are issues in rewriting the file contents. If this is set to false, the original file will be retained in the same directory. \"image.jpg\" will be stored as \"image_original.jpg\".`,\n    defaultValue: false\n  }),\n\n  maxDuplicatePathElements: new IntegerSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"How many times can a given path element exist in a directory before it is considered within an infinite filesystem loop, and should be skipped from import?\",\n    defaultValue: 7\n  }),\n\n  noAssetFileUpdates: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should outdated AssetFiles be ignored on startup? (Only used for tests).`,\n    defaultValue: false,\n    transient: true\n  }),\n\n  noAssetUpdates: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should outdated Assets be ignored on startup? (Only used for tests).`,\n    defaultValue: false,\n    transient: true\n  }),\n\n  resyncAssetOnVisit: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should Assets be automatically re-synchronized whenever their info panel is viewed? This can make sure Assets are in-sync with the filesystem, but this can slow down current imports, and add load to slower computers. This defaults to true only if the current machine has >= 8 CPUs.`,\n    defaultValue: () => (isTest() ? true : cpuCount() >= 8)\n  }),\n\n  excludeNoMediaAssetsOnRebuild: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should previously-imported assets that are found to have *any* files in NoMedia directories be excluded from your library?`,\n    defaultValue: () => true\n  }),\n\n  //\n  // Sidecars\n  //\n\n  matchSidecarsCaseInsensitively: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will look for sidecar files that match file basenames (with or without the file extension), regardless of case (for example: \"IMAGE.XMP\" will be a sidecar for \"image.jpg\").\\nIf set to false, sidecars must match case (so only \"image.jpg.xmp\" and \"image.xmp\" will match for \"image.jpg\").`,\n    defaultValue: true\n  }),\n\n  matchSidecarsFuzzily: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will look for sidecar files that match the basename of the asset, plus some common suffixes (like \"-edit\", \"-edited\", or variant copies, like \"-2\").\\nThis setting only impacts .XMP, .MIE, and .EXIF sidecars.\\nNote that PhotoStructure always matches .JSON files fuzzily, as that is required to handle Google Takeouts properly.`,\n    defaultValue: false\n  }),\n\n  defaultSidecarType: new StringSetting({\n    category: SettingCategories.Sidecars,\n    description: `What type of sidecar file do you want to generate for non-destructive edits?\\n- \"XMP\" is a popular and well-adopted format.\\n-\"MIE\" is defined at https://exiftool.org/TagNames/MIE.html .\\n- \"EXIF\" and \"EXV\" should only be used if required, as they have substantial limitations.\\nCase is preserved.`,\n    defaultValue: \"xmp\"\n  }),\n\n  writeMetadataToSidecarsIfImage: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will write metadata changes made to images into sidecars. If set to false, PhotoStructure will overwrite original images with metadata changes.`,\n    defaultValue: true\n  }),\n\n  sidecarTagBlocklist: new StringArraySetting<string>({\n    category: SettingCategories.Sidecars,\n    description: `Many applications don't read metadata from sidecars, which can make some tags, like Orientation or Rating, not seem to work properly in other applications. This setting is ignored if writeMetadataToSidecarsIfImage, writeMetadataToSidecarsIfVideo, and writeMetadataToSidecarsIfSidecarExists are all set to false.`,\n    defaultValue: () => [\"Orientation\"]\n  }),\n\n  writeMetadataToSidecarsIfVideo: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will write metadata changes made to videos into sidecars. If set to false, PhotoStructure will overwrite original videos with metadata changes. This defaults to false, as most software does not use sidecars except for images.`,\n    defaultValue: false\n  }),\n\n  writeMetadataToSidecarsIfSidecarExists: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will write metadata changes into sidecars if the file already has a sidecar and the tag is not in the sidecarTagBlocklist.`,\n    defaultValue: true\n  }),\n\n  // mergeLibrarySidecars: new BooleanSetting({\n  //   category: SettingCategories.Sidecars,\n  //   description: `If this and \"copyAssetsToLibrary\" are set to true, PhotoStructure will merge tag values found in variations into a single sidecar per asset. `,\n  //   defaultValue: true\n  // }),\n\n  // TODO: noMediaAssetAction (hide in library, exclude from library, trash from filesystem)\n\n  //\n  // Deduping\n  //\n\n  strictDeduping: new BooleanSetting({\n    category: SettingCategories.Deduping,\n    description: `How strict should PhotoStructure de-duplicate files? If this is false, we consider files to be equivalent if sufficient metadata matches (even if the image hash is different). If this is true, we will always compare image hashes. NOTE: This will most likely cause RAW and JPEG pairs to not always merge to the same asset, especially if your camera uses extensive computational imagery. ALSO NOTE: If this is true, \"useImageHashes\" will be forced to true, and the \"*corr*\" and \"*coeffPct\" settings will be set to 95.`,\n    defaultValue: false\n  }),\n\n  assetAggregation: new StringEnumSetting({\n    category: SettingCategories.Deduping,\n    description: `How should assets be aggregated?\\n- \"union\" will allow asset file variants to join an asset if they match *any* existing variant.\\n- \"intersection\" will only allow asset file variants to join an asset if they match *all* existing variants.\\nVersions prior to 2.1 defaulted to \"union\" behavior.`,\n    defaultValue: AggregateTypes.intersection,\n    strEnum: AggregateTypes\n  }),\n\n  useImageHashes: new BooleanSetting({\n    category: SettingCategories.Deduping,\n    description: `Building image hashes slows down imports, but supports more robust asset merging heuristics, and allows for dominant color tagging and browsing. If you set this from false to true, and you'd previously imported new assets, you may want to rebuild your library to re-aggregate your assets.`,\n    defaultValue: true\n  }),\n\n  allowFuzzyDateImageHashMatches: new BooleanSetting({\n    category: SettingCategories.Deduping,\n    description: `For images that don't have a reliable precise captured-at time (say, from \"stat\" or datestamp from pathname), can we aggregate assets purely by exact image hash matches?\\nSee https://forum.photostructure.com/t/deduplicate-shenanigans/1732/11 for more details.`,\n    defaultValue: false\n  }),\n\n  minMatchesWithoutImageHashes: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `If \"useImageHashes\" is true, this is ignored. This is a \"backstop\" that allows files to be aggregated together if their metadata is equal \"enough.\" As of Sept 2022, there are 5 metadata classes to match: \"cameraId\", \"lensId\", \"imageId\", \"exposureSettings\", and \"geohash\". All of these \"classes\" pull from several individual tags. Note that if any of these classes _don't_ match, the files will always be considered to be from different assets.`,\n    defaultValue: 3\n  }),\n\n  maxContemporaryAdoptionAssets: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `To handle photos and videos with \"fuzzy\" captured-at times (those that are missing second, minute, hour, or even day resolution), how many previously-imported assets with nearby captured-at times should PhotoStructure look for in your library to find an adoption candidate?\\nMonitor the \"sync.AssetFileFinder.assetByCapturedAtOrImageHash\" timer to see how long adoption is taking on your machine.\\nHigher values will slow down imports, but may result in more accurate de-duplication results.`,\n    defaultValue: 512\n  }),\n\n  // UUIDTags: new StringArraySetting({\n  //   category: SettingCategories.Deduping,\n  //   description: `What tags should be used to extract a \"UUID\" that PhotoStructure can trust for asset aggregation?\\nSee https://forum.photostructure.com/t/support-for-iphone-live-photos/87/6 for details.`,\n  //   defaultValue: () => [\"ContentIdentifier\", \"MediaGroupUUID\"]\n  // }),\n\n  datesBeforeAreEstimated: new StringSetting({\n    category: SettingCategories.Deduping,\n    description: `PhotoStructure automatically interprets captured-at timestamps before this ISO-formatted datestamp as \"estimated.\" PhotoStructure also considers timestamps whose minutes, seconds, and milliseconds are all 0 as \"estimated.\"\\nWhen assets have an estimated captured-at time, tighter image correlation is required to prevent different images as being incorrectly aggregated into the same asset.\\nThe default value is the release date for the Nikon Coolpix 950, which was one of the first prosumer digital cameras with ~2MP resolution.`,\n    defaultValue: \"1999-02-15\"\n  }),\n\n  // Note for future me: \"coefficient\" versus \"correlation\":\n\n  // Correlation relates to how well a set of points fit a line.\n  // https://en.wikipedia.org/wiki/Correlation\n\n  // \"Similarity coefficient\" is referenced in Jaccard Similarity, which is\n  // why I went with \"coefficient\" here.\n  // https://en.wikipedia.org/wiki/Jaccard_index\n\n  minExposureSettingsCoeffPct: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description:\n      \"This is the minimum similarity coefficient between exposure setting values two images must be to be considered equivalent. Many cameras actually report different exposure setting values between JPG and RAW: values within 90% of each other should avoid false-positives.\",\n    defaultValue: () => 90,\n    max: 100,\n    min: 0\n  }),\n\n  minImageCoeffPct: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `This setting controls how aggressively images are merged with each other, and is the minimum image hash similarity coefficient for images to be considered equivalent when their date is accurate, their mimetypes match, and are in color.\\nThis value is applied when the captured-at date has a non-zero minute, second, or millisecond, and was captured after \"datesBeforeAreEstimated,\" so the timestamp is considered to have high precision.\\n100 (or 100%) requires exact image correlation is not recommended due to causing false negative matches.\\nA value of less than 50% is fairly low image correlation, and can lead to false positive matches.`,\n    defaultValue: () => 70,\n    max: 100,\n    min: 0\n  }),\n\n  imageHashFuzzyDateDelta: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `This setting's value is added to \"minImageCoeffPct\" and \"minColorCoeffPct\" when captured-at dates have low precision. It defaults to a positive value so we are more strict about merging images with inaccurate dates. Set to 0 to disable this delta.`,\n    defaultValue: () => 12,\n    max: 100,\n    min: -100\n  }),\n\n  imageHashDifferentMimetypesDelta: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `This setting's value is added to \"minImageCoeffPct\" and \"minColorCoeffPct\" when file mimetypes don't match. It defaults to a negative value because RAW and JPEG formats frequently raster slightly different image hashes, requiring a more lax threshold to match JPG+RAW pairs. Set to 0 to disable this delta.`,\n    defaultValue: () => -15, // this is pretty high, but RAW+JPG pairs are often quite different\n    max: 100,\n    min: -100\n  }),\n\n  imageHashGreyscaleDelta: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `This setting's value is added to \"minImageCoeffPct\" when either image is essentially greyscale. It defaults to a positive value so we are more strict about merging greyscale images. We also don't have color correlation to help us, so a more strict threshold is warranted.`,\n    defaultValue: () => 10,\n    max: 100,\n    min: -100\n  }),\n\n  // imageHashBlur: new BooleanSetting({\n  //   category: SettingCategories.Deduping,\n  //   description: `PhotoStructure can apply a light blur between the dominant color pixel resample and the final image hash downsample, which can improve image hash matching of noisy or high frequency images. This adds 5-100ms to building image hashes.\\nSet to 0 to disable this blurring step.`,\n  //   defaultValue: true\n  // }),\n\n  minColorCoeffPct: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description:\n      \"Given two sets of dominant colors, this is the average percent that those sets correlate with eachother. A higher number requires stronger dominant color correlation. 100 (or 100%) requires exact dominant color correlation. A value of less than 50% indicates fairly low correlation of dominant colors, and can lead to false positives.\",\n    defaultValue: () => 73,\n    max: 100,\n    min: 0\n  }),\n\n  greyscaleColorThreshold: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `Many \"black and white\" images, which scanned, actually include color information, especially if the source has yellowed with age. PhotoStructure determines if an image is \"greyscale\" if the standard deviation of a* plus the standard deviation of b* values is less than this value. By only looking at standard deviation, we can categorize sepia photos as \"greyscale.\" Smaller values are stricter.`,\n    defaultValue: 3,\n    max: 128,\n    min: 0\n  }),\n\n  gpsErrorMeters: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `What's the maximum number of meters between GPS fixpoints that should be considered equivalent locations? Note that JPG+RAW pairs from smartphones frequently have different GPS locations due to one being recorded from a rough WiFi fix, and another from aGPS.\\nGPS position error is ~10-100m. Cellular position error is ~500-750m.`,\n    defaultValue: 500\n  }),\n\n  minCapturedAtPrecisionDifferentMimetypes: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `Some cameras store JPEG+RAW pairs with slightly different captured-at times (!!). To ensure these are merged properly, we need to allow for these discrepancies. This setting controls how many milliseconds of difference we allow between captured-at times for different mimetypes. Set to 0 to disable this feature.`,\n    defaultValue: () => 1500\n  }),\n\n  fuzzyDatePrecisionCoeff: new FloatSetting({\n    category: SettingCategories.Deduping,\n    description: `When comparing \"captured-at\" dates that aren't from reliable metadata tags, what coefficient should be applied to the inferred precision of those dates? Larger values will mean PhotoStructure will consider these \"fuzzy\" dates to be less precise, and expand the date range when searching for matching assets. Set to 1 to disable this feature.`,\n    defaultValue: 2\n  }),\n\n  // TODO: FINISH! See core/img/ImageDataHash.ts\n\n  // useImageDataHashes: new BooleanSetting({\n  //   category: SettingCategories.Deduping,\n  //   description: `Should PhotoStructure match files using a cryptographic hash of the image data (without metadata)? This will allow files with the same image content to match after metadata changes, but takes longer to compute.`,\n  //   defaultValue: true\n  // }),\n\n  // imageDataHashTags: new StringArraySetting({\n  //   category: SettingCategories.Deduping,\n  //   description: `Should PhotoStructure save image data cryptographic hashes into files copied into your library? These values must be valid tag names. When writing, PhotoStructure will write into the first tag that doesn't already have a value (to avoid clobbering prior values).\\nSet to an empty array to disable this feature.`,\n  //   defaultValue: [\n  //     \"DocumentId\",\n  //     \"OriginalDocumentID\",\n  //     \"BurstUUID\",\n  //     \"BurstId\",\n  //     \"CameraBurstID\",\n  //     \"MediaGroupUUID\",\n  //     \"InstanceId\"\n  //   ]\n  // }),\n\n  //\n  // Color\n  //\n\n  dominantColorPixels: new BoundedIntegerSetting({\n    category: SettingCategories.Color,\n    aliases: [\"modePixels\"],\n    description: `PhotoStructure downsamples images to contain this number of pixels, converts each pixel into CIELAB space, and then runs k-means clustering to extract dominant colors. Larger values will be slower to process, but will result in more accurate dominant colors. Smaller values will be faster, but may result in inaccurate dominant colors.`,\n    defaultValue: DominantColorPixelsDefault,\n    max: 4096,\n    min: 256\n  }),\n\n  dominantColorDeltaE: new StringEnumSetting({\n    aliases: [\"delta_e\"],\n    category: SettingCategories.Color,\n    description: `What delta_e algorithm should PhotoStructure use to determine color differences? cie76 is quick but inaccurate. cie94 is more accurate than cie76 but 6x more computationally expensive than cie76. ciede2000 is best, but 4-6x more expensive than cie94.`,\n    defaultValue: ColorDistanceFunctions.ciede2000,\n    strEnum: ColorDistanceFunctions\n  }),\n\n  dominantColorKmeansRuns: new BoundedIntegerSetting({\n    category: SettingCategories.Color,\n    aliases: [\"modeRuns\"],\n    description: `PhotoStructure uses k-means clustering to extract dominant colors from your images.\\nLarger values will allow PhotoStructure to run k-means with more random seeds and different pre-merged k values, which should result in higher quality results.\\nUsing 0 will revert to posterizing the image and using the top-n colors, which is fast and deterministic, but has lower quality results.\\nChanging this value will subtly change many image's dominant color lists.\\nThis defaults to 0 run when \"quickSyncMode\" is enabled.`,\n    defaultValue: DominantColorKmeansRunsDefault,\n    max: 64,\n    min: 0\n  }),\n\n  dominantColorMergeThreshold: new BoundedIntegerSetting({\n    category: SettingCategories.Color,\n    description: `The best dominant color cluster centroids may be quite similar. PhotoStructure will merge centroids if their Δe is less than this value. Larger values will result in more different dominant colors, but those may not be as accurate.`,\n    defaultValue: 10,\n    max: 32,\n    min: 0\n  }),\n\n  dominantColorGreyThreshold: new BoundedIntegerSetting({\n    category: SettingCategories.Color,\n    aliases: [\"modeGrey\"],\n    description: `May PhotoStructure ignore pixels that are greyscale, or \"desaturated,\" when looking for dominant colors? Larger values will result in only saturated colors being considered for dominant colors. A pixel color will be removed if its absolute a* and b* values in CIELAB space sum to less than this value.\\nSet this to 0 to include greys in dominant colors, but note that this tends to reduce image deduplication effectiveness, as most natural-tone images contain a good deal of greyscales, which results in false matches.`,\n    defaultValue: 11,\n    max: 80,\n    min: 0\n  }),\n\n  //\n  // Shared-state events\n  //\n\n  sharedStateDir: new OptionalStringSetting({\n    category: SettingCategories.Events,\n    description:\n      \"PhotoStructure uses a set of JSON files to relay messages between processes (rather than an RPC mesh, socket, or named pipe, whose device types isn't supported on some filesystem types). This directory must be readable and writable.\",\n    defaultValue: () => \"\" // < set by setSettingsDefaults()\n  }),\n\n  sharedStatePollMs: new DurationSetting({\n    category: SettingCategories.Events,\n    description: `The \"sharedStateFile\" is watched for changes using your OS'es filesystem watch functionality: for most setups, this will result in almost instantaneous event propagation. Some filesystems don't support filesystem watching, or miss file edits, so we _also_ manually check for file changes every \"sharedStatePollMs\" milliseconds. This defaults to 7 seconds, but know that this will prevent the \"PS_CONFIG_DIR\" hard drive from spinning down and going to sleep.\\nSee the \"allowFilesystemSleep\" for other related settings.\\nSet this setting to 0 to disable state polling.`,\n    defaultValue: () => \"7s\"\n  }),\n\n  sharedStateTaskTimeoutMs: new DurationSetting({\n    category: SettingCategories.Events,\n    description: `How long should PhotoStructure wait for shared-state tasks to be completed before timing out and giving up?`,\n    defaultValue: () => \"5m\"\n  }),\n\n  //\n  // Previews\n  //\n\n  previewQuality: new BoundedIntegerSetting({\n    aliases: [\"jpegQuality\"],\n    category: SettingCategories.Previews,\n    description:\n      \"JPEG output quality for previews. Smaller values produce smaller images with lower quality. The default value of 80 strikes a balance that has almost no noticeable compression artifacts, yet still compresses images reasonably well. Depending on image content, values less than 50-70 can produce noticeable artifacts.\",\n    defaultValue: () => 80,\n    max: 100,\n    min: 10\n  }),\n\n  previewProgressive: new BooleanSetting({\n    category: SettingCategories.Previews,\n    aliases: [\"progressive\", \"jpegProgressive\"],\n    description: `Should preview JPEGs be progressively encoded? If set, thumbnails will take ~15% longer to generate, but FHD/QHD/UHD previews will be smaller.`,\n    defaultValue: true\n  }),\n\n  previewMinimized: new BooleanSetting({\n    aliases: [\"jpegMinimized\"],\n    category: SettingCategories.Previews,\n    description: `Should preview JPEGs be optimized? If set, preview generation can take 50% longer, but can result in up to ~30% smaller images. This saves disk space and network transport time.\\nThis setting controls the \"mozjpeg\" option: see https://sharp.pixelplumbing.com/api-output#jpeg for details.\\nThis automatically defaults to true if at least 4 CPU cores are present.`,\n    defaultValue: () => (isTest() ? true : cpuCount() >= 4)\n  }),\n\n  dcrawEmuArgs: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `What options do you want to pass to dcraw_emu? Note that \"-T -o 1 -j -Z -\" will always be added (as we need TIFF, sRGB, raw pixels send to stdout). The \"-h\" arg will be added if the preview image needed is less than half the resolution of the original.\\nRun \"dcraw_emu\" with no arguments to get usage help.\\n\"-q 1\" sets interpolation quality to \"0\".\\n\"-H 2\" turns on highlight blending.\\n\"-w\" uses the camera-set white balance.\\nNote: changing these values can dramatically (> 10x!) increase the time it takes to render RAW images.`,\n    defaultValue: [\"-q\", \"0\", \"-w\"]\n  }),\n\n  iccProfileMappings: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `Maps an original image profile to a filename stored in the \"icc\" directory. See that directory's _info.md for more information about this settings.`,\n    defaultValue: [\n      \"Display P3:DisplayP3Compat-v2-magic.icc\",\n      \"Adobe RGB:AdobeCompat-v2.icc\"\n    ]\n  }),\n\n  squareThumbStrategy: new StringEnumSetting({\n    category: SettingCategories.Previews,\n    description:\n      'When PhotoStructure crops images and videos to square thumbnails, it needs to crop non-square images to a square. The default, \"attention,\" focuses on faces and higher image energy, but is more expensive than simply cropping to the center of the image (which is faster, but will mean less-nice cropping, where faces are chopped in half). More details are available here: https://sharp.pixelplumbing.com/api-resize .',\n    defaultValue: CropStrategies.attention,\n    strEnum: CropStrategies\n  }),\n\n  videoFrameAtSec: new FloatSetting({\n    category: SettingCategories.Previews,\n    description: `When capturing a frame from videos for thumbnails, how many seconds should be passed over before capturing a frame? A value of 0 means capture from the start of the video. Frequently, though, videos start out of focus, so we default to 1.5 for better frame clarity.\\nNote that if a video is shorter than this value, the frame will be captured from the middle of the video.`,\n    defaultValue: 1.5\n  }),\n\n  // TODO: add this to the settings page:\n  previewSharpen: new BooleanSetting({\n    aliases: [\"sharpen\"],\n    category: SettingCategories.Previews,\n    description: `Should previews be sharpened? This can make the images \"pop\" a bit more, but almost doubles the time it takes to make the thumbnails.`,\n    defaultValue: false\n  }),\n\n  // TODO: add this to the settings page:\n  previewResolutions: new StringEnumsSetting({\n    category: SettingCategories.Previews,\n    description:\n      \"This controls the resolutions that PhotoStructure creates for every asset. Note that resolutions will be skipped if there already is a preview value with <= 2.5x pixel count, so even though there are a lot of sizes here, you'll only see 3-4 images on your disk per asset.\\nSee https://en.wikipedia.org/wiki/Graphics_display_resolution for a description of these resolution codes.\",\n    defaultValue: diff(FitSizes.values, [\"uhd8k\", \"uhd5k\"]),\n    strEnum: FitSizes\n  }),\n\n  embeddedPreviews: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `For larger source images that are greater than 15MP, what embedded image preview tags should be used when present? Using these embedded images speeds up image preview generation, but if the embedded image doesn't match the full-sized image, the image preview will be incorrect.\\nSet this to an empty array to disable using embedded previews.`,\n    defaultValue: [\"PreviewImage\", \"PreviewTIFF\", \"JpgFromRaw\"]\n  }),\n\n  embeddedThumbnails: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `Should embedded image thumbnails be used when available? This speeds up image hashing, but if the embedded image thumbnail doesn't match the full-sized image, the image hash will be incorrect.\\nSet this to an empty array to disable using embedded previews.`,\n    defaultValue: [\"ThumbnailImage\", \"ThumbnailTIFF\"]\n  }),\n\n  maxEmbeddedBuffer: new IntegerSetting({\n    category: SettingCategories.Previews,\n    description: `PhotoStructure tries to use embedded images for preview generation to minimize work. For smaller images, we can directly pipe the buffer from the embedded image into our image pipeline, but for larger images, it can be faster to use an intermediary file stored on the cache drive. Larger values will reduce disk I/O but increase memory and CPU consumption. Set this to 0 to force all previews to be written to the cache dir.\\nThis defaults to ${fmtBytes(\n      DefaultMaxEmbeddedBuffer * 4\n    )} on Windows due to slow disk I/O on that platform.`,\n    defaultValue: () => (isWin ? 4 : 1) * DefaultMaxEmbeddedBuffer\n  }),\n\n  skipPreviews: new BooleanSetting({\n    category: SettingCategories.Previews,\n    description: `Only used for tests.`,\n    advanced: () => true,\n    defaultValue: false\n  }),\n\n  variantSortCriteria: new StringEnumsSetting({\n    category: SettingCategories.Previews,\n    aliases: [\"assetFileSortCriteria\"],\n    description: `How should PhotoStructure pick the \"best\" asset file variant for a given asset? You may reorder the default fields. Only \"resolution\", \"fileSize\", \"mtime\", \"schemeIdx\", \"isCover\", \"count\", and \"isBrowserSupported\" are understood: other field names will be ignored. Details about these fields are here: https://photostructure.com/faq/what-do-you-mean-by-dedupe/#how-does-photostructure-pick-which-file-to-show .`,\n    strEnum: AssetFileSortCriteria\n  }),\n\n  variantSortCriteriaPower: new BoundedFloatSetting({\n    category: SettingCategories.Previews,\n    description: `Variant sort criteria \"resolution\" and \"fileSize\" are scaled down to ignore irrelevant differences. Scalars are raised to this power to reduce them, so a value of 1 means the criterion is unchanged from the \"raw\" value. Smaller values for this setting let _larger_ differences be ignored.`,\n    defaultValue: () => 1 / 6,\n    max: 1,\n    min: 1e-6\n  }),\n\n  includePreviewTags: new BooleanSetting({\n    category: SettingCategories.Previews,\n    description: `By default, PhotoStructure strips all metadata from preview images. This both saves space, and reduces disk I/O during preview generation. If this setting is enabled, all \"includedPreviewTags\" will be restored in preview images that are more than 1 megapixel. If this setting is enabled, each preview image will be written to twice (once for the image and once for the metadata), so imports will be slower.`,\n    defaultValue: false\n  }),\n\n  includedPreviewTags: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `If \"includePreviewTags\" is true, what tags should PhotoStructure retain when building preview images? A partial list of tags is here: https://photostructure.github.io/exiftool-vendored.js/interfaces/Tags.html . Note that not all files contain all (or even some!) of those tags.\\n- \"capturedAt\" is a special meta-tag which will retain whatever tag contains the \"best\" time that PhotoStructure could find that encoded the date and time when the image was captured, and will store that value in DateTimeOriginal.\\n- \"exposureSettings\" is a special meta-tag that will retain shutter time (ExposureTime), aperture (FNumber), and ISO (ISOSpeed) metadata (but may be encoded with different values).\\n- including \"GPSLatitude\" and \"GPSLongitude\" will mean previews will contain location metadata if the source image had location metadata.`,\n    defaultValue: () => DefaultIncludedPreviewTags\n  }),\n\n  //\n  // Filters\n  //\n\n  disableAllFilters: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"Setting this to true will force all other filter settings to their most permissive value. Note that this also disables file validation tests and the file SHA blocklist, so corrupt files and previously removed files will be attempted to be imported as well.\",\n    defaultValue: false\n  }),\n\n  excludeGlobsAdd: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `This setting adds glob patterns for files and directories that should be excluded from your library.\\nThese patterns will be added to PhotoStructure's default set of (several hundred!) exclusion globs.\\nSee https://forum.photostructure.com/t/1458 for details.`,\n    exampleValue: () => [\"**/tmp\"],\n    defaultValue: () => []\n  }),\n\n  excludeGlobsOmit: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `PhotoStructure has several hundred default \"exclusion globs\" to avoid scanning system and application directories and otherwise irrelevant files.\\nThe patterns provided here are removed from that default set.\\nSee https://forum.photostructure.com/t/1458 for details.`,\n    defaultValue: () => []\n  }),\n\n  globsCaseInsensitive: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Should \"globs\" match case-insensitively?`,\n    defaultValue: true\n  }),\n\n  respectFileExtensions: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Normally PhotoStructure uses file extensions (like .JPEG or .MP4) to perform initial file filtering, rather than examining the content of the file to determine the file format (or \"mimetype\"). If you have files that don't use valid file extensions, you can set this to false, but know that file imports will be much slower.`,\n    defaultValue: true\n  }),\n\n  disableIgnorableFilters: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"PhotoStructure has a (ton) of patterns used to avoid scanning system, cache, and application directory hierarchies. See the 'excludeGlobs*' settings for more precise editing of exclusion patters.\",\n    defaultValue: false\n  }),\n\n  requireMakeModel: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"PhotoStructure can require images to have EXIF tags for Make and Model. This prevents unwanted preview images from other photo apps and screenshots from being imported. If you have images you want in your library that don't have these tags, set this to false. Note that this is ignored for video files, as those files seldom have Make and Model set (and would prevent most video files from being imported).\",\n    defaultValue: false\n  }),\n\n  rejectRatingsLessThan: new IntegerSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"Files with a metadata rating that is less than this value will not be imported into your library. Set to -100 to disable this filter.\",\n    defaultValue: 0\n  }),\n\n  keywordBlocklist: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `Any asset that contains any of these keywords will be excluded from your library. Set this to an empty array to disable this feature.`,\n    defaultValue: [\"private\"]\n  }),\n\n  minImageDimension: new IntegerSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum number of pixels an image's dimensions must meet or exceed to be imported? Note that this value is applied to both the height and width of the image. The default comes from the VGA standard of 640x480. If this is set to 0, no minimum resolution filter will be applied to photos.\",\n    defaultValue: 480\n  }),\n\n  minVideoDimension: new IntegerSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum number of pixels a video's dimensions must meet or exceed to be imported? Note that this value is applied to both the height and width of the video. The default comes from the QVGA standard of 320x240. If this is set to 0, no minimum resolution filter will be applied to videos.\",\n    defaultValue: 240\n  }),\n\n  minVideoDurationSec: new OptionalFloatSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum number of seconds for a video to be imported? If this is set to 0 or unset, no minimum duration limit will be applied.\",\n    defaultValue: 2\n  }),\n\n  maxVideoDurationSec: new OptionalIntegerSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the maximum length a video can be and still be imported? If this is set to 0 or unset, no maximum duration limit will be applied.\"\n  }),\n\n  minAssetFileSizeBytes: new IntegerSetting({\n    aliases: [\"minAssetSizeBytes\", \"minAssetSize\", \"minFileSizeBytes\"],\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum photo or video size you want imported into your library?\\nThis setting can prevent small GIFs and screenshots from being imported.\\nValues less than 1000 will be ignored.\\nA 20-year-old 1600x1200 JPEG at 50% quality is more than 150k, so 50k is a very conservative default.\",\n    defaultValue: 50 * KB\n  }),\n\n  maxAssetFileSizeBytes: new IntegerSetting({\n    aliases: [\"maxAssetSizeBytes\", \"maxAssetSize\", \"maxFileSizeBytes\"],\n    category: SettingCategories.Filters,\n    description:\n      \"What's the maximum photo or video size you want imported into your library? (This can prevent movies from being pulled into and filling up your library). A value of 0 will disable this filter.\",\n    defaultValue: 0.5 * GB\n  }),\n\n  // TODO: add this to the settings page:\n  validateJpegImages: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Should JPEG photos be validated before importing? If a JPEG has any decoding errors, and this setting is true, that file will not be imported into your library. Enabling this feature slows down imports.`,\n    defaultValue: true\n  }),\n\n  imageFailOn: new StringEnumSetting({\n    category: SettingCategories.Filters,\n    description: `How sensitive should PhotoStructure be with warnings or errors when loading images?\\nUse \"none\" to try loading images with best efforts, even if the file may be corrupt.\\nUse \"warning\" to be conservative--any defects in the image will prevent it from being imported. \\nThe default, \"truncated,\" will allow images with minor encoding defects to be imported.`,\n    defaultValue: SharpFailOns.truncated,\n    strEnum: SharpFailOns\n  }),\n\n  // TODO: add this to the settings page:\n  validateRawImages: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Should raw-format images (like NEF, CR2, ARW, and ORF) be validated before importing? If an image has any decoding errors, and this setting is true, that file will not be imported into your library. Enabling this feature slows down imports.`,\n    defaultValue: true\n  }),\n\n  // TODO: add this to the settings page:\n  validateVideos: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Should videos be validated before importing? If a video has any decoding errors, and this setting is true, that file will not be imported into your library. Enabling this feature slows down imports, as videos must be fully decoded (or \"played\") to be validated. Only ffmpeg currently supports video validation; if you use VLC, this setting is ignored.`,\n    defaultValue: () => false\n  }),\n\n  validationErrorBlocklist: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `If any of the following patterns match a validation error found in a photo or video, and *doesn't* match any of the patterns in the validationErrorAllowlist, the file will be considered corrupt and not be imported into your library.\\nNote the patterns are case-insensitive, will be converted into a regular expression, and only need to partially match the error message, so, for example, a value of \"caution\" will ignore any error message that contains the string (not the word!) \"caution\".\\nAlso see \"validationErrorAllowlist\".`,\n    defaultValue: () => [\n      \"cannot decode\",\n      \"cannot determine format of input stream\",\n      \"corrupt\", // matches \"data corrupted\"\n      \"error while decoding\", // ffmpeg from truncations\n      // \"error\", maybe too lax?\n      \"failed\", // not specific enough?\n      \"invalid\",\n      \"not a jpeg file\", // Not a JPEG file\n      \"not raw file\",\n      \"nothing was written into output file\",\n      \"partial file\",\n      \"premature end of .+ file\", // Premature end of JPEG file\n      \"unsupported file format\" // corrupt or invalid RAW files\n    ]\n  }),\n\n  validationErrorAllowlist: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `All validation errors that match any of these values they will be ignored, EVEN IF they match a \"validationErrorBlocklist\" pattern, so all of these patterns should be specific enough to not cause false-negatives.\\nNote the patterns are case-insensitive, will be converted into a regular expression, and only need to partially match the error message.\\nAlso see \"validationErrorBlocklist\".`,\n    defaultValue: () => [\n      \"invalid SOS parameters for sequential jpeg\",\n      \"referenced qt chapter track not found\",\n      \"non monotonically increasing dts\" // don't care about timestamps\n    ]\n  }),\n\n  //\n  // Parsing\n  //\n\n  capturedAtTags: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `The following tags are examined to determine when a file was captured at.\\nThe tag with the oldest valid value is returned: order here doesn't matter.\\nIf none of these tags have a valid datetime stamp, PhotoStructure will fall back to \"capturedAtTagsFallback\" tags.\\nSee https://photostructure.com/faq/captured-at/ for details.`,\n    defaultValue: DefaultCapturedAtTagsConst as any as string[]\n  }),\n\n  capturedAtTagsFallback: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `If none of the \"capturedAtTags\" have a valid value, PhotoStructure will fallback to look at these tags. These tags are only \"fallbacks\" as they sometimes contain spurious values.\\nSee https://photostructure.com/faq/captured-at/ for details.`,\n    defaultValue: ProblematicCapturedAtTags as any as string[]\n  }),\n\n  badDates: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `The following ISO values will be ignored when extracting a file's captured-at time. See https://forum.photostructure.com/t/photostructure-ignored-the-date-metadata-of-some-photos-marked-them-as-taken-in-2002/340/8 and https://forum.photostructure.com/t/incorrect-date-assigned-to-photo/419 .`,\n    defaultValue: () => [\"2002-12-08T12:00:00\"]\n  }),\n\n  defaultVideosToUTC: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `Should video created-at times be assumed to be in UTC? Most cameras use UTC (even if the timezone is set in the camera!). Set this to false to revert to pre-v2.1 behavior.`,\n    defaultValue: () => true\n  }),\n\n  defaultCopyright: new OptionalStringSetting({\n    category: SettingCategories.Parsing,\n    description: `If PhotoStructure doesn't find a value for Copyright in a source image or source video, it will apply the given string as the copyright holder.\\nThis has no default.`\n  }),\n\n  likeRating: new IntegerSetting({\n    category: SettingCategories.Parsing,\n    description: `What's the minimum \"rating\" for an asset to be considered \"liked\"?\\nKnow that metadata \"ratings\" are stored in both EXIF and XMP \"Rating\" and \"RatingPercent\" tags. Ratings are typically encoded as a value between -1 and 5 (where -1 is used by some DAMs to mark \"rejected\").\\nPhotoStructure will prefer the XMP Rating tag.\\nIf the only tag with a rating is a \"RatingPercent\", it will be converted to a 5-point scale.\\nIf you want only ratings of 5 to be considered a \"liked\" asset, set this to 5.\\nThis value will be used when assets are liked via the PhotoStructure UI.\\nNote that PhotoStructure doesn't import assets with a negative Rating (to respect the \"rejected\" rating).`,\n    defaultValue: () => 3\n  }),\n\n  lensMakes: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `Used to extract and parse lens metadata (useful when Google Takeout has stripped metadata).`,\n    defaultValue: () => DefaultLensMakes\n  }),\n\n  extraDateTimeFormats: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `These formats are used to parse datetime strings in EXIF metadata and in file pathnames. See https://moment.github.io/luxon/#/formatting?id=table-of-tokens for a description of these tokens.`,\n    defaultValue: () => DefaultDateTimeFormats\n  }),\n\n  fuzzyDateParsing: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, PhotoStructure will first attempt to parse datetime strings with strict ISO-compliant parsers, and then use additional, \"fuzzy\" datetime parsers. When disabled, only ISO-compliant parsers are used.`,\n    defaultValue: true\n  }),\n\n  fuzzyYearParsing: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, PhotoStructure will use directories starting with a number that looks year-like (four digits, 1826-the present) to infer the captured-at time, if all other date parsers have failed. Note that setting this to true \"forces\" the \"fuzzyDateParsing\" setting to be true.\\nTo elaborate: PhotoStructure first looks for metadata with a date, then looks for an ISO-compliant YMD timestamp in the filename or path, and then, if \"fuzzyDateParsing\" or this setting is enabled, a YMD or YM datestamp, and then finally, if this setting is enabled, it looks for a directory that begins with a number that is between 1826-2020.`,\n    defaultValue: false\n  }),\n\n  twoDigitCutoffYear: new IntegerSetting({\n    category: SettingCategories.Parsing,\n    description: `If \"yy\" is used in extraDateTimeFormats, and a year is only 2 digits, what threshold value should be used to consider the date to be in the 1900s vs 2000s?\\nAs an example, a value of \"50\" would make \"49\" be interpreted as 1949, and \"50\" as 2050.\\nSee https://moment.github.io/luxon/api-docs/index.html#settingstwodigitcutoffyear for details.\\nThis defaults to 3 years in the future (modulus 100) and is updated automatically.`,\n    defaultValue: () => (new Date().getFullYear() + 3) % 100\n  }),\n\n  minValidYear: new IntegerSetting({\n    category: SettingCategories.Parsing,\n    description: `If PhotoStructure encounters a year that is less than this value, it will consider it invalid and look elsewhere for dates. The default value, 1826, is the first year a photograph was captured, as per https://en.wikipedia.org/wiki/History_of_photography . If you have paintings or other imagery from before this time, you'll want to make this value less than the earliest image in your library.`,\n    defaultValue: 1826\n  }),\n\n  useStatToInferDates: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, and the \"captured-at\" time isn't found in metadata, PhotoStructure will also look for the captured-at datetime encoded in the file \"birthtime\" (on Windows), or the lesser value of \"mtime\" and \"ctime\" (on macOS and Linux). Note that these values are not very reliable, as file transfers and backups frequently don't retain these values correctly.`,\n    defaultValue: true\n  }),\n\n  usePathsToInferDates: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, and the \"captured-at\" time isn't found in metadata, PhotoStructure will also look for the captured-at datetime encoded in file paths.`,\n    defaultValue: true\n  }),\n\n  useLibraryDirsToInferDates: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, and the \"captured-at\" time isn't found in metadata, PhotoStructure will also look for the captured-at datetime encoded in file paths *for files that are in your PhotoStructure library. This defaults to false, as prior versions of PhotoStructure may have placed files into incorrect datestamped directories.`,\n    defaultValue: false\n  }),\n\n  /**\n   * @deprecated\n   */\n  enableSiblingInference: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `This setting has been replaced by the \"siblingInference\" setting. \"true\" is equivalent to \"auto\", and \"false\" is equivalent to \"never\".`,\n    defaultValue: true,\n    deprecated: true\n  }),\n\n  siblingInference: new StringEnumSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, and the \"captured-at\" time, Make, or Model isn't found in metadata, PhotoStructure will try to use nearby files to \"fill in the blanks.\" If this is set to \"auto\", this is disabled automatically for slow directories. If this is set to \"always\", even files in slow directories will have tag inference, when necessary. Set to \"never\" to disable.`,\n    strEnum: TagInferenceSettingValues,\n    defaultValue: TagInferenceSettingValues.auto\n  }),\n\n  siblingInferenceBasenameCoeff: new FloatSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum case-insensitive Sørensen–Dice similarity index between file basenames, without the extension, to be used for sibling inference?\\n0 will accept all siblings, 1 will only accept exact matches.\",\n    defaultValue: 0.6 // tests fail with 0.65\n  }),\n\n  writeInferredTagsToLibraryCopies: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, inferred metadata will be stored as _actual_ metadata in the library copy.`,\n    defaultValue: true\n  }),\n\n  //\n  // Tagging\n  //\n\n  recountAllTags: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should all tags be recounted? PhotoStructure normally only recounts tags that have had assets recently added or removed, unless there are more than 20 changed tags.`,\n    defaultValue: false,\n    transient: true\n  }),\n\n  tagCamera: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with cameras' make and model?`,\n    defaultValue: true\n  }),\n\n  tagLens: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with lens' make and model?`,\n    defaultValue: true\n  }),\n\n  tagFullLensModel: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should PhotoStructure tag assets with the full lens model (like \"Canon EF-M 15-45mm f/3.5-6.3 IS STM\") or a just the lens information (\"15-45mm f/3.5-6.3\")? (If you change this value, you'll need to \"Rebuild\" your library to make the setting take effect).`,\n    defaultValue: true\n  }),\n\n  tagYMD: new StringEnumSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with \"When > Year\" (the \"y\" option), or \"When > Year > Month\" (the \"ym\" option), or \"When > Year > Month > Day\" (the \"ymd\" option)? Setting this to \"\" will disable date tagging.`,\n    defaultValue: DateTagFormats.ym,\n    strEnum: DateTagFormats\n  }),\n\n  tagDateFromStat: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should PhotoStructure tag assets with a date if the captured at time was only found in filesystem metadata? Filesystem metadata is not as reliable as EXIF metadata, as it can be changed arbitrarily when files are backed up.`,\n    defaultValue: () => (isTest() ? false : true)\n  }),\n\n  tagKeywordsFromPath: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with keywords extracted from file pathnames?`,\n    defaultValue: true\n  }),\n\n  tagKeywordsFromMetadata: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with keywords extracted from file metadata, as well as sidecar metadata?`,\n    defaultValue: true\n  }),\n\n  keywordTags: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure should look in the following tags for keywords. Note that these values are case-sensitive.`,\n    defaultValue: () => [\n      \"CatalogSets\",\n      \"Categories\",\n      \"HierarchicalSubject\",\n      \"Keywords\",\n      \"LastKeywordXMP\",\n      \"Subject\",\n      \"TagsList\",\n      \"XPKeywords\"\n    ]\n  }),\n\n  keywordReparenting: new StringEnumSetting({\n    category: SettingCategories.Tagging,\n    description: `How should PhotoStructure handle hierarchical keywords?\\nIf this is set to \"move\", PhotoStructure will try to put hierarchical keywords into their \"correct\" root tag, like \"Who,\" \"Album,\" or \"Where.\"\\nIf this is set to \"retain,\" PhotoStructure will always place hierarchical keywords under the \"Keyword\" root tag.\\nIf this is set to \"copy,\" PhotoStructure will add both the \"correct\" root tag _and_ the \"Keyword\" tag. For example, \"Person|Doe|Jane\" will be tagged as \"Who|Doe|Jane\" as well as \"Keyword|Person|Doe|Jane\".\\nSee https://forum.photostructure.com/t/prefix-for-keywords-tag/499 for details.`,\n    defaultValue: KeywordReparentingStrategies.move,\n    strEnum: KeywordReparentingStrategies\n  }),\n\n  rootTagAlbumsAliases: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List hierarchical tag roots that PhotoStructure should interpret to be album names. This is matched case-insensitively.`,\n    defaultValue: () => [\"Album\", \"Albums\"]\n  }),\n\n  rootTagKeywordsAliases: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List hierarchical tag roots that PhotoStructure should interpret to be keywords. This is matched case-insensitively.`,\n    defaultValue: () => [\"Keyword\", \"Keywords\", \"Tag\", \"Tags\"]\n  }),\n\n  rootTagWhoAliases: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    aliases: [\"tagWhoSynonyms\"],\n    description: `When hierarchical tag values are found with any of these root names PhotoStructure will replace the root with \"Who\".\\nFor example, using default values, \"People/Jane Doe\" will be replaced with \"Who/Jane Doe\" (or \"Who/Doe/Jane\", if tagNamesFormatter=\"family/given\").\\nDigicam uses \"People\". This is matched case-insensitively.`,\n    defaultValue: () => [\"Person\", \"People\", \"Face\", \"Faces\"]\n  }),\n\n  keywordDelimiters: new OptionalStringSetting({\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure splits apart keywords, by default, when they are delimited by a comma or semicolon. For example, \"car, blue, tree\" will be interpreted as having the keywords \"car\", \"blue\", and \"tree\".\\nNote that some software doesn't encode lists of keywords properly, so we have to include the comma and semicolon by default to handle these cases: but this makes keywords that contain a comma be split incorrectly. If the files in your library don't have this encoding issue, you can replace this setting with just an empty string to disable splitting.\\nSee https://forum.photostructure.com/t/incorrect-handling-of-keywords-with-comma/992 for more discussion.\\nAfter changing this value, you must force-resync your library for the changes to take affect.`,\n    defaultValue: \",;\"\n  }),\n\n  keywordPathSeparators: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure interprets keywords as hierarchical if a path separator character is found in a keyword. This allows for tags like \"Family/Einstein/Albert\", \"Flora|Fruit|Orange\", \"Objects⊃Tools⊃Hammer\", or \"Fauna>Oceanic>Pelican\". By default, these separators are the forward-slash, vertical-bar, and greater-than characters. If you don't want to interpret keywords as hierarchical, change this value to an empty string (\"\"). After changing this value, you must force-resync your entire library for the changes to take affect.`,\n    defaultValue: \"/|>⊃\" // 20200307: thought about and discarded the idea of including \"›\" and \"»\". \"⸧\" isn't in iOS. 20201201: Also deleted \"≻\".\n  }),\n\n  tagFileType: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    aliases: [\"tagType\"],\n    description: `Should assets be tagged with their file type (like \"Type/Image/JPEG\")?`,\n    defaultValue: true\n  }),\n\n  tagJsonFaces: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Google Takeout provides .json sidecars that may contain the names of the people (or pets) found in the image. Should PhotoStructure import these tags under \"Who\"?.`,\n    defaultValue: true\n  }),\n\n  tagFaceRegions: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Picasa and other software supports embedding face names within \"RegionInfo.RegionList.Name\" metadata. If this setting is enabled, and \"RegionInfo.RegionList.Type\" is \"Face\", PhotoStructure will import these tags under \"Who\".`,\n    defaultValue: true\n  }),\n\n  whoTags: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    aliases: [\"tagWhoNames\"],\n    description: `This is a list of tags that will be examined for strings or string arrays. All values associated to these fields will be interpreted as names. Note that \"dotted notation\" is supported.`,\n    defaultValue: [\n      \"People\",\n      \"PersonInImage\",\n      \"PersonInImageWDetails.PersonName\",\n      \"PersonInImageName\",\n      \"RegionInfoMP.Regions.PersonDisplayName\"\n    ]\n  }),\n\n  tagNamesFormatter: new StringEnumSetting({\n    category: SettingCategories.Tagging,\n    description: `How should PhotoStructure format the \"Who\" tags for assets whose files are tagged with \"people\" strings?\\n- \"as-is\" will tag names directly to \"Who\", so, \"Who/Albert Einstein\".\\n- \"family/given\" will tag \"Who/Einstein/Albert\" (for regions that provide given names first).\\n- \"family/fullname\" will tag \"Who/Einstein/Albert Einstein\".\\nThe default is \"as-is,\" because discerning given and family names aren't reliably inferable.\\nSee https://en.wikipedia.org/wiki/Personal_name#Name_order .`,\n    defaultValue: NameTagFormats[\"as-is\"],\n    strEnum: NameTagFormats\n  }),\n\n  tagNamesDefaultFamily: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `If a name is missing a family name, if this value is not blank, it will be provided as a default. If this value is blank, the name tag will be Who/given. Note that this setting is only used if \"tagNamesFormatter\" is set to \"family/given\".`,\n    defaultValue: \"-\"\n  }),\n\n  tagNamesCapitalizedAsFamily: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Assume uppercased names are family names (this is common practice in geneology).`,\n    defaultValue: true\n  }),\n\n  tagNamesOrder: new StringEnumSetting({\n    category: SettingCategories.Tagging,\n    description: `How should PhotoStructure parse people's names? Note that this setting is only used if \"tagNamesFormatter\" is set to \"family/given\". See https://en.wikipedia.org/wiki/Personal_name#Name_order .`,\n    defaultValue: \"western\",\n    strEnum: NameTagOrders\n  }),\n\n  tagNamesSurnamePrefixes: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List all family name prefixes to be considered part of the family name. These are matched case-insensitively. This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: () => [\n      \"A\",\n      \"D’\",\n      \"Da\",\n      \"De la\",\n      \"De las\",\n      \"De\",\n      \"Del\",\n      \"Della\",\n      \"Den\",\n      \"Des\",\n      \"Di\",\n      \"Du\",\n      \"La\",\n      \"Las\",\n      \"Le\",\n      \"Li\",\n      \"Lo\",\n      \"Mc\",\n      \"Mac\",\n      \"op de\",\n      \"ten\",\n      \"ter\",\n      \"Van ‘t\",\n      \"van de\",\n      \"van der\",\n      \"van\",\n      \"von der\",\n      \"von\",\n      \"z\",\n      \"zu\"\n    ]\n  }),\n\n  tagNamesSurnames: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List all family names you expect in tags that are not single words that are found at the end of a tagged name. Hyphenated family names (like \"Ocasio-Cortez\") do not need to be listed here: only compound family names, and if your language doesn't separate family names with whitespace. In the latter case, either include all family names, or include all givenNames (whatever's easier for you). This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: () => []\n  }),\n\n  tagNamesGiven: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List all given names you expect in tags that are not single words. Hyphenated given names (like \"Rose-Ann\") do not need to be listed here. If your language doesn't separate family names and given names with whitespace, either include all given names, or include all familyNames (whatever's easier for you). This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: () => []\n  }),\n\n  // TODO:\n\n  // tagNamesGivenIgnored: new StringArraySetting({\n  //   category: SettingCategories.Tagging,\n  //   description: `These given names will always be ignored. This setting is case-insensitive.`,\n  //   defaultValue: () => []\n  // }),\n\n  // tagNamesFamilyIgnoredPrefixes: new StringArraySetting({\n  //   category: SettingCategories.Tagging,\n  //   description: `These strings will be stripped from family names, so \"Michelle LaVaughn Obama (née Robinson)\" doesn't get interpreted as having a maiden name of \"née Robinson\". This setting is case-insensitive.`,\n  //   defaultValue: () => [\"née\", \"nee\"]\n  // }),\n\n  tagNamesFamilySurrounds: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `This setting contains pairs of characters. When name portions are surrounded by these pairs, the contents will be added as a family name. As an example, if you use the default \"()\", then \"Michelle LaVaughn (Robinson) Obama\" will be name tagged with both \"Who/Robinson/Michelle LaVaughn\" and \"Who/Obama/Michell LaVaugn\". This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: [\"()\"]\n  }),\n\n  tagNamesGivenSurrounds: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `This setting contains pairs of characters. When name portions are surrounded by these pairs, the contents will be added to the end of the given name with the surrounds retained. As an example, if you use the defaults of \"[]\" and double-quotes, then \"Joe \"Joey\" Smith\" will be name tagged with Who/Smith/Joe \"Joey\". This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: [\"[]\", '\"\"']\n  }),\n\n  tagNamesLexical: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Assume any name with a comma is in \"lexical name order\", which is always \"lastname, given name(s)\". If the given name is found to be \"sr.\", \"senior\", \"jr.\", or \"junior\", the name will be considered to be in western order ($givenNames $familyName, $modifier), and the $modifier will be added to the $givenNames. If this is set to false, commas are ignored.`,\n    defaultValue: true\n  }),\n\n  excludedRootTags: new StringArraySetting<string>({\n    category: SettingCategories.Tagging,\n    description: `Keywords starting with the given roots will be omitted from your PhotoStructure library. Changing this value requires a library rebuild.`,\n    defaultValue: () => [\"http:\", \"https:\", \"file:\"]\n  }),\n\n  tagDisplayNameFS: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `What should PhotoStructure call the \"root\" tag for browsing by filesystem paths? Note that this value is only for the UI, and will update the \"_displayName\" of the /fs/ tag: this value won't change the URL path from be \"/tag/fs/.../\". Reasonable options that have been suggested include \"Folder\", \"Directory\", \"Drive\", \"File\", \"Path\", \"Volume\", or \"Computer\".`,\n    defaultValue: \"Folder\"\n  }),\n\n  tagDisplayNameFSRoot: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `On POSIX systems, how should PhotoStructure reference the \"root\" directory (/)? \"/\" is a bit confusing, so \"root\" may be less confusing? Also see \"tagDisplayNameFSRootWithHostname\".`,\n    defaultValue: \"root\"\n  }),\n\n  tagDisplayNameFSRootWithHostname: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `On non-docker hosts (which typically don't have reliable hostnames), should the root directory tag have the hostname appended?`,\n    defaultValue: () => (isTest() ? true : !isDocker())\n  }),\n\n  tagDisplayNameFSLabels: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should PhotoStructure use volume labels, if available, as display names for filesystem tags? As an example, instead of showing \"Folder / D:\", you'd see \"Folder / Photo backup #3\" (or whatever the label D: has).`,\n    defaultValue: true\n  }),\n\n  tagAlbumFilenames: new StringArraySetting({\n    aliases: [\"tagAlbumJsonFilenames\"],\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure will look for files in the same directory with these names for album metadata. This can be JSON, XMP, MIE, or EXIF encoded, and is case-sensitive.\\nSet this to an empty array (\"[]\") to disable this feature.`,\n    defaultValue: [\"metadata.json\"] as string[]\n  }),\n\n  tagAlbumTitle: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `If you have enabled \"tagAlbumFromJson\", what's the name of the field encoded in the album file? Object hierarchies are separated with a \".\".`,\n    defaultValue: \"albumData.title\"\n  }),\n\n  tagAlbumTitleHierarchies: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `If true, album titles will be split as hierarchical keywords. If false, album titles will not be split, and all albums will be under the \"Albums\" root tag.`,\n    defaultValue: false\n  }),\n\n  tagAlbumDescription: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `If you have enabled \"tagAlbumFromJson\", what's the name of the field encoded in the album file? Object hierarchies are separated with a \".\".`,\n    defaultValue: \"albumData.description\"\n  }),\n\n  tagAlbumDate: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `If you have enabled \"tagAlbumFromJson\", what's the name of the field encoded in the album file? Object hierarchies are separated with a \".\".`,\n    defaultValue: \"albumData.date\"\n  }),\n\n  tagAlbumsExcluded: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `For \"metadata.json\" albums, some are automatically generated. If the title or description includes any given string, it will be ignored.`,\n    defaultValue: [\"Album for automatically uploaded content\"]\n  }),\n\n  omitAncestorTags: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure's hierarchical tags assume implicit inheritance: that is, if you tag an asset with \"nature/sky\", \"nature\" is implicitly assumed.\\nIf this setting is true, PhotoStructure will omit tags that are already inferred from deeper descendant tags--that is, if an asset is tagged with \"nature/sky\" and \"nature\", and this setting is true, the \"nature\" tag will be omitted.`,\n    defaultValue: true\n  }),\n\n  // TODO:\n  // tagColor: new BooleanSetting({\n  //   name: \"tagColor\",\n  //   key: \"PS_TAG_COLOR\",\n  //   category: SettingCategories.Tagging,\n  //   description: `Should assets be tagged with their dominant color (like \"Color/Yellow\")?`,\n  //   defaultValue: true,\n  //   persisted: true\n  // }),\n\n  //\n  // Subscriptions\n  //\n\n  subscriptionTimeoutMs: new DurationSetting({\n    category: SettingCategories.Subscriptions,\n    description: `How long can PhotoStructure spend trying to gather system metadata and validating subscription licenses? This is fairly short, as the user is presumably waiting for PhotoStructure to spin up. If you have a slow system, you may want to increase this value.`,\n    defaultValue: () => \"7s\"\n  }),\n\n  pickPlanOnWelcome: new BooleanSetting({\n    category: SettingCategories.Subscriptions,\n    description: `If set to true, the welcome page flow will redirect to https://account.photostructure.com/plans to have you pick between a \"PLUS\" and \"LITE\" plan. If set to false, the welcome page will continue directly to the settings page with a \"LITE\" plan. You can still upgrade to a paid plan later from the main menu or the about page, even if this is false.`,\n    defaultValue: true\n  }),\n\n  coupon: new OptionalStringSetting({\n    category: SettingCategories.Subscriptions,\n    description: `Coupon to automatically apply during subscription setup. This value will be ignored if you've already gone through the subscription setup flow.\\nThe example value is a valid coupon code: thanks for reading!)\\nNote that you can apply a coupon after your free trial starts by visiting https://account.photostructure.com .`,\n    exampleValue: () => \"RTFM15\"\n  }),\n\n  autoRefreshLicense: new BooleanSetting({\n    category: SettingCategories.Subscriptions,\n    description: `PhotoStructure uses cryptographically signed licenses to locally store your current plan subscription status. These licenses are only valid for the current subscription period, and must be refreshed when your subscription renews or converts from a free trial to a paid subscription. To minimize the hassle of license renewals, PhotoStructure can automatically renew expired licenses in the background.\\nIf the current license has expired and this value is true, PhotoStructure will make one secure POST request to https://account.photostructure.com/ that contains several lossy one-way hashes of current system metadata. We hash all identifying metadata to only 15 characters to alleviate any privacy concerns. If your plan subscription is active, a new license will be added to your library.\\nSet this to false and set the \"reportErrors\" setting to false if you don't want PhotoStructure \"phoning home\" for any reason.\\nNote that if this is disabled, license renewals will require manual intervention: click \"Upgrade\" from the main menu, pick your plan, authenticate, and the license will automatically refresh.`,\n    defaultValue: true\n  }),\n\n  license: new OptionalStringSetting({\n    category: SettingCategories.Subscriptions,\n    sensitive: true,\n    description: `Subscription licenses are normally saved automatically into both your library and system configuration directories. This setting just provides users with an alternative way to provide a license, if it's more convenient. Any value provided to this setting will be considered in addition to existing license files when PhotoStructure is trying to find the \"best\" license available.`\n  })\n}\n\n// First set everyone's name:\nfor (const [k, v] of entries(Settings)) {\n  v._setName(k)\n}\n\n/**\n * Force the given path-separated paths to be the suggested values on the\n * welcome page.\n */\nexport const SuggestedDirsEnvKey = \"SUGGESTED_DIRS\"\n\n// Only exported for testing:\nexport function withDefaultPaths(paths: Maybe<string>): string {\n  const arr = (blank(paths) ? \"\" : paths).split(delimiter)\n  if (isDocker()) {\n    arr.unshift(\"/opt/photostructure/tools/bin\")\n  }\n  arr.push(...Settings.toolPaths.valueOrDefault)\n  return uniq(arr).filter(notBlank).join(delimiter)\n}\n\n// use getEnv(), not env().PATH, because Windows can use \"Path\"\nexport const pathWithDefaults = lazy(() => withDefaultPaths(getEnv(\"PATH\")))\n\nexport const allSettings = lazy(() => {\n  return sortBy(values(Settings), settingsSorter)\n})\n\nexport const persistedSettings = lazy(() => {\n  return allSettings().filter(ea => !ea.transient)\n})\n\nexport const transientSettings = lazy(() => {\n  return allSettings().filter(ea => ea.transient)\n})\n\nexport const persistedSystemSettings = lazy(() => {\n  return persistedSettings().filter(ea =>\n    SystemCategories.includes(ea.category)\n  )\n})\n\nexport const persistedLibrarySettings = lazy(() => {\n  return persistedSettings().filter(ea =>\n    LibraryCategories.includes(ea.category)\n  )\n})\n\nfunction settingsSorter(s: Setting<any>) {\n  return [\n    s.categoryType === \"system\" ? 0 : 1,\n    SettingCategories.indexOf(s.category) ?? SettingCategories.length + 1,\n    s.advanced,\n    s.name\n  ]\n}\n\nconst SettingsByNameOrKey = lazy(() => {\n  const settings = new CaseInsensitiveMap<Setting>()\n  for (const s of persistedSettings()) {\n    // Support both logLevel, log_level, and PS_LOG_LEVEL:\n    for (const ea of s.names) {\n      settings.set(ea, s)\n    }\n    for (const ea of s.keys) {\n      settings.set(ea, s)\n    }\n  }\n  return settings\n})\n\nexport function getSettingByNameOrKey(s: string) {\n  return SettingsByNameOrKey().get(toS(s).toLowerCase())\n}\n\nexport const ciSettings = lazy(\n  () => new CaseInsensitiveValued(Settings, (_, s) => [...s.names, ...s.keys])\n)\n\n// later(() => {\n//   if (isTest) {\n//   caseInsensitiveEnv.watchLater(() =>\n//     values(Settings).forEach(ea => ea.refreshEnvValue())\n//   )\n// })\n","import { lazy } from \"../../core/Lazy\"\nimport { isProd, isTest } from \"../NodeEnv\"\nimport { defaultCacheDir } from \"../dir/CacheDir\"\nimport { configDir } from \"../dir/ConfigDir\"\nimport { DefaultDockerLibraryDir } from \"../dir/DefaultDockerLibraryDir\"\nimport {\n  defaultLibraryDir,\n  defaultOriginalsDir\n} from \"../dir/DefaultLibraryDir\"\nimport { defaultLogDir_ } from \"../dir/LogDir\"\nimport { defaultPicturesDir } from \"../dir/PicturesDir\"\nimport { isEnvTrue } from \"../env/GetEnv\"\nimport { DefaultSharedStateDir } from \"../event/DefaultSharedStateDir\"\nimport { useFsWatch } from \"../fs/BaseFile\"\nimport { DefaultPaths, DefaultPosixPaths } from \"../fs/DefaultPaths\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { maxCpus } from \"../work/MaxCpus\"\nimport { Settings } from \"./Settings\"\n\n// This file was extracted to prevent Settings-related dependency loops.\n\n// Note that we're actually changing .opts.defaultValue here--it's the \"real\"\n// default.\n\nexport const setSettingsDefaults = lazy(() => {\n  Settings.configDir.opts.defaultValue = configDir\n\n  Settings.logDir.opts.defaultValue = defaultLogDir_\n\n  Settings.cacheDir.opts.defaultValue = defaultCacheDir\n\n  Settings.sharedStateDir.opts.defaultValue = () =>\n    DefaultSharedStateDir()?.nativePath\n\n  Settings.toolPaths.opts.defaultValue = () =>\n    (isEnvTrue(\"SETTINGS_IO_TEST\" as any)\n      ? DefaultPosixPaths\n      : DefaultPaths) as string[]\n\n  Settings.libraryDir.opts.exampleValue = () =>\n    isProd && isDocker()\n      ? DefaultDockerLibraryDir\n      : isTest\n      ? \"/home/test/Pictures\"\n      : defaultPicturesDir()\n\n  Settings.libraryDir.opts.defaultValue = defaultLibraryDir\n\n  Settings.originalsDir.opts.defaultValue = defaultOriginalsDir\n\n  Settings.scanPaths.opts.exampleValue = () => [defaultPicturesDir()]\n\n  Settings.powerShellProcs.opts.defaultValue = () =>\n    Math.max(2, Math.round(maxCpus() / 4))\n\n  // This breaks a deploop between Settings and BaseFile:\n  Settings.useFsWatch.watch(useFsWatch)\n})\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, isNotEmpty, mapNotEmpty, toNotEmpty } from \"../../fe/Array\"\nimport { sort } from \"../../fe/ArraySort\"\nimport { blank, firstNotBlank, toNotBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { eql } from \"../../fe/Eql\"\nimport { shortStack } from \"../../fe/Error\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { orList } from \"../../fe/FmtList\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { entries, values } from \"../../fe/Object\"\nimport { padding } from \"../../fe/Pad\"\nimport { trimRight } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { baseVersion } from \"../PhotoStructureVersion\"\nimport { capitalize, wrap } from \"../String\"\nimport { camel2snake } from \"../StringCase\"\nimport { version } from \"../Version\"\nimport {\n  libraryDataDirPosixFile,\n  setupLibraryDataDir_\n} from \"../dir/LibraryDirs\"\nimport { errorToS } from \"../error/Error\"\nimport { ee } from \"../event/EventEmitter\"\nimport { BaseFile } from \"../fs/BaseFile\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { handleDeprecatedSettings, handleMetaSettings } from \"./MetaSettings\"\nimport {\n  LibraryCategories,\n  Setting,\n  SystemCategories,\n  settingsToObj\n} from \"./Setting\"\nimport {\n  Settings,\n  ciSettings,\n  getSettingByNameOrKey,\n  persistedLibrarySettings,\n  persistedSettings,\n  persistedSystemSettings\n} from \"./Settings\"\nimport { setSettingsDefaults } from \"./SettingsDefaults\"\nimport { SettingsToml } from \"./SettingsToml\"\nimport { systemSettingsFile } from \"./SystemSettings\"\nimport { readTomlFile_ } from \"./Toml\"\nimport { valueToS } from \"./ValueToS\"\nimport { WrapComments } from \"./WrapComments\"\n\nconst logger = lazy(() => mkLogger(\"settings.SettingsIO\"))\n\nexport function librarySettingsFile(\n  libraryDir?: Maybe<string | PosixFile>\n): Maybe<PosixFile> {\n  return libraryDataDirPosixFile(libraryDir)?.join(SettingsToml)\n}\n\nexport const readSettings = lazy(async () => {\n  await readSystemSettings()\n  if (libraryHasSettings()) {\n    await readLibrarySettings()\n  }\n}, minuteMs)\n\n// Called by Service.setup:\nexport async function readSystemSettings(\n  settingsFile: Maybe<string | SimpleFile> = systemSettingsFile()\n) {\n  if (settingsFile == null) return\n  return _readSettings(BaseFile.for(settingsFile))\n}\n\nexport async function envOrSavedLibraryDir() {\n  return Settings.libraryDir.valueOrDefault ?? savedLibraryDir()\n}\n\nexport async function savedLibraryDir(): PromiseMaybe<string> {\n  try {\n    return toNotBlank(\n      (await readTomlFile_(systemSettingsFile()))?.[Settings.libraryDir.name]\n    )\n  } catch {\n    return\n  }\n}\n\nexport async function systemSettingsVersion(): PromiseMaybe<string> {\n  return readSettingsVersion(systemSettingsFile())\n}\n\nexport async function librarySettingsVersion(\n  libraryDir?: Maybe<string>\n): PromiseMaybe<string> {\n  return map(librarySettingsFile(libraryDir), ea => readSettingsVersion(ea))\n}\n\n// MUST BE CALLED AFTER SYSTEM SETTINGS HAVE BEEN READ\nexport async function maybeUpgradeSystemSettings() {\n  // write system settings if they are missing or outdated.\n  if (version !== (await systemSettingsVersion())) {\n    await writeSystemSettings_()\n  }\n}\n\nexport async function maybeUpgradeLibrarySettings() {\n  if (libraryHasSettings() && version !== (await librarySettingsVersion())) {\n    await writeLibrarySettings_()\n  }\n}\n\nexport const libraryHasSettings = lazy(() => _libraryHasSettings())\n\n// we don't want to unset this, as it is watched by HealthCheck--and .unset()\n// will set it to null, and then immediately set it to true as soon as someone\n// calls it again.\nlibraryHasSettings.unset = () => {\n  logger().error(\"libraryHasSettings.unset() is invalid\", shortStack())\n}\n\nlater(() => {\n  function refresh() {\n    // we don't want to unset this, as it is watched by HealthCheck--and\n    // .unset() will set it to null, and then immediately set it to true\n    // again.\n    libraryHasSettings.refresh()\n  }\n  ee().on(\"clearCache\", refresh)\n  ee().on(\"settingsChanged\", refresh)\n  Settings.libraryDir.watchLater(refresh)\n})\n\n// This needs to be sync for WebService and MenuItems:\nexport function _libraryHasSettings(libraryDir?: string): boolean {\n  const lsf = librarySettingsFile(libraryDir)\n  return logger().tap({\n    msg: \"_libraryHasSettings\",\n    result: lsf?.clear().existsSync() ?? false,\n    level: \"info\",\n    meta: {\n      libraryDir,\n      settings: Settings.libraryDir.valueOrDefault,\n      librarySettingsFile: lsf?.nativePath\n    }\n  })\n}\n\nconst VersionRE = /^# PhotoStructure v(?<version>\\d+\\.\\d+\\.\\d+(?:-\\S+)?)$/i\n\nasync function readSettingsVersion(\n  file: Maybe<string | SimpleFile>\n): PromiseMaybe<string> {\n  if (blank(file)) return\n  const match = await BaseFile.for(file).firstMatchingLine(VersionRE)\n  return match?.groups?.version\n}\n\nasync function writeToml_(file: PosixFile, settings: Setting<any>[]) {\n  if (file == null) {\n    logger().warn(\"writeToml(): null file, failed to write settings\", {\n      file,\n      settings\n    })\n    return\n  }\n  const wip = await file.clear().isNonEmpty()\n  const dest = wip ? file.wip() : file\n  await _writeToml_(dest, settings)\n  logger().info(\"writeToml(): wrote settings\", {\n    dest,\n    file,\n    nonDefaults: settingsToObj(settings),\n    wip\n  })\n\n  if (wip) {\n    const a = await readTomlFile_(dest)\n    const b = await readTomlFile_(file)\n    if (!eql(a, b)) {\n      logger().info(\"Archiving prior, different contents\", { dest, file })\n      await file.renameYMDHMS_({ subdir: \"old\" })\n      await dest.unwip_()\n    } else {\n      logger().info(\"Equivalent contents\", { dest, file, a, b })\n      await dest.unlink()\n    }\n  }\n}\n\n// This is lazy so that SettingIO.spec can force version to an expected value:\nexport const versionForSettings = lazy(() => version)\n\nasync function _writeToml_(\n  file: BaseFile,\n  settings: Setting<any>[]\n): Promise<void> {\n  // const priorValues: JsonMap = {}\n  // for (const ea of priors) {\n  //   const prior = await readTomlFile(ea)\n  //   logger().info(\"writeToml(): importing \" + ea, prior)\n  //   assignFields(priorValues, prior)\n  // }\n  // logger().info(\"writeToml(): final prior values:\", priorValues)\n\n  const lines: string[] = [padding(\"#\", 80)]\n  lines.push(\n    ...wrapComments(\n      \"\",\n      \"Howdy!\",\n      \"\",\n      `These are ${settings[0].categoryType} settings for PhotoStructure.`,\n      \"\",\n      \" - Please shut down PhotoStructure before editing this file.\",\n      \"\",\n      \" - PhotoStructure has TWO settings files! See\",\n      \"   https://photostructure.com/getting-started/advanced-settings/#omg-why-2\",\n      \"   to see why.\",\n      \"\",\n      ` - NOTE: lines starting with a \"#\" are commented out.`,\n      \"\",\n      ` - To override a setting, uncomment the line by removing the \"# \" from`,\n      `   the beginning of the line, and change the value.`,\n      \"\",\n      ` - All duration settings end with \"Duration\" or \"Ms\" (for milliseconds).`,\n      `   See https://photostructure.com/getting-started/advanced-settings#duration`,\n      `   for details.`,\n      \"\",\n      ` - See https://photostructure.com/settings/ for more documentation.`,\n\n      \"Thanks for using PhotoStructure! Visit https://forum.photostructure.com/ if you find any bugs or have any questions, ideas, or feedback. We'd love to hear from you.\",\n      \"\",\n      \"-- \", // old email signature!\n      \"\",\n      // DON'T EDIT THIS! WE USE IT TO CHECK THE VERSION! See `VersionRE` above\n      \"PhotoStructure v\" + versionForSettings()\n    )\n  )\n\n  lines.push(\"\", \"\")\n\n  let priorCat = \"\"\n  for (const setting of settings) {\n    const cat = `${capitalize(\n      setting.categoryType\n    )}.${setting.category.toLowerCase()}`\n\n    if (cat !== priorCat) {\n      priorCat = cat\n      lines.push(\n        \"\",\n        padding(\"#\", 78),\n        \"#\",\n        \"# Settings for \" + cat + \":\",\n        \"#\",\n        \"\",\n        \"\"\n      )\n    }\n    lines.push(...setting.toTomlLines())\n    lines.push(\"\", \"\")\n  }\n\n  await file.writeText_(\"\\n\" + lines.map(trimRight).join(\"\\n\") + \"\\n\\n\")\n  ee().emitDebounced(\"settingsChanged\")\n}\n\nexport async function writeSystemSettings_(\n  dest: Maybe<string | SimpleFile> = systemSettingsFile()\n): PromiseMaybe<PosixFile> {\n  const pf = PosixFile.forMaybe(dest)\n  if (pf != null) await writeToml_(pf, persistedSystemSettings())\n  return pf\n}\n\nexport function writeAllSettings_(dest: string | SimpleFile) {\n  return writeToml_(PosixFile.for(dest), persistedSettings())\n}\n\nexport function readLibrarySettings(libraryDir?: string) {\n  return _readSettings(librarySettingsFile(libraryDir))\n}\n\n/**\n * @throws if there are errors\n */\nexport async function writeLibrarySettings_(\n  libraryDir?: string\n): PromiseMaybe<PosixFile> {\n  await setupLibraryDataDir_(\n    firstNotBlank(libraryDir, Settings.libraryDir.value)!\n  )\n  const file = librarySettingsFile(libraryDir)\n  logger().info(\"writeLibrarySettings()\", { file })\n  if (file != null) {\n    await writeToml_(file, persistedLibrarySettings())\n    libraryHasSettings.refresh()\n  }\n  return file\n}\n\nexport async function _readSettings(\n  f: Maybe<BaseFile>\n): Promise<Setting<any>[]> {\n  if (f == null) return []\n  const log = logger().addContext(\".importFileSettings(\" + f?.nativePath + \")\")\n  try {\n    const result = await importFileSettings_(f)\n    if (isNotEmpty(result.warnings)) {\n      log.warn(\"Problems during import\", result.warnings)\n    }\n    return result.settings\n  } catch (err) {\n    log.error(\"Cannot read: \" + errorToS(err))\n    return []\n  }\n}\n\nexport async function importFileSettings_(\n  f: BaseFile\n): Promise<{ settings: Setting<any>[]; warnings?: string[] }> {\n  const log = logger().addContext(\".importFileSettings_(\" + f.nativePath + \")\")\n  const st = await f.stat()\n  if (st == null) {\n    return { settings: [], warnings: [\"Cannot read\"] }\n  }\n  if (st.size === 0) {\n    // empty file is OK?\n    return { settings: [], warnings: [\"Cannot read empty file\"] }\n  }\n  const tomlMap = await readTomlFile_(f)\n  if (tomlMap == null) {\n    return { settings: [], warnings: [\"No settings found\"] }\n  }\n\n  const warnings: string[] = []\n\n  const settings = compact(\n    entries(tomlMap).map(([key, value]) => {\n      const s = getSettingByNameOrKey(key)\n      if (s == null) {\n        warnings.push(\n          `Failed to import \"${key}\"${mapOr(\n            ciSettings().lookupNearest(key),\n            ea => `: did you mean \"${ea.key}\"?`,\n            \"\"\n          )}`\n        )\n      } else {\n        if (null == s.normalizeValue(value)) {\n          warnings.push(`Invalid value for \"${key}\": ${stringify(value)}`)\n        } else {\n          s.fileValue = value\n          return s\n        }\n      }\n      return undefined\n    })\n  )\n  log.info(\"loaded\", {\n    settings: settingsToObj(settings),\n    warnings: toNotEmpty(warnings)\n  })\n  handleMetaSettings(settings)\n  await handleDeprecatedSettings()\n  return { settings, warnings }\n}\n\nconst UnclearableSettings = lazy(\n  () =>\n    new Set(\n      [\n        Settings.httpPort,\n        Settings.license,\n        Settings.logStdout,\n        Settings.logLevel\n      ].map(ea => ea.key)\n    )\n)\n\nexport async function clearLibraryDirSetting() {\n  await readSystemSettings()\n  Settings.libraryDir.unset()\n  await writeSystemSettings_()\n}\n\n/**\n * Force all in-memory settings to default values.\n */\nexport function clearSettings() {\n  values(Settings)\n    // don't reset LOG, NODE_ENV, or random ports!\n    .filter(ea => !UnclearableSettings().has(ea.key))\n    .forEach(ea => ea.unset())\n  ee().emit(\"settingsChanged\")\n  // we're not emitting clearCache here--use nukeSettings() if you need that.\n  // (see PathToLibraryAsset for an example why)\n}\n\n/**\n * Force all in-memory Settings to default values, and delete both system and\n * library settings.\n *\n * Only useful for tests.\n */\nexport async function nukeSettings() {\n  await map(systemSettingsFile(), ea => BaseFile.for(ea))?.unlink(\"trace\")\n  await map(librarySettingsFile(), ea => ea.unlink(\"trace\"))\n  clearSettings()\n  ee().emit(\"clearCache\")\n  setSettingsDefaults.refresh()\n  return\n}\n\nfunction wrapComments(...lines: string[]): string[] {\n  return flatten(lines.map(ea => wrap(ea, WrapComments)))\n}\n\nexport async function writeEnv(\n  file: BaseFile,\n  settings: Setting<any>[]\n): Promise<void> {\n  const lines: string[] = []\n  lines.push(\n    ...wrapComments(\n      \"\",\n      `Welcome to PhotoStructure! These are the settings for version ${baseVersion()}.`,\n      \"\",\n      \"Please see https://photostructure.com/environment-variables for more information about using environment variables with PhotoStructure.\",\n      \"\",\n      `As of version 2.1, \".env\" files (like this one) can be imported by PhotoStructure, but requires extra configuration. See https://photostructure.com/faq/environment-variables/#PS_ENV_FILE for details.`\n    )\n  )\n  lines.push(\"\", \"\")\n  lines.push(\n    ...wrapComments(\n      \"\",\n      \"The following settings categories are stored in the system settings.toml:\",\n      \"\",\n      ...sort([...SystemCategories]).map(ea => \"* System.\" + ea),\n      \"\",\n      `The following settings categories are stored in the library settings.toml:`,\n      \"\",\n      ...sort([...LibraryCategories]).map(ea => \"* Library.\" + ea),\n      \"\",\n      \"Please visit https://forum.photostructure.com if you find anything that may be a bug or have any questions, ideas, or feedback. We'd love to hear from you!\"\n    )\n  )\n  lines.push(\"\", \"\")\n  lines.push(\n    ...wrapComments(\n      `-------------`,\n      `PS_CONFIG_DIR`,\n      `-------------`,\n      \"\",\n      `If the environment variable PS_CONFIG_DIR is set, PhotoStructure will use that value as your system configuration directory.`,\n      \"\",\n      `This is an advanced setting--we recommend using the default value, if possible.`,\n      \"\",\n      `If the PS_CONFIG_DIR environment variable is not set, the default is specific to your operating system:`,\n      \"\",\n      `- On Docker: \"/ps/config\" if that bind-mount exists, otherwise \"/ps/library/.photostructure/docker-config\".`,\n      \"\",\n      `- On Linux: firstNonBlank([$XDG_DATA_HOME, $XDG_CONFIG_HOME, \"$HOME/.config\"]) + \"/PhotoStructure\"`,\n      \"\",\n      `- On macOS: \"$HOME/Library/Application Support/PhotoStructure\"`,\n      \"\",\n      `- On Windows: \"$APPDATA/PhotoStructure\" ($APPDATA is normally set to $HOME/AppData/Roaming)`\n    )\n  )\n  lines.push(\"\", \"\")\n  lines.push(\n    ...wrapComments(\n      `-----------`,\n      `PS_ENV_FILE`,\n      `-----------`,\n      \"\",\n      \"If set, PhotoStructure will attempt to read the .env file specified by this environment variable.\",\n      \"\",\n      \"This must be a full pathname.\",\n      \"\",\n      \"Any value set by this file will override values in settings.toml files.\",\n      \"\",\n      \"See https://photostructure.com/faq/environment-variables/#alternative-coming-in-v21-support-for-env-files for details.\"\n    )\n  )\n  lines.push(\"\", \"\")\n\n  let priorCat = \"\"\n  settings.forEach(setting => {\n    const cat = `${capitalize(\n      setting.categoryType\n    )}.${setting.category.toLowerCase()}`\n\n    if (cat !== priorCat) {\n      priorCat = cat\n      lines.push(\n        \"\",\n        padding(\"#\", 78),\n        \"#\",\n        \"# Settings for \" + cat + \":\",\n        \"#\",\n        \"\"\n      )\n    }\n\n    const name = `${setting.key} or ${setting.name}`\n\n    const extra: any = { ...setting.addToJSON() }\n    mapNotEmpty(setting.altKeys, arr => (extra.aliases = orList(arr)))\n\n    const extraLines = entries(extra).map(\n      ([k, v]) =>\n        `${capitalize(camel2snake(k)).replace(/_+/g, \" \")}: ${valueToS(v)}`\n    )\n\n    if (isNotEmpty(extraLines)) extraLines.push(\"\")\n\n    lines.push(\n      ...wrapComments(\n        padding(\"-\", name.length),\n        name,\n        padding(\"-\", name.length),\n        \"\",\n        ...(setting.opts.deprecated === true\n          ? [\n              \"NOTE: this setting has been deprecated and will be removed in a future version of PhotoStructure.\",\n              \"\"\n            ]\n          : []),\n        setting.opts.description.replace(/\\n+/g, \"\\n\\n\"),\n        \"\",\n        ...(setting.transient\n          ? [\n              `This setting is transient and only set via environment variables.`,\n              \"\\n\"\n            ]\n          : []),\n        ...extraLines,\n        `${setting.key}=${stringify(\n          toS(setting.opts.toEnv(setting.fileValue ?? setting.defaultValue))\n        )}`\n      )\n    )\n    lines.push(\"\", \"\")\n  })\n\n  await file.writeText_(lines.map(ea => trimRight(ea)).join(\"\\n\"))\n}\n","export const SettingsToml = \"settings.toml\"\n","import { delimiter } from \"path\"\nimport {\n  compact,\n  compactBlankish,\n  isEmpty,\n  isNotEmpty,\n  uniq\n} from \"../../fe/Array\"\nimport { notBlankToS } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toA } from \"../../fe/toA\"\nimport {\n  BaseSettingOpts,\n  DefaultValued,\n  Setting,\n  SettingConverters\n} from \"./Setting\"\n\nexport function _join(arr: Maybe<string[]>): Maybe<string> {\n  return arr == null ? undefined : stringify(arr)\n}\n\nfunction _split(s: Maybe<string>): Maybe<string[]> {\n  const str = notBlankToS(s)\n  if (str == null) return\n  if (str.startsWith(\"[\") && str.endsWith(\"]\")) {\n    try {\n      return compact(toA(JSON.parse(str)).map(notBlankToS))\n    } catch {\n      //\n    }\n  }\n  // broken pipe kept for backward compatibility:\n  for (const ea of [\"¦\", delimiter]) {\n    if (str.includes(ea)) {\n      return compactBlankish(str.split(ea))\n    }\n  }\n  return [str]\n}\n\nexport function splitStringArray(s: Maybe<string>): Maybe<string[]> {\n  return map(_split(s), compactBlankish)\n}\n\nexport class StringArraySetting<T extends string = string> extends Setting<\n  T[]\n> {\n  constructor(\n    opts: BaseSettingOpts<T[]> &\n      Partial<DefaultValued<T[]>> &\n      Partial<SettingConverters<T[]>>\n  ) {\n    super({\n      defaultValue: [],\n      fromEnv: splitStringArray as any,\n      toEnv: _join,\n      ...opts\n    })\n  }\n\n  protected toValidValue(s: Maybe<string>): Maybe<T> {\n    return notBlankToS(s) as T\n  }\n\n  protected toValidValues(arr: Maybe<string[]>): Maybe<T[]> {\n    return arr == null ? undefined : uniq(arr.map(ea => this.toValidValue(ea)))\n  }\n\n  push(...values: string[]) {\n    if (isEmpty(values)) return\n    this.value = this.toValidValues([...toA(this.value), ...toA(values)])\n  }\n\n  has(value: string) {\n    return toA(this.values).includes(value as any)\n  }\n\n  /**\n   * valueOrDefault for arrays\n   *\n   * @todo replace callers with valueOrDefault? This method as it stands isn't\n   * safe, as it could be modified by a caller.\n   */\n  get values(): T[] {\n    return this.value ?? this.defaultValue\n  }\n\n  set values(arr: Maybe<string[]>) {\n    this.userValue = this.toValidValues(arr)\n  }\n\n  /**\n   * @return if `this.values` is an empty array. Note that this.values delegates to this.defaultValue if this.value is nullish.\n   */\n  isEmpty() {\n    return isEmpty(this.values)\n  }\n\n  isNotEmpty() {\n    return isNotEmpty(this.values)\n  }\n}\n","import { StrEnum } from \"../../fe/StrEnum\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class StringEnumSetting<T extends string> extends Setting<T> {\n  readonly strEnum: StrEnum<T>\n  constructor(opts: SettingOpts<T> & { strEnum: StrEnum<T> }) {\n    super({\n      toEnv: s => opts.strEnum.getCI(s),\n      fromEnv: s => opts.strEnum.getCI(s),\n      ...opts\n    })\n    this.strEnum = opts.strEnum\n    // NOTE: do not compactBlanks! A blank may be a valid value!\n    const dv = this.defaultValue\n    // Allow defaultValue to be undefined:\n    if (!this.strEnum.has(dv)) {\n      throw new Error(\n        `${this.strEnum.values}, doesn't include defaultValue, ${opts.defaultValue}`\n      )\n    }\n  }\n  addToJSON() {\n    return { \"valid values\": this.strEnum.values }\n  }\n}\n","import { compact, uniq } from \"../../fe/Array\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { StrEnum } from \"../../fe/StrEnum\"\nimport { BaseSettingOpts } from \"./Setting\"\nimport { StringArraySetting, splitStringArray } from \"./StringArraySetting\"\n\nfunction parseStringEnum<T extends string>(\n  str: Maybe<string>,\n  strEnum: StrEnum<T>\n): Maybe<T[]> {\n  return compact(splitStringArray(str)?.map(ea => strEnum.getCI(ea)))\n}\n\nexport class StringEnumsSetting<T extends string> extends StringArraySetting {\n  readonly strEnum: StrEnum<T>\n  constructor(\n    opts: BaseSettingOpts<string[]> & {\n      defaultValue?: T[]\n      strEnum: StrEnum<T>\n    }\n  ) {\n    super({\n      toEnv: arr => map(arr, ea => stringify(uniq(ea))),\n      fromEnv: s => parseStringEnum(s, opts.strEnum),\n      defaultValue: opts.defaultValue ?? opts.strEnum.values,\n      ...opts\n    })\n    this.strEnum = opts.strEnum\n  }\n\n  protected override toValidValue(s: string): Maybe<T> {\n    return this.strEnum.getCI(s)\n  }\n\n  override addToJSON() {\n    return { \"valid values\": this.strEnum.values }\n  }\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class StringSetting extends Setting<string> {\n  constructor(opts: SettingOpts<string>) {\n    super({\n      toEnv: trim,\n      fromEnv: trim,\n      ...opts\n    })\n  }\n\n  hasValue() {\n    return notBlank(this.value)\n  }\n}\nfunction trim(s: Maybe<string>) {\n  return s == null ? undefined : s.trim()\n}\n","import { join } from \"path\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { configDir } from \"../dir/ConfigDir\"\nimport { SettingsToml } from \"./SettingsToml\"\n\nexport function systemSettingsFile(): Maybe<string> {\n  return map(configDir(), ea => join(ea, SettingsToml))\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const TagInferenceSettingValues = strEnum(\"never\", \"always\", \"auto\")\nexport type TagInferenceSettingValue = StrEnumKeys<\n  typeof TagInferenceSettingValues\n>\n","import { JsonMap, parse } from \"@iarna/toml\"\nimport { readFile, readFileSync, writeFile } from \"fs-extra\"\nimport { blank, mapNotBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { Obj } from \"../../fe/Object\"\nimport { debom } from \"../Buffer\"\nimport { mkLogger } from \"../Logger\"\nimport { dumbquote } from \"../String\"\nimport { joinLines } from \"../fs/CRLF\"\nimport { SimpleFileOrString, toNativePath_ } from \"../fs/SimpleFile\"\nimport { isFileSync } from \"../fs/StatSync\"\nimport { stringifyToml } from \"./TomlStringify\"\n\nfunction parseToml(s: Maybe<string>) {\n  return blank(s) ? undefined : parse(dumbquote(s))\n}\n\nfunction parseTomlBuffer(buf: Buffer) {\n  return parseToml(debom(buf))\n}\n\nexport function readTomlFileSync(\n  file: Maybe<SimpleFileOrString>\n): Maybe<JsonMap> {\n  const nativePath = mapNotBlank(file, toNativePath_)\n  if (nativePath == null) return\n  try {\n    return isFileSync(nativePath)\n      ? parseTomlBuffer(readFileSync(nativePath))\n      : undefined\n  } catch (error) {\n    mkLogger(\"settings.Toml\").warn(\"readTomlFileSync() failed\", {\n      nativePath,\n      error\n    })\n    return\n  }\n}\n\nexport async function readTomlFile_(\n  file: Maybe<SimpleFileOrString>\n): PromiseMaybe<JsonMap> {\n  return mapNotBlank(file, async ea =>\n    parseTomlBuffer(await readFile(toNativePath_(ea)))\n  )\n}\n\nexport function writeTomlFile_(file: SimpleFileOrString, data: Obj) {\n  return writeFile(toNativePath_(file), joinLines(...stringifyToml(data)))\n}\n","import { blank } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { Obj, entries } from \"../../fe/Object\"\nimport { wrap } from \"../../fe/String\"\nimport { toA } from \"../../fe/toA\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { WrapComments } from \"./WrapComments\"\n\nexport function stringifyToml(obj: Obj) {\n  return splitLines(...entries(obj).map(([k, v]) => kvToToml(k, v)))\n}\n\nfunction kvToToml(k: string, v: any) {\n  // We add 2 spaces here to make long array values wrap:\n  return k + \" = \" + stringify(v, undefined, 2)\n}\n\nexport function wrapTomlToLines(args: {\n  lines: string[]\n  wrap?: typeof WrapComments\n  key: Maybe<string>\n  value: any\n  prepend?: string[]\n}) {\n  if (blank(args.key) || args.value == null) return args.lines\n  const lines = [...toA(args.prepend), kvToToml(args.key, args.value)]\n  if (args.lines.length > 0) lines.unshift(\"\")\n  args.lines.push(...wrap(lines, args.wrap))\n  return args.lines\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const UpgradeChannels = strEnum(\"prealpha\", \"alpha\", \"beta\", \"stable\")\nexport type UpgradeChannel = StrEnumKeys<typeof UpgradeChannels>\n","import { orList } from \"../../fe/FmtList\"\nimport { stringify } from \"../../fe/JSON\"\n\nexport function valueToS(v: any): string {\n  return 1 < 2\n    ? stringify(v, undefined, 2) //  just use stringify, it's valid TOML.\n    : Array.isArray(v)\n    ? orList(v.map(ea => stringify(ea)))\n    : stringify(v)\n}\n","import { keys } from \"../../fe/Object\"\nimport { equalsIgnoreCase } from \"../String\"\nimport { env } from \"../env/Env\"\nimport { IgnorableEnvKeys } from \"../env/EnvKeys\"\nimport { ciSettings } from \"./Settings\"\n\nexport function verifyPsEnvSettings(\n  e = env(),\n  minDiceCoeff = 0.25\n): { envKey: string; msg: string }[] {\n  const result = []\n  for (const envKey of keys(e).filter(ea => {\n    const key = ea.toUpperCase()\n    return key.startsWith(\"PS_\") && !IgnorableEnvKeys.includes(key)\n  })) {\n    const envValue: any = e[envKey]\n    const exact = ciSettings().lookup(envKey)\n    if (exact != null) {\n      // verify that the value will be used:\n      const parsed = exact.value.opts.fromEnv(envValue)\n      if (parsed == null) {\n        result.push({\n          envKey,\n          msg: `The value \"${e[envKey]}\" isn't valid for this ${exact.value.constructor.name}.`\n        })\n      }\n    } else {\n      const closest = ciSettings().lookupNearest(envKey, minDiceCoeff)\n      if (closest == null) {\n        result.push({ envKey, msg: `No setting was found like \"${envKey}\"` })\n      } else if (!equalsIgnoreCase(closest.key, envKey)) {\n        result.push({\n          envKey,\n          msg: `Did you mean setting \"${closest.value.key}\"?`\n        })\n      }\n    }\n  }\n  return result\n}\n","export const WrapComments = { maxLineLen: 78, prefix: \"# \" }\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { extractFloat } from \"../Number\"\n\nexport function extractBitrateKbps(tags: {\n  AvgBitrate?: string\n  MaxDataRate?: string\n}): Maybe<number> {\n  for (const ea of [\"AvgBitrate\", \"MaxDataRate\"] as const) {\n    const result = parseBitrateKbps(tags[ea])\n    if (result != null) return result\n  }\n  return\n}\n\n// MB/s or Kbps\n\nconst units = [\n  { pat: \"mb/s\", fac: 1024 },\n  { pat: \"mbps\", fac: 1024 },\n  { pat: \"kb/s\", fac: 1 },\n  { pat: \"kbps\", fac: 1 }\n] as const\n\nfunction parseBitrateKbps(s: Maybe<string>): Maybe<number> {\n  const f = extractFloat(s)\n  if (f == null) return\n  const lc = toS(s).toLowerCase()\n  for (const ea of units) {\n    if (lc.includes(ea.pat)) return f * ea.fac\n  }\n  return\n}\n","import { stripCopySuffixFromName, stripDSC } from \"../fs/FuzzyNames\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { isString, trimLeftPadding } from \"../String\"\n\n/**\n * Pull out the basename, remove prefixes like \"IMG_\", \"VID_\", and \"MOV_\",\n * strip any count suffixes, then downcase.\n */\nexport function bname(f: SimpleFile | string, stripCounts = true): string {\n  let name = isString(f) ? f : f.name\n  if (stripCounts) {\n    name = stripCopySuffixFromName(name)\n  }\n  name = trimLeftPadding(stripDSC(name))\n  return name.toLowerCase().normalize()\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { inspect } from \"util\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isEmpty, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { secondMs } from \"../../fe/Date\"\nimport { eql } from \"../../fe/Eql\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, mapFinite } from \"../../fe/Number\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { toS } from \"../../fe/toS\"\nimport { leastBy, max } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { stripPrefix, uniqPath } from \"../String\"\nimport { AssetFileCapturedAtFields, IAssetFile } from \"../asset-file/IAssetFile\"\nimport { firstDefinedLater } from \"../async/Later\"\nimport { fmtMs } from \"../date/Date\"\nimport {\n  Dated,\n  datedOverlap,\n  datedToPrecisionMs,\n  datedToStartDateTime,\n  datedToStartTs\n} from \"../date/Dated\"\nimport { datedToMillis } from \"../date/DatedToMillis\"\nimport {\n  datedToEXIF,\n  datedToISO,\n  datedToOffsetMinutes,\n  setZone\n} from \"../date/FuzzyDate\"\nimport { extractDateFromPath, parseDated } from \"../date/FuzzyDateParser\"\nimport { getMillisecond } from \"../date/GetDateField\"\nimport { hasTime } from \"../date/HasTime\"\nimport {\n  datedToLocal,\n  datedToLocalSec,\n  localIsFuzzy,\n  localToDateTime\n} from \"../date/Localtime\"\nimport { fmtOffsetMinutes, isUTCZone, isValidZone } from \"../date/Timezone\"\nimport { isValidDate } from \"../date/ValidDate\"\nimport { getZoneName, hasZone } from \"../date/getZoneName\"\nimport { containedByNativePath } from \"../fs/Path\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString, toNativePath_ } from \"../fs/SimpleFile\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { Settings } from \"../settings/Settings\"\nimport { bname } from \"./Bname\"\nimport { extMimetype } from \"./FileTypes\"\nimport { ParsedTags } from \"./ParsedTags\"\nimport {\n  extractStatBname as extractStatBnameTime,\n  extractStatPathTime,\n  inferCapturedAtFromSiblings\n} from \"./TagInference\"\nimport { WithCapturedAt } from \"./WithCapturedAt\"\n\nconst logger = lazy(() => mkLogger(\"tags.CapturedAt\"))\n\nexport interface CapturedAtWithTz extends Pick<Tags, \"tz\" | \"tzSource\"> {\n  capturedAt: CapturedAt\n}\n\nexport function capturedAtSrcFromTags(src: string): boolean {\n  return toS(src).toLowerCase().startsWith(\"tags\")\n}\n\n/**\n * Should a captured-at source be considered high-quality enough to be stored with copies?\n */\nexport function capturedAtSrcFromStat(src: string): boolean {\n  // We're copying over the tags, so we don't need those:\n  return src === \"stat\"\n}\n\nexport class CapturedAt {\n  #precisionMs: Maybe<number>\n  #local: Maybe<number>\n\n  static for({\n    nativePath,\n    date,\n    src,\n    mtime,\n    precisionMs,\n    local\n  }: {\n    nativePath: SimpleFileOrString\n    date: Dated\n    src: string\n    mtime?: Date\n    precisionMs?: number\n    local?: number\n  }) {\n    return new CapturedAt(\n      toNativePath_(nativePath),\n      date,\n      src,\n      mtime,\n      precisionMs,\n      local\n    )\n  }\n\n  static fromAssetFile(\n    af: Pick<IAssetFile, \"nativePath\" | \"mtime\"> & AssetFileCapturedAtFields\n  ) {\n    return map(localToDateTime(af.capturedAtLocal, af.capturedAtOffset), date =>\n      CapturedAt.for({\n        nativePath: af.nativePath,\n        date,\n        src: af.capturedAtSrc,\n        mtime: new Date(af.mtime),\n        precisionMs: af.capturedAtPrecisionMs,\n        local: af.capturedAtLocal\n      })\n    )\n  }\n  private constructor(\n    readonly nativePath: string,\n    readonly date: Dated,\n    readonly src: string,\n    readonly mtime?: Date,\n    precisionMs?: number,\n    local?: number\n  ) {\n    this.#precisionMs = precisionMs === 0 ? undefined : precisionMs\n    this.#local = local === 0 ? undefined : local\n  }\n\n  get local(): number {\n    return (this.#local ??= datedToLocal(this.date))\n  }\n\n  get precisionMs() {\n    return (this.#precisionMs ??= datedToPrecisionMs(this.date))\n  }\n\n  toJSON() {\n    // the json reviver for DateTime is bad--it loses the zone.\n    return {\n      // \"_ctor\" is magick! see ../JSON.\n      _ctor: \"CapturedAt\",\n      nativePath: this.nativePath,\n      date: this.date,\n      src: this.src,\n      mtime: this.mtime?.getTime(),\n      precisionMs: this.precisionMs,\n      local: this.local,\n      zone: this.zoneName\n    }\n  }\n  [inspect.custom]() {\n    return { ...this }\n  }\n\n  static fromJSON(obj: ReturnType<CapturedAt[\"toJSON\"]>) {\n    return new CapturedAt(\n      obj.nativePath,\n      obj.date,\n      obj.src,\n      mapFinite(obj.mtime, ea => new Date(ea)),\n      obj.precisionMs,\n      obj.local\n    )\n  }\n\n  spread(p: Partial<CapturedAt>): CapturedAt {\n    const o = { ...this, ...p }\n    return new CapturedAt(o.nativePath, o.date, o.src, o.mtime)\n  }\n\n  toISOString() {\n    return datedToISO(this.date)\n  }\n\n  toExifString() {\n    return datedToEXIF(this.date)\n  }\n\n  toOffsetMinutes() {\n    return datedToOffsetMinutes(this.date)\n  }\n\n  exifOffsetMinutes() {\n    const mins = this.toOffsetMinutes()\n    return mins == null ? undefined : fmtOffsetMinutes(mins)\n  }\n\n  get isFromTags() {\n    return capturedAtSrcFromTags(this.src)\n  }\n\n  get isInferred() {\n    return !capturedAtSrcFromTags(this.src) && !capturedAtSrcFromStat(this.src)\n  }\n\n  get isFuzzy() {\n    const l = this.local\n    return !this.isFromTags || l == null || localIsFuzzy(l)\n  }\n\n  toString() {\n    return stringify({\n      nativePath: this.nativePath,\n      date: this.toISOString(),\n      src: this.src,\n      mtime: this.mtime\n    })\n  }\n\n  toISOStringWithPrecision() {\n    return (\n      datedToISO(this.date, true, this.precisionMs) +\n      \" (±\" +\n      fmtMs(this.precisionMs) +\n      \")\"\n    )\n  }\n\n  hasTz() {\n    return hasZone(this.date)\n  }\n\n  get zoneName() {\n    return getZoneName(this.date)\n  }\n\n  isUTC() {\n    return isUTCZone(this.zoneName)\n  }\n\n  hasTime() {\n    return hasTime(this.date)\n  }\n\n  hasMillis() {\n    return gt0(getMillisecond(this.date))\n  }\n\n  toMillis() {\n    return datedToMillis(this.date)\n  }\n\n  get isValid() {\n    return isValidDate(this.date)\n  }\n\n  toAssetFileFields(): Maybe<AssetFileCapturedAtFields> {\n    const capturedAtLocal = this.local\n    return capturedAtLocal == null\n      ? undefined\n      : {\n          capturedAtLocal,\n          capturedAtOffset: this.toOffsetMinutes(),\n          capturedAtPrecisionMs: this.precisionMs, // < NOT clamped or fuzzy!\n          capturedAtSrc: this.src\n        }\n  }\n\n  asExifTag(): {\n    SubSecDateTimeOriginal?: string\n    DateTimeOriginal?: string\n    OffsetTime?: string\n  } {\n    const OffsetTime = map(this.toOffsetMinutes(), fmtOffsetMinutes)\n    const value = this.toExifString()\n    return this.hasMillis()\n      ? { SubSecDateTimeOriginal: value, OffsetTime }\n      : { DateTimeOriginal: value, OffsetTime }\n  }\n\n  fuzzyPrecisionMs() {\n    return (\n      (this.isFuzzy ? Settings.fuzzyDatePrecisionCoeff.valueOrDefault : 1) *\n      this.precisionMs\n    )\n  }\n\n  /**\n   * Return the localtime, minus the precision of this current time.\n   */\n  localBoundaries({ delta = 0 }: { delta?: number }): {\n    start: number\n    end: number\n  } {\n    const d = datedToStartDateTime(this.date)\n    return {\n      start: datedToLocal(d.minus(delta)),\n      end: datedToLocal(d.plus(delta + this.fuzzyPrecisionMs()))\n    }\n  }\n\n  /**\n   * Taking into account `precisionMsIs `other`\n   */\n  overlaps(that: Maybe<CapturedAt>) {\n    if (that == null) return false\n    if (this.local === that.local) return true\n\n    const thisMime = extMimetype(this.nativePath)\n    const thatMime = extMimetype(that.nativePath)\n    const min =\n      thisMime === thatMime\n        ? 0\n        : Settings.minCapturedAtPrecisionDifferentMimetypes.valueOrDefault\n\n    const aPrecisionMs = Math.max(min, this.fuzzyPrecisionMs())\n    const bPrecisionMs = Math.max(min, that.fuzzyPrecisionMs())\n    return logger().tap({\n      msg: \"overlaps()\",\n      result:\n        this.local === that.local ||\n        datedOverlap({\n          a: this.date,\n          b: that.date,\n          aPrecisionMs,\n          bPrecisionMs\n        }).aOverlapsB,\n      meta: { a: this, b: that, aPrecisionMs, bPrecisionMs }\n    })\n  }\n}\n\nexport function bestCapturedAt(arr: Maybe<CapturedAt>[]): Maybe<CapturedAt> {\n  // Always take the value from the newest file (in case the date was updated).\n  // Prefer tags, then paths. Ignore stat, which is not trustworthy.\n  const sorted = sortBy(arr, ea => -(ea?.mtime?.getTime() ?? 0))\n  return (\n    sorted.find(ea => ea.src.startsWith(\"tags\")) ??\n    sorted.find(ea => ea.src.startsWith(\"bname+stat\")) ??\n    sorted.find(ea => ea.src.startsWith(\"path+stat\")) ??\n    sorted.find(ea => ea.src.startsWith(\"path\")) ??\n    sorted.find(ea => ea.src.startsWith(\"siblings\")) ??\n    sorted.find(ea => ea.src.startsWith(\"path\"))\n  )\n}\n\nfunction cannotUseDateFromPath(f: PosixFile, skipInference: boolean): boolean {\n  return (\n    f == null ||\n    skipInference ||\n    !Settings.usePathsToInferDates.valueOrDefault ||\n    (!Settings.useLibraryDirsToInferDates.valueOrDefault &&\n      containedByNativePath({\n        ancestor: Settings.libraryDir.value,\n        descendant: f.nativePath,\n        acceptSelf: true\n      }))\n  )\n}\n\n/**\n * @param skipInference if the file is a temporary scratch file (like a screenshot from a\n * video or a raw image capture), and more expensive extraction heuristics\n * should be skipped.\n */\n// no deps on posixfile because posixfile depends on tag parsing\nexport async function extractCapturedAt(\n  f: PosixFile,\n  tags: Maybe<ParsedTags & Partial<WithCapturedAt>>,\n  skipInference: boolean = false\n): PromiseMaybe<CapturedAt> {\n  const mtime = await f.mtime()\n\n  async function from(\n    src: string,\n    result: MaybeSyncOrAsync<{\n      src?: string\n      date: Maybe<Dated>\n      precisionMs?: number\n    }>\n  ): PromiseMaybe<CapturedAt> {\n    const r = await result\n    return r == null || r.date == null || !isValidDate(r?.date)\n      ? undefined\n      : CapturedAt.for({\n          nativePath: f.nativePath,\n          date: r.date,\n          src: uniqPath([src, r.src]),\n          mtime,\n          precisionMs: r.precisionMs\n        })\n  }\n\n  const skipPathInference = cannotUseDateFromPath(f, skipInference)\n\n  const result = await firstDefinedLater<CapturedAt>(\n    () => tags?.capturedAt,\n    () => from(\"tags\", capturedAtFromTags(tags)),\n    () => tags?.inferred?.capturedAt,\n\n    () =>\n      skipPathInference\n        ? undefined\n        : from(\"bname+stat\", extractStatBnameTime(f)),\n    () =>\n      skipPathInference ? undefined : from(\"path+stat\", extractStatPathTime(f)),\n    () =>\n      skipInference\n        ? undefined\n        : from(\"siblings\", inferCapturedAtFromSiblings(f)),\n    () =>\n      skipPathInference\n        ? undefined\n        : from(\"bname\", capturedAtFromBasename(f, tags)),\n    () => (skipPathInference ? undefined : from(\"path\", capturedAtFromPath(f))),\n    () =>\n      !Settings.useStatToInferDates.valueOrDefault\n        ? undefined\n        : from(\"stat\", capturedAtFromStat(f))\n  )\n\n  return logger().tap({\n    level: LogLevels.debug,\n    msg: \"extractCapturedAt()\",\n    result\n  })\n}\n\nexport function capturedAtFromTags(\n  t: Maybe<Tags>\n): Maybe<{ date: Dated; src: string; precisionMs?: number }> {\n  // Try to use a \"good\" tag first, but if that fails, try the \"problematic\"\n  // tags in order\n  return (\n    _capturedAtFromTags(t, Settings.capturedAtTags.values) ??\n    _capturedAtFromTags(t, OverrideUTCZoneTags) ??\n    _capturedAtFromTags(t, Settings.capturedAtTagsFallback.values)\n  )\n}\n\nconst OverrideUTCZoneTags = [\"DateTimeUTC\", \"GPSDateTime\"]\n\nexport function _capturedAtFromTags(\n  t: Maybe<Tags>,\n  keys: string[]\n): Maybe<{ date: Dated; src: string; precisionMs?: number }> {\n  if (t == null || isEmpty(keys)) return\n\n  const arr: {\n    localSec: number\n    date: Dated\n    src: string\n    precisionMs: number\n    rawValue: Maybe<string>\n  }[] = []\n\n  // We want the earliest date with the best precision. To do that, we get the\n  // least date (which may be quite coarse, like year-only). We then find the\n  // least date that overlaps with that date with the best precision and least\n  // local value.\n\n  for (const key of keys) {\n    let date = (t as any)[key]\n    let src = key\n    if (isValidDate(date)) {\n      if (\n        isValidZone(t.tz) &&\n        (!hasZone(date) || OverrideUTCZoneTags.includes(src))\n      ) {\n        date = setZone(date, t.tz) ?? date\n        const tzSource = blank(t.tzSource)\n          ? \"\"\n          : \" from \" + stripPrefix(t.tzSource, \"from \")\n        src = src + ` (TZ ${t.tz}${tzSource})`\n      }\n      arr.push({\n        localSec: datedToLocalSec(date),\n        date,\n        src,\n        precisionMs: datedToPrecisionMs(date),\n        rawValue: (t as any)[key]?.rawValue\n      })\n    }\n  }\n\n  const least = leastBy(arr, ea => datedToStartTs(ea.date))\n  if (least == null) return\n\n  const overlapsWithLeast = arr.filter(\n    ea =>\n      eql(ea.date, least.date) ||\n      (ea.precisionMs <= least.precisionMs &&\n        datedOverlap({\n          a: ea.date,\n          b: least.date,\n          aPrecisionMs: ea.precisionMs,\n          bPrecisionMs: least.precisionMs\n        }).aOverlapsB)\n  )\n\n  // We want the earliest date with the best precision.\n\n  const earliest = leastBy(overlapsWithLeast, ea => [\n    // Strip off the seconds, minutes, and hours (to handle timezones)\n    Math.floor(ea.localSec / 1_00_00_00),\n\n    // prefer dates with zones\n    hasZone(ea.date) ? 0 : 1,\n\n    // best precision wins\n    ea.precisionMs,\n\n    // prefer longer dates (!!): they are expected to be more precise, as they\n    // will include either/and milliseconds and/or timezone. This should stay\n    // at pretty much the bottom of the heuristics, though, as it is fuzzy.\n    -1 * (ea.rawValue?.length ?? 0),\n\n    ea.src // < for determinism\n  ])\n\n  logger().debug(\"capturedAtFromTags()\", { least, overlapsWithLeast, earliest })\n\n  return earliest\n}\n\nexport function capturedAtFromBasename(\n  f: PosixFile,\n  t: Maybe<Pick<Tags, \"tz\">>\n): Maybe<{ date: Dated; precisionMs?: number }> {\n  if (!Settings.usePathsToInferDates.valueOrDefault) return\n  for (const input of uniq([bname(f, true), bname(f, false)])) {\n    const date = parseDated({ input, defaultZone: t?.tz })\n    if (date != null) {\n      return {\n        date,\n        precisionMs: max([datedToPrecisionMs(date), secondMs])\n      }\n    }\n  }\n  return\n}\n\nexport function capturedAtFromPath(\n  f: PosixFile\n): Maybe<{ date: Maybe<Dated> }> {\n  if (!Settings.usePathsToInferDates.valueOrDefault) return\n  return {\n    date: extractDateFromPath(f.pathsForDateParsing)\n  }\n}\n\nexport async function capturedAtFromStat(\n  f: PosixFile\n): PromiseMaybe<{ date: Maybe<Dated> }> {\n  if (!Settings.useStatToInferDates.valueOrDefault) return\n  return { date: await f.minStatDate() }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const DateTagFormats = strEnum(\"y\", \"ym\", \"ymd\", \"\")\nexport type DateTagFormat = StrEnumKeys<typeof DateTagFormats>\n","import { Tags } from \"exiftool-vendored\"\n\ntype TagKeys = keyof Tags | \"creationTime\" | \"photoTakenTime\" | \"HistoryWhen\"\n\nexport const IgnoredCapturedAtTags = [\n  \"creationTime\", // Google Photos upload time\n  \"HistoryWhen\", // is when history records happen, NOT when the file was captured!\n  \"MediaModifyDate\", // is the last media edit time\n  \"MetadataDate\", // is the last time the _metadata was edited_. See https://forum.photostructure.com/t/combining-images/524/8 for details\n  \"SubSecTime\", // is fractional seconds (not the full date and time) for ModifyDate\n  \"TrackModifyDate\"\n] as const satisfies readonly TagKeys[]\n\n/**\n * These tags should only be used if \"standard\" captured-at tags have no valid\n * values. The first valid ExifDateTime value will be used.\n */\nexport const ProblematicCapturedAtTags = [\n  // (called DateTimeDigitized by the EXIF spec)\n  // https://forum.photostructure.com/t/incorrect-date-assigned-to-photo/419\n  // and\n  // https://forum.photostructure.com/t/photostructure-ignored-the-date-metadata-of-some-photos-marked-them-as-taken-in-2002/340\n  // Note that this tag may have an incorrect zone offset (it may incorrectly\n  // be UTC or local system time), so it's \"problematic\".\n  \"SubSecCreateDate\",\n  \"SubSecMediaCreateDate\",\n  \"SubSecModifyDate\",\n\n  \"CreateDate\",\n  \"MediaCreateDate\", // < may have incorrect timezone like CreateDate\n  \"ModifyDate\", // is called DateTime by the EXIF spec, and may be the last edit time, or the actual captured-at (see the QuickTake DC50 example)\n  \"DateTime\",\n  \"DateTimeCreated\", // composite tag, sometimes has wrong timezone.\n\n  \"photoTakenTime\", // < Google Takeout (not really reliable, though)\n\n  \"TrackCreateDate\", // < may not have correct timezone\n\n  \"CreationTime\" // < set by some screenshot software, and _MAY INCLUDE DATETIME!_ . May be rendered as \"Wed 16 Jun 2021 03:34:46 PM PDT\"\n] as const satisfies readonly Exclude<\n  TagKeys,\n  (typeof IgnoredCapturedAtTags)[number] // < prevents duplicate keys\n>[]\n\nexport const DefaultCapturedAtTagsConst = [\n  // By the specification, DateTimeOriginal should be the time of the\n  // shutter actuation, and CreateDate should be the time that the file\n  // was written to the memory card (but not all mfrs follow the spec)\n  // http://u88.n24.queensu.ca/exiftool/forum/index.php?topic=2568.0\n\n  // https://exiftool.org/TagNames/EXIF.html\n\n  \"CreationDate\", // only found on iPhone movies, but they include timezone offsets, which we really want. See https://exiftool.org/forum/index.php?topic=12837.msg69410#msg69410\n\n  \"DateTimeOriginal\", // date/time when original image was taken. Quicktime:DateTimeOriginal will also include the timezone offset.\n  \"SubSecDateTimeOriginal\", // (fractional seconds for DateTimeOriginal)\n\n  \"DateTimeDigitized\",\n\n  \"OriginalCreateDateTime\",\n\n  \"DigitalCreationDateTime\" // composite tag\n] as const satisfies readonly Exclude<\n  TagKeys,\n  | (typeof IgnoredCapturedAtTags)[number] // < prevents duplicate keys\n  | (typeof ProblematicCapturedAtTags)[number] // < prevents duplicate keys\n>[]\n","import { ExifTags } from \"./ExifTags\"\n\nexport const DefaultIncludedPreviewTags: (keyof ExifTags)[] = [\n  \"AttributionName\",\n  \"AttributionURL\",\n  \"capturedAt\",\n  \"Copyright\",\n  \"exposureSettings\",\n  \"GPSLatitude\",\n  \"GPSLongitude\",\n  \"License\",\n  \"Make\",\n  \"Model\",\n  // NO: \"Orientation\", because we always raster correctly-rotated images\n  \"Permits\",\n  \"Prohibits\",\n  \"Rating\",\n  \"Requires\",\n  // NO: \"Rotation\", because we always raster correctly-rotated images.\n  \"Source\"\n]\n\n// OriginalDirectory and OriginalFilename are obscure GettyImagesGIFT XMP tags\n","// https://en.wikipedia.org/wiki/List_of_photographic_equipment_makers#Manufacturers_of_cameras_or_lenses_and_filters\n// Don't use this directly! Use Settings.lensMakes!\nexport const DefaultLensMakes = [\n  \"7artisans\",\n  \"Bower\",\n  \"Canon\",\n  \"Carl Zeiss\",\n  \"Cosina\",\n  \"Fuji\",\n  \"Fujifilm\",\n  \"Goerz\",\n  \"Hasselblad\",\n  \"Hirox\",\n  \"Hoya\",\n  \"Kodak\",\n  \"Konica\",\n  \"Leica\",\n  \"Leidolf\",\n  \"Lensbaby\",\n  \"Lumix\",\n  \"Meike\",\n  \"Meopta\",\n  \"Minolta\",\n  \"Neewer\",\n  \"Nikon\",\n  \"Olympus\",\n  \"Opteka\",\n  \"Panasonic\",\n  \"Pentacon\",\n  \"Pentax\",\n  \"Ricoh\",\n  \"Rodenstock\",\n  \"Rokinon\",\n  \"Ross\",\n  \"Samsung\",\n  \"Samyang\",\n  \"Seiko\",\n  \"Sigma\",\n  \"Silor\",\n  \"Soligor\",\n  \"Sony\",\n  \"Sunpak\",\n  \"Tamron\",\n  \"Tiffen\",\n  \"Tokina\",\n  \"Topcon\",\n  \"Venus\",\n  \"Voigtländer\",\n  \"Wray\",\n  \"Yongnuo\",\n  \"Zeiss\",\n  \"Zhong Yi\",\n  \"Zuiko\"\n]\n","import { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { readRawTags } from \"./ExifTool\"\nimport { isVideoMimeType } from \"./MimeTypes\"\nimport { readMimeType } from \"./ReadMimeType\"\nimport { WithDuration } from \"./WithDuration\"\n\nexport function extractDurationSec(t: Maybe<WithDuration>): Maybe<number> {\n  return [t?.duration, t?.Duration, t?.MediaDuration, t?.TrackDuration].find(\n    gt0\n  )\n}\n\nexport async function extactDuration(\n  pathOrFile: Maybe<string | PosixFile>\n): PromiseMaybe<number> {\n  if (pathOrFile == null) return\n  const pf = PosixFile.for(pathOrFile)\n  const mt = await readMimeType(pf)\n  if (mt == null || !isVideoMimeType(mt)) return\n  const t = await readRawTags(pf, false)\n  return extractDurationSec(t)\n}\n","import {\n  defaultVideosToUTC,\n  ExifDateTime,\n  ExifTool,\n  ResourceEvent,\n  Tags,\n  WriteTags\n} from \"exiftool-vendored\"\nimport _path from \"path\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, isNotEmpty } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe, MaybePromiseMaybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport {\n  assignFields,\n  assignUndefinedFields,\n  definedValues,\n  entries,\n  fromEntries,\n  keys,\n  omit,\n  pick,\n  values\n} from \"../../fe/Object\"\nimport { gt } from \"../../fe/Primitive\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { GB } from \"../../fe/Units\"\nimport { time } from \"../async/PromiseTimer\"\nimport { thenOrTimeout } from \"../async/ThenOrTimeout\"\nimport {\n  BatchClusterObserver,\n  batchClusterOptions\n} from \"../BatchClusterObserver\"\nimport { setZone } from \"../date/FuzzyDate\"\nimport { eqlAsync } from \"../Eql\"\nimport { FileCache } from \"../fs/FileCache\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString, toNativePath_ } from \"../fs/SimpleFile\"\nimport { nativePathIsFile } from \"../fs/Stat\"\nimport { mkLogger } from \"../Logger\"\nimport { safeUUID } from \"../math/UUID\"\nimport { isTest } from \"../NodeEnv\"\nimport { assignNullishFields, pluckCaseInsensitive } from \"../Object\"\nimport { isWorkerService } from \"../ServiceNames\"\nimport { Settings } from \"../settings/Settings\"\nimport { shim1 } from \"../Shim1\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { maxConcurrentImports } from \"../work/MaxCpus\"\nimport { CapturedAt, extractCapturedAt } from \"./CapturedAt\"\nimport { extractDurationSec } from \"./Duration\"\nimport { ExifTags } from \"./ExifTags\"\nimport {\n  cameraIdFromTags,\n  imageIdFromTags,\n  lensIdFromLensInfo\n} from \"./ExifUid\"\nimport { isExifUnset } from \"./ExifUnset\"\nimport { extractExposureSettings } from \"./ExposureSettings\"\nimport { isVideoExt } from \"./FileTypes\"\nimport { getInferredHistoricValues } from \"./History\"\nimport { maybeInferTimezone } from \"./InferTimezone\"\nimport { JsonSidecarTags, readJsonSidecar } from \"./JsonSidecar\"\nimport { extractLensMakeModel } from \"./LensMakeModel\"\nimport { extractMakeAndModel, make, model } from \"./MakeModel\"\nimport { isImageMimeType, isVideoMimeType } from \"./MimeTypes\"\nimport { extractRotation } from \"./Orientation\"\nimport { ParsedTags } from \"./ParsedTags\"\nimport { extractRating } from \"./Rating\"\nimport { mimetypeCache, readMimeType } from \"./ReadMimeType\"\nimport { extractSizeInfoFromFile } from \"./SizeInfo\"\nimport { canInferForDir, inferMakeAndModel } from \"./TagInference\"\nimport { TimedTags } from \"./TimedTags\"\nimport { extractTitleDescription } from \"./TitleDescription\"\nimport { WithSidecars } from \"./WithSidecars\"\n\nconst logger = lazy(() => mkLogger(\"tags.ExifTool\"))\n\nlet _addInstanceIdsToTags = false\n\nexport function addInstanceIdsToTags(b: boolean) {\n  _addInstanceIdsToTags = b\n}\n\nexport function setExifToolProcs(i: number) {\n  // used only in tests, and we want children to inherit this value:\n  Settings.exiftoolProcsPerChild.envValue = i\n  return shutdownExiftool()\n}\n\nfunction maxProcs() {\n  // thread sub-processes only do one thing at a time, so they only need 1 exiftool:\n  return isTest\n    ? 8\n    : isWorkerService()\n    ? 2\n    : Settings.exiftoolProcsPerChild.value ??\n      Math.ceil(maxConcurrentImports() / 3)\n}\n\nconst _exiftool = lazy(() => {\n  // BatchClusterObserver will renice, track and clean up child exiftool processes:\n  return new BatchClusterObserver(\n    \"ExifTool\",\n    new ExifTool({\n      defaultVideosToUTC: Settings.defaultVideosToUTC.valueOrDefault,\n      // TODO: FINISH: includeImageDataMD5: Settings.useImageDataHashes.valueOrDefault,\n      ...batchClusterOptions(maxProcs(), \"tags.exiftool\")\n    })\n  ).t\n})\n\nexport function exiftool(): ExifTool {\n  const et = _exiftool()\n  return et.ended ? _exiftool.refresh() : et\n}\n\nexport async function exiftoolVersion(): PromiseMaybe<string> {\n  return thenOrTimeout(exiftool().version(), commandTimeoutMs(), () => {\n    throw new Error(\"ExifTool timed out\")\n  })\n}\n\n/**\n * If this process hasn't started exiftool, don't bother.\n */\nexport function exiftoolVersionMaybe() {\n  return map(_exiftool.prior(), et =>\n    et.ended\n      ? undefined\n      : thenOrTimeout(et.version(), commandTimeoutMs(), () => {\n          throw new Error(\"ExifTool timed out\")\n        })\n  )\n}\n\n// Primarily for tests:\nexport function shutdownExiftool(gracefully: boolean = false) {\n  return map(_exiftool.clear(), ea => ea.end(gracefully))\n}\n\n/**\n * @throws on error\n */\nexport function extractBinaryTag(\n  tagname: string,\n  src: string,\n  dest: string\n): Promise<void> {\n  return exiftool().extractBinaryTag(tagname, src, dest)\n}\n\n// Only exported for tests\nexport const tagsCache = lazy(\n  () =>\n    new FileCache<Maybe<ExifTags>>({\n      name: \"tags.parsed\",\n      maxSize: 128,\n      timeoutMs: minuteMs,\n      useFsCache: true\n    })\n)\n\n// Only exported for tests\nexport const rawTagsCache = lazy(\n  () =>\n    new FileCache<Maybe<TimedTags>>({\n      name: \"tags.raw\",\n      maxSize: 128,\n      timeoutMs: minuteMs,\n      useFsCache: true,\n      fsCacheTtlMs: 5 * minuteMs\n    })\n)\n\nexport async function clearTagsCache() {\n  await tagsCache.prior()?.clear()\n  await rawTagsCache.prior()?.clear()\n  await mimetypeCache.prior()?.clear()\n}\n\n// These are fields that aren't in the Tags interface.\nconst IgnoredNonTypedFields = {\n  ExifToolVersion: undefined,\n  RAFVersion: undefined, // ? wha?\n  Directory: undefined,\n  ExifByteOrder: undefined,\n  FileAccessDate: undefined,\n  FileCreateDate: undefined,\n  FileIndex2: undefined,\n  FileInfoVersion: undefined,\n  FileInodeChangeDate: undefined,\n  FileModifyDate: undefined,\n  FilePermissions: undefined\n}\n\nexport const IgnoredTypedFields: Tags = {\n  Duration: undefined, // < See https://forum.photostructure.com/t/videos-duration-wildly-inaccurate/999/2\n  FileFormat: undefined,\n  FileIndex: undefined,\n  FileName: undefined,\n  FileNumber: undefined,\n  FileNumberMemory: undefined,\n  FileNumberSequence: undefined,\n  FileSize: undefined,\n  FileType: undefined,\n  FileTypeExtension: undefined,\n  FileVersion: undefined,\n  MIMEType: undefined,\n  SourceFile: undefined\n}\n\nexport const IgnoredSidecarFields = [\n  \"errors\",\n  ...(keys(IgnoredNonTypedFields) as any),\n  ...keys(IgnoredTypedFields)\n] as const satisfies readonly (keyof ExifTags)[]\n\nasync function readSidecarTags(f: PosixFile) {\n  return omit(await readRawTags(f, false), ...(IgnoredSidecarFields as any))\n}\n\nexport async function sidecarEql(a: PosixFile, b: PosixFile): Promise<boolean> {\n  return (\n    (await eqlAsync(a.sha(), b.sha())) ||\n    (await eqlAsync(readSidecarTags(a), readSidecarTags(b)))\n  )\n}\n\n/**\n * Fetch the ExifTags for the given file, including sidecar and sibling inferred\n * metadata.\n */\nexport function readTags(\n  pathOrFile: Maybe<SimpleFileOrString>\n): MaybePromiseMaybe<ExifTags> {\n  return pathOrFile == null ? undefined : _readTags(toNativePath_(pathOrFile))\n}\n\nexport const _readTags = shim1({\n  name: \"tags.readTags\",\n  impl: async (nativePath: string) => {\n    const f = PosixFile.for(nativePath)\n    return parseTags(f, await readRawTags(f))\n  },\n  cache: tagsCache\n})\n\nexport async function cachedTags(pathOrFile: SimpleFileOrString) {\n  return tagsCache().get(toNativePath_(pathOrFile))\n}\n\n// Convenience methods:\n\nexport async function readCapturedAt(\n  pathOrFile: SimpleFileOrString\n): PromiseMaybe<CapturedAt> {\n  return (await readTags(pathOrFile))?.capturedAt\n}\n\nexport async function readRawField<K extends keyof Tags>(\n  pathOrFile: SimpleFileOrString,\n  tagName: K\n): PromiseMaybe<Tags[K]> {\n  try {\n    const result = await exiftool().readRaw(toNativePath_(pathOrFile), [\n      \"-\" + tagName\n    ])\n    return pluckCaseInsensitive(result, tagName)\n  } catch (err) {\n    logger().info(\"readRawField failed\", err)\n    return\n  }\n}\n\nexport async function readRotation(\n  pathOrFile: SimpleFileOrString\n): PromiseMaybe<number> {\n  // We want to pick up rotation from a sidecar, if present:\n  return extractRotation(await readRawTags(pathOrFile, true))\n}\n\n/**\n * ExifTool writes \"file.jpg_original\" files. Rename them to\n * \"file_original_06.jpg\" so the file extension isn't bogus.\n */\nexport async function moveOriginal(\n  src: PosixFile,\n  suffix = \"_original\"\n): PromiseMaybe<PosixFile> {\n  return src\n    .sibling(src.base + suffix)\n    .saveIfNewOrDelete(src.name + suffix + src.ext)\n}\n\nexport async function overwriteTags_(src: PosixFile, tags: WriteTags) {\n  try {\n    await time(\"tag.overwriteTags()\", async () => {\n      await exiftool().write(src.nativePath, tags, await writeTagArgs(src))\n      src.clearThisAndParent() // < this may be a new file\n    })\n  } catch (error) {\n    logger().throw(\"failed to overwrite tags to \" + src, { error, tags })\n  }\n}\n\nexport async function deleteAllTags_(src: PosixFile, dest: PosixFile) {\n  await time(\"tag.deleteAllTags()\", async () => {\n    const args = [\"-all=\"]\n    if (src.eql(dest)) {\n      args.push(\"-overwrite_original\")\n    } else {\n      args.push(\"-o\", dest.nativePath)\n    }\n    await exiftool().write(src.nativePath, {}, args)\n    dest.clear()\n  })\n}\n\nexport async function writeTagArgs(dest: PosixFile) {\n  // See https://forum.photostructure.com/t/manually-editing-capture-time-title-and-description-caption/104/9?u=mrm\n\n  // TODO: https://exiftool.org/ExifTool.html#QuickTimeUTC\n  // (\"Error: Warning: Tag 'api' is not defined\")\n  const args = []\n  if (Settings.overwriteOriginal.valueOrDefault)\n    args.push(\"-overwrite_original\")\n  if (gt(await dest.size(), 2 * GB)) {\n    // https://exiftool.org/ExifTool.html#LargeFileSupport\n    args.push(\"-api LargeFileSupport=1\")\n  }\n  return args\n}\n\n/**\n * Figure out where we should stuff this tag\n */\nexport async function writeTagDest(\n  src: PosixFile,\n  tagName: keyof WriteTags,\n  srcMimeType?: string\n): Promise<PosixFile> {\n  // if it's blocklisted, no need to check anything else:\n  if (Settings.sidecarTagBlocklist.values.includes(tagName)) {\n    return logger().tap({\n      msg: \"writeTagDest(): blocklisted tag, not writing to sidecar\",\n      result: src,\n      meta: {\n        src,\n        tagName\n      }\n    })\n  }\n  const mt = srcMimeType ?? (await readMimeType(src))\n  const sidecar = await src.sidecar()\n  const writeMetadataToSidecarsIfImage =\n    isImageMimeType(mt) &&\n    Settings.writeMetadataToSidecarsIfImage.valueOrDefault\n\n  const writeMetadataToSidecarsIfVideo =\n    isVideoMimeType(mt) &&\n    Settings.writeMetadataToSidecarsIfVideo.valueOrDefault\n\n  const writeMetadataToSidecarsIfSidecarExists =\n    Settings.writeMetadataToSidecarsIfSidecarExists.valueOrDefault &&\n    (await sidecar.exists())\n\n  const useSidecar =\n    writeMetadataToSidecarsIfImage ||\n    writeMetadataToSidecarsIfVideo ||\n    writeMetadataToSidecarsIfSidecarExists\n\n  return logger().tap({\n    msg: \"writeTagDest()\",\n    result: useSidecar ? sidecar : src,\n    meta: {\n      src,\n      tagName,\n      mimetype: mt,\n      writeMetadataToSidecarsIfImage,\n      writeMetadataToSidecarsIfVideo,\n      writeMetadataToSidecarsIfSidecarExists\n    }\n  })\n}\n\nexport function writeTags(\n  src: PosixFile,\n  tags: WriteTags,\n  srcMimeType?: string\n) {\n  return time(\"tags.writeTags\", async () => {\n    // multiple tags may mean multiple destinations. YAY\n    const path2entries = new MultiMap<string, [keyof WriteTags, any]>()\n    for (const [k, v] of entries(tags)) {\n      const dest = await writeTagDest(src, k, srcMimeType)\n      path2entries.add(dest.nativePath, [k, v])\n    }\n\n    for (const [dest, tagEntries] of path2entries.entriesArray()) {\n      const f = PosixFile.for(dest)\n      const t = fromEntries(tagEntries)\n      logger().info(\"writeTags()\", { src, dest, t })\n      await exiftool().write(f.nativePath, t, await writeTagArgs(f))\n      if (!Settings.overwriteOriginal.valueOrDefault) {\n        await moveOriginal(f)\n      }\n      // This may be a new file, or an existing file--either way, the parent\n      // directory should be re-scanned:\n      f.clearThisAndParent()\n    }\n  })\n}\n\n/**\n * Return the raw, unparsed tags for `bf`, and merge tags from any sidecars.\n */\nexport async function readRawTags(\n  f: SimpleFileOrString,\n  includeSidecars = true\n): PromiseMaybe<TimedTags & WithSidecars & ParsedTags> {\n  const pf = PosixFile.for(f)\n  if (pf.isSidecar()) includeSidecars = false\n\n  if (await pf.isEmptyFile(64)) {\n    rawTagsCache().delete(pf.nativePath)\n    logger().debug(\n      \"readRawTags(\" + pf + \"): !nativePathIsFile(), returning null.\"\n    )\n    return\n  }\n\n  const fileTags = await _readRawTags(pf.nativePath)\n  if (fileTags == null || !includeSidecars) return fileTags\n\n  const file2tags: [PosixFile, PromiseMaybe<TimedTags | JsonSidecarTags>][] = []\n\n  for (const ea of await pf.jsonSidecars()) {\n    file2tags.push([ea, readJsonSidecar(ea, fileTags.tz)])\n  }\n\n  for (const ea of await pf.existingExifSidecars()) {\n    file2tags.push([ea, _readRawTags(ea.nativePath)])\n  }\n\n  // we shallow clone here to prevent messing up the _readRawTags cache:\n  const result: TimedTags & WithSidecars & ParsedTags = {\n    original: {},\n    ...fileTags\n  }\n\n  const histories: ResourceEvent[] = []\n\n  for (const [sidecar, p] of file2tags) {\n    if (p == null) continue\n    const sidecarTags = await p\n    if (sidecarTags == null) continue\n    const safeTags = omit(sidecarTags, ...IgnoredSidecarFields)\n    if (isNotEmpty(values(safeTags))) {\n      ;(result.sidecars ??= []).push(sidecar.base)\n\n      histories.push(...toA((sidecarTags as any)[\"History\"]))\n\n      // store overwritten values:\n      assignNullishFields(result.original, pick(result, ...keys(safeTags)))\n\n      // sidecar values win:\n      assignFields(result, safeTags)\n\n      logger().debug(\"readRawTags() sidecar had values\", {\n        sidecar: sidecar.base\n      })\n    } else {\n      logger().debug(\"readRawTags() sidecar was empty\", {\n        sidecar: sidecar.base\n      })\n    }\n  }\n\n  result.inferred = getInferredHistoricValues(histories)\n  assignNullishFields(result, result.inferred)\n\n  logger().debug(\"readRawTags() final\", {\n    pf,\n    inferred: result.inferred,\n    pickedResult: pick(\n      result,\n      \"tz\",\n      \"tzSource\",\n      ...(Settings.capturedAtTags.values as any)\n    )\n  })\n\n  return result\n}\n\n/**\n * This doesn't handle sidecars. You want `readRawTags`.\n */\nexport const _readRawTags = shim1({\n  name: \"tags.readRawTags\",\n  cache: rawTagsCache,\n  impl: async (nativePath: string) => {\n    if (!(await nativePathIsFile(nativePath))) {\n      logger().debug(\"_readRawTags(): !nativePathIsFile(), returning null.\", {\n        nativePath\n      })\n      rawTagsCache().delete(nativePath)\n      return\n    }\n\n    logger().debug(\"_readRawTags() not cached, reading now.\", { nativePath })\n\n    // We need to read the whole file to get video duration. [] disables the\n    // [\"-fast\"]:\n    const args = isVideoExt(_path.extname(nativePath)) ? [] : [\"-fast\"]\n\n    const t = await time(\"tag.read()\", () =>\n      exiftool()\n        .read(nativePath, args)\n        .catch(error => {\n          logger().warn(\"ExifTool failed to read\", { nativePath, error })\n          return undefined\n        })\n    )\n    if (t == null) return\n    // PERF: no maps here as there are tons of fields.\n    for (const key of keys(t)) {\n      const v = t[key]\n      if (typeof v === \"string\") {\n        if (v === \"0000:00:00\" || v === \"0000:00:00 00:00:00\") {\n          delete t[key]\n        }\n      }\n    }\n    const problems = compactBlanks(\n      [t.Error, ...orElse(t.errors, []), t.Warning].map(toS)\n    )\n    if (isNotEmpty(problems)) {\n      ;(t as any)[\"problems\"] = problems\n    }\n    if (_addInstanceIdsToTags) (t as any)[\"__instance\"] = safeUUID()\n    return t as TimedTags\n  }\n})\n\n/**\n * NOT FOR PUBLIC CONSUMPTION only exposed for tests\n */\nexport async function parseTags(f: PosixFile, t: Maybe<TimedTags>) {\n  return t == null ? undefined : time(\"tag.parseTags()\", () => _parseTags(f, t))\n}\n\nasync function _parseTags(f: PosixFile, t: TimedTags): PromiseMaybe<ExifTags> {\n  try {\n    const nativePath = f.nativePath\n    const m = t.MIMEType\n    if (blank(m)) {\n      logger().debug(\"No mimetype for \" + nativePath)\n      return\n    }\n    // easy assigning additional fields from the ExifTags interface.\n\n    // under-lay inferred values as a backstop for missing values in `t`:\n    const a = { ...((t as any).inferred ?? {}), ...t } as ExifTags\n    a.inferred ??= {}\n    a.original ??= {}\n\n    const skipSiblingInference = !(await canInferForDir(f.parent()))\n\n    const tzMeta = await maybeInferTimezone(f, a, skipSiblingInference)\n\n    logger().debug(\"parseTags()\", { tzMeta, skipSiblingInference })\n\n    if (tzMeta?.tz != null) {\n      const keepLocalTime =\n        a.tzSource === defaultVideosToUTC ? false : undefined\n      // We don't set timezones for all dates: they may be in a different tz\n      // (due to subsequent edits or whatever)\n      for (const k of [\n        ...Settings.capturedAtTags.values,\n        ...Settings.capturedAtTagsFallback.values\n      ]) {\n        const v = (a as any)[k]\n        if (v instanceof ExifDateTime) {\n          ;(a as any)[k] = setZone(v, tzMeta.tz, { keepLocalTime }) ?? v\n        }\n      }\n\n      // save the prior values:\n      assignUndefinedFields(a.original, a, \"tz\", \"tzSource\")\n      // and adopt the new tzMeta values:\n      assignFields(a, tzMeta)\n      assignFields(a.inferred, tzMeta)\n    }\n\n    const mm = skipSiblingInference\n      ? extractMakeAndModel(a)\n      : await inferMakeAndModel(f, a)\n\n    // Only add \"Make\" and \"Model\" to original/inferred if it's not a simple\n    // make() and model() cleanup:\n    if (mm.Make !== make(a.Make)) {\n      a.original.Make = a.Make\n      a.inferred.Make = mm.Make\n    }\n    if (mm.Model !== model(mm.Make, a.Model)) {\n      a.original.Model = a.Model\n      a.inferred.Model = mm.Model\n    }\n\n    if (\n      !blank(Settings.defaultCopyright.valueOrDefault) &&\n      isExifUnset(a.Copyright)\n    ) {\n      a.Copyright = Settings.defaultCopyright.valueOrDefault\n    }\n\n    const lensMakeModel = extractLensMakeModel(a)\n\n    // CAPTURED-AT MUST BE AFTER TZ INFERENCE!\n    const capturedAt = await extractCapturedAt(f, a, skipSiblingInference)\n    if (capturedAt == null) {\n      logger().info(\"No capturedAt for \" + f)\n      return\n    }\n    if (!skipSiblingInference && capturedAt.isInferred) {\n      a.inferred.capturedAt = capturedAt\n    }\n    const exposureSettings = extractExposureSettings(a)\n\n    const sizeInfo = await extractSizeInfoFromFile(f, a)\n    if (sizeInfo == null) {\n      logger().info(\"No size info for \" + nativePath)\n      return\n    }\n\n    const duration = m.startsWith(\"video/\") ? extractDurationSec(a) : undefined\n\n    const obj = {\n      ...mm,\n      mimetype: m,\n      capturedAt,\n      exposureSettings,\n      ...extractTitleDescription(a),\n      ...lensMakeModel,\n      cameraId: cameraIdFromTags(a),\n      imageId: imageIdFromTags(a),\n      lensId: lensIdFromLensInfo({\n        ...lensMakeModel,\n        ...pick(a, \"LensSerialNumber\")\n      }),\n      ...sizeInfo,\n      duration,\n      tz: a.tz,\n      rating: extractRating(a)\n    }\n\n    if (isTest) {\n      ;(obj as any).__parsedBy__ = process.pid\n    }\n    const result = {\n      ...a,\n      ...obj // < needs to be after ...a to override ImageHeight and ImageWidth\n    }\n    logger().debug(\"parsedTags\", {\n      nativePath,\n      skipInference: skipSiblingInference,\n      ...obj,\n      inferred: a.inferred,\n      original: a.original,\n      pickedResult: pick(\n        result,\n        \"capturedAt\",\n        \"tz\",\n        \"tzSource\",\n        \"Make\",\n        \"Model\"\n      )\n    })\n    return definedValues(result) as ExifTags\n  } catch (error) {\n    logger().warn(\"parseTags() failed\", { error })\n    return\n  }\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { lazy } from \"../../core/Lazy\"\nimport { includesAny } from \"../../fe/Array\"\nimport { blank, blankish } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { approximates, gt0, isNumber, toFixed } from \"../../fe/Number\"\nimport {\n  Valued,\n  compactBlankValues,\n  fromEntries,\n  isEmptyObj,\n  keys,\n  pick,\n  values\n} from \"../../fe/Object\"\nimport { parseJSON } from \"../../fe/ParseMaybe\"\nimport { firstDefinedThunk } from \"../../fe/Thunk\"\nimport { ExposureSettings } from \"../../fe/api/ExposureSettings\"\nimport { toS } from \"../../fe/toS\"\nimport { intersection, least } from \"../Array\"\nimport { geohash } from \"../GeoHash\"\nimport { extractFloat, extractFraction } from \"../Number\"\nimport { sortIgnoreCase, splitFirst } from \"../String\"\nimport { Settings } from \"../settings/Settings\"\nimport { LensInfo, LensTags, extractLensMakeModel } from \"./LensMakeModel\"\n\nexport const ImageNumberSynonyms = [\n  // ImageNumber and ShutterCount are synonyms (and used interchangeably):\n  \"ImageNumber\",\n  \"ShutterCount\",\n  \"ShutterCount2\",\n  \"ShutterCount3\"\n] as const\n\n// See https://forum.photostructure.com/t/jpeg-raw-bundles/265/5?u=mrm\n\nexport const CameraSerialNumberSynonyms = [\n  \"CameraSerialNumber\",\n  \"SerialNumber\",\n  \"BodySerialNumber\",\n  \"InternalSerialNumber\"\n] as const\n\n// export const TagSynonyms = [ImageNumberSynonyms, CameraSerialNumberSynonyms]\n\nconst TagSynonymGroups = [ImageNumberSynonyms, CameraSerialNumberSynonyms]\n\nexport const Tag2SynonymGroup = lazy(() => {\n  const result = new Map<string, string>()\n  for (const arr of TagSynonymGroups) {\n    const name = arr[0]\n    for (const ea of arr) {\n      result.set(ea, name)\n    }\n  }\n  return result\n})\nexport const Tag2Synonyms = lazy(() => {\n  const result = new Map<string, readonly string[]>()\n  for (const arr of TagSynonymGroups) {\n    for (const ea of arr) {\n      result.set(ea, arr)\n    }\n  }\n  return result\n})\n\nexport const zeroesRe = /^[\\s0]*1?$/\n\n/**\n * Ignore values that are blank or like \"000000000000\" or \"000000000001\"\n */\nfunction rubbish(o: any) {\n  return (\n    o == null ||\n    blankish(o) ||\n    (isNumber(o) && (o === 0 || o === 1)) ||\n    zeroesRe.exec(toS(o)) != null\n  )\n}\n\nexport function stringifyExifUid(\n  result: [string, number | string][]\n): Maybe<string> {\n  const arr = result == null ? [] : result.filter(([, v]) => !blank(v))\n  return arr.length === 0 ? undefined : stringify(fromEntries(arr))\n}\n\nfunction normalizeString(s: any): string {\n  // some values look bonkers, like \"            LENS    123\"\n  return toS(s).trim().replace(/\\s+/g, \" \")\n}\n/**\n * Remove rubbish values and only retain uniq values for tag synonym groups\n *\n * Only exposed for tests\n */\nexport function renderExifUidId(obj: any) {\n  const uniqSynonymValues = new MultiMap<string, string>()\n  const result: [string, number | string][] = []\n  for (const key of sortIgnoreCase(keys(obj))) {\n    if (rubbish(obj[key])) continue\n    const v = obj[key]\n    const s = normalizeString(obj[key])\n    // normalize all values to a trimmed string\n    // first value for a synonym group?\n    const group = Tag2SynonymGroup().get(key)\n    if (group != null) {\n      if (\n        uniqSynonymValues.includes(group, v) ||\n        uniqSynonymValues.includes(group, s)\n      ) {\n        continue\n      } else {\n        uniqSynonymValues.add(group, v)\n      }\n    }\n    result.push([key, gt0(v) ? v : s])\n  }\n  return stringifyExifUid(result)\n}\n\nfunction splitToEntry(keyColonValue: string): Maybe<[string, string]> {\n  // v1.1 encoded tuples as `${key}:${value}` strings.\n  const arr = splitFirst(keyColonValue, \":\")\n  return arr.length === 2 ? arr : undefined\n}\n\nexport function decodeExifUid(\n  s: Maybe<string>\n): Maybe<Valued<number | string>> {\n  if (blank(s)) return\n  const obj = parseJSON(s)\n  if (obj == null) {\n    // single values may be a colon-separated string\n    return fromEntries([splitToEntry(s)])\n  }\n  if (Array.isArray(obj)) {\n    // v1.1 encoded multiple values as a JSON-encoded array\n    return fromEntries(obj.map(splitToEntry))\n  }\n  // v2.1 encodes tuples as an object\n  return compactBlankValues(obj)\n}\n\nexport type InequalFields = {\n  aKey: string\n  aValue: number | string\n  bKey: string\n  bValue: number | string\n}\n\nexport function findInequalFields(\n  a: Maybe<string>,\n  b: Maybe<string>\n): Maybe<InequalFields> {\n  const aObj = decodeExifUid(a)\n  const bObj = decodeExifUid(b)\n  if (aObj == null || bObj == null || a === b) return\n\n  // check non-synonym'ed fields:\n  const commonSimpleFields = intersection(keys(aObj), keys(bObj)).filter(\n    ea => !Tag2SynonymGroup().has(ea)\n  )\n\n  // any direct non-matches?\n  for (const key of commonSimpleFields) {\n    // allow either aVal or bVal to be coerced to string (so disable eqeqeq)\n    const aValue = aObj[key]\n    const bValue = bObj[key]\n    if (normalizeString(aValue) !== normalizeString(bValue)) {\n      return { aKey: key, aValue, bKey: key, bValue }\n    }\n  }\n\n  // For each synonym group, as long as there's one match, or one side has no values, we're fine.\n  for (const group of TagSynonymGroups) {\n    const aPick = pick(aObj, ...group)\n    if (isEmptyObj(aPick)) continue\n    const bPick = pick(bObj, ...group)\n    if (isEmptyObj(bPick)) continue\n\n    const aValues = values(aPick).map(toS)\n    const bValues = values(bPick).map(toS)\n\n    if (includesAny(aValues, bValues)) continue\n\n    // Pick the least-valued key for each for determinism\n    const aKey = least(keys(aPick))!\n    const bKey = least(keys(bPick))!\n    return { aKey, aValue: aObj[aKey], bKey, bValue: bObj[bKey] }\n  }\n\n  return\n}\n\nfunction whyDefinedNotApproximate({\n  a,\n  b,\n  field,\n  desc,\n  parser\n}: {\n  a: Partial<ExposureSettings>\n  b: Partial<ExposureSettings>\n  field: keyof ExposureSettings\n  desc: string\n  parser: (input: any) => Maybe<number>\n}): Maybe<string> {\n  const i = parser(a[field])\n  const j = parser(b[field])\n  const minCoeff = Settings.minExposureSettingsCoeffPct.valueOrDefault / 100\n  return i == null || j == null || approximates(i, j, minCoeff)\n    ? undefined\n    : \"Different \" + desc + \": \" + a[field] + \" ≠ \" + b[field]\n}\n\n/**\n * @return a message with a mismatch if both a and b have a defined field but\n * they don't match.\n */\nexport function whyExposureSettingsNotSimilar(\n  a: Maybe<Partial<ExposureSettings>>,\n  b: Maybe<Partial<ExposureSettings>>\n): Maybe<string> {\n  if (a == null || b == null) return\n  return firstDefinedThunk([\n    () =>\n      whyDefinedNotApproximate({\n        a,\n        b,\n        field: \"focalLength\",\n        desc: \"focal length\",\n        parser: extractFloat\n      }),\n    () =>\n      whyDefinedNotApproximate({\n        a,\n        b,\n        field: \"aperture\",\n        desc: \"aperture\",\n        parser: extractFloat\n      }),\n    () =>\n      whyDefinedNotApproximate({\n        a,\n        b,\n        field: \"shutterSpeed\",\n        desc: \"shutter speed\",\n        parser: extractFraction\n      }),\n    () =>\n      whyDefinedNotApproximate({\n        a,\n        b,\n        field: \"iso\",\n        desc: \"ISO\",\n        parser: extractFloat\n      })\n  ])\n}\n\nexport function cameraIdFromTags(t: Tags): Maybe<string> {\n  return renderExifUidId(pick(t, ...CameraSerialNumberSynonyms))\n}\n\nexport function lensIdFromTags(t: LensTags & Pick<Tags, \"LensSerialNumber\">) {\n  return lensIdFromLensInfo({\n    ...extractLensMakeModel(t),\n    ...t\n  })\n}\n\n/**\n * Prevents re-extracting lens make and model\n */\nexport function lensIdFromLensInfo(\n  info: Partial<LensInfo> & Pick<Tags, \"LensSerialNumber\">\n): Maybe<string> {\n  // DON'T USE LensID! It doesn't match between JPG and RAW images!\n  const obj: any = pick(info, \"LensSerialNumber\")\n  if (info != null && !blank(info.lensMake) && !blank(info?.lensInfo)) {\n    // Lens models are TERRIBLE: Nikon gives TOTALLY different values between\n    // JPG and RAW pairs: so if something terse, like lensInfo, is available,\n    // use that instead. \"mli\" means \"make+lensInfo\". It's our own tag, so we\n    // can call it whatever we want.\n    obj.mli = `${info.lensMake.toLowerCase()}/${info.lensInfo}`\n  }\n  return renderExifUidId(obj)\n}\n\nexport function imageIdFromTags(t: Tags): Maybe<string> {\n  return renderExifUidId(\n    pick(t, ...ImageNumberSynonyms, \"BurstUUID\", \"RunTimeValue\")\n  )\n}\n\nexport function uidGeoHash(\n  lat: Maybe<number>,\n  lon: Maybe<number>\n): Maybe<string> {\n  // Note that 52 bits gives ~.5m resolution. Unfortunately, some cameras (like\n  // Google Pixels) will add slightly different GPS values to JPG/RAW pairs, so we\n  // downsample the geohash here.\n\n  // https://en.wikipedia.org/wiki/Decimal_degrees says 4 decimals get me to ~10m.\n  // Good enough.\n  return geohash(toFixed(lat, 4), toFixed(lon, 4))\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\n\nconst NotSetRe = /undefined|null|none|n\\/a|unknown/i\nexport function isExifUnset(s: any): s is undefined {\n  return s == null || blank(s) || NotSetRe.test(toS(s))\n}\n\nexport function toExifDefined<T>(s: T): Maybe<T> {\n  return isExifUnset(s) ? undefined : s\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { lazy } from \"../../core/Lazy\"\nimport { firstNotBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toFloat, toInt } from \"../../fe/Number\"\nimport { reqValuedOrElse } from \"../../fe/Object\"\nimport { ExposureSettings } from \"../../fe/api/ExposureSettings\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { firstNonZero } from \"../Number\"\n\nconst logger = lazy(() => mkLogger(\"tags.ExposureSettings\"))\n\nexport function extractExposureSettings(t: Tags): Maybe<ExposureSettings> {\n  const exposureSettings = {\n    focalLength: t.FocalLength,\n    iso: firstNonZero(t.ISO, t.ISOSpeed, t.SonyISO),\n    aperture: firstNonZero(\n      t.FNumber,\n      t.Fnumber,\n      t.ApertureValue,\n      t.Aperture,\n      t.SonyFNumber\n    ),\n    // firstNotBlank rejects numbers, so we have to cast to string:\n    shutterSpeed: firstNotBlank(\n      toS(t.ExposureTime),\n      toS(t.ShutterSpeed),\n      toS(t.ShutterSpeedValue),\n      toS(t.SonyExposureTime)\n    )\n  }\n  logger().debug(\"extracted from \" + t.FileName, { exposureSettings })\n  return reqValuedOrElse(exposureSettings)\n}\n\nexport function exposureTimeToFloat(i: number | string) {\n  if (gt0(i)) return i\n  // Handle 1/100 or 1/32.4\n  const [j, k] = toS(i)\n    .split(\"/\")\n    .map(ea => toInt(ea))\n  return gt0(j) && gt0(k) ? j / k : undefined\n}\n\nexport function focalLengthToInt(i: number | string) {\n  const f = toFloat(i)\n  return gt0(f) ? Math.round(f) : undefined\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const ExtTypes = strEnum(\n  \"Sharp\",\n  \"HEIF\",\n  \"RawImage\",\n  \"Video\",\n  \"Sidecar\",\n  \"AssetFile\",\n  \"Exif\",\n  \"SupportedByCurrentBrowser\",\n  \"SupportedByOldBrowser\"\n)\n\nexport type ExtType = StrEnumKeys<typeof ExtTypes>\n","import * as _sharp from \"sharp\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { entries, values } from \"../../fe/Object\"\nimport { splitLast, stripPrefix } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { SidecarFiletypes, normalizeExt } from \"../fs/FileExt\"\nimport { JpegExts } from \"../fs/JpegExts\"\nimport { MaybeFileish } from \"../fs/MaybeFileish\"\nimport { ExtType, ExtTypes } from \"./ExtType\"\n\nexport const BrowserFiletypes = {\n  // \"audio/mpeg\": [\"mp2\", \"mp3\", \"mpga\"],\n\n  \"application/javascript\": [\"js\"],\n  \"application/toml\": [\"toml\"],\n  \"application/manifest+json\": [\"webmanifest\"],\n  \"application/xml\": [\"xml\"],\n\n  \"image/vnd.microsoft.icon\": [\"ico\"],\n\n  \"font/ttf\": [\"ttf\"],\n  \"font/woff2\": [\"woff2\"],\n\n  \"text/css\": [\"css\"],\n  \"text/html\": [\"html\", \"htm\"],\n  \"text/plain\": [\"txt\"],\n  \"text/x-scss\": [\"scss\"]\n}\n\nfunction sharpImageFiletypes() {\n  // We're going to use sharp.format to see if it's been compiled to support\n  // the following image formats:\n  const unfiltered = {\n    \"image/jpeg\": JpegExts,\n    \"image/avif\": [\"avif\"],\n    \"image/gif\": [\"gif\"],\n    \"image/jp2\": [\"jp2\", \"jp2k\"], // JPEG 2000\n\n    // HEY HEY WOAH WHERE IS HEIF/HEIC?\n\n    // Calm down, future me. Only certain HEIC encoding formats are handled\n    // gracefully by sharp/libvips, so we still need to use external\n    // conversion tools. SADNESS.\n\n    // \"image/x-jng\": [\"jng\"],\n    // \"image/jpm\": [\"jpm\"],\n    // \"image/jpx\": [\"jpf\", \"jpx\"],\n    // \"image/jxr\": [\"jxr\"],\n\n    \"image/jxl\": [\"jxl\"], // Google Chrome killed JPEG XL support in late 2022\n\n    \"image/png\": [\"png\"],\n    \"image/svg+xml\": [\"svg\"],\n    \"image/tiff\": [\"tif\", \"tiff\"],\n\n    // \"image/vnd.ms-photo\": [\"wdp\"],\n    \"image/webp\": [\"webp\"]\n\n    // \"image/x-portable-bitmap\": [\"pbm\"],\n    // \"image/x-portable-graymap\": [\"pgm\"],\n    // \"image/x-portable-pixmap\": [\"ppm\"]\n  } as const\n  const f = _sharp.format\n  for (const [mimetype, exts] of entries(unfiltered)) {\n    const s =\n      (f as any)[stripPrefix(mimetype, \"image/\")] ??\n      values(f).find(\n        ea =>\n          ea.input.file &&\n          exts.some(ext => ea.input.fileSuffix?.includes(\".\" + ext))\n      )\n    if (s?.input?.file !== true) {\n      delete (unfiltered as any)[mimetype]\n    }\n  }\n  return unfiltered\n}\n\nexport const SharpImageFiletypes = sharpImageFiletypes()\n\n/**\n * @see https://en.wikipedia.org/wiki/High_Efficiency_Image_File_Format\n */\nexport const HeifFiletypes = {\n  \"image/avif\": [\"avif\"],\n  \"image/heic\": [\"heic\"],\n  \"image/heif\": [\"heif\"]\n}\n\nexport const RawImageFiletypes = {\n  // TODO:\n\n  // \"arq\",\n  // \"gpr\", gopro raw\n  // \"mef\", mamiya raw\n\n  \"image/x-adobe-dng\": [\"dng\"],\n\n  \"image/x-canon-cr2\": [\"cr2\"],\n  \"image/x-canon-cr3\": [\"cr3\"],\n  \"image/x-canon-crw\": [\"crw\"],\n\n  \"image/x-epson-erf\": [\"erf\"],\n\n  \"image/x-fuji-raf\": [\"raf\"],\n  \"image/x-fujifilm-raf\": [\"raf\"],\n\n  \"image/x-kodak-dcr\": [\"dcr\"],\n  \"image/x-kodak-k25\": [\"k25\"],\n  \"image/x-kodak-kdc\": [\"kdc\"],\n\n  \"image/x-hasselblad-3fr\": [\"3fr\"],\n\n  \"image/x-mamiya-mef\": [\"mef\"],\n\n  \"image/x-minolta-mrw\": [\"mrw\"],\n\n  \"image/x-nikon-nef\": [\"nef\"],\n  \"image/x-nikon-nrw\": [\"nrw\"],\n\n  \"image/x-olympus-orf\": [\"orf\"],\n\n  \"image/x-panasonic-raw\": [\"rwl\"],\n  \"image/x-panasonic-rw2\": [\"rw2\"],\n\n  \"image/x-pentax-pef\": [\"pef\", \"dng\"],\n\n  // used by LEICA and Panasonic:\n  \"image/x-raw\": [\"raw\"],\n\n  \"image/x-samsung-srw\": [\"srw\"],\n\n  // \"image/x-sigma-x3f\": [\"x3f\"], // not supported by libraw as of 2022-01-16\n\n  \"image/x-sony-arw\": [\"arw\"],\n  \"image/x-sony-sr2\": [\"sr2\"],\n  \"image/x-sony-srf\": [\"srf\"]\n} as const\n\nexport const VideoFiletypes = {\n  \"video/3gpp\": [\"3gp\", \"3gpp\"],\n  \"video/3gpp2\": [\"3g2\"],\n  \"video/mp2t\": [\"mts\", \"ts\"],\n  \"video/mp4\": [\"mp4\"],\n  \"video/mpeg\": [\"m2v\", \"mpeg\", \"mpg\"],\n  \"video/quicktime\": [\"mov\", \"qt\"],\n  \"video/vnd.avi\": [\"avi\"],\n  \"video/webm\": [\"webm\"],\n  \"video/x-m4v\": [\"m4v\"],\n  \"video/x-mng\": [\"mng\"],\n  \"video/x-ms-asf\": [\"asf\"],\n  \"video/x-ms-wmv\": [\"wmv\"]\n} as const\n\nexport const AllFiletypes = {\n  ...BrowserFiletypes,\n  ...SidecarFiletypes,\n  ...SharpImageFiletypes,\n  ...RawImageFiletypes,\n  ...VideoFiletypes\n} as const\n\nexport const AssetFiletypes = {\n  ...SharpImageFiletypes,\n  ...HeifFiletypes,\n  ...RawImageFiletypes,\n  ...VideoFiletypes\n} as const\n\nexport const ExifFiletypes = {\n  ...AssetFiletypes,\n  ...SidecarFiletypes\n} as const\n\nconst Ext2mime = lazy(() => {\n  const result = {} as Record<string, string>\n  for (const [mime, exts] of Object.entries(AllFiletypes)) {\n    for (const ext of exts) {\n      result[ext] = mime\n    }\n  }\n  return result\n})\n\nconst ExtAliases = lazy(() => {\n  const result = {} as Record<string, string[]>\n  for (const exts of Object.values(AllFiletypes)) {\n    for (const ext of exts) {\n      result[ext] = exts as string[]\n    }\n  }\n  return result\n})\n\nexport const AllFileExts = lazy(() =>\n  uniq(flatten(Object.values(AllFiletypes as any)))\n)\n\nexport const AssetFileExts = lazy(() =>\n  uniq(flatten(Object.values(AssetFiletypes as any)))\n)\n\nexport function extMimetype(ext: MaybeFileish): Maybe<string> {\n  return Ext2mime()[normalizeExt(ext) ?? \"\"]\n}\n\nexport function mimetypeExt(mime: Maybe<string>): Maybe<string> {\n  return (AllFiletypes as any)[toS(mime).trim().toLowerCase()]?.[0]\n}\n\nexport function getExtAliases(ext: MaybeFileish): Maybe<string[]> {\n  return ExtAliases()[normalizeExt(ext) ?? \"\"]\n}\n\nexport const OldBrowserMimetypes = [\n  \"image/gif\",\n  \"image/jpeg\",\n  \"image/png\"\n] as const\n\nexport const CurrentBrowserMimetypes = [\n  ...OldBrowserMimetypes,\n  \"image/svg+xml\",\n  \"image/webp\",\n  \"video/mp4\",\n  \"video/webm\"\n] as const\n\nconst ext2types = lazy(() => {\n  const m = new MultiMap<string, ExtType>()\n\n  for (const { exts, type } of [\n    { exts: SharpImageFiletypes, type: ExtTypes.Sharp },\n    { exts: HeifFiletypes, type: ExtTypes.HEIF },\n    { exts: RawImageFiletypes, type: ExtTypes.RawImage },\n    { exts: VideoFiletypes, type: ExtTypes.Video },\n    { exts: SidecarFiletypes, type: ExtTypes.Sidecar },\n    { exts: AssetFiletypes, type: ExtTypes.AssetFile },\n    { exts: ExifFiletypes, type: ExtTypes.Exif }\n  ]) {\n    for (const ext of flatten(Object.values(exts))) {\n      m.add(ext as any, type)\n    }\n  }\n\n  for (const mimetype of OldBrowserMimetypes) {\n    for (const ext of AllFiletypes[mimetype] ?? []) {\n      m.add(ext, ExtTypes.SupportedByOldBrowser)\n    }\n  }\n\n  for (const mimetype of CurrentBrowserMimetypes) {\n    for (const ext of AllFiletypes[mimetype] ?? []) {\n      m.add(ext, ExtTypes.SupportedByCurrentBrowser)\n    }\n  }\n\n  return m\n})\n\nexport function equivalentExts(\n  pathlike1: MaybeFileish,\n  pathlike2: MaybeFileish\n) {\n  const ext1 = normalizeExt(pathlike1)\n  const ext2 = normalizeExt(pathlike2)\n  if (ext1 == null || ext2 == null) return false\n  if (ext1 === ext2) return true\n  return getExtAliases(ext1)?.includes(ext2) ?? false\n}\n\nexport function extTypes(ext: MaybeFileish): Maybe<ExtType[]> {\n  const e = normalizeExt(ext)\n  return e == null ? undefined : ext2types().get(e)\n}\n\nexport function isExtType(ext: MaybeFileish, extType: ExtType): boolean {\n  return extTypes(ext)?.includes(extType) ?? false\n}\n\nexport function mimeRootType(ext: MaybeFileish): Maybe<\"image\" | \"video\"> {\n  const arr = extTypes(ext)\n  return arr == null\n    ? undefined\n    : arr.includes(ExtTypes.Sharp) || arr.includes(ExtTypes.RawImage)\n    ? \"image\"\n    : arr.includes(ExtTypes.Video)\n    ? \"video\"\n    : undefined\n}\n\nexport function isRawImageExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.RawImage)\n}\nexport function isSharpExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.Sharp)\n}\nexport function isVideoExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.Video)\n}\nexport function isAssetFileExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.AssetFile)\n}\nexport function isExifExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.Exif)\n}\nexport function isSupportedByCurrentBrowserExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.SupportedByCurrentBrowser)\n}\nexport function isSupportedByOldBrowserExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.SupportedByOldBrowser)\n}\n\nexport function stripExt(\n  base: string,\n  extType: ExtType = ExtTypes.AssetFile\n): string {\n  const ext = splitLast(base, \".\")\n  return isExtType(ext, extType) ? base.slice(0, -(ext.length + 1)) : base\n}\n","import { ExifDateTime, ResourceEvent, Tags, WriteTags } from \"exiftool-vendored\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isEmpty, isNotEmpty } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { eql } from \"../../fe/Eql\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { isNumber } from \"../../fe/Number\"\nimport {\n  assignFields,\n  entries,\n  isEmptyObj,\n  maybeCall,\n  pick\n} from \"../../fe/Object\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { isString } from \"../../fe/String\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { AppNameVersion } from \"../AppName\"\nimport { parseJSON } from \"../JSON\"\nimport { mkLogger } from \"../Logger\"\nimport { isFirstCharAZ } from \"../String\"\nimport { datedToMillis } from \"../date/DatedToMillis\"\nimport { luxonTzOffsetToOffsetMinutes } from \"../date/Timezone\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { toNativePath_ } from \"../fs/SimpleFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { ExifTags } from \"./ExifTags\"\nimport { _readRawTags, overwriteTags_ } from \"./ExifTool\"\n\nexport const Actions = strEnum(\"infer\", \"set\", \"add\", \"delete\")\nexport type Action = StrEnumKeys<typeof Actions>\n\nexport function mkHistoryRecords(\n  action: Action,\n  tags: Maybe<Tags | WriteTags>\n): ResourceEvent[] {\n  return entries(tags ?? {}).map(([key, value]) =>\n    mkHistoryRecord({ action, key, value })\n  )\n}\n\nexport function mkHistoryRecord({\n  action,\n  key,\n  value,\n  ts\n}: {\n  action: Action\n  key: string\n  value: any\n  ts?: number\n}): ResourceEvent {\n  return {\n    Action: action,\n    Changed: toS(key).replace(/[#+]$/, \"\"), // < strip any \"#\" or \"+\" suffix\n    Parameters: stringify(maybeCall(value, \"toJSON\") ?? value),\n    When: ExifDateTime.fromMillis(ts ?? Date.now()),\n    SoftwareAgent: AppNameVersion()\n  }\n}\n\nexport const InferAction = \"infer\"\n\nconst logger = lazy(() => mkLogger(\"tags.History\"))\n\nexport function tagsContainHistory(\n  t: Maybe<Tags>,\n  predicate: (ea: ResourceEvent) => boolean\n): boolean {\n  if (t == null || t.History == null || isString(t.History)) return false\n\n  const h = t.History\n  if (Array.isArray(h)) {\n    return h.some(predicate)\n  } else {\n    return predicate(h)\n  }\n}\n\nexport function getInferredHistoricValues(\n  history: Maybe<ResourceEvent | ResourceEvent[]>\n): Partial<Record<keyof ExifTags, any>> {\n  if (history == null) return {}\n  const arr = toA(history)\n  if (isEmpty(arr)) return {}\n  const oldestFirst = sortBy(\n    arr.filter(ea => ea.Action === Actions.infer),\n    ea => datedToMillis(ea.When)\n  )\n  const result: any = {}\n  for (const ea of oldestFirst.reverse()) {\n    const k = ea.Changed\n    if (notBlank(k) && !(k in result)) {\n      result[k] = valueFromResourceEvent(ea)\n    }\n  }\n  return result\n}\n\nexport function valueFromResourceEvent(re: ResourceEvent) {\n  if (re?.Parameters == null) return\n  if (isNumber(re?.Parameters)) return re.Parameters\n  const s = toS(re)\n  if (blank(s)) return\n  return parseJSON(re.Parameters) ?? re.Parameters\n}\n\nexport function inferredToTags(\n  inferred: Maybe<Partial<ExifTags>>\n): Maybe<Tags> {\n  if (inferred == null) return\n  const result: Tags = {}\n  for (const [k, v] of entries(inferred)) {\n    if (isFirstCharAZ(k)) {\n      ;(result as any)[k] = v\n    }\n  }\n  if (\"duration\" in inferred) result.Duration = inferred.duration\n  if (\"title\" in inferred) result.Title = inferred.title\n  if (\"description\" in inferred) result.Description = inferred.description\n  if (\"rating\" in inferred) result.Rating = inferred.rating\n\n  assignFields(result, inferred.capturedAt?.asExifTag())\n\n  const tz = luxonTzOffsetToOffsetMinutes(\n    inferred.tz ?? inferred.capturedAt?.zoneName,\n    inferred.capturedAt?.toMillis()\n  )\n  if (tz != null) {\n    result.OffsetTime = tz\n  }\n  return result\n}\n\n/**\n * @param inferred the result from readTags().inferred\n */\nexport async function ensureInferredHistoryRecords(\n  src: PosixFile,\n  sidecar: PosixFile | string,\n  inferred: Maybe<Tags>\n): PromiseMaybe<ResourceEvent[]> {\n  const historyRecords = mkHistoryRecords(Actions.infer, inferred)\n  const additionalTags = {\n    ...(Settings.writeInferredTagsToLibraryCopies.valueOrDefault\n      ? inferredToTags(inferred)\n      : {})\n  }\n  if (Settings.writeSourceTagToLibraryCopies.valueOrDefault) {\n    additionalTags.Source = src.nativePath\n  }\n  logger().debug(\"ensureInferredHistoryRecords()\", {\n    sidecar,\n    historyRecords,\n    additionalTags\n  })\n\n  return ensureHistoryRecords(sidecar, historyRecords, additionalTags)\n}\n\nexport async function ensureHistoryRecords(\n  sidecar: Maybe<PosixFile | string>,\n  historyRecords: ResourceEvent[],\n  additionalTags?: Maybe<Tags | WriteTags>\n): PromiseMaybe<ResourceEvent[]> {\n  if (sidecar == null || blank(sidecar)) {\n    logger().warn(\"ensureHistoryRecords(): no-op: empty path\", { sidecar })\n    return\n  }\n  const sidecarPath = toNativePath_(sidecar)\n  const prior = await _readRawTags(sidecarPath)\n  const newHistoryRecords = toA(historyRecords).filter(hr => {\n    if (hr.Action !== Actions.infer) return true\n    const p1 = pick(hr, \"Changed\", \"Parameters\")\n    return !tagsContainHistory(prior, ea =>\n      eql(p1, pick(ea, \"Changed\", \"Parameters\"))\n    )\n  })\n  const tagsToWrite = { ...(additionalTags ?? {}) }\n  if (isNotEmpty(newHistoryRecords)) {\n    ;(tagsToWrite as any)[\"History+\"] = newHistoryRecords\n  }\n  if (isEmptyObj(tagsToWrite)) {\n    logger().debug(\"ensureHistoryRecords(): no-op: nothing to write\", {\n      sidecar,\n      historyRecords,\n      newHistoryRecords,\n      additionalTags,\n      tagsToWrite\n    })\n    return\n  }\n\n  logger().debug(\"ensureHistoryRecords(): write\", {\n    sidecar,\n    tagsToWrite,\n    historyRecords,\n    additionalTags\n  })\n\n  const sidecarFile = PosixFile.for(sidecar)\n\n  await overwriteTags_(sidecarFile, tagsToWrite)\n\n  // clear filesystem caches:\n  sidecarFile.clearThisAndParent()\n\n  return newHistoryRecords\n}\n","import tz_lookup from \"@photostructure/tz-lookup\"\nimport { defaultVideosToUTC, ExifDateTime, Tags } from \"exiftool-vendored\"\nimport { extractTzOffsetFromTags } from \"exiftool-vendored/dist/Timezones\"\nimport { Zone } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toDated } from \"../date/Dated\"\nimport { datedToISO } from \"../date/FuzzyDate\"\nimport { parseDateTime } from \"../date/FuzzyDateParser\"\nimport {\n  isValidZone,\n  normalizeZone,\n  normalizeZoneOffsetMinutes\n} from \"../date/Timezone\"\nimport { isValidDate } from \"../date/ValidDate\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { validLat, validLon } from \"../GeoHash\"\nimport { mkLogger } from \"../Logger\"\nimport { Settings } from \"../settings/Settings\"\nimport { bname } from \"./Bname\"\nimport { DefaultCapturedAtTagsConst } from \"./DefaultCapturedAtTags\"\nimport { nearestSiblingTzOffset } from \"./TagInference\"\n\nconst logger = lazy(() => mkLogger(\"tags.InferTimezone\"))\n\nexport async function maybeInferTimezone(\n  f: PosixFile,\n  t: Tags,\n  skipSiblingInference: boolean\n): PromiseMaybe<Pick<Tags, \"tz\" | \"tzSource\">> {\n  return logger().tap({\n    msg: \"maybeInferTimezone()\",\n    result: await _maybeInferTimezone(f, t, skipSiblingInference)\n  })\n}\n\nasync function _maybeInferTimezone(\n  f: PosixFile,\n  t: Tags,\n  skipSiblingInference: boolean\n): PromiseMaybe<Pick<Tags, \"tz\" | \"tzSource\">> {\n  if (isValidZone(t.tz) && t.tzSource !== defaultVideosToUTC) {\n    return\n  }\n  {\n    const zone = zoneFromLatLon(t)\n    if (zone != null && isValidZone(zone)) {\n      return {\n        tz: zone.name,\n        tzSource: \"infer:GPS\"\n      }\n    }\n  }\n  {\n    const tzSrc = extractTzOffsetFromTags(t)\n    if (tzSrc != null && isValidZone(tzSrc.tz)) {\n      return {\n        tz: tzSrc.tz,\n        tzSource: tzSrc.src\n      }\n    }\n  }\n  {\n    for (const tagname of Settings.capturedAtTags.values) {\n      const edt = (t as any)[tagname]\n      // some timestamps include \"+00:00\" _but they don't mean it_\n      if (\n        edt instanceof ExifDateTime &&\n        isValidZone(edt.zone) &&\n        edt.zone !== \"UTC\"\n      ) {\n        return {\n          tz: edt.zone,\n          tzSource: \"infer:tag.\" + tagname + \".zone\"\n        }\n      }\n    }\n  }\n  if (!skipSiblingInference) {\n    const result = inferTzOffsetMinutesFromFilename(f, t)\n    if (result != null) return result\n  }\n  if (!skipSiblingInference) {\n    const result = await nearestSiblingTzOffset(f)\n    if (result != null) {\n      return {\n        tz: result.zoneName,\n        tzSource: \"infer:nearestSibling:\" + result.base\n      }\n    }\n  }\n  return\n}\n\nexport function zoneFromLatLon(\n  tags: Pick<Tags, \"GPSLatitude\" | \"GPSLongitude\"> = {}\n): Maybe<Zone> {\n  const lat = tags.GPSLatitude\n  const lon = tags.GPSLongitude\n  if (!validLat(lat) || !validLon(lon)) {\n    return logger().tap({\n      msg: \"zoneFromLatLon(): invalid lat/lon\",\n      result: undefined,\n      meta: {\n        lat,\n        lon\n      }\n    })\n  }\n  try {\n    const zoneName = tz_lookup(lat, lon)\n    const zone = normalizeZone(zoneName)\n    return logger().tap({\n      msg: \"zoneFromLatLon()\",\n      result: zone,\n      meta: {\n        lat,\n        lon,\n        zoneName\n      }\n    })\n  } catch (error) {\n    return logger().tap({\n      msg: \"zoneFromLatLon(): invalid lat/lon\",\n      result: undefined,\n      meta: {\n        lat,\n        lon,\n        error\n      }\n    })\n  }\n}\n\nexport type CapturedAtTags = Pick<\n  Tags,\n  Exclude<(typeof DefaultCapturedAtTagsConst)[number], \"photoTakenTime\">\n>\n\nexport function inferTzOffsetMinutesFromFilename(\n  f: PosixFile,\n  tags: Pick<Tags, \"tzSource\" | \"tz\"> & CapturedAtTags\n): Maybe<{ tz: string; tzSource: string }> {\n  const basenameDT = parseDateTime([bname(f.name, true), bname(f.name, false)])\n  if (basenameDT == null || !isValidDate(basenameDT)) {\n    return\n  }\n\n  // It's unclear if the duration always perturbs the filename.\n\n  // const durationMin = Math.round((extractDurationSec(tags) ?? 0) / 60)\n  // if (durationMin > 0) {\n  //   basenameDT = basenameDT.minus({ minutes: durationMin })\n  // }\n\n  for (const tagname of Settings.capturedAtTags.values) {\n    const dt = toDated((tags as any)[tagname])\n    if (dt == null || isValidDate(dt)) continue\n\n    const rawTzoffsetMinutes = Math.round(\n      (basenameDT.diff(dt, \"minutes\").as(\"minutes\") * 15) / 15\n    )\n    // Sometimes the filename is off by a minute or two, so rawTzoffsetMinutes is ~7 or something.\n    const normalizedOffsetMinutes =\n      normalizeZoneOffsetMinutes(rawTzoffsetMinutes)\n\n    // If the offset minutes is 0, we can't safely assume it was taken in UTC\n    // (some tags are always stored in UTC, regardless of the\n    // local-at-capture-time timezone)\n    const z =\n      normalizedOffsetMinutes === 0\n        ? undefined\n        : normalizeZone(normalizedOffsetMinutes)\n    if (z != null) {\n      return logger().tap({\n        msg: \"inferTzOffsetMinutesFromFilename(\" + f.name + \")\",\n        result: {\n          tz: z.name,\n          tzSource: \"infer:filename (diff with \" + tagname + \")\"\n        },\n        meta: {\n          dt: datedToISO(dt),\n          rawTzoffsetMinutes,\n          normalizedOffsetMinutes\n        }\n      })\n    }\n  }\n  return\n}\n\n// export function inferTzOffsetMinutesFromFilename(\n//   tags: Pick<Tags, \"FileName\" | \"tzSource\" | \"tz\"> & CapturedAtTags\n// ): PromiseMaybe<CapturedAtWithTz> {\n//   const firstWithZone = DefaultCapturedAtTags.find(ea => {\n//     const val = tags[ea]\n//     const z = getZoneName(val)\n//     // If it's UTC and tzSource is\n//     if (z != null\n//     if (hasZone(val))\n//   })\n//   const basenameDT = toDateTime(\n//     parseDateTime([bname(basename, true), bname(basename, false)], \"UTC\")\n//   )\n//   if (basenameDT == null || basenameDT.isValid !== true) {\n//     logger()\n//     return\n\n//   const caDT = toDateTime(date)\n//   if (caDT == null || caDT.isValid !== true) return\n\n//   const durationMin = Math.round((extractDurationSec(tags) ?? 0) / 60)\n//   const rawTzoffsetMinutes =\n//     basenameDT.diff(caDT, \"minutes\").as(\"minutes\") - durationMin\n//   const z = normalizeZone(rawTzoffsetMinutes)\n\n//   if (z == null) {\n\n//   }\n//   logger().debug(\n//     \"maybeFixTimezone(): trying to infer zone offset implied by filename\",\n//     {\n//       basenameDT,\n//       capturedAtDT: caDT,\n//       durationMin,\n//       rawTzoffsetMinutes,\n//       normalizedZone: z\n//     }\n//   )\n//   if (z != null) {\n//     return utcToZone(caDT, z.name)\n//   }\n// }\n","import { ExifDateTime, Tags, UnsetZone } from \"exiftool-vendored\"\nimport { compactBlanks, mapNotEmpty } from \"../../fe/Array\"\nimport { toNotBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { isNumber, mapInt, toInt } from \"../../fe/Number\"\nimport { compactValues } from \"../../fe/Object\"\nimport { thenMap } from \"../../fe/Promise\"\nimport { toA } from \"../../fe/toA\"\nimport { first } from \"../Array\"\nimport { validLat, validLon } from \"../GeoHash\"\nimport { Dated } from \"../date/Dated\"\nimport { parseDated } from \"../date/FuzzyDateParser\"\nimport { normalizeZone } from \"../date/Timezone\"\nimport { PosixFile } from \"../fs/PosixFile\"\n\nexport type JsonSidecarTags = Pick<\n  Tags,\n  \"Title\" | \"Description\" | \"GPSLatitude\" | \"GPSLongitude\" | \"GPSAltitude\"\n> & {\n  /**\n   * This is when the photo was uploaded to Google Photos:\n   */\n  creationTime?: Dated\n  /**\n   * This is the time the photo was last modified within Google Photos:\n   */\n  modificationTime?: Dated\n  /**\n   * This isn't remotely correct. I'm expecting 2019:01:08 17:28:44.740313\n   * (local, UTC-10:00) but I get something like Jan 9, 2019, 3:14:38 AM UTC\n   * (expecting 3:28:44 UTC)\n   */\n  photoTakenTime?: Dated\n  imageViews?: number\n  peopleNames?: string[]\n  favorited?: boolean\n  // https://forum.photostructure.com/t/handle-egregious-google-takeout-metadata-butchering/1029/2\n  googlePhotosOrigin?: boolean\n}\n\n/*\n\n{\n  \"title\": \"title from JSON!\",\n  \"description\": \"Description from JSON, hurray.\",\n  \"imageViews\": \"0\",\n  \"creationTime\": {\n    \"timestamp\": \"1547019276\",\n    \"formatted\": \"Jan 9, 2019, 7:34:36 AM UTC\"\n  },\n  \"modificationTime\": {\n    \"timestamp\": \"1555097007\",\n    \"formatted\": \"Apr 12, 2019, 7:23:27 PM UTC\"\n  },\n  \"favorited\": true,\n  \"people\": [{\n    \"name\": \"John Doe\"\n  }, {\n    \"name\": \"Jane Doe\"\n  }],\n  \"geoData\": {\n    \"latitude\": 20.927258333333334,\n    \"longitude\": -156.69559722222223,\n    \"altitude\": 34.0,\n    \"latitudeSpan\": 0.0,\n    \"longitudeSpan\": 0.0\n  },\n  \"geoDataExif\": {\n    \"latitude\": 20.927258333333334,\n    \"longitude\": -156.69559722222223,\n    \"altitude\": 34.0,\n    \"latitudeSpan\": 0.0,\n    \"longitudeSpan\": 0.0\n  },\n  \"photoTakenTime\": {\n    \"timestamp\": \"1547003678\",\n    \"formatted\": \"Jan 9, 2019, 3:14:38 AM UTC\"\n  }\n}\n\n*/\n\nfunction parseTimestamp(\n  ea: Maybe<{ timestamp?: string; formatted?: string }>,\n  defaultZone: Maybe<string>\n): Maybe<Dated> {\n  if (ea == null) return\n\n  const unixtime = toInt(ea?.timestamp)\n  if (isNumber(unixtime)) {\n    const zone = normalizeZone(ea?.formatted)\n    const edt = ExifDateTime.fromMillis(unixtime * 1000, {\n      rawValue: ea.formatted,\n      zone: zone ?? defaultZone ?? UnsetZone\n    })\n    if (true === edt?.isValid) return edt\n  }\n\n  return parseDated({ input: ea.formatted, defaultZone })\n}\n\n/**\n * JSON sidecar from Google Takeouts.\n */\nexport async function readJsonSidecar(\n  jsonFile: PosixFile,\n  defaultZone?: Maybe<string>\n): PromiseMaybe<JsonSidecarTags> {\n  return thenMap(jsonFile.readJson<any>(\"info\"), j => {\n    return compactValues({\n      Title: toNotBlank(j.title),\n      Description: toNotBlank(j.description),\n      GPSLatitude: first([j.geoData?.latitude, j.geoDataExif?.latitude], lat =>\n        validLat(lat) ? lat : undefined\n      ),\n      GPSLongitude: first(\n        [j.geoData?.longitude, j.geoDataExif?.longitude],\n        lon => (validLon(lon) ? lon : undefined)\n      ),\n      GPSAltitude: first([j.geoData?.altitude, j.geoDataExif?.altitude], alt =>\n        isNumber(alt) ? alt : undefined\n      ),\n      favorited: map(j.favorited, isTrue),\n      peopleNames: mapNotEmpty(\n        [...toA(j.people), ...toA(j.person)],\n        (arr: any[]) => compactBlanks(arr.map(ea => ea.name))\n      ),\n      creationTime: parseTimestamp(j.creationTime, defaultZone),\n      modificationTime: parseTimestamp(j.modificationTime, defaultZone),\n      photoTakenTime: parseTimestamp(j.photoTakenTime, defaultZone),\n      imageViews: mapInt(j.imageViews, i => i),\n      // https://forum.photostructure.com/t/handle-egregious-google-takeout-metadata-butchering/1029\n      googlePhotosOrigin: true\n    })\n  })\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const KeywordReparentingStrategies = strEnum(\"move\", \"copy\", \"retain\")\nexport type KeywordReparentingStrategy = StrEnumKeys<\n  typeof KeywordReparentingStrategies\n>\n","import { BinaryField, Tags } from \"exiftool-vendored\"\nimport { XMLParser } from \"fast-xml-parser\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, compactBlankish, compactBlanks, uniq } from \"../../fe/Array\"\nimport { blank, mapNotBlank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { pick } from \"../../fe/Object\"\nimport { toA } from \"../../fe/toA\"\nimport { remove } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { escapeRegExp } from \"../RegExp\"\nimport { isString } from \"../String\"\nimport { Settings } from \"../settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"tags.KeywordTags\"))\n\n// \"delimiters\" separate individual tags:\nexport const delimRe = lazy(() =>\n  mapNotBlank(\n    Settings.keywordDelimiters.valueOrDefault,\n    ea => new RegExp(`\\\\s*[${escapeRegExp(ea)}]\\\\s*`)\n  )\n)\nSettings.keywordDelimiters.watchLater(() => delimRe.unset())\n\nexport function splitKeyword(s: string) {\n  const re = delimRe()\n  return re == null ? [s] : compactBlanks(s.split(re))\n}\n\nexport function splitKeywords(s: string | string[] | BinaryField): string[] {\n  if (s == null || s instanceof BinaryField) {\n    return []\n  }\n  return compactBlanks(\n    Array.isArray(s) ? flatten(s.map(splitKeywords)) : splitKeyword(s)\n  )\n}\n// \"path separators\" separate tags hierarchical levels. If this is blank,\n// hierarchical paths are disabled (unless encoded as a hierarchy in the EXIF as\n// XML)\nexport const pathSepRe = lazy(() =>\n  mapNotBlank(\n    Settings.keywordPathSeparators.valueOrDefault,\n    ea => new RegExp(`\\\\s*[${escapeRegExp(ea)}]\\\\s*`)\n  )\n)\nSettings.keywordPathSeparators.watch(() => pathSepRe.unset())\ninterface Category {\n  Category?: Category[]\n  _: string\n}\nfunction catToS(c: Maybe<string | Category>): string[][] {\n  if (c == null) {\n    return []\n  } else if (isString(c)) {\n    return blank(c) ? [] : [[c]]\n  } else {\n    return flatten(\n      toA(c.Category)\n        .map(catToS)\n        .map(paths => paths.map(path => compact([c._, ...path])))\n    )\n  }\n}\nconst BlankCategoryRE = /^\\(?none\\)?$/i\n// only exposed for tests\n\nexport function parseCategories(s: Maybe<string>): Maybe<string[][]> {\n  if (blank(s) || BlankCategoryRE.exec(s) != null) return\n  try {\n    const xml = new XMLParser({ textNodeName: \"_\" }).parse(s)\n    return flatten(toA(xml?.Categories?.Category).map(catToS))\n  } catch (err) {\n    logger().warn(\"parseCategories() failed:\", { err, s })\n    return\n  }\n}\n\nexport function rawTagKeywords(t: Maybe<Tags>): (string | string[])[] {\n  const result: (string | string[])[] = []\n  if (t != null) {\n    const kwtags = [...Settings.keywordTags.values]\n    if (kwtags.includes(\"Categories\")) {\n      remove(kwtags, \"Categories\")\n      const ea = parseCategories(t.Categories)\n      if (ea != null) result.push(...ea)\n    }\n    for (const key of kwtags) {\n      const ea = (t as any)[key]\n      // If it's already an array, don't split again:\n      result.push(...(Array.isArray(ea) ? ea : splitKeywords(ea)))\n    }\n  }\n  return logger().tap({\n    msg: \"rawTagKeywords()\",\n    result: compactBlankish(uniq(result)),\n    meta: {\n      t:\n        t == null ? undefined : pick(t, ...(Settings.keywordTags.values as any))\n    }\n  })\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, uniq } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { sigFigs, toFloat } from \"../../fe/Number\"\nimport { entries } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport { first, greatestBy } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { Settings } from \"../settings/Settings\"\nimport { make } from \"./MakeModel\"\n\nexport interface LensInfo {\n  lensMake: string\n  lensModel: string\n  lensInfo?: string\n}\n\nconst logger = lazy(() => mkLogger(\"tags.LensMakeModel\"))\n\nconst KnownLensBrands = {\n  nikkor: \"Nikon\",\n  \"m.zuiko\": \"Olympus\",\n  zuiko: \"Olympus\"\n} as const\n\nexport type LensTags = Pick<\n  Tags,\n  | \"Make\"\n  | \"Lens\"\n  | \"LensType\"\n  | \"LensType2\"\n  | \"LensType3\"\n  | \"LensID\"\n  | \"LensSpec\"\n  | \"LensInfo\"\n  | \"LensMake\"\n  | \"LensModel\"\n> & { DNGLensInfo?: string }\n\nconst zeissBatisHackRe = /^zeiss batis ([0-9\\.]+)\\/([0-9\\.]+)(.*)$/i\n\nexport function extractLensMakeModel(t: LensTags): Maybe<LensInfo> {\n  const lensMake = make(t.LensMake)\n  const Make = make(t.Make)\n\n  const results: LensInfo[] = []\n\n  // \"LensID\" can be quite descriptive, like \"Olympus M.Zuiko Digital ED\n  // 12-100mm F4.0 IS Pro\", but it's also sometimes \"Unknown 7-21mm\"\n\n  // \"LensModel\" is typically shorter than \"LensID\", but still has some\n  // branding, ** and may be different between JPG and RAW images **\n\n  // \"LensInfo\" is typically perfect for short: \"4-6mm f/1.8-2.4\" but sometimes is \"24-105mm f/?\"\n\n  // \"Lens\" doesn't always include aperture: \"28.0 - 135.0 mm\"\n\n  // \"LensType\" is a grab bag of randomness: \"E-Mount, T-Mount, Other Lens or no\n  // lens\", \"n/a\", \"G VR\", \"Canon EF 50mm f/1.4 USM or Other Lens\". I'll only\n  // use if it we can extract a length and aperture from the value.\n\n  const lensInfo = first(\n    [t.LensInfo, t.DNGLensInfo, t.LensSpec, t.LensModel, t.LensID],\n    justLengthAndAperture\n  )\n\n  const lensModels = uniq([\n    t.LensModel,\n    t.LensID,\n    t.LensSpec,\n    t.LensInfo,\n    t.LensType,\n    t.LensType2,\n    t.LensType3,\n    t.Lens\n  ])\n\n  logger().debug(\"extractLensMakeModel\", { lensMake, lensInfo, lensModels })\n\n  for (const lensModel of lensModels) {\n    {\n      // Hack for \"ZEISS Batis 2/40 CF\", which means \"40mm f/2\"\n      const m = zeissBatisHackRe.exec(lensModel)\n      if (m != null) {\n        results.push({\n          lensMake: \"Zeiss\",\n          lensModel: `Batis ${m[2]}mm F${m[1]}${m[3]}`,\n          lensInfo: `${m[2]}mm f/${m[1]}`\n        })\n      }\n    }\n\n    const hasLengthAndAperture = justLengthAndAperture(lensModel) != null\n\n    if (!hasLengthAndAperture) continue\n    if (notBlank(lensMake)) {\n      results.push({\n        lensMake,\n        lensModel,\n        lensInfo\n      })\n    }\n\n    const lcLensModel = lensModel.toLowerCase()\n\n    for (const [k, replacementLensMake] of entries(KnownLensBrands)) {\n      if (lcLensModel.includes(k)) {\n        results.push({\n          lensMake: replacementLensMake,\n          lensModel,\n          lensInfo\n        })\n      }\n    }\n\n    for (const mfg of compactBlanks([lensMake, ...Settings.lensMakes.values])) {\n      // Some camera bodies don't encode a LensMake, and include the make in the\n      // model name. If a lens includes a make, use that for lensMake, and strip of lensMake from the lensModel:\n      if (lensModel.toLowerCase().includes(mfg.toLowerCase())) {\n        results.push({\n          lensMake: mfg,\n          lensModel,\n          lensInfo\n        })\n      }\n    }\n\n    // Is it a Nikon \"VR\" lens?\n    if (lcLensModel.startsWith(\"vr \") && Make === \"Nikon\") {\n      results.push({\n        lensMake: \"Nikon\",\n        lensModel,\n        lensInfo\n      })\n    }\n\n    // mrm 20211229: I don't think this is safe:\n    // if (lcLensModel.startsWith(\"unknown\") && notBlank(t.Make)) {\n    //   // Assume the lens is built-in\n    //   makes.push(\"unknown\")\n    //   return {\n    //     lensMake: t.Make,\n    //     lensModel: cleanUpModel(lensModel),\n    //     lensInfo\n    //   }\n    // }\n  }\n\n  for (const ea of results) {\n    const replacement = (KnownLensBrands as any)[ea.lensMake.toLowerCase()]\n    ea.lensMake = replacement ?? ea.lensMake\n    ;(ea.lensModel = cleanBogusPrecision(\n      ea.lensModel.replace(new RegExp(\"\\\\b\" + ea.lensMake + \"\\\\b\", \"i\"), \"\")\n    )),\n      (ea.lensInfo = map(ea.lensInfo, cleanBogusPrecision))\n  }\n\n  return greatestBy(results, ea => [\n    // Avoid, if we can, model names like \"RF 50mm F1.2L USM or other Canon RF\n    // Lens\" or \"EF 17-40mm f/4L USM or Sigma Lens\"\n    null == ea.lensModel.match(/\\bor\\b/i),\n    ea.lensModel.length\n  ])\n}\n\nfunction nonZeroish(s: Maybe<string>): s is string {\n  return s != null && s.match(/^0+$/) == null\n}\n\nexport function justLengthAndAperture(s: Maybe<string>): Maybe<string> {\n  if (blank(s) || toS(s).toLowerCase().includes(\"unknown\")) return\n  // normalizeLensModel(\n  //   s.replace(/\\b(AF-S|CF|DG|Digital|DI|DX|E|ED|HSM|LM|OIS|Pro|R|XF)\\b/gi, \"\")\n  // )\n\n  // Handle \"22mm\" and \"EF 12 - 123.3 mm\" and remove any spaces:\n  const mm = /([\\d\\. \\-]+)\\s*mm\\b/.exec(s)?.[1].replace(/\\s/g, \"\")\n  const aperture = /\\bf\\/?([\\d\\.\\-]+)/i.exec(s)?.[1]\n  return nonZeroish(mm) && nonZeroish(aperture)\n    ? cleanBogusPrecision(`${mm}mm f/${aperture}`)\n    : undefined\n}\n\nexport function cleanBogusPrecision(s: string, significant = 3): string {\n  return s\n    .replace(/\\d+\\.\\d+/g, m =>\n      mapOr(toFloat(m), ea => String(sigFigs(ea, significant)), m)\n    )\n    .replace(/\\s+/g, \" \")\n    .trim()\n}\n\nexport function normalizeLensModel(model: string): string {\n  return cleanBogusPrecision(model)\n    .replace(/(\\d) - (\\d)/g, (_, m1, m2) => `${m1}-${m2}`)\n    .replace(/(\\d)\\s+mm\\b/, (_, m1) => m1 + \"mm\")\n    .replace(/\\s+f\\/?(\\d)/i, (_, m1) => \" f/\" + m1)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { Valued, compactValues, entries } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport { escapeRegExp } from \"../RegExp\"\nimport { stripQuotes } from \"../String\"\nimport { RareTags } from \"./ExifTags\"\nimport { isExifUnset, toExifDefined } from \"./ExifUnset\"\n\n// HEURISTICS AHOY!\n\nfunction replaceAll(s: string, re: RegExp, replacement = \"\"): string {\n  const str = s.replace(re, replacement)\n  return str === s ? s : replaceAll(str, re, replacement)\n}\n\nconst CamelCasedCos = [\n  \"BenQ\",\n  \"GoPro\",\n  \"HTC\",\n  \"LG\",\n  \"NEC\",\n  \"OnePlus\",\n  \"Sony\",\n  \"TrueHDR\"\n]\nconst Lower2Camel = new Map(CamelCasedCos.map(ea => [ea.toLowerCase(), ea]))\n\nexport function companyCased(str: string): string {\n  const s = str.trim()\n  const m = Lower2Camel.get(s.toLowerCase())\n  return m != null\n    ? m\n    : s.length < 4\n    ? s\n    : s.toLowerCase().replace(/(?:^|\\s|-)\\S/g, c => c.toUpperCase())\n}\n\ntype NamedPattern = [RegExp, string]\n\nclass Constants {\n  readonly ignorables = [\n    \"ag\",\n    \"camera\",\n    \"co\",\n    \"company\",\n    \"computer\",\n    \"corp\",\n    \"corporation\",\n    \"digital\",\n    \"elec\",\n    \"electric\",\n    \"electronics\",\n    \"fototechnic\",\n    \"global\",\n    \"gmbh\",\n    \"group\",\n    \"imaging\",\n    \"inc\",\n    \"international\",\n    \"ltd\",\n    \"optical\",\n    \"photo\",\n    \"products\",\n    \"technologies\",\n    \"technology\",\n    \"techwin\"\n  ].join(\"|\")\n\n  readonly ignorableSep = \"[\\\\s\\\\.,_-]*\"\n\n  readonly IgnorableMakePatterns = new RegExp(\n    `${this.ignorableSep}(?:${this.ignorables})${this.ignorableSep}$`,\n    \"i\"\n  )\n\n  readonly IgnorableModelPatterns = [\n    // Some camera models (like Motorola's Droid X) end in a hex serial\n    // number. We don't need that:\n    /[0-9a-f]{24,}$/i,\n    // Some camera models have a version number (!!):\n    /\\(v\\d+.\\d+\\)\\w?$/i,\n    // Some digital cameras are less sure of themselves, and need to reassert\n    // their digital camera-ness:\n    /digital camera$/i,\n    /zoom camera$/i\n  ]\n\n  // https://www.gsmarena.com has some original files and a ton of model\n  // lists, like https://www.gsmarena.com/samsung-phones-9.php\n\n  readonly samsungPatterns: NamedPattern[] = [\n    [/^PL150 /, \"PL150\"],\n    [\n      /^SCH-I545|SHV-E300|SGH-I337|SGH-M919|SPH-L720|SCH-R970|SGH-N045|GT-I950/i,\n      \"Galaxy S4\"\n    ],\n    [/^SGH-i537|GT-I9295/, \"Galaxy S4 Active\"],\n    [/^GT-S50\\S+|SM-G90/, \"Galaxy S5\"],\n    [/^SM-G870A/, \"Galaxy S5 Active\"],\n    [/^SM-A30\\S+/, \"Galaxy A3\"],\n    [/^SM-A530/, \"Galaxy A8\"],\n    [/^SM-A700\\S+/, \"Galaxy A7\"],\n    [/^SM-A730/, \"Galaxy A8+\"],\n    [/^SM-G920\\S+/, \"Galaxy S6\"],\n    [/^SM-G925\\S+/, \"Galaxy S6 Edge\"],\n    [/^SM-G928/, \"Galaxy S6 Edge+\"],\n    [/^SM-G930\\S+/, \"Galaxy S7\"],\n    [/^SM-G935\\S+/, \"Galaxy S7 Edge\"],\n    [/^SM-G950/, \"Galaxy S8\"],\n    [/^SM-G955/, \"Galaxy S8+\"],\n    [/^SM-G960/, \"Galaxy S9\"],\n    [/^SM-G965/, \"Galaxy S9+\"],\n    [/^SM-G970/, \"Galaxy S10e\"],\n    [/^SM-G973|SM-G977|SC-03|SCV41/, \"Galaxy S10\"],\n    [/^SM-G975|SC-04|SC-05|SCV42/, \"Galaxy S10+\"],\n    [/^SM-G98[01]/, \"Galaxy S20\"],\n    [/^SM-G98[56]/, \"Galaxy S20+\"],\n    [/^SM-G988/, \"Galaxy S20 Ultra\"],\n    [/^SM-J510\\S+/, \"Galaxy J5\"],\n    [/^SM-N900/, \"Galaxy Note 3\"],\n    [/^SM-N910/, \"Galaxy Note 4\"],\n    [/^SM-N920/, \"Galaxy Note 5\"],\n    [/^SM-N930/, \"Galaxy Note 7\"],\n    [/^SM-N950/, \"Galaxy Note 8\"],\n    [/^SM-F936/, \"Galaxy Z Fold 4\"],\n    [/^SM-F721/, \"Galaxy Z Flip 4\"],\n    [/^SM-G991/, \"Galaxy S21\"],\n    [/^SM-G996/, \"Galaxy S21+\"],\n    [/^SM-G998/, \"Galaxy S21 Ultra\"],\n    [/^SM-S901/, \"Galaxy S22\"],\n    [/^SM-S906/, \"Galaxy S22+\"],\n    [/^SM-S908/, \"Galaxy S22 Ultra\"],\n    [/^SM-S911/, \"Galaxy S23\"],\n    [/^SM-S916/, \"Galaxy S23+\"],\n    [/^SM-S918/, \"Galaxy S23 Ultra\"],\n    [/^SM-A245/, \"Galaxy A24 4G\"],\n    [/^SM-E146B/, \"Galaxy F14\"],\n    [/^SM-F711/, \"Galaxy Z Flip 3\"],\n    [/^SM-F721/, \"Galaxy Z Flip 4\"],\n    [/^SM-F936/, \"Galaxy Z Fold 4\"],\n    [/^SM-E546B/, \"Galaxy F54\"],\n    [/^SM-X700|SM-X706/, \"Galaxy Tab S8\"],\n    [/^SM-X800|SM-X806/, \"Galaxy Tab S8+\"],\n    [/^SM-X900|SM-X906/, \"Galaxy Tab S8 Ultra\"],\n    [/SM-T509/, \"Galaxy Tab A7\"]\n  ]\n\n  readonly lgPatterns: NamedPattern[] = [\n    // https://en.wikipedia.org/wiki/LG_G2#Model_variants\n    [/LG-D80[01235]|LS98|VS98|L-01F/, \"G2\"],\n    [/D85|F400|LS990|US990|VS985/, \"G3\"],\n    [/H81\\d|F500|LS991|US991|VS986/, \"G4\"],\n    [/H850|H858|VS987|H820|LS992|H830|US992|H860N/, \"G5\"],\n    [/H87[0123]|LS993|AS993|US997|VS998/, \"G6\"],\n    [/^(LM-)?G71/i, \"G7\"] // LM-G710N\n  ]\n\n  readonly onePlusPatterns: NamedPattern[] = [\n    // https://www.gsmarena.com/oneplus-phones-95.php\n    [/A0001/, \"One\"],\n    [/A100\\d/, \"X\"],\n    [/A20\\d\\d/, \"2\"],\n    [/A30\\d\\d/, \"3(T)\"],\n    [/A40\\d\\d/, \"4\"],\n    [/A500\\d/, \"5\"],\n    [/A501\\d/, \"5T\"],\n    [/A600\\d/, \"6\"],\n    [/A601\\d/, \"6T\"],\n    [/GM1900|GM1901|GM1903/, \"7\"],\n    [/GM1910|GM1911|GM1913|GM1915|GM1917/, \"7 Pro\"],\n    [/HD1900|HD1901|HD1903|HD1905|HD1907/, \"7T\"],\n    [/HD1910|HD1911|HD1913/, \"7T Pro\"],\n    [/HD1925/, \"7T Pro 5G\"],\n    [/IN2010|IN2011|IN2013|IN2015|IN2017|IN2019/, \"8\"],\n    [/IN2020|IN2021|IN2023|IN2025/, \"8 Pro\"],\n    [/LE2115|LE2113|LE2111/, \"9\"],\n    [/LE2121|LE2125|LE2123|LE2120/, \"9 Pro\"],\n    [/LE2101/, \"9r\"],\n    [/CPH2389/, \"Nord N300\"],\n    [/CPH2415|CPH2413|CPH2417/, \"10T\"],\n    [/NE2210|NE2211|NE2213|NE2215|NE2217/, \"10 Pro\"],\n    [/PGP110/, \"Ace Pro\"],\n    [/PHB110|CPH2449|CPH2447|CPH2451/, \"11\"]\n  ]\n\n  readonly CommonNamesByMake: Valued<NamedPattern[]> = {\n    Samsung: this.samsungPatterns,\n    LG: this.lgPatterns,\n    OnePlus: this.onePlusPatterns\n  }\n}\n\n// TODO: does this need to be lazy'ed? I think I did it to avoid regex parsing\n// at startup, but that's probably not a big deal.\nconst i = lazy(() => new Constants())\n\nconst GoProRe = /\\bgopro\\b/i\n\nfunction goProMakeMaybe(tags: RareTags) {\n  return GoProRe.test(toS(tags.HandlerDescription)) ||\n    GoProRe.test(toS(tags.CompressorName))\n    ? \"GoPro\"\n    : undefined\n}\n\nexport function extractMakeAndModel(tags: Maybe<RareTags>): {\n  Make?: string\n  Model?: string\n} {\n  if (tags == null) return {}\n  const Make =\n    make(tags.Make) ??\n    makeFromSoftware(tags.Software) ??\n    makeFromSoftware(tags.CreatorTool) ??\n    goProMakeMaybe(tags)\n\n  const Model = model(\n    Make,\n    // DON'T USE DeviceModel or DeviceManufacturer: those are from the ICC profile!\n    toExifDefined(tags.Model) ??\n      // Really old cameras, like QuickTake 200, use \"CameraModelName\" instead\n      // of Model.\n      toExifDefined(tags.CameraModelName) ??\n      toExifDefined(tags.CameraModel)\n  )\n\n  return compactValues({ Make, Model }) ?? {}\n}\n\nexport function make(rawMake: Maybe<string>): Maybe<string> {\n  if (isExifUnset(rawMake)) return\n  let s = stripQuotes(rawMake)\n  s = replaceAll(s, i().IgnorableMakePatterns)\n  s = s.replace(/\\s+app on Apple iDevice$/i, \"\")\n  s = s.replace(/\\bLGE\\b/, \"LG\")\n  s = s.replace(/\\bEastman Kodak\\b/i, \"Kodak\")\n  s = companyCased(s)\n  return s\n}\n\n// Only emit files that have a .Software value:\n\n// exiftool -r -if '$Software' -Software ~/src/test-images\n\nconst SoftwarePatterns = {\n  Acer: /^Acer\\b/i,\n  Canon: /^(Canon|CanoScan)\\b/i,\n  Daisy: /^Exif Daisy\\b/i,\n  Fujifilm: /Digital Camera FinePix\\b/i,\n  GE: /Digital Camera GE\\b/i,\n  Kodak: /\\bKodak\\b/i,\n  Kyocera: /^Kyocera|SAMURAI\\b/i,\n  LG: /^(LGE_SW|LG Electronics)\\b/i,\n  Minolta: /^(Minolta|DiMAGE|DYNAX|MAXXUM|ALPHA SWEET)\\b/i,\n  Nikon: /^(Nikon|COOLPIX)\\b/i,\n  Olympus: /^OLYMPUS\\b/i,\n  OnePlus: /^OnePlus/i,\n  Pentax: /^(Optio|PENTAX)\\b/i,\n  Ricoh: /^RICOH\\b/i,\n  RIM: /^(Rim Exif Version|BlackBerry)/i\n}\n\n/**\n * @param rawSoftware the value from `.Software`. Some (ancient) devices that\n * don't emit a `.Make` value will emit a `.Software` value that lets us infer\n * the Make.\n */\nexport function makeFromSoftware(rawSoftware: Maybe<string>): Maybe<string> {\n  if (blank(rawSoftware)) return\n  for (const [k, v] of entries(SoftwarePatterns)) {\n    if (v.test(rawSoftware)) return k\n  }\n  return\n}\n\n// < Digimax U-CA 5, Kenox U-CA 5 / Kenox U-CA 50 >\n\nconst AncientSamsungModel = /<(.+?)[,/].+>/\n\nexport function model(\n  cleanMake?: string,\n  rawModel?: string\n): string | undefined {\n  if (isExifUnset(cleanMake) || isExifUnset(rawModel)) {\n    return\n  }\n  // Some Canon will put quotes around the make and model (!!)\n  let m = stripQuotes(rawModel)\n\n  if (cleanMake === \"Samsung\") {\n    const match = AncientSamsungModel.exec(m)\n    if (match != null) {\n      m = match[1]\n    }\n  }\n\n  const commonName = map(\n    i().CommonNamesByMake[cleanMake],\n    (arr: NamedPattern[]) => arr.find(([re]) => m!.match(re) != null)\n  )\n\n  if (commonName != null) {\n    return commonName[1].trim()\n  }\n\n  if (cleanMake === \"Sony\") {\n    m = m\n      .replace(/^(DSLR-A|SLT-A|ILCA-|ILCE-)/, \"α\")\n      .replace(/7CL?/i, \"7c\") // ILCE-7CL is the α7c\n      .replace(/M2$/, \" II\")\n      .replace(/M3$/, \" III\")\n      .replace(/M4$/, \" IV\")\n      .replace(/M5$/, \" V\")\n      .replace(/M6$/, \" VI\")\n      .replace(/M7$/, \" VII\")\n      .replace(/M8$/, \" VIII\")\n      .replace(/M9$/, \" IX\")\n      .replace(/M10$/, \" X\")\n      .replace(/M11$/, \" XI\")\n      .replace(/M12$/, \" XII\")\n  }\n\n  if (cleanMake === \"Kodak\") {\n    m = m\n      .replace(/Kodak|digital|science|zoom|camera/gi, \"\")\n      .replace(/\\s+/g, \" \")\n  }\n\n  if (cleanMake === \"Olympus\") {\n    // Handle \"E-M5MarkIII\"\n    m = mapOr(\n      /^(.+?\\d)mark(i.+?)$/i.exec(m),\n      match => `${match[1]} Mark ${match[2]}`,\n      () => m\n    )\n  }\n\n  if (cleanMake === \"Motorola\") {\n    // Handle \"DROID2\"\n    m = m.replace(/DROID/i, \"Droid \")\n  }\n\n  if (cleanMake === \"Canon\") {\n    // Handle \"EOS DIGITAL REBEL\"\n    m = m.replace(/( DIGITAL)/i, \"\").replace(/EOS REBEL/i, \"EOS Rebel\") // as per Canon's website\n  }\n\n  for (const re of i().IgnorableModelPatterns) {\n    m = replaceAll(m!, re).trim()\n  }\n\n  // If the make prefixes the model, remove that:\n  m = m.replace(new RegExp(`^${escapeRegExp(cleanMake)}\\\\s+`, \"i\"), \"\")\n  // Even if it's \"HP\":\n  if (\n    cleanMake!.match(/^HP|Hewlett.Packard$/i) != null &&\n    m.match(/^hp\\b/i) != null\n  ) {\n    // Remove \"HP\" prefix:\n    m = m.slice(2).trim()\n  }\n  return m\n}\n","import { ExifDateTime, ResourceEvent } from \"exiftool-vendored\"\nimport { lazy } from \"../../core/Lazy\"\nimport { pushUniq, remove } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank, mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isNumber } from \"../../fe/Number\"\nimport { isEmptyObj, pick } from \"../../fe/Object\"\nimport { parseJSON } from \"../../fe/ParseMaybe\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { AppName, AppNameVersion } from \"../AppName\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { stringifySorted } from \"../StringifySorted\"\nimport { IAssetFile } from \"../asset-file/IAssetFile\"\nimport { datedToMillis } from \"../date/DatedToMillis\"\nimport { parseDated } from \"../date/FuzzyDateParser\"\nimport { ExifTags } from \"./ExifTags\"\n\nconst logger = lazy(() => mkLogger(\"tags.MergedTags\"))\n\nexport type RevisionValue = number | string | string[]\n\nexport interface BaseRevision {\n  createdAt: number\n  field: string\n}\n\nexport interface PrimitiveRevision extends BaseRevision {\n  priorValue?: Maybe<RevisionValue>\n  newValue: Maybe<RevisionValue>\n}\n\n/**\n * Handles revisions to `Set` fields, like `Keywords`\n */\nexport interface SetAddRevision extends BaseRevision {\n  op: \"add\"\n  newValue: RevisionValue\n}\n\nexport interface SetDeleteRevision extends BaseRevision {\n  op: \"delete\"\n  priorValue: RevisionValue\n}\n\nexport function isBaseRevision(o: any): o is BaseRevision {\n  return isNumber(o?.createdAt) && notBlank(o?.field)\n}\n\nexport function isPrimitiveRevision(o: any): o is PrimitiveRevision {\n  return o?.op == null && isBaseRevision(o)\n}\n\nexport function isSetRevision(o: any): o is SetAddRevision | SetDeleteRevision {\n  return [\"add\", \"delete\"].includes(o?.op) && isBaseRevision(o)\n}\n\nexport type Revision = PrimitiveRevision | SetAddRevision | SetDeleteRevision\n\nexport function resourceEventToRevision(\n  re: Maybe<ResourceEvent>\n): Maybe<Revision> {\n  if (re == null || !toS(re.SoftwareAgent).startsWith(AppName())) {\n    return logger().tap({\n      msg: \"resourceEventToRevision() invalid\",\n      result: undefined,\n      meta: { resourceEvent: re }\n    })\n  }\n  const field = re.Changed\n\n  if (blank(field)) {\n    return logger().tap({\n      msg: \"resourceEventToRevision() missing Changed field name\",\n      result: undefined,\n      meta: { resourceEvent: re }\n    })\n  }\n\n  const fields = pick(\n    mapNotBlank(re.Parameters, parseJSON) ?? ({} as any),\n    \"newValue\",\n    \"priorValue\"\n  )\n\n  if (isEmptyObj(fields)) {\n    return logger().tap({\n      msg: \"resourceEventToRevision() missing Parameter fields\",\n      result: undefined,\n      meta: { resourceEvent: re }\n    })\n  }\n\n  const createdAtTs = datedToMillis(parseDated({ input: re.When }))\n\n  if (createdAtTs == null) {\n    return logger().tap({\n      msg: \"resourceEventToRevision() missing createdAt (When)\",\n      result: undefined,\n      meta: { resourceEvent: re }\n    })\n  }\n\n  if (blank(re.Action)) {\n    return logger().tap({\n      msg: \"resourceEventToRevision() missing op (Action)\",\n      result: undefined,\n      meta: { resourceEvent: re }\n    })\n  }\n\n  // TODO: Do we need to verify newValue and priorValue are set properly for\n  // add, delete, and assign?\n\n  return logger().tap({\n    msg: \"resourceEventToRevision()\",\n    result: {\n      createdAt: createdAtTs,\n      field,\n      op: re.Action === \"assign\" ? undefined : re.Action,\n      ...fields\n    },\n    meta: { resourceEvent: re }\n  })\n}\n\nexport function revisionToResourceEvent(revision: Revision): ResourceEvent {\n  return {\n    Action: (revision as any).op ?? \"assign\",\n    Changed: revision.field,\n    InstanceID: map((revision as any).id, toS),\n    Parameters: stringifySorted(\n      pick(revision as any, \"newValue\", \"priorValue\")\n    ),\n    SoftwareAgent: AppNameVersion(),\n    When: ExifDateTime.fromMillis(revision.createdAt ?? Date.now())\n  }\n}\n\nexport interface ExifTagsWithSource extends Partial<ExifTags> {\n  sourceModifiedTime: number\n  sourceIsPrimary: boolean // is this tag from the \"primary\" asset file variation?\n  SourceFile: string\n}\n\nfunction isPrimary(ea: ExifTagsWithSource | IAssetFile): boolean {\n  return (ea as any)?.sourceIsPrimary ?? (ea as any)?.shown ?? false\n}\n\nfunction mtime(ea: ExifTagsWithSource | IAssetFile): number {\n  return (ea as any)?.sourceModifiedTime ?? (ea as any)?.mtime ?? 0\n}\n\nfunction sourceFile(ea: Maybe<ExifTagsWithSource | IAssetFile>): Maybe<string> {\n  return (ea as any)?.SourceFile ?? (ea as any)?.uri\n}\n\nexport class MergedTags {\n  private readonly logger: Logger\n  constructor(readonly name: string) {\n    this.logger = mkLogger(`MergedTags(${name})`)\n  }\n  private readonly revisions: Revision[] = []\n  private readonly tags: (ExifTagsWithSource | IAssetFile)[] = []\n\n  addRevision(...r: Revision[]) {\n    this.revisions.push(...r)\n  }\n\n  addTag(...t: (ExifTagsWithSource | IAssetFile)[]) {\n    this.tags.push(...t)\n    // sort so first one found wins (so first look at all \"primary\" sources, and then look at the newest sources first)\n    sortBy(this.tags, ea => [!isPrimary(ea), -mtime(ea)])\n  }\n\n  get(field: string): Maybe<{ value: any; source: string[] }> {\n    // only look at relevant Revisions:\n    const revs = sortBy(\n      this.revisions.filter(ea => ea.field === field),\n      ea => ea.createdAt\n    )\n    const t = this.tags.find(ea => (ea as any)[field] != null)\n    let value = (t as any)?.[field] // SITS TSC\n    const source: string[] = []\n    if (value != null) mapNotBlank(sourceFile(t), ea => source.push(ea))\n\n    // Are we an array?\n    const isPrimitive =\n      revs.every(isPrimitiveRevision) &&\n      this.tags.every(ea => !Array.isArray((ea as any)[field]))\n\n    if (isPrimitive) {\n      for (const revision of revs as PrimitiveRevision[]) {\n        if (\n          value != null &&\n          value !== revision.priorValue &&\n          value !== revision.newValue\n        ) {\n          this.logger.info(\n            \"get(\" +\n              field +\n              \"): skipping revision because expected prior or new value didn't match current value\",\n            { revision }\n          )\n        } else {\n          value = revision.newValue as any\n          source.push(`Revision@${revision.createdAt}`)\n        }\n      }\n      return value == null ? undefined : { value, source }\n    } else {\n      // This is an array field\n      // Start with the newest value from tags:\n      const arr: (number | string | boolean)[] = toA(value as any)\n\n      // Ensure all revisions are applied:\n      for (const revision of revs as (SetAddRevision | SetDeleteRevision)[]) {\n        if (revision.op === \"add\" && revision.newValue != null) {\n          source.push(`Revision@${revision.createdAt}`)\n          pushUniq(arr, ...toA(revision.newValue as any))\n        } else if (revision.op === \"delete\" && revision.priorValue != null) {\n          source.push(`Revision@${revision.createdAt}`)\n          for (const val of toA(revision.priorValue as any)) {\n            remove(arr, val)\n          }\n        }\n      }\n\n      return {\n        value: arr as any, // SITS TSC\n        source\n      }\n    }\n  }\n}\n","import { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { isChrome, isFirefox } from \"../../fe/UserAgents\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { isHeifSupported } from \"../img/Heif\"\nimport { isHeifMimeType } from \"../img/HeifFilter\"\nimport { isVideoSupported } from \"../img/Video\"\nimport {\n  AssetFiletypes,\n  CurrentBrowserMimetypes,\n  OldBrowserMimetypes,\n  RawImageFiletypes,\n  SharpImageFiletypes\n} from \"./FileTypes\"\nimport { readMimeType } from \"./ReadMimeType\"\n\nexport function isMimeTypeSupportedByBrowser(\n  mt: Maybe<string>,\n  userAgent: Maybe<string> = \"\" // < default to old browsers\n) {\n  return (\n    isChrome(userAgent) || isFirefox(userAgent)\n      ? CurrentBrowserMimetypes\n      : OldBrowserMimetypes\n  ).includes(toS(mt) as any)\n}\n\nexport function isImageMimeType(mimetype: Maybe<string>) {\n  return toS(mimetype).startsWith(\"image/\")\n}\n\nexport function isVideoMimeType(mimetype: Maybe<string>): boolean {\n  return (\n    notBlank(mimetype) &&\n    (mimetype.startsWith(\"video/\") ||\n      mimetype === \"application/mp4\" ||\n      mimetype === \"application/ogg\")\n  )\n}\n\nfunction normalizeMimetype(mimetype: string): string {\n  return toS(mimetype).toLowerCase()\n}\n\nexport function isSharpMimeType(mimetype: Maybe<string>): boolean {\n  return !blank(mimetype) && normalizeMimetype(mimetype) in SharpImageFiletypes\n}\n\nexport function isLibrawMimeType(mimetype: Maybe<string>): boolean {\n  return !blank(mimetype) && normalizeMimetype(mimetype) in RawImageFiletypes\n}\n\nexport async function isFileMimeTypeIncluded(\n  f: SimpleFile | string,\n  patterns: string[]\n) {\n  return isMimeTypeIncluded(await readMimeType(f), patterns)\n}\n\nexport async function isAssetFileMimeType(f: SimpleFile | string) {\n  const mt = await readMimeType(f)\n  return blank(mt)\n    ? false\n    : isVideoMimeType(mt)\n    ? await isVideoSupported()\n    : isHeifMimeType(mt)\n    ? await isHeifSupported()\n    : mt in AssetFiletypes\n}\n\n/**\n * Supports \"image/*\"-style glob-matches\n */\nexport function isMimeTypeIncluded(mt: Maybe<string>, patterns: string[]) {\n  if (mt == null) return false\n  for (const ea of patterns) {\n    if (ea.includes(\"*\")) {\n      const re = new RegExp(\"^\" + ea.replace(/\\*/g, \".*\") + \"$\", \"i\")\n      if (re.exec(mt) != null) return true\n    } else {\n      if (ea.toLowerCase() === mt) return true\n    }\n  }\n  return false\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const NameTagFormats = strEnum(\n  \"as-is\",\n  \"family/given\",\n  \"family/fullname\"\n)\nexport type NameTagFormat = StrEnumKeys<typeof NameTagFormats>\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const NameTagOrders = strEnum(\"western\", \"eastern\")\nexport type NameTagOrder = StrEnumKeys<typeof NameTagOrders>\n","import { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, mapNotEmpty, notEmptyOr, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { Defined, map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { TagPath, TagRoots } from \"../../fe/api/Tag\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { escapeRegExp, matchQuotes } from \"../RegExp\"\nimport { spliceCapture } from \"../String\"\nimport { min } from \"../math/Vector\"\nimport { Settings } from \"../settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"tags.Names\"))\n\n// const cleanupRE = /^,?\\s*(\\S.+?)\\s*,?$/\n\n// function cleanup(s: string) {\n//   return spliceCapture(s.trim(), cleanupRE)?.captured\n// }\n\n// function cleanupName(given: string, family: string) {\n//   return {\n//     given: cleanup(given),\n//     family: cleanup(family)\n//   }\n// }\n\nfunction escRE(s: string) {\n  return matchQuotes(escapeRegExp(s))\n}\n\nfunction familyNameREs() {\n  return Settings.tagNamesSurnames.values.map(\n    ea => new RegExp(\"\\\\b(\" + escRE(ea) + \")\\\\b\", \"i\")\n  )\n}\n\nfunction givenNameREs() {\n  return Settings.tagNamesGiven.values.map(\n    ea => new RegExp(\"\\\\b(\" + escRE(ea) + \")\\\\b\", \"i\")\n  )\n}\n\nfunction familyNamePrefixeREs() {\n  return mapNotEmpty(\n    compactBlanks(Settings.tagNamesSurnamePrefixes.values),\n    arr =>\n      sortBy(arr, ea => -ea.length).map(\n        ea => new RegExp(`\\\\b(${escRE(ea)}\\\\s+\\\\S+)`, \"i\")\n      )\n  )\n}\n\nfunction givenNameSurroundREs() {\n  const arr = compactBlanks(Settings.tagNamesGivenSurrounds.values)\n  for (const ea of arr) {\n    if (ea.length !== 2) {\n      logger().warn(\n        \"Settings.tagNamesFamilySurrounds has an invalid value:\",\n        ea\n      )\n    }\n  }\n  return arr.map(\n    ea =>\n      new RegExp(\n        `(${escapeRegExp(ea.charAt(0))}\\\\s*[^${escapeRegExp(\n          ea.charAt(0)\n        )}]+\\\\s*${escapeRegExp(ea.charAt(1))})`,\n        \"i\"\n      )\n  )\n}\n\nfunction familyNameSurroundREs() {\n  const arr = compactBlanks(Settings.tagNamesFamilySurrounds.values)\n  for (const ea of arr) {\n    if (ea.length !== 2) {\n      logger().warn(\n        \"Settings.tagNamesFamilySurrounds has an invalid value:\",\n        ea\n      )\n    }\n  }\n  return arr.map(\n    ea =>\n      new RegExp(\n        `${escapeRegExp(ea.charAt(0))}\\\\s*([^${escapeRegExp(\n          ea.charAt(0)\n        )}]*)\\\\s*${escapeRegExp(ea.charAt(1))}`,\n        \"i\"\n      )\n  )\n}\n\nconst lifespanRE = /(\\(\\s*\\d+\\s*-\\s*(?:[\\d\\?]{1,4})?\\s*\\)?)/\n\nconst modifierRE = /([,\\s]+(?:jr\\.?|junior|sr\\.?|senior|[iv]+\\.?))$/i\n\nconst uppercaseWordsRE = /\\b([A-Z‘’']+(?:[-A-Z‘’']{2}))\\b/\n\nconst ignorableNameRE = /^[\\(\\)\\[\\]\\/.\\-\\_]+$/\n\n/**\n * Parse the given name into familyNames, givenNames, an optional modifier and\n * optional lifespan.\n */\nexport function parseName(compoundName: string): Maybe<{\n  givenNames: string[]\n  modifier: Maybe<string>\n  lifespan: Maybe<string>\n  familyNames: string[]\n}> {\n  if (blank(compoundName)) return\n\n  // normalize spaces so \"First  ( Maiden ) Last \" becomes \"First (Maiden) Last\"\n  let s = compoundName\n    .replace(/\\s+/g, \" \")\n    .replace(/\\(\\s+/g, \"(\")\n    .replace(/\\s+\\)/g, \")\")\n    .trim()\n\n  const lifespan = map(spliceCapture(s, lifespanRE), r => {\n    s = r.unmatched.trim()\n    // normalize whitespace:\n    return r.captured.replace(/\\s+/g, \"\")\n  })\n\n  // Strip off Bob Smith, jr.\n  const modifier = map(spliceCapture(s, modifierRE), r => {\n    s = r.unmatched.trim()\n    return r.captured.trim()\n  })\n\n  const givenNames: string[] = []\n  const givenNameEnds: string[] = []\n  const familyNames: string[] = []\n\n  for (const re of givenNameREs()) {\n    const r = spliceCapture(s, re)\n    if (r != null) {\n      givenNames.push(r.captured)\n      s = r.unmatched.trim()\n    }\n  }\n\n  for (const re of givenNameSurroundREs()) {\n    let r\n    do {\n      r = spliceCapture(s, re)\n      if (r != null) {\n        givenNameEnds.push(r.captured)\n        s = r.unmatched.trim()\n      }\n    } while (r != null)\n  }\n\n  let minFamilyNameIndex: Maybe<number>\n\n  function onCapture(r: Defined<ReturnType<typeof spliceCapture>>) {\n    if (minFamilyNameIndex == null || minFamilyNameIndex > r.matchedIndex) {\n      minFamilyNameIndex = min([minFamilyNameIndex, r.matchedIndex])\n    }\n  }\n\n  if (Settings.tagNamesCapitalizedAsFamily.valueOrDefault) {\n    let r\n    do {\n      r = spliceCapture(s, uppercaseWordsRE)\n      if (r != null) {\n        onCapture(r)\n        familyNames.push(r.captured)\n        s = r.unmatched.trim()\n      }\n    } while (r != null)\n  }\n\n  for (const re of familyNameSurroundREs()) {\n    let r\n    do {\n      r = spliceCapture(s, re)\n      if (r != null) {\n        onCapture(r)\n        familyNames.push(r.captured)\n        s = r.unmatched.trim()\n      }\n    } while (r != null)\n  }\n\n  // if (Settings.tagNamesParentheticalSurnames.valueOrDefault) {\n  //   let r\n  //   do {\n  //     r = spliceCapture(s, parenNameRE)\n  //     if (r != null) {\n  //       onCapture(r)\n  //       familyNames.push(r.captured)\n  //       s = r.remnants.trim()\n  //     }\n  //   } while (r != null)\n  // }\n\n  if (Settings.tagNamesLexical.valueOrDefault) {\n    const commaIndex = s.indexOf(\",\")\n    if (commaIndex >= 0) {\n      minFamilyNameIndex = undefined\n      familyNames.push(s.substring(0, commaIndex).trim())\n      givenNames.push(s.substring(commaIndex + 1).trim())\n      s = \"\"\n    }\n  }\n\n  for (const re of familyNameREs()) {\n    const r = spliceCapture(s, re)\n    if (r != null) {\n      onCapture(r)\n      familyNames.push(r.captured)\n      s = r.unmatched.trim()\n    }\n  }\n\n  for (const re of toA(familyNamePrefixeREs())) {\n    const r = spliceCapture(s, re)\n    if (r != null) {\n      onCapture(r)\n      familyNames.push(r.captured)\n      s = r.unmatched.trim()\n    }\n  }\n\n  if (minFamilyNameIndex != null && s.length > minFamilyNameIndex) {\n    // Everything to the right is a family name.\n    mapNotEmpty(\n      compactBlanks(s.slice(minFamilyNameIndex).split(/\\s+/)),\n      arr => {\n        familyNames.push(...arr)\n        s = s.slice(0, minFamilyNameIndex)\n      }\n    )\n  }\n\n  // OK, by this time we're either looking at an empty string, or [first]\n  // [middle] [last] (we may have pulled off either family names or given names,\n  // so everything is optional)\n\n  const names = compactBlanks(s.split(/\\s+/))\n\n  // cleanupGivenNames(givenNames)\n  const givenNameCount = givenNames.length\n\n  // cleanupFamilyNames(familyNames)\n  const familyNameCount = familyNames.length\n\n  if (names.length > 0) {\n    // So, we've got leftovers. Where should they go?\n    // If we don't have a family name, and we don't have a given name:\n    if (givenNameCount === 0 && familyNameCount > 0) {\n      // We have a family name. Assume the remainder are given names?\n      givenNames.push(...names)\n    } else if (\n      familyNameCount === 0 &&\n      givenNameCount > 0 &&\n      names.length === 1\n    ) {\n      familyNames.push(...names)\n    } else {\n      if (names.length === 1) {\n        // Assume one name is a given name\n        givenNames.push(...names)\n      } else {\n        // names.length > 1. Last or first name is family name, the remainder is given names.\n        const western = Settings.tagNamesOrder.valueOrDefault === \"western\"\n\n        familyNames.push(western ? names.pop()! : names.shift()!)\n        givenNames.push(...names)\n      }\n    }\n  }\n\n  // cleanupFamilyNames(familyNames)\n\n  return {\n    givenNames: cleanupNames([...givenNames, ...givenNameEnds]),\n    modifier,\n    lifespan,\n    familyNames: cleanupNames(familyNames),\n    minFamilyNameIndex\n  } as any\n}\n\nfunction cleanupNames(arr: Maybe<string>[]): string[] {\n  return uniq(compactBlanks(arr).filter(ea => ignorableNameRE.exec(ea) == null))\n}\n\n// export function cleanupGivenNames(givenNames: string[]) {\n//   filterInPlace(\n//     givenNames,\n//     ea =>\n//       notBlank(ea) &&\n//       !includesIgnoreCase(Settings.tagNamesGivenIgnored.values, ea)\n//   )\n// }\n\n// export function cleanupFamilyNames(familyNames: string[]) {\n//   for (const prefix of Settings.tagNamesFamilyIgnoredPrefixes.values) {\n//     for (let i = 0; i < familyNames.length; i++) {\n//       familyNames[i] = stripPrefixIgnoreCase(familyNames[i], prefix).trim()\n//     }\n//   }\n//   filterInPlace(familyNames, notBlank)\n// }\n\nfunction join(arr: Maybe<string>[]) {\n  let result = \"\"\n  for (const ea of compactBlanks(arr)) {\n    // we don't want to add a space after the modifier if it starts with a comma\n    result += ea.startsWith(\",\") ? ea : \" \" + ea\n  }\n  return result.trim()\n}\n\nexport function renderNameTag(name: string): TagPath[] {\n  if (blank(name)) return []\n\n  const fmt = Settings.tagNamesFormatter.valueOrDefault\n  const fam_full = fmt === \"family/fullname\"\n  const fam_given = fmt === \"family/given\"\n  if (fam_full || fam_given) {\n    const r = parseName(name)\n    if (r == null) {\n      return []\n    } else {\n      const suff = join([r.modifier, r.lifespan])\n      const given = join(r.givenNames)\n      const familyNames = compactBlanks(\n        notEmptyOr(r.familyNames, [\n          Settings.tagNamesDefaultFamily.valueOrDefault\n        ])\n      )\n      return familyNames.map(fam => [\n        TagRoots.Who,\n        fam,\n        fam_given ? join([given, suff]) : renderName(fam, given, suff)\n      ])\n    }\n  } else {\n    return [[TagRoots.Who, name.trim()]]\n  }\n}\n\nfunction renderName(family: string, given: string, suffix: string): string {\n  return join(\n    Settings.tagNamesOrder.valueOrDefault === \"western\"\n      ? [given, family, suffix]\n      : [family, given, suffix]\n  )\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { normalizeRotation } from \"../../fe/Rotation\"\nimport { isVideoMimeType } from \"./MimeTypes\"\n\n// const ExifOrientations = new Map([\n//   [\"Horizontal (normal)\", 1],\n//   [\"Mirror horizontal\", 2],\n//   [\"Rotate 180\", 3],\n//   [\"Mirror vertical\", 4],\n//   [\"Mirror horizontal and rotate 270 CW\", 5],\n//   [\"Rotate 90 CW\", 6],\n//   [\"Mirror horizontal and rotate 90 CW\", 7],\n//   [\"Rotate 270 CW\", 8]\n// ])\n\n// TODO: support https://github.com/recurser/exif-orientation-examples\n\nexport function extractRotation(tags: Maybe<Tags>): Maybe<number> {\n  return tags == null\n    ? undefined\n    : orientationToRotation(tags.Orientation) ??\n        orientationToRotation(tags.CameraOrientation) ??\n        normalizeRotation(tags.Rotation) // < used by videos\n}\n\nconst ExifOrientationToRotation = new Map<string | number, number>([\n  [\"Horizontal (normal)\", 0],\n  [\"Rotate 90 CW\", 90],\n  [\"Rotate 180\", 180],\n  [\"Rotate 270 CW\", 270],\n  [1, 0],\n  [6, 90],\n  [3, 180],\n  [8, 270]\n])\n\n/**\n * @return clockwise rotation, or undefined if mirroring is involved or the\n * orientation string is undefined or unknown\n */\nexport function orientationToRotation(\n  orientation: Maybe<string | number>\n): Maybe<number> {\n  return map(orientation, ea => ExifOrientationToRotation.get(ea))\n}\n\nconst Rotation2ExifOrientation = new Map<number, number>([\n  [0, 1],\n  [90, 6],\n  [180, 3],\n  [270, 8]\n])\n\n/**\n * @param rotation clockwise rotation (0, 90, 180, 270)\n * @return if rotated is defined and a known value, return the ExifTool\n * Orientation string\n */\nexport function rotationToExifOrientation(\n  rotation: Maybe<number>\n): Maybe<number> {\n  return map(rotation, ea => Rotation2ExifOrientation.get(ea))\n}\n\nexport type ImageDimensions = Required<Pick<Tags, \"ImageHeight\" | \"ImageWidth\">>\n\nexport function rotationToWriteTag(rotation: number, mimetype: string) {\n  return map(normalizeRotation(rotation), nr =>\n    isVideoMimeType(mimetype)\n      ? { Rotation: nr as any }\n      : map(rotationToExifOrientation(nr), ea => ({\n          \"Orientation#\": ea\n        }))\n  )\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, mapNumeric, toInt } from \"../../fe/Number\"\nimport { Settings } from \"../settings/Settings\"\nimport { JsonSidecarTags } from \"./JsonSidecar\"\n\nexport function clampRating(rating: any): Maybe<number> {\n  const r = toInt(rating)\n  return r == null ? undefined : clamp(-1, 5, r)\n}\n\nexport function extractRating(\n  tags: Maybe<Tags & Pick<JsonSidecarTags, \"favorited\">>\n): Maybe<number> {\n  return (\n    clampRating(tags?.Rating) ??\n    mapNumeric(toInt(tags?.RatingPercent), pct => Math.ceil((pct * 5) / 100)) ??\n    // Only assert a rating if the JSON sidecar is favorited:\n    map(tags?.favorited, ea =>\n      ea === true ? Settings.likeRating.valueOrDefault : undefined\n    )\n  )\n}\n\nexport function extractLiked(tags: Maybe<Tags>): Maybe<boolean> {\n  const r = extractRating(tags)\n  return r == null ? undefined : r >= Settings.likeRating.valueOrDefault\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { FileCache } from \"../fs/FileCache\"\nimport { readFileType_ } from \"../fs/FileType\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { cachedTags, rawTagsCache } from \"./ExifTool\"\n\nexport const mimetypeCache = lazy(\n  () =>\n    new FileCache<Maybe<string>>({\n      name: \"tags.mimetype\",\n      maxSize: 2048,\n      useFsCache: true,\n      timeoutMs: commandTimeoutMs()\n    })\n)\n\nexport async function readMimeType(\n  pathOrFile: SimpleFileOrString\n): PromiseMaybe<string> {\n  if (blank(pathOrFile)) return\n  const f = PosixFile.for(pathOrFile)\n  return mimetypeCache().getOrSetAsync(f.nativePath, async () => {\n    return (\n      rawTagsCache().get(f.nativePath)?.MIMEType ??\n      (await cachedTags(f))?.MIMEType ??\n      (await readFileType_(f.nativePath).catch(() => undefined))?.mime\n    )\n  })\n}\n","import { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport {\n  commonPrefixIgnoreCase,\n  ensurePrefix,\n  equalsIgnoreCase\n} from \"../String\"\nimport { sortByAsync } from \"../async/Promise\"\nimport { inHiddenPhotoStructureDir } from \"../dir/InHiddenPhotoStructureDir\"\nimport { BaseFile } from \"../fs/BaseFile\"\nimport {\n  extAliases,\n  isExt,\n  isSidecarExt,\n  mkExtsRegExp,\n  normalizeExt\n} from \"../fs/FileExt\"\nimport { stripCopySuffixFromName } from \"../fs/FuzzyNames\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { stripExt } from \"./FileTypes\"\n\nfunction strEql(a: string, b: string, { ignoreCase }: { ignoreCase: boolean }) {\n  return ignoreCase\n    ? equalsIgnoreCase(a, b, { normalize: true /* we did it already */ })\n    : a === b\n}\n\nexport function isSidecarOf(src: SimpleFile, sidecar: SimpleFile) {\n  // Must have a sidecar extension and not be hidden:\n  if (!isSidecarExt(sidecar.ext) || sidecar.base.startsWith(\".\")) {\n    return false\n  }\n  const isJson = isExt(sidecar.ext, \"json\")\n  const ignoreCase =\n    isJson || Settings.matchSidecarsCaseInsensitively.valueOrDefault\n\n  let srcName = src.base\n  let sidecarName = sidecar.name\n\n  if (strEql(srcName, sidecarName, { ignoreCase })) {\n    // Simplest case: \"image.jpg.xmp\" is a sidecar of \"image.jpg\"\n    return true\n  }\n\n  // OK, so, maybe the sidecar doesn't have the extension?\n  if (strEql(src.name, sidecarName, { ignoreCase })) {\n    // \"image.xmp\" is a sidecar of \"image.jpg\":\n    return true\n  }\n\n  // match image.JPG with image.jpeg.xmp (different spelling of the same file extension type)\n  const aliases = map(normalizeExt(src.ext), ea => extAliases().get(ea))\n  // we really _should_ be able to find an extension here:\n  if (aliases != null) {\n    const re = mkExtsRegExp(aliases)\n    srcName = srcName.replace(re, \"\")\n    sidecarName = sidecarName.replace(re, \"\")\n\n    if (strEql(srcName, sidecarName, { ignoreCase })) {\n      return true\n    }\n  }\n\n  const fuzzy = isJson || Settings.matchSidecarsFuzzily.valueOrDefault\n\n  if (fuzzy) {\n    for (const srcEa of uniq([\n      srcName,\n      src.name,\n      stripExt(srcName),\n      stripExt(src.name)\n    ])) {\n      for (const sidecarEa of uniq([\n        sidecarName,\n        sidecar.name,\n        stripExt(sidecarName),\n        stripExt(sidecar.name)\n      ])) {\n        if (\n          strEql(\n            stripCopySuffixFromName(srcEa),\n            stripCopySuffixFromName(sidecarEa),\n            { ignoreCase: fuzzy }\n          )\n        )\n          return true\n      }\n    }\n  }\n\n  return isJson && isJsonFuzzyMatch(srcName, sidecarName)\n}\n\nexport const AllowedUncommonSuffixRe =\n  /^((-edit(ed)?)|(-?\\w{1,2})|(-?\\(\\d{1,2}\\)))$/i\n\nfunction isJsonFuzzyMatch(srcName: string, sidecarName: string): boolean {\n  // guh, we have to do some b&115h!t for Google.\n  // https://forum.photostructure.com/t/creation-time-formatted-time-total-confusion-or-google-takeout-sidecar-files-are-misnamed/574/16?u=mrm\n  // https://forum.photostructure.com/t/incorrect-tags-assigned/842\n\n  const commonIdx = commonPrefixIgnoreCase(srcName, sidecarName)\n  if (commonIdx.length < 8) return false\n  function suffixOK(suffix: string) {\n    return blank(suffix) || suffix.match(AllowedUncommonSuffixRe) != null\n  }\n  const aSuffix = srcName.slice(commonIdx.length)\n  const aSuffixOK = suffixOK(aSuffix)\n\n  const bSuffix = sidecarName.slice(commonIdx.length)\n  const bSuffixOK = suffixOK(bSuffix)\n\n  return aSuffixOK && bSuffixOK\n}\n\nfunction cannotHaveSidecars(f: BaseFile) {\n  return (\n    // sidecars don't have sidecars:\n    isSidecarExt(f.ext) || inHiddenPhotoStructureDir(f)\n  )\n}\n\n/**\n *  @return oldest sidecars first (so newest sidecar metadata wins, as they are\n * layered on top of eachother)\n */\nexport async function existingSidecars<T extends BaseFile>(\n  src: T\n): Promise<T[]> {\n  if (cannotHaveSidecars(src)) return []\n  return sortByAsync({\n    name: \"_existingSidecars\",\n    arr: src.siblings(ea => isSidecarOf(src, ea)),\n    f: ea => ea.mtimeMs() // older first, see jsdoc ^^\n  })\n}\n\nexport function defaultSidecarExt() {\n  return ensurePrefix(Settings.defaultSidecarType.valueOrDefault, \".\")\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { Dimensions, isDimensions, maybeDimSwap } from \"../../fe/Dimensions\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { first } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { FileCache } from \"../fs/FileCache\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { aspectRatio } from \"../img/Dimensions\"\nimport { RawInfo, rawInfo } from \"../img/RawInfo\"\nimport { extractVideoFrame_ } from \"../img/Video\"\nimport { readRawTags } from \"./ExifTool\"\nimport { isLibrawMimeType, isVideoMimeType } from \"./MimeTypes\"\nimport { ImageDimensions, extractRotation } from \"./Orientation\"\n\nconst logger = lazy(() => mkLogger(\"tags.SizeInfo\"))\n\nexport interface SizeInfo extends ImageDimensions {\n  /**\n   * Dimensions after EXIF orientation has been applied\n   */\n  dimensions: Dimensions\n\n  /**\n   * Aspect ratio (width/height) after EXIF orientation has been applied\n   */\n  aspectRatio: number\n\n  /**\n   * These dimensions do not take EXIF orientation into account\n   */\n  fileDimensions: Dimensions\n\n  /**\n   * Degrees clockwise that the image should be rotated. `undefined` if the\n   * tag is missing. 0 if the image is already in correct orientation.\n   * Undefined if `Orientation` involves mirroring (which should be extremely\n   * rare)\n   */\n  rotation: Maybe<number>\n}\n\nconst sizeInfoCache = lazy(\n  () =>\n    new FileCache<Maybe<SizeInfo>>({\n      name: \"tags.sizeInfo\",\n      maxSize: 256,\n      timeoutMs: minuteMs\n    })\n)\n\n/**\n * Handles extracting dimensions from both image and video files\n */\nexport async function extractSizeInfoFromFile(\n  pathOrFile: Maybe<SimpleFileOrString>,\n  defaultTags?: Tags\n): PromiseMaybe<SizeInfo> {\n  if (pathOrFile == null) return\n  const f = PosixFile.for(pathOrFile)\n  return sizeInfoCache().getOrSetAsync(f.nativePath, () =>\n    _extractSizeInfoFromFile(f, defaultTags)\n  )\n}\n\nasync function _extractSizeInfoFromFile(\n  f: Maybe<PosixFile>,\n  defaultTags?: Tags\n): PromiseMaybe<SizeInfo> {\n  if (f == null) return\n  // defaultTags is set by tests and by videos after we extract a frame:\n  const t =\n    defaultTags == null || blank(defaultTags.ImageHeight)\n      ? await readRawTags(f)\n      : defaultTags\n  if (t == null) return\n\n  // If the video has a rotation value (or a sidecar with a rotation value), use\n  // that:\n  const rot = extractRotation(defaultTags) ?? extractRotation(t)\n\n  if (isLibrawMimeType(t.MIMEType)) {\n    return extractSizeInfoFromTags(t, rot, await rawInfo(f))\n  }\n\n  const si = extractSizeInfoFromTags(t, rot)\n  if (si != null) return si\n\n  if (isVideoMimeType(t.MIMEType)) {\n    return _extractSizeInfoFromFile(await extractVideoFrame_(f), t)\n  } else {\n    return\n  }\n}\n\n/**\n * Attempts to extract ImageHeight and ImageWidth from the given tags.\n *\n * You probably want the higher-level method, extractSizeInfoFromFile_().\n *\n * This is only exposed for use by __extractVideoFrame_\n */\nexport function extractSizeInfoFromTags(\n  tags: Maybe<\n    Partial<ImageDimensions & Pick<Tags, \"MIMEType\" | \"ImageSize\" | \"FileName\">>\n  >,\n  rotation?: Maybe<number>,\n  _rawInfo?: Maybe<Partial<RawInfo>>\n): Maybe<SizeInfo> {\n  rotation ??= extractRotation(tags)\n  const fileDimensions = first(\n    [\n      _rawInfo?.ImageSize,\n      // DON'T pull in ExifImageWidth/ExifImageHeight or\n      // SourceImageWidth/SourceImageHeight: those tags don't necessarily\n      // represent the actual image size.\n      { width: tags?.ImageWidth, height: tags?.ImageHeight }\n    ],\n    d => (isDimensions(d) ? d : undefined)\n  )\n\n  // Sometimes this is \"11mm\" (for .svg)\n  if (fileDimensions == null) {\n    return logger().tap({\n      msg: \"extractSizeInfo(\" + tags?.FileName + \")\",\n      result: undefined,\n      meta: {\n        mimetype: tags?.MIMEType,\n        rawInfo,\n        fileDimensions\n      }\n    })\n  }\n\n  const dimensions = maybeDimSwap(fileDimensions, rotation)\n  return logger().tap({\n    msg: \"extractSizeInfo(\" + tags?.FileName + \")\",\n    result: {\n      ImageHeight: dimensions.height,\n      ImageWidth: dimensions.width,\n      aspectRatio: aspectRatio(dimensions)!,\n      dimensions,\n      rotation,\n      fileDimensions\n    },\n    meta: {\n      mimetype: tags?.MIMEType,\n      rawInfo\n    }\n  })\n}\n","import { defaultVideosToUTC } from \"exiftool-vendored\"\nimport { DateTime } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, isNotEmpty, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { dayMs } from \"../../fe/Date\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { toA } from \"../../fe/toA\"\nimport { flatZip } from \"../Array\"\nimport { definedAndNotEql } from \"../Eql\"\nimport { mkLogger } from \"../Logger\"\nimport { diceCoeff } from \"../StringSimilarity\"\nimport { thenMap } from \"../async/Promise\"\nimport { time } from \"../async/PromiseTimer\"\nimport { DateInterval } from \"../date/DateInterval\"\nimport { Dated, datedOverlap } from \"../date/Dated\"\nimport { closeTo, toExifDateTime } from \"../date/FuzzyDate\"\nimport { extractDateFromPath, parseDated } from \"../date/FuzzyDateParser\"\nimport { getZoneName } from \"../date/getZoneName\"\nimport { inHiddenPhotoStructureDir } from \"../dir/InHiddenPhotoStructureDir\"\nimport { extFilter } from \"../fs/BaseFilePredicates\"\nimport { FileCache } from \"../fs/FileCache\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { isCachedDir, isSlowDir } from \"../fs/Readdir\"\nimport { SimpleFile, findFileIndex } from \"../fs/SimpleFile\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { SyncPredicate } from \"../predicates/SyncPredicates\"\nimport { Settings } from \"../settings/Settings\"\nimport { TagInferenceSettingValues } from \"../settings/TagInferenceSettingValues\"\nimport { bname } from \"./Bname\"\nimport { capturedAtFromTags } from \"./CapturedAt\"\nimport { RareTags } from \"./ExifTags\"\nimport { readRawTags } from \"./ExifTool\"\nimport { ExtTypes } from \"./ExtType\"\nimport { extractMakeAndModel } from \"./MakeModel\"\nimport { isAssetFileMimeType } from \"./MimeTypes\"\n\nconst logger = lazy(() => mkLogger(\"tags.TagInference\"))\n\nconst MaxSiblingsChecked = 7\n\nexport async function canInferForDir(d: PosixFile) {\n  if (\n    Settings.siblingInference.valueOrDefault === TagInferenceSettingValues.never\n  ) {\n    logger().debug(\n      \"canInferForDir(\" +\n        d +\n        \"): disabled: \" +\n        Settings.siblingInference.toEnvLine()\n    )\n    return false\n  }\n\n  if (true === inHiddenPhotoStructureDir(d)) {\n    logger().debug(\n      \"canInferForDir(\" + d + \"): disabled (PhotoStructure directory)\"\n    )\n    return false\n  }\n\n  if (\n    Settings.siblingInference.valueOrDefault ===\n      TagInferenceSettingValues.auto &&\n    (await isSlowDir(d.nativePath)) &&\n    !(await isCachedDir(d.nativePath))\n  ) {\n    logger().debug(\n      \"canInferForDir(\" + d + \"): disabled (slow uncached directory)\"\n    )\n    return false\n  }\n\n  return true\n}\n\n/**\n * HEY GUESS WHAT HERE ARE SOME HEURISTICS OO BOY OO BOY WHAT COULD\n * POSSIBLY GO WRONG, AMIRITE?\n *\n * Unfortunately, many smartphones don't encode the make and model into their\n * video headers (like the Google Pixel!). They are stinky, stinky poopy\n * pants, but we can try to clean up their mess. With a different stinky poopy\n * mess.\n *\n * Also unfortunately, `jpegtrans` from days of yore (2000s) didn't copy\n * tags to rotated images--so the image rotation was lossless, but the\n * resulting file lost its tags (like Make, Model, and capture time).\n *\n * If there are other files in the directory, and they have a consistent make\n * and model, assume the video shares the same make and model.\n */\nexport async function inferMakeAndModel(\n  f: PosixFile,\n  tags: Maybe<RareTags>\n): Promise<{\n  Make?: string\n  Model?: string\n}> {\n  const mm = extractMakeAndModel(tags)\n\n  if (mm.Make != null && mm.Model != null) {\n    return mm\n  }\n\n  if (!(await canInferForDir(f.parent()))) {\n    logger().debug(\n      \"inferMakeAndModel(\" + f + \"): cannot infer for this directory\",\n      f.parent()\n    )\n    return mm\n  }\n\n  // If a nearby file in the current directory have the same make and\n  // model, or a filename has the same prefix as our file, use that.\n  const nearestN = zipSibling(await nearestSiblings(f)).slice(0, 10)\n\n  logger().debug(\n    \"inferMakeAndModel(\" + f + \"): looking at nearby siblings\",\n    nearestN.map(ea => ea.base)\n  )\n\n  for (const sibling of nearestN) {\n    // DON'T readTags HERE! We'll go into inference infinite loopage!\n    const fromSibling = extractMakeAndModel(await readRawTags(sibling))\n    // If we have a Make or a Model, don't infer a different one from the sibling:\n    if (definedAndNotEql(fromSibling.Make, mm.Make)) {\n      logger().debug(\n        \"inferMakeAndModel(\" + f + \"): skipping sibling (mismatching Make)\",\n        { mm, fromSibling }\n      )\n      continue\n    }\n    // this shouldn't ever happen:\n    if (definedAndNotEql(fromSibling.Model, mm.Model)) {\n      logger().debug(\n        \"inferMakeAndModel(\" + f + \"): skipping sibling (mismatching Model)\",\n        { mm, fromSibling }\n      )\n      continue\n    }\n    if (fromSibling.Make != null && fromSibling.Model != null) {\n      return logger().tap({\n        msg: \"inferMakeAndModel(\" + f + \")\",\n        level: LogLevels.info,\n        result: fromSibling,\n        meta: { sibling: sibling.base }\n      })\n    }\n  }\n  return mm\n}\n\nexport async function inferCapturedAtFromSiblings(\n  file: PosixFile\n): PromiseMaybe<{ date: Dated; src: string }> {\n  if (!(await canInferForDir(file.parent()))) {\n    return\n  }\n\n  return thenMap(\n    beforeAfterCapturedAt(file),\n    ({ before, after, index, slots }) => {\n      if (!closeTo(before.date, after.date, 2 * dayMs)) {\n        // This \"same day\" heuristic means we don't apply this general heuristic\n        // when the siblings are really different.\n        return\n      }\n      return map(\n        DateInterval.for(\n          toExifDateTime(before.date, getZoneName(before.date)),\n          toExifDateTime(after.date, getZoneName(after.date)),\n          index,\n          slots\n        ),\n        date => ({\n          date,\n          src: `before:${before.src},after:${after.src}`\n        })\n      )\n    }\n  )\n}\n\nasync function firstWithCapturedAt(\n  arr: Maybe<PosixFile[]>\n): PromiseMaybe<{ date: Dated; src: string; index: number }> {\n  arr = toA(arr)\n  for (\n    let index = 0;\n    index < Math.min(arr.length, MaxSiblingsChecked);\n    index++\n  ) {\n    const sib = arr[index]\n    const tags = await readRawTags(sib)\n    const ca = capturedAtFromTags(tags)\n    if (ca != null) return { ...ca, index }\n  }\n  return\n}\n\nasync function firstWithZoneName(\n  arr: PosixFile[]\n): PromiseMaybe<{ zoneName: string; path: string; base: string; src: string }> {\n  arr = toA(arr).slice(0, MaxSiblingsChecked)\n  for (const sib of arr) {\n    const t = await readRawTags(sib) // < NOT readTags--that would cause an infinite loop!\n    logger().debug(\"firstWithZoneName() readRawTags\", { sib, t })\n    if (t != null && notBlank(t.tz) && t.tzSource !== defaultVideosToUTC) {\n      return logger().tap({\n        msg: \"firstWithZoneName()\",\n        result: {\n          zoneName: t.tz,\n          path: sib.nativePath,\n          base: sib.base,\n          src: t.tzSource ?? \"tags.tz\"\n        },\n        meta: {\n          tzSource: t.tzSource\n        }\n      })\n    }\n  }\n  logger().debug(\"firstWithZoneName(): no zone name found\", { arr })\n  return\n}\n\nexport type BeforeAfterResult = PromiseMaybe<{\n  before: { date: Dated; src: string }\n  after: { date: Dated; src: string }\n  index: number\n  slots: number\n}>\n\nconst bacaCache = lazy(\n  () => new FileCache<BeforeAfterResult>({ name: \"tags.beforeAfterCapturedAt\" })\n)\n\nexport function beforeAfterCapturedAt(file: PosixFile): BeforeAfterResult {\n  return bacaCache().getOrSet(file.nativePath, async () => {\n    const sibs = await nearestSiblings(file)\n    const before = await firstWithCapturedAt(sibs?.younger)\n    const after = await firstWithCapturedAt(sibs?.older)\n    return before == null || after == null\n      ? undefined\n      : {\n          before,\n          after,\n          index: before.index,\n          slots: before.index + after.index + 1\n        }\n  })\n}\n\nconst isAssetFileExtension: SyncPredicate<SimpleFile> = extFilter(\n  ExtTypes.AssetFile\n)\n\ntype NearestSiblings = { younger: PosixFile[]; older: PosixFile[] }\n\nfunction zipSibling(s: Maybe<NearestSiblings>): PosixFile[] {\n  return s == null ? [] : compact(flatZip(toA(s.younger), toA(s.older)))\n}\n\n/**\n * Return `{younger: PosixFile[], older: PosixFile[]}`, ordered by basename\n * similarity to `f`.\n *\n * Both `younger` and `older` will be truncated after `maxLength` entries, to\n * prevent large directories from causing exiftool to visit every entry in large\n * directories.\n */\nexport async function nearestSiblings(\n  f: PosixFile,\n  maxLength = 7\n): PromiseMaybe<NearestSiblings> {\n  if (!(await canInferForDir(f.parent()))) return\n\n  const dirents = await time(\"tags.nearestSiblings\", async () => {\n    const parent = await f.parent().directoryEntry()\n    const arr = await parent?.childFiles()\n    return arr?.filter(\n      async ea =>\n        // no hidden files:\n        ea.isFile() &&\n        !ea.isNameHidden() &&\n        // any file with EXIF:\n        (isAssetFileExtension(ea) ?? (await isAssetFileMimeType(ea)))\n    )\n  })\n\n  if (dirents == null) {\n    logger().info(\"nearestSiblings(): can't readdir parent, \" + f.parent())\n    return\n  }\n  const sorted = sortBy(dirents, ea => bname(ea))\n  // WE WANT BASE, NOT NAME, because we want the entry for `f`:\n  const myIndex = findFileIndex(f, sorted)\n  if (myIndex < 0) {\n    logger().warn(\"nearestSiblings(): can't find self in siblings: \" + f)\n    return\n  }\n\n  const minMatch = clamp(\n    0,\n    1,\n    Settings.siblingInferenceBasenameCoeff.valueOrDefault\n  )\n\n  const [youngerDE, olderDE] = [\n    sorted.slice(myIndex - maxLength * 2, myIndex),\n    sorted.slice(myIndex + 1, myIndex + 1 + maxLength * 2)\n  ]\n\n  const younger: PosixFile[] = []\n  const older: PosixFile[] = []\n\n  while (isNotEmpty(youngerDE) && younger.length < maxLength) {\n    const ea = PosixFile.forDirectoryEntry(youngerDE.pop()!)\n    if (diceCoeff(f.name, ea.name) >= minMatch) {\n      younger.push(ea)\n    }\n  }\n\n  while (isNotEmpty(olderDE) && older.length < maxLength) {\n    const ea = PosixFile.forDirectoryEntry(olderDE.shift()!)\n    if (diceCoeff(f.name, ea.name) >= minMatch) {\n      older.push(ea)\n    }\n  }\n\n  return logger().tap({\n    msg: \"nearestSiblings()\",\n    result: {\n      younger,\n      older\n    },\n    meta: { f }\n  })\n}\n\nexport async function nearestSiblingTzOffset(\n  f: PosixFile\n): PromiseMaybe<{ zoneName: string; path: string; base: string; src: string }> {\n  if (!(await canInferForDir(f.parent()))) return\n\n  const sibs = zipSibling(await nearestSiblings(f))\n  const result = await firstWithZoneName(sibs)\n  return logger().tap({\n    msg: \"nearestSiblingTzOffset()\",\n    result,\n    meta: { f, sibs: sibs.map(ea => ea.base) }\n  })\n}\n\n/**\n * If the basename encodes a date and time, and it matches any file stat time,\n * use that.\n */\nexport async function extractStatBname(\n  f: PosixFile\n): PromiseMaybe<{ src: string; date: Dated }> {\n  const input = uniq([bname(f, true), bname(f, false)])\n  const fromName = parseDated({ input })\n\n  if (fromName == null) {\n    logger().debug(\"extractStatBname(): bname isn't dated\", {\n      base: f.base,\n      input\n    })\n    return\n  }\n\n  const stat = await f.stat()\n  if (stat == null) {\n    logger().debug(\"extractStatBname(): no stat\", {\n      path: f.nativePath\n    })\n    return\n  }\n\n  for (const src of [\"birthtime\", \"atime\", \"mtime\", \"ctime\"] as const) {\n    if (datedOverlap({ a: fromName, b: stat[src] }).aOverlapsB) {\n      return logger().tap({\n        msg: \"extractStatBname()\",\n        result: { src, date: fromName },\n        meta: { input, stat }\n      })\n    }\n  }\n  return logger().tap({\n    msg: \"extractStatBname(): no stat overlap with bname\",\n    result: undefined,\n    meta: { input, fromName, stat }\n  })\n}\n\n/**\n * If the basename encodes a date and time, and it matches any file stat time,\n * use that.\n */\nexport async function extractStatPathTime(\n  f: PosixFile\n): PromiseMaybe<{ src: string; date: Dated }> {\n  const dateFromPath = extractDateFromPath(f.pathsForDateParsing)\n  if (dateFromPath == null) return\n\n  // The date encoded in the path may be quite course. If the stat time\n  // matches path-encoded date, let's use the stat time as a refinement.\n\n  const stat = await f.stat()\n  if (stat == null) return\n\n  // I'll take _any_ stat time (other than access time) that overlaps.\n  for (const src of [\"birthtime\", \"mtime\", \"ctime\"] as const) {\n    const d = stat[src]\n    if (\n      d != null &&\n      datedOverlap({ a: dateFromPath, b: d })?.aContainsB === true\n    ) {\n      return logger().tap({\n        msg: \"extractStatPathTime()\",\n        result: { src: \"path+\" + src, date: DateTime.fromJSDate(d) },\n        meta: { dateFromPath, stat, src }\n      })\n    }\n  }\n  return logger().tap({\n    msg: \"extractStatPathTime(): no match\",\n    result: undefined,\n    meta: { dateFromPath, stat }\n  })\n}\n","import { PathTag } from \"../../fe/api/Asset\"\nimport { TagPath, TagRef } from \"../../fe/api/Tag\"\nimport { compact, isEmpty, isNotEmpty, last, uniqBy } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isString, replaceAll } from \"../../fe/String\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { ancestry } from \"../Array\"\nimport { Settings } from \"../settings/Settings\"\nimport { equalsIgnoreCase, includesIgnoreCase } from \"../String\"\n\n/**\n * ASCII unit separator. We're using an ASCII-separated path, rather than a\n * JSON-encoded path, to make \"getDescendants\" by path easier.\n */\nexport const TagSep = String.fromCharCode(31)\n\nexport function tagRefToS(tagref: Maybe<string | TagRef>): string {\n  // normalize() is required to make macOS paths match other platforms:\n  return toS(isString(tagref) ? tagref : tagref?.name).normalize()\n}\n\n// export function tagPathToTagRef(ref: TagPath): TagRef[] {\n//   return ref.map(ea => (isTagRef(ea) ? ea : { name: toS(ea) }))\n// }\n\nexport function tagPathToPathTag(tp: TagPath): PathTag[] {\n  return ancestry(tagPathToStringArray(tp)).map((tagPath, i) => ({\n    tagPath,\n    displayName: (tagPath[i] as any)[\"displayName\"]\n  }))\n}\n\nexport function tagPathToStringArray(tagPath: TagPath): string[] {\n  return compact(tagPath.map(tagRefToS))\n}\n\nexport function joinTagPath(tagPath: TagPath, _sep = TagSep): string {\n  return (\n    tagPathToStringArray(tagPath)\n      .map(ea => replaceAll(ea, _sep, \"\"))\n      .join(_sep) + (_sep === TagSep ? _sep : \"\")\n  )\n}\n\nexport function joinedTagPathBasename(tagPath: string) {\n  return last(splitTagPath(tagPath))\n}\n\nexport function splitTagPath(tagPath: string, _sep = TagSep): string[] {\n  // filter(notBlank) removes the empty final path element due to suffixing with\n  // TagSep:\n  return toS(tagPath).split(_sep).filter(notBlank)\n}\n\nexport function normalizeTagPath(tagPath: string): string {\n  return joinTagPath(splitTagPath(tagPath))\n}\n\nexport function uniqTagPaths(arr: Maybe<Maybe<TagPath>[]>) {\n  return uniqBy(toA(arr), t => (isEmpty(t) ? undefined : joinTagPath(t)))\n}\n\nfunction tagPathToLowerStr(tagPath: TagPath): string {\n  return tagPathToStringArray(tagPath).join(TagSep).toLowerCase() // case insensitive\n}\n\nexport function tagPathEql(a: TagPath, b: TagPath): boolean {\n  return a != null && b != null && tagPathToLowerStr(a) === tagPathToLowerStr(b)\n}\n\n/**\n * @return elements in `a` that are not in `b`\n */\nexport function tagDiff(\n  a: Maybe<Maybe<TagPath>[]>,\n  b: Maybe<Maybe<TagPath>[]>\n): TagPath[] {\n  const bPaths = new Set(compact(b).map(tag => tagPathToLowerStr(tag)))\n  return compact(a).filter(tag => !bPaths.has(tagPathToLowerStr(tag)))\n}\n\nexport function tagPathsInclude(needle: TagPath, haystack: TagPath[]) {\n  const s = tagPathToLowerStr(needle)\n  return haystack.some(ea => s === tagPathToLowerStr(ea))\n}\n\nexport function tagPathLeaf(tagPath: Maybe<TagPath | string>): Maybe<string> {\n  return blank(tagPath)\n    ? undefined\n    : Array.isArray(tagPath)\n    ? tagRefToS(last(tagPath))\n    : last(splitTagPath(tagPath))\n}\n\nexport function leafIsExcluded(\n  tagPath: Maybe<TagPath | string>,\n  excluded: string[]\n): boolean {\n  return mapOr(\n    tagPathLeaf(tagPath),\n    leaf => includesIgnoreCase(excluded, leaf),\n    () => false\n  )\n}\n\n/**\n * @return true if ancestor is equivalent to or is an ancestor of `descendant`\n */\nexport function isTagPathDescendant(\n  ancestor: TagPath,\n  descendant: TagPath\n): boolean {\n  if (\n    isEmpty(ancestor) ||\n    isEmpty(descendant) ||\n    ancestor.length > descendant.length\n  ) {\n    return false\n  }\n  const des = tagPathToStringArray(descendant)\n  return tagPathToStringArray(ancestor).every((ea, i) =>\n    equalsIgnoreCase(ea, des[i])\n  )\n}\n\nexport function omitAncestorTags(tagPaths: TagPath[]): TagPath[] {\n  if (!Settings.omitAncestorTags.valueOrDefault) return tagPaths\n\n  // longest tags should \"win\". Omit all tags that are ancestors of winning tags.\n  const result: TagPath[] = []\n\n  for (const tagPath of sortBy(tagPaths.filter(isNotEmpty), ea => -ea.length)) {\n    if (!result.some(ea => isTagPathDescendant(tagPath, ea))) {\n      result.push(tagPath)\n    }\n  }\n  // restore the prior sort order:\n  return sortBy(result, ea => tagPaths.indexOf(ea))\n}\n","import { Tags } from \"exiftool-vendored\"\nimport { uniq } from \"../../fe/Array\"\nimport { mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { compactValues } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport { ExifTags } from \"./ExifTags\"\n\nexport function extractTitleDescription(t: ExifTags) {\n  // from https://exiftool.org/forum/index.php?topic=1464.msg6370#msg6370\n\n  // Olympus sometimes adds OLYMPUS DIGITAL CAMERA as the ImageDescription, but\n  // also includes that string as the \"CameraID\". In any event, if the title or\n  // description matches the camera id, or \"OLYMPUS DIGITAL CAMERA\", it's not\n  // valid, and we should look elsewhere for the title or description.\n\n  const not = uniq([\n    \"OLYMPUS DIGITAL CAMERA\",\n    t.original?.Make,\n    t.original?.Model,\n    t.Model,\n    t.Make,\n    t.CameraID\n  ]).map(ea => mapNotBlank(ea, s => s.trim().toLowerCase().normalize()))\n\n  const first = (...fieldNames: (keyof Tags)[]): Maybe<string> => {\n    for (const fieldName of fieldNames) {\n      const s = toS(t[fieldName]).trim()\n      if (notBlank(s) && !not.includes(s.toLowerCase().normalize())) {\n        return s\n      }\n    }\n    return\n  }\n\n  return compactValues({\n    title: first(\"XPTitle\", \"Title\", \"ObjectName\"),\n    description: first(\n      \"XPSubject\",\n      \"Description\",\n      \"ImageDescription\",\n      \"Caption-Abstract\"\n    )\n  })\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport {\n  PS_LIBRARY_SCHEME,\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n} from \"../../fe/URI\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { thenCompact, thenMap } from \"../async/Promise\"\nimport { exists } from \"../fs/Stat\"\nimport { Volume } from \"../volumes/Volume\"\nimport { bestVolumeForPath } from \"../volumes/Volumes\"\nimport { URI } from \"./URI\"\nimport { uriEncodingVariants } from \"./UriNormalization\"\nimport { nativePath2psfile, psfile2nativePath } from \"./psfile\"\nimport { nativePath2pslib, pslib2nativePath } from \"./pslib\"\nimport { nativePath2psnet, psnet2nativePath } from \"./psnet\"\n\nconst logger = lazy(() => mkLogger(\"uri.FileURI\"))\n\nexport async function nativePath2uri(\n  nativePath: string,\n  volume?: Volume\n): Promise<URI> {\n  if (nativePath == null || blank(nativePath)) {\n    return logger().throw(\"empty nativePath passed to nativePath2uri()\", {\n      retriable: false\n    })\n  }\n\n  return (\n    nativePath2pslib(nativePath) ??\n    (await nativePath2psfile(nativePath, volume)) ??\n    (await nativePath2psnet(nativePath, volume)) ??\n    URI.file(nativePath)\n  )\n}\n\nexport async function nativePath2uris(nativePath: string): Promise<URI[]> {\n  const vol = await bestVolumeForPath(nativePath)\n  return thenCompact([\n    nativePath2pslib(nativePath),\n    nativePath2psfile(nativePath, vol),\n    nativePath2psnet(nativePath, vol),\n    URI.file(nativePath)\n  ])\n}\n\nexport async function nativePath2uriVariants(\n  nativePath: string\n): Promise<string[]> {\n  const arr = await nativePath2uris(nativePath)\n  return uniq(flatten(arr.map(uriEncodingVariants)))\n}\n\nexport async function uriVariants(\n  uri: string,\n  mountpoint?: string\n): Promise<string[]> {\n  const result = uriEncodingVariants(uri)\n  result.push(\n    ...toA(\n      await thenMap(uri2nativePath(uri, mountpoint), nativePath2uriVariants)\n    )\n  )\n  return uniq(result)\n}\n\nfunction toURI(uri: string | URI): Maybe<URI> {\n  try {\n    if (URI.isUri(uri)) return uri\n    return URI.parse(uri, true)\n  } catch (err) {\n    logger().warn(\"bad URI\", { uri, err })\n    return\n  }\n}\n\nexport async function uri2nativePath(\n  uri: string | URI,\n  mountpoint?: string\n): PromiseMaybe<string> {\n  if (blank(uri)) return\n  const u = toURI(uri)\n  if (u == null) return\n\n  switch (u.scheme) {\n    case \"file\":\n      return u.fsPath\n    case PS_LOCAL_FILE_SCHEME:\n      return psfile2nativePath(u, mountpoint)\n    case PS_NETWORK_FILESYSTEM_SCHEME:\n      return psnet2nativePath(u, mountpoint)\n    case PS_LIBRARY_SCHEME:\n      return pslib2nativePath(u)\n    default:\n      throw new Error(\"unsupported URI: \" + uri)\n  }\n}\n\nexport async function uriExists(uri: string | URI, mountpoint?: string) {\n  const np = await uri2nativePath(uri, mountpoint)\n  return np != null && (await exists(np))\n}\n","// see https://github.com/microsoft/vscode/blob/master/src/vs/base/common/uri.ts\nimport { posix, win32 } from \"path\"\nimport { toUnicode } from \"punycode\"\nimport { inspect } from \"util\"\nimport { mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ensureSuffix } from \"../../fe/String\"\nimport { URLSearchParamable, toURLSearchParams } from \"../../fe/URLSearchParams\"\nimport { findLast } from \"../Array\"\nimport { CharCode } from \"../CharCode\"\nimport { isWin, isWinPortable } from \"../platform/Platform\"\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/\nconst _singleSlashStart = /^\\//\nconst _doubleSlashStart = /^\\/\\//\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n  // scheme, must be set\n  if (!ret.scheme && _strict === true) {\n    throw new Error(\n      `[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`\n    )\n  }\n\n  // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n  // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n  if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n    throw new Error(\"[UriError]: Scheme contains illegal characters.\")\n  }\n\n  // path, http://tools.ietf.org/html/rfc3986#section-3.3\n  // If a URI contains an authority component, then the path component\n  // must either be empty or begin with a slash (\"/\") character.  If a URI\n  // does not contain an authority component, then the path cannot begin\n  // with two slash characters (\"//\").\n  if (ret.path) {\n    if (ret.authority) {\n      if (!_singleSlashStart.test(ret.path)) {\n        throw new Error(\n          '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character'\n        )\n      }\n    } else {\n      if (_doubleSlashStart.test(ret.path)) {\n        throw new Error(\n          '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")'\n        )\n      }\n    }\n  }\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n  if (!scheme && !_strict) {\n    return \"file\"\n  }\n  return scheme\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n  // the slash-character is our 'default base' as we don't\n  // support constructing URIs relative to other URIs. This\n  // also means that we alter and potentially break paths.\n  // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n  switch (scheme) {\n    case \"https\":\n    case \"http\":\n    case \"file\":\n      if (!path) {\n        path = _slash\n      } else if (path[0] !== _slash) {\n        path = _slash + path\n      }\n      break\n  }\n  return path\n}\n\nconst _empty = \"\"\nconst _slash = \"/\"\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n  static isUri(thing: any): thing is URI {\n    if (thing instanceof URI) {\n      return true\n    }\n    if (thing == null) {\n      return false\n    }\n    return (\n      typeof (<URI>thing).authority === \"string\" &&\n      typeof (<URI>thing).fragment === \"string\" &&\n      typeof (<URI>thing).path === \"string\" &&\n      typeof (<URI>thing).query === \"string\" &&\n      typeof (<URI>thing).scheme === \"string\" &&\n      typeof (<URI>thing).fsPath === \"function\" &&\n      typeof (<URI>thing).with === \"function\" &&\n      typeof (<URI>thing).toString === \"function\"\n    )\n  }\n\n  /**\n   * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n   * The part before the first colon.\n   */\n  readonly scheme: string\n\n  /**\n   * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n   * The part between the first double slashes and the next slash.\n   */\n  readonly authority: string\n\n  /**\n   * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n   */\n  readonly path: string\n\n  /**\n   * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n   */\n  readonly query: URLSearchParams\n\n  /**\n   * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n   */\n  readonly fragment: string\n\n  /**\n   * @internal\n   */\n  protected constructor(\n    scheme: string,\n    authority?: string,\n    path?: string,\n    query?: URLSearchParamable,\n    fragment?: string,\n    _strict?: boolean\n  )\n\n  /**\n   * @internal\n   */\n  protected constructor(components: UriComponents)\n\n  /**\n   * @internal\n   */\n  protected constructor(\n    schemeOrData: string | UriComponents,\n    authority?: string,\n    path?: string,\n    query?: string | URLSearchParams,\n    fragment?: string,\n    _strict: boolean = false\n  ) {\n    if (typeof schemeOrData === \"object\") {\n      this.scheme = schemeOrData.scheme || _empty\n      this.authority = schemeOrData.authority || _empty\n      this.path = schemeOrData.path || _empty\n      this.query = toURLSearchParams(schemeOrData.query ?? \"\")!\n      this.fragment = schemeOrData.fragment || _empty\n      // no validation because it's this URI\n      // that creates uri components.\n      // _validateUri(this);\n    } else {\n      this.scheme = _schemeFix(schemeOrData, _strict)\n      this.authority = orElse(authority, _empty)\n      this.path = _referenceResolution(this.scheme, orElse(path, _empty))\n      this.query = toURLSearchParams(query ?? \"\")!\n      this.fragment = orElse(fragment, _empty)\n\n      _validateUri(this, _strict)\n    }\n  }\n\n  // ---- filesystem path -----------------------\n\n  /**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n  get fsPath(): string {\n    // if (this.scheme !== 'file') {\n    // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n    // }\n    return uriToFsPath(this, false)\n  }\n\n  // ---- modify to new -------------------------\n\n  with(change: {\n    scheme?: string\n    authority?: string | null\n    path?: string | null\n    query?: URLSearchParamable | null\n    fragment?: string | null\n  }): URI {\n    if (change == null) {\n      return this\n    }\n\n    let { scheme, authority, path, query, fragment } = change\n    if (scheme === undefined) {\n      scheme = this.scheme\n    } else if (scheme === null) {\n      scheme = _empty\n    }\n    if (authority === undefined) {\n      authority = this.authority\n    } else if (authority === null) {\n      authority = _empty\n    }\n    if (path === undefined) {\n      path = this.path\n    } else if (path === null) {\n      path = _empty\n    }\n    if (query === undefined) {\n      query = this.query\n    } else if (query === null) {\n      query = _empty\n    }\n    if (fragment === undefined) {\n      fragment = this.fragment\n    } else if (fragment === null) {\n      fragment = _empty\n    }\n\n    if (\n      scheme === this.scheme &&\n      authority === this.authority &&\n      path === this.path &&\n      query === this.query &&\n      fragment === this.fragment\n    ) {\n      return this\n    }\n\n    return new Uri(scheme, authority, path, query, fragment)\n  }\n\n  // ---- parse & validate ------------------------\n\n  /**\n   * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n   * `file:///usr/home`, or `scheme:with/path`.\n   *\n   * @param value A string which represents an URI (see `URI#toString`).\n   */\n  static parse(value: string, _strict: boolean = false): URI {\n    const match = _regexp.exec(value)\n    if (!match) {\n      return new Uri(_empty, _empty, _empty, _empty, _empty)\n    }\n    const scheme = match[2] || _empty\n    const authority = percentDecode(match[4] || _empty)\n    const path = (match[5] || _empty).split(\"/\").map(percentDecode).join(\"/\")\n    const fixedPath =\n      scheme === \"psfile\" && path.startsWith(\"//\") ? path.slice(1) : path // TODO SITS\n    const query = toURLSearchParams(match[7])\n    const fragment = percentDecode(match[9] || _empty)\n    return new Uri(scheme, authority, fixedPath, query, fragment, _strict)\n  }\n\n  /**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n  static file(path: string): URI {\n    let authority = _empty\n\n    // normalize to fwd-slashes on windows,\n    // on other systems bwd-slashes are valid\n    // filename character, eg /f\\oo/ba\\r.txt\n    if (isWin) {\n      path = path.replace(/\\\\/g, _slash)\n    }\n\n    // check for authority as used in UNC shares\n    // or use the path as given\n    if (path[0] === _slash && path[1] === _slash) {\n      const idx = path.indexOf(_slash, 2)\n      if (idx === -1) {\n        authority = path.substring(2)\n        path = _slash\n      } else {\n        authority = path.substring(2, idx)\n        path = path.substring(idx) || _slash\n      }\n    }\n\n    return new Uri(\"file\", authority, path, _empty, _empty)\n  }\n\n  static from(components: {\n    scheme: string\n    authority?: string\n    path?: string\n    query?: string | URLSearchParams\n    fragment?: string\n  }): URI {\n    return new Uri(\n      components.scheme,\n      components.authority,\n      components.path,\n      components.query,\n      components.fragment\n    )\n  }\n\n  /**\n   * Join a URI path with path fragments and normalizes the resulting path.\n   *\n   * @param uri The input URI.\n   * @param pathFragment The path fragment to add to the URI path.\n   * @returns The resulting URI.\n   */\n  static joinPath(uri: URI, ...pathFragment: string[]): URI {\n    if (!uri.path) {\n      throw new Error(`[UriError]: cannot call joinPaths on URI without path`)\n    }\n    let newPath: string\n    if (isWin && uri.scheme === \"file\") {\n      newPath = URI.file(\n        win32.join(uriToFsPath(uri, true), ...pathFragment)\n      ).path\n    } else {\n      newPath = posix.join(uri.path, ...pathFragment)\n    }\n    return uri.with({ path: newPath })\n  }\n\n  isRootPath(): boolean {\n    return this.path == null || this.path === _slash\n  }\n\n  get pathBase(): Maybe<string> {\n    return this.isRootPath()\n      ? \"\"\n      : map(this.path, path => findLast(path.split(_slash), notBlank))\n  }\n\n  parent(): URI {\n    if (this.isRootPath()) return this\n    return this.with({\n      path: this.path.slice(0, this.path.lastIndexOf(_slash))\n    })\n  }\n\n  join(...path: string[]): URI {\n    return this.with({\n      path: ensureSuffix(this.path, _slash) + path.join(_slash)\n    })\n  }\n\n  // ---- printing/externalize ---------------------------\n\n  /**\n   * Creates a string representation for this URI. It's guaranteed that calling\n   * `URI.parse` with the result of this function creates an URI which is equal\n   * to this URI.\n   *\n   * * The result shall *not* be used for display purposes but for externalization or transport.\n   * * The result will be encoded using the percentage encoding and encoding happens mostly\n   * ignore the scheme-specific encoding rules.\n   *\n   * @param skipEncoding Do not encode the result, default is `false`\n   */\n  toString(skipEncoding: boolean = false): string {\n    return _asFormatted(this, skipEncoding)\n  }\n\n  toJSON(): UriComponents {\n    return this\n  }\n\n  [inspect.custom]() {\n    return this.toString()\n  }\n}\n\nexport interface UriComponents {\n  scheme: string\n  authority: string\n  path: string\n  query?: URLSearchParams | string\n  fragment: string\n}\n\ninterface UriState extends UriComponents {\n  $mid: number\n  external: string\n  fsPath: string\n  _sep: 1 | undefined\n}\n\nconst _pathSepMarker = isWinPortable ? 1 : undefined\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n  _formatted: string | null = null\n  _fsPath: string | null = null\n\n  get fsPath(): string {\n    if (this._fsPath == null) {\n      this._fsPath = uriToFsPath(this, false)\n    }\n    return this._fsPath\n  }\n\n  toString(skipEncoding: boolean = false): string {\n    if (!skipEncoding) {\n      if (this._formatted == null) {\n        this._formatted = _asFormatted(this, false)\n      }\n      return this._formatted\n    } else {\n      // we don't cache that\n      return _asFormatted(this, true)\n    }\n  }\n\n  toJSON(): UriComponents {\n    const res = <UriState>{\n      $mid: 1\n    }\n    // cached state\n    if (this._fsPath != null) {\n      res.fsPath = this._fsPath\n      res._sep = _pathSepMarker\n    }\n    if (this._formatted != null) {\n      res.external = this._formatted\n    }\n    // uri components\n    if (this.path) {\n      res.path = this.path\n    }\n    if (this.scheme) {\n      res.scheme = this.scheme\n    }\n    if (this.authority) {\n      res.authority = this.authority\n    }\n    mapNotBlank(this.query, ea => (res.query = ea))\n    if (this.fragment) {\n      res.fragment = this.fragment\n    }\n    return res\n  }\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n  [CharCode.Colon]: \"%3A\", // gen-delims\n  [CharCode.Slash]: \"%2F\",\n  [CharCode.QuestionMark]: \"%3F\",\n  [CharCode.Hash]: \"%23\",\n  [CharCode.OpenSquareBracket]: \"%5B\",\n  [CharCode.CloseSquareBracket]: \"%5D\",\n  [CharCode.AtSign]: \"%40\",\n\n  [CharCode.ExclamationMark]: \"%21\", // sub-delims\n  [CharCode.DollarSign]: \"%24\",\n  [CharCode.Ampersand]: \"%26\",\n  [CharCode.SingleQuote]: \"%27\",\n  [CharCode.OpenParen]: \"%28\",\n  [CharCode.CloseParen]: \"%29\",\n  [CharCode.Asterisk]: \"%2A\",\n  [CharCode.Plus]: \"%2B\",\n  [CharCode.Comma]: \"%2C\",\n  [CharCode.Semicolon]: \"%3B\",\n  [CharCode.Equals]: \"%3D\",\n\n  [CharCode.Space]: \"%20\"\n}\n\nexport function encodeURIComponentFast(\n  uriComponent: string,\n  allowSlash: boolean\n): string {\n  let res: string | undefined\n  let nativeEncodePos = -1\n\n  for (let pos = 0; pos < uriComponent.length; pos++) {\n    const code = uriComponent.charCodeAt(pos)\n\n    // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n    if (\n      (code >= CharCode.a && code <= CharCode.z) ||\n      (code >= CharCode.A && code <= CharCode.Z) ||\n      (code >= CharCode.Digit0 && code <= CharCode.Digit9) ||\n      code === CharCode.Dash ||\n      code === CharCode.Period ||\n      code === CharCode.Underline ||\n      code === CharCode.Tilde ||\n      (allowSlash && code === CharCode.Slash)\n    ) {\n      // check if we are delaying native encode\n      if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos))\n        nativeEncodePos = -1\n      }\n      // check if we write into a new string (by default we try to return the param)\n      if (res !== undefined) {\n        res += uriComponent.charAt(pos)\n      }\n    } else {\n      // encoding needed, we need to allocate a new string\n      if (res === undefined) {\n        res = uriComponent.substr(0, pos)\n      }\n\n      // check with default table first\n      const escaped = encodeTable[code]\n      if (escaped !== undefined) {\n        // check if we are delaying native encode\n        if (nativeEncodePos !== -1) {\n          res += encodeURIComponent(\n            uriComponent.substring(nativeEncodePos, pos)\n          )\n          nativeEncodePos = -1\n        }\n\n        // append escaped variant to result\n        res += escaped\n      } else if (nativeEncodePos === -1) {\n        // use native encode only when needed\n        nativeEncodePos = pos\n      }\n    }\n  }\n\n  if (nativeEncodePos !== -1) {\n    res += encodeURIComponent(uriComponent.substring(nativeEncodePos))\n  }\n\n  return res !== undefined ? res : uriComponent\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n  let res: string | undefined\n  for (let pos = 0; pos < path.length; pos++) {\n    const code = path.charCodeAt(pos)\n    if (code === CharCode.Hash || code === CharCode.QuestionMark) {\n      if (res === undefined) {\n        res = path.substr(0, pos)\n      }\n      res += encodeTable[code]\n    } else {\n      if (res !== undefined) {\n        res += path[pos]\n      }\n    }\n  }\n  return res !== undefined ? res : path\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n  let value: string\n  if (uri.authority && uri.path.length > 1 && uri.scheme === \"file\") {\n    // unc path: file://shares/c$/far/boo\n    value = `//${uri.authority}${uri.path}`\n  } else if (\n    uri.path.charCodeAt(0) === CharCode.Slash &&\n    ((uri.path.charCodeAt(1) >= CharCode.A &&\n      uri.path.charCodeAt(1) <= CharCode.Z) ||\n      (uri.path.charCodeAt(1) >= CharCode.a &&\n        uri.path.charCodeAt(1) <= CharCode.z)) &&\n    uri.path.charCodeAt(2) === CharCode.Colon\n  ) {\n    if (!keepDriveLetterCasing) {\n      // windows drive letter: file:///c:/far/boo\n      value = uri.path[1].toLowerCase() + uri.path.substr(2)\n    } else {\n      value = uri.path.substr(1)\n    }\n  } else {\n    // other path\n    value = uri.path\n  }\n  if (isWin) {\n    value = value.replace(/\\//g, \"\\\\\")\n  }\n  return value\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n  const encoder = !skipEncoding\n    ? encodeURIComponentFast\n    : encodeURIComponentMinimal\n\n  let res = \"\"\n  const { scheme, query, fragment } = uri\n  let { authority, path } = uri\n  if (scheme) {\n    res += scheme\n    res += \":\"\n  }\n  if (authority || scheme === \"file\") {\n    res += _slash\n    res += _slash\n  }\n  if (authority) {\n    let idx = authority.indexOf(\"@\")\n    if (idx !== -1) {\n      // <user>@<auth>\n      const userinfo = authority.substr(0, idx)\n      authority = authority.substr(idx + 1)\n      idx = userinfo.indexOf(\":\")\n      if (idx === -1) {\n        res += encoder(userinfo, false)\n      } else {\n        // <user>:<pass>@<auth>\n        res += encoder(userinfo.substr(0, idx), false)\n        res += \":\"\n        res += encoder(userinfo.substr(idx + 1), false)\n      }\n      res += \"@\"\n    }\n    // MRM 20200815: DON'T DOWNCASE:\n    // authority = authority.toLowerCase()\n    idx = authority.indexOf(\":\")\n    if (idx === -1) {\n      res += encoder(authority, false)\n    } else {\n      // <auth>:<port>\n      res += encoder(authority.substr(0, idx), false)\n      res += authority.substr(idx)\n    }\n  }\n  if (path) {\n    // lower-case windows drive letters in /C:/fff or C:/fff\n    if (\n      path.length >= 3 &&\n      path.charCodeAt(0) === CharCode.Slash &&\n      path.charCodeAt(2) === CharCode.Colon\n    ) {\n      const code = path.charCodeAt(1)\n      if (code >= CharCode.A && code <= CharCode.Z) {\n        path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}` // \"/c:\".length === 3\n      }\n    } else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n      const code = path.charCodeAt(0)\n      if (code >= CharCode.A && code <= CharCode.Z) {\n        path = `${String.fromCharCode(code + 32)}:${path.substr(2)}` // \"/c:\".length === 3\n      }\n    }\n    // encode the rest of the path\n    res += encoder(path, true)\n  }\n\n  mapNotBlank(query, q => (res += \"?\" + q))\n\n  if (fragment) {\n    res += \"#\"\n    res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment\n  }\n  return res\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n  try {\n    return decodeURIComponent(str)\n  } catch {\n    if (str.length > 3) {\n      return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3))\n    } else {\n      return str\n    }\n  }\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g\n\nexport function percentDecode(str: string): string {\n  if (str.startsWith(\"xn--\")) return toUnicode(str)\n  if (!str.match(_rEncodedAsHex)) {\n    return str\n  }\n  return str.replace(_rEncodedAsHex, match => decodeURIComponentGraceful(match))\n}\n\nexport function toURI(u: string | URI): URI {\n  return URI.isUri(u) ? u : URI.parse(u)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { eql } from \"../../fe/Eql\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport {\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n} from \"../../fe/URI\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { uri2nativePath } from \"./FileURI\"\nimport { URI, toURI } from \"./URI\"\n\nconst uriPrefixes = [\n  \"http:\",\n  \"https:\",\n  \"file:\",\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n].map(ea => ea + \"//\")\n\nexport function isUri(s: string): boolean {\n  const l = toS(s).toLowerCase()\n  return uriPrefixes.some(ea => l.startsWith(ea))\n}\n\nconst logger = lazy(() => mkLogger(\"uri.UriNormalization\"))\n\nexport function normalizeURI(uri: string): string {\n  try {\n    return URI.parse(uri).toString()\n  } catch (err) {\n    logger().warn(\"Failed to normalize invalid URI\", { uri, err })\n    return uri\n  }\n}\n\n/**\n * NOT FOR GENERAL USE (I don't think?)\n * @return true iff a and b are defined and are either equal or have the same\n * normalized content\n */\nfunction strEql(a: Maybe<string>, b: Maybe<string>) {\n  return a == null || b == null\n    ? false\n    : // normalize() is expensive, so we only do it if the paths are different\n      a === b || a.normalize() === b.normalize()\n}\n\n//\n// URI UNICODE NORMALIZATION\n//\n\n// We don't store normalized unicode URIs, as this allows us to store the actual\n// filename characters.\n\n// We *do* compare URIs by normalizing them, so macOS (using NFD) and other\n// filesystems (using NFC) can be considered equivalent.\n\nexport function uriEqlSync(a: Maybe<string | URI>, b: Maybe<string | URI>) {\n  try {\n    if (a == null || b == null) return false\n    const au = toURI(a)\n    const bu = toURI(b)\n    return (\n      au.scheme === bu.scheme &&\n      au.authority === bu.authority &&\n      strEql(au.path, bu.path)\n    )\n  } catch {\n    return false\n  }\n}\n\nexport async function uriIsEquivalent(\n  a: Maybe<string | URI>,\n  b: Maybe<string | URI>\n): Promise<boolean> {\n  try {\n    if (a == null || b == null) return false\n    return (\n      eql(a, b) ||\n      uriEqlSync(a, b) ||\n      strEql(await uri2nativePath(a), await uri2nativePath(b))\n    )\n  } catch {\n    return false\n  }\n}\n\nexport function uriEncodingVariants(uri: string | URI): string[] {\n  const u = toURI(uri)\n  return uniq([\n    u.toString(),\n    u.with({ path: u.path.normalize(\"NFC\") }).toString(),\n    u.with({ path: u.path.normalize(\"NFD\") }).toString()\n  ])\n}\n","import { join, posix, win32 } from \"path\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { ensurePrefix } from \"../../fe/String\"\nimport { PS_LOCAL_FILE_SCHEME } from \"../../fe/URI\"\nimport { containedByNativePath } from \"../fs/Path\"\nimport { native2posix } from \"../fs/PosixNative\"\nimport { isPosix } from \"../platform/Platform\"\nimport { Volume } from \"../volumes/Volume\"\nimport { bestVolumeForPath, bestVolumeForVolsha } from \"../volumes/Volumes\"\nimport { URI } from \"./URI\"\nimport { volsha } from \"./volsha\"\n\nexport async function nativePath2psfile(\n  nativePath: string,\n  vol?: Maybe<Volume>\n) {\n  if (blank(nativePath)) return\n  vol =\n    vol != null &&\n    containedByNativePath({\n      ancestor: vol.mountpoint,\n      descendant: nativePath,\n      acceptSelf: true // we shouldn't normally need to accept self--the volume mountpoint shouldn't be an asset native path!\n    })\n      ? vol\n      : await bestVolumeForPath(nativePath)\n  if (vol == null || blank(vol.uuid)) return\n\n  const fullPath = native2posix(nativePath)\n  const volPath = native2posix(vol.mountpoint)\n  if (!fullPath.normalize().startsWith(volPath.normalize())) return\n  const path = ensurePrefix(fullPath.slice(volPath.length), \"/\")\n\n  return URI.from({\n    scheme: PS_LOCAL_FILE_SCHEME,\n    authority: volsha(vol.uuid),\n    path\n  })\n}\n\nexport function joinMountpoint(mountpoint: string, posixPath: string) {\n  return join(mountpoint, ...posixPath.split(\"/\").slice(1))\n}\n\nexport async function psfile2nativePath(\n  uri: URI,\n  mountpoint?: string\n): PromiseMaybe<string> {\n  if (uri.scheme !== PS_LOCAL_FILE_SCHEME) {\n    throw new Error(\"invalid URI: \" + uri + \" (bad scheme)\")\n  }\n  if (blank(uri.authority)) {\n    throw new Error(\"invalid URI: \" + uri + \" (missing authority)\")\n  }\n\n  // Best-case, the volsha matches the mountpoint:\n\n  // Don't look at the mountpoint if it includes a separator character for the\n  // \"other\" platform (windows vs posix):\n\n  const notMySep = isPosix ? win32.sep : posix.sep\n\n  const mountpointMatchesPlatform =\n    notBlank(mountpoint) && !mountpoint.includes(notMySep)\n\n  if (mountpointMatchesPlatform && !blank(mountpoint)) {\n    const vol = await bestVolumeForPath(mountpoint)\n    if (vol?.uuid != null) {\n      const authority = volsha(vol.uuid)\n      if (authority === uri.authority) {\n        // Best case: everything still matches!\n        // We trust the volume mountpoint more that the given one, though:\n        return joinMountpoint(vol.mountpoint!, uri.path)\n      }\n    }\n  }\n\n  // Dang, the mountpoint's volsha doesn't match.\n\n  // See if we can resolve the volsha from current volumes:\n\n  const volshaVolume = await bestVolumeForVolsha(uri.authority)\n\n  if (volshaVolume != null) {\n    return joinMountpoint(volshaVolume.mountpoint, uri.path)\n  }\n\n  // last-ditch hope that the mountpoint actually works:\n\n  if (mountpointMatchesPlatform && notBlank(mountpoint)) {\n    return joinMountpoint(mountpoint, uri.path)\n  }\n\n  return undefined\n}\n","import { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ensurePrefix, stripPrefix } from \"../../fe/String\"\nimport { PS_LIBRARY_SCHEME } from \"../../fe/URI\"\nimport { libraryOriginalsDirPosixFile } from \"../dir/LibraryDirs\"\nimport { containedByNativePath, posixPathFrom } from \"../fs/Path\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { URI } from \"./URI\"\n\nexport const PSLIB_ROOT_URI = URI.from({\n  scheme: PS_LIBRARY_SCHEME,\n  path: \"\"\n})\n\nexport function nativePath2pslib(nativePath: string) {\n  if (blank(nativePath)) return\n\n  const libDir = Settings.libraryDir.valueOrDefault // < valueOrDefault for Docker\n  if (blank(libDir)) return\n\n  const parent = uniq([libDir, libraryOriginalsDirPosixFile()]).find(dir =>\n    containedByNativePath({\n      ancestor: dir,\n      descendant: nativePath,\n      acceptSelf: true\n    })\n  )\n\n  if (parent == null) return\n\n  // We can't just `\"/\" + ` because that breaks for the root library dir :(\n\n  const path = ensurePrefix(posixPathFrom(parent, nativePath), \"/\")\n\n  return URI.from({\n    scheme: PS_LIBRARY_SCHEME,\n    path\n  })\n}\n\nexport function pslib2nativePath(uri: URI): Maybe<string> {\n  if (uri.scheme !== PS_LIBRARY_SCHEME) {\n    throw new Error(\"invalid URI: \" + uri + \" (bad scheme)\")\n  }\n  const origDir = libraryOriginalsDirPosixFile()\n  if (origDir == null) {\n    throw new Error(\"invalid URI: \" + uri + \" (no library set)\")\n  }\n  // strip initial \"/\" because we want a relative path\n  const relativePath = stripPrefix(uri.path, \"/\")\n  const orig = origDir.join(relativePath)\n\n  // there may be two directories to look in: $PS_LIBRARY and $PS_ORIGINALS.\n  // Return the originals dir if it exists, else the library dir if it exists,\n  // else the originals dir path.\n\n  if (orig.isFileSync()) return orig.nativePath\n\n  if (!origDir.eql(Settings.libraryDir.valueOrDefault)) {\n    const lib = PosixFile.for(Settings.libraryDir.valueOrDefault!).join(\n      relativePath\n    )\n    if (lib.isFileSync()) return lib.nativePath\n  }\n\n  // give up\n  return orig.nativePath\n}\n","import * as _path from \"path\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { PS_NETWORK_FILESYSTEM_SCHEME } from \"../../fe/URI\"\nimport { toA } from \"../../fe/toA\"\nimport { equalsIgnoreCase, stripPrefix } from \"../String\"\nimport { native2posix } from \"../fs/PosixNative\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { isEquivalentHost } from \"../net/nslookup\"\nimport { isWin } from \"../platform/Platform\"\nimport { Volume } from \"../volumes/Volume\"\nimport { bestVolumeForPath, volumes } from \"../volumes/Volumes\"\nimport { URI } from \"./URI\"\n\nexport async function nativePath2psnet(\n  nativePath: string,\n  vol?: Maybe<Volume>\n): PromiseMaybe<URI> {\n  if (blank(nativePath)) return\n\n  vol ??= await bestVolumeForPath(nativePath)\n\n  // Prefer the volume, if available:\n  if (\n    vol != null &&\n    vol.remote === true &&\n    notBlank(vol.remoteHost) &&\n    notBlank(vol.remoteShare)\n  ) {\n    return URI.from({\n      scheme: PS_NETWORK_FILESYSTEM_SCHEME,\n      authority: vol.remoteHost,\n      path: _path.posix.join(\n        \"/\" + vol.remoteShare,\n        stripPrefix(native2posix(nativePath), native2posix(vol.mountpoint))\n      )\n    })\n  }\n\n  // If it's a UNC path, URI knows how to handle it:\n  if (nativePath.startsWith(\"\\\\\\\\\")) {\n    return URI.file(nativePath).with({ scheme: PS_NETWORK_FILESYSTEM_SCHEME })\n  }\n\n  // Give up:\n  return\n}\n\nexport async function psnet2nativePath(\n  uri: URI,\n  mountpoint?: string\n): PromiseMaybe<string> {\n  if (uri.scheme !== PS_NETWORK_FILESYSTEM_SCHEME) {\n    throw new Error(\"invalid URI: \" + uri + \" (bad scheme)\")\n  }\n\n  if (blank(uri.authority)) {\n    throw new Error(\"invalid URI: \" + uri + \" (missing authority)\")\n  }\n\n  const arr = uri.path.split(\"/\").slice(1) // < slice(1) to skip over the '' due to the absolute path\n  const share = arr[0]\n\n  if (blank(share)) {\n    throw new Error(\"invalid URI: \" + uri + \" (missing share)\")\n  }\n\n  if (isWin) {\n    return `\\\\\\\\${uri.authority}\\\\${arr.join(_path.sep)}`\n  }\n\n  const path = arr.slice(1)\n\n  // If there's a mounted drive with this share, use that:\n  const vols = await volumes()\n\n  for (const vol of toA(vols)) {\n    if (vol.remote !== true) continue\n    if (\n      equalsIgnoreCase(vol.remoteShare, share) &&\n      (await isEquivalentHost(uri.authority, vol.remoteHost))\n    ) {\n      return _path.join(vol.mountpoint, ...path)\n    }\n  }\n\n  if (await isReadableDirectory(mountpoint)) {\n    return _path.join(mountpoint!, ...path)\n  }\n\n  return\n}\n","import { mapNotBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { memoize } from \"../MemoizedFunc\"\nimport { shortStringSha } from \"../StringHash\"\n\nexport const volsha = memoize(\n  (uuid: Maybe<string>) => mapNotBlank(uuid, shortStringSha),\n  { maxSize: 128, ttlMs: minuteMs }\n)\n","import { compactBlanks } from \"../../fe/Array\"\nimport { libraryOriginalsDirPosixFile } from \"../dir/LibraryDirs\"\nimport { containedByNativePath, pathIsRoot } from \"../fs/Path\"\nimport { isPosix } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\n\nexport function mightBeAssetMountpoint(nativePath: string) {\n  for (const dir of compactBlanks([\n    Settings.libraryDir.valueOrDefault,\n    libraryOriginalsDirPosixFile(),\n    ...Settings.scanPaths.values\n  ])) {\n    // Don't let a \"/\" in scanPaths make everything not ignorable\n    if (isPosix && pathIsRoot(dir)) continue\n    if (\n      containedByNativePath({\n        ancestor: dir,\n        descendant: nativePath,\n        acceptSelf: true\n      })\n    )\n      return true\n  }\n  return false\n}\n","import { nativePath2uri } from \"../uri/FileURI\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { volumes } from \"./Volumes\"\n\nexport const currentVolumeRoots = lazyFsAsync(\n  \"currentVolumeRoots\",\n  _currentVolumeRoots\n)\n\nasync function _currentVolumeRoots(): Promise<{\n  uris: string[]\n  mountpoints: string[]\n}> {\n  const uris: string[] = []\n  const mountpoints: string[] = []\n  for (const vol of await volumes()) {\n    mountpoints.push(vol.mountpoint)\n    const uri = (await nativePath2uri(vol.mountpoint, vol))?.toString()\n    if (uri != null) uris.push(uri)\n  }\n  return { uris, mountpoints }\n}\n","export const DefaultExcludedLinuxRoots = [\n  \"boot\",\n  \"efi\",\n  \"etc\",\n  \"lib\", // don't exclude /net, that's used for nfs mounts!\n  \"proc\",\n  \"snap\",\n  \"sys\",\n  \"tmp\"\n]\n\nexport const DefaultExcludedLinuxMountpointPaths = [\n  \"/dev/shm\",\n  \"/run\",\n  \"/run/lock\",\n  \"/run/qemu\",\n  \"/run/snapd/ns\",\n  \"/tmp\",\n  \"/var/tmp\"\n]\n\nexport const DefaultExcludedLinuxMountpointNames = [\"#snapshot\"]\n","export const DefaultExcludedFilesystemTypes = [\n  \"cgmfs\",\n  \"cgroup\",\n  \"debugfs\",\n  \"devfs\",\n  \"devtmpfs\",\n  \"sunrpc\",\n  \"sysfs\",\n  \"tracefs\",\n  \"udev\"\n]\n","import { lazy } from \"../../core/Lazy\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { assignMissingPrimitives } from \"../Object\"\nimport { isReadableDirectorySync } from \"../fs/StatSync\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { mightBeAssetMountpoint } from \"./AssetMountpoint\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { gioVolumes, isGioSupported } from \"./Gio\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { isExcludedFilesystem, isExcludedMountpoint } from \"./PosixVolumes\"\nimport { DfVolume } from \"./Volume\"\n\nconst logger = lazy(() => mkLogger(\"volumes.DfPosix\"))\n\nconst localMountpoints = lazyFsAsync(\n  \"localMountpoints\",\n  // We'll assume gio mountpoints are always remote, so we can ignore gio stuff\n  // here:\n  async () =>\n    (await dfPosixRaw({ localsOnly: true, paths: await mountpoints() }))?.map(\n      vol => vol.mountpoint\n    )\n)\n\nfunction isRemoteFilesystem(fs: Maybe<string>) {\n  return notBlank(fs) && Settings.remoteFilesystemTypes.values.includes(fs)\n}\n\nexport function acceptPosixVolume(vol: DfVolume): boolean {\n  const notAssetMountpoint = !mightBeAssetMountpoint(vol.mountpoint)\n  const excludedFS =\n    vol.filesystem == null ? false : isExcludedFilesystem(vol.filesystem)\n  const excludedMP = isExcludedMountpoint(vol.mountpoint)\n  const excludedDir = Settings.validateMountpoints.valueOrDefault\n    ? !isReadableDirectorySync(vol.mountpoint)\n    : false\n\n  const excluded =\n    notAssetMountpoint && (excludedFS || excludedMP || excludedDir)\n\n  return logger().tap({\n    msg: \"acceptPosixVolume()\",\n    result: !excluded,\n    meta: {\n      volume: vol,\n      notAssetMountpoint,\n      excludedFS,\n      excludedMP,\n      excludedDir\n    }\n  })\n}\n\n// This doesn't need to be cached: it's cached already by _volumesImpl\nexport async function dfPosix() {\n  // df on docker doesn't return all mountpoints (!!) unless we tell `df` which paths we want:\n  const paths = isDocker() ? await mountpoints() : undefined\n  const vols = await dfPosixRaw({ paths })\n\n  if (vols == null) return\n  const locals = toA(await localMountpoints())\n  vols.forEach(vol => {\n    vol.remote =\n      !locals.includes(vol.mountpoint) || isRemoteFilesystem(vol.filesystem)\n  })\n  if (await isGioSupported()) {\n    for (const vol of toA(await gioVolumes())) {\n      // only push unique mountpoints\n      const prior = vols.find(ea => ea.mountpoint === vol.mountpoint)\n      if (prior == null) {\n        vols.push(vol)\n      } else {\n        logger().info(\"Merging GIO and df volume\", {\n          dfVol: prior,\n          gioVol: vol\n        })\n        // We don't trust gio as much as we trust df, so only assign missing fields (like remote host):\n        assignMissingPrimitives(prior, vol)\n      }\n    }\n  }\n  return vols.filter(acceptPosixVolume)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { KiB } from \"../../fe/Units\"\nimport { parseFixed } from \"../Fixed\"\nimport { mkLogger } from \"../Logger\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { isMac } from \"../platform/Platform\"\nimport { DfVolume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"volumes.DfPosixRaw\"))\n\n// KiB: https://en.wikipedia.org/wiki/Byte#Units_based_on_powers_of_2\nfunction kibToBytes(s: string): number {\n  return toInt(s, { defaultValue: 0 })! * KiB\n}\n\nexport async function dfPosixRawLocal_() {\n  return stdout_(\"df\", [\"-l\", \"-k\", \"-P\"], {\n    timeoutMs: commandTimeoutMs(),\n    ignoreStderr: false,\n    ignoreExitCode: false\n  })\n}\n\nexport async function dfPosixRaw({\n  localsOnly,\n  paths,\n  output\n}: {\n  localsOnly?: boolean\n  paths?: string[]\n  output?: string\n} = {}): Promise<DfVolume[]> {\n  // HEY FUTURE ME: Make sure you run `coreutils` version of `df` on Alpine!\n  const args = [\"-k\", \"-P\"]\n  if (localsOnly === true) args.push(\"-l\")\n  args.push(...compactBlanks(paths))\n  output ??= await stdout_(\"df\", args, {\n    timeoutMs: commandTimeoutMs(),\n    // https://askubuntu.com/questions/1227667/df-command-throws-error-on-run-user-1000-doc-folder\n    ignoreStderr: true,\n    ignoreExitCode: true\n  })\n  if (blank(output)) {\n    logger().warn(\"empty output\", { localsOnly, paths })\n    return []\n  }\n\n  logger().debug(\"output\", { localsOnly, paths, output })\n\n  const arr = parseDfVolumes(output)\n  if (localsOnly === true) {\n    arr.forEach(ea => (ea.remote = false))\n  }\n  return arr\n}\n\ninterface ParsedVolume {\n  Filesystem: string\n  \"1024-blocks\": string\n  Used: string\n  Available: string\n  \"Mounted on\": string\n}\n\nexport function parseDfVolumes(output: string) {\n  const parsed = parseFixed(\n    [\n      \"Filesystem\",\n      \"1024-blocks\",\n      \"Used\",\n      \"Available\",\n      \"Capacity\",\n      \"Mounted on\"\n    ],\n    output\n  )\n  return compact(parsed.map(ea => parseDfVolume(ea as any)))\n}\n\nexport function parseDfVolume(vol: ParsedVolume): Maybe<DfVolume> {\n  // HEY FUTURE ME: Don't filter \"ignorable\" volumes here. `mountpoints()` and\n  // `volumes()` does that for us.\n\n  const filesystem = vol[\"Filesystem\"]\n  const mountpoint = vol[\"Mounted on\"]\n  const size = kibToBytes(vol[\"1024-blocks\"]) ?? 0\n  if (size === 0) {\n    logger().info(\"parseDfVolume(): skipping (size is 0)\", { vol })\n    return\n  }\n\n  const used = kibToBytes(vol[\"Used\"]) ?? 0\n  const available = kibToBytes(vol[\"Available\"]) ?? 0\n\n  if (used === 0 && available === 0) {\n    logger().info(\"parseDfVolume(): skipping (used and available is 0)\", {\n      vol,\n      size,\n      used,\n      available\n    })\n    return\n  }\n\n  return {\n    filesystem,\n    mountpoint,\n    // 20220530: macOS MIS-REPORTS VOLUME SIZES, YAY\n    size: isMac ? used + available : size,\n    used,\n    available\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, uniq } from \"../../fe/Array\"\nimport { sort } from \"../../fe/ArraySort\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, gte0 } from \"../../fe/Number\"\nimport { Obj, compactBlankValues } from \"../../fe/Object\"\nimport { ensureSuffix } from \"../../fe/String\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { equalsIgnoreCase } from \"../String\"\nimport { mapAsync } from \"../async/Promise\"\nimport { onError } from \"../error/OnError\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\nimport { Settings } from \"../settings/Settings\"\nimport { mountpointsWin } from \"./MountpointsWin\"\nimport { parseRemoteName } from \"./RemoteVolumesWin\"\nimport { Volume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"volumes.DfWin\"))\n\n// This is already cached by _volumesImpl()\nexport async function dfWin() {\n  const disks = await volumeInfoWin()\n  return disks.filter(d => d.ok !== false && gt0(d.size))\n}\n\nconst DriveLetterRE = /([a-z]+)(?::\\\\)?/i\n\nfunction cleanDriveLetter(driveLetter?: Maybe<string>) {\n  return driveLetter?.match(DriveLetterRE)?.[1]?.toUpperCase()\n}\n\nexport function normalizeDriveLetter(driveLetter: Maybe<string>) {\n  return map(cleanDriveLetter(driveLetter), ea => ea + \":\\\\\")\n}\n\n// Returns network-mapped drives, but doesn't get operational status or UUIDs:\nexport function getPsDriveCommand(driveLetter?: Maybe<string>) {\n  return `Get-PSDrive -PSProvider FileSystem ${toS(\n    cleanDriveLetter(driveLetter)\n  )} | Select-Object -Property Root,DisplayRoot,Description,Used,Free`\n}\n\nfunction parseGetPsDriveRow(ea: Obj): Maybe<Volume> {\n  return ea == null || blank(ea.Root) || !gte0(ea.Free) || !gte0(ea.Used)\n    ? undefined\n    : (compactBlankValues({\n        mountpoint: ensureSuffix(ea.Root, \":\\\\\").toUpperCase(),\n        label: ea.Description,\n        size: ea.Used + ea.Free,\n        used: ea.Used,\n        available: ea.Free,\n        remote: notBlank(ea.DisplayRoot),\n        ...map(parseRemoteName(ea.DisplayRoot), remote => ({\n          remoteHost: remote.host,\n          remoteShare: remote.share\n        }))\n      }) as Volume)\n}\n\n// Note: Get-Disk and Get-Partition return physical (not logical) disk info.\n\n// No remote drives, but we get UUIDs:\nexport function getVolumeCommand(driveLetter?: Maybe<string>) {\n  return `Get-Volume ${toS(\n    cleanDriveLetter(driveLetter)\n  )} | Select-Object -Property DriveLetter,FileSystem,FileSystemLabel,Size,SizeRemaining,HealthStatus,OperationalStatus,UniqueId`\n}\n\nexport function getLocalVolumesWin_() {\n  return PowerShell.instance().executeJsonToA(getVolumeCommand())\n}\n\nconst uuidRE = /\\{([-a-z0-9]{7,})\\}/i\n\n/**\n * @param s \"\\\\?\\Volume{717926df-0000-0000-0000-50e01f000000}\\\"\n */\nfunction uniqueId2uuid(s: Maybe<string>) {\n  return logger().tap({\n    msg: \"uniqueId2uuid\",\n    result: map(uuidRE.exec(toS(s)), m => m[1]),\n    meta: { s }\n  })\n}\n\nfunction toDefinedAndNotEql(s: Maybe<string>, v: string) {\n  s = s?.trim()\n  return !blank(s) && !equalsIgnoreCase(s, v) ? s : undefined\n}\n\nexport function parseGetVolumeRow(o: Obj): Maybe<Volume> {\n  // We don't care about system recovery volumes:\n  if (\n    o.DriveLetter == null ||\n    o.DriveLetter === \"null\" ||\n    o.FileSystemLabel === \"System Reserved\"\n  ) {\n    logger().debug(\"parseGetVolumeRow(): skipping system recovery volume\", {\n      o\n    })\n    return\n  }\n  const mountpoint = normalizeDriveLetter(o.DriveLetter)\n  if (mountpoint == null) {\n    logger().debug(\n      \"parseGetVolumeRow(): skipping volume: invalid DriveLetter\",\n      { o }\n    )\n    return\n  }\n  const notOkStatus = compact([\n    toDefinedAndNotEql(o.HealthStatus, \"healthy\"),\n    toDefinedAndNotEql(o.OperationalStatus, \"OK\")\n  ]).join(\"; \")\n  const ok =\n    o.Size != null &&\n    o.SizeRemaining != null &&\n    notBlank(o.DriveLetter) &&\n    blank(notOkStatus)\n  return logger().tap({\n    msg: \"parseGetVolumeRow()\",\n    result: {\n      mountpoint,\n      filesystem: o.FileSystem,\n      label: o.FileSystemLabel,\n      uuid: uniqueId2uuid(o.UniqueId),\n      size: o.Size,\n      used: o.Size - o.SizeRemaining,\n      available: o.SizeRemaining,\n      remote: false, // Get-Volume only returns local drives.\n      ok,\n      status: notOkStatus\n    },\n    meta: { input: o }\n  })\n}\n\nexport async function volumeInfoWin(): Promise<Volume[]> {\n  // Windows can sometimes get confused and map the same network drive to both\n  // f:\\ and F:\\\n  const driveLetters = uniq(\n    toA(await mountpointsWin()).map(normalizeDriveLetter)\n  )\n\n  // We ask for each drive letter separately to parallelize the requests.\n  const psDrivesJson = await mapAsync({\n    name: \"volumeInfoWin.psDrivesJson\",\n    arr: driveLetters,\n    f: drive =>\n      PowerShell.instance()\n        .executeJsonToA(getPsDriveCommand(drive))\n        .catch(error => {\n          onError(\"volumeInfoWin(): Get-PSDrive failed for drive \" + drive, {\n            error\n          })\n          return []\n        }),\n    maxConcurrent: Settings.powerShellProcs.valueOrDefault,\n    timeoutMs: commandTimeoutMs()\n  })\n\n  const psDriveVols = compact(flatten(psDrivesJson).map(parseGetPsDriveRow))\n\n  // NOTE: Get-Volume doesn't return network drives or virtual drives\n\n  const getVolumesJson = await mapAsync({\n    name: \"volumeInfoWin.volumesJson\",\n    arr: driveLetters,\n    f: drive =>\n      PowerShell.instance()\n        .executeJsonToA(getVolumeCommand(drive))\n        .catch(err => {\n          logger().debug(\n            \"volumeInfoWin(): Get-Volume failed for drive \" + drive,\n            err\n          )\n          return []\n        }),\n    maxConcurrent: Settings.powerShellProcs.valueOrDefault,\n    timeoutMs: commandTimeoutMs()\n  })\n\n  const getVolumesVols = compact(flatten(getVolumesJson).map(parseGetVolumeRow))\n\n  // Don't include any mountpoints that are unhealthy:\n  const unhealthy = uniq(\n    [...psDriveVols, ...getVolumesVols]\n      .filter(ea => ea.ok === false)\n      .map(ea => ea.mountpoint)\n  )\n\n  const healthyMountpoints = sort(\n    uniq([...psDriveVols, ...getVolumesVols].map(ea => ea.mountpoint)).filter(\n      ea => !unhealthy.includes(ea)\n    )\n  )\n\n  logger().info(\"volumeInfoWin()\", {\n    psDriveVols,\n    getVolumesVols,\n    healthyMountpoints,\n    unhealthy\n  })\n\n  const vols = healthyMountpoints.map(mountpoint => ({\n    ...psDriveVols.find(ea => mountpoint === ea.mountpoint)!,\n    ...getVolumesVols.find(ea => mountpoint === ea.mountpoint)!\n  })) as Volume[]\n\n  vols.forEach(vol => {\n    const sad = unhealthy.includes(vol.mountpoint)\n    if (sad) vol.ok = false\n    vol.ignorable = vol.ignorable === true || vol.ok === false\n  })\n\n  return vols\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { map } from \"../../fe/Maybe\"\nimport { opt } from \"../../fe/Opt\"\nimport { mkLogger } from \"../Logger\"\nimport { isBillingService } from \"../ServiceNames\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { stripPrefix, stripSuffix } from \"../String\"\nimport { memoizeAsync } from \"../async/MemoizedAsyncFunc\"\nimport { mapAsyncSerial, thenFlatten, thenMap } from \"../async/Promise\"\nimport { thenOrTimeout } from \"../async/ThenOrTimeout\"\nimport { stdoutResult_, stdout_ } from \"../child/ChildProcess\"\nimport { BaseFile } from \"../fs/BaseFile\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { isLinux } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { setupVolumeTTL } from \"./LazyFsAsync\"\nimport { readProcMounts } from \"./MountpointsPosix\"\nimport { commandTimeoutMs, mountpointsTtlMs } from \"./VolumeTtls\"\n\nexport const isGioSupported = lazy(async () => {\n  if (!isLinux || isDocker() || isBillingService()) {\n    return false\n  }\n\n  try {\n    const result = await stdoutResult_(GioCommand, [\"version\"], {\n      timeoutMs: commandTimeoutMs(),\n      ignoreStderr: true\n    })\n    return result.code === 0\n  } catch (err) {\n    return false\n  }\n})\n\nexport const GioCommand = \"gio\"\nexport const GioMountMonitorArgs = [\"mount\", \"--monitor\", \"--anonymous\"]\n\nconst logger = lazy(() => mkLogger(\"volumes.Gio\"))\n\n/**\n * The `gio` subsystem may not be installed, in which case, we have to poll\n * the results of `df`.\n *\n * These volumes won't be in a `df` list.\n */\n// DO NOT USE lazyFsAsync here, as mountpoints() uses this function!\nexport const gioVolumes = lazy(() =>\n  thenOrTimeout(\n    async () => {\n      // We need to find the FUSE mountpoints that gvfs is using:\n      const fuseDirs = await gvfsFuseDirectories()\n      if (isEmpty(fuseDirs)) return []\n\n      logger().info(\"gioVolumes()\", { fuseDirs })\n\n      return mapAsyncSerial({\n        arr: fuseDirs,\n        name: \"gioVolumes\",\n        timeoutMs: mountpointsTtlMs(),\n        f: async dir => {\n          // df doesn't return the correct mountpoint, at least on Ubuntu:\n\n          // $ df -kP '/run/user/1000/gvfs/smb-share:server=mini.local,share=shared%20folder'\n          // Filesystem     1024-blocks     Used Available Capacity Mounted on\n          // gvfsd-fuse       195296444 67824088 127472356      35% /run/user/1000/gvfs\n\n          const vols = await dfPosixRaw({\n            paths: [dir.nativePath]\n          })\n\n          const vol = vols?.[0]\n\n          if (vol == null || !dir.nativePath.startsWith(vol.mountpoint)) {\n            logger().warn(\"df failed to find \" + dir, { vols })\n            return\n          }\n          // fix the mountpoint to be the correct full path:\n          vol.mountpoint = dir.nativePath\n          const remoteInfo = await getRemoteInfo(vol.mountpoint)\n          return remoteInfo == null\n            ? vol\n            : { remote: true, ...vol, ...remoteInfo }\n        }\n      })\n    },\n    mountpointsTtlMs(),\n    () =>\n      logger().warn(\"gioVolumes(): timed out after \" + mountpointsTtlMs + \"ms\"),\n    result =>\n      logger().log(isEmpty(result) ? \"debug\" : \"info\", \"gioVolumes()\", {\n        result\n      })\n  )\n)\n\nlater(() => setupVolumeTTL(gioVolumes))\n\nconst getRemoteInfo = memoizeAsync(\n  async (mountpoint: string) => {\n    try {\n      const lines = (\n        await stdout_(GioCommand, [\"info\", mountpoint], {\n          timeoutMs: commandTimeoutMs()\n        })\n      ).split(/[\\r\\n]+/)\n      const uri = mapNotBlank(\n        lines.find(ea => ea.startsWith(\"uri: \")),\n        ea => new URL(stripPrefix(ea, \"uri: \"))\n      )\n      return {\n        displayName: map(\n          lines.find(ea => ea.startsWith(\"display name: \")),\n          ea => stripPrefix(ea, \"display name: \")\n        ),\n        remoteHost: map(uri, ea => ea.hostname),\n        remoteShare: opt(uri)\n          .flatMap(ea => ea.pathname)\n          .flatMap(ea => stripPrefix(ea, \"/\"))\n          .flatMap(ea => stripSuffix(ea, \"/\"))\n          .flatMap(decodeURIComponent)\n          .filter(notBlank)\n          .get()\n      }\n    } catch (err) {\n      logger().warn(\"getRemoteInfo(): info failed\", { mountpoint, err })\n      return\n    }\n  },\n  {\n    name: \"gio.getRemoteInfo\",\n    maxSize: 255,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n\n// $ grep gvfs /etc/mtab\n// gvfsd-fuse /run/user/1000/gvfs fuse.gvfsd-fuse rw,nosuid,nodev,relatime,user_id=1000,group_id=1000 0 0\n\nasync function gvfsFuseDirectories(): Promise<BaseFile[]> {\n  if (!(await isGioSupported())) {\n    return logger().tap({\n      msg: \"gvfsFuseDirectories(): gio is not supported\",\n      result: []\n    })\n  }\n\n  return logger().tap({\n    msg: \"gvfsFuseDirectories()\",\n    result: await thenFlatten(\n      await thenMap(\n        readProcMounts(\n          undefined,\n          fs => fs === \"gvfsd-fuse\",\n          isReadableDirectory // we want all readable gvfsd-fuse mountpoints\n        ),\n        arr => arr.map(ea => BaseFile.for(ea).clear().childDirectories())\n      )\n    )\n  })\n}\n","import { lazy, MemoizedThunk } from \"../../core/Lazy\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { later } from \"../../fe/Delay\"\nimport { Later } from \"../../fe/Later\"\nimport { time } from \"../async/PromiseTimer\"\nimport { isIgnorableError, isRetriableError } from \"../error/ErrorTypes\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Settings } from \"../settings/Settings\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\n/**\n * lazy-ify `l` with retries\n */\nexport function lazyFsAsync<T>(\n  name: string,\n  l: Later<T>,\n  ttlMs?: number\n): MemoizedThunk<Promise<T>> {\n  const result = lazy(\n    () =>\n      time(\"volumes.\" + name, () =>\n        retryOnReject(l, {\n          maxRetries: 2,\n          timeoutMs: commandTimeoutMs(),\n          errorIsRetriable: err =>\n            isRetriableError(err) !== false && isIgnorableError(err) !== false\n        })\n      ),\n    ttlMs\n  )\n  later(() => {\n    mountpoints.watchLater(() => result.unset())\n    ee().on(\"clearCache\", () => result.unset())\n    if (ttlMs == null) setupVolumeTTL(result)\n  })\n  return result\n}\n\nexport function setupVolumeTTL<T>(l: MemoizedThunk<T>) {\n  l.setTTL(Settings.volumeMetadataTtlMs.valueOrDefault)\n  Settings.volumeMetadataTtlMs.watchLater(ea => l.setTTL(ea))\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { blank, toNotBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte, toInt } from \"../../fe/Number\"\nimport { parseEnvTokens } from \"../EnvTokens\"\nimport { mkLogger } from \"../Logger\"\nimport { assignMissingPrimitives } from \"../Object\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { sortIgnoreCase } from \"../String\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { isDirectorySync } from \"../fs/StatSync\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { DfVolume, Volume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\n// this is LocalVolumes**Linux** because lsblk and blkid are both from the\n// util-linux package.\n\n/*\n * lsblk --json! I LOVE YOU but I can't have you\n$ lsblk --json --output mountpoint,uuid\n{\n   \"blockdevices\": [\n      {\"mountpoint\": \"/snap/vlc/190\", \"uuid\": null},\n      {\"mountpoint\": null, \"uuid\": null},\n      {\"mountpoint\": \"/home/archive\", \"uuid\": \"5bcd3874-036b-4c80-ad00-258d34f5a097\"},\n      {\"mountpoint\": null, \"uuid\": null},\n      {\"mountpoint\": \"/boot/efi\", \"uuid\": \"32BA-03AC\"},\n      {\"mountpoint\": \"/\", \"uuid\": \"45e94248-490a-4224-b067-3ea48bb062e5\"},\n      {\"mountpoint\": \"[SWAP]\", \"uuid\": \"f8fbf87c-3ba3-4618-b733-74dab6f67cf2\"},\n      {\"mountpoint\": \"/home\", \"uuid\": \"bf676327-0a04-42ff-8088-313fad5082f7\"}\n   ]\n}\n\nbecause --json is fairly new (requires 2.27+). SO SAD.\n\nThis works with debian jessie:\n\n$ lsblk -P --output mountpoint,uuid\nMOUNTPOINT=\"/snap/kde-frameworks-5/26\" UUID=\"\"\nMOUNTPOINT=\"/snap/spotify/16\" UUID=\"\"\nMOUNTPOINT=\"/snap/core/4650\" UUID=\"\"\nMOUNTPOINT=\"/snap/inkscape/4019\" UUID=\"\"\nMOUNTPOINT=\"/snap/spotify/13\" UUID=\"\"\nMOUNTPOINT=\"/snap/vlc/365\" UUID=\"\"\nMOUNTPOINT=\"/snap/core/4917\" UUID=\"\"\nMOUNTPOINT=\"/snap/ffmpeg/13\" UUID=\"\"\nMOUNTPOINT=\"/snap/core/4830\" UUID=\"\"\nMOUNTPOINT=\"/snap/vlc/190\" UUID=\"\"\nMOUNTPOINT=\"/snap/docker/179\" UUID=\"\"\nMOUNTPOINT=\"\" UUID=\"\"\nMOUNTPOINT=\"\" UUID=\"fRFzBv-zld2-4ZJR-zbYw-C3sX-K9pI-KjnP1v\"\nMOUNTPOINT=\"/\" LABEL=\"root\" UUID=\"a7713a75-f1d9-4aba-8cdf-028a9339faee\"\n\n */\n\nconst logger = lazy(() => mkLogger(\"volumes.LocalVolumesLinux\"))\n\nexport async function addLocalVolumeInfoLinux(vols: DfVolume[]) {\n  const lsblk = await localVolumes_lsblk_().catch(error =>\n    logger().warn(\"lsblk failed\", { error })\n  )\n  const blkid = await localVolumes_blkid_().catch(error =>\n    logger().warn(\"blkid failed\", { error })\n  )\n  if (lsblk == null && blkid == null) return\n  const mountpoints = sortIgnoreCase(\n    uniq([\n      ...(lsblk ?? []).filter(ea => !ea.ignorable).map(ea => ea.mountpoint),\n      ...vols.map(ea => ea.mountpoint)\n    ])\n  )\n  const result: Volume[] = []\n  for (const mountpoint of mountpoints) {\n    const vol = vols.find(ea => ea.mountpoint === mountpoint)\n    const info = lsblk?.find(ea => ea.mountpoint === mountpoint)\n    const merged = { ...vol, ...info } as Volume\n    const uuid = blkid?.find(ea => ea.filesystem === merged.filesystem)\n    if (uuid != null) assignMissingPrimitives(merged, uuid)\n    if (merged.size == null || merged.available == null) {\n      // this may only be needed within Docker...\n      const df = (\n        await dfPosixRaw({ localsOnly: false, paths: [mountpoint] })\n      )?.[0]\n      logger().info(\"backfilling mountpoint\", { info, vol, df })\n      if (df != null) assignMissingPrimitives(merged, df)\n    }\n    result.push(merged)\n  }\n  return result\n}\n\nconst VersionRe = /lsblk from util-linux ([\\d\\.]+)$/i\n\nconst lsblkVersion = lazy(async () => {\n  const s = await stdout_(\"lsblk\", [\"--version\"], {\n    timeoutMs: ShortCommandTimeoutMs\n  })\n  return VersionRe.exec(s)?.[1]\n    ?.split(\".\")\n    .map(ea => toInt(ea))\n})\n\n// lsblk from ubuntu 18 (bionic), 2.31, doesn't know about fsused and fsavail.\nconst lsblkOutput = lazy(async () => {\n  const cols = [\"mountpoint\", \"label\", \"uuid\"]\n  const v = await lsblkVersion()\n  if (v != null && gte(v[0], 2) && gte(v[1], 34)) {\n    cols.push(\"fsused\", \"fsavail\")\n  }\n  return cols.join(\",\")\n})\n\nexport const localVolumes_lsblk_ = lazyFsAsync(\n  \"localVolumes_lsblk\",\n  async () => {\n    const sout = await stdout_(\n      \"lsblk\",\n      [\"-P\", \"-b\", \"--output\", await lsblkOutput()],\n      {\n        timeoutMs: commandTimeoutMs() // we may need to wait for spinning rust to spin up.\n      }\n    )\n    const result = splitLines(sout)\n      .map(input => parseEnvTokens({ input, lowerCaseKeys: true }))\n      .filter(ea => ea != null)\n      .map(ea => {\n        const ignorable =\n          blank(ea.mountpoint) ||\n          ea.mountpoint.startsWith(\"/snap/\") ||\n          ea.mountpoint === \"/boot\" ||\n          ea.mountpoint.startsWith(\"/boot/\") ||\n          !isDirectorySync(ea.mountpoint) // < docker can bind-mount files. Ignore those.\n\n        const used = toInt(ea.fsused)\n        const available = toInt(ea.fsavail)\n        return {\n          mountpoint: ea.mountpoint,\n          label: ea.label as Maybe<string>,\n          uuid: ea.uuid,\n          ignorable,\n          ...(used != null && available != null\n            ? { used, available, size: used + available }\n            : undefined),\n          // if we're docker, we don't know:\n          ...(!isDocker() ? { remote: false } : undefined)\n        }\n      })\n\n    return logger().tap({\n      msg: \"localVolumes_lsblk\",\n      level: LogLevels.trace,\n      result\n    })\n  },\n  0\n)\n\n/*\n\nfedora HAS TO BE DIFFERENT\n\n$ blkid -o export\n\nDEVNAME=/dev/nvme0n1p5\nUUID=97becbab-9977-45f2-9d8a-8176fda49860\nBLOCK_SIZE=4096\nTYPE=ext4\nPARTUUID=4ed70ef1-bfe5-4049-bec9-e0a73dc764d0\n\nDEVNAME=/dev/nvme0n1p3\nLABEL=Acer\nBLOCK_SIZE=512\nUUID=CC70EE7F70EE6F9E\nTYPE=ntfs\nPARTLABEL=Basic\\ data\\ partition\nPARTUUID=e6666cf5-03dc-440b-b6a0-acc3c909bb93\n\n*/\n\nexport const localVolumes_blkid_ = lazyFsAsync(\n  \"localVolumes_blkid\",\n  async () => {\n    const sout = await stdout_(\"blkid\", [\"-o\", \"export\"], {\n      timeoutMs: commandTimeoutMs() // we may need to wait for spinning rust to spin up.\n    })\n    // these are separated by multiple blank lines:\n    return (\n      sout\n        .split(/\\n\\n+/)\n        .map(input => parseEnvTokens({ input, lowerCaseKeys: false }))\n        // we're going to join on device-name AKA filesystem, so that needs to be a path:\n        .filter(ea => true === ea?.DEVNAME?.includes(\"/\"))\n        .map(ea => ({\n          filesystem: ea.DEVNAME,\n          label: toNotBlank(ea.PARTLABEL) ?? toNotBlank(ea.LABEL),\n          uuid: toNotBlank(ea.PARTUUID) ?? toNotBlank(ea.UUID)\n        }))\n    )\n  },\n  0\n)\n","import { parse } from \"plist\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { thenMap } from \"../../fe/Promise\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { mapAsyncSerial } from \"../async/Promise\"\nimport { thenOrTimeout } from \"../async/ThenOrTimeout\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { DfVolume, Volume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"volumes.LocalVolumesMac\"))\n\nexport async function addLocalVolumeInfoMac(\n  vols: DfVolume[]\n): PromiseMaybe<Volume[]> {\n  return thenMap(mnt2uuidMac(), uuids =>\n    vols.map(vol =>\n      mapOr(\n        uuids.get(vol.mountpoint),\n        info => ({ ...vol, ...info }),\n        () => vol\n      )\n    )\n  )\n}\n\nexport const mnt2uuidMac = lazyFsAsync(\"mnt2uuidMac\", _mnt2uuidMac, 0)\n\nconst diskRE = /^(\\/dev\\/disk\\d+)/\n\nasync function _mnt2uuidMac() {\n  const l = await dfPosixRaw({ localsOnly: true })\n  const diskDevices = uniq(l.map(ea => ea.filesystem?.match(diskRE)?.[1]))\n  const timeoutMs = Math.round(commandTimeoutMs() / 3)\n\n  const stdouts = await mapAsyncSerial({\n    name: \"_mnt2uuidMac()\",\n    arr: diskDevices,\n    f: async dev =>\n      thenOrTimeout(\n        stdout_(\"diskutil\", [\"list\", \"-plist\", dev], {\n          timeoutMs\n        }),\n        timeoutMs,\n        () => logger().warn(\"Timeout: failed to get disk metadata for \" + dev)\n      )\n  })\n\n  const result = new Map<string, Partial<Volume>>()\n\n  for (const out of stdouts) {\n    try {\n      const p = parse(out) as any\n      for (const vols of toA(p.AllDisksAndPartitions)) {\n        for (const vol of toA(vols.APFSVolumes)) {\n          if (!blank(vol.MountPoint) && !isTrue(vol.OSInternal)) {\n            result.set(vol.MountPoint, {\n              filesystem: \"/dev/\" + vol.DeviceIdentifier,\n              label: vol.VolumeName,\n              size: vol.Size,\n              uuid: vol.VolumeUUID\n            })\n          } else {\n            logger().debug(\"skipping\", vol)\n          }\n        }\n      }\n    } catch (err) {\n      logger().warn(\"Failed to parse diskutil output\", { err, out })\n    }\n  }\n  return result\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isEmpty, isNotEmpty } from \"../../fe/Array\"\nimport { sort } from \"../../fe/ArraySort\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { rateLimited } from \"../RateLimited\"\nimport { isSyncService } from \"../ServiceNames\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { includesIgnoreCase } from \"../String\"\nimport { end } from \"../async/Endable\"\nimport { awaitAll, filterAsync } from \"../async/Promise\"\nimport { time } from \"../async/PromiseTimer\"\nimport { stdoutResult_ } from \"../child/ChildProcess\"\nimport { mkBasicWatchedChild } from \"../child/WatchedChild\"\nimport { onError } from \"../error/OnError\"\nimport { broadcastEvent_ } from \"../event/BroadcastEvent\"\nimport { ee } from \"../event/EventEmitter\"\nimport { SimpleFileOrString, toNativePath_ } from \"../fs/SimpleFile\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\nimport { mightBeAssetMountpoint } from \"./AssetMountpoint\"\nimport {\n  GioCommand,\n  GioMountMonitorArgs,\n  gioVolumes,\n  isGioSupported\n} from \"./Gio\"\nimport { maybeWatchProcMounts, mountpointsPosix } from \"./MountpointsPosix\"\nimport { mountpointsWin } from \"./MountpointsWin\"\nimport { isExcludedMountpoint } from \"./PosixVolumes\"\nimport {\n  commandTimeoutMs,\n  mountpointsTtlMs,\n  volumeMetadataTtlMs\n} from \"./VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"volumes.Mountpoints\"))\n\nfunction unsetMountpoints() {\n  mountpoints.unset()\n  mountpoints_.unset()\n}\n\nfunction setMountpointsTTL(ttl: number = mountpointsTtlMs()) {\n  mountpoints.setTTL(ttl)\n  mountpoints_.setTTL(ttl)\n}\n\nexport const localMountpointSetup = lazy(async () => {\n  // These may be excluded paths:\n  Settings.libraryDir.watchLater(unsetMountpoints)\n  Settings.scanPaths.watchLater(unsetMountpoints)\n\n  // Only do mountpoint monitoring by sync (which cares)\n  if (isSyncService()) {\n    later(async () => {\n      const log = mkLogger(\"Mountpoints.localMountpointSetup()\")\n      if (isMac) {\n        log.info(\"Setting up Mac diskutil activity watcher\")\n        setMountpointsTTL(volumeMetadataTtlMs())\n        diskUtilActivity()\n      }\n      if (isLinux) {\n        await maybeWatchProcMounts()\n        if (await isGioSupported()) {\n          log.info(\"Setting up Linux gio mount monitor\")\n          setMountpointsTTL(volumeMetadataTtlMs())\n          gioMountMonitor()\n        }\n        if (await isFindmntSupported()) {\n          log.info(\"Setting up Linux findmnt mount monitor\")\n          setMountpointsTTL(volumeMetadataTtlMs())\n          findmntPoll()\n        }\n      }\n    }, 30 * secondMs) // let startup go faster. Mountpoint monitoring can wait.\n  } else {\n    await awaitAll([\n      end(diskUtilActivity.clear()),\n      end(gioMountMonitor.clear()),\n      end(findmntPoll.clear())\n    ])\n  }\n})\n\nasync function onMountpointsChanged() {\n  unsetMountpoints()\n  if (isSyncService()) {\n    await broadcastEvent_(\"mountpointsChanged\")\n  }\n}\n\n// Stores the last successful mountpoints() call. No TTL needed.\nconst priorMountpoints = lazy<Maybe<string[]>>(() => undefined)\n\nfunction mountpointsImpl() {\n  return time(\"volumes.Mountpoints\", isWin ? mountpointsWin : mountpointsPosix)\n}\n\nexport const mountpoints_ = lazy(async () => {\n  {\n    const arr = Settings.mountpoints.values\n    if (isNotEmpty(arr)) {\n      return arr\n    }\n  }\n  const arr = await thenOrTimeoutError(mountpointsImpl(), ShortCommandTimeoutMs)\n  if (isEmpty(arr)) {\n    return logger().throw(\"mountpointsImpl() returned empty.\", { fatal: false })\n  } else {\n    const result = sort(\n      await filterAsync({\n        arr,\n        name: \"mountpointFilter\",\n        timeoutMs: commandTimeoutMs(),\n        f: async ea => {\n          if (!mightBeAssetMountpoint(ea) && isExcludedMountpoint(ea))\n            return false\n          if (Settings.validateMountpoints.valueOrDefault) {\n            if (!(await isReadableDirectory(ea))) {\n              logger().warn(`mountpoint ${ea} is not readable`)\n              return false\n            }\n          }\n          return true\n        }\n      })\n    )\n    priorMountpoints.set(result)\n    return result\n  }\n})\n\nexport const mountpoints = lazy(async () => {\n  try {\n    return await mountpoints_()\n  } catch (cause) {\n    onError(\"mountpoints() failed\", { cause })\n    return priorMountpoints()\n  }\n})\n\nexport async function isPosixMountpoint(\n  d: SimpleFileOrString\n): Promise<boolean> {\n  if (isWin) return false\n  const arr = (await mountpoints()) ?? []\n  const np = toNativePath_(d)\n  return isMac // case insensitive, YAY\n    ? includesIgnoreCase(arr, np)\n    : arr.includes(np)\n}\n\n// we don't delete the priorMountpoints because that's a safety backstop\nlater(\n  () => {\n    ee().on(\"clearCache\", () => {\n      gioVolumes.unset()\n      unsetMountpoints()\n    })\n    Settings.mountpointsTtlMs.watch(setMountpointsTTL)\n  },\n  isTest ? 1 : minuteMs // < wait until settings have been read\n)\n\n/**\n * Provides near-real-time updates when volumes change on macs:\n */\nexport const diskUtilActivity = lazy(() =>\n  mkBasicWatchedChild({\n    cmd: \"diskutil\",\n    args: [\"activity\"],\n    onStdout: rateLimited({\n      name: \"diskUtilActivity\",\n      f: () => onMountpointsChanged(),\n      minCallDelayMs: 1.5 * secondMs\n    })\n  })\n)\n\nexport const gioMountMonitor = lazy(() =>\n  mkBasicWatchedChild({\n    cmd: GioCommand,\n    args: GioMountMonitorArgs,\n    onStdout: rateLimited({\n      name: \"gioMountMonitor\",\n      f: () => {\n        gioVolumes.unset()\n        return onMountpointsChanged()\n      },\n      minCallDelayMs: ShortCommandTimeoutMs\n    })\n  })\n)\n\nconst isFindmntSupported = lazy(async () => {\n  if (!isLinux) return false\n  try {\n    const result = await stdoutResult_(\"findmnt\", [\"--version\"], {\n      timeoutMs: commandTimeoutMs(),\n      ignoreStderr: true\n    })\n    return result.code === 0\n  } catch (err) {\n    return false\n  }\n})\n\nexport const findmntPoll = lazy(() =>\n  mkBasicWatchedChild({\n    cmd: \"findmnt\",\n    args: [\"--poll\"],\n    onStdout: rateLimited({\n      name: \"findmntPoll\",\n      f: () => onMountpointsChanged(),\n      minCallDelayMs: ShortCommandTimeoutMs\n    })\n  })\n)\n","import { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { allNotBlank } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { isSyncService } from \"../ServiceNames\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { unoctal } from \"../String\"\nimport { filterAsync, thenMap } from \"../async/Promise\"\nimport { FsWatcher } from \"../fs/FsWatcher\"\nimport { readLines_ } from \"../fs/ReadLines\"\nimport { isEmptyFile, isReadableDirectory } from \"../fs/Stat\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isLinux } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { gioVolumes, isGioSupported } from \"./Gio\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { isExcludedMountpoint } from \"./PosixVolumes\"\n\nconst logger = lazy(() => mkLogger(\"volumes.MountpointsPosix\"))\n\nexport async function mountpointsPosix() {\n  const result =\n    (await readProcMounts()) ??\n    (await thenMap(dfPosixRaw({ localsOnly: false }), vols =>\n      vols.map(vol => vol.mountpoint)\n    ))\n  if (result != null && (await isGioSupported())) {\n    try {\n      await thenMap(gioVolumes(), gioVols =>\n        result.push(...gioVols.map(ea => ea.mountpoint))\n      )\n    } catch (err) {\n      // may fail due to timeouts. It's better to have *some* volumes than crash:\n      logger().warn(\"Failed to fetch gio volumes\", err)\n    }\n  }\n  // HEY FUTURE ME: mountpoints() does filtering for us.\n  return result\n}\n\nconst ProcMounts = \"/proc/mounts\"\n\nexport function defaultFilesystemTypePredicate(fsType: string) {\n  return !Settings.excludedFilesystemTypes.has(fsType)\n}\n\nfunction defaultMountpointPredicate(mountpoint: string): SyncOrAsync<boolean> {\n  return (\n    !isExcludedMountpoint(mountpoint) &&\n    (Settings.validateMountpoints.valueOrDefault\n      ? isReadableDirectory(mountpoint)\n      : true)\n  )\n}\n\nexport async function readProcMounts(\n  procMounts = ProcMounts,\n  filesystemTypePredicate = defaultFilesystemTypePredicate,\n  mountpointPredicate = defaultMountpointPredicate\n): PromiseMaybe<string[]> {\n  if (!isLinux) return\n  try {\n    const lines = await readLines_(procMounts)\n    const tokens = compact(\n      lines.map(line => {\n        // this whitespace split is safe because linux will escape whitespace with octals:\n        const [fs, mp] = line.split(/\\s+/)\n        return allNotBlank(fs, mp)\n          ? ([fs, unoctal(mp)] as [string, string])\n          : undefined\n      })\n    )\n    const result = await filterAsync({\n      name: \"mountpoints filter\",\n      arr: tokens,\n      f: async ([fs, mp]) => {\n        const fsOK = filesystemTypePredicate(fs)\n        const mpOK = await mountpointPredicate(mp)\n        return logger().tap({\n          level: LogLevels.trace,\n          msg: \"readProcMounts().predicate filters\",\n          result: fsOK && mpOK,\n          meta: { fs, mp, fsOK, mpOK }\n        })\n      }\n    })\n\n    return logger().tap({\n      msg: \"readProcMounts()\",\n      result: result.map(([, ea]) => ea),\n      meta: {\n        procMounts\n      }\n    })\n  } catch (error) {\n    logger().info(\"Failed to read /proc/mount\", error)\n    return\n  }\n}\n\nexport const maybeWatchProcMounts = lazy(async () =>\n  !isLinux || !isSyncService() || (await isEmptyFile(ProcMounts))\n    ? undefined\n    : new FsWatcher({\n        target: ProcMounts,\n        maxPollIntervalMs: minuteMs,\n        onChange: () => {\n          logger().info(\"detected change in \" + ProcMounts)\n          mountpoints.unset()\n        },\n        initialDelayMs: ShortCommandTimeoutMs,\n        sha: true\n      })\n)\n","import { lazy } from \"../../core/Lazy\"\nimport { secondMs } from \"../../fe/Date\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { sortIgnoreCase } from \"../String\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { fsutil } from \"../fs/PathTo\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\n\nconst logger = lazy(() => mkLogger(\"volumes.MountpointsWin\"))\n\n// we really do want to lazy() this: it's used both by mountpoints() and dfWin()\nexport const mountpointsWin = lazy(async () => {\n  try {\n    // powershell should be easier on the system, as it doesn't involve a fork\n    return await thenOrTimeoutError(mountpointsWinPwsh(), ShortCommandTimeoutMs)\n  } catch (error) {\n    logger().warn(\"mountpointsWinPwsh()\", { error })\n    return mountpointsWinFsutil()\n  }\n})\n\nexport async function mountpointsWinPwsh() {\n  // Note that Get-PSDrive can be quite slow if you don't specificy just the\n  // Root -Property, but seems to be quick (~10ms) when asking just for Root.\n  const arr = await PowerShell.instance().executeJsonToA(\n    \"Get-PSDrive -PSProvider FileSystem | Select-Object -Property Root\"\n  )\n  // [{\"Root\":\"C:\\\\\"},{\"Root\":\"D:\\\\\"},{\"Root\":\"Q:\\\\\"},{\"Root\":\"R:\\\\\"}]\n  return arr == null\n    ? undefined\n    : sortIgnoreCase(arr.map(ea => ea.Root as string))\n}\n\nconst driveletterRe = /\\s([A-Z]:\\\\)/g\n\n/**\n * fsutil-based list of all currently active drive letters\n *\n * @return [\"C:\\\", \"D:\\\", ...]\n */\nexport async function mountpointsWinFsutil() {\n  // Note that `fsutil fsinfo drives` seems to be about an order of magnitude\n  // faster than ` wmic logicaldisk get caption`.\n\n  // Example output: Drives: C:\\ H:\\ I:\\\"\"\n  const sout = await stdout_(fsutil(), [\"fsinfo\", \"drives\"], {\n    timeoutMs: 10 * secondMs\n  })\n  const result: string[] = []\n  let match: RegExpExecArray | null\n  while ((match = driveletterRe.exec(sout)) !== null) {\n    result.push(match[1])\n  }\n  return sortIgnoreCase(result)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { mkLogger } from \"../Logger\"\nimport { memoize } from \"../MemoizedFunc\"\nimport { isTest } from \"../NodeEnv\"\nimport { toPathnames } from \"../fs/Path\"\nimport { isLinux, isPosix, isWin } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"volumes.PosixVolumes\"))\n\n// https://www.pathname.com/fhs/pub/fhs-2.3.html\n\n// NOTE: DO NOT EXCLUDE \"/dev/mapper/ubuntu--vg-root\", that may be the root (and\n// only!) filesystem\n\n// rootfs             8064632   738996    7325636      10% /\n// devtmpfs           8064644        0    8064644       0% /dev\n// tmpfs              8139340        0    8139340       0% /dev/shm\n// cgroup_root           8192        0       8192       0% /sys/fs/cgroup\n// tmpfs               131072      236     130836       1% /var/log\n// /dev/sda1         15000224   257824   14742400       2% /boot\n// overlay            8064632   738996    7325636      10% /lib/modules\n// overlay            8064632   738996    7325636      10% /lib/firmware\n// tmpfs                 1024        0       1024       0% /mnt/disks\n// tmpfs                 1024        0       1024       0% /mnt/remotes\n// /dev/md1        9764349900 68111704 9696238196       1% /mnt/disk1\n// /dev/sdc1        244197560 22023600  222164096      10% /mnt/cache\n// shfs            9764349900 68111704 9696238196       1% /mnt/user0\n// shfs            9764349900 68111704 9696238196       1% /mnt/user\n// /dev/loop2        20971520     3960   20429576       1% /var/lib/docker\n// /dev/loop3         1048576     3852     926164       1% /etc/libvirt\n\n// Filesystem              1024-blocks       Used  Available Capacity Mounted on\n// udev                       32857360          0   32857360       0% /dev\n// tmpfs                       6584180       4908    6579272       1% /run\n// /dev/nvme0n1p2            479152840  321307948  133435500      71% /\n// tmpfs                      32920884     212868   32708016       1% /dev/shm\n// tmpfs                          5120          4       5116       1% /run/lock\n// tmpfs                      32920884          0   32920884       0% /sys/fs/cgroup\n// /dev/loop1                    56832      56832          0     100% /snap/core18/2066\n// /dev/loop2                    56832      56832          0     100% /snap/core18/2074\n// /dev/loop3                   101760     101760          0     100% /snap/core/11316\n// /dev/loop4                    66688      66688          0     100% /snap/gtk-common-themes/1515\n// /dev/nvme1n1              960381672  786958628  124568532      87% /mnt/c24fdf53-fc92-43ae-a1a5-9342d067b4a5\n// /dev/loop5                    52352      52352          0     100% /snap/snap-store/518\n// /dev/loop0                   101760     101760          0     100% /snap/core/11187\n// /dev/loop6                    66432      66432          0     100% /snap/gtk-common-themes/1514\n// /dev/loop8                   166784     166784          0     100% /snap/gnome-3-28-1804/145\n// /dev/loop9                   183936     183936          0     100% /snap/spotify/46\n// /dev/loop10                  259200     259200          0     100% /snap/dbeaver-ce/136\n// /dev/loop11                  224256     224256          0     100% /snap/gnome-3-34-1804/72\n// /dev/loop12                   89344      89344          0     100% /snap/sqlitebrowser/3233\n// /dev/loop13                   33152      33152          0     100% /snap/snapd/12159\n// /dev/loop14                   52224      52224          0     100% /snap/snap-store/547\n// /dev/loop15                  224256     224256          0     100% /snap/gnome-3-34-1804/66\n// /dev/loop16                  183808     183808          0     100% /snap/spotify/45\n// /dev/loop17                   33152      33152          0     100% /snap/snapd/12398\n// /dev/nvme0n1p1               523248       8036     515212       2% /boot/efi\n// 10.1.1.9:/volume1/homes  7496824320 4121892736 3374931584      55% /rusty2-homes-nfs\n// //10.1.1.9/homes         7496824260 4121892788 3374931472      55% /media/mrm/rusty2-home\n// //10.1.1.7/homes         5809423160 4979412148  830011012      86% /media/mrm/rusty-home\n// tmpfs                       6584176          8    6584168       1% /run/user/1002\n// tmpfs                       6584176         20    6584156       1% /run/user/125\n// tmpfs                       6584176       1528    6582648       1% /run/user/1000\n// /dev/loop18                  168832     168832          0     100% /snap/gnome-3-28-1804/161\n// /dev/loop19                  259200     259200          0     100% /snap/dbeaver-ce/137\n\nexport function isExcludedFilesystem(filesystem: string) {\n  if (blank(filesystem)) return false\n  return isPosix && Settings.excludedFilesystemTypes.values.includes(filesystem)\n}\n\nconst LinuxDevMapperRE =\n  isLinux || isTest ? /^\\/dev(?!\\/mapper)(?:\\/|\\/?$)/i : undefined\n\nconst LinuxVarSnapRE = isLinux || isTest ? /^\\/var\\/snap(?:$|\\/)/ : undefined\n\nconst LinuxRunUserGVFSRE =\n  isLinux || isTest ? /^\\/run\\/user\\/\\d+\\/gvfs\\/.+?$/i : undefined\n\nconst LinuxDockerRE = isLinux || isTest ? /^\\/var\\/lib\\// : undefined\n\n// Avoid stuff like\n\n// mrm@m1 % mount | grep /System\n// /dev/disk3s6 on /System/Volumes/VM (apfs, local, noexec, journaled, noatime, nobrowse)\n// /dev/disk3s2 on /System/Volumes/Preboot (apfs, local, journaled, nobrowse)\n// /dev/disk3s4 on /System/Volumes/Update (apfs, local, journaled, nobrowse)\n// /dev/disk1s2 on /System/Volumes/xarts (apfs, local, noexec, journaled, noatime, nobrowse)\n// /dev/disk1s1 on /System/Volumes/iSCPreboot (apfs, local, journaled, nobrowse)\n// /dev/disk1s3 on /System/Volumes/Hardware (apfs, local, journaled, nobrowse)\n// /dev/disk3s1 on /System/Volumes/Data (apfs, local, journaled, nobrowse, protect)\n// map auto_home on /System/Volumes/Data/home (autofs, automounted, nobrowse)\n\n// mrm@mini ~ % mount | grep System\n// /dev/disk6s4 on /System/Volumes/VM (apfs, local, noexec, journaled, noatime, nobrowse)\n// /dev/disk6s2 on /System/Volumes/Preboot (apfs, local, journaled, nobrowse)\n// /dev/disk6s6 on /System/Volumes/Update (apfs, local, journaled, nobrowse)\n// /dev/disk6s1 on /System/Volumes/Data (apfs, local, journaled, nobrowse)\n// map auto_home on /System/Volumes/Data/home (autofs, automounted, nobrowse)\n\n// DO NOT AVOID \"/System/Volumes/Data\": that's where people's home dir is!\n\n// (memoized mostly to avoid all the duplicate log messages)\nexport const isExcludedMountpoint = memoize(\n  (mountpoint: Maybe<string>) => {\n    if (isWin) return false // no excluded drive letters\n    const why = whyExcludedMountpoint(mountpoint)\n    return logger().tap({\n      msg: \"isExcludedMountpoint\",\n      result: why != null,\n      meta: { mountpoint, why }\n    })\n  },\n  { maxSize: 512 }\n)\n\nexport function whyExcludedMountpoint(\n  mountpoint: Maybe<string>\n): Maybe<string> {\n  if (blank(mountpoint)) {\n    return \"blank\"\n  }\n  const arr = toPathnames(mountpoint)\n  const root = arr[0]\n  const basename = arr[arr.length - 1]\n  if (Settings.excludedRootDirectories.has(root)) {\n    return \"ExcludedRootDirectory\"\n  }\n  if (Settings.excludedMountpointPaths.has(mountpoint)) {\n    return \"excludedMountpointPaths\"\n  }\n  if (Settings.excludedMountpointBasenames.has(basename)) {\n    return \"excludedMountpointBasenames\"\n  }\n  if (LinuxDevMapperRE?.test(mountpoint) === true) {\n    return \"LinuxDevMapperRE\"\n  }\n  if (LinuxVarSnapRE?.test(mountpoint) === true) {\n    return \"LinuxVarSnapRE\"\n  }\n  if (root === \"run\" && LinuxRunUserGVFSRE?.test(mountpoint) === false) {\n    return \"LinuxRunRE\"\n  }\n  if (LinuxDockerRE?.test(mountpoint) === true) {\n    return \"LinuxDockerRE\"\n  }\n  return\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { RemoteVolume, Volume } from \"./Volume\"\n\n/* \n\non mac el capitan for SMB/CIFS:\n\n//mrm@rusty2._afpovertcp._tcp.local/home  7496824260 4120551220 3376273040    55%    /Volumes/home\n//GUEST:@unraid._smb._tcp.local/system    9764349900   68111664 9696238236     1%    /Volumes/system\n\n//mrm@rusty._smb._tcp.local/homes ...\n//mrm@rusty.local/photos ...\n//mrm@rusty/web ...\n\non ubuntu 18:\n\n//10.1.1.7/homes ...\n\nWith NFS:\n\n10.1.1.9:/volume1/homes\n\n192.168.1.10:/opt/Media ...\n\n*/\n\nconst smbRe =\n  /^\\/\\/(?:.+@)?(.+?)(?:\\._(?:smb|afs|nfs|tcp|afpovertcp)){0,2}(\\.local)?\\/(.+)$/i\n\n// should also handle sshfs:\nexport const nfsRe = /^([^:\\s]+):(\\/.*)$/\n\nexport function addRemoteVolumeInfoPosix(volumes: Volume[]): Volume[] {\n  for (const vol of volumes) {\n    if (vol.remote === true) {\n      const result = parseRemote(vol.filesystem)\n      if (result != null) {\n        vol.remoteHost = result.remoteHost\n        vol.remoteShare = result.remoteShare\n      }\n    }\n  }\n  return volumes\n}\n\nexport function parseRemote(filesystem: Maybe<string>): Maybe<RemoteVolume> {\n  if (blank(filesystem)) return\n  const smb = smbRe.exec(filesystem)\n  if (smb != null) {\n    const remoteHost = smb[1] + toS(smb[2])\n    const remoteShare = smb[3]\n    if (!blank(remoteHost) && !blank(remoteShare)) {\n      return {\n        remoteHost,\n        remoteShare\n      }\n    }\n  }\n  const nfs = nfsRe.exec(filesystem)\n  if (nfs != null) {\n    const remoteHost = nfs[1]\n    const remoteShare = nfs[2]\n    if (!blank(remoteHost) && !blank(remoteShare)) {\n      return {\n        remoteHost,\n        remoteShare\n      }\n    }\n  }\n  return\n}\n","import { compact } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { secondMs } from \"../../fe/Date\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { opt } from \"../../fe/Opt\"\nimport { toS } from \"../../fe/toS\"\nimport { thenMap } from \"../async/Promise\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { parseFixed } from \"../Fixed\"\nimport { wmic } from \"../fs/PathTo\"\nimport { toMap } from \"../Map\"\nimport { Try } from \"../Object\"\nimport { isWin } from \"../platform/Platform\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\nimport { ensureSuffix } from \"../String\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { Volume } from \"./Volume\"\n\n/*\n$ wmic netuse get LocalName, RemoteName, COnnectionState, Status\nConnectionState  LocalName  RemoteName        Status\nConnected        H:         \\\\10.1.1.7\\homes  OK\nDisconnected     I:         \\\\10.1.1.3\\mrm    Unavailable\n*/\n\nexport async function addRemoteVolumeInfoWin(\n  volumes: Volume[],\n  netInfos?: NetInfo[]\n): Promise<Volume[]> {\n  if (!isWin) throw new Error(\"wtf\")\n  await thenMap(\n    orElse<NetInfo[] | PromiseMaybe<NetInfo[]>>(netInfos, () => netInfoWin()),\n    arr => {\n      const m = toMap(arr, ea => [ea.mountpoint, ea])\n      volumes.forEach(vol => {\n        map(m.get(vol.mountpoint), netInfo => {\n          vol.remote = true\n          vol.remoteHost = netInfo.host\n          vol.remoteShare = netInfo.share\n          vol.ok = netInfo.ok\n        })\n      })\n    }\n  )\n  return volumes\n}\n\nconst columns = [\"LocalName\", \"RemoteName\", \"Status\"]\nconst netuseCmd = [\"NETUSE\", \"get\", columns.join(\",\")]\n\nexport interface NetInfo {\n  /** \"H:\\\" */\n  mountpoint: string\n  /** probably the IP address of the remote share */\n  host: string\n  /** the name of the share */\n  share: string\n  /** true if the Status of the share is \"OK\" */\n  ok: boolean\n}\n\nconst UNC_RE = /^\\\\\\\\(.+?)\\\\(.+)$/\nconst driveLetterRE = /^[a-z]:\\\\?$/i\n\nexport const NetInfoCmd = `Get-WmiObject Win32_NetworkConnection | Select-Object -Property LocalName,RemoteName,ConnectionState,Status`\n\nasync function _netInfoWin(): Promise<NetInfo[]> {\n  const result = await PowerShell.instance().executeJsonToA(NetInfoCmd)\n  return result == null\n    ? _netInfoWinWmic()\n    : compact(\n        result\n          .filter((ea: any) => notBlank(ea.LocalName)) // can't do anything if we don't have a localname.\n          .map((ea: any) =>\n            map(parseRemoteName(ea.RemoteName), ({ host, share }) =>\n              map(driveLetterRE.exec(toS(ea.LocalName)), driveLetter => ({\n                mountpoint: ensureSuffix(driveLetter[0], \"\\\\\"),\n                host,\n                share,\n                ok: ea.Status === \"OK\" && ea.ConnectionState === \"Connected\"\n              }))\n            )\n          )\n      )\n}\n\nexport function parseRemoteName(\n  remoteName: string\n): Maybe<{ host: string; share: string }> {\n  if (blank(remoteName)) return\n\n  return opt(remoteName)\n    .flatMap(ea => UNC_RE.exec(ea))\n    .map(ea => ({\n      host: ea[1],\n      share: ea[2]\n    }))\n    .orElse(() =>\n      opt(remoteName)\n        .flatMap(url => Try(() => new URL(url)))\n        .filter(url => notBlank(url.hostname))\n        .map(url => ({\n          host: url.hostname,\n          share: opt(url.pathname)\n            .filter(notBlank)\n            .getOrElse(() => \"/\")\n        }))\n    )\n    .get()\n}\n\nexport async function _netInfoWinWmic(): Promise<NetInfo[]> {\n  const cmd = wmic()\n  const sout = await stdout_(cmd, netuseCmd, { timeoutMs: 15 * secondMs })\n  const parsed = parseFixed(columns, sout)\n  return compact(\n    parsed.map((ea: any) =>\n      map(UNC_RE.exec(toS(ea.RemoteName)), remoteName =>\n        map(driveLetterRE.exec(toS(ea.LocalName)), driveLetter => ({\n          mountpoint: ensureSuffix(driveLetter[0], \"\\\\\"),\n          host: remoteName[1],\n          share: remoteName[2],\n          ok: ea.Status === \"OK\"\n        }))\n      )\n    )\n  )\n}\n\nconst cacheForever = 0\nconst netInfoWin = lazyFsAsync(\"netInfoWin\", _netInfoWin, cacheForever)\n","import { secondMs } from \"../../fe/Date\"\nimport { MiB } from \"../../fe/Units\"\nimport { Settings } from \"../settings/Settings\"\n\n/**\n * This needs to be short enough to pick up when drives are inserted or\n * ejected in reasonable-ish time, but not so often it breaks the OS\n */\nexport function mountpointsTtlMs() {\n  return Settings.mountpointsTtlMs.valueOrDefault\n}\n\n/**\n * Update frequently enough to detect substantive changes in available bytes\n */\nexport function volumeMetadataTtlMs() {\n  return Settings.volumeMetadataTtlMs.valueOrDefault\n}\n\n// TODO: MOVE to .. (this isn't a volume-specific thing!)\n/**\n * How long the `df` or `wmic` should be allowed to run before timing out.\n * Note that external hard drives can take longer than 10 seconds to spin\n * up...\n */\nexport function commandTimeoutMs() {\n  return Settings.commandTimeoutMs.valueOrDefault\n}\n\n/**\n * The worst-expected transfer rate for file I/O:\n */\nexport const MinIoRate = MiB / secondMs\n","import { basename } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { isFalse, isTrue } from \"../../fe/Boolean\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { thenOrOnTimeout, thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { FifoCacheAsync } from \"../FifoCacheAsync\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { isWorkerService } from \"../ServiceNames\"\nimport { stripComments } from \"../String\"\nimport { withBoundedConcurrency } from \"../async/Promises\"\nimport { ee } from \"../event/EventEmitter\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { Volume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\nimport { writeVolumeUuid } from \"./WriteVolumeUuid\"\n\nconst logger = lazy(() => mkLogger(\"volumes.VolumeUUID\"))\n\n// This isn't a TTLMap because we don't expect to have bajillions of\n// mountpoints, they don't expire, and we force-clear it whenever mountpoints\n// change.\nconst cache = lazy(\n  () =>\n    new FifoCacheAsync<Maybe<string>>({\n      name: \"volumes.VolumeUUID\",\n      maxSize: 500,\n      timeoutMs: commandTimeoutMs(),\n      writeFsCache: !isWorkerService(),\n      readFsCache: true\n    })\n)\n\nlater(() => {\n  ee().on(\"clearCache\", () => cache.clear())\n  mountpoints.watchLater(() => cache.clear())\n})\n\nexport async function addVolumeUUIDs(vols: Volume[]): Promise<void> {\n  await withBoundedConcurrency({\n    name: \"addVolumeUUIDs\",\n    laters: vols.map(\n      ea => () =>\n        thenOrOnTimeout(addVolumeUUID(ea), commandTimeoutMs(), () =>\n          logger().warn(\"addVolumeUUIDs(\" + ea.mountpoint + \") timed out\", {\n            timeoutMs: commandTimeoutMs()\n          })\n        )\n    )\n  })\n}\n\nexport function volumeUuidNotExpected(v: Volume) {\n  return (\n    isTrue(v.ignorable) ||\n    (isDocker() && v.mountpoint === \"/\") ||\n    (isTest && basename(v.mountpoint) === \"node_modules\")\n  )\n}\n\n/**\n * Prefer the UUID stored on the mountpoint/.uuid.\n *\n * If that cannot be read, use the UUID already on the volume.\n *\n * If that is missing/timesout, use the last-set UUID for that volume, stored in\n * APP_DATA/mountpoint-uuids.json\n */\nasync function addVolumeUUID(v: Volume): Promise<void> {\n  if (volumeUuidNotExpected(v)) {\n    // Don't bother reading the .uuid.\n    return\n  }\n\n  if (isFalse(v.ok)) {\n    // We don't want to touch this filesystem, it may hang!\n    return\n  }\n\n  const uuid = await cache().getOrSetAsync(v.mountpoint, async () =>\n    readVolumeUUID(v)\n  )\n  if (uuid != null) v.uuid = uuid\n}\n\nexport function toVolumeUUID(s: Maybe<string>): Maybe<string> {\n  if (blank(s)) return\n  const clean = stripComments(s)\n    .replace(/[^0-9a-z-]+/gi, \"\")\n    .trim()\n    .replace(/^-|-$/g, \"\")\n  // reject 000-00000-00000\n  return clean.length <= 8 || /^[0-]*$/i.test(clean) || /^[F-]*$/i.test(clean)\n    ? undefined\n    : clean\n}\n\nexport async function readUuidFile_(file: PosixFile) {\n  const buf = await thenOrTimeoutError(file.readTextFile_(), commandTimeoutMs())\n  // return the first line, stripped of comments, that contains something uuid-esque:\n  for (const line of splitLines(buf)) {\n    const result = toVolumeUUID(line)\n    if (result != null) return result\n  }\n  throw new Error(\"No UUID found in \" + file)\n}\n\n/**\n * If the vol UUID file exists, use that instead of the device UUID.\n */\nexport async function readVolumeUUID(v: Volume): PromiseMaybe<string> {\n  // TODO: if we can't find a .uuid in the mountpoint, should we look at a, then\n  // b, then c for a .uuid for `mountpoint/a/b/c/file.jpg`?\n\n  if (Settings.readVolumeUuidFiles.valueOrDefault) {\n    for (const subpath of Settings.volumeUuidFilePaths.values) {\n      const volUuidFile = PosixFile.for(v.mountpoint).join(subpath)\n\n      const savedUUID = await readUuidFile_(volUuidFile).catch(error =>\n        logger().info(\"Failed to read \" + volUuidFile, { error })\n      )\n      if (savedUUID != null) {\n        return logger().tap({\n          msg: \"Serving UUID from \" + subpath,\n          result: savedUUID,\n          meta: {\n            mountpoint: v.mountpoint\n          }\n        })\n      }\n    }\n  }\n\n  // Don't try to write to the root directory:\n  if (v.mountpoint === \"/\") return v.uuid\n\n  if (Settings.writeVolumeUuidFiles.valueOrDefault) {\n    const uuid = await writeVolumeUuid(v)\n    if (uuid != null) return uuid\n  }\n\n  // Only return the hardware uuid if we couldn't persist the safeUUID for later\n  return v.uuid\n}\n","import _os from \"os\"\nimport _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport {\n  commonPrefixLength,\n  compact,\n  compactBlanks,\n  eqlPrimitiveUnordered,\n  isEmpty,\n  isNotEmpty,\n  uniqBy\n} from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank, mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { dayMs, minuteMs, secondMs } from \"../../fe/Date\"\nimport { delay, later } from \"../../fe/Delay\"\nimport { eql } from \"../../fe/Eql\"\nimport { Latch } from \"../../fe/Latch\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { clamp, gt, gt0, toInt } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { tol } from \"../../fe/Thunk\"\nimport { toA } from \"../../fe/toA\"\nimport { greatestBy } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { isSyncService, isWorkerService } from \"../ServiceNames\"\nimport { shim0 } from \"../Shim0\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport {\n  ensureSuffix,\n  equalsIgnoreCase,\n  sortByCaseInsensitive\n} from \"../String\"\nimport { asyncFind, mapAsync, thenFlatten, thenMap } from \"../async/Promise\"\nimport { thenOrTimeout } from \"../async/ThenOrTimeout\"\nimport { cacheDir } from \"../dir/CacheDir\"\nimport { libraryDataDir } from \"../dir/LibraryDir\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { env } from \"../env/Env\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { onError } from \"../error/OnError\"\nimport { toWrappedError } from \"../error/WrappedError\"\nimport { ee } from \"../event/EventEmitter\"\nimport { actualPath } from \"../fs/ActualPath\"\nimport { withLock_ } from \"../fs/FsLock\"\nimport { bestMountpointForDir, containedByNativePath } from \"../fs/Path\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile, toNativePath_ } from \"../fs/SimpleFile\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { cleanHostname } from \"../net/Hostname\"\nimport { friendlyname } from \"../net/nslookup\"\nimport { isMac, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { volsha } from \"../uri/volsha\"\nimport { dfPosix } from \"./DfPosix\"\nimport { dfWin } from \"./DfWin\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { addLocalVolumeInfoLinux } from \"./LocalVolumesLinux\"\nimport { addLocalVolumeInfoMac } from \"./LocalVolumesMac\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { addRemoteVolumeInfoPosix } from \"./RemoteVolumesPosix\"\nimport { addRemoteVolumeInfoWin } from \"./RemoteVolumesWin\"\nimport { Volume } from \"./Volume\"\nimport { commandTimeoutMs, mountpointsTtlMs } from \"./VolumeTtls\"\nimport { addVolumeUUIDs } from \"./VolumeUUID\"\n\nconst logger = lazy(() => mkLogger(\"volumes.Volumes\"))\n\n// volumes() is the public method, which does caching and timeouts via lazyFsAsync\n\n// volumesImpl is the BiImpl which may delegate to _volumesImpl or an RPC call.\n\nconst os: string = _os.platform()\n\nexport interface CachedVolume extends Volume {\n  os: string\n  /**\n   * If cached, what hostname extracted this volume?\n   */\n  fromHost?: string\n}\n\nconst mount2vol = new Map<string, Volume>()\nconst mount2volsha = new Map<string, string>()\nconst volsha2vol = new Map<string, Volume>()\n\nexport const mountpointToVolsha = lazyFsAsync(\n  \"mountpointToVolsha\",\n  async () => {\n    await loadCachedVolumes()\n    return mount2volsha\n  }\n)\n\nfunction replaceIfNewer(\n  key: Maybe<string>,\n  vol: Volume,\n  cache: Map<string, Volume>\n) {\n  if (blank(key)) return\n  const prior = cache.get(key)\n  if (prior == null || !gt(prior.updatedAt, vol.updatedAt)) {\n    cache.set(key, vol)\n    map(volsha(vol.uuid), ea => mount2volsha.set(vol.mountpoint, ea))\n  }\n}\n\nfunction cacheVolume<T extends Volume>(vol: Maybe<T>) {\n  if (vol == null) return\n  replaceIfNewer(vol.mountpoint, vol, mount2vol)\n  replaceIfNewer(volsha(vol.uuid), vol, volsha2vol)\n  return vol\n}\n\nfunction systemVolumeCacheDir() {\n  return PosixFile.forMaybe(cacheDir())?.join(\"volumes\")\n}\n\nfunction libraryVolumeCacheDir() {\n  return PosixFile.forMaybe(libraryDataDir())?.join(\"volumes\")\n}\n\nfunction volumeCacheDirs() {\n  return compact([systemVolumeCacheDir(), libraryVolumeCacheDir()])\n}\n\nasync function readCachedVolumes() {\n  const arr = await mapAsync({\n    name: \"readCachedVolumes\",\n    arr: thenFlatten(\n      volumeCacheDirs().map(dir =>\n        dir.childFiles(ea => ea.ext === \".json\" && !ea.base.startsWith(\".\"))\n      )\n    ),\n    f: file => file.readJson<CachedVolume>()\n  })\n  const sorted = sortBy(arr, ea => [ea.mountpoint, -ea.updatedAt!])\n  ;[...sorted.reverse()].forEach(cacheVolume)\n\n  const uniq = uniqBy(sorted, ea => ea.mountpoint).map(ea => ({\n    ...ea,\n    fromCache: true\n  }))\n\n  return sortByCaseInsensitive(uniq, ea => ea.mountpoint)\n}\n\nexport async function clearVolumesCache({\n  deleteFileCache = false\n}: { deleteFileCache?: boolean } = {}) {\n  logger().warn(\"clearVolumesCache()\", { deleteFileCache })\n  volumes.unset()\n  mount2vol.clear()\n  volsha2vol.clear()\n  loadCachedVolumes.unset()\n  cachedVolumes.unset()\n  if (deleteFileCache) {\n    await Promise.all(volumeCacheDirs().map(ea => ea.rmrf()))\n  }\n}\n\nconst loadCachedVolumes = lazyFsAsync(\"loadCachedVolumes\", async () => {\n  const vols = await readCachedVolumes()\n  vols?.forEach(cacheVolume)\n  return vols\n})\n\nexport const canWriteVolumesToCache = lazy(() => isSyncService() || isTest)\n\n// only exposed for tests:\nexport const priorWriteVolumesToCacheLatch = lazy<Maybe<Latch>>(() => undefined)\n\nexport async function writeVolumesToCache(arr: Maybe<Volume[]>) {\n  if (arr == null) return\n  const l = new Latch()\n  void priorWriteVolumesToCacheLatch.set(l)\n  const updatedAt = Date.now()\n  const vols: CachedVolume[] = arr\n    .filter(ea => !isTrue(ea.fromCache))\n    .map(ea => ({\n      ...ea,\n      ...(isDocker() ? {} : { fromHost: cleanHostname() }),\n      updatedAt,\n      os\n    }))\n\n  // Figure out what to write once, then write the volumes into both dirs:\n\n  const name2vol = new Map<string, CachedVolume>()\n  for (const vol of vols) {\n    // we need to include both the mountpoint and the volsha: some volumes\n    // won't have UUIDs.\n    for (const key of compactBlanks([\n      volsha(vol.uuid),\n      volsha(vol.mountpoint)\n    ])) {\n      name2vol.set(key, vol)\n    }\n  }\n  const dirs = volumeCacheDirs() // may be empty!\n  for (const dir of dirs) {\n    await withLock_(\n      {\n        file: dir,\n        timeoutMs: ShortCommandTimeoutMs\n      },\n      async () => {\n        for (const [name, vol] of name2vol.entries()) {\n          const f = dir.join(name + \".json\")\n          try {\n            await f.writeJson_(vol)\n          } catch (error) {\n            logger().warn(\n              \"writeVolumesToCache(): failed to write volumes cache\",\n              {\n                error,\n                output: f.nativePath,\n                vol\n              }\n            )\n            await f.unlink()\n          }\n        }\n      }\n    )\n  }\n  logger().debug(\"writeVolumesToCache(): complete.\", {\n    dirs,\n    vol_mountpoints: vols.map(ea => ea.mountpoint)\n  })\n\n  void l.resolve()\n}\n\nexport const cachedVolumes = lazy<Promise<CachedVolume[]>>(async () => {\n  const arr = compact(await loadCachedVolumes())\n  const m = toA(await mountpoints())\n  const withCurrentMountpoints = arr.filter(ea => m.includes(ea.mountpoint))\n  const result = isNotEmpty(withCurrentMountpoints)\n    ? withCurrentMountpoints\n    : arr.filter(ea => os === ea?.os) // Ideally we're only include from current host\n  return logger().tap({\n    msg: \"cachedVolumes()\",\n    level: \"trace\",\n    result: result.filter(ea => !isTrue(ea.ignorable)),\n    meta: {\n      currentMountpoints: m,\n      withCurrentMountpoints: withCurrentMountpoints.map(ea => ea.mountpoint)\n    }\n  })\n}, minuteMs)\n\n// NOT CACHED\nexport async function priorVolumesIfMountpointsMatch() {\n  const prior = await cachedVolumes()\n  // workers should just use priorVolumes():\n  if (isWorkerService() && isNotEmpty(prior)) return prior\n  const m = toA(await mountpoints())\n  const staleAt =\n    Date.now() -\n    clamp(minuteMs, dayMs, Settings.volumeMetadataTtlMs.valueOrDefault)\n  const priorIsStale =\n    Settings.volumeMetadataTtlMs.valueOrDefault === 0\n      ? false\n      : prior.some(ea => !gt(ea.updatedAt, staleAt))\n  const priorIsMissingMountpoints = !eqlPrimitiveUnordered(\n    m,\n    prior.map(ea => ea.mountpoint)\n  )\n  logger().debug(\"priorVolumesIfMountpointsMatch()\", {\n    priorIsStale,\n    priorIsMissingMountpoints\n  })\n  return !priorIsStale && !priorIsMissingMountpoints ? prior : undefined\n}\n\nexport const volumes = lazyFsAsync(\"volumes\", _volumes)\n\nasync function _volumes() {\n  try {\n    const prior = await thenOrTimeout(\n      priorVolumesIfMountpointsMatch(),\n      commandTimeoutMs()\n    )\n    if (prior != null) {\n      logger().debug(\"volumes(): returning prior-cached volumes\")\n      return prior\n    }\n\n    const result = await thenOrTimeoutError(volumesImpl(), commandTimeoutMs())\n    if (isNotEmpty(result)) {\n      return result\n    }\n  } catch (cause) {\n    onError(toWrappedError(\"volumes() failed\", { cause }))\n  }\n  logger().debug(\"fallback: returning priorVolumes()\")\n  return cachedVolumes()\n}\n\n// only exposed so the shim can be set:\nexport const volumesImpl = shim0({ name: \"fs.volumes\", impl: _volumesImpl })\n\n// for emitVolumesChanged():\nlet priorMountpoints: string[]\n\nasync function _volumesImpl(): PromiseMaybe<Volume[]> {\n  // FOR TESTING:\n  if (isTest) {\n    const hangMs = toInt(env().PS_VOLUMES_HANG_MS)\n    if (gt0(hangMs)) {\n      logger().warn(\"PS_VOLUMES_HANG_MS: delay for \" + hangMs)\n      await delay(hangMs, false)\n    }\n\n    const fail = getDevEnvFlag(\"PS_FAIL_VOLUMES\")\n    if (fail) {\n      logger().throw(\"PS_FAIL_VOLUMES\")\n      return\n    }\n  }\n\n  const rawDfVols = await thenOrTimeout(\n    isWin ? dfWin() : dfPosix(),\n    mountpointsTtlMs(),\n    () => onError(\"Timed out getting local volume metadata\")\n  )\n  if (rawDfVols == null) {\n    logger().warn(\"df failed\")\n    return\n  }\n\n  const dfVols = Settings.validateMountpoints.valueOrDefault\n    ? compact(\n        await mapAsync({\n          name: \"nonRpcVolumes: filter unhealthy volumes\",\n          arr: rawDfVols,\n          timeoutMs: commandTimeoutMs(),\n          f: async vol => {\n            try {\n              // Exclude volumes whose mountpoint doesn't exist (like unhealthy gio\n              // mountpoints):\n              const isDir = await isReadableDirectory(vol.mountpoint)\n              if (isDir) {\n                return vol\n              } else {\n                logger().info(\n                  \"validateMountpoints(): \" +\n                    vol.mountpoint +\n                    \" is not a directory\"\n                )\n              }\n            } catch (err) {\n              logger().info(\n                \"validateMountpoints(): failed to stat \" + vol.mountpoint,\n                err\n              )\n            }\n            return\n          }\n        })\n      )\n    : rawDfVols\n\n  // We only need to fetch remote volume information if there are remote volumes\n  // that are missing remoteHost:\n  if (dfVols.some(ea => ea.remote === true && blank((ea as any)?.remoteHost))) {\n    await thenOrTimeout(\n      isWin ? addRemoteVolumeInfoWin(dfVols) : addRemoteVolumeInfoPosix(dfVols),\n      10 * secondMs // < windows NET USE is flaky\n    ).catch(error => {\n      onError(\"Failed to get remote volume info\", { error })\n    })\n  }\n  const vols: Volume[] =\n    (isWin\n      ? dfVols\n      : isMac\n      ? await addLocalVolumeInfoMac(dfVols)\n      : await addLocalVolumeInfoLinux(dfVols)) ?? dfVols\n\n  for (const vol of vols) {\n    vol.updatedAt ??= Date.now()\n    // force boolean:\n    vol.remote = isTrue(vol.remote)\n    // undefine any blank labels:\n    if (blank(vol.label)) delete vol.label\n    // Fix hostnames:\n    mapNotBlank(\n      vol.remoteHost,\n      // remote DNS hosts cannot be case sensitive\n      ea => (vol.remoteHost = ea.toLowerCase().normalize().trim())\n    )\n  }\n\n  await addVolumeUUIDs(vols)\n\n  const sorted = sortBy(vols, ea => ea.mountpoint)\n\n  logger().debug(\"_volumes(): final result\", { sorted })\n\n  if (priorMountpoints != null && !eql(priorMountpoints, sorted)) {\n    later(() => ee().emit(\"volumesChanged\"))\n  }\n\n  sorted.forEach(cacheVolume)\n\n  await writeVolumesToCache(sorted)\n\n  return Object.freeze(sorted) as Volume[]\n}\n\nexport const rootPath = lazy(() =>\n  isWin\n    ? opt(getEnv(\"SystemDrive\")) // < looks like \"C:\", not \"C:\\\"\n        .filter(notBlank)\n        .orElse(() => \"C:\")\n        .map(ea => ensureSuffix(ea, \"\\\\\"))\n        .get()!\n    : \"/\"\n)\n\nexport function rootVolume(): PromiseMaybe<Volume> {\n  return bestVolumeForPath(rootPath())\n}\n\nexport function bestMountpoint(\n  nativePath: Maybe<string>,\n  mounts: Maybe<string[]>\n): Maybe<string> {\n  return blank(nativePath) || isEmpty(mounts)\n    ? undefined\n    : greatestBy(\n        mounts.filter(mount =>\n          containedByNativePath({\n            ancestor: mount,\n            descendant: nativePath,\n            acceptSelf: true\n          })\n        ),\n        mount =>\n          commonPrefixLength(\n            nativePath.split(_path.sep),\n            mount.split(_path.sep)\n          )\n      )\n}\n\nexport async function bestVolumeForPath(\n  file: Maybe<string | SimpleFile>,\n  vols?: Maybe<Volume[]>\n): PromiseMaybe<Volume> {\n  const np = map(file, toNativePath_)\n  if (blank(np)) return\n  const nativePath = await actualPath(np)\n\n  for (const vp of [\n    { name: \"args\", vols },\n    { name: \"cachedVolumes()\", vols: cachedVolumes },\n    { name: \"volumes()\", vols: volumes },\n    { name: \"allPriorVolumes()\", vols: loadCachedVolumes }\n  ]) {\n    const arr = await tol(vp.vols)\n    if (isEmpty(arr)) continue\n    const mp = bestMountpointForDir(\n      nativePath,\n      arr.map(ea => ea.mountpoint)\n    )\n    if (mp == null) continue\n    const result = arr.find(ea => ea.mountpoint === mp)\n    if (result != null) {\n      logger().debug(\"bestVolumeForPath()\", {\n        nativePath,\n        result: result.mountpoint,\n        src: vp.name\n      })\n      return result\n    }\n  }\n  return logger().tap({\n    msg: \"bestVolume(): no volumes were applicable(!!)\",\n    result: undefined,\n    meta: {\n      nativePath\n    }\n  })\n}\n\nexport async function bestVolumeForVolsha(volumeSha: string) {\n  for (const vp of [\n    { name: \"allPriorVolumes()\", vols: loadCachedVolumes },\n    { name: \"volumes()\", vols: volumes }\n  ]) {\n    const match = toA(await vp.vols()).find(ea => volsha(ea.uuid) === volumeSha)\n    logger().debug(\"bestVolumeForVolsha(): \" + vp.name, { match })\n    if (match != null) return match\n  }\n  return\n}\n\nexport async function remoteVolumeFor(\n  remoteHost: string,\n  remoteShare: string\n): PromiseMaybe<Volume> {\n  return thenMap(volumes(), vols =>\n    bestRemoteVolume(remoteHost, remoteShare, vols)\n  )\n}\n\n/**\n * Find the first volume in `vols` that matches (case-insensitively) the given\n * `remoteHost` and `remoteShare`.\n */\nexport async function bestRemoteVolume(\n  remoteHost: string,\n  remoteShare: string,\n  vols: Volume[]\n): PromiseMaybe<Volume> {\n  // Share names may be mostly unique, and they aren't messed with, so filter by that first:\n  const withCorrectShare = vols.filter(vol =>\n    equalsIgnoreCase(remoteShare, vol.remoteShare)\n  )\n  if (isEmpty(withCorrectShare)) return\n\n  const withExactHostname = withCorrectShare.find(\n    vol =>\n      isTrue(vol.remote) &&\n      notBlank(vol.remoteHost) &&\n      equalsIgnoreCase(remoteHost, vol.remoteHost)\n  )\n  if (withExactHostname != null) return withExactHostname\n\n  const friendlyRemoteHost = await friendlyname(remoteHost)\n  return asyncFind(withCorrectShare, async vol =>\n    equalsIgnoreCase(friendlyRemoteHost, await friendlyname(vol.remoteHost!))\n  )\n}\n\nexport async function findVolumeForVolsha(\n  volumeSha: string\n): PromiseMaybe<Volume> {\n  if (blank(volumeSha)) {\n    return undefined\n  }\n  return (\n    volsha2vol.get(volumeSha) ??\n    (await loadCachedVolumes())?.find(ea => volsha(ea.uuid) === volumeSha) ??\n    (await volumes())?.find(ea => volsha(ea.uuid) === volumeSha)\n  )\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { notBlankOr, toNotBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { mkLogger } from \"../Logger\"\nimport { version } from \"../Version\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { safeUUID } from \"../math/UUID\"\nimport { Settings } from \"../settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"volumes.WriteVolumeUUID\"))\n\nexport function volumeUuidSubpath() {\n  return toNotBlank(Settings.volumeUuidFilePaths.values[0]) ?? \".uuid\"\n}\n\nexport async function writeVolumeUuid({\n  mountpoint,\n  uuid\n}: {\n  mountpoint: string\n  uuid?: Maybe<string>\n}): PromiseMaybe<string> {\n  const f = PosixFile.for(mountpoint).join(volumeUuidSubpath())\n  uuid = notBlankOr(uuid, safeUUID)\n  if (await f.parent().isReadWritable()) {\n    try {\n      // Try to persist the UUID for later (or if the volume is remotely mounted)\n      await f.writeText_(\n        uuid,\n        \"\",\n        \"# This volume UUID was written by PhotoStructure v\" + version,\n        \"# See https://photostructure.com/faq/what-is-a-volume/ for details.\"\n      )\n      logger().info(\"writeVolumeUuid(): Saved new UUID for \" + mountpoint, {\n        uuid\n      })\n      return uuid\n    } catch (error) {\n      // Only return the UUID if we can persist it successfully.\n      logger().warn(\n        \"writeVolumeUuid(): Failed to save new UUID for \" + mountpoint,\n        { error }\n      )\n    }\n  } else {\n    logger().warn(\n      `writeVolumeUuid(): cannot write to ${f}, directory is not read/write`\n    )\n  }\n  return\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const HelmetPlugins = strEnum(\n  \"all\",\n  \"contentSecurityPolicy\",\n  \"crossOriginEmbedderPolicy\",\n  \"crossOriginOpenerPolicy\",\n  \"crossOriginResourcePolicy\",\n  \"dnsPrefetchControl\",\n  \"expectCt\",\n  \"frameguard\",\n  \"hidePoweredBy\",\n  \"hsts\",\n  \"ieNoOpen\",\n  \"noSniff\",\n  \"originAgentCluster\",\n  \"permittedCrossDomainPolicies\",\n  \"referrerPolicy\",\n  \"xssFilter\"\n)\n\nexport type HelmetPlugin = StrEnumKeys<typeof HelmetPlugins>\n","import { LibraryTagName, TagPath, TagRoots } from \"../../fe/api/Tag\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { PS_LIBRARY_SCHEME, PS_LOCAL_FILE_SCHEME } from \"../../fe/URI\"\nimport { toURI, URI } from \"../uri/URI\"\n\n/**\n * @param isFile if true, don't include the last path element in `uri` (as\n * it's the filename, and that's not a tag)\n */\nexport function uriToTagPath({\n  uri,\n  isFile\n}: {\n  uri: Maybe<URI | string>\n  isFile: boolean\n}): Maybe<TagPath> {\n  if (uri == null) return\n  const u = toURI(uri)\n  const authority =\n    u.scheme === PS_LIBRARY_SCHEME\n      ? LibraryTagName\n      : u.scheme === PS_LOCAL_FILE_SCHEME\n      ? u.authority\n      : undefined\n\n  if (blank(authority)) return\n\n  // simple file URIs won't have a valid authority.\n  // slice off the filename:\n  const arr = u.path.split(\"/\")\n\n  return compactBlanks([\n    TagRoots.fs,\n    authority,\n    ...(isFile ? arr.slice(0, -1) : arr)\n  ])\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, isEmpty } from \"../../fe/Array\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { mkTagUri } from \"../../fe/app/FullPaths\"\nimport { hostname } from \"../net/Hostname\"\nimport { myExternalIp4Addresses } from \"../net/ip\"\nimport { Settings } from \"../settings/Settings\"\nimport { tagPathToStringArray } from \"../tags/TagPaths\"\nimport { nativePath2uri } from \"../uri/FileURI\"\nimport { URI, toURI } from \"../uri/URI\"\nimport { uriToTagPath } from \"./UriToTagPath\"\n\nexport default function myWebUrls(\n  port = Settings.httpPort.valueOrDefault\n): URI[] {\n  const hostnames = [Settings.localhost.valueOrDefault]\n  if (Settings.exposeNetworkWithoutAuth.valueOrDefault) {\n    hostnames.push(...compactBlanks([myExternalIp4Addresses()[0], hostname()]))\n  }\n  const base = toURI(\"http://a\")\n\n  return hostnames.map(ea => base.with({ authority: ea + \":\" + port }))\n}\n\nexport const myWebUrl = lazy(() => myWebUrls()[0])\n\nexport async function mkFolderUrl(nativePath: string) {\n  const uri = await nativePath2uri(nativePath)\n  const tagPath = uriToTagPath({ uri, isFile: false })\n  if (isEmpty(tagPath)) return\n  const change = mkTagUri(tagPathToStringArray(tagPath))\n  return myWebUrl()?.with(change)\n}\n\nexport function mkAssetUrl(assetId: Maybe<number>): Maybe<URI> {\n  return gt0(assetId)\n    ? myWebUrl()?.with({ path: \"/asset/\" + assetId })\n    : undefined\n}\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { stripDiacritics, stripEmoji } from \"../String\"\nimport { splitCompactLines } from \"../fs/CRLF\"\nimport { ProjectPath } from \"../fs/ProjectPath\"\nimport { zcat } from \"../fs/zcat\"\nimport { unl33t } from \"./Leet\"\n\nexport const CussNativePath = lazy(() =>\n  join(ProjectPath.Data(), \"cuss.txt.br\")\n)\n\nexport const loadCuss = lazy(async () => {\n  const words = splitCompactLines(await zcat(CussNativePath()))\n  cussTrie.set(asTrie(words))\n})\n\nconst cussTrie = lazy<ReturnType<typeof asTrie>>(() => ({\n  trie: new MultiMap<string, string>(),\n  small: []\n}))\n\n// uuid spec passes fastest with 3:\nconst TriePrefixLength = 3\n\nfunction asTrie(words: string[]): {\n  trie: MultiMap<string, string>\n  small: string[]\n} {\n  const trie = new MultiMap<string, string>()\n  const small: string[] = []\n  for (const ea of words) {\n    if (ea.length < TriePrefixLength) {\n      small.push(ea)\n    } else {\n      trie.add(ea.slice(0, TriePrefixLength), ea)\n    }\n  }\n  // console.log(\n  //   \"asTrie(): \" +\n  //     words.length +\n  //     \" words, \" +\n  //     trie.store.size +\n  //     \" prefixes, \" +\n  //     small.length +\n  //     \" too small\"\n  // )\n  return { trie, small }\n}\n\nexport function getCuss(s: string, naughtyWords?: string[]): Maybe<string> {\n  const lc = stripEmoji(stripDiacritics(s.toLowerCase().normalize()))\n  const { small, trie } =\n    naughtyWords == null ? cussTrie() : asTrie(naughtyWords)\n  for (const w of [lc.replace(/[^a-z]/gi, \"\"), ...unl33t(lc)]) {\n    const smol = small.find(ea => w.includes(ea))\n    if (smol != null) return smol\n    for (let i = 0; i < w.length - (TriePrefixLength - 1); i++) {\n      const arr = trie.get(w.slice(i, TriePrefixLength))\n      if (arr != null) {\n        const sub = w.slice(i)\n        const bad = arr.find(ea => sub.startsWith(ea))\n        if (bad != null) {\n          return bad\n        }\n      }\n    }\n  }\n  return\n}\n\nexport function isCussy(s: string) {\n  return getCuss(s) != null\n}\n\nexport function decuss(f: () => string): string {\n  let retries = 10\n  let s = \"\"\n  do {\n    s = f()\n  } while (retries-- > 0 && isCussy(s.replace(/[^a-z]/gi, \"\")))\n\n  return s\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { toA } from \"../../fe/toA\"\n\nexport function l33t(s: string): string {\n  let result = \"\"\n  const m = a2l()\n  for (const ea of s) {\n    result += m.get(ea)?.[0] ?? ea\n  }\n  return result\n}\n\nconst l2a = lazy(() => {\n  const m = new MultiMap<string, string>()\n  for (const { l, a } of [\n    // { l: \"!\", a: [\"i\"] },\n    // { l: \"(\", a: [\"c\"] },\n    // { l: \"@\", a: [\"a\"] },\n    // { l: \"&\", a: [\"g\"] },\n    // { l: \"+\", a: [\"t\"] },\n    // { l: \"|\", a: [\"i\", \"l\"] },\n    // { l: \"$\", a: [\"s\"] },\n    { l: \"0\", a: [\"o\"] },\n    { l: \"1\", a: [\"i\", \"l\"] },\n    { l: \"2\", a: [\"z\"] },\n    { l: \"3\", a: [\"e\"] },\n    { l: \"4\", a: [\"a\"] },\n    { l: \"5\", a: [\"s\"] },\n    { l: \"6\", a: [\"b\"] },\n    { l: \"7\", a: [\"t\"] },\n    { l: \"8\", a: [\"b\"] },\n    { l: \"9\", a: [\"g\", \"q\"] }\n  ]) {\n    m.add(l, ...a)\n  }\n  return m\n})\n\nconst a2l = lazy(() => {\n  const m = l2a().inverse()\n  for (const ea of m.values()) {\n    ea.sort()\n  }\n  return m\n})\n\nexport function unl33t(s: string): string[] {\n  if (blank(s)) return [\"\"]\n  const origPrefix = s.substring(0, 1)\n  const prefixes = [origPrefix, ...toA(l2a().get(origPrefix))]\n  const suffixes = unl33t(s.substring(1))\n  return flatten(suffixes.map(suff => prefixes.map(pref => pref + suff)))\n}\n","import os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { gt0 } from \"../../fe/Number\"\nimport { intFromFileSync } from \"../fs/ReadFile\"\nimport { isDocker } from \"../platform/isDocker\"\n\n// cpu() can take 500ms!\nexport const cpuInfo = lazy(() => os.cpus())\n\nexport const cpuCount = lazy(() => {\n  if (isDocker()) {\n    // Are we in a pod?\n    // See https://www.reddit.com/r/PhotoStructure/comments/sn68f9/initial_scan_not_adding_everything/hw4bqmj/\n    const quota = intFromFileSync(\"/sys/fs/cgroup/cpu/cpu.cfs_quota_us\")\n    const period =\n      quota != null\n        ? intFromFileSync(\"/sys/fs/cgroup/cpu/cpu.cfs_period_us\")\n        : undefined\n    if (gt0(quota) && gt0(period)) {\n      return quota / period\n    }\n\n    const shares = intFromFileSync(\"/sys/fs/cgroup/cpu/cpu.shares\")\n    if (gt0(shares)) {\n      return (cpuInfo().length * shares) / 1024\n    }\n  }\n  return cpuInfo().length\n})\n","import os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { secondMs } from \"../../fe/Date\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, gte, mapFinite, round } from \"../../fe/Number\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableInterval } from \"../async/EndableInterval\"\nimport { Average } from \"../math/Average\"\nimport { avg } from \"../math/Vector\"\nimport { isWin } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"work.CpuUsage\"))\n\nconst logTooBusy = lazy(\n  () => {\n    logger().warn(\"Current system load is too high to schedule more work\", {\n      currentBusyPct: CpuUsage.instance().busyPct(),\n      max: Settings.cpuLoadPercent.valueOrDefault\n    })\n  },\n  (isTest ? 15 : 60) * secondMs\n)\n\nexport function isTooBusy(): boolean {\n  const busyPct = CpuUsage.instance().busyPct()\n  // If people set cpuLoadPercent too low, this results in PhotoStructure never running. Only set this if the setting is reasonable.\n  const reasonableMaxCpuPct = clamp(\n    50,\n    100,\n    Math.round(Settings.cpuLoadPercent.valueOrDefault * 1.2) // < allow a bit of overscheduling\n  )\n  if (gte(busyPct, reasonableMaxCpuPct)) {\n    logTooBusy()\n    return true\n  } else {\n    logTooBusy.unset() // < log the next time we're too high\n    return false\n  }\n}\n\n/**\n * Watches and reports system cpu utilization (as opposed to process.cpuUsage,\n * which returns this process' utilization)\n */\nexport class CpuUsage extends EndableInterval {\n  private readonly busyPctAvg = new Average(5)\n  private last = new CpuTimes()\n\n  static instance = lazy(() => new CpuUsage())\n\n  /**\n   * @param intervalMs most OSes don't seem to update _os.CpuInfo more than\n   * twice a second, so 500ms is a reasonable default\n   * @param sampleCount larger numbers give more smoothing. 1.5 seconds of\n   * smoothing should be fine. 1 disables smoothing.\n   */\n  constructor() {\n    super({\n      name: \"CpuUsage()\",\n      callback: () => this.#sample(),\n      intervalMs: secondMs,\n      rank: EndableRanks.first\n    })\n    mapFinite(busyPctFromLoad(), ea => this.busyPctAvg.push(ea))\n\n    // set .last:\n    this.#sample()\n  }\n\n  get cpuCount() {\n    return this.last.cpuCount\n  }\n\n  /**\n   * weighted average percent of the time CPUs are idle\n   */\n  idlePct(): Maybe<number> {\n    return map(this.busyPct(), ea => 100 - ea)\n  }\n\n  busyPct(): Maybe<number> {\n    return this.busyPctAvg.sampleAvg\n  }\n\n  #sample(): void {\n    const start = Date.now()\n    if (this.last.at - start < secondMs) {\n      // no-op, we already sampled recently\n    }\n\n    mapFinite(busyPctFromLoad(), ea => this.busyPctAvg.push(ea))\n\n    const now = new CpuTimes()\n    if (this.last.cpuCount === now.cpuCount) {\n      // only push if CPU count didn't wiggle:\n      mapFinite(now.busyPct(this.last), ea => {\n        this.busyPctAvg.push(round(ea))\n      })\n    }\n    this.last = now\n\n    // If we're on a slow box, don't run this every second.\n    const elapsedMs = Date.now() - start\n    this.logger.trace(\"CpuUsage#sample()\", {\n      elapsedMs,\n      busyPct: this.busyPct()\n    })\n    this.setIntervalMs(\n      (elapsedMs > 500 ? 3 : elapsedMs > 250 ? 2 : 1) * secondMs\n    )\n  }\n}\n\nclass CpuTimes {\n  readonly at: number\n  readonly cpuCount: number\n  readonly busyMs: number\n  readonly idleMs: number\n\n  constructor(cpus: os.CpuInfo[] = os.cpus()) {\n    this.at = Date.now()\n    let busyMs = 0\n    let idleMs = 0\n    for (const ea of cpus) {\n      busyMs += ea.times.user + ea.times.nice + ea.times.sys + ea.times.irq\n      idleMs += ea.times.idle\n    }\n    this.busyMs = busyMs\n    this.idleMs = idleMs\n    this.cpuCount = cpus.length\n  }\n\n  busyPct(prior: CpuTimes): Maybe<number> {\n    if (prior.at > this.at) {\n      return prior.busyPct(this)\n    } else {\n      const busyMs = this.busyMs - prior.busyMs\n      const idleMs = this.idleMs - prior.idleMs\n      const totalMs = busyMs + idleMs\n      const result = Math.round((100.0 * busyMs) / totalMs)\n      const legit = isFinite(result) && result >= 0 && result <= 100\n      if (!legit) {\n        logger().warn(\"busyPct(): invalid result\", {\n          result,\n          busyMs,\n          idleMs\n        })\n      }\n      return legit ? result : undefined\n    }\n  }\n}\n\nfunction busyPctFromLoad() {\n  return isWin\n    ? undefined\n    : Math.ceil((100 * avg(os.loadavg())!) / os.cpus().length)\n}\n","import os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { gt0 } from \"../../fe/Number\"\nimport { fmtBytes } from \"../../fe/Units\"\nimport { mkLogger } from \"../Logger\"\nimport { intFromFileSync } from \"../fs/ReadFile\"\nimport { isDocker } from \"../platform/isDocker\"\n\nconst logger = lazy(() => mkLogger(\"work.FreeMem\"))\n\n// lazy for tests:\n\nexport const estimatedFreeMem = lazy(() => {\n  const freemem = os.freemem()\n  const totalmem = os.totalmem()\n  // By using both free and total memory, we don't ignore\n  // current system load, but aren't borked if all memory is used currently (by\n  // filesystem cache, presumably)\n  const result = (freemem * 2 + totalmem) / 3\n  if (isDocker()) {\n    // See\n    // https://www.reddit.com/r/PhotoStructure/comments/sn68f9/initial_scan_not_adding_everything/hw4bqmj/\n\n    const mem = intFromFileSync(\"/sys/fs/cgroup/memory/memory.limit_in_bytes\")\n    // k8s may return 9223372036854771712 if memory isn't limited (which means use the system memory...)\n    if (gt0(mem))\n      return logger().tap({\n        msg: \"estimatedFreeMem() (docker mode)\",\n        result: Math.min(mem, result),\n        meta: { freemem, totalmem }\n      })\n  }\n  return logger().tap({\n    msg: \"estimatedFreeMem() \",\n    result,\n    meta: {\n      result: fmtBytes(result),\n      freemem: fmtBytes(freemem),\n      totalmem: fmtBytes(totalmem)\n    }\n  })\n})\n","import { ee } from \"../event/EventEmitter\"\n\nlet paused = false\n\nexport function isPaused(): boolean {\n  return paused\n}\n\nexport function pause(newPausedValue = true): void {\n  if (newPausedValue === false) {\n    resume()\n  } else {\n    // no infinite loops\n    if (!paused) {\n      paused = true\n      ee().emit(\"pause\")\n    }\n  }\n}\n\nexport function resume(): void {\n  // no infinite loops\n  if (paused) {\n    paused = false\n    ee().emit(\"clearCache\")\n    ee().emit(\"resume\")\n  }\n}\n\n// See Service.setupEventHandlers!\n","import { lazy } from \"../../core/Lazy\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { clamp, gt0, sigFigs, toGt0 } from \"../../fe/Number\"\nimport { MB } from \"../../fe/Units\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { ee } from \"../event/EventEmitter\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { lerp2d } from \"../math/Lerp\"\nimport { Settings } from \"../settings/Settings\"\nimport { cpuCount } from \"./CpuInfo\"\nimport { estimatedFreeMem } from \"./FreeMem\"\nimport { timeoutRate } from \"./WorkTimeout\"\n\nconst logger = lazy(() => mkLogger(\"work.MaxCpus\"))\n\nlater(() => {\n  if (isTest) {\n    ee().on(\"clearCache\", () =>\n      // we actually set() some of these in some specs:\n      clearMaxWorkCaches()\n    )\n  }\n  ee().on(\"settingsChanged\", clearMaxWorkCaches)\n  Settings.cpuLoadPercent.watchLater(clearMaxWorkCaches)\n  Settings.maxConcurrentImports.watchLater(clearMaxWorkCaches)\n})\n\nexport function clearMaxWorkCaches() {\n  estimatedFreeMem.unset()\n  maxCpus.unset()\n  maxConcurrentImports.unset()\n  timeoutRate.prior()?.clear()\n  sharpThreadsPerProcess.unset()\n  cpuCount.unset()\n}\n\nconst maxProcsForMem = lazy(() => {\n  // they may bloat, but they'll recycle if they get too big.\n  const worstCaseMemPerProc = Settings.maxMemoryMb.valueOrDefault * MB\n  // We don't want to over-subscribe system memory, but we need to run at\n  // least one:\n  return logger().tap({\n    msg: \"maxProcsForMem\",\n    result: Math.max(1, Math.floor(estimatedFreeMem() / worstCaseMemPerProc)),\n    meta: {\n      estFreeMemMb: Math.round(estimatedFreeMem() / MB),\n      worstCaseMemPerProcMb: Math.round(worstCaseMemPerProc / MB)\n    }\n  })\n}, minuteMs)\n\nexport function timeoutPenalization() {\n  const timeoutsPerMinute = Math.round(\n    timeoutRate.prior()?.eventsPerMinute ?? 0\n  )\n  const timeoutThrottleCoeff = Settings.timeoutThrottleCoeff.valueOrDefault\n\n  const result =\n    timeoutsPerMinute === 0 || timeoutThrottleCoeff === 0\n      ? 1 // < timeouts are disabled\n      : sigFigs(timeoutThrottleCoeff / timeoutsPerMinute, 2)\n\n  return logger().tap({\n    msg: \"timeoutPenalization()\",\n    level: result > 1 ? LogLevels.warn : LogLevels.debug,\n    result,\n    meta: {\n      timeoutsPerMinute,\n      timeoutThrottleCoeff\n    }\n  })\n}\n\nexport function targetCpuLoadPct() {\n  return (toGt0(Settings.cpuLoadPercent.valueOrDefault) ?? 1) / 100\n}\n\nexport function singleThreadMode() {\n  return (\n    Math.round(targetCpuLoadPct() * cpuCount()) <= 1 ||\n    Settings.cpuLoadPercent.valueOrDefault <= 1 ||\n    maxCpus() === 1\n  )\n}\n\n// We don't need a timeout TTL here: if we get a timeout, that will get set. See\n// WorkTimeout.ts\nexport const maxCpus = lazy(_maxCpus)\n\nfunction _maxCpus() {\n  const cpuPortion = Math.max(1, Math.floor(targetCpuLoadPct() * cpuCount()))\n\n  // maxCpus must be at least 1, and not more than min(cpuPortion, maxProcsForMem)\n  let result = cpuPortion\n\n  const timeoutsPerSecond = timeoutRate.prior()?.eventsPerMinute ?? 0\n\n  // Make the lazy estimation that most work takes about a second:\n  const penalization = timeoutPenalization()\n\n  if (penalization !== 1) {\n    // we don't need to go below this setting\n    const resultBeforePenalization = result\n    result = result * penalization\n    logger().warn(\"Recent timeouts! Throttling down.\", {\n      penalization,\n      resultBeforePenalization,\n      resultAfterPenalization: result\n    })\n  }\n\n  // We don't want to over-subscribe system memory, but we need to run at\n  // least one:\n  result = clamp(1, Math.min(cpuPortion, maxProcsForMem()), Math.ceil(result))\n\n  return logger().tap({\n    msg: \"maxCpus()\",\n    level: LogLevels.info,\n    result,\n    meta: {\n      cpuLoadPct: targetCpuLoadPct(),\n      cpuCount: cpuCount(),\n      cpuPortion,\n      penalization,\n      timeoutsPerSecond,\n      maxProcsForMem: maxProcsForMem()\n    }\n  })\n}\n\nexport const maxConcurrentImports = lazy(_maxConcurrentImports)\n\nfunction _maxConcurrentImports() {\n  if (gt0(Settings.maxConcurrentImports.valueOrDefault)) {\n    return clamp(1, maxCpus(), Settings.maxConcurrentImports.valueOrDefault)\n  }\n  return maxCpus()\n}\n\nexport const sharpThreadsPerProcess = lazy(() => {\n  const i = Settings.sharpThreadsPerProcess.valueOrDefault\n  return i > 0\n    ? i\n    : clamp(\n        1,\n        Math.min(maxCpus(), Settings.sharpThreadsPerProcess.max),\n        // bigger second x scales down sharp threads\n        Math.floor(lerp2d(maxCpus(), { x: 1, y: 1 }, { x: 6, y: 2 }))\n      )\n})\n","import { Rate } from \"batch-cluster\"\nimport { setInterval } from \"timers\"\nimport { lazy } from \"../../core/Lazy\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { ee } from \"../event/EventEmitter\"\nimport { rateStats } from \"../math/Rate\"\nimport { maxConcurrentImports, maxCpus } from \"./MaxCpus\"\n\nconst logger = lazy(() => mkLogger(\"work.WorkTimeout\"))\n\nexport const timeoutRate = lazy(\n  () => new Rate(5 * minuteMs, isTest ? 100 : ShortCommandTimeoutMs)\n)\n\nconst refreshEveryMinute = lazy(() =>\n  // Make sure if we recover, we throttle back up:\n  // (this was an EndableInterval, but that caused a deploop (!?))\n  setInterval(refresh, minuteMs).unref()\n)\n\nfunction refresh() {\n  // we need to update these every minute if we've had any (soft or hard)\n  // timeouts.\n\n  // We want .refresh(), not just .unset(), so .watchLater() listeners gets\n  // invoked:\n  maxCpus.refresh()\n  maxConcurrentImports.refresh()\n  refreshEveryMinute()\n}\n\nexport function onTimeout() {\n  const r = timeoutRate()\n  r.onEvent()\n  logger().warn(\"onTimeout()\", rateStats(r))\n  refresh()\n}\n\nlater(() => {\n  ee().on(\"clearCache\", () => {\n    maxCpus.unset()\n    maxConcurrentImports.unset()\n    timeoutRate.unset()\n  })\n})\n","import { sortBy } from \"./ArraySort\"\nimport { notBlankish } from \"./Blank\"\nimport { eql } from \"./Eql\"\nimport { stringify } from \"./JSON\"\nimport { List } from \"./List\"\nimport { getOrSet } from \"./Map\"\nimport { Defined } from \"./Maybe\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport {\n  Comparable,\n  Primitivable,\n  Primitivables,\n  Primitive,\n  isPrimitive,\n  isPrimitiveArray,\n  lt\n} from \"./Primitive\"\nimport { randomInt } from \"./Random\"\nimport { MaybeReadonlyArray } from \"./Readonly\"\nimport { MaybeNullSyncOrAsync } from \"./SyncOrAsync\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { isFunction } from \"./isFunction\"\nimport { toA } from \"./toA\"\nimport { toS } from \"./toS\"\n\n// Added isNotEmpty so I can make the arr is not null assertion:\nexport function isNotEmpty<L extends List<any>>(arr: MaybeNull<L>): arr is L {\n  return arr != null && toA(arr).length > 0\n}\n\nexport function toNotEmpty<L extends List<any>>(arr: MaybeNull<L>): Maybe<L> {\n  return isNotEmpty(arr) ? arr : undefined\n}\n\nexport function notEmptyOr<L extends List<any>>(\n  arr: Maybe<L>,\n  defaultValue: ThunkOrT<L>\n): L {\n  return isNotEmpty(arr) ? arr : tot(defaultValue)\n}\n\nexport function isEmpty(arr: MaybeNull<List<any>>): arr is undefined {\n  return arr == null || toA(arr).length === 0\n}\n\nexport function mapArray<T, U>(\n  arr: MaybeNull<T[]>,\n  f: (t: T[]) => U\n): Maybe<U> {\n  return Array.isArray(arr) ? f(arr) : undefined\n}\n\nexport function mapNotEmpty<L extends List<any>, R>(\n  arr: Maybe<L>,\n  f: (ea: L) => R\n): Maybe<R> {\n  return isNotEmpty(arr) ? f(arr) : undefined\n}\n\nexport function mapNotEmptyOr<L extends List<any>, R>(\n  arr: Maybe<L>,\n  f: (ea: L) => R,\n  defaultValue: ThunkOrT<R>\n): R {\n  return isNotEmpty(arr) ? f(arr) : tot(defaultValue)\n}\n\nexport function toPrimitive(\n  a: Primitive | Primitive[] | Primitivable | Primitivables\n): Primitive | Primitive[] {\n  return isPrimitive(a) || isPrimitiveArray(a) ? a : a.valueOf()\n}\n\n// only deals with primitive arrays. use isEqlArray() instead.\nfunction eqlArray<T extends Primitive>(a: T[], b: T[]): boolean {\n  return (\n    a != null &&\n    b != null &&\n    a.length === b.length &&\n    a.every((ea, idx) => ea === b[idx])\n  )\n}\n\n/**\n * @return true if `prefix` == `haystack.slice(0, prefix.length)`.\n */\nexport function startsWith<T extends Primitive>(\n  haystack: T[],\n  prefix: T[]\n): boolean {\n  return eqlArray(haystack.slice(0, prefix.length), prefix)\n}\n\n/**\n * Retain all items from `arr` where the `keepIfTrue` returns `true`.\n * @return true if `arr` was changed.\n */\nexport function filterInPlace<T>(\n  arr: T[],\n  keepIfTrue: (item: T, index: number, ea: T[]) => boolean\n): T[] {\n  for (let i = 0; i < arr.length; ) {\n    if (keepIfTrue(arr[i], i, arr)) {\n      i++\n    } else {\n      arr.splice(i, 1)\n    }\n  }\n  return arr\n}\n\n/**\n * Retain all items from `arr` where the `keepIfTrue` returns `true`.\n * @return true if `arr` was changed.\n */\nexport async function filterInPlaceAsync<T>(\n  arr: T[],\n  keepIfTrue: (item: T, index: number, ea: T[]) => MaybeNullSyncOrAsync<boolean>\n): Promise<T[]> {\n  for (let i = 0; i < arr.length; ) {\n    if (true === (await keepIfTrue(arr[i], i, arr))) {\n      i++\n    } else {\n      arr.splice(i, 1)\n    }\n  }\n  return arr\n}\n\nexport function move<T>(arr: T[], fromIndex: number, toIndex: number): T[] {\n  if (\n    fromIndex === toIndex ||\n    fromIndex < 0 ||\n    toIndex < 0 ||\n    fromIndex >= arr.length ||\n    toIndex >= arr.length\n  ) {\n    return arr\n  }\n  const ea = arr[fromIndex]\n  arr.splice(fromIndex, 1)\n  arr.splice(toIndex, 0, ea)\n  return arr\n}\n\n// ES2016 polyfill that also supports Iterable\nexport function includes(\n  haystack: MaybeNull<any[] | Iterable<any>>,\n  needle: any\n): boolean {\n  if (haystack == null) return false\n  for (const ea of haystack) {\n    if (needle.valueOf() === ea.valueOf()) return true\n  }\n  return false\n}\n\nexport function indexOf<T>(\n  iter: Maybe<Iterable<T>>,\n  f: (t: T, index: number) => boolean\n): Maybe<number> {\n  if (iter == null) return\n  let index = 0\n  for (const ea of iter) {\n    if (f(ea, index)) return index\n    index++\n  }\n  return\n}\n\nexport function indexOfPrimitive<T>(\n  iter: Maybe<Iterable<T>>,\n  t: T\n): Maybe<number> {\n  if (iter == null) return\n  let index = 0\n  for (const ea of iter) {\n    if (ea === t) return index\n    index++\n  }\n  return\n}\n\nexport function includesAny(\n  haystack?: Primitive[],\n  needles?: Primitive[]\n): boolean {\n  return (\n    isNotEmpty(haystack) &&\n    isNotEmpty(needles) &&\n    haystack.some(ea => needles.includes(ea))\n  )\n}\n\n/**\n * @returns true iff all `needles` are found in `haystack`\n */\nexport function includesAll(\n  haystack?: Primitive[],\n  needles?: Primitive[]\n): boolean {\n  if (isEmpty(haystack) || isEmpty(needles)) return false\n  for (const needle of needles) {\n    if (!haystack.includes(needle)) return false\n  }\n  return true\n}\n\nexport function eqlPrimitiveUnordered(a: Primitive[], b: Primitive[]): boolean {\n  if (a == null || b == null || a.length !== b.length) return false\n  const a1 = sortBy(a, toPrimitive)\n  const b1 = sortBy(b, toPrimitive)\n  return a1.every((ea, idx) => ea === b1[idx])\n}\n\nexport function pushUniq<T>(arr: T[], ...items: T[]): T[] {\n  for (const item of items) {\n    if (item != null && !arr.some(ea => eql(ea, item))) {\n      arr.push(item)\n    }\n  }\n  return arr\n}\n\nexport function pushUniqBy<T>(\n  arr: T[],\n  items: T[],\n  valueOf: (t: T) => Comparable\n): T[] {\n  const vArr = arr.map(valueOf)\n  for (const item of items) {\n    const v = valueOf(item)\n    if (!vArr.includes(v)) {\n      arr.push(item)\n      vArr.push(v)\n    }\n  }\n  return arr\n}\n\nexport function insertAt<T>(arr: T[], index: number, ...items: T[]): T[] {\n  arr.splice(index, 0, ...items)\n  return arr\n}\n\n/**\n * Insert `item` into `arr` only if `item` is not in `arr` (according to `cmp`).\n *\n * Assumes `arr` is ascending-sorted.\n */\nexport function insertUniq<T>(\n  arr: T[],\n  item: T,\n  cmp_: (a: T, b: T) => number\n): T[] {\n  // verify the array is already in proper sort-order\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (cmp_(arr[i], arr[i + 1]) > 0) {\n      throw new Error(\"badly sorted array: \" + arr)\n    }\n  }\n  for (let i = 0; i < arr.length; i++) {\n    const ea = arr[i]\n    const c = cmp_(ea, item)\n    if (c === 0) return arr\n    // if item is greater than ea, insert right before ea\n    if (c > 0) {\n      arr.splice(i, 0, item)\n      return arr\n    }\n  }\n  arr.push(item)\n  return arr\n}\n\n// Can't call this delete, as that's a javascript keyword\nexport function remove<T>(arr: T[], ...element: T[]): boolean {\n  const before = arr.length\n  filterInPlace(arr, ea => element.every(ea2 => !eql(ea, ea2)))\n  return before !== arr.length\n}\n\nexport function removeSame<T>(arr: T[], ...element: T[]): boolean {\n  const before = arr.length\n  filterInPlace(arr, ea => element.every(ea2 => ea !== ea2))\n  return before !== arr.length\n}\n\nexport function compact<T>(iter: MaybeNull<Iterable<T>>): Defined<T>[] {\n  // SITS: don't remove the toA: some callers may not give a proper iterable!\n  return iter == null ? [] : (filterInPlace(toA(iter), ea => ea != null) as any)\n}\n\nexport function compactBlanks<T>(iter: MaybeNull<Iterable<T>>): string[] {\n  // trim() to fix https://gitlab.com/mceachen/photostructure/issues/58\n  return iter == null\n    ? []\n    : toA(iter)\n        .map(ea => toS(ea).trim())\n        .filter(ea => ea.length > 0)\n}\n\nexport function compactBlankish<T>(iter: MaybeNull<Iterable<T>>): Defined<T>[] {\n  return iter == null ? [] : [...iter].filter(notBlankish)\n}\n\nexport function uniq<T>(arr: Maybe<Iterable<Maybe<T>>>): Defined<T>[] {\n  // PERF: if `arr` is empty or only 1 or 2 elements, maybe we don't have to\n  // call uniqBy:\n  if (arr == null) return []\n  const c = compact(arr)\n  if (c.length <= 1) return c\n  if (c.length < 10) {\n    const f = c[0]\n    if (c.every(ea => ea === f)) {\n      return [f]\n    }\n  }\n  return uniqBy(c, ea => (isPrimitive(ea) ? ea : stringify(ea)))\n}\n\nexport function uniqFirst<T>(arr: Maybe<Iterable<Maybe<T>>>): NonNullable<T>[] {\n  if (arr == null) return []\n  const result: NonNullable<T>[] = []\n  for (const ea of arr) {\n    if (ea != null && !eql(result[result.length - 1], ea)) {\n      result.push(ea as any)\n    }\n  }\n  return result\n}\n\nexport function uniqSubstrings(arr: Maybe<string>[]): string[] {\n  if (arr == null) return []\n  const strings = compact(arr)\n  if (arr.length === 0) return []\n  const result: string[] = []\n  for (const str of sortBy(strings, ea => [-ea.length, ea.toLowerCase()])) {\n    if (!result.some(ea => ea.includes(str))) {\n      result.push(str)\n    }\n  }\n  return sortBy(result, ea => strings.indexOf(ea))\n}\n\n/**\n * First-one-in-wins\n */\nexport function uniqBy<T, V extends Primitive>(\n  arr: Iterable<Maybe<T>>,\n  f: (t: T) => Maybe<V> = ea => stringify(ea) as V\n): T[] {\n  const m = new Map<V, T>()\n  for (const ea of arr) {\n    if (ea != null) {\n      const v = f(ea)\n      if (v != null) {\n        getOrSet(m, v, () => ea)\n      }\n    }\n  }\n  return [...m.values()]\n}\n\n/**\n * Last-one-in-wins\n */\nexport function uniqByLast<T, V extends Primitive>(\n  arr: Iterable<Maybe<T>>,\n  f: (t: T) => Maybe<V> = ea => stringify(ea) as V\n): T[] {\n  const m = new Map<V, T>()\n  for (const ea of arr) {\n    if (ea != null) {\n      const key = f(ea)\n      if (key != null) {\n        m.set(key, ea)\n      }\n    }\n  }\n  return [...m.values()]\n}\n\n/**\n * First-one-in-wins\n */\nexport function uniqBy2<T>(\n  arr: Maybe<T>[],\n  equals: (a: T, b: T) => boolean\n): T[] {\n  const result: T[] = []\n  for (const a of arr) {\n    if (a != null && result.every(b => !equals(a, b))) {\n      result.push(a)\n    }\n  }\n  return result\n}\n\nexport function clear<T>(arr: T[]): T[] {\n  arr.length = 0\n  return arr\n}\n\n/**\n * Equivalent to filtering all items in an array to a new array and calling\n * length. This method avoids creating the intermediate array.\n *\n * @return the number of elements in `arr` that `predicate` returns `true`.\n */\nexport function count<T>(\n  arr: T[],\n  predicate: (t: T, idx: number) => boolean\n): number {\n  return arr.reduce((acc, ea, idx) => acc + (predicate(ea, idx) ? 1 : 0), 0)\n}\n\n/**\n * Equivalent to mapping all items in an array to a new number array and calling\n * Vector.sum(). This method avoids creating the intermediate array.\n *\n * @return the sum of elements of `f`-transmuted numbers from `arr`.\n */\nexport function sum<T>(\n  arr: T[],\n  f: (t: T, currentIndex: number) => number\n): number {\n  return arr.reduce((acc, ea, idx) => acc + f(ea, idx), 0)\n}\n\nexport function firstMatch(\n  re: RegExp,\n  arr: Maybe<string>[]\n): Maybe<RegExpExecArray> {\n  for (const s of compact(arr)) {\n    const m = re.exec(s)\n    if (m != null) return m\n  }\n  return\n}\n\nexport function commonPrefixLength<T extends Primitive>(\n  a: Maybe<T[] | string>,\n  b: Maybe<T[] | string>\n): number {\n  if (a == null || b == null) return 0\n  if (a === b) return a.length\n  if (typeof a === \"string\") a = [...a] as T[]\n  if (typeof b === \"string\") b = [...b] as T[]\n  if (eqlArray(a, b)) return a.length\n  let result = 0\n  while (a[result] === b[result]) result++\n  return result\n}\n\n/**\n * Make random perturbations to `array` to minimize the given expense function\n */\nexport function anneal<T>({\n  array,\n  expense,\n  allowedDelta\n}: {\n  array: T[]\n  expense: (arr: T[], fromIndex: number, toIndex: number) => Comparable\n  allowedDelta: number\n}): T[] {\n  const delta = Math.round(allowedDelta)\n  if (delta < 2) return array\n  for (let mid = 0; mid < array.length - 1; mid++) {\n    const newPos = randomInt(\n      Math.max(0, mid - delta),\n      Math.min(array.length, mid + delta),\n      [mid]\n    )\n    if (newPos == null) continue\n    // the range is either [mid - 1, newPos + 1] or [newPos - 1, mid + 1]\n    const i = Math.max(0, Math.min(newPos, mid) - 1)\n    const j = Math.min(array.length, Math.max(newPos, mid) + 1)\n    const currentExpense = expense(array, i, j)\n    move(array, mid, newPos)\n    const newExpense = expense(array, i, j)\n    // undo the move if newExpense isn't better:\n    if (lt(currentExpense, newExpense)) {\n      move(array, newPos, mid)\n    }\n  }\n  return array\n}\n\n/**\n * @param from inclusive\n * @param to exclusive\n * @param f\n */\nexport function range<T = number>(\n  from: number,\n  to: number,\n  f: (i: number) => T = ea => ea as any\n): T[] {\n  return stepRange(from, to, 1, f)\n}\n\n/**\n * @param to return an array up to but not including `to`\n * @see https://docs.python.org/2/library/functions.html#range\n */\nexport function stepRange<T = number>(\n  from: number,\n  to: number,\n  step: number = 1,\n  f: (i: number) => T = ea => ea as any\n): T[] {\n  const r: T[] = []\n  if (from < to) {\n    for (let i = from; i < to; i += step) {\n      r.push(f(i))\n    }\n  } else {\n    for (let i = from; i > to; i -= step) {\n      r.push(f(i))\n    }\n  }\n  return r\n}\n\nexport const primitiveValueOfOrElse = (a: any) => {\n  if (isPrimitive(a)) {\n    return a\n  }\n  // [].valueOf() is worthless, so use json\n  if (Array.isArray(a)) {\n    return stringify(a)\n  }\n  if (isFunction(a.valueOf)) {\n    return a.valueOf()\n  } else {\n    throw new Error(\"Cannot get primitive value for \" + JSON.stringify(a))\n  }\n}\n\n/**\n * `minuend - subtrahend`.\n *\n * @template T must have a .valueOf() implementation\n * @param {T[]} minuend (haystack)\n * @param {T[]} subtrahend (needles)\n * @returns {T[]} values in `minuend` that, according to `.valueOf()`, are\n * not in `subtrahend`. Neither arg is mutated.\n */\nexport function diff<T>(\n  minuend: MaybeReadonlyArray<T>,\n  subtrahend: T[],\n  valueOf: (t: T) => Primitive = primitiveValueOfOrElse\n): T[] {\n  const s = new Set(subtrahend.map(valueOf))\n  return minuend.filter(ea => !s.has(valueOf(ea)))\n}\n\nexport function last<T>(arr: Maybe<T[]>): Maybe<T> {\n  return arr != null ? arr[arr.length - 1] : undefined\n}\n\nexport function commaList(arr: string[], finalJoin = \"or\"): string {\n  if (arr.length <= 1) return arr.join(\"\")\n  if (arr.length === 2) return arr.join(\" \" + finalJoin + \" \")\n  return (\n    arr.slice(0, -1).join(\", \") + \", \" + finalJoin + \" \" + arr[arr.length - 1]\n  )\n}\n\nexport function arrToIterator<T>(arr: T[]): IterableIterator<T> {\n  return arr[Symbol.iterator]()\n}\n\nexport function arrayEndsWith<T extends Comparable>(\n  arr: T[],\n  suffix: T[]\n): boolean {\n  if (arr.length < suffix.length) return false\n  for (let i = 0; i < suffix.length; i++) {\n    // PERF: avoids the slice (and subsequent GC)\n    if (arr[arr.length - suffix.length + i] !== suffix[i]) return false\n  }\n  return true\n}\n","export function copyArrayTo<T>(source: T[], destination: T[]): T[] {\n  for (let i = 0; i < source.length; i++) {\n    destination[i] = source[i]\n  }\n  destination.length = source.length\n  return destination\n}\n","import { compact, toPrimitive } from \"./Array\"\nimport { copyArrayTo } from \"./ArrayCopy\"\nimport { isIterable } from \"./Iterable\"\nimport { stringify } from \"./JSON\"\nimport { getOrSet } from \"./Map\"\nimport { Defined, map } from \"./Maybe\"\nimport { Maybe } from \"./MaybeTypes\"\nimport {\n  Comparable,\n  Primitivable,\n  Primitivables,\n  Primitive,\n  cmp\n} from \"./Primitive\"\nimport { toA } from \"./toA\"\n\nexport function sort<\n  T extends Primitive | Primitive[] | Primitivable | Primitivables\n>(arr: Maybe<T>[] | ReadonlyArray<Maybe<T>>): Defined<T>[] {\n  return sortByInPlace(compact(arr), toPrimitive)\n}\n\nexport function sortByInPlace<T>(arr: T[], f: (t: T) => Comparable): T[] {\n  return copyArrayTo(sortBy(arr, f), arr)\n}\n\nexport function sortUniqBy<T>(arr: T[], f: (t: T) => Comparable): T[] {\n  const m = new Map<string, T>()\n  for (const ea of arr) {\n    getOrSet(m, stringify(f(ea)), () => ea)\n  }\n  return sortBy(m.values(), f)\n}\n\nexport function sortUniq<T extends Comparable>(arr: T[]): T[] {\n  return sortUniqBy(arr, ea => ea)\n}\n\nexport function sortUniqByInPlace<T>(arr: T[], f: (t: T) => Comparable): T[] {\n  return copyArrayTo(sortUniqBy(arr, f), arr)\n}\n\nexport function isSorted(arr: Primitivable[]): boolean {\n  return arr.every((ea, idx) => idx === 0 || ea > arr[idx - 1])\n}\n\nexport function sortedBy<T>(arr: T[], f: (t: T) => Primitive): boolean {\n  return arr.every((ea, idx) => idx === 0 || f(ea) > f(arr[idx - 1]))\n}\n/**\n * Returns a copy of arr, stable sorted by the given constraint. Note that false\n * < true, and that `f` may return an array for sort priorities, or undefined if\n * the item should be skipped from the returned result.\n *\n * Note: localeSort() thinks lower case should come before upper case (!!)\n */\n\nexport function sortBy<T>(\n  arr: Iterable<Maybe<T>> | Maybe<T>[],\n  f: (t: T, index: number) => Maybe<Comparable | Comparable[]>\n): T[] {\n  return (toA(arr).filter(ea => ea != null) as T[])\n    .map((item, idx) => ({\n      item,\n      cmp: map(f(item, idx), ea => [ea, idx])\n    }))\n    .filter(ea => ea.cmp != null)\n    .sort((a, b) => cmp(a.cmp!, b.cmp!))\n    .map(ea => ea.item)\n}\n\nexport function deepSortBy<T, V extends Primitive | Primitive[]>(\n  arr: Iterable<T> | T[],\n  f: (t: T) => Maybe<V>\n): T[] {\n  return sortBy(arr, f).map(ea =>\n    isIterable(ea) ? deepSortBy(ea, f) : ea\n  ) as any // SITS typing\n}\n\nexport function pushSorted<T>(\n  arr: T[],\n  item: T,\n  f: (t: T) => Comparable | Comparable[]\n): T[] {\n  const idx = arr.findIndex(ea => f(item) < f(ea))\n  if (idx === -1) {\n    arr.push(item)\n  } else {\n    arr.splice(idx, 0, item)\n  }\n  return arr\n}\n","import { isFunction } from \"./isFunction\"\n\nexport type AsPromiseable<T> =\n  | T\n  | Promise<T>\n  | (() => T | Promise<T>)\n  | Promise<() => T | Promise<T>>\n\nexport async function asPromise<T>(o: AsPromiseable<T>): Promise<T> {\n  const a = await o\n  return isFunction(a) ? a() : a\n}\n","import { id2id, IDish } from \"./api/ID\"\nimport { compact } from \"./Array\"\nimport { blank } from \"./Blank\"\nimport { fmtLocalToShort } from \"./Date\"\nimport { ReducerName, ReducerNames } from \"./ImageReducers\"\nimport { SqWidths } from \"./ImageSizes\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { numericOr } from \"./Number\"\nimport { StringValued } from \"./Object\"\nimport { ThumbSize } from \"./ThumbSizes\"\nimport { toS } from \"./toS\"\nimport {\n  assembleFullPath,\n  mergeURLSearchParams,\n  URLSearchParamable\n} from \"./URLSearchParams\"\nimport { ua } from \"./UserAgent\"\nimport { isSafari } from \"./UserAgents\"\n\nfunction mkSrcSet(url: string, width: number) {\n  return url + \" \" + width + \"w\"\n}\n\nfunction toQuery(assetId: IDish, params?: Maybe<URLSearchParamable>[]) {\n  let result = params == null ? undefined : mergeURLSearchParams(...params)\n  const v = toS((assetId as any)[\"v\"])\n  if (!blank(v) && v !== \"1\") {\n    ;(result ??= new URLSearchParams()).append(\"v\", v)\n  }\n  return result\n}\n\nexport function assetUrl({\n  assetId,\n  params\n}: {\n  assetId: IDish\n  params?: Maybe<URLSearchParamable>[]\n}) {\n  return assetId == null\n    ? \"\"\n    : assembleFullPath(\"/asset/\" + id2id(assetId), toQuery(assetId, params))\n}\n\nexport function assetLinkAttrs({\n  assetId,\n  params\n}: {\n  assetId: IDish\n  params?: Maybe<URLSearchParamable>[]\n}) {\n  const href = assetUrl({ assetId, params })\n  return blank(href) ? {} : { href }\n}\n\n/**\n * resized preview image\n */\nexport function assetImgLink({\n  assetId,\n  reducer,\n  width,\n  params\n}: {\n  assetId: IDish\n  reducer: ReducerName\n  width: number\n  params?: Maybe<URLSearchParamable>[]\n}) {\n  // Must match ImgRouter:\n  return assembleFullPath(\n    `/img/${id2id(assetId)}/${reducer}/${width}`,\n    toQuery(assetId, params)\n  )\n}\n\n/**\n * Sends the full \"shown\" asset\n */\nexport function assetImgActualLink({\n  assetId,\n  assetFileId,\n  params\n}: {\n  assetId: IDish\n  assetFileId?: number\n  params?: Maybe<URLSearchParamable>[]\n}) {\n  // Must match ImgActualRouter:\n  return assembleFullPath(\n    `/img/${compact([id2id(assetId), assetFileId]).join(\"/\")}/actual`,\n    toQuery(assetId, params)\n  )\n}\n\nexport function assetVideoLink({\n  assetId,\n  assetFileId,\n  params\n}: {\n  assetId: IDish\n  assetFileId: number\n  params?: Maybe<URLSearchParamable>[]\n}): string {\n  return assembleFullPath(\n    `/video/${id2id(assetId)}-${assetFileId}`,\n    toQuery(assetId, params)\n  )\n}\n\nexport function assetSqImgAttrs({\n  assetId,\n  params,\n  lazyLoad,\n  size = \"m\"\n}: {\n  assetId: IDish\n  params?: Maybe<URLSearchParamable>[]\n  lazyLoad?: boolean\n  size?: ThumbSize\n}) {\n  return {\n    ...assetImgAttrs({\n      assetId,\n      params,\n      reducer: \"sq\",\n      widths: SqWidths,\n      lazyLoad\n    }),\n    // This is only directionally accurate. It's the max size expected for the\n    // given thumb size.\n    sizes:\n      (size === \"s\" ? 80 : size === \"m\" ? 160 : 320) *\n        numericOr((globalThis as any)?.window?.devicePixelRatio, 1) +\n      \"px\"\n  }\n}\n\nexport function assetImgAttrs({\n  assetId,\n  params,\n  reducer,\n  widths,\n  lazyLoad,\n  af\n}: {\n  assetId: IDish\n  params?: Maybe<URLSearchParamable>[]\n  reducer: ReducerName\n  widths: number[]\n  lazyLoad?: boolean\n  af?: { assetFileId: number; width: number }\n}) {\n  const id = id2id(assetId)\n  if (id == null) {\n    return { src: \"/images/clear-64.png\" }\n  }\n  const width = Math.min(...widths)\n  const attrs: StringValued = { width: toS(width) }\n  const title = fmtLocalToShort((assetId as any)[\"capturedAtLocal\"])\n  if (title != null) {\n    attrs.title = title\n  }\n  const src = assetImgLink({ assetId, params, reducer, width })\n  // TODO: safari and safari mobile doesn't support lazy loading.\n  lazyLoad ??= true\n  const laterLoad = lazyLoad && isSafari(ua())\n\n  if (laterLoad) {\n    attrs.src = \"/images/clear-64.png\"\n    attrs[\"data-src\"] = src\n  } else {\n    attrs.src = src\n  }\n\n  if (!isSafari(ua())) {\n    // safari doesn't support loading yet.\n    attrs.loading = lazyLoad ? \"lazy\" : \"eager\"\n  }\n\n  if (reducer === ReducerNames.sq) {\n    // attrs.sizes is set in the frontend based on the current thumbnail size.\n    attrs.height = toS(width)\n  }\n  const srcSetArr = widths.map(w =>\n    mkSrcSet(assetImgLink({ assetId, params, reducer, width: w }), w)\n  )\n  if (af != null) {\n    srcSetArr.push(\n      mkSrcSet(\n        assetImgActualLink({ assetId, params, assetFileId: af.assetFileId }),\n        af.width\n      )\n    )\n  }\n  attrs[(laterLoad ? \"data-\" : \"\") + \"srcSet\"] = srcSetArr.join(\",\")\n  return attrs\n}\n","import { delay } from \"./Delay\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { gt0 } from \"./Number\"\nimport { SyncOrAsync } from \"./SyncOrAsync\"\nimport { thenOrTimeoutError } from \"./ThenOrTimeout\"\nimport { toErr } from \"./toErr\"\n\nexport async function retryOnReject<T>(\n  f: () => SyncOrAsync<T>,\n  opts: {\n    maxRetries: number\n    timeoutMs?: number\n    retryDelay?: number\n    onRetryWaitUntil?: (retryCount: number) => any\n    errorIsRetriable?: (error: Error) => Maybe<boolean>\n  }\n): Promise<T> {\n  const g = gt0(opts.timeoutMs)\n    ? () => thenOrTimeoutError(f(), opts.timeoutMs!)\n    : f\n\n  if (opts.maxRetries <= 0) {\n    return g()\n  }\n  const onRetryWaitUntil =\n    opts.onRetryWaitUntil ??\n    ((retry: number) =>\n      delay(Math.max(250, (opts.retryDelay ?? 250) * (retry ?? 1))))\n\n  let retryCount = 0\n  const h: () => Promise<T> = async () => {\n    try {\n      return await g()\n    } catch (err) {\n      const error = toErr(err)!\n      if (\n        false === opts.errorIsRetriable?.(error) ||\n        retryCount > opts.maxRetries\n      ) {\n        throw error\n      } else {\n        retryCount++\n        await onRetryWaitUntil(retryCount)\n        return h()\n      }\n    }\n  }\n  return h()\n}\n","import { Maybe } from \"./MaybeTypes\"\n\n/**\n * @see https://github.com/tc39/proposal-relative-indexing-method#polyfill\n */\nexport function at<T>(arr: Maybe<T[]>, i: number) {\n  if (arr == null) return\n  // ToInteger() abstract op\n  i = Math.trunc(i) || 0\n  // Allow negative indexing from the end\n  if (i < 0) i += arr.length\n  // OOB access is guaranteed to return undefined\n  if (i < 0 || i >= arr.length) return undefined\n  // Otherwise, this is just normal property access\n  return arr[i]\n}\n","import { compactBlankish } from \"./Array\"\nimport { blank } from \"./Blank\"\nimport { flatten } from \"./Flatten\"\nimport { replaceAllMatches } from \"./RegExp\"\nimport { toS } from \"./toS\"\n\nexport function md2html(markdown: string) {\n  let result = markdown\n    // escape html, then add code blocks, bold, and list items\n    .replace(/</g, \"&lt;\")\n    // horizontal rule:\n    .replace(/^---$/gm, \"<hr/>\")\n    // Handle lists:\n    .replace(/^ *- (.*?)$/gm, (_, s) => \"<li>\" + s.trim() + \"</li>\")\n\n  result = replaceAllMatches(\n    result,\n    /```([^`]+?)```/g,\n    m => `<code>${m[1]}</code>`\n  )\n  result = replaceAllMatches(result, /\\*\\*([^\\*]+?)\\*\\*/, m => `<b>${m[1]}</b>`)\n\n  return result\n}\n\nexport function tt(str: any) {\n  return blank(str) ? \"\" : \"```\" + toS(str) + \"```\"\n}\n\nexport function b(str: any) {\n  return \"**\" + toS(str) + \"**\"\n}\n\nexport function li(...arr: any[]) {\n  return compactBlankish(flatten(arr))\n    .map((s: any) => \"- \" + toS(s))\n    .join(\"\\n\")\n}\n","import { Defined, orElse } from \"./Maybe\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { toS } from \"./toS\"\n\n/**\n * @return true if o is nullish, an empty string, or only whitespace.\n */\nexport function blank(o: any): o is undefined {\n  // PERF: unrolled from Opt\n  return o == null || o === \"\"\n    ? true\n    : typeof o === \"string\"\n    ? o.trim() === \"\"\n    : false\n}\n\nexport function notBlank<T>(s: T): s is Defined<T> {\n  return !blank(s)\n}\n\nexport function notBlankToS(s: Maybe<any>) {\n  return notBlank(s) && s !== \"undefined\" ? toS(s).trim() : undefined\n}\n\n/** aka \"trimToUndefined\" */\nexport function toNotBlank(o: any): Maybe<string> {\n  if (o == null) return\n  const s = toS(o)\n  return s.length === 0 || s.trim().length === 0 ? undefined : s\n}\n\n/**\n * Equivalent to `Opt(s).flatMap(toS).filter(notBlank).getOrElse(() => orElse)`\n */\nexport function notBlankOr(s: any, ifBlank: ThunkOrT<string>): string {\n  if (s == null) return tot(ifBlank)\n  const str = toS(s).trim()\n  return str.length > 0 ? str : tot(ifBlank)\n}\n\nexport function notBlankAnd(s: any, f: (ea: string) => boolean): boolean {\n  return !blank(s) ? f(s) : false\n}\n\nexport function mapNotBlank<T>(arg: any, f: (s: string) => T): Maybe<T> {\n  if (arg === false || arg == null || arg === \"\") {\n    return undefined\n  }\n  const s = toS(arg)\n  return notBlank(s) ? f(s!) : undefined\n}\n\nexport function mapNotBlankOr<T>(\n  arg: any,\n  f: (s: string) => T,\n  defaultValue: T | (() => T)\n): T {\n  return orElse(mapNotBlank(arg, f), defaultValue)\n}\n\nexport function firstNotBlank(...arr: MaybeNull<string>[]): Maybe<string> {\n  // PERF: unrolled\n  for (const ea of arr) {\n    if (typeof ea === \"string\" && ea.trim().length > 0) return ea\n  }\n  return\n}\n\nconst BlankishRE = /^\\s*(?:null|undefined)?\\s*$/i\n\nexport function blankish(s: any): s is undefined {\n  return s == null || BlankishRE.exec(toS(s)) != null\n}\n\nexport function notBlankish<T>(s: T): s is Defined<T> {\n  return !blankish(s)\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\n\nexport function isBoolean(object: any): object is boolean {\n  return typeof object === \"boolean\"\n}\n\n/**\n * (Fairly) strict coercion to true.\n *\n * @return false unless `o` is `true` or `1` (or stringifies to \"true\" or \"1\")\n */\nexport function isTrue(o: any): boolean {\n  if (typeof o === \"boolean\") {\n    return o\n  } else if (o == null) {\n    return false\n  } else if (o === 1) {\n    return true\n  } else {\n    const s = String(o).toLowerCase().trim()\n    return [\"true\", \"1\"].includes(s)\n  }\n}\n\n/**\n * (Fairly) strict coercion to boolean. If parsing fails, returns undefined.\n */\nexport function toBoolean(o: any): Maybe<boolean> {\n  return isTrue(o) ? true : isFalse(o) ? false : undefined\n}\n\nexport function boolToInt(o: any) {\n  return isTrue(o) ? 1 : 0\n}\n\n/**\n * (Fairly) strict coercion to false.\n *\n * @return false unless `o` is `false` or `0` (or stringifies to \"false\" or\n * \"0\")\n */\nexport function isFalse(o: any, ...synonyms: string[]): boolean {\n  if (typeof o === \"boolean\") return !o\n  if (o == null) return false\n  if (o === 0) return true\n  const s = String(o).toLowerCase()\n  return [\"false\", \"0\", ...synonyms].map(ea => ea.toLowerCase()).includes(s)\n}\n\nexport function isDisabled(o: any): boolean {\n  return isFalse(o, \"no\", \"disable\", \"disabled\")\n}\n\nexport function or(arr: any[]): boolean {\n  return arr.some(ea => isTrue(ea))\n}\n\nexport function and(arr: any[]): boolean {\n  return arr.every(ea => isTrue(ea))\n}\n\n/**\n * @return true if `arr` has at least one `true` and no `false` entries\n */\nexport function maybeAnd(arr: Maybe<boolean>[]): Maybe<boolean> {\n  let result: Maybe<boolean>\n  for (const ea of arr) {\n    if (ea === false) return false\n    if (ea === true) result = true\n  }\n  return result\n}\n\nexport function mapBoolean<T>(obj: any, f: (b: boolean) => T): Maybe<T> {\n  return isTrue(obj) ? f(true) : isFalse(obj) ? f(false) : undefined\n}\n\nexport function mapTrue<T>(b: any, f: () => T): Maybe<T> {\n  return isTrue(b) ? f() : undefined\n}\n","import { stringify } from \"./JSON\"\n\nexport function clone<T>(obj: T): T {\n  return obj == null ? obj : JSON.parse(stringify(obj))\n}\n\nexport function shallowClone<T>(obj: T): T {\n  return Array.isArray(obj)\n    ? [...obj]\n    : typeof obj === \"object\"\n    ? { ...obj }\n    : (obj as any)\n}\n","import { isEmpty } from \"./Array\"\nimport { blank } from \"./Blank\"\nimport { lazy } from \"./Lazy\"\nimport { map, mapOr } from \"./Maybe\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { isNumber, toFixedStr } from \"./Number\"\nimport { pad2, pad3 } from \"./Pad\"\nimport { ensurePrefix } from \"./String\"\nimport { plur } from \"./Units\"\n\nexport const secondMs = 1000\nexport const minuteMs = 60 * secondMs\nexport const hourMs = 60 * minuteMs\nexport const dayMs = 24 * hourMs\nexport const weekMs = 7 * dayMs\n/** TRY TO AVOID USING THIS (it's 32 * dayMs) */\nexport const monthMs = 32 * dayMs\nexport const yearMs = 365.25 * dayMs\n\nconst shortDateTimeFormat = lazy(\n  () =>\n    new Intl.DateTimeFormat(undefined, {\n      // weekday: \"short\",\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\"\n    })\n)\nconst shortDateFormat = lazy(\n  () =>\n    new Intl.DateTimeFormat(undefined, {\n      day: \"numeric\",\n      year: \"numeric\",\n      month: \"short\"\n    })\n)\n\nexport function toDate(d: Date | number): Date {\n  return d instanceof Date ? d : new Date(d)\n}\n\nexport function fmtDateShort(d: Date | number) {\n  if (d == null) return\n  return d instanceof Date &&\n    d.getHours() === 0 &&\n    d.getMinutes() === 0 &&\n    d.getSeconds() === 0\n    ? shortDateFormat().format(d)\n    : shortDateTimeFormat().format(d)\n}\n\n/**\n * split an HMS string into a (possibly empty) prefix of zeroes and the remaining suffix.\n */\nexport function splitHMS(hms: string): string[] {\n  return mapOr(\n    /^[0:]{1,4}/.exec(hms),\n    m => [m[0], hms.slice(m[0].length)],\n    () => [\"\", hms]\n  )\n}\n\nexport function isDate(obj: any): obj is Date {\n  return obj instanceof Date\n}\n\nexport function thisYear() {\n  return new Date().getFullYear()\n}\n\n/**\n * @return Date `deltaMs` in the past\n */\nexport function ago(deltaMs: number, from?: Date): Date {\n  return new Date((from?.getTime() ?? Date.now()) - deltaMs)\n}\n\n/**\n * @return Date `deltaMs` in the future\n */\nexport function hence(deltaMs: number, from?: Date): Date {\n  return ago(-deltaMs, from)\n}\n\nexport function unixtime(d?: Date | number): number {\n  const ms = isDate(d) ? d.getTime() : isNumber(d) ? d : Date.now()\n  return Math.floor(ms / secondMs)\n}\n\n/**\n * Appropriate for filenames: yMMddHHmmss\n */\nexport function fmtYMDHMS(arg: Date | number): string {\n  const d = toDate(arg)\n  return (\n    d.getFullYear() +\n    pad2(d.getMonth() + 1) +\n    pad2(d.getDate()) +\n    pad2(d.getHours()) +\n    pad2(d.getMinutes()) +\n    pad2(d.getSeconds())\n  )\n}\n\n/**\n * Format millis duration in HH:MM:SS.sss\n */\nexport function fmtHMS(\n  ms: number,\n  opts: { includeMs: boolean } = { includeMs: true }\n): string {\n  const h = Math.floor(ms / hourMs)\n  ms -= h * hourMs\n  const m = Math.floor(ms / minuteMs)\n  ms -= m * minuteMs\n  const s = Math.floor(ms / secondMs)\n  const millis = Math.floor(ms - s * secondMs)\n  return (\n    pad2(h) +\n    \":\" +\n    pad2(m) +\n    \":\" +\n    pad2(s) +\n    (opts.includeMs ? \".\" + pad3(millis) : \"\")\n  )\n}\n\nconst Units = [\n  { ms: yearMs, s: \"Y\" },\n  { ms: weekMs, s: \"W\" },\n  { ms: dayMs, s: \"D\" },\n  { ms: hourMs, s: \"H\" },\n  { ms: minuteMs, s: \"M\" }\n]\n\nexport function fmtIsoDuration(ms: number): string {\n  if (ms === 0) return \"PT0S\"\n  const dateParts: string[] = []\n  const timeParts: string[] = []\n  for (const unit of Units.slice(Units.findIndex(ea => ea.ms <= ms!))) {\n    const i = Math.floor(ms / unit.ms)\n    ms -= i * unit.ms\n    if (i > 0) (unit.ms >= dayMs ? dateParts : timeParts).push(i + unit.s)\n  }\n  if (ms > 0) {\n    timeParts.push(toFixedStr(ms / secondMs, 3) + \"S\")\n  }\n  return (\n    \"P\" +\n    dateParts.join(\"\") +\n    (isEmpty(timeParts) ? \"\" : \"T\" + timeParts.join(\"\"))\n  )\n}\n\n/**\n * ISO-formatted datestamp: y-MM-dd\n */\nexport function fmtIsoDate(ts: Date | number): string {\n  const d = isDate(ts) ? ts : new Date(ts)\n  return (\n    d.getFullYear() + \"-\" + pad2(d.getMonth() + 1) + \"-\" + pad2(d.getDate())\n  )\n}\n\nexport function localToDate(local: Maybe<number>): Maybe<Date> {\n  if (local == null || local < 0) return\n  let i = local\n  const pop2 = () => {\n    const result = i % 100\n    i = Math.floor(i / 100)\n    return result\n  }\n  const millisecond = 10 * pop2()\n  const second = pop2()\n  const minute = pop2()\n  const hour = pop2()\n  const day = pop2()\n  const month = pop2()\n  const year = i\n  return new Date(year, month - 1, day, hour, minute, second, millisecond)\n}\n\nexport function fmtLocalToShort(cs: number): Maybe<string> {\n  return map(localToDate(cs), fmtDateShort)\n}\n\nexport function nextMidnightTs() {\n  return new Date().setHours(24, 0, 0, 0)\n}\n\nexport function msUntilMidnight() {\n  // .setHours() returns getTime() (!?!)\n  return nextMidnightTs() - Date.now()\n}\n\nexport function fmtAgo(ts: number, suffix = \"ago\"): string {\n  return fmtElapsedMs(Date.now() - ts, suffix)\n}\n\nexport function fmtElapsedMs(ms: number, suffix = \"ago\"): string {\n  if (ms < 1000) return \"just now\"\n  suffix = blank(suffix) ? \"\" : ensurePrefix(suffix, \" \")\n  if (ms < minuteMs) return plur(Math.floor(ms / secondMs), \"second\") + suffix\n  if (ms < hourMs) return plur(Math.floor(ms / minuteMs), \"minute\") + suffix\n  if (ms < dayMs) return plur(Math.floor(ms / hourMs), \"hour\") + suffix\n  if (ms < weekMs) return plur(Math.floor(ms / dayMs), \"day\") + suffix\n  if (ms < yearMs) return plur(Math.floor(ms / weekMs), \"week\") + suffix\n  return plur(Math.floor(ms / yearMs), \"year\") + suffix\n}\n","/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nimport { isBoolean } from \"./Boolean\"\n\nconst type_detect = require(\"type-detect\")\n\nexport interface MemoizeMap extends WeakMap<object, WeakMap<object, boolean>> {}\n\nexport interface DeepEqlOptions<T1 = unknown, T2 = unknown> {\n  /**\n   * Override default algorithm, determining custom equality.\n   */\n  comparator?: (\n    leftHandOperand: T1,\n    rightHandOperand: T2,\n    keyname?: string | symbol\n  ) => boolean | null\n\n  /**\n   * Provide a custom memoization object which will cache the results of\n   * complex objects for a speed boost.\n   *\n   * By passing `false` you can disable memoization, but this will cause circular\n   * references to blow the stack.\n   */\n  memoize?: MemoizeMap | false\n}\n\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n */\nfunction memoizeCompare(\n  leftHandOperand: any,\n  rightHandOperand: any,\n  memoizeMap?: MemoizeMap\n): boolean | null {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (\n    memoizeMap == null ||\n    isPrimitive(leftHandOperand) ||\n    isPrimitive(rightHandOperand)\n  ) {\n    return null\n  }\n  const result = memoizeMap.get(leftHandOperand)?.get(rightHandOperand)\n  if (typeof result === \"boolean\") {\n    return result\n  }\n  return null\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n */\nfunction memoizeSet(\n  leftHandOperand: any,\n  rightHandOperand: any,\n  memoizeMap: MemoizeMap | undefined,\n  result: boolean\n) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (\n    memoizeMap == null ||\n    isPrimitive(leftHandOperand) ||\n    isPrimitive(rightHandOperand)\n  ) {\n    return\n  }\n  let leftHandMap = memoizeMap.get(leftHandOperand)\n  if (leftHandMap != null) {\n    leftHandMap.set(rightHandOperand, result)\n  } else {\n    leftHandMap = new WeakMap()\n    leftHandMap.set(rightHandOperand, result)\n    memoizeMap.set(leftHandOperand, leftHandMap)\n  }\n}\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm,\n * determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization\n    object which will cache the results of complex objects for a speed boost.\n    By passing `false` you can disable memoization, but this will cause\n    circular references to blow the stack.\n * @return {Boolean} equal match\n */\nexport function deepEql<T1 = unknown, T2 = unknown>(\n  leftHandOperand: T1,\n  rightHandOperand: T2,\n  options?: DeepEqlOptions<T1, T2> | undefined\n): boolean {\n  options ??= {}\n  if (false !== options.memoize) {\n    options.memoize ??= new WeakMap()\n  }\n  return _deepEqual(leftHandOperand, rightHandOperand, options)\n}\n\nfunction _deepEqual<T1 = unknown, T2 = unknown>(\n  leftHandOperand: T1,\n  rightHandOperand: T2,\n  options?: DeepEqlOptions<T1, T2> | undefined,\n  key?: string | symbol\n): boolean {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options?.comparator != null) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options, key)\n  }\n\n  const simpleResult = simpleEqual(leftHandOperand, rightHandOperand)\n  if (simpleResult !== null) {\n    return simpleResult\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options)\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand: any, rightHandOperand: any) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false\n  }\n  return null\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual<T1 = unknown, T2 = unknown>(\n  leftHandOperand: T1,\n  rightHandOperand: T2,\n  options: DeepEqlOptions<T1, T2> | undefined,\n  key?: string | symbol\n): boolean {\n  options ??= {}\n  const memoize: MemoizeMap | undefined =\n    options.memoize === false\n      ? undefined\n      : (options.memoize ??= new WeakMap() as any)\n  const comparator = options?.comparator\n\n  // Check if a memoized result exists.\n  const memoizeResultLeft = memoizeCompare(\n    leftHandOperand,\n    rightHandOperand,\n    memoize\n  )\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft\n  }\n  const memoizeResultRight = memoizeCompare(\n    rightHandOperand,\n    leftHandOperand,\n    memoize\n  )\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    const comparatorResult = comparator(leftHandOperand, rightHandOperand, key)\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, memoize, comparatorResult)\n      return comparatorResult\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    const simpleResult = simpleEqual(leftHandOperand, rightHandOperand)\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult\n    }\n  }\n\n  const leftHandType = type_detect(leftHandOperand)\n  if (leftHandType !== type_detect(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, memoize, false)\n    return false\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, memoize, true)\n\n  const result = extensiveDeepEqualByType(\n    leftHandOperand,\n    rightHandOperand,\n    leftHandType,\n    options as any\n  )\n  memoizeSet(leftHandOperand, rightHandOperand, memoize, result)\n  return result\n}\n\nfunction extensiveDeepEqualByType(\n  leftHandOperand: any,\n  rightHandOperand: any,\n  leftHandType: string,\n  options?: DeepEqlOptions | undefined\n) {\n  switch (leftHandType) {\n    case \"String\":\n    case \"Number\":\n    case \"Boolean\":\n    case \"Date\":\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return _deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf())\n    case \"Promise\":\n    case \"Symbol\":\n    case \"function\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return leftHandOperand === rightHandOperand\n    case \"Error\":\n      return keysEqual(\n        leftHandOperand,\n        rightHandOperand,\n        [\"name\", \"message\", \"code\"],\n        options\n      )\n    case \"Arguments\":\n    case \"Int8Array\":\n    case \"Uint8Array\":\n    case \"Uint8ClampedArray\":\n    case \"Int16Array\":\n    case \"Uint16Array\":\n    case \"Int32Array\":\n    case \"Uint32Array\":\n    case \"Float32Array\":\n    case \"Float64Array\":\n    case \"Array\":\n      return iterableEqual(leftHandOperand, rightHandOperand, options)\n    case \"RegExp\":\n      return regexpEqual(leftHandOperand, rightHandOperand)\n    case \"Generator\":\n      return generatorEqual(leftHandOperand, rightHandOperand, options)\n    case \"DataView\":\n      return iterableEqual(\n        new Uint8Array(leftHandOperand.buffer),\n        new Uint8Array(rightHandOperand.buffer),\n        options\n      )\n    case \"ArrayBuffer\":\n      return iterableEqual(\n        new Uint8Array(leftHandOperand),\n        new Uint8Array(rightHandOperand),\n        options\n      )\n    case \"Set\":\n      return entriesEqual(leftHandOperand, rightHandOperand, options)\n    case \"Map\":\n      return entriesEqual(leftHandOperand, rightHandOperand, options)\n    case \"Temporal.PlainDate\":\n    case \"Temporal.PlainTime\":\n    case \"Temporal.PlainDateTime\":\n    case \"Temporal.Instant\":\n    case \"Temporal.ZonedDateTime\":\n    case \"Temporal.PlainYearMonth\":\n    case \"Temporal.PlainMonthDay\":\n      return leftHandOperand.equals(rightHandOperand)\n    case \"Temporal.Duration\":\n      return (\n        leftHandOperand.total(\"nanoseconds\") ===\n        rightHandOperand.total(\"nanoseconds\")\n      )\n    case \"Temporal.TimeZone\":\n    case \"Temporal.Calendar\":\n      return leftHandOperand.toString() === rightHandOperand.toString()\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options)\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand: RegExp, rightHandOperand: RegExp) {\n  return leftHandOperand.toString() === rightHandOperand.toString()\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(\n  leftHandOperand: Set<any> | Map<any, any>,\n  rightHandOperand: Set<any> | Map<any, any>,\n  options?: DeepEqlOptions | undefined\n): boolean {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false\n  }\n  if (leftHandOperand.size === 0) {\n    return true\n  }\n  const leftHandItems: any[] = []\n  const rightHandItems: any[] = []\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([key, value])\n  })\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([key, value])\n  })\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options)\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(\n  leftHandOperand: ArrayLike<any>,\n  rightHandOperand: ArrayLike<any>,\n  options?: DeepEqlOptions | undefined\n): boolean {\n  const length = leftHandOperand.length\n  if (length !== rightHandOperand.length) {\n    return false\n  }\n  if (length === 0) {\n    return true\n  }\n  let index = -1\n  while (++index < length) {\n    if (\n      _deepEqual(leftHandOperand[index], rightHandOperand[index], options) ===\n      false\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(\n  leftHandOperand: Iterator<any>,\n  rightHandOperand: Iterator<any>,\n  options?: DeepEqlOptions | undefined\n): boolean {\n  return iterableEqual(\n    getGeneratorEntries(leftHandOperand),\n    getGeneratorEntries(rightHandOperand),\n    options\n  )\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target: any): boolean {\n  return (\n    typeof Symbol !== \"undefined\" &&\n    typeof target === \"object\" &&\n    typeof Symbol.iterator !== \"undefined\" &&\n    typeof target[Symbol.iterator] === \"function\"\n  )\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target: any): any[] {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]())\n    } catch (iteratorError) {\n      return []\n    }\n  }\n  return []\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator: Iterator<any>): any[] {\n  let generatorResult = generator.next()\n  const accumulator = [generatorResult.value]\n  while (generatorResult.done === false) {\n    generatorResult = generator.next()\n    accumulator.push(generatorResult.value)\n  }\n  return accumulator\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target: any): string[] {\n  const keys = []\n  for (const key in target) {\n    if (target[key] !== undefined) keys.push(key)\n  }\n  return keys\n}\n\nfunction getEnumerableSymbols(target: any): symbol[] {\n  const keys = []\n  const allKeys = Object.getOwnPropertySymbols(target)\n  for (let i = 0; i < allKeys.length; i += 1) {\n    const key = allKeys[i]\n    if (Object.getOwnPropertyDescriptor(target, key)?.enumerable === true) {\n      keys.push(key)\n    }\n  }\n  return keys\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(\n  leftHandOperand: any,\n  rightHandOperand: any,\n  keys: (string | symbol)[],\n  options?: DeepEqlOptions | undefined\n): boolean {\n  const length = keys.length\n  if (length === 0) {\n    return true\n  }\n  for (let i = 0; i < length; i += 1) {\n    const key = keys[i]\n    const lhs = leftHandOperand[key]\n    const rhs = rightHandOperand[key]\n    if (typeof lhs === \"function\" && typeof rhs === \"function\") {\n      if (lhs.toString() !== rhs.toString()) {\n        return false\n      }\n    } else {\n      const eql = _deepEqual(lhs, rhs, options, key)\n      if (eql === false) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been\n * established it will defer to `deepEqual` for each enumerable key in the\n * object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction objectEqual(\n  leftHandOperand: Record<string | symbol, any>,\n  rightHandOperand: Record<string | symbol, any>,\n  options?: DeepEqlOptions | undefined\n): boolean {\n  if (typeof leftHandOperand.eql === \"function\") {\n    const result = leftHandOperand.eql(rightHandOperand)\n    if (isBoolean(result)) return result\n  }\n\n  if (typeof rightHandOperand.eql === \"function\") {\n    const result = rightHandOperand.eql(leftHandOperand)\n    if (isBoolean(result)) return result\n  }\n\n  if (typeof leftHandOperand.toJSON === \"function\") {\n    return objectEqual(leftHandOperand.toJSON(), rightHandOperand, options)\n  }\n\n  if (typeof rightHandOperand.toJSON === \"function\") {\n    return objectEqual(leftHandOperand, rightHandOperand.toJSON(), options)\n  }\n\n  if (\n    typeof leftHandOperand === \"object\" &&\n    typeof rightHandOperand === \"object\" &&\n    typeof leftHandOperand.constructor === \"function\" &&\n    typeof rightHandOperand.constructor === \"function\"\n  ) {\n    if (\n      false ===\n      objectEqual(\n        leftHandOperand.constructor,\n        rightHandOperand.constructor,\n        options\n      )\n    ) {\n      return false\n    }\n  }\n\n  const leftHandKeys = [\n    ...getEnumerableKeys(leftHandOperand),\n    ...getEnumerableSymbols(leftHandOperand)\n  ]\n  const rightHandKeys = [\n    ...getEnumerableKeys(rightHandOperand),\n    ...getEnumerableSymbols(rightHandOperand)\n  ]\n\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    if (\n      iterableEqual(\n        mapSymbols(leftHandKeys).sort(),\n        mapSymbols(rightHandKeys).sort()\n      ) === false\n    ) {\n      return false\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options)\n  }\n\n  const leftHandEntries = getIteratorEntries(leftHandOperand)\n  const rightHandEntries = getIteratorEntries(rightHandOperand)\n  if (\n    leftHandEntries.length &&\n    leftHandEntries.length === rightHandEntries.length\n  ) {\n    leftHandEntries.sort()\n    rightHandEntries.sort()\n    return iterableEqual(leftHandEntries, rightHandEntries, options)\n  }\n\n  if (\n    leftHandKeys.length === 0 &&\n    leftHandEntries.length === 0 &&\n    rightHandKeys.length === 0 &&\n    rightHandEntries.length === 0\n  ) {\n    return true\n  }\n\n  return false\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value: any) {\n  return value === null || typeof value !== \"object\"\n}\n\nfunction mapSymbols(arr: any) {\n  return arr.map(function mapSymbol(entry: any) {\n    if (typeof entry === \"symbol\") {\n      return entry.toString()\n    }\n\n    return entry\n  })\n}\n","interface Defer<T> {\n  (): T\n  prior(): T | undefined\n}\n\n/**\n * Just like {@link MemoizedThunk}, but evaluated only once.\n */\nexport function defer<T>(thunk: () => T): Defer<T> {\n  let prior: T\n  let caught: Error\n  let applied = false\n  const result = function DeferImpl() {\n    if (applied) {\n      if (caught != null) throw caught\n      return prior!\n    }\n    try {\n      applied = true\n      return (prior = thunk())\n    } catch (error: any) {\n      caught = error\n      throw error\n    }\n  }\n  result.prior = () => prior\n  return result\n}\n","import { secondMs } from \"./Date\"\nimport { isBrowser, isNode } from \"./NodeOrBrowser\"\nimport { gt0 } from \"./Number\"\nimport { maybeCall } from \"./Object\"\n\nexport function delayUntil(date: Date | number) {\n  const t = gt0(date) ? date : date.getTime()\n  const delayMs = t - Date.now()\n  if (delayMs < 0) {\n    if (delayMs > -500) {\n      // meh close enough\n      return\n    } else {\n      throw new Error(\n        \"Mr. Fusion not found, cannot time travel back \" + -delayMs + \"ms\"\n      )\n    }\n  }\n  return delay(delayMs).then(() => delayMs)\n}\n\nexport function delay(millis: number, unref: boolean = true) {\n  // On windows at least, setTimeout() only ensures N-1 millis have passed.\n  return new Promise<void>(resolve => {\n    if (millis <= 0) {\n      resolve()\n    } else {\n      // ceil(+0.5) to make sure we wait enough time:\n\n      // SITS: any casting shenanigans to make this work on the frontend and\n      // backend:\n      const t: any = setTimeout(() => resolve(), Math.ceil(millis + 0.5))\n      if (millis > secondMs && unref && isNode) {\n        // if the millis is trivial, don't bother to unref\n        t.unref() // < only node has unref!\n      }\n    }\n  })\n}\n\nexport function later(f: () => any, delayMs: number = 1) {\n  const ms = Math.max(1, Math.ceil(delayMs))\n  const t = isNode && ms <= 1 ? setImmediate(f) : setTimeout(f, ms)\n  return isBrowser || delayMs <= secondMs ? t : maybeCall(t, \"unref\") ?? t\n}\n","import { Maybe } from \"./MaybeTypes\"\nimport { gt0, toGt0 } from \"./Number\"\nimport { swappableRotation } from \"./Rotation\"\nimport { megapixels, pixels2size } from \"./Units\"\n\nexport interface Dimensions {\n  width: number\n  height: number\n}\n\nexport function isDimensions(a: any): a is Dimensions {\n  return a != null && gt0(a.width) && gt0(a.height)\n}\n\nexport function isCloseAspectRatio(\n  a: Maybe<number>,\n  b: Maybe<number>,\n  withinRatio = 0.05\n): boolean {\n  return (\n    gt0(a) &&\n    gt0(b) &&\n    a > 1 === b > 1 && // both are portrait or both are landscape\n    Math.abs(a - b) <= Math.max(a, b) * withinRatio\n  )\n}\n\nexport function dimGte(a: Dimensions, b: Dimensions): boolean {\n  return a.width >= b.width && a.height >= b.height\n}\n\nexport function fmtDim(d: Dimensions, space = \" \") {\n  return `${d.width}${space}×${space}${d.height}`\n}\n\nexport function dimToSize(d: Dimensions) {\n  return pixels2size(d.width * d.height)\n}\n\n/**\n * return `{ width: dim.height, height: dim.width }`\n */\nexport function dimSwap(dim: Dimensions): Dimensions {\n  return { width: dim.height, height: dim.width }\n}\n\nexport function maybeDimSwap(\n  dim: Dimensions,\n  rotation: Maybe<number>\n): Dimensions {\n  return swappableRotation(rotation) ? dimSwap(dim) : dim\n}\n\nexport function maybeFlipInPlace(dim: Dimensions, rotation: Maybe<number>) {\n  if (swappableRotation(rotation)) {\n    ;[dim.width, dim.height] = [dim.height, dim.width]\n  }\n}\n\nexport function isPortrait(dim: Dimensions): boolean {\n  return dim.width / dim.height < 1\n}\n\nexport function dmegapixels(dim: Dimensions) {\n  return megapixels(pixels(dim))\n}\n\n/**\n * @return 0 if dim is invalid\n */\nexport function pixels(dim: Maybe<Dimensions>) {\n  return (toGt0(dim?.width) ?? 0) * (toGt0(dim?.height) ?? 0)\n}\n","import { deepEql } from \"./DeepEql\"\nimport { isFunction } from \"./isFunction\"\n\nexport function eql(a: any, b: any): boolean {\n  return deepEql(a, b, { comparator })\n}\n\n// export function isEqlSimple(a: any, b: any): boolean | undefined {\n//   // same pointer or primitive value is eql\n//   if (a === b) return true\n\n//   // undefined != null\n//   if (a == null || b == null) return false\n\n//   // a and b must be the same type\n//   if (typeof a !== typeof b) return false\n\n//   // typeof's match, so if either is a string, both are\n//   if (isString(a)) {\n//     return eqlStrings(a, b)\n//   }\n\n//   if (isPrimitive(a)) {\n//     return a === b\n//   }\n\n//   return undefined\n// }\n\n// const DefaultMaxDepth = 10\n\n// export function eql2(a: any, b: any, maxDepth = DefaultMaxDepth): boolean {\n//   if (maxDepth < 0) return true\n\n//   const simpleEql = isEqlSimple(a, b)\n//   if (simpleEql != null) return simpleEql\n\n//   // typeof [] === 'object' (!!!!), so don't test for isObject before isArray!\n//   if (Array.isArray(a) || Array.isArray(b)) {\n//     return isEqlArray(a, b, maxDepth - 1) ?? false\n//   }\n\n//   if (isFunction(a) && isFunction(b)) {\n//     // toString() returns the function implementation\n//     return a.toString() === b.toString()\n//   }\n\n//   if (typeof a === \"object\" && typeof b === \"object\") {\n//     return isEqlObject(a, b, maxDepth - 1)\n//   }\n//   return false\n// // }\n\n// export function isEqlArray(\n//   a: any,\n//   b: any,\n//   maxDepth = DefaultMaxDepth\n// ): boolean | undefined {\n//   if (!Array.isArray(a) || !Array.isArray(b)) return undefined\n//   if (a.length !== b.length) return false\n//   for (let i = 0; i < a.length; i++) {\n//     if (!eql(a[i], b[i], maxDepth - 1)) return false\n//   }\n//   return true\n// }\n\nexport function dateComparator(a: any, b: any): undefined | boolean {\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime()\n  }\n  return undefined\n}\n\nexport function functionComparator(a: any, b: any): undefined | boolean {\n  return isFunction(a) && isFunction(b)\n    ? a.toString() === b.toString()\n    : undefined\n}\n\nexport type Comparator = (a: any, b: any) => undefined | boolean\n\nconst objComparators: Comparator[] = [dateComparator, functionComparator]\nconst fieldComparators = new Map<string | symbol, Comparator>()\n\nexport function pushObjComparator(c: Comparator) {\n  objComparators.push(c)\n}\n\nexport function unshiftObjComparator(c: Comparator) {\n  objComparators.unshift(c)\n}\n\nexport function setFieldComparator(fieldName: string | symbol, c: Comparator) {\n  fieldComparators.set(fieldName, c)\n}\n\nfunction comparator(a: any, b: any, key?: string | symbol): boolean | null {\n  if (a == null || b == null) return a === b // null should not eql undefined\n  if (key != null) {\n    const c = fieldComparators.get(key)\n    if (c != null) return c(a, b) ?? null\n  }\n  for (const ea of objComparators) {\n    const r = ea(a, b)\n    if (r != null) return r\n  }\n  return null\n}\n\n// export function fieldEql(\n//   fieldName: string,\n//   a: any,\n//   b: any,\n//   maxDepth = DefaultMaxDepth\n// ): boolean {\n//   return maxDepth < 0\n//     ? true\n//     : fieldComparators?.get(fieldName)?.(a, b) ?? eql(a, b, maxDepth - 1)\n// }\n\n// export function isEqlObject(\n//   a: Record<string, unknown>,\n//   b: Record<string, unknown>,\n//   maxDepth = DefaultMaxDepth\n// ): boolean {\n//   if (maxDepth < 0 || typeof a !== \"object\" || typeof b !== \"object\")\n//     return false\n//   if (a === b) return true\n\n//   for (const c of objComparators) {\n//     const result = c(a, b)\n//     if (result != null) return result\n//   }\n\n//   if (isFunction(a.eql)) {\n//     const r = a.eql(b)\n//     if (isBoolean(r)) return r\n//   }\n\n//   if (isFunction(b.eql)) {\n//     const r = b.eql(a)\n//     if (isBoolean(r)) return r\n//   }\n\n//   const aObj = isFunction(a.toJSON) ? a.toJSON() : a\n//   const bObj = isFunction(b.toJSON) ? b.toJSON() : b\n\n//   const e = isEqlSimple(aObj, bObj)\n//   if (e != null) return e\n\n//   // the order of keys\n//   const aKeys = sort(keysWithDefinedValues(aObj))\n//   const bKeys = sort(keysWithDefinedValues(bObj))\n\n//   if (true !== isEqlArray(aKeys, bKeys, maxDepth)) return false\n\n//   for (const key of aKeys) {\n//     if (fieldEql(key, aObj[key], bObj[key], maxDepth - 1) === false) {\n//       return false\n//     }\n//   }\n//   return true\n// }\n","import { compact, compactBlankish, isEmpty, uniq } from \"./Array\"\nimport { blank, notBlank, toNotBlank } from \"./Blank\"\nimport { flatten } from \"./Flatten\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { toInt } from \"./Number\"\nimport { assignFields, compactValues, omit } from \"./Object\"\nimport { toS } from \"./toS\"\n\n// the space after the colon prevents URLs from being split:\nexport const ErrorDelimiter = \": \"\n\nexport const IgnoredErrorNames = [\"Error\", \"String\", \"Object\", \"WrappedError\"]\n\n/**\n * @return the `.name` or class name of the Error, or undefined if not\n * informative (like \"Error\" or \"WrappedError\")\n */\nexport function errorName(\n  err: Maybe<Error | { name?: string }>\n): Maybe<string> {\n  return err == null\n    ? undefined\n    : [err?.name, err?.constructor?.name]\n        .find(ea => ea != null && !IgnoredErrorNames.includes(ea))\n        ?.toString()\n}\n\nexport function errorCode(err: any): Maybe<string> {\n  return err == null ? undefined : toNotBlank(err?.code) // like \"EBUSY\"\n}\n\nexport function errorErrno(err: any): Maybe<number> {\n  return err == null ? undefined : toInt(err?.errno)\n}\n\n// We should skip over the stack frames that are created from creating frames:\nconst FramesToIgnoreRE = /shortStack|errorToVerbose/\n\nexport function shortStack(stack?: string, maxLines = 9): string[] {\n  try {\n    if (blank(stack)) {\n      const err = new Error()\n      // captureStackTrace may not be a function on some browsers\n      Error.captureStackTrace?.(err)\n      stack = err.stack\n    }\n\n    const result = toS(stack)\n      .split(\"\\n\")\n      .filter(\n        ea =>\n          !blank(ea) &&\n          ea.trim().startsWith(\"at \") &&\n          FramesToIgnoreRE.exec(ea) == null\n      )\n      .slice(0, maxLines)\n      .map(ea => ea.replace(/^\\s*at /i, \"\"))\n\n    return isEmpty(result) ? [\"(missing stack)\"] : result\n  } catch (err) {\n    return [\"Failed to captured stacktrace: \" + err]\n  }\n}\n\nexport function asError(reason?: any): Error {\n  if (blank(reason)) {\n    throw new Error(\"undefined error\")\n  } else if (reason instanceof Error) {\n    return reason\n  } else if (Array.isArray(reason)) {\n    const first = reason[0]\n    if (first instanceof Error) {\n      if (reason.length > 1) {\n        ;(first as any).errors = reason.slice(1)\n      }\n      return first\n    } else {\n      return new Error(\n        reason\n          .map(ea => toS(ea))\n          .filter(notBlank)\n          .join(\", \")\n      )\n    }\n  } else {\n    // Errors render as \"Error: something bad happened\". If you create a new\n    // Error from that string, you'll get an Error that toString's to \"Error:\n    // Error: something bad happened\", so strip the name of the error and give\n    // it to the return value:\n    const s = errorToS(reason).replace(/^Error: /i, \"\")\n    return new Error(s)\n  }\n}\n\nexport function errorToJson(error: Error) {\n  return compactValues({\n    _ctor: \"Error\",\n    message: error.message ?? String(error),\n    stack: error.stack,\n    name: errorName(error),\n    code: errorCode(error),\n    errno: errorErrno(error),\n    ...omit(error as any, \"name\", \"message\", \"code\", \"errno\")\n  })!\n}\n\nexport function errorFromJson(obj: any) {\n  return assignFields(new Error(), omit(obj, \"_ctor\"))\n}\n\n// core has a fancier version of this:\nexport function errorToArr(...errors: any[]): string[] {\n  const arr = []\n  for (const ea of errors) {\n    if (ea == null) continue\n    if (ea instanceof Error) {\n      arr.push(errorName(ea), errorCode(ea), ea?.message)\n    } else {\n      arr.push(toS(ea))\n    }\n  }\n  return uniq(\n    compactBlankish(flatten(compact(arr).map(ea => ea.split(ErrorDelimiter))))\n  )\n}\n\n// core has a fancier version of this:\nexport function errorToS(...errors: any[]): string {\n  return errorToArr(...errors).join(ErrorDelimiter)\n}\n","import { Dimensions } from \"./Dimensions\"\n\nexport function fitInside(input: Dimensions, max: Dimensions) {\n  const inputAspectRatio = input.width / input.height\n  const maxAspectRatio = max.width / max.height\n\n  if (inputAspectRatio >= maxAspectRatio) {\n    // too wide, height takes aspect ratio into account.\n    const width = max.width\n    return {\n      width,\n      height: Math.floor(width / inputAspectRatio)\n    }\n  } else {\n    // too tall, width takes aspect ratio into account.\n    const height = max.height\n    return {\n      width: Math.floor(height * inputAspectRatio),\n      height\n    }\n  }\n}\n","import { MaybeNull } from \"./MaybeTypes\"\nimport { toA } from \"./toA\"\n\n/**\n * Compacts and flattens ONE LEVEL\n */\nexport function flatten<T>(\n  arr: (MaybeNull<T> | MaybeNull<T>[])[],\n  result: T[] = []\n): T[] {\n  for (const ea1 of toA(arr)) {\n    if (ea1 != null) {\n      for (const ea2 of toA(ea1)) {\n        if (ea2 != null) result.push(ea2)\n      }\n    }\n  }\n  return result\n}\n","import { compact, isEmpty } from \"./Array\"\nimport { dayMs, hourMs, minuteMs, secondMs, weekMs, yearMs } from \"./Date\"\nimport { mapOr } from \"./Maybe\"\nimport { gte0, isNumber } from \"./Number\"\nimport { plur } from \"./Units\"\n\nconst Units = [\n  { ms: yearMs, s: \"year\", p: \"years\" },\n  { ms: yearMs / 12, s: \"month\", p: \"months\" }, // oof, but this is fuzzy\n  { ms: weekMs, s: \"week\", p: \"weeks\" },\n  { ms: dayMs, s: \"day\", p: \"days\" },\n  { ms: hourMs, s: \"hour\", p: \"hours\" },\n  { ms: minuteMs, s: \"minute\", p: \"minutes\" },\n  { ms: secondMs, s: \"second\", p: \"seconds\" }\n]\n\n/**\n * CAUTION: this is for human consumption, not robots: we render rough\n * \"months\"!\n */\nexport function fmtDuration(\n  ms: number,\n  units: number = 2,\n  suffix?: { singular: string; plural: string }\n): string {\n  if (!gte0(ms)) {\n    return !isNumber(ms) ? \"\" : \"-\" + fmtDuration(Math.abs(ms), units)\n  }\n  const largestUnitIndex = Units.findIndex(ea => ea.ms <= ms)\n  if (largestUnitIndex === -1) return \"\"\n  let remaining =\n    ms +\n    // hack for rounding:\n    mapOr(\n      Units[largestUnitIndex + Math.max(2, units) - 1],\n      ea => Math.round(ea.ms * 0.4),\n      0\n    )\n  const result = compact(\n    Units.slice(largestUnitIndex, largestUnitIndex + units).map(unit => {\n      if (unit.ms > remaining) {\n        return\n      } else {\n        const i = Math.floor(remaining / unit.ms)\n        remaining -= i * unit.ms\n        return { i, s: plur(i, unit.s, unit.p) }\n      }\n    })\n  )\n  if (isEmpty(result)) return \"\"\n  return (\n    result.map(ea => ea.s).join(\", \") +\n    mapOr(\n      suffix,\n      ea => \" \" + (result[result.length - 1].i !== 1 ? ea.singular : ea.plural),\n      \"\"\n    )\n  )\n}\n","import { compactBlanks, uniq } from \"./Array\"\n\nexport function fmtList(arr: string[], joinWord: string): string {\n  arr = uniq(compactBlanks(arr))\n  return arr == null || arr.length === 0\n    ? \"\"\n    : arr.length === 1\n    ? arr.join(\"\")\n    : arr.slice(0, -1).join(\", \") +\n      \" \" +\n      joinWord.trim() +\n      \" \" +\n      arr[arr.length - 1]\n}\n\nexport function orList(arr: string[]): string {\n  return fmtList(arr, \"or\")\n}\n\nexport function andList(arr: string[]): string {\n  return fmtList(arr, \"and\")\n}\n","import { Emoji } from \"./Emoji\"\nimport { IconName } from \"./IconName\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { PrimitiveValued } from \"./Primitive\"\nimport { RunStateEnum } from \"./RunStateEnum\"\nimport { ServiceName, ServiceNames } from \"./ServiceNames\"\nimport { StrEnumKeys, strEnum } from \"./StrEnum\"\n\nexport const HealthCheckSections = strEnum(\n  \"Summary\",\n  \"Library\",\n  // \"Storage\",\n  \"System\",\n  \"Tools\"\n)\nexport type HealthCheckSection = StrEnumKeys<typeof HealthCheckSections>\n\nconst HealthCheckEmoji: Record<HealthCheckSection, Emoji> = {\n  Summary: \"bookmark-tabs\",\n  Library: \"library\",\n  // Storage: \"dvd\",\n  System: \"computer\",\n  Tools: \"wrench\"\n} as const\n\nexport const HealthCheckLevels = strEnum(\n  \"error\",\n  \"no-library\",\n  \"pending\",\n  \"stop-sync\",\n  \"warn\",\n  \"ok\",\n  \"disabled\"\n)\nexport type HealthCheckLevel = StrEnumKeys<typeof HealthCheckLevels>\n\nconst OkLevels = [\n  HealthCheckLevels.ok,\n  HealthCheckLevels.disabled,\n  HealthCheckLevels.pending\n] as HealthCheckLevel[]\n\nexport function levelIsNotOK(level: HealthCheckLevel) {\n  return !OkLevels.includes(level)\n}\n\nexport function isHealthCheckLevelFatal(\n  level: HealthCheckLevel,\n  serviceName: ServiceName\n) {\n  if (\n    ([ServiceNames.web, ServiceNames.main] as ServiceName[]).includes(\n      serviceName\n    )\n  ) {\n    // main and web should never be in a fatal state:\n    return false\n  }\n  // Only keep main and web running if HealthChecks are in error state:\n  if (level === HealthCheckLevels.error) return true\n  if (\n    serviceName === ServiceNames.sync &&\n    level === HealthCheckLevels[\"no-library\"]\n  ) {\n    // sync requires a library to do work:\n    return true\n  }\n  return false\n}\n\nexport const HealthCheckLevelToEmoji: Record<HealthCheckLevel, Emoji> = {\n  pending: \"busy-dots\",\n  \"no-library\": \"new-yellow\",\n  ok: \"green-check\",\n  warn: \"warning\",\n  \"stop-sync\": \"pause\",\n  error: \"error\",\n  disabled: \"sleeping-face-desat\"\n} as const\n\nexport function healthCheckLevelToEmoji(level: HealthCheckLevel): Emoji {\n  return HealthCheckLevelToEmoji[level]\n}\n\nexport const HealthCheckLevelDescription = {\n  pending: \"Health checks are running...\",\n  \"no-library\": \"No library is open\",\n  ok: \"OK\",\n  warn: \"Warning\",\n  \"stop-sync\": \"Some health checks are preventing sync from running\",\n  error: \"Some health checks failed: sync will not run\",\n  disabled: \"Some health checks are disabled\" // < shouldn't ever show\n} as const\n\nexport interface Link {\n  text: string\n  method?: \"POST\" | \"GET\"\n  type?: \"button\" | \"link\"\n  title?: string\n  url: string\n  icon?: IconName\n}\n\nexport interface HealthCheckResult {\n  section: HealthCheckSection\n  id: string\n  level: HealthCheckLevel\n  msg: string[]\n  /**\n   * When this result was completed\n   */\n  ts: number\n  /**\n   * How long it took to complete this result\n   */\n  elapsedMs?: number\n  meta?: PrimitiveValued\n  links?: Maybe<Link[]>\n  buttons?: Maybe<Link[]>\n}\n\nexport interface HealthChecksForSection {\n  section: HealthCheckSection\n  emoji: string\n  results: HealthCheckResult[]\n}\n\nexport interface HealthCheckSummary extends HealthCheckResult {\n  settled: boolean\n  settledCount: number\n  pendingCount: number\n  pendingIds: string[]\n  state: RunStateEnum\n  /**\n   * If we're not OK, what's the first HealthCheck.id that caused this level?\n   */\n  linkIds?: string[]\n}\n\nexport const BaseHealthCheckSummary = {\n  id: \"summary\",\n  section: HealthCheckSections.Summary\n} as const\n\nexport function newHealthCheckSections(): HealthChecksForSection[] {\n  return HealthCheckSections.values.map(section => ({\n    section,\n    emoji: HealthCheckEmoji[section],\n    results:\n      section === \"Summary\"\n        ? [\n            {\n              ...BaseHealthCheckSummary,\n              level: \"pending\",\n              settled: false,\n              ts: Date.now(),\n              msg: [\"⌚ Requesting health check results...\"]\n            }\n          ]\n        : []\n  }))\n}\n","import { strEnum, StrEnumKeys } from \"./StrEnum\"\n\n// export const ReducerNames = strEnum(\"fit\", \"fill\", \"sq\")\nexport const ReducerNames = strEnum(\"fit\", \"sq\")\nexport type ReducerName = StrEnumKeys<typeof ReducerNames>\n","import { strEnum, StrEnumKeys } from \"./StrEnum\"\n\n/**\n * @see https://en.wikipedia.org/wiki/Graphics_display_resolution\n */\nexport const FitSizes = strEnum(\n  \"uhd8k\",\n  \"uhd5k\",\n  \"uhd4k\",\n  \"qhd\",\n  \"fhd\",\n  \"hd\",\n  \"wvga\",\n  \"qvga\",\n  \"qqvga\"\n)\nexport type FitSize = StrEnumKeys<typeof FitSizes>\nexport const FitSizeValues = FitSizes.values\n\nexport const SqSizes = strEnum(\"s480\", \"s240\", \"s120\", \"s60\")\nexport type SqSize = StrEnumKeys<typeof SqSizes>\n\nexport const SqWidths = [60, 120, 240, 480]\n\nexport type ImageSizeName = FitSize | SqSize\n","import { gt0, gte0, lt0 } from \"./Number\"\n\n/**\n * @return true if obj is both Iterable *and not a string* (because srsly wth)\n */\nexport function isIterable(obj: any): obj is Iterable<any> {\n  return (\n    obj != null &&\n    typeof obj !== \"string\" &&\n    typeof obj[Symbol.iterator] === \"function\"\n  )\n}\n\n// export function max<T>(i: Iterable<T>, f: (t: T) => Comparable): Maybe<T> {\n//   let result = undefined\n//   let m = undefined\n//   for (const ea of i) {\n//     const r = f(ea)\n//     if (m == null || m < r) {\n//       m = r\n//       result = ea\n//     }\n//   }\n//   return result\n// }\n\nexport function sliceIterable<T>(\n  iterable: Iterable<T>,\n  start: number,\n  end?: number\n): T[] {\n  // If start is negative, we have to iterate the whole thing anyway, so\n  // delegate to Array.slice():\n  if (lt0(start)) {\n    return [...iterable].slice(start, end)\n  }\n\n  const iter = iterable[Symbol.iterator]()\n  if (gt0(start)) {\n    for (let i = 0; i < start; i++) {\n      iter.next()\n    }\n  }\n  const result: T[] = []\n\n  // if end is null, run until .done:\n  for (let i = start; gte0(end) ? i < end : true; i++) {\n    const next = iter.next()\n    // This is pretty lame of the iterator interface, IMHO. Don't return an\n    // object with a value if it doesn't have a value!\n    if (next.value != null || next.done !== true) {\n      result.push(next.value)\n    }\n    if (next.done === true) {\n      break\n    }\n  }\n  // don't splice! This may change the underlying iterable!\n  if (lt0(end)) {\n    return result.slice(0, end)\n  }\n  return result\n}\n\nexport function countIterable(i: Iterable<any>): number {\n  // Avoids GC from creating an array\n  let c = 0\n  const iter = i[Symbol.iterator]()\n  while (true !== iter.next().done) c++\n  return c\n}\n","import { denull } from \"./Maybe\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { isFunction } from \"./isFunction\"\n\nexport type Json =\n  | string\n  | number\n  | boolean\n  | null\n  | undefined\n  | { [property: string]: Json }\n  | Json[]\n\nexport type DatedJson =\n  | string\n  | number\n  | boolean\n  | null\n  | undefined\n  | Date\n  | { [property: string]: DatedJson }\n  | DatedJson[]\n\n/**\n * Work-alike to JSON.stringify, except that circular dependencies are replaced\n * with a string reference.\n */\nexport function stringify(\n  ea: any,\n  replacer?: (this: any, key: string, value: any) => any,\n  space?: string | number\n): string {\n  return JSON.stringify(decycle(ea), replacer, denull(space))\n}\n\nexport interface JsonReviver {\n  name: string\n  fromJSON(ea: any): any\n}\n\nconst Revivers = new Map<string, JsonReviver>()\n\nexport function addJsonRevivers(...arr: JsonReviver[]) {\n  for (const ea of arr) {\n    Revivers.set(ea.name, ea)\n  }\n}\n\nexport function parseJSON_<T>(s: string): T {\n  return retrocycle(JSON.parse(s, reviver)) as any\n}\n\nexport function parseJSON<T = any>(s: MaybeNull<string | Buffer>): Maybe<T> {\n  try {\n    const s2 = s?.toString().trim()\n    if (s2 != null && s2.length > 0) {\n      return parseJSON_(s2)\n    }\n  } catch {\n    //\n  }\n  return\n}\n\nexport function JSON_<T>(s: string): T {\n  return retrocycle(JSON.parse(s, reviver)) as any\n}\n\nfunction reviver(_key: string, value: any) {\n  // PERF: map inlined\n  const r = Revivers.get(value?._ctor)\n  return r == null ? value : r.fromJSON(value)\n}\n\n// https://github.com/douglascrockford/JSON-js/blob/master/cycle.js\n\n/**\n * Make a deep copy of an object or array, assuring that there is at most\n * one instance of each object or array in the resulting structure. The\n * duplicate references (which might be forming cycles) are replaced with\n * an object of the form\n *      {\"$ref\": PATH}\n * where the PATH is a JSONPath string that locates the first occurrence.\n * So,\n *      var a = [];\n *      a[0] = a;\n *      return JSON.stringify(JSON.decycle(a));\n * produces the string '[{\"$ref\":\"$\"}]'.\n * If a replacer function is provided, then it will be called for each value.\n * A replacer function receives a value and returns a replacement value.\n * JSONPath is used to locate the unique object. $ indicates the top level of\n * the object or array. [NUMBER] or [STRING] indicates a child element or\n * property.\n */\nfunction decycle(object: any) {\n  const objects: any[] = [] // Keep a reference to each unique object or array\n  const paths: string[] = [] // Keep the path to each unique object or array\n\n  return (function derez(value, path): any {\n    // The derez recurses through the object, producing the deep copy.\n\n    if (isFunction(value)) return undefined\n\n    let i: number // The loop counter\n    let name: string // Property name\n    let nu: any // The new object or array\n\n    let _value = value\n\n    try {\n      _value = value.toJSON()\n    } catch (error) {\n      //\n    }\n\n    // typeof null === 'object', so go on if this value is really an object but not\n    // one of the weird builtin objects.\n\n    if (typeof _value === \"object\" && _value != null) {\n      // Remove all fields that shouldn't be serialized:\n      for (const k in _value) {\n        if (k.startsWith(\"__\")) {\n          if (value === _value) {\n            _value = { ..._value }\n          }\n          delete _value[k]\n        }\n      }\n\n      // If the value is an object or array, look to see if we have already\n      // encountered it. If so, return a $ref/path object. This is a hard way,\n      // linear search that will get slower as the number of unique objects grows.\n\n      for (i = 0; i < objects.length; i += 1) {\n        if (objects[i] === _value) {\n          return { $ref: paths[i] }\n        }\n      }\n\n      // Otherwise, accumulate the unique value and its path.\n\n      objects.push(_value)\n      paths.push(path)\n\n      // If it is an array, replicate the array.\n\n      if (Array.isArray(_value)) {\n        nu = []\n\n        for (i = 0; i < _value.length; i += 1) {\n          nu[i] = derez(_value[i], path + \"[\" + i + \"]\")\n        }\n      } else {\n        // If it is an object, replicate the object.\n\n        nu = {}\n\n        for (name in _value) {\n          if (Object.prototype.hasOwnProperty.call(_value, name)) {\n            nu[name] = derez(\n              _value[name],\n              path + \"[\" + JSON.stringify(name) + \"]\"\n            )\n          }\n        }\n      }\n\n      return nu\n    }\n\n    return _value\n  })(object, \"$\")\n}\n\n/**\n  * Restore an object that was reduced by decycle. Members whose values are\n  * objects of the form\n  *      {$ref: PATH}\n  * are replaced with references to the value found by the PATH. This will\n  * restore cycles. `value` will be mutated.\n\n  * The eval function is used to locate the values described by a PATH. The\n  * root object is kept in a $ variable. A regular expression is used to\n  * assure that the PATH is extremely well formed. The regexp contains nested\n  * * quantifiers. That has been known to have extremely bad performance\n  * problems on some browsers for very long strings. A PATH is expected to be\n  * reasonably short. A PATH is allowed to belong to a very restricted subset of\n  * Goessner's JSONPath.\n\n  * So,\n  *      const s = '[{\"$ref\":\"$\"}]';\n  *      return JSON.retrocycle(JSON.parse(s));\n  * produces an array containing a single element which is the array itself.\n*/\nfunction retrocycle($: any) {\n  const px =\n    /^\\$(?:\\[(?:\\d+|\\\"(?:[^\\\\\\\"\\u0000-\\u001f]|\\\\([\\\\\\\"\\/bfnrt]|u[0-9a-zA-Z]{4}))*\\\")\\])*$/\n\n  ;(function rez(value) {\n    // The rez function walks recursively through the object looking for $ref\n    // properties. When it finds one that has a value that is a path, then it\n    // replaces the $ref object with a reference to the value that is found by\n    // the path.\n\n    let i, item, name, path\n\n    if (value && typeof value === \"object\") {\n      if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n        for (i = 0; i < value.length; i += 1) {\n          item = value[i]\n\n          if (item != null && typeof item === \"object\") {\n            path = item.$ref\n\n            if (typeof path === \"string\" && px.test(path)) {\n              value[i] = eval(path)\n            } else {\n              rez(item)\n            }\n          }\n        }\n      } else {\n        for (name in value) {\n          if (typeof value[name] === \"object\") {\n            item = value[name]\n\n            if (item != null) {\n              path = item.$ref\n\n              if (typeof path === \"string\" && px.test(path)) {\n                value[name] = eval(path)\n              } else {\n                rez(item)\n              }\n            }\n          }\n        }\n      }\n    }\n  })($)\n\n  return $\n}\n","import { PromiseState } from \"./PromiseState\"\n\n// This is used by logging, so it can't have any dependencies.\n\n/**\n * Simple one-count concurrent barrier\n */\nexport class Latch implements Promise<void> {\n  // required by lib.es2015:\n  readonly [Symbol.toStringTag] = \"Latch\"\n  // Expose `promise` so we can have a honest-to-goodness Promise\n  readonly promise: Promise<void>\n  private _state: PromiseState = \"pending\"\n  error?: Error\n  private _resolve!: () => void\n  private _reject!: (err?: Error) => void\n\n  constructor(readonly id?: any) {\n    this.promise = new Promise<void>((resolve, reject) => {\n      this._resolve = resolve\n      this._reject = reject\n    })\n  }\n\n  // This is used by LogMeta for logging:\n  toLogJSON() {\n    return {\n      _ctor: \"Latch\",\n      id: this.id,\n      state: this.state()\n    }\n  }\n\n  resolve(): Latch {\n    if (this.isPending()) {\n      this._resolve()\n      this._state = \"resolved\"\n    }\n    return this\n  }\n\n  reject(error?: Error): Latch {\n    if (this.isPending()) {\n      this._reject(error)\n      this._state = \"rejected\"\n      this.error = error\n    }\n    return this\n  }\n\n  observe(p: Promise<any>): this {\n    p.then(\n      () => this.resolve(),\n      err => this.reject(err)\n    )\n    return this\n  }\n\n  observeQuietly(p: Promise<any>): this {\n    p.then(\n      () => this.resolve(),\n      () => this.resolve()\n    )\n    return this\n  }\n\n  isPending(): boolean {\n    return this._state === \"pending\"\n  }\n\n  isSettled() {\n    return !this.isPending()\n  }\n\n  isResolved() {\n    return this._state === \"resolved\"\n  }\n\n  isRejected() {\n    return this._state === \"rejected\"\n  }\n\n  state(): PromiseState {\n    return this._state\n  }\n\n  then<T1, T2>(\n    onfulfilled?: ((v: void) => T1 | PromiseLike<T1>) | undefined | null,\n    onrejected?: ((reason: any) => T2 | PromiseLike<T2>) | undefined | null\n  ): Promise<T1 | T2> {\n    return this.promise.then(onfulfilled, onrejected)\n  }\n\n  catch<TResult = never>(\n    onrejected?:\n      | ((reason: any) => TResult | PromiseLike<TResult>)\n      | undefined\n      | null\n  ): Promise<void | TResult> {\n    return this.promise.catch(onrejected)\n  }\n\n  finally(onfinally?: (() => void) | undefined | null): Promise<void> & this {\n    void this.promise.finally(onfinally)\n    return this\n  }\n}\n","import { isEmpty } from \"./Array\"\nimport { ChangeListener } from \"./ChangeListener\"\nimport { eql } from \"./Eql\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { gt0 } from \"./Number\"\nimport { setUnrefTimeout } from \"./UnrefTimeout\"\nimport { UnwrapPromiseLike } from \"./UnwrapPromiseLike\"\n\n// USED BY LOG: DON'T DEPEND ON ANYTHING (much)\n\nexport interface MemoizedLazy<T> {\n  /**\n   * Force the prior value to be `t`\n   */\n  set(t: T): void\n  /**\n   * clears the prior value\n   * @return the prior value\n   */\n  clear(): Maybe<T>\n  /**\n   * Clears the prior value but doesn't return it (so we don't have to\n   * explicitly ignore unawaited promises)\n   */\n  unset(): void\n  /**\n   * Forces the underlying thunk or later to be applied\n   */\n  refresh(): T\n  /**\n   * @return the milliseconds a prior result may be returned by `apply`, or\n   * undefined if no TTL is set\n   */\n  ttl(): Maybe<number>\n  /**\n   * @param ttl undefined to remove TTL expirations\n   */\n  setTTL(ttl: number | undefined): void\n  /**\n   * Immediately calls the listener with current value, and calls the listener\n   * if the result changes.\n   */\n  watch(watcher: ChangeListener<T>): void\n  /**\n   * Calls the listener if the result changes later. The underlying thunk is\n   * not applied now (like with {@link MemoizedThunk.watch}).\n   */\n  watchLater(watcher: ChangeListener<T>): void\n  lastSetAgoMs(): Maybe<number>\n  /**\n   * Was this applied and not cleared or unset?\n   */\n  hasPrior(): boolean\n  /**\n   * @return the previously-memoized value, if it isn't stale (according to\n   * `ttl()`)\n   */\n  prior(): Maybe<T>\n\n  /**\n   * Has a result not been calculated, or was calculated more than `ttl()` ms\n   * ago?\n   */\n  isStale(): boolean\n\n  toString(): string\n}\n\nexport interface MemoizedThunk<T> extends MemoizedLazy<T> {\n  (): T\n}\n\nexport type UnwrapLazy<T> = T extends MemoizedThunk<infer U> ? U : T\nexport type UnwrapLazyAsync<T> = T extends MemoizedThunk<infer U>\n  ? UnwrapPromiseLike<U>\n  : T\n\n// HEY, FUTURE ME: yeah, I know you think something here should call\n// ee().on(\"clearCache\",), but DON'T DO IT, MAN. lazy is used by lots of\n// instances that we want to be garbage collected, and that would create a huge\n// memory leak.\n\n/**\n * @param ttlMs if 0 or null, the result of `thunk` will be cached forever.\n */\nexport function lazy<T>(thunk: () => T, ttlMs?: number): MemoizedThunk<T> {\n  let lastSetTs: number | undefined\n  let result: T | undefined\n  const watchers: ChangeListener<T>[] = []\n\n  // HEY FUTURE ME: We're using named functions here, instead of fat arrows,\n  // so they show up properly in stacktraces.\n\n  function Lazy() {\n    if (Lazy.isStale()) {\n      // NO PROMISE AWAITING HERE. Otherwise N calls would go through while we\n      // wait for the promise to resolve.\n      Lazy.setResult(thunk())\n    }\n    return result!\n  }\n  // REMEMBER: function `.name` is not allowed to be overridden!\n\n  async function onSetResult(priorP: Maybe<T>, currentP: T) {\n    if (isEmpty(watchers)) return\n    // prior and current could be a promise!\n\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const _prior = await priorP\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const current = await currentP\n    if (!eql(_prior, current)) {\n      for (const ea of watchers) ea(current)\n    }\n    // We're interpreting undefined as unset, and `null` as a valid set value.\n    if (ttlMs != null && ttlMs > 0 && current !== undefined) {\n      // help the garbage collector:\n      setUnrefTimeout(() => Lazy.vacuum(), ttlMs)\n    }\n  }\n\n  Lazy.vacuum = function vacuum() {\n    if (Lazy.isStale()) Lazy.unset()\n  }\n\n  Lazy.setResult = function setResult(t: T) {\n    lastSetTs = Date.now()\n    void onSetResult(result, t)\n    return (result = t)\n  }\n\n  Lazy.isStale = function isStale() {\n    return lastSetTs == null || (gt0(ttlMs) && lastSetTs + ttlMs < Date.now())\n  }\n\n  Lazy.set = function set(t: T) {\n    Lazy.setResult(t)\n  }\n\n  Lazy.unset = function unset() {\n    Lazy.setResult(undefined as any)\n    lastSetTs = undefined\n  }\n\n  Lazy.clear = function clear() {\n    const _prior = result\n    Lazy.unset()\n    return _prior\n  }\n\n  Lazy.prior = function prior() {\n    Lazy.vacuum()\n    return result\n  }\n\n  Lazy.refresh = function refresh() {\n    return Lazy.setResult(thunk())\n  }\n\n  Lazy.ttl = function ttl() {\n    return ttlMs\n  }\n\n  Lazy.setTTL = function setTTL(ttl: number | undefined) {\n    ttlMs = gt0(ttl) ? ttl : undefined\n  }\n\n  Lazy.watchLater = function watchLater(watcher: ChangeListener<T>) {\n    watchers.push(watcher)\n  }\n\n  Lazy.watch = function watch(watcher: ChangeListener<T>) {\n    watcher(Lazy())\n    Lazy.watchLater(watcher)\n  }\n\n  Lazy.toString = function toString() {\n    return \"[Lazy]\"\n  }\n\n  Lazy.toJSON = function toJSON() {\n    // We don't support JSON encode/decode:\n    return undefined\n  }\n\n  Lazy.lastSetAgoMs = function lastSetAgoMs() {\n    return lastSetTs == null ? undefined : Date.now() - lastSetTs\n  }\n\n  Lazy.hasPrior = function hasPrior() {\n    return lastSetTs != null\n  }\n\n  return Lazy\n}\n","export function getOrSet<K, V>(\n  m: Map<K, V> | WeakMap<any, V>,\n  k: K,\n  valueThunk: () => V\n): V {\n  if (k == null) throw new Error(\"null key\")\n  if (m.has(k)) {\n    return m.get(k)!\n  } else {\n    const v = valueThunk()\n    if (v != null) m.set(k, v)\n    return v\n  }\n}\n\nexport function deleteIf<K, V>(\n  m: Map<K, V>,\n  predicate: (key: K, value: V) => boolean\n) {\n  for (const [k, v] of m.entries()) {\n    if (predicate(k, v)) {\n      m.delete(k)\n    }\n  }\n}\n","import { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { toS } from \"./toS\"\n\nexport function map<T, U>(obj: MaybeNull<T>, f: (t: T) => U): Maybe<U> {\n  // isNaN({a:1}) === true\n  return obj == null ? undefined : f(obj)\n}\n\nexport function mapTry<T, U>(f: () => MaybeNull<T>, g: (t: T) => U): Maybe<U> {\n  try {\n    return map(f(), g)\n  } catch {\n    return\n  }\n}\n\nexport function map2<T1, T2, U>(\n  t1: MaybeNull<T1>,\n  t2: MaybeNull<T2>,\n  f: (ea1: T1, ea2: T2) => U\n): Maybe<U> {\n  return t1 == null || t2 == null ? undefined : f(t1, t2)\n}\n\nexport function map3<T1, T2, T3, U>(\n  t1: MaybeNull<T1>,\n  t2: MaybeNull<T2>,\n  t3: MaybeNull<T3>,\n  f: (ea1: T1, ea2: T2, ea3: T3) => U\n): Maybe<U> {\n  return t1 == null || t2 == null || t3 == null ? undefined : f(t1, t2, t3)\n}\n\nexport function orElse<T>(obj: MaybeNull<T>, defaultValue: ThunkOrT<T>): T {\n  return obj != null ? obj : tot(defaultValue)\n}\n\nexport function mapOr<T, U>(\n  obj: MaybeNull<T>,\n  f: (t: T) => U,\n  defaultValue: ThunkOrT<U>\n): U {\n  return obj != null ? f(obj) : tot(defaultValue)\n}\n\nexport function map2Or<T1, T2, U>(\n  t1: MaybeNull<T1>,\n  t2: MaybeNull<T2>,\n  f: (ea1: T1, ea2: T2) => U,\n  defaultValue: () => U\n): U {\n  return orElse(map2(t1, t2, f), defaultValue)\n}\n\n// https://www.typescriptlang.org/docs/handbook/advanced-types.html#predefined-conditional-types\n\nexport type Diff<T, U> = T extends U ? never : T\n\nexport type Unpick<T, U> = { [P in keyof T]: P extends U ? never : T[P] }\n\nexport type Defined<T> = Diff<T, null | undefined | void>\n\n/**\n * @return true iff all `objects` are not `null` or `undefined`\n */\nexport function defined<T>(object: T): object is Defined<T> {\n  return object != null\n}\n\n/**\n * Like `map`, but calls `f` if `obj` is not `undefined`.\n *\n * To clarify, if `obj` is `null`, `f` will be called with `null`.\n */\nexport function ifDefined<T, U>(obj: T | undefined, f: (t: T) => U): Maybe<U> {\n  return obj === undefined ? undefined : f(obj)\n}\n\nexport function allDefined<T>(arr: T[]): arr is Defined<T>[] {\n  return arr != null && arr.every(defined)\n}\n\nexport function firstDefined<T>(...objects: MaybeNull<T>[]): Maybe<T> {\n  return objects.find(defined)\n}\n\nexport function denull<T>(t: T | undefined | null): T | undefined {\n  return t == null || toS(t) === \"null\" ? undefined : t\n}\n\nexport function nulled<T>(t: T | undefined | null): T | null {\n  return t == null ? null : t\n}\n","import {\n  filterInPlace,\n  isEmpty,\n  isNotEmpty,\n  pushUniq,\n  sum,\n  uniq\n} from \"./Array\"\nimport { sortBy } from \"./ArraySort\"\nimport { eql } from \"./Eql\"\nimport { stringify } from \"./JSON\"\nimport { getOrSet } from \"./Map\"\nimport { map } from \"./Maybe\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { Primitive } from \"./Primitive\"\nimport { isString } from \"./String\"\nimport { toA } from \"./toA\"\n\n/**\n * Multi-valued Map.\n */\nexport class MultiMap<K, V> {\n  readonly store: Map<K, V[]>\n\n  constructor(store = new Map<K, V[]>()) {\n    this.store = store\n  }\n\n  get(key: K): V[] | undefined {\n    return this.store.get(key)\n  }\n\n  has(key: K): boolean {\n    return this.store.has(key)\n  }\n\n  includes(key: K, value: V): boolean {\n    return this.store.get(key)?.includes(value) === true\n  }\n\n  /**\n   * @return the number of unique keys in this store\n   */\n  keyCount(): number {\n    return this.store.size\n  }\n\n  /**\n   * @return the number of values in this store\n   */\n  valueCount(): number {\n    return sum(\n      [...this.store.values()].map(ea => ea.length),\n      ea => ea\n    )\n  }\n\n  add(key: K, ...values: V[]): V[] {\n    const store = getOrSet(this.store, key, () => [])\n    store.push(...values)\n    return store\n  }\n\n  addUniq(key: K, ...values: V[]): V[] {\n    return pushUniq(\n      getOrSet(this.store, key, () => []),\n      ...values\n    )\n  }\n\n  set(key: K, values: V[]) {\n    this.store.set(key, values)\n  }\n\n  delete(key: K, value?: V): boolean {\n    if (value == null) {\n      return this.store.delete(key)\n    } else {\n      const arr = this.store.get(key)\n      if (arr == null) {\n        return false\n      } else {\n        const result = arr.filter(ea => !eql(ea, value))\n        if (result.length === 0) {\n          this.store.delete(key)\n        } else {\n          this.store.set(key, result)\n        }\n        return arr.length !== result.length\n      }\n    }\n  }\n\n  clear(): this {\n    this.store.clear()\n    return this\n  }\n\n  keys(): IterableIterator<K> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<K> {\n      for (const [k, v] of self.store.entries()) {\n        if (v.length > 0) {\n          yield k\n        }\n      }\n    }\n    return iter()\n  }\n\n  values(): IterableIterator<V[]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<V[]> {\n      for (const [, v] of self.store.entries()) {\n        if (v.length > 0) {\n          yield v\n        }\n      }\n    }\n    return iter()\n  }\n\n  vacuum(f: (key: K, values: V[]) => Maybe<V[]> = (_k, v) => uniq(v)) {\n    for (const k of this.keys()) {\n      const prior = this.store.get(k)\n      const arr = prior == null ? [] : f(k, prior)\n      if (isEmpty(arr)) {\n        this.store.delete(k)\n      } else {\n        this.store.set(k, arr)\n      }\n    }\n  }\n\n  flatValues(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<V> {\n      for (const [, arr] of self.store.entries()) {\n        if (arr.length > 0) {\n          for (const ea of arr) {\n            yield ea\n          }\n        }\n      }\n    }\n    return iter()\n  }\n\n  entriesArray(): [K, V[]][] {\n    return [...this.store.entries()].filter(([, v]) => isNotEmpty(v))\n  }\n\n  entries(): IterableIterator<[K, V[]]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[K, V[]]> {\n      for (const [k, v] of self.store.entries()) {\n        if (v.length > 0) {\n          yield [k, v]\n        }\n      }\n    }\n    return iter()\n  }\n\n  tuples(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[K, V]> {\n      for (const [k, v] of self.store.entries()) {\n        for (const ea of toA(v)) {\n          if (ea != null) yield [k, ea]\n        }\n      }\n    }\n    return iter()\n  }\n\n  filterInPlace(predicate: (key: K, value: V) => boolean): boolean {\n    let changed = false\n    for (const [k, arr] of this.store.entries()) {\n      const len = arr.length\n      filterInPlace(arr, v => predicate(k, v))\n      changed = changed || len !== arr.length\n      if (arr.length === 0) {\n        this.store.delete(k)\n      }\n    }\n    return changed\n  }\n\n  inverse(): MultiMap<V, K> {\n    const m = new MultiMap<V, K>()\n    for (const [k, v] of this.store.entries()) {\n      for (const ea of v) {\n        m.add(ea, k)\n      }\n    }\n    return m\n  }\n\n  findKeyByTuple(predicate: (key: K, value: V) => boolean): Maybe<K> {\n    for (const [k, v] of this.tuples()) {\n      if (predicate(k, v)) return k\n    }\n    return\n  }\n\n  filterKeysByTuple(predicate: (key: K, value: V) => boolean): K[] {\n    const result: K[] = []\n    for (const [k, arr] of this.entries()) {\n      if (arr.some(v => predicate(k, v))) result.push(k)\n    }\n    return result\n  }\n\n  toJSON(): Record<string, V[]> {\n    const result: Record<string, V[]> = {}\n    for (const [k, v] of this.entries()) {\n      result[isString(k) ? k : stringify(k)] = v\n    }\n    return result\n  }\n}\n\n/**\n * Groups the given enumeration\n * @return a copy of arr, sorted by the given constraint\n */\nexport function groupBy<K extends Primitive, V>(\n  arr: V[],\n  f: (t: V) => Maybe<K>\n): MultiMap<K, V> {\n  const m = new MultiMap<K, V>()\n  arr.forEach(ea => map(f(ea), k => m.add(k, ea)))\n  return m\n}\n\nexport function groupByValues<K extends Primitive, V>(\n  arr: V[],\n  f: (t: V) => Maybe<K>\n): V[][] {\n  const g = groupBy(arr, f)\n  return sortBy(toA(g.values()), ea => f(ea[0]))\n}\n","const g = globalThis as any\n\nexport const isBrowser =\n  typeof g?.window === \"object\" && typeof g?.document === \"object\"\n\nexport const isNode = typeof g?.process?.versions?.node === \"string\"\n","import { sort } from \"./ArraySort\"\nimport { blank } from \"./Blank\"\nimport { orElse } from \"./Maybe\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { toS } from \"./toS\"\n\nexport function isNumber(o: any): o is number {\n  return typeof o === \"number\" && !isNaN(o) && isFinite(o)\n}\n\nexport function isInvalidNumber(o: any): o is number {\n  return typeof o === \"number\" && (isNaN(o) || !isFinite(o))\n}\n\n// thinking about adding toNumber? Please use toInt or toFloat instead.\n\nconst numeralRE = /^\\d+$/\nexport function isDigits(o: any): boolean {\n  return toS(o).match(numeralRE) != null\n}\n\nconst nonNumericRE = /[^-\\.0-9\\s]/\n\nexport function isNumeric(o: any): boolean {\n  return toS(o).match(nonNumericRE) == null && toFloat(o) != null\n}\n\nexport function isBigInt(o: any): o is bigint {\n  return typeof o === \"bigint\"\n}\n\nexport function mapFinite<T>(i: Maybe<number>, f: (ea: number) => T): Maybe<T> {\n  return isNumber(i) ? f(i) : undefined\n}\n\nconst mapPredicate =\n  (f: (lhs: number, rhs: number) => boolean) =>\n  (lhs: MaybeNull<number>, rhs: MaybeNull<number>) =>\n    isNumber(lhs) && isNumber(rhs) && f(lhs, rhs)\n\nexport const lt = mapPredicate((i, j) => i < j)\nexport const lte = mapPredicate((i, j) => i <= j)\nexport const gt = mapPredicate((i, j) => i > j)\nexport const gte = mapPredicate((i, j) => i >= j)\n\nexport function finiteOrElse<T>(i: Maybe<number>, defaultValue: T): number | T {\n  return isNumber(i) ? i : defaultValue\n}\n\nexport function diff(i: Maybe<number>, j: Maybe<number>): Maybe<number> {\n  return isNumber(i) && isNumber(j) ? i - j : undefined\n}\n\nexport function absdiff(i: Maybe<number>, j: Maybe<number>): Maybe<number> {\n  return isNumber(i) && isNumber(j) ? Math.abs(i - j) : undefined\n}\n\nexport function safeDivide(numerator: number, denominator: number): number {\n  return numerator / (denominator === 0 ? 1e-8 : denominator)\n}\n\n/**\n * @return true iff a is within ((1-minCoeff)*b)±b\n */\nexport function approximates(\n  a: MaybeNull<number>,\n  b: MaybeNull<number>,\n  minCoeff: number = 0.95\n): boolean {\n  if (!isNumber(a) || !isNumber(b)) return false\n  if (a === b) return true\n  if (minCoeff >= 1) return false // it doesn't match!\n  const delta = (b === 0 ? 1e-5 : b) * (1 - minCoeff)\n  return within(b - delta, b + delta, a)\n}\n\n/**\n * @param min inclusive\n * @param max inclusive\n */\nexport function within(min: number, max: number, n: any): n is number {\n  if (n == null || !isNumber(n)) return false\n  ;[min, max] = sort([min, max])\n  return lte(min, n) && gte(max, n)\n}\n\nexport function max_(...arr: Maybe<number>[]): number {\n  let max: Maybe<number>\n  for (const ea of arr) {\n    if (isNumber(ea) && (max == null || max < ea)) max = ea\n  }\n  if (max == null) throw new Error(\"no numbers given to max()\")\n  else return max\n}\n\n/**\n * @return true iff expected is within ±delta of actual\n */\nexport function closeTo(\n  expected: MaybeNull<number>,\n  actual: MaybeNull<number>,\n  delta: number\n): boolean {\n  return isNumber(expected) && isNumber(actual)\n    ? // if the delta is _less than or equal to_, pass.\n      Math.abs(expected - actual) <= delta\n    : false\n}\n\nexport function trunc(n: Maybe<number>): Maybe<number> {\n  if (!isNumber(n)) return undefined\n  const i = Math.trunc(n)\n  return i === 0 ? Math.abs(i) : i\n}\n\nexport interface ToNumber {\n  toNumber(): number\n}\n\nexport function isToNumber(v: any): v is ToNumber {\n  return typeof v?.toNumber === \"function\"\n}\n\nfunction toNumber(\n  value: MaybeNull<number | bigint | string | ToNumber>,\n  opts: {\n    defaultValue: Maybe<number>\n    nton: (n: number) => number\n    ston: (s: string) => Maybe<number>\n  }\n): Maybe<number> {\n  if (blank(value)) return opts.defaultValue\n  if (isNumber(value)) return opts.nton(value)\n  if (isBigInt(value)) {\n    // CAREFUL! Old Safari will keel over due to lack of BigInt support: it's\n    // OK here, because the value typeof is \"bigint\", which would only be true\n    // where BigInt *is* supported.\n    if (\n      value > BigInt(Number.MAX_SAFE_INTEGER) ||\n      value < BigInt(Number.MIN_SAFE_INTEGER)\n    ) {\n      throw new Error(\"precision loss for \" + value)\n    }\n    return opts.nton(Number(value))\n  }\n  if (isToNumber(value)) return opts.nton(value.toNumber())\n  try {\n    const i = opts.ston(toS(value).trim())\n    return isNumber(i) ? opts.nton(i) : opts.defaultValue\n  } catch {\n    return opts.defaultValue\n  }\n}\n\nexport function toInt(\n  value: MaybeNull<number | bigint | string | ToNumber>,\n  opts?: { defaultValue?: number }\n): Maybe<number> {\n  return toNumber(value, {\n    defaultValue: undefined,\n    nton: i => trunc(i)!,\n    ston: parseInt,\n    ...opts\n  })\n}\n\nexport function toFloat(\n  value: MaybeNull<number | string>,\n  opts?: { defaultValue?: number }\n): Maybe<number> {\n  return toNumber(value, {\n    defaultValue: undefined,\n    nton: i => i,\n    ston: parseFloat,\n    ...opts\n  })\n}\n\n/**\n * @return `Math.trunc(n)` if n is a positive integer, else undefined\n */\nexport function toGt0(n: any): Maybe<number> {\n  const i = toInt(n)\n  return i != null && i > 0 ? i : undefined\n}\n\nexport function toGt0f(n: any): Maybe<number> {\n  const i = toFloat(n)\n  return i != null && i > 0 ? i : undefined\n}\n\nexport function lt0(n: any): n is number {\n  return isNumber(n) && n < 0\n}\n\nexport function gt0(n: any): n is number {\n  return isNumber(n) && n > 0\n}\n\nexport function firstGt0(...arr: any[]): Maybe<number> {\n  for (const ea of arr) {\n    if (gt0(ea)) return ea\n    const i = toInt(ea)\n    if (gt0(i)) return i\n  }\n  return\n}\n\nexport function gtOrElse(\n  n: Maybe<number>,\n  mustBeGreaterThan: number\n): Maybe<number> {\n  return isNumber(n) && isNumber(mustBeGreaterThan) && n > mustBeGreaterThan\n    ? n\n    : undefined\n}\n\nexport function lte0(n: any): n is number {\n  return isNumber(n) && n <= 0\n}\n\nexport function gte0(n: any): n is number {\n  return isNumber(n) && n >= 0\n}\n\nexport function toGte0(n: any): Maybe<number> {\n  return gte0(n) ? n : undefined\n}\n\nexport function mapInt<T>(o: any, f: (i: number) => T): Maybe<T> {\n  // PERF: UNROLLED FROM opt()\n  const i = toInt(o)\n  return i == null ? undefined : f(i)\n}\n\nexport function mapFloat<T>(o: any, f: (i: number) => T): Maybe<T> {\n  // PERF: UNROLLED FROM opt()\n  const i = toFloat(o)\n  return i == null ? undefined : f(i)\n}\n\n/**\n * @return a stringified `value` iff `value` is a positive integer\n */\nexport function id(value: Maybe<number | string>): Maybe<string> {\n  const i = toInt(value)\n  return gt0(i) ? String(i) : undefined\n}\n\nexport function mapIntOr<T>(o: any, f: (i: number) => T, orElseF: () => T): T {\n  return orElse(mapInt(o, f), orElseF)\n}\n\nexport function mapNumeric<T>(o: any, f: (i: number) => T): Maybe<T> {\n  return isNumber(o) ? f(o) : undefined\n}\n\nexport function map2Numeric<T>(\n  i: any,\n  j: any,\n  f: (ea1: number, ea2: number) => T\n): Maybe<T> {\n  return mapNumeric(i, ea1 => mapNumeric(j, ea2 => f(ea1, ea2)))\n}\n\nexport function mapNumericOr<T>(\n  o: any,\n  f: (i: number) => T,\n  defaultValue: T\n): T {\n  return isNumber(o) ? f(o) : defaultValue\n}\n\nexport function numericOr(o: any, defaultValue: ThunkOrT<number>): number {\n  return isNumber(o) ? o : tot(defaultValue)\n}\n\nexport function round(i: number): number {\n  // Workaround for bug in javascript (Math.round(-1.5) === -1 (!!)):\n  return !isNumber(i) ? 0 : i < 0 ? -Math.round(-i) : Math.round(i)\n}\n\n/**\n * @see Number#toFixed\n */\nexport function toFixed(i: Maybe<number>, decimals: number): Maybe<number> {\n  try {\n    return mapNumeric(i, ea => round(ea * 10 ** decimals) / 10 ** decimals)\n  } catch (err) {\n    return\n  }\n}\n\n/**\n * Just like Number.toFixed, without extraneous padded zeroes\n *\n * @see Number#toFixed\n */\nexport function toFixedStr(i: number, fractionDigits: number) {\n  // this is NOT a general-purpose zero-stripper-RegExp!\n  return i.toFixed(fractionDigits).replace(/(\\.0*$)|(?<=\\d+\\.\\d+)0+$/, \"\")\n}\n\n/**\n * @see Number#toPrecision\n */\nexport function toPrecision(i: number, decimalPlaces: number): number {\n  if (i == null) return 0\n  // pow should be 1 for decimalPlaces = 0\n  const pow = Math.pow(10, decimalPlaces)\n  return round(i * pow) / pow\n}\n\nexport function toPrecisionMaybe(\n  i: Maybe<number>,\n  decimalPlaces: number\n): Maybe<number> {\n  return mapFinite(i, ea => toPrecision(ea, decimalPlaces))\n}\n\nexport function sigFigs(i: number, digits: number): number {\n  if (i === 0 || digits === 0) {\n    return 0\n  }\n  const exp = digits - round(Math.ceil(Math.log10(Math.abs(i))))\n  const pow = Math.pow(10, Math.abs(exp))\n  // Prevent 120.000000001:\n  return exp < 0 ? round(i / pow) * pow : round(i * pow) / pow\n}\n\nexport function base2Ceil(i: number): number {\n  return Math.pow(2, Math.ceil(Math.log2(i)))\n}\n\nexport function base10Ceil(i: number): number {\n  return Math.pow(10, Math.ceil(Math.log10(i)))\n}\n\nexport function clamp(min: number, max: number, value: number): number {\n  if (min > max || !isNumber(min) || !isNumber(max))\n    throw new Error(`invalid clamp(${min}, ${max}, ${value})`)\n  if (!isNumber(value)) return (min + max) / 2\n  return value < min ? min : value > max ? max : value\n}\n\n/**\n * Accumulate the result of `f`, called `count` times. `f` receives a\n * zero-indexed argument.\n */\nexport function times<T>(count: number, f: (i: number) => T): T[] {\n  if (!gt0(count)) return []\n  const c = Math.round(count)\n  if (c <= 0) return []\n  return [...Array(c)].map((_, i) => f(i))\n}\n\nexport function pct(numerator: Maybe<number>, denominator: number): number {\n  return clamp(\n    0,\n    100,\n    gt0(denominator)\n      ? round((100 * (gt0(numerator) ? numerator : 0)) / denominator)\n      : 0\n  )\n}\n\nexport function fmtPct(i: Maybe<number>): Maybe<string> {\n  const rnd = Math.round(i ?? -1)\n  return within(0, 100, rnd) ? rnd + \"%\" : undefined\n}\n\nconst _factorials: number[] = [1, 1]\n\n/**\n * @return the factorial of `n`\n */\nexport function factorial(n: number): number {\n  if (!gte0(n) || Math.round(n) !== n)\n    throw new Error(`factorial(${n}): must be non-negative integer`)\n  // Number.MAX_VALUE < 171!\n  if (n > 170) return Infinity\n\n  // TODO: replace with ??= when fe is upgraded to TS 3.7+\n  return _factorials[n] != null\n    ? _factorials[n]\n    : (_factorials[n] = factorial(n - 1) * n)\n}\n\n/**\n * @return the number of ways to choose `r` items from `n` items\n */\nexport function choose(n: number, r: number) {\n  return factorial(n) / (factorial(r) * factorial(n - r))\n}\n","import { compact, isEmpty, uniq } from \"./Array\"\nimport { sort } from \"./ArraySort\"\nimport { blank, notBlank } from \"./Blank\"\nimport { isFunction } from \"./isFunction\"\nimport { Defined, defined, map, Unpick } from \"./Maybe\"\nimport {\n  DefinedValued,\n  Maybe,\n  MaybeNull,\n  MaybeValued,\n  ReqValued\n} from \"./MaybeTypes\"\nimport { MultiMap } from \"./MultiMap\"\nimport { isPrimitive } from \"./Primitive\"\nimport { toS } from \"./toS\"\n\nexport type Valued<T> = Record<string, T>\n\nexport type KeyOf<T> = string & keyof T\n// export type KeyOf<T> = Extract<keyof T, string>\n\nexport type StringValued = Valued<Maybe<string>>\nexport type StrBoolValued = Valued<Maybe<string | boolean>>\nexport type NativeValued = Valued<Maybe<string | boolean | number>>\n\nexport type Obj = Record<string, any>\n\nexport function isObject(o: any): o is object {\n  return o != null && typeof o === \"object\"\n}\n\nexport function tap<T>(o: T, block?: (t: T) => void): T {\n  if (block != null) {\n    block(o)\n  } else {\n    if (typeof o === \"string\") {\n      console.log(o)\n    } else {\n      console.dir(o, { depth: null })\n    }\n  }\n  return o\n}\n\nexport function keys<T extends Obj>(obj: Maybe<T>): KeyOf<T>[] {\n  // `typeof null === \"object\"` because js wants to F*CK YOU UP\n  if (obj == null || typeof obj !== \"object\") return []\n  return Object.keys(obj).filter(\n    k =>\n      typeof k === \"string\" &&\n      (obj[\"propertyIsEnumerable\"] == null ||\n        obj[\"propertyIsEnumerable\"](k) === true)\n  )\n}\n\nexport function keysWithDefinedValues<T extends Obj>(\n  obj: Maybe<T>\n): KeyOf<T>[] {\n  return obj == null ? [] : keys(obj).filter(k => obj[k] !== undefined)\n}\n\n/**\n * @return true iff o is null, undefined, or only has keys associated to an\n * `undefined` value\n */\nexport function isEmptyObj(o: any): o is undefined {\n  if (typeof o !== \"object\") return true\n  for (const k in o) {\n    if (o[k] !== undefined) return false\n  }\n  return true\n}\n\nexport function notEmptyObj(o: any): o is Obj {\n  return !isEmptyObj(o)\n}\n\nexport function mapCompactObj<T>(o: Maybe<Obj>, f: (_o: Obj) => T): Maybe<T> {\n  const c = compactValues(o)\n  return notEmptyObj(c) ? f(c) : undefined\n}\n\nexport function values<T extends Obj>(o: T): T[KeyOf<T>][] {\n  return keys(o).map(k => o[k]) as any\n}\n\n// polyfill for Object.entries. Does no nullish-value compaction!\nexport function entries<T extends Obj>(obj: T): [KeyOf<T>, T[KeyOf<T>]][] {\n  return obj == null\n    ? []\n    : Object.entries?.(obj) ?? keys(obj ?? {}).map(ea => [ea, obj[ea]])\n}\n\nexport function fromEntries(\n  arr: MaybeNull<Iterable<Maybe<[Maybe<string>, any]>>>,\n  obj?: any\n): any {\n  if (arr == null) return obj\n  // don't use Object.create(null), json stringify will break!\n  for (const ea of arr) {\n    if (ea != null && Array.isArray(ea)) {\n      const [k, v] = ea\n      // allow NULL fields:\n      if (k != null && v !== undefined) {\n        if (typeof obj !== \"object\") obj = {}\n        obj[k] = v\n      }\n    }\n  }\n  return obj\n}\n\nexport function assignFields<T>(\n  dest: T,\n  src: Maybe<Partial<T>>,\n  opts?: { omitKeys?: string[]; assignNullish?: boolean }\n): T {\n  if (src == null) {\n    return dest\n  }\n  for (const [k, v] of entries(src)) {\n    if (opts?.omitKeys?.includes(k) === true) continue\n    if (v != null || true === opts?.assignNullish) (dest as any)[k] = v\n  }\n  return dest\n}\n\n/**\n * Only overwrite fields from src that are undefined in dest.\n */\nexport function assignUndefinedFields<T>(\n  dest: T,\n  src: Maybe<Pick<T, any>>,\n  ...srcKeys: KeyOf<T>[]\n): T {\n  if (src == null) {\n    return dest\n  }\n  for (const ea of srcKeys) {\n    const v = src[ea]\n    if (v !== undefined && dest[ea] === undefined) dest[ea] = v\n  }\n  return dest\n}\n\n/**\n * Assigns all keys from src to dest, even if they are null or undefined.\n */\nexport function assignAllFields<T>(dest: T, src: Maybe<Pick<T, any>>): T {\n  for (const [k, v] of entries(src ?? {})) {\n    ;(dest as any)[k] = v\n  }\n  return dest\n}\n\nexport function definedValues<T extends Obj>(\n  t: Maybe<T>\n): Maybe<DefinedValued<Partial<T>>> {\n  if (t == null) return undefined\n  const arr = entries(t)\n  if (arr.every(([, v]) => v !== undefined)) return t\n  const pairs = arr.filter(([, v]) => v !== undefined)\n  return isEmpty(pairs) ? undefined : fromEntries(pairs)\n}\n\nexport function compactValues<T extends Obj>(\n  t: Maybe<T>\n): Maybe<ReqValued<Partial<T>>> {\n  if (t == null) return undefined\n  const arr = entries(t)\n  if (arr.every(([, v]) => v != null)) return t\n  const pairs = arr.filter(([, v]) => v != null)\n  return isEmpty(pairs) ? undefined : fromEntries(pairs)\n}\n\nexport function compactValuesDeep(o: any): any {\n  if (o == null) return\n  if (isPrimitive(o)) return o\n  if (Array.isArray(o)) {\n    return compact(o.map(compactValuesDeep))\n  } else {\n    const arr = compact(\n      entries(o).map(([k, v]) => map(compactValuesDeep(v), ea => [k, ea]))\n    )\n    return arr.length === 0 ? undefined : fromEntries(arr as any)\n  }\n}\n\nexport function compactBlankValues<T extends Obj>(\n  t: Maybe<T>\n): Maybe<ReqValued<Partial<T>>> {\n  if (t == null) return undefined\n  const pairs = entries(t).filter(([k, v]) => k != null && notBlank(v))\n  return isEmpty(pairs) ? undefined : fromEntries(pairs)\n}\n\nexport function mapFields(\n  o: Obj,\n  f: (key: string, value: any) => Maybe<[string, any]>,\n  obj = {}\n): Obj {\n  // DON'T DELETE THIS SORT! This makes model upserts have the same prepared\n  // statements:\n\n  const arr = compact(sort(keys(o)).map(k => f(k, o[k])))\n  return fromEntries(\n    arr.filter(([k, v]) => k != null && v !== undefined), // < allow NULL values!\n    obj\n  )\n}\n\nexport function pick<T, K extends keyof T>(\n  obj: T,\n  ...keyNames: K[]\n): Pick<T, K> {\n  if (obj == null) return obj\n  const result = {} as any\n  for (const key of keyNames) {\n    const v = obj[key]\n    if (v !== undefined) result[key] = obj[key]\n  }\n  return result\n}\n\nexport function pickCompact<T, K extends keyof T>(\n  obj: T,\n  ...keyNames: K[]\n): Maybe<Pick<T, K>> {\n  if (obj == null) return\n  const result = {} as any\n  for (const key of keyNames) {\n    const v = obj[key]\n    if (v !== undefined) result[key] = obj[key]\n  }\n  return result\n}\n\n/**\n * @param keynames can be \"key.child.grandchild\" format to pick deep objects.\n */\nexport function pickDeep<T, K extends keyof T>(\n  obj: T,\n  ...keyNames: (K | string)[]\n): Pick<T, K> {\n  if (obj == null) return obj\n  if (Array.isArray(obj)) return obj.map(ea => pickDeep(ea, ...keyNames)) as any\n  const flat: string[] = []\n  const mm = new MultiMap<string, string>()\n  for (const key of keyNames.map(toS)) {\n    const indexOf = key.indexOf(\".\")\n    if (indexOf === -1) {\n      flat.push(key)\n    } else {\n      mm.add(key.slice(0, indexOf) as any, key.slice(indexOf + 1))\n    }\n  }\n  const result = {} as any\n  for (const key of flat) {\n    const v = obj[key as K]\n    // allow NULL values:\n    if (v !== undefined) {\n      result[key as K] = v\n    }\n  }\n  const deepKeysByLocalField = [...mm.entries()]\n  for (const [key, arr] of deepKeysByLocalField) {\n    const v = obj[key as K]\n    if (v != null) {\n      const ea = pickDeep(v as any, ...(arr as any))\n      // allow NULL values:\n      if (ea !== undefined) {\n        result[key] = ea\n      }\n    }\n  }\n  return result\n}\n\nexport function pickNonBlank<T, K extends keyof T>(\n  obj: T,\n  ...keyNames: K[]\n): Pick<T, K> {\n  if (obj == null) return obj\n  const result = {} as any\n  for (const key of keyNames) {\n    const v = obj[key as K]\n    if (notBlank(v)) {\n      result[key as K] = v\n    }\n  }\n  return result\n}\n\n/**\n * @return the first value in `obj` associated to `keyNames` that `predicate` returns true.\n */\nexport function pickFirst<T, K extends keyof T>(\n  obj: T,\n  keyNames: K[],\n  predicate: (v: T[K]) => boolean = defined\n): Maybe<T[K]> {\n  if (obj == null) return\n  for (const key of keyNames) {\n    if (predicate(obj[key])) return obj[key]\n  }\n  return\n}\n\nexport function omit<T extends Record<string, any>, S extends keyof T>(\n  t: Maybe<T>,\n  ...keysToOmit: S[]\n): Unpick<T, S> {\n  if (t == null || keysToOmit.every(ea => blank(t[ea]))) {\n    return t as any\n  }\n  const pairs = entries(t).filter(([k]) => !keysToOmit.includes(k as any))\n  return isEmpty(pairs) ? undefined : fromEntries(pairs)\n}\n\nexport function isReqValued<T>(t: MaybeValued<T>): t is ReqValued<T> {\n  return values(t as any).every(ea => ea != null)\n}\n\nexport function allKeysDefined<T, K extends keyof T>(\n  obj: Maybe<T>,\n  ...keyNames: K[]\n): obj is Defined<T> {\n  return obj != null && keyNames.every(k => obj[k] != null)\n}\n\n/**\n * @return t if it `isReqValued()`, otherwise undefined\n */\nexport function toReqValued<T>(t: MaybeValued<T>): Maybe<ReqValued<T>> {\n  return isReqValued(t) ? t : undefined\n}\n\nexport function reqValuedOrElse<T>(t: MaybeValued<T>): Maybe<ReqValued<T>> {\n  return isReqValued(t) ? t : undefined\n}\n\nexport function mapReqValued<T, U>(\n  t: MaybeValued<T>,\n  f: (ea: ReqValued<T>) => U\n): Maybe<U> {\n  return isReqValued(t) ? f(t) : undefined\n}\n\nexport function onlyReqValued<T>(arr: MaybeValued<T>[]): ReqValued<T>[] {\n  return arr.filter(isReqValued)\n}\n\nexport function filter<T extends Obj, K extends string & keyof T>(\n  obj: T,\n  predicate: (k: K, value: T[K]) => boolean\n): Partial<T> {\n  if (obj == null) return obj\n  return fromEntries(\n    entries(obj).filter(([k, v]) => predicate(k as K, v as T[K]))\n  )\n}\n\n/**\n * As opposed to .keys() which only returns fields directly associated to the\n * given Obj, `allKeys` returns all direct *and inherited* properties (if\n * `obj` is a class instance, for example)\n */\nexport function allKeys(obj: any): string[] {\n  const methods: string[] = keys(obj)\n  while (null != (obj = Reflect.getPrototypeOf(obj))) {\n    methods.push(\n      ...(Reflect.ownKeys(obj).filter(\n        key => typeof key === \"string\"\n      ) as string[])\n    )\n  }\n  return uniq(methods)\n}\n\nexport function maybeCall(o: any, method: string, ...args: any[]) {\n  const f = o?.[method]\n  return isFunction(f) ? f.bind(o)(...args) : undefined\n}\n\nexport function firstValueCaseInsensitive(o: any, key: string): any {\n  if (blank(key)) return\n  if (o[key] != null) return o[key]\n  const lckey = key.toLowerCase().normalize()\n  for (const k of keys(o)) {\n    if (lckey === k.toLowerCase().normalize() && o[k] != null) return o[k]\n  }\n  return\n}\n\n/**\n * Recursively reduce single-value objects to only their value, and retain\n * multi-value objects.\n */\nexport function flattenObject(o: any): any {\n  if (Array.isArray(o)) return o.map(flattenObject)\n  if (typeof o !== \"object\") return o\n  const f = mapFields(o, (key, value) => [key, flattenObject(value)])\n  const v = values(f)\n  return v.length === 1 ? v[0] : f\n}\n","import { Maybe, MaybeNull } from \"./MaybeTypes\"\n\n// Scala got a Some things right.\n// HUR HUR I AM HILLLARIOUS\n\n// \"Opt\" instead of \"Option\" due to Option being an html entity already\n\nexport type MaybeOpt<T> = Opt<T> | MaybeNull<T>\n\n/**\n * @see http://www.scala-lang.org/api/current/scala/Option.html\n */\nexport interface Opt<A> {\n  /**\n   * @return true if the option is an instance of Some, false otherwise\n   */\n  isDefined: boolean\n  /**\n   * @return true if the option is None, false otherwise\n   */\n  isEmpty: boolean\n  /**\n   * @return the option's value.\n   */\n  get(): Maybe<A>\n  /**\n   * @return true if this option is nonempty and the predicate `p` returns true\n   * when applied to this Option's value.\n   */\n  exists(p: (a: A) => boolean): boolean\n  /**\n   * @return a `Some` containing the result of applying `f` to this `Option`'s value\n   * if this `Option` is nonempty.\n   */\n  map<B>(f: (a: A) => B): Opt<B>\n  /**\n   * @return the result of applying `f` to this `Option`'s value if this\n   * `Option` is nonempty. By supporting `undefined` or `B`, we make caller's\n   * lives a little easier--we'll wrap the result in an `Option` for you.\n   */\n  flatMap<B>(f: (a: A) => MaybeOpt<B>): Opt<B>\n  /**\n   * @return this `Option` if it is both nonempty\n   * and applying the predicate `p` to this `Option`'s value returns true.\n   */\n  filter(p: (a: A) => boolean): Opt<A>\n  /**\n   * Apply the given procedure `f` to the `Option`'s value\n   * if this `Option` is nonempty.\n   * @return this (for fluent or chaining calls)\n   */\n  forEach(f: (a: A) => void): Opt<A>\n  /**\n   * @return this `Option`'s value if this `Option` is nonempty,\n   * otherwise return the result of evaluating `f`.\n   */\n  getOrElse(f: () => A): A\n  /**\n   * @return this `Option`'s value if this `Option` is nonempty,\n   * otherwise return the result of evaluating `f`.\n   */\n  orElse(f: () => MaybeOpt<A>): Opt<A>\n\n  /**\n   * @param f will only be invoked if both `this` and `b` are defined\n   */\n  zip1<B, T>(b: MaybeOpt<B>, f: (_a: A, _b: B) => MaybeOpt<T>): Opt<T>\n\n  zip2<B, C, T>(\n    b: MaybeOpt<B>,\n    c: MaybeOpt<C>,\n    f: (_a: A, _b: B, _c: C) => MaybeOpt<T>\n  ): Opt<T>\n\n  zip3<B, C, D, T>(\n    b: MaybeOpt<B>,\n    c: MaybeOpt<C>,\n    d: MaybeOpt<D>,\n    f: (_a: A, _b: B, _c: C, _d: D) => MaybeOpt<T>\n  ): Opt<T>\n}\n\nnamespace NoneImpl {\n  export const isDefined = false\n  export const isEmpty = true\n  export const get = () => undefined\n  export const exists = () => false\n  const noop = () => NoneImpl\n  export const map = noop\n  export const flatMap = noop\n  export const filter = noop\n  export const forEach = noop\n  export const getOrElse = <A>(f: () => A): A => f()\n  export const orElse = <A>(f: () => MaybeOpt<A>): Opt<A> => opt(f())\n  export const zip1 = noop\n  export const zip2 = noop\n  export const zip3 = noop\n}\n\nexport const None: Opt<any> = NoneImpl\n\nexport class Some<A> implements Opt<A> {\n  readonly isDefined = true\n  readonly isEmpty = false\n\n  constructor(private readonly a: A) {}\n\n  get(): A {\n    return this.a\n  }\n\n  exists(f: (a: A) => boolean): boolean {\n    return f(this.a)\n  }\n\n  map<B>(f: (a: A) => B): Opt<B> {\n    return new Some(f(this.a))\n  }\n\n  flatMap<B>(f: (a: A) => Opt<B> | MaybeNull<B>): Opt<B> {\n    const b = f(this.a)\n    return isOpt(b) ? b : opt(b)\n  }\n\n  filter(f: (a: A) => boolean): Opt<A> {\n    return opt(f(this.a) ? this.a : undefined)\n  }\n\n  forEach(f: (a: A) => void): this {\n    f(this.a)\n    return this\n  }\n\n  getOrElse(): A {\n    return this.a\n  }\n\n  orElse(): Opt<A> {\n    return this\n  }\n\n  zip1<B, T>(b: MaybeOpt<B>, f: (_a: A, _b: B) => MaybeOpt<T>): Opt<T> {\n    return opt(b).flatMap(eb => f(this.a, eb))\n  }\n\n  zip2<B, C, T>(\n    b: Opt<B>,\n    c: Opt<C>,\n    f: (_a: A, _b: B, _c: C) => MaybeOpt<T>\n  ): Opt<T> {\n    return opt(b).flatMap(eb => opt(c).flatMap(ec => f(this.a, eb, ec)))\n  }\n\n  zip3<B, C, D, T>(\n    b: MaybeOpt<B>,\n    c: MaybeOpt<C>,\n    d: MaybeOpt<D>,\n    f: (_a: A, _b: B, _c: C, _d: D) => MaybeOpt<T>\n  ): Opt<T> {\n    return opt(b).flatMap(eb =>\n      opt(c).flatMap(ec => opt(d).flatMap(ed => f(this.a, eb, ec, ed)))\n    )\n  }\n}\n\nexport function isOpt<A>(a: MaybeOpt<A>): a is Opt<A> {\n  return a instanceof Some || a === None\n}\n\n/**\n * @see http://www.scala-lang.org/api/current/scala/Option.html\n */\nexport function opt<A>(a: MaybeOpt<A>): Opt<A> {\n  return isOpt(a) ? a : a != null ? new Some(a) : None\n}\n","import { Maybe } from \"./MaybeTypes\"\nimport { toInt, within } from \"./Number\"\nimport { randomInt } from \"./Random\"\nimport { toS } from \"./toS\"\n\nexport const PrimesPerBin = 4\nexport const PrimeBins = 8\n\nexport const SeedCount = PrimesPerBin ** PrimeBins\n\nexport function prngSeed(): number {\n  return randomInt(0, SeedCount)\n}\n\nexport function toSeed(s: any): Maybe<number> {\n  const i = toInt(toS(s))\n  return within(0, SeedCount, i) ? i : undefined\n}\n","import { gte, isNumber, lt, round } from \"./Number\"\nimport { StringValued } from \"./Object\"\nimport { toS } from \"./toS\"\n\nconst pads: StringValued = {}\n\nexport function padding(char: string, length: number): string {\n  if (length < 1) return \"\"\n  if (!gte(pads[char]?.length, length)) {\n    let s = pads[char] ?? char\n    while (s.length < length) {\n      s += char\n    }\n    pads[char] = s\n  }\n  return pads[char]!.substring(0, length)\n}\n\n// first added for irony, then used nonironically:\nexport function leftPad(s: any, minLength: number, padChar: string): string {\n  if (padChar.length === 0) throw new Error(\"leftPad() given empty pad\")\n  if (lt(s, 0)) {\n    return \"-\" + leftPad(String(Math.abs(s)), minLength - 1, padChar)\n  }\n  const str = toS(s)\n  return padding(padChar, minLength - str.length) + str\n}\n\n/**\n * Left-zero-pad\n */\nexport function padNumeric(i: any, minLength: number): string {\n  return leftPad(isNumber(i) ? round(i) : \"0\", minLength, \"0\")\n}\n\nexport function pad2(s: any): string {\n  return padNumeric(s, 2)\n}\n\nexport function pad3(s: any): string {\n  return padNumeric(s, 3)\n}\n\nexport function pad4(s: any): string {\n  return padNumeric(s, 4)\n}\n","// TODO INLINE\nexport { parseJSON } from \"./JSON\"\n","import { blank } from \"./Blank\"\n\nconst irregular = new Map([\n  [\"child\", \"children\"],\n  [\"photo\", \"photos\"],\n  [\"video\", \"videos\"]\n])\nconst es = /(s|ss|sh|ch|x|z)$/\nconst consonant_y = /[^aeiou]y$/\nconst vowel_y = /[aeiou]y$/\nconst is = /is$/\n\nexport function pluralize(singular: string) {\n  if (blank(singular)) return singular\n\n  const irr = irregular.get(singular)\n  if (irr != null) return irr\n\n  // https://www.grammarly.com/blog/plural-nouns/\n  if (singular.match(es) != null) {\n    return singular + \"es\"\n  }\n  if (singular.match(consonant_y) != null) {\n    return singular.replace(/y$/i, \"ies\")\n  }\n  if (singular.match(vowel_y) != null) {\n    return singular + \"s\"\n  }\n  if (singular.endsWith(\"o\")) {\n    return singular + \"es\"\n  }\n  if (singular.match(is) != null) {\n    return singular.replace(is, \"es\")\n  }\n\n  return singular + \"s\"\n}\n","import { isEmpty } from \"./Array\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { toS } from \"./toS\"\n\nexport type Primitive = number | string | boolean\nconst primitiveTypes = [\"number\", \"string\", \"boolean\"]\n\nexport interface PrimitiveValued {\n  [key: string]: Primitive\n}\n\nexport interface Primitivable {\n  valueOf(): Primitive\n}\n\nexport interface Primitivables {\n  valueOf(): Primitive[]\n}\n\n// HEY FUTURE ME, looking for something like DeepComparable? See the `Json` type in src/fe/JSON.ts\n\nexport type Comparable = Primitive | Date | Comparable[]\n\nexport function isPrimitive(obj: any): obj is Primitive {\n  return primitiveTypes.indexOf(typeof obj) !== -1\n}\n\nexport function mapPrimitive<T>(a: any, f: (t: Primitive) => T): Maybe<T> {\n  return isPrimitive(a) ? f(a) : undefined\n}\n\nexport function mapPrimitiveOr<T>(\n  a: any,\n  f: (t: Primitive) => T,\n  defaultValue: () => T\n): Maybe<T> {\n  return isPrimitive(a) ? f(a) : defaultValue()\n}\n\nexport function isPrimitiveArray(obj: any): obj is Primitive[] {\n  return Array.isArray(obj) && (obj as any[]).every(isPrimitive)\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\nconst TypeLevel = [\n  \"boolean\",\n  \"number\",\n  \"bigint\",\n  \"symbol\",\n  \"string\",\n  \"object\",\n  \"function\"\n] // typeof array is \"object\"\n\n/**\n * (null || undefined) < false < true < numbers < strings < arrays\n * @return 1 if a > b, -1 if a < b, 0 if a == b.\n */\nexport function cmp<T extends Maybe<Comparable> | Maybe<Comparable>[]>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): number {\n  // undefined == undefined:\n  if (a == null && b == null) return 0\n\n  // undefined should be < defined. We can't use typeof here because typeof null\n  // is \"object\" and typeof undefined = \"undefined\".\n  if (a == null) return -1\n  if (b == null) return 1\n\n  const aType = typeof a\n  const bType = typeof b\n\n  if (\n    (aType === \"string\" || aType === \"symbol\") &&\n    (bType === \"string\" || bType === \"symbol\")\n  ) {\n    // in German, ä sorts before z, in Swedish, ä sorts after z\n    return toS(a).localeCompare(toS(b))\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return cmpArr(a, b)\n  }\n  if (aType !== bType) {\n    return TypeLevel.indexOf(aType) - TypeLevel.indexOf(bType)\n  } else {\n    return a > b ? 1 : a < b ? -1 : 0\n  }\n}\n\nexport function lt<T extends Comparable>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): boolean {\n  return cmp(a, b) < 0\n}\n\nexport function lte<T extends Comparable>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): boolean {\n  return cmp(a, b) <= 0\n}\n\nexport function gte<T extends Comparable>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): boolean {\n  return cmp(a, b) >= 0\n}\n\nexport function gt<T extends Comparable>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): boolean {\n  return cmp(a, b) > 0\n}\n\n/**\n * @return 1 if a > b, -1 if a < b, 0 if a == b.\n */\nexport function cmpArr<T extends Comparable | Comparable[]>(\n  a: T[],\n  b: T[],\n  shorterArrayIsLessThan = true\n): number {\n  if (isEmpty(a) && isEmpty(b)) return 0\n  const len = Math.min(a.length, b.length)\n  for (let i = 0; i < len; i++) {\n    const c = cmp(a[i], b[i])\n    if (c !== 0) {\n      return c\n    }\n  }\n  return cmp(a.length, b.length) * (shorterArrayIsLessThan ? 1 : -1)\n}\n","import { Defined } from \"./Maybe\"\nimport { Maybe } from \"./MaybeTypes\"\nimport {\n  MaybeNullSyncOrAsync,\n  MaybeSyncOrAsync,\n  SyncOrAsync\n} from \"./SyncOrAsync\"\nimport { toA } from \"./toA\"\n\n// Looking for UnwrapPromiseLike? See fe/UnwrapPromiseLike.ts\n\n/**\n * Safe calls for Optional promises:\n */\nexport async function thenMap<T1, T2>(\n  objP: MaybeNullSyncOrAsync<T1>,\n  f: (t: T1) => MaybeSyncOrAsync<T2>\n): Promise<Maybe<T2>> {\n  const obj = await objP\n  return obj == null ? undefined : f(obj)\n}\n\n/**\n * Serialized promise gathering and compaction\n * @see ../core/async/Promise#tuples\n */\nexport async function thenCollect<T1, T2>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T1>[]>,\n  f: (t: T1) => MaybeSyncOrAsync<T2>\n): Promise<Defined<T2>[]> {\n  const result: Defined<T2>[] = []\n  for (const eaP of toA(await arr)) {\n    if (eaP != null) {\n      const ea = await eaP\n      if (ea != null) {\n        const r = await f(ea)\n        if (r != null) result.push(r as any)\n      }\n    }\n  }\n  return result\n}\n\nexport async function thenTap<T>(\n  p: SyncOrAsync<T>,\n  f: (t: T) => any = console.dir.bind(console)\n): Promise<T> {\n  const result = await p\n  // We await f so if it raises errors, thenTap will propagate the error:\n  await f(result)\n  return result\n}\n\nexport function isPromiseLike(o: any): o is PromiseLike<any> {\n  return o != null && typeof o === \"object\" && typeof o[\"then\"] === \"function\"\n}\n\nexport function isPromise(o: any): o is Promise<any> {\n  return (\n    isPromiseLike(o) &&\n    typeof (o as any)[\"catch\"] === \"function\" &&\n    typeof (o as any)[\"finally\"] === \"function\"\n  )\n}\n\n/**\n * Only run `ifTrue` if `predicate` is true after `p` finishes.\n */\nexport async function thenIf<T, U>({\n  p,\n  predicate,\n  ifTrue\n}: {\n  p: Promise<T>\n  predicate: (t: T) => boolean\n  ifTrue: (t: T) => SyncOrAsync<U>\n}): Promise<Maybe<U>> {\n  const t = await p\n  return predicate(t) ? ifTrue(t) : undefined\n}\n","import { strEnum, StrEnumKeys } from \"./StrEnum\"\n\n/**\n * \"settled\" means either resolved or rejected.\n *\n * \"fulfilled\" is an alias for \"resolved.\" We use \"resolved\" as that matches\n * the Promise API terminology.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n */\nexport const PromiseStates = strEnum(\"pending\", \"resolved\", \"rejected\")\nexport type PromiseState = StrEnumKeys<typeof PromiseStates>\n","import { isEmpty, sum } from \"./Array\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { gt0 } from \"./Number\"\n\nfunction rndInt(min: number, max: number): number {\n  // CAUTION: using Math.round() will give you a non-uniform distribution!\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\n/**\n * @param min (inclusive)\n * @param max (exclusive)\n * @return a random integer between min (included) and max (excluded),\n * excluding the values in `excluded`.\n */\nexport function randomInt(\n  min: number,\n  max: number,\n  excluded?: number[]\n): number {\n  return randomInts(min, max, 1, excluded)[0]\n}\n\n/**\n * @param min (inclusive)\n * @param max (exclusive)\n * @return a set of `size` random integers between min (included) and max\n * (excluded), excluding the values in `excluded`.\n */\nexport function randomInts(\n  min: number,\n  max: number,\n  size: number,\n  excluded?: number[]\n): number[] {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n\n  if (max < min) {\n    throw new Error(`randomInts(): invalid range: ${min} > ${max}`)\n  }\n  const range = max - min\n  const excludeSet = new Set(excluded ?? [])\n\n  if (max === min && range === 0 && excludeSet.size === 0 && size === 1) {\n    return [min]\n  }\n\n  const slotsRemaining = range - excludeSet.size\n\n  if (size > slotsRemaining) {\n    throw new Error(\n      `randomInts(): cannot satisfy request: ${JSON.stringify({\n        max,\n        min,\n        range,\n        size,\n        slotsRemaining\n      })}`\n    )\n  }\n  // const luckThreshold = 0.6 // found with minSearch()\n  // if ((slotsRemaining - size) / range < luckThreshold) {\n\n  // HEY FUTURE ME: turns out that either implementation is fine, even for\n  // large ranges and large excluded sets, but the retained implementation\n  // uses less memory allocation, so it wins.\n\n  // const result = []\n  // const eligible = []\n  // for (let i = min; i < max; i++) {\n  //   if (!excludeSet.has(i)) {\n  //     eligible.push(i)\n  //   }\n  // }\n  // for (let i = 0; i < size; i++) {\n  //   const idx = rndInt(0, eligible.length)\n  //   result.push(eligible.splice(idx, 1)[0])\n  // }\n  // return result\n  // } else {\n  const result = new Set<number>()\n  while (result.size < size) {\n    const candidate = rndInt(min, max)\n    if (!excludeSet.has(candidate)) {\n      result.add(candidate)\n    }\n  }\n  return [...result]\n  // }\n}\n\nexport function randomBoolean(trueRatio = 0.5): boolean {\n  return Math.random() <= trueRatio\n}\n\n/**\n * @return a random float between `min` and `max`\n */\nexport function randomFloat(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nexport const NumericChars = \"0123456789\"\nexport const LowercaseChars = \"abcdefghijkmnopqrstuvwxyz\"\n// No upper case to support case-insensitive filesystems. Exported for tests.\n// We could have used GeoRadix.numerals, but that's a possible circular dep.\nexport const RandomChars = NumericChars + LowercaseChars\n\n/**\n * @return a random string matching /[a-z0-9]{count}/\n */\nexport function randomChars(\n  count: number,\n  chars: string = RandomChars\n): string {\n  let result = \"\"\n  for (let i = 0; i < count; i++) {\n    result += randomChar(chars)\n  }\n  return result\n}\n\nexport function randomChar(chars: string = RandomChars): string {\n  return chars[randomInt(0, chars.length)]\n}\n\nexport function pickRandom<T>(arr: T[]): Maybe<T> {\n  return arr[randomInt(0, arr.length)]\n}\n\n/**\n * Fisher-yates shuffle on shallow clone of `arr`\n */\nexport function shuffle<T>(arr: T[]): T[] {\n  const r = [...arr]\n  for (let i = r.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    if (i !== j) [r[i], r[j]] = [r[j], r[i]]\n  }\n  return r\n}\n\nexport function sample<T>(arr: T[], size: number): T[] {\n  const result: T[] = []\n  for (const idx of randomInts(0, arr.length, size)) {\n    result.push(arr[idx])\n  }\n  return result\n}\n\nexport function pickWeightedRandom<T extends { priority?: number }>(\n  arr: T[]\n): Maybe<T> {\n  if (isEmpty(arr)) return\n  const nonZeroes = arr.filter(ea => gt0(ea.priority))\n  const totalPriority = sum(nonZeroes, ea => ea.priority!)\n  let rand = randomFloat(0, totalPriority)\n  return nonZeroes.find(ea => {\n    rand -= ea.priority!\n    return rand <= 0\n  })\n}\n","export function replaceAllMatches(\n  str: string,\n  regex: RegExp,\n  fn: (match: RegExpExecArray) => string\n): string {\n  let result = str\n  if (!regex.global) regex = new RegExp(regex, \"g\")\n\n  let m: RegExpExecArray | null = null\n  while ((m = regex.exec(str)) != null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++\n    }\n    result =\n      result.slice(0, m.index) + fn(m) + result.slice(m.index + m[0].length)\n  }\n  return result\n}\n","import { Maybe } from \"./MaybeTypes\"\nimport { isNumber } from \"./Number\"\n\nexport type Rotation = 0 | 90 | 180 | 270\n\nexport function isRotation(r: any): r is Rotation {\n  return isNumber(r) && [0, 90, 180, 270].includes(r)\n}\n\n/** @return if set, rotation, normalized to [0, 360) */\nexport function normalizeRotation(r: Maybe<number>): Maybe<Rotation> {\n  if (!isNumber(r)) return\n  const p = r >= 0 ? r : r + Math.ceil(1 + -r / 360) * 360\n  return ((Math.round(p / 90) * 90) % 360) as Rotation\n}\n\n/**\n * @return true if the dimensions need to be flipped to respect the given\n * rotation\n */\nexport function swappableRotation(rotation: Maybe<number>) {\n  const r = normalizeRotation(rotation)\n  return r === 90 || r === 270\n}\n","import { strEnum, StrEnumKeys } from \"../fe/StrEnum\"\n\nexport const RunStates = strEnum(\n  /** starting up: show splash */\n  \"loading\",\n  /** no current library: show /welcome page */\n  \"welcome\",\n  /** library is open: show /tag home page */\n  \"ready\",\n  /** library isn't open: show /status page */\n  \"failed\"\n)\nexport type RunStateEnum = StrEnumKeys<typeof RunStates>\n\nexport type ApiSplashEvent = \"version\" | \"msg\" | \"settled\"\n","import { strEnum, StrEnumKeys } from \"./StrEnum\"\n\nexport const ServiceNames = strEnum(\n  \"main\",\n  \"desktop\",\n  \"web\",\n  \"sync\",\n  \"info\",\n  \"test\",\n  \"logcat\",\n  \"logtail\",\n  \"list\",\n  \"billing\",\n  \"worker\",\n  \"test-worker\"\n)\n\nexport type ServiceName = StrEnumKeys<typeof ServiceNames>\n","export function splitFirst(\n  s: string,\n  pattern: string\n): [string, string] | [string] {\n  const indexOf = s.indexOf(pattern)\n  return indexOf === -1\n    ? [s]\n    : [s.slice(0, indexOf), s.slice(indexOf + pattern.length)]\n}\n","import { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { fromEntries } from \"./Object\"\nimport { ThunkOrT, tot } from \"./Thunk\"\n\n// See https://basarat.gitbooks.io/typescript/content/docs/types/literal-types.html\n\nexport type StrEnumType<T extends string> = {\n  [K in T]: K\n}\n\nexport type StrEnumHelpers<T extends string> = {\n  values: T[]\n  length: number\n  /** synonym for includes */\n  has(s: MaybeNull<string>): s is T\n  includes(s: MaybeNull<string>): s is T\n  getCI(s: MaybeNull<string>): Maybe<T>\n  omit<O extends T>(...t: O[]): Exclude<T, O>[]\n  indexOf(s: MaybeNull<string>): Maybe<number>\n  ordinal(s: MaybeNull<string>): number\n  validOrElse<R>(s: MaybeNull<string>, defaultValue: ThunkOrT<R>): T | R\n  mapValid<R>(s: MaybeNull<string>, f: (t: T) => R): Maybe<R>\n  cmp(a: MaybeNull<string>, b: MaybeNull<string>): Maybe<number>\n}\n\nexport type StrEnum<T extends string> = StrEnumType<T> & StrEnumHelpers<T>\n\nexport type StrEnumKeys<Type> = Type extends StrEnum<infer X> ? X : never\n\nexport function strEnum<T extends string>(...o: T[]): StrEnum<T> {\n  const values = Object.freeze(o) as T[]\n  const valueToIndex = fromEntries(values.map((ea, idx) => [ea, idx]))\n\n  const dict: StrEnumType<T> = {} as any\n  for (const ea of values) {\n    dict[ea] = ea\n  }\n\n  // toLowerCase() is safe because we know all strEnum values are latin ASCII:\n  const getCI = (s: MaybeNull<string>) => {\n    if (s == null) return // < remember that some strEnum values are \"\"\n    s = s.toLowerCase()\n    return values.find(ea => ea.toLowerCase() === s)\n  }\n\n  const indexOf = (s: MaybeNull<string>) =>\n    s != null ? valueToIndex[s] : undefined\n\n  const ordinal = (s: MaybeNull<string>) => indexOf(s) ?? values.length\n\n  const includes = (s: MaybeNull<string>): s is T => indexOf(s) != null\n\n  const omit = (...t: T[]) => values.filter(ea => !t.includes(ea)) as any\n\n  const validOrElse = <R>(s: MaybeNull<string>, defaultValue: ThunkOrT<R>) =>\n    includes(s) ? s : tot(defaultValue)\n\n  const mapValid = <R>(s: MaybeNull<string>, f: (t: T) => R) =>\n    includes(s) ? f(s as T) : undefined\n\n  const cmp = (a: MaybeNull<string>, b: MaybeNull<string>) => {\n    const a_ = indexOf(a)\n    const b_ = indexOf(b)\n    return a_ == null || b_ == null ? undefined : a_ > b_ ? 1 : a_ < b_ ? -1 : 0\n  }\n\n  return {\n    ...dict,\n    values,\n    length: values.length,\n    has: includes, // alias for includes\n    includes,\n    getCI,\n    omit,\n    indexOf,\n    ordinal,\n    validOrElse,\n    mapValid,\n    cmp\n  }\n}\n\n/* \n\nExample usage:\n\nexport const Directions = strEnum(\"North\", \"South\", \"East\", \"West\")\nexport type Direction = StrEnumKeys<typeof Directions>\n\n*/\n","import { at } from \"./At\"\nimport { flatten } from \"./Flatten\"\nimport { countIterable, sliceIterable } from \"./Iterable\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { clamp, round } from \"./Number\"\nimport { Segmenter } from \"./Segmenter\"\nimport { toA } from \"./toA\"\nimport { toS } from \"./toS\"\n\nexport function isString(obj: any): obj is string {\n  return typeof obj === \"string\"\n}\n\n// safe for frontend (which doesn't have a Buffer)\nexport function isBuffer(obj: any): obj is Buffer {\n  return obj?.constructor?.name === \"Buffer\"\n}\n\n/**\n * @return true iff `s` only uses characters in the basic multilingual plane\n * @see https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane\n */\nexport function isBMP(s: string): boolean {\n  for (let i = s.length - 1; i >= 0; i--) {\n    if (s.charCodeAt(i) !== s.codePointAt(i)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport function charAt(s: string, i: number): Maybe<string> {\n  if (isBMP(s)) {\n    i = Math.trunc(i) || 0\n    if (i < 0) i += s.length\n    if (i < 0 || i >= s.length) return undefined\n    return s[i]\n  } else {\n    return at([...toS(s)], i)\n  }\n}\n\nexport function strlen(s: string) {\n  const g = graphemeSegmenter()\n  if (g != null) return countIterable(g.segment(s))\n\n  // Crap, we have to do it the hard (buggy) way\n  if (isBMP(s)) return s.length\n  return [...s].length\n}\n\n// can't use lazy here--circular dependency.\nlet _graphemeSegmenter: Segmenter | null | undefined\n\nfunction graphemeSegmenter(): Segmenter | null {\n  // only try once:\n  if (_graphemeSegmenter === undefined) {\n    try {\n      _graphemeSegmenter = new (Intl as any).Segmenter(undefined, {\n        granularity: \"grapheme\"\n      })\n    } catch {\n      // dang, no grapheme support in this environment\n      _graphemeSegmenter = null\n    }\n  }\n  return _graphemeSegmenter ?? null // < SITS, TS should have figured it out\n}\n\n/**\n * Returns a substring of the given string. Emoji and astral symbol friendly.\n *\n * @param from The starting position of the desired substring. The index of the\n * first character in the string is zero.\n * @param end The end index of the specified portion of the string. This is\n * exclusive of the element at the index 'end'. Negative values count from the\n * end index (like Array#slice). If end is undefined, then the returned value\n * extends to the end of the string.\n * @see https://mathiasbynens.be/notes/javascript-unicode\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length\n * @see https://blog.jonnew.com/posts/poo-dot-length-equals-two\n */\nexport function strslice(s: string, from: number, end?: number) {\n  if (isBMP(s)) {\n    // allow negative indexing from the end\n    if (from < 0) from += s.length\n    return s.slice(from, end)\n  } else {\n    const g = graphemeSegmenter()\n    if (g != null) {\n      const arr = sliceIterable(g.segment(s), from, end)\n      return arr.map((ea: any) => ea.segment).join(\"\")\n    }\n    // Sadness, no grapheme support. This doesn't work for compound emoji!\n    return [...toS(s)].slice(from, end).join(\"\")\n  }\n}\n\n/**\n * Gets a substring beginning at the specified location and having the specified length.\n * @param from The starting position of the desired substring. The index of the first character in the string is zero.\n * @param length The number of characters to include in the returned substring.\n */\nexport function substr(str: string, from: number, length?: number): string {\n  return isBMP(str)\n    ? str.slice(from, length == null ? undefined : from + length)\n    : strslice(str, from, length == null ? undefined : from + length)\n}\n\nexport function charArr(s: string): string[] {\n  const g = graphemeSegmenter()\n  return g == null\n    ? // unicode-friendly way of splitting a string into chars (ish):\n      [...toS(s)]\n    : [...g.segment(s)].map((ea: any) => ea.segment)\n}\n\nexport function trimRight(s: string): string {\n  return toS(s).replace(/\\s+$/, \"\")\n}\n\nexport function stripPrefix(s: string, prefix: string): string {\n  const str = toS(s)\n  const pfx = toS(prefix)\n  return pfx.length > 0 && str.startsWith(pfx) ? str.slice(pfx.length) : str\n}\n\nexport function stripPrefixes(s: string, prefixes: string[]): string {\n  if (s == null) return \"\"\n  const str = toS(s)\n  for (const pfx of prefixes) {\n    if (pfx != null && pfx.length > 0 && str.startsWith(pfx))\n      return stripPrefixes(str.slice(pfx.length), prefixes)\n  }\n  return str\n}\n\nexport function stripSuffix(s: string, suffix: string): string {\n  if (suffix == null) return s\n  const str = toS(s)\n  const sfx = toS(suffix)\n  return sfx.length > 0 && str.endsWith(sfx) ? str.slice(0, -sfx.length) : str\n}\n\nexport function stripPrefixSuffix(\n  s: string,\n  { prefix, suffix }: { prefix: string; suffix: string }\n): string {\n  return stripSuffix(stripPrefix(s, prefix), suffix)\n}\n\nexport function ensurePrefix(s: string, prefix: string): string {\n  if (prefix == null || prefix === \"\") return s\n  s = toS(s)\n  prefix = toS(prefix)\n  return s.startsWith(prefix) ? s : prefix + s\n}\n\nexport function ensureSuffix(s: string, suffix: string): string {\n  if (suffix == null || suffix === \"\") return s\n  s = toS(s)\n  suffix = toS(suffix)\n  return s.endsWith(suffix) ? s : s + suffix\n}\n\nexport function ensurePrefixSuffix(\n  s: string,\n  { prefix, suffix }: { prefix: string; suffix: string }\n): string {\n  return ensureSuffix(ensurePrefix(s, prefix), suffix)\n}\n\nexport function ellipsize(a: any, maxLen = 80, trailingChars = 0): string {\n  if (a == null) {\n    return \"\"\n  }\n  maxLen = Math.max(1, round(maxLen))\n  trailingChars = clamp(0, maxLen - 1, round(trailingChars))\n  const arr = charArr(a)\n  // ensure valid trailingChars\n  return arr.length <= maxLen\n    ? arr.join(\"\")\n    : arr.slice(0, maxLen - 1 - trailingChars).join(\"\") +\n        \"…\" +\n        (trailingChars > 0 ? arr.slice(-trailingChars).join(\"\") : \"\")\n}\n\nexport function newlineRe() {\n  return /\\r?\\n/gm // this can't be a const as it has state\n}\n\nexport function trimLastNewline(s: string): string {\n  return toS(s).replace(/\\r?\\n$/, \"\")\n}\n\n/**\n * Returns the nearest occurrence of a substring to the left of a given position in the string.\n * @param haystack The string to search against.\n * @param needle The substring to search for.\n * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\n */\nexport function leftIndexOf(\n  haystack: string,\n  needle: string,\n  position?: number\n) {\n  if (position == null) position = haystack.length\n  for (let i = position; i >= 0; i--) {\n    if (strslice(haystack, i).startsWith(needle)) return i\n  }\n  return -1\n}\n\nexport function wrap(\n  s: string | string[],\n  opts?: { maxLineLen?: number; prefix?: string }\n): string[] {\n  const maxLineLen = opts?.maxLineLen ?? 80\n  const prefix = opts?.prefix ?? \"\"\n\n  if (Array.isArray(s) || s.includes(\"\\n\")) {\n    const lines = flatten(toA(s).map(ea => toS(ea).split(newlineRe())))\n    return flatten(lines.map(ea => wrap(ea, opts)))\n  }\n  s = ensurePrefix(toS(s), prefix).trim()\n  if (s.length <= maxLineLen) {\n    return [s]\n  }\n  const leftSliceAt = leftIndexOf(s, \" \", maxLineLen)\n\n  if (leftSliceAt > prefix.length) {\n    return [\n      strslice(s, 0, leftSliceAt),\n      ...wrap(strslice(s, leftSliceAt + 1), opts)\n    ]\n  } else {\n    const rightSliceAt = s.indexOf(\" \", prefix.length + 1)\n    if (rightSliceAt > 0 && rightSliceAt < s.length - 1) {\n      return [\n        strslice(s, 0, rightSliceAt),\n        ...wrap(strslice(s, rightSliceAt + 1), opts)\n      ]\n    } else {\n      return [s]\n    }\n  }\n}\n\nexport function eqlStrings(a: string, b: string): boolean {\n  return a == null || b == null\n    ? false\n    : a === b || a.normalize() === b.normalize()\n}\n\nexport function replaceAll(\n  s: string,\n  searchValue: string | RegExp,\n  replaceValue: string\n): string {\n  if (searchValue === \"\") return s\n  return s.split(searchValue).join(replaceValue)\n}\n\nexport function compressWhitespace(...s: string[]): string {\n  return s.join(\" \").replace(/\\s+/g, \" \").trim()\n}\n\n/**\n * @return s.split(sep).at(-1)\n */\nexport function splitLast(s: string, sep: string): string {\n  s = toS(s)\n  const idx = s.lastIndexOf(sep)\n  return idx === -1 ? s : s.slice(idx + sep.length)\n}\n","import { fmtHMS } from \"./Date\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { maybeCall } from \"./Object\"\nimport { SyncOrAsync } from \"./SyncOrAsync\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { TimeoutError } from \"./TimeoutError\"\n\nexport const Timeout = Symbol(\"timeout\")\n\nexport function toNotTimeout<T>(p: T | typeof Timeout): Maybe<T> {\n  return p === Timeout ? undefined : p\n}\n\nexport async function thenOrTimeout<T>(\n  p: SyncOrAsync<T>,\n  timeoutMs: number,\n  unref = true\n): Promise<T | typeof Timeout> {\n  timeoutMs = Math.round(timeoutMs ?? 0)\n  return timeoutMs <= 0\n    ? p\n    : new Promise<T | typeof Timeout>(async (resolve, reject) => {\n        let pending = true\n        const t = setTimeout(() => {\n          if (pending) {\n            pending = false\n            resolve(Timeout)\n          }\n        }, timeoutMs)\n        try {\n          if (unref) maybeCall(t, \"unref\") // timeouts don't have an unref method on fe.\n          const result = await p\n          if (pending) {\n            pending = false\n            resolve(result)\n          }\n        } catch (err) {\n          if (pending) {\n            pending = false\n            reject(err)\n          }\n        } finally {\n          clearTimeout(t)\n        }\n      })\n}\n\nexport async function thenOrTimeoutAt<T>(\n  p: SyncOrAsync<T>,\n  timeoutAtTs: number,\n  unref = true\n): Promise<T | typeof Timeout> {\n  const timeoutMs = timeoutAtTs - Date.now()\n  return timeoutMs <= 0 ? Timeout : thenOrTimeout(p, timeoutMs, unref)\n}\n\nexport async function thenOrOnTimeout<T, U>(\n  p: SyncOrAsync<T>,\n  timeoutMs: number,\n  onTimeout: () => SyncOrAsync<U>\n): Promise<T | U> {\n  return new Promise<T | U>(async (resolve, reject) => {\n    let pending = true\n    try {\n      const t = setTimeout(async () => {\n        if (pending) {\n          pending = false\n          try {\n            resolve(await onTimeout())\n          } catch (err) {\n            reject(err)\n          }\n        }\n      }, timeoutMs)\n      maybeCall(t, \"unref\") // timeouts don't have an unref method on fe.\n      const result = await p\n      if (pending) {\n        pending = false\n        clearTimeout(t)\n        resolve(result)\n      }\n    } catch (err) {\n      if (pending) {\n        pending = false\n        reject(err)\n      }\n    }\n  })\n}\n\n/**\n * @param timeoutMs disable timeouts if <= 0\n */\nexport async function thenOrTimeoutError<T>(\n  p: SyncOrAsync<T>,\n  timeoutMs: number,\n  unref = true\n): Promise<T> {\n  const result = await thenOrTimeout(p, timeoutMs, unref)\n  if (result === Timeout) {\n    throw new TimeoutError(\"timeout (\" + fmtHMS(timeoutMs) + \")\")\n  } else {\n    return result as T\n  }\n}\n\nexport async function thenOrTimeoutAtError<T>(\n  p: SyncOrAsync<T>,\n  timeoutAtTs: number,\n  unref = true\n): Promise<T> {\n  const timeoutMs = timeoutAtTs - Date.now()\n  if (timeoutMs <= 0) {\n    throw new TimeoutError(\"timeout (\" + fmtHMS(timeoutMs) + \")\")\n  }\n  return thenOrTimeoutError(p, timeoutMs, unref)\n}\n\nexport async function thenOrTimeoutAs<T>({\n  f,\n  timeoutMs,\n  as,\n  unref = true\n}: {\n  f: SyncOrAsync<T>\n  timeoutMs: number\n  as: ThunkOrT<T>\n  unref?: boolean\n}): Promise<T> {\n  const result = await thenOrTimeout(f, timeoutMs, unref)\n  return result === Timeout ? tot(as) : result\n}\n","import { isFunction } from \"./isFunction\"\n\nexport interface Thunk<T> {\n  (): T\n}\n\nexport interface ThunkOrLater<T> {\n  (): T | Promise<T>\n}\n\nexport type ThunkOrT<T> = T | Thunk<T>\n\n/**\n * Convert a ThunkOrT into a T.\n *\n * Caution: Don't have T be a function type!\n */\nexport function tot<T>(t: ThunkOrT<T>): T {\n  return isFunction(t) ? t() : t\n}\n\n/**\n * Thunk Or Later\n */\nexport async function tol<T>(t: T | ThunkOrLater<T>): Promise<T> {\n  return isFunction(t) ? t() : t\n}\n\nexport interface ThunkMaybe<T> {\n  (): T | undefined\n}\n\nexport function firstDefinedThunk<T>(\n  iter: Iterable<ThunkMaybe<T>>\n): T | undefined {\n  for (const f of iter) {\n    const result = f()\n    if (result != null) return result\n  }\n  return\n}\n\nexport function firstDefinedSuccess<T>(\n  iter: Iterable<ThunkMaybe<T>>\n): T | undefined {\n  for (const f of iter) {\n    try {\n      const result = f()\n      if (result != null) return result\n    } catch {\n      //\n    }\n  }\n  return\n}\n\nexport const NoOp = () => undefined\n","export class TimeoutError extends Error {}\n","// Note that \"pslib\" is not a schema that is registered by IANA, but it doesn't\n// collide with anything there, so we should be fine. See\n// https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml\n\n// Node URL parsing uses \"protocol\" instead of \"scheme\", and protocol is always\n// suffixed with a colon.\n\n/**\n * URI scheme used for asset files found in the PhotoStructure Library directory\n * hierarchy\n */\nexport const PS_LIBRARY_SCHEME = \"pslib\"\nexport const PS_LIBRARY_PROTOCOL = PS_LIBRARY_SCHEME + \":\"\n\n/**\n * URI scheme used for asset files found on a local disk volume\n */\nexport const PS_LOCAL_FILE_SCHEME = \"psfile\"\nexport const PS_LOCAL_FILE_PROTOCOL = PS_LOCAL_FILE_SCHEME + \":\"\n\n/**\n * URI scheme used for asset files found on a network filesystem\n */\nexport const PS_NETWORK_FILESYSTEM_SCHEME = \"psnet\"\nexport const PS_NETWORK_FILESYSTEM_PROTOCOL = PS_NETWORK_FILESYSTEM_SCHEME + \":\"\n\n/**\n * URI scheme only used for tests to reference exemplar photos and videos\n */\n\nexport const PS_EXAMPLES_SCHEME = \"examples\"\n","import { compact } from \"./Array\"\nimport { blank } from \"./Blank\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { Valued } from \"./Object\"\nimport { toS } from \"./toS\"\n\nexport function isURLSearchParams(o: any): o is URLSearchParams {\n  return o?.constructor?.name === \"URLSearchParams\"\n}\n\nexport type URLSearchParamable =\n  | string[][]\n  | Valued<string | (string | null)[]>\n  | string\n  | URLSearchParams\n\nexport function toURLSearchParams(\n  o: Maybe<URLSearchParamable>\n): Maybe<URLSearchParams> {\n  return o == null\n    ? undefined\n    : isURLSearchParams(o)\n    ? o\n    : new URLSearchParams(o as any)\n}\n\nexport function mergeURLSearchParams(\n  ...params: Maybe<URLSearchParamable>[]\n): Maybe<URLSearchParams> {\n  const arr = compact(params.map(toURLSearchParams))\n  const result = arr.shift()\n  if (result == null) return\n  for (const ea of arr) {\n    for (const [k, v] of ea.entries()) {\n      result.set(k, v)\n    }\n  }\n  return result\n}\n\n/**\n * fullPath is /path?query#anchor of https://host.com/path/?query#anchor\n */\nexport function assembleFullPath(\n  path: string,\n  ...queries: Maybe<URLSearchParamable>[]\n): string {\n  const q = toS(mergeURLSearchParams(...queries))\n  return path + (blank(q) ? \"\" : \"?\" + q)\n}\n\nexport function addQueryToFullpath(\n  fullPath: string,\n  ...queries: Maybe<URLSearchParamable>[]\n) {\n  const q = toS(mergeURLSearchParams(...queries))\n  return blank(q)\n    ? fullPath\n    : fullPath + (fullPath.includes(\"?\") ? \"&\" : \"?\") + q\n}\n","import { blank, mapNotBlank } from \"./Blank\"\nimport { lazy } from \"./Lazy\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { isNumber, round, sigFigs, toInt } from \"./Number\"\nimport { pluralize } from \"./Pluralize\"\nimport { StrEnumKeys, strEnum } from \"./StrEnum\"\nimport { replaceAll } from \"./String\"\n\n// these instances are expensive to create, and can be reused for a given\n// locale.\nconst numberFormat = lazy(() => new Intl.NumberFormat())\n\nexport const thousandsSep = lazy(() =>\n  replaceAll(numberFormat().format(1111), \"1\", \"\").charAt(0)\n)\n\nexport const decimalSep = lazy(() =>\n  replaceAll(numberFormat().format(1.1), \"1\", \"\").charAt(0)\n)\n\nexport function bytesToMB(...bytes: Maybe<number>[]) {\n  let sum = 0\n  for (const ea of bytes) {\n    if (isNumber(ea)) sum += ea / MB\n  }\n  return round(sum)\n}\n\nexport function fmt(i: number): string {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\n  return numberFormat().format(i)\n}\n\n/**\n * Like `Number.toInt`, but accepts `fmt`ed strings by stripping thousands\n * separators before parsing.\n */\nexport function fmtToInt(s: Maybe<string>): Maybe<number> {\n  return mapNotBlank(s, ea => toInt(replaceAll(ea, thousandsSep(), \"\")))\n}\n\n// See https://en.wikipedia.org/wiki/Mebibyte\nexport const KB = 1000\nexport const MB = KB * 1000\nexport const GB = MB * 1000\nexport const TB = GB * 1000\n\nexport const KiB = 1024\nexport const MiB = KiB * 1024\nexport const GiB = MiB * 1024\nexport const TiB = GiB * 1024\n\nconst byteUnits = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\nconst mebiUnits = [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n\nexport function fmtMB(megabytes: number, sigfigs = 3): string {\n  return fmtBytes(megabytes * MB, sigfigs)\n}\n\nexport function fmtBytes(bytes: number, sigfigs = 3): string {\n  if (bytes === 0) return \"0\"\n  if (!isNumber(bytes)) return \"-\"\n  const l = Math.floor(Math.log10(bytes))\n  const mag = Math.floor(l / 3)\n  const val = Math.pow(10, mag * 3)\n  const name = byteUnits[mag]\n  return sigFigs(bytes / val, sigfigs) + \" \" + name\n}\n\nexport function fmtMebi(bytes: number, sigfigs = 3): string {\n  if (bytes === 0) return \"0\"\n  const l = Math.floor(Math.log2(bytes))\n  const mag = Math.floor(l / 10)\n  const val = Math.pow(2, mag * 10)\n  const name = mebiUnits[mag]\n  return sigFigs(bytes / val, sigfigs) + \" \" + name\n}\n\nexport const MP = 1e6\n\nexport function megapixels(pixels: number): number {\n  return sigFigs(pixels / MP, 2)\n}\n\nexport const SizeDescriptions = strEnum(\n  \"tiny\",\n  \"small\",\n  \"medium\",\n  \"large\",\n  \"original\"\n)\nexport type SizeDescription = StrEnumKeys<typeof SizeDescriptions>\n\nexport function pixels2size(pixels: number): SizeDescription {\n  return pixels < 320 * 240 // qvga\n    ? \"tiny\"\n    : pixels < 720 * 480 // wvga\n    ? \"small\"\n    : pixels < 1920 * 1080 // fhd\n    ? \"medium\"\n    : \"large\"\n}\n\nexport function plur(\n  i: Maybe<number>,\n  singular: Maybe<string>,\n  plural?: string\n) {\n  if (i == null) return \"\"\n  if (blank(singular)) return fmt(i)\n  return (\n    fmt(i) + \" \" + (i === 1 ? singular : (plural ?? pluralize(singular)).trim())\n  )\n}\n\nexport interface Metric {\n  count: string\n  desc: string\n}\n\nexport function plurMetric(i: number, singular: string, plural?: string) {\n  plural ??= pluralize(singular)\n  return { count: fmt(i), desc: i === 1 ? singular : plural }\n}\n","export class UnreachableCaseError extends Error {\n  constructor(val: never) {\n    super(`Unreachable case: ${val}`)\n    this.name = \"UnreachableCaseError\"\n  }\n}\n","import { maybeCall } from \"./Object\"\n\nexport function setUnrefTimeout(callback: (args: void) => void, ms?: number) {\n  const t = setTimeout(callback, ms)\n  return maybeCall(t, \"unref\") ?? t\n}\n","import { lazy } from \"./Lazy\"\nimport { toS } from \"./toS\"\n\nexport const ua = lazy(() => toS((globalThis as any)?.navigator?.userAgent))\n","import { Maybe } from \"./MaybeTypes\"\n\nconst chromeRE = /\\bChrome\\b/\nconst safariRE = /\\bSafari\\b/\nconst firefoxRE = /\\bFirefox\\b/\nconst ipadRE = /\\biPad\\b/\nconst iphoneRE = /\\biPhone\\b/\n\nfunction matches(ua: Maybe<string>, re: RegExp): boolean {\n  return ua != null && String(ua).match(re) != null\n}\n\nexport function isChrome(ua: Maybe<string>): boolean {\n  return matches(ua, chromeRE)\n}\n\nexport function isSafari(ua: Maybe<string>): boolean {\n  return matches(ua, safariRE) && !isChrome(ua) && !isFirefox(ua)\n}\n\nexport function isFirefox(ua: Maybe<string>): boolean {\n  return matches(ua, firefoxRE)\n}\n\n// NOPE https://developer.apple.com/forums/thread/119186\nexport function isIpad(ua: Maybe<string>): boolean {\n  return matches(ua, ipadRE)\n}\n\nexport function isIphone(ua: Maybe<string>): boolean {\n  return matches(ua, iphoneRE)\n}\n","import { map2Or } from \"../Maybe\"\nimport { Maybe } from \"../MaybeTypes\"\nimport { isNumber } from \"../Number\"\nimport { AssetId } from \"./Asset\"\n\nexport interface ID {\n  id: number\n  v: number\n}\n\nexport type IDish = ID | number | AssetId | { tagId: number }\n\n/**\n * @returns numeric id\n */\nexport function id2id(id: Maybe<IDish>): Maybe<number> {\n  const a = id as any\n  // ids may be negative for stream placeholders, so don't use gt0:\n  return isNumber(id)\n    ? id\n    : isNumber(a.id)\n    ? a.id\n    : isNumber(a.assetId)\n    ? a.assetId\n    : isNumber(a.tagId)\n    ? a.tagId\n    : undefined\n}\n\n/**\n * An ID is \"equal\" to a number if the number equals the `id`.\n *\n * If both are numbers, or both are instances of ID, use `eql`.\n */\nexport function idEql(a: IDish, b: IDish): boolean {\n  return map2Or(\n    id2id(a),\n    id2id(b),\n    (i, j) => i === j,\n    () => false\n  )\n}\n","import { strEnum, StrEnumKeys } from \"../StrEnum\"\n\n// in order of goodness:\nexport const S = strEnum(\"plus\", \"lite\")\nexport type SubscriptionTier = StrEnumKeys<typeof S>\n","import { sort } from \"../ArraySort\"\nimport { notBlank } from \"../Blank\"\nimport { stringify } from \"../JSON\"\nimport { mapNumeric } from \"../Number\"\nimport { Valued } from \"../Object\"\nimport { strEnum, StrEnumKeys } from \"../StrEnum\"\nimport { isString } from \"../String\"\nimport { ThumbFit } from \"../ThumbFit\"\nimport { assembleFullPath, URLSearchParamable } from \"../URLSearchParams\"\nimport { AssetId } from \"./Asset\"\n\n// TODO: this should be adaptive based on size of the client window\nexport const ThumbsPerSample = 128\n\nexport const BeforeAfterStreamLimit = 8 // NOTE: must match gallery-grid SCSS\n\n/**\n * Response object from /api/tag/:tagId.json\n */\nexport interface ApiTag {\n  tagId: number // root is 0\n  tagPath: string[]\n  description?: string\n  displayPath: string[]\n  assetCount: number\n  releasedAt?: number // millis timestamp, used for sorting albums\n}\n\n// we used to page via capturedAtLt, but for tags that include > ThumbsPerSample\n// of the same capturedAtLocal, paging broke.\n// See https://forum.photostructure.com/t/thumbnails-missing-server-install/675/16?u=mrm\nexport interface TagAssetsCriteria {\n  offset: number\n  // don't need seed here: we're just paging through.\n}\n\n// Returned from /api/t/:tagId/assets?capturedAtLt=456\nexport interface TagAssets {\n  tagId: number\n  assetIds: AssetId[] // may be paged, not prng'ed\n  // TODO: prevAssets?: TagAssetsCriteria // /api/tag/:tagId/assets.json?capturedAtGt=123\n  nextAssets?: TagAssetsCriteria // /api/tag/:tagId/assets.json?capturedAtLt=123\n}\n\nexport function nextAssetsUrl(tagId: number, crit: TagAssetsCriteria): string {\n  const params: Valued<string> = {}\n  mapNumeric(crit.offset, lt => (params.offset = lt.toString()))\n  // we don't call it \"/api/tag/$tagId\" because it's ambiguous with the tag-path\n  // endpoint:\n  return assembleFullPath(`/api/t/${tagId}/assets`, params)\n}\n\nexport interface ChildTagCriteria {\n  tagId: number\n  seed: number\n  limit?: number\n  offset?: number\n}\n\nexport type ChildTag = ApiTag & TagAssets\n\n// Returned from /api/t/:tagId/child-tags?seed=123&offset=0\nexport interface ChildTags {\n  tagId: number\n  childTagCount: number\n  childTags: ChildTag[]\n  nextChildTags?: ChildTagCriteria\n}\n\nexport function nextChildTagsUrl(\n  tagId: number,\n  crit: ChildTagCriteria\n): string {\n  const params: URLSearchParamable = {}\n  mapNumeric(crit.seed, ea => (params.seed = ea.toString()))\n  mapNumeric(crit.limit, ea => (params.limit = ea.toString()))\n  mapNumeric(crit.offset, ea => (params.offset = ea.toString()))\n  // we don't call it \"/api/tag/$tagId\" because it's ambiguous with the tag-path\n  // endpoint:\n  return assembleFullPath(`/api/t/${tagId}/child-tags`, params)\n}\n\n// Returned from /api/tag/:tagPath\nexport interface ApiTagGallery extends ApiTag, TagAssets, ChildTags {\n  fullPath: string\n  emptyLibrary?: boolean\n  startingUp?: boolean\n  fit: ThumbFit\n}\n\nexport const TagGalleryProps: (keyof ApiTagGallery)[] = [\n  \"tagId\",\n  \"tagPath\",\n  \"assetCount\",\n  \"assetIds\",\n  \"nextAssets\",\n  \"childTags\",\n  \"nextChildTags\"\n]\n\nexport interface TagGalleryContext {\n  seed: number\n  tagIds: number[]\n}\n\nexport function ctxToS(ctx: TagGalleryContext): string {\n  return stringify({ seed: ctx.seed, tagIds: sort([...ctx.tagIds]) })\n}\n\nexport interface TagRef {\n  name: string\n  displayName?: string\n  ordinal?: number\n  description?: string\n  releasedAt?: number // millis timestamp\n}\n\nexport function isTagRef(t: any): t is TagRef {\n  return t != null && !isString(t) && notBlank(t.name)\n}\n\nexport type TagPath = (string | TagRef)[]\n\nexport const TagRoots = strEnum(\n  \"When\",\n  \"Who\",\n  \"Where\",\n  \"What\",\n  \"Camera\",\n  \"Lens\",\n  \"Albums\",\n  \"Keywords\",\n  \"Type\",\n  \"fs\"\n)\nexport type TagRoot = StrEnumKeys<typeof TagRoots>\n\nexport const LibraryTagName = \"Library\"\n\nexport const NotInfoPanelTags: string[] = [\n  TagRoots.When,\n  TagRoots.Camera,\n  TagRoots.Lens,\n  TagRoots.Type,\n  TagRoots.fs\n]\n\nexport function isInfoTag(rootNameOrTag: string | ApiTag) {\n  if (rootNameOrTag == null) return false\n  const root = isString(rootNameOrTag)\n    ? rootNameOrTag\n    : rootNameOrTag.tagPath?.[0]\n  return !NotInfoPanelTags.includes(root)\n}\n","import { isEmpty } from \"../Array\"\nimport { lazy } from \"../Lazy\"\nimport { Maybe } from \"../MaybeTypes\"\nimport { isDigits } from \"../Number\"\nimport { prngSeed } from \"../PRNG\"\nimport {\n  assembleFullPath,\n  toURLSearchParams,\n  URLSearchParamable\n} from \"../URLSearchParams\"\n\n// for tests:\nexport const urlSeed = lazy(prngSeed, 100)\n\nfunction ensureSeed(query: Maybe<URLSearchParamable>, forceNewSeed: boolean) {\n  const usp = toURLSearchParams(query)\n  if (forceNewSeed || !isDigits(usp?.get(\"seed\"))) {\n    const seed = urlSeed().toString()\n    usp?.set(\"seed\", seed)\n    return usp ?? { seed }\n  }\n  // we already have a seed, yay:\n  return usp\n}\n\n/**\n * @return fullPath for home page (NO PROTOCOL OR HOSTNAME!)\n */\nexport function mkHomeFullPath(query?: URLSearchParamable) {\n  return mkTagFullPath([], query, true)\n}\n\nexport function mkTagFullPath(\n  tagPath: string[],\n  query?: URLSearchParamable,\n  forceNewSeed: boolean = false\n) {\n  const o = mkTagUri(tagPath, query, forceNewSeed)\n  return assembleFullPath(o.path, o.query)\n}\n\nexport function mkTagUri(\n  tagPath: string[],\n  query?: URLSearchParamable,\n  forceNewSeed: boolean = false\n) {\n  return {\n    path:\n      \"/tag/\" +\n      (isEmpty(tagPath) ? \"\" : tagPath.map(encodeURIComponent).join(\"/\")),\n    query: ensureSeed(query, forceNewSeed)\n  }\n}\n","export function isError(obj: any): obj is Error {\n  return obj != null && obj instanceof Error\n}\n","// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(obj: any): obj is Function {\n  return typeof obj === \"function\"\n}\n","import { isIterable } from \"./Iterable\"\nimport { isString } from \"./String\"\n\nexport type Arrayish<T> = ArrayLike<T> | Iterable<T> | Set<T>\n\nexport type OneOrMore<T> = T | Arrayish<T>\n\nexport function toA<T>(arr: undefined | null | Arrayish<T> | T): T[] {\n  return Array.isArray(arr) // < strings are not arrays\n    ? (arr as T[])\n    : arr == null\n    ? []\n    : isString(arr) // < don't rely on isIterable rejecting Strings\n    ? [arr as T]\n    : isIterable(arr)\n    ? Array.from(arr)\n    : [arr as T]\n}\n","import { compact } from \"./Array\"\nimport { isError } from \"./isError\"\nimport { toA } from \"./toA\"\nimport { toS } from \"./toS\"\n\nexport function toErr(obj: any): Error | undefined {\n  return obj == null ? undefined : isError(obj) ? obj : new Error(toS(obj))\n}\n\nexport function toErrs(...objs: any[]): Error[] {\n  return compact(toA(objs).map(toErr))\n}\n","import { stringify } from \"./JSON\"\n\n/**\n * Similar to `String(a)`, but `undefined` and `null` render as \"\", arrays are\n * comma-separated with no square bracket prefix/suffix\n */\nexport function toS(a?: any | any[]): string {\n  return toStr(a, \",\")\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst DefaultToString = {}.toString\n\n// types: \"undefined\" \"object\" \"boolean\" \"number\" \"bigint\" \"string\" \"symbol\" \"function\" \"object\"\nexport function toStr(a: any | any[], joinChar = \",\"): string {\n  if (a == null) {\n    return \"\"\n  } else {\n    switch (typeof a) {\n      case \"string\":\n        return a\n      case \"boolean\":\n      case \"number\":\n      case \"bigint\":\n      case \"symbol\":\n        return String(a)\n      default: // \"function\" or \"object\"\n        if (Array.isArray(a)) {\n          return a.map(ea => toStr(ea, joinChar)).join(joinChar)\n        } else if (a.toString !== DefaultToString) {\n          return a.toString()\n        } else {\n          return stringify(a)\n        }\n    }\n  }\n}\n","import { libraryPreviewsDirPosixFile } from \"../core/dir/LibraryDirs\"\nimport { isSharedStateFileOrDir } from \"../core/event/SharedState\"\nimport { FileCleanup } from \"../core/fs/FileCleanup\"\nimport { defaultFsAdvisoryLockDir } from \"../core/fs/FsAdvisoryLocks\"\nimport { isPsLockFileOrDir } from \"../core/fs/FsLockDir\"\nimport { PosixFile } from \"../core/fs/PosixFile\"\nimport { readdirCacheDir, ReadDirCacheName } from \"../core/fs/Readdir\"\nimport { isWip } from \"../core/fs/WIP\"\nimport { imageCacheDir_, ImageCacheName } from \"../core/img/ImageCache\"\nimport { lazy } from \"../core/Lazy\"\nimport { LogDirCleanup } from \"../core/log/LogDirCleanup\"\nimport { mkLogger } from \"../core/Logger\"\nimport { Pids, ProcCleaner } from \"../core/Pids\"\nimport { isDbJanitorService } from \"../core/ServiceNames\"\nimport { Settings } from \"../core/settings/Settings\"\nimport { compact } from \"../fe/Array\"\nimport { hourMs } from \"../fe/Date\"\nimport { Library } from \"./Library\"\nimport { vacuumStatDbDirs } from \"./StatsDbDir\"\nimport { forceRunTagMaintenance } from \"./tag/TagSql\"\n\nconst logger = lazy(() => mkLogger(\"Cleanup\"))\n\nexport async function cleanup() {\n  const library = Library.instance()\n  if (library == null) {\n    logger().info(\"No library to vacuum.\")\n  } else {\n    logger().info(\"Running tag and search maintenance...\")\n    await forceRunTagMaintenance()\n    logger().info(\"Vacuuming db...\")\n    await (await library.dbModelSetup_()).db.vacuum()\n    if (isDbJanitorService()) {\n      logger().info(\"Running database maintenance...\")\n      await library.runDbBackup()\n    }\n  }\n\n  logger().info(\"Cleaning child processes...\")\n  await Pids.instance()?.killOldProcs()\n\n  logger().info(\"Cleaning stale stat db directories...\")\n  await vacuumStatDbDirs()\n\n  logger().info(\"Cleaning stale and temp files...\")\n  await Promise.all(fileCleanups().map(ea => ea.cleanup()))\n}\n\nexport const imageCacheCleanup = lazy(\n  () =>\n    new FileCleanup(\n      \"imageCacheCleanup\",\n      imageCacheDir_,\n      Settings.imageCacheMs.valueOrDefault,\n      f => f.pathnames.includes(ImageCacheName)\n    )\n)\n\nexport const readdirCleanup = lazy(\n  () =>\n    new FileCleanup(\n      \"readdirCacheCleanup\",\n      async () => PosixFile.for(readdirCacheDir()),\n      Settings.readdirCacheMs.valueOrDefault,\n      f => f.pathnames.includes(ReadDirCacheName)\n    )\n)\n\nexport const sharedFileCleanup = lazy(\n  () =>\n    new FileCleanup(\n      \"sharedFileCleanup\",\n      () => PosixFile.forMaybe(Settings.sharedStateDir.valueOrDefault),\n      hourMs,\n      isSharedStateFileOrDir\n    )\n)\n\nexport const previewWipCleanup = lazy(\n  () =>\n    new FileCleanup(\n      \"previewWipCleanup\",\n      libraryPreviewsDirPosixFile,\n      hourMs,\n      f => isPsLockFileOrDir(f) || isWip(f)\n    )\n)\n\nexport const advisoryLockWipCleanup = lazy(\n  () =>\n    new FileCleanup(\n      \"advisoryLockWipCleanup\",\n      defaultFsAdvisoryLockDir,\n      hourMs,\n      isPsLockFileOrDir\n    )\n)\n\nexport const fileCleanups = lazy(() =>\n  compact([\n    imageCacheCleanup(),\n    readdirCleanup(),\n    sharedFileCleanup(),\n    previewWipCleanup(),\n    advisoryLockWipCleanup(),\n    LogDirCleanup()\n  ])\n)\n\nexport const scheduleFileAndProcCleanups = lazy(() => {\n  ProcCleaner()\n  for (const ea of fileCleanups()) {\n    ea.scheduleInterval()\n  }\n})\n","import { end, Endable, EndableRanks, ending } from \"../core/async/Endable\"\nimport { EndableWrapper } from \"../core/async/EndableWrapper\"\nimport { exit } from \"../core/async/Exit\"\nimport { pathToDb } from \"../core/db/Schemas\"\nimport {\n  libraryDataDirPosixFile,\n  libraryOriginalsDirPosixFile,\n  libraryPreviewsDirPosixFile,\n  setupLibraryDirs_\n} from \"../core/dir/LibraryDirs\"\nimport { FatalErrorFlag } from \"../core/error/ErrorFlags\"\nimport { WrappedError } from \"../core/error/WrappedError\"\nimport { BaseFile } from \"../core/fs/BaseFile\"\nimport { PosixFile } from \"../core/fs/PosixFile\"\nimport { HealthCheck } from \"../core/health/HealthCheck\"\nimport { imageCacheDir_ } from \"../core/img/ImageCache\"\nimport { Previews } from \"../core/img/Previews\"\nimport { lazy } from \"../core/Lazy\"\nimport {\n  isDbService,\n  isStatsDbService,\n  isSyncService\n} from \"../core/ServiceNames\"\nimport { Settings } from \"../core/settings/Settings\"\nimport {\n  _libraryHasSettings,\n  readLibrarySettings\n} from \"../core/settings/SettingsIO\"\nimport { bestVolumeForPath } from \"../core/volumes/Volumes\"\nimport { commandTimeoutMs } from \"../core/volumes/VolumeTtls\"\nimport { clearMaxWorkCaches } from \"../core/work/MaxCpus\"\nimport { blank } from \"../fe/Blank\"\nimport { isTrue } from \"../fe/Boolean\"\nimport { minuteMs } from \"../fe/Date\"\nimport { Latch } from \"../fe/Latch\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { tap } from \"../fe/Object\"\nimport { DbModelJanitor } from \"./db/DbModelJanitor\"\nimport { dbModelSetup_ } from \"./db/DbModelSetup\"\nimport { libraryHealthCheckSetup } from \"./health/LibraryHealthChecks\"\nimport { statsDbJanitor } from \"./stats/StatsDbJanitor\"\nimport { statsDbDir_ } from \"./StatsDbDir\"\nimport { AssetFileRepository } from \"./sync-file/AssetFileRepository\"\n\n// DON'T DO THIS! LibrarySettings will take care of this.\n// Settings.libraryDir.addListener(() => Library.onLibraryDirChange())\n\n/**\n * Given a library root directory, provides paths and factory methods for\n * library services, like the SeenFileFilter, Previews, and database setup.\n *\n * Note that a given process only supports a single library, so this should\n * be a singleton. Most likely the singleton will be managed by a singleton\n * instance of `Service`.\n */\nexport class Library extends EndableWrapper implements Endable {\n  readonly start = Date.now()\n  static #priorInstance: Maybe<Library>\n\n  // This must not be async to ensure only one instance is currently live:\n  static instance() {\n    const libraryDir = Settings.libraryDir.valueOrDefault\n    const priorDir = this.#priorInstance?.rootDir.nativePath\n    const priorWasOpen = this.#priorInstance?.isReadySync() === true\n    const priorEnded = this.#priorInstance?.ended === true\n\n    // HEY WAIT WHAT ABOUT resolve() and realpath()?\n    // THEY TYPED IT IN WRONG--SERVES THEM RIGHT\n\n    if (priorDir === libraryDir && !priorEnded) {\n      // Prior instance is valid!\n      return this.#priorInstance\n    }\n\n    if (isSyncService() && priorWasOpen) {\n      void exit({\n        reason: `Library changed mid-run. Shutting down to pick up new library at ${libraryDir}.`,\n        status: 0\n      })\n      return\n    }\n\n    // Prior instance is wrong: end it and spin up a new one.\n    void end(this.#priorInstance) // < (we don't need to wait for it to end)\n\n    return (this.#priorInstance =\n      blank(libraryDir) || !_libraryHasSettings(libraryDir)\n        ? undefined\n        : new Library(libraryDir))\n  }\n\n  static get priorInstance() {\n    return this.#priorInstance\n  }\n\n  static endPriorInstance() {\n    const prior = this.#priorInstance\n    this.#priorInstance = undefined\n    return end(prior)\n  }\n\n  static async instanceReady() {\n    const i = Library.instance()\n    await i?.ready\n    return i\n  }\n\n  static instanceRequired() {\n    const l = Library.instance()\n    if (l == null) {\n      throw new Error(\"Library is undefined\" + FatalErrorFlag)\n    } else {\n      return l\n    }\n  }\n\n  readonly readyLatch = new Latch()\n  readonly rootDir: PosixFile\n  readonly dataDir: PosixFile\n\n  constructor(rootDir: string | BaseFile) {\n    super(`library.Library(${rootDir})`, () => this.onEnd(), EndableRanks.predb)\n    this.rootDir = PosixFile.for(rootDir)\n    this.dataDir = libraryDataDirPosixFile(this.rootDir)!\n    this.logger.info(\"new()\")\n    void this.#setup()\n  }\n\n  get isPendingSetup() {\n    return this.readyLatch.isPending()\n  }\n\n  readonly #setup = lazy(async () => {\n    const throwIfEnding = () => {\n      if (this.ended || ending()) throw new Error()\n    }\n    try {\n      this.logger.debug(\"setup() started\")\n\n      throwIfEnding()\n\n      await readLibrarySettings(this.rootDir.nativePath)\n      await setupLibraryDirs_(this.rootDir)\n\n      // Prevent health checks from initially failing by setting up all these\n      // directories in setup():\n      await this.statsDbDir_()\n      await imageCacheDir_()\n\n      throwIfEnding()\n\n      const previewsVol = await bestVolumeForPath(\n        libraryPreviewsDirPosixFile(this.rootDir)\n      )\n      if (isTrue(previewsVol?.remote)) {\n        const max = Settings.maxConcurrentImportsWhenRemote.valueOrDefault\n        if (!Settings.maxConcurrentImports.hasValue()) {\n          Settings.maxConcurrentImports.tmpValue = max\n          clearMaxWorkCaches()\n        }\n        this.logger.warn(\n          `Library previews are on a remote volume. Setting maxSyncFileJobsMax to ${max}.`\n        )\n      }\n\n      throwIfEnding()\n\n      if (isDbService()) {\n        await this.dbModelJanitor()\n      }\n\n      this.previews()\n\n      throwIfEnding()\n\n      if (isStatsDbService()) {\n        await this.statsDb()\n      }\n      if (this.readyLatch.isPending()) {\n        this.logger.info(\"Library.setup() finished.\")\n        void this.readyLatch.resolve()\n      }\n      await libraryHealthCheckSetup()\n      setImmediate(() => HealthCheck.awaitSettled())\n    } catch (error) {\n      this.logger.error(\"setup() failed:\", { error })\n      if (!this.ended && !ending()) {\n        HealthCheck.addError(error)\n        void this.readyLatch.reject(\n          new WrappedError(\"Failed to start library\", {\n            cause: error\n          })\n        )\n      }\n    }\n  })\n\n  get ready() {\n    return this.readyLatch.promise\n  }\n\n  isReadySync() {\n    return this.readyLatch.isResolved()\n  }\n\n  readonly statsDbDir_ = lazy(() => statsDbDir_() as Promise<PosixFile>)\n\n  readonly previews = lazy(() =>\n    tap(new Previews(libraryPreviewsDirPosixFile(this.rootDir)!), ea =>\n      Previews.instance.set(ea)\n    )\n  )\n\n  readonly originalsDir = lazy(\n    () => libraryOriginalsDirPosixFile(this.rootDir)!\n  )\n\n  readonly assetFileRepository = lazy(() => {\n    return new AssetFileRepository(this.originalsDir())\n  })\n\n  readonly libraryDbFile = lazy(() => pathToDb(this.dataDir, \"models\"))\n\n  readonly dbModelSetup_ = lazy(async () => {\n    if (isDbService()) {\n      return dbModelSetup_(this.rootDir)\n    } else {\n      throw new Error(\"Not a db service\")\n    }\n  })\n  readonly dbFsLock = lazy(async () => {\n    return (await this.dbModelSetup_()).fslock\n  })\n  readonly useReplica = lazy(async () => {\n    return (await this.dbModelSetup_()).useReplica\n  })\n  readonly modelDb = lazy(async () => {\n    return (await this.dbModelSetup_()).db\n  })\n  readonly dbModelJanitor = lazy(async () => {\n    const info = await this.dbModelSetup_()\n    return new DbModelJanitor(info.db, info.fslock, info.libraryDbFile)\n  })\n  async runDbBackup() {\n    return (await this.dbModelJanitor())?.backup_()\n  }\n\n  readonly statsDb = lazy(async () => statsDbJanitor(await this.statsDbDir_()))\n  readonly statsDbFile = lazy(() => this.statsDb().then(ea => ea.dbFile))\n\n  // Used when library path changes and by tests:\n  private readonly onEnd = lazy(async () => {\n    for (const { ea, t } of [\n      { ea: this.statsDb.clear(), t: commandTimeoutMs() },\n      { ea: this.dbModelJanitor.clear(), t: 5 * minuteMs },\n      { ea: this.dbFsLock.clear(), t: commandTimeoutMs() }\n    ]) {\n      await end(ea, t)\n    }\n    this.logger.info(\"onEnd(): finished.\")\n  })\n}\n","import { PosixFile } from \"../core/fs/PosixFile\"\nimport { expensiveFileFiltersFor } from \"../core/fs/PosixFileFilters\"\nimport { isValidFile } from \"../core/img/ValidFile\"\nimport { PredicateBundle } from \"../core/predicates/Predicates\"\nimport { modelDb } from \"./model/ModelDb\"\nimport { notBlocklistedSha } from \"./model/ShaBlocklist\"\n\nexport function libraryFileFiltersFor(\n  file: PosixFile,\n  { validateFile = false }: { validateFile?: boolean } = {}\n): PredicateBundle<PosixFile> {\n  const arr = expensiveFileFiltersFor(file)\n  if (modelDb() != null) arr.push({ notBlocklistedSha })\n  if (validateFile) arr.push({ isValidFile })\n  return arr\n}\n","import { lazy } from \"../core/Lazy\"\nimport { mkLogger } from \"../core/Logger\"\nimport { durationHMS } from \"../core/date/Date\"\nimport {\n  libraryOriginalsDirPosixFile,\n  libraryPreviewsDirPosixFile\n} from \"../core/dir/LibraryDirs\"\nimport { Settings } from \"../core/settings/Settings\"\nimport { libraryHasSettings } from \"../core/settings/SettingsIO\"\nimport { volumeMetadataTtlMs } from \"../core/volumes/VolumeTtls\"\nimport { bestVolumeForPath, volumes } from \"../core/volumes/Volumes\"\nimport { dayMs, secondMs } from \"../fe/Date\"\nimport { clamp } from \"../fe/Number\"\nimport { GB, fmtBytes } from \"../fe/Units\"\n\nconst logger = lazy(() => mkLogger(\"SetVolumesTTL\"))\n\nexport async function setVolumesTTL() {\n  const defaultTTL = volumeMetadataTtlMs()\n  const ttl = await calcVolumesTTL()\n  volumes.setTTL(Math.max(ttl ?? defaultTTL, defaultTTL))\n}\n\nexport async function calcVolumesTTL() {\n  if (!libraryHasSettings()) return\n\n  // we can relax the volume timeout if there's tons of free disk on both the previews and originals directories.\n  const volFree: number[] = []\n  const vols = await volumes()\n  const minFreeDefaultBytes = Settings.minDiskFreeGb.defaultValue * GB\n  for (const dir of [\n    libraryOriginalsDirPosixFile(),\n    libraryPreviewsDirPosixFile()\n  ]) {\n    const vol = await bestVolumeForPath(dir, vols)\n    if (vol == null) {\n      logger().warn(\n        \"Can't find volume for \" + dir + \", using default TTL for volumes()\"\n      )\n      return\n    }\n    if (vol.available < minFreeDefaultBytes) {\n      logger().warn(\n        \"Volume for \" +\n          dir +\n          \" is almost full: using default TTL for volumes()\",\n        {\n          free: fmtBytes(vol.available),\n          minFree: fmtBytes(Settings.minDiskFreeGb.defaultValue * GB)\n        }\n      )\n      return\n    }\n    volFree.push(vol.available)\n  }\n  const excessFree = Math.min(...volFree) - minFreeDefaultBytes\n  // We won't write faster than 25MB/s\n  const secondsUntilFull = Math.round(excessFree / 25)\n  const newTTL = clamp(\n    volumeMetadataTtlMs(),\n    dayMs,\n    secondsUntilFull * secondMs\n  )\n  logger().info(\n    \"Min free volume is \" +\n      fmtBytes(Math.min(...volFree)) +\n      \". Extending volumes() TTL to \" +\n      durationHMS(newTTL),\n    { secondsUntilFull }\n  )\n  return newTTL\n}\n","import { lazy } from \"../core/Lazy\"\nimport { mkLogger } from \"../core/Logger\"\nimport { AssetFileVersion, AssetVersion } from \"../core/PhotoStructureVersions\"\nimport { shortStringSha } from \"../core/StringHash\"\nimport { SqliteBase } from \"../core/db/Schemas\"\nimport { cacheDir_ } from \"../core/dir/CacheDir\"\nimport { PosixFile } from \"../core/fs/PosixFile\"\nimport { LibraryUIDStore, SystemUIDStore } from \"../core/fs/UIDStore\"\nimport { writeTextfile_ } from \"../core/fs/WriteFile\"\nimport { TokenRadix } from \"../core/math/Radix\"\nimport { max } from \"../core/math/Vector\"\nimport { Settings } from \"../core/settings/Settings\"\nimport { libraryHasSettings } from \"../core/settings/SettingsIO\"\nimport { dayMs } from \"../fe/Date\"\nimport { stringify } from \"../fe/JSON\"\nimport { PromiseMaybe } from \"../fe/MaybeTypes\"\n\nconst logger = lazy(() => mkLogger(\"library.StatsDbDir\"))\n\nexport const CacheDirPrefix = \"sync-state-\"\n\nexport function statDbDirs(): PromiseMaybe<PosixFile[]> {\n  return PosixFile.for(cacheDir_())\n    .clear()\n    .children(ea => ea.name.startsWith(CacheDirPrefix))\n}\n\n// TCBH: By including the settings in the cache dir, we reset the cache dir if\n// the settings change. Note that this is a short SHA, as there won't be many\n// items (therefore not many chances for collisions). 3 chars of SHA goodness\n// would be most likely be fine.\n/**\n * @throws if the directory can't be created.\n */\nexport async function statsDbDir_(\n  createIfMissing = true\n): PromiseMaybe<PosixFile> {\n  if (!libraryHasSettings()) return\n\n  // Really only library settings should invalidate a cache dir:\n  // Rather than push the version, we'll push db versions, which only change\n  // when something in the asset processing pipeline changes to warrant\n  // re-syncing everything.\n  const values = {\n    AssetVersion,\n    AssetFileVersion,\n    LibraryUID: await LibraryUIDStore()?.readUid_(),\n    SystemUID: await SystemUIDStore()?.readUid_()\n  }\n  const suffix = shortStringSha(stringify(values), 10, TokenRadix)\n  const dir = PosixFile.for(cacheDir_()).join(CacheDirPrefix + suffix)\n  if (!createIfMissing) return dir\n  await writeTextfile_(\n    dir.join(\"README.txt\").nativePath,\n    \"\",\n    \"This folder holds state for library synchronization of\",\n    \"\",\n    Settings.libraryDir.value!,\n    \"\",\n    \"Don't edit the contents of this directory while PhotoStructure is running.\",\n    \"\",\n    \"If you have any questions, please visit https://forum.photostructure.com\",\n    \"\",\n    stringify(values, undefined, 2)\n  )\n  logger().info(\"Set up statsDbDir dir \" + dir)\n  return dir\n}\n\nasync function rmStatDbDir(dir: PosixFile) {\n  if (true === dir.name.startsWith(CacheDirPrefix)) {\n    await dir.rmrf()\n  } else {\n    logger().warn(\"rmStatDbDir(): refusing to rm \" + dir)\n  }\n}\n\nexport async function vacuumStatDbDirs() {\n  const currentCacheDir = await statsDbDir_()\n  for (const dir of (await statDbDirs()) ?? []) {\n    if (dir.eql(currentCacheDir)) continue\n    // don't delete the directory if it's been recently touched:\n    const newestTs = max(\n      await Promise.all([\n        dir.join(\"README.txt\").mtimeMs(),\n        dir.join(SqliteBase).mtimeMs()\n      ])\n    )\n    if (newestTs == null || newestTs < Date.now() - dayMs)\n      await rmStatDbDir(dir)\n  }\n}\n\nexport async function rmStatDbDirs() {\n  for (const dir of (await statDbDirs()) ?? []) {\n    logger().warn(\"deleting cache dir \" + dir)\n    await rmStatDbDir(dir)\n  }\n}\n","import path from \"path\"\nimport process from \"process\"\nimport { AppName } from \"../core/AppName\"\nimport { lazy } from \"../core/Lazy\"\nimport { mkLogger } from \"../core/Logger\"\nimport { isProd } from \"../core/NodeEnv\"\nimport { ShortCommandTimeoutMs } from \"../core/ShortCommandTimeoutMs\"\nimport { wbrPath } from \"../core/String\"\nimport { mapAsync } from \"../core/async/Promise\"\nimport { homeDir } from \"../core/dir/HomeDir\"\nimport { isLibraryDir } from \"../core/dir/IsLibraryDir\"\nimport { picturesDir } from \"../core/dir/PicturesDir\"\nimport { env } from \"../core/env/Env\"\nimport { BaseFile } from \"../core/fs/BaseFile\"\nimport {\n  isExcludedDirectory,\n  whyExcludedDirectoryRecursive\n} from \"../core/fs/Excluded\"\nimport { isNotHiddenPosixPath } from \"../core/fs/Path\"\nimport { childDirectories_ } from \"../core/fs/Readdir\"\nimport { isReadWriteableDirectory } from \"../core/fs/Stat\"\nimport { isDocker } from \"../core/platform/isDocker\"\nimport { Settings, SuggestedDirsEnvKey } from \"../core/settings/Settings\"\nimport { Volume } from \"../core/volumes/Volume\"\nimport { bestVolumeForPath, volumes } from \"../core/volumes/Volumes\"\nimport { compactBlanks, filterInPlace, isEmpty, uniqBy } from \"../fe/Array\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0 } from \"../fe/Number\"\nimport { GB, fmtBytes } from \"../fe/Units\"\n\nconst logger = lazy(() => mkLogger(\"library.SuggestedLibraryDir\"))\n\nexport class SuggestedLibraryDir {\n  static async for(nativePath: Maybe<string>, vols?: Volume[]) {\n    if (blank(nativePath)) return\n    if (!(await isReadWriteableDirectory(nativePath))) {\n      logger().warn(\n        \"Skipping library directory suggestion: not read-writable by the current user\",\n        { nativePath }\n      )\n      return\n    }\n    // (this calls actualPath for us)\n    const vol = await bestVolumeForPath(nativePath, vols)\n    if (vol == null) {\n      logger().warn(\n        \"Skipping library directory suggestion: failed to find mountpoint volume\",\n        { nativePath }\n      )\n      return\n    }\n    const isLibrary = await isLibraryDir(nativePath)\n    // even if vol doesn't have sufficient space, we still may want to show\n    // prior libraries as suggestions:\n    if (!isLibrary) {\n      const whyExcluded = await whyExcludedDirectoryRecursive(\n        BaseFile.for(nativePath)\n      )\n      if (whyExcluded != null) {\n        logger().info(\"skipping directory suggestion\", {\n          nativePath,\n          whyExcluded\n        })\n        return\n      }\n    }\n    return new SuggestedLibraryDir(nativePath, isLibrary, vol)\n  }\n\n  readonly isCurrentLibrary: boolean\n\n  constructor(\n    readonly nativePath: string,\n    readonly isLibrary: boolean,\n    readonly vol: Volume\n  ) {\n    this.isCurrentLibrary = Settings.libraryDir.value === this.nativePath\n  }\n\n  get mountpoint() {\n    return this.vol.mountpoint\n  }\n\n  get availableBytes() {\n    return this.vol.available\n  }\n\n  get free() {\n    return fmtBytes(this.vol.available, 2)\n  }\n\n  get label() {\n    return this.vol.label\n  }\n\n  get uuid() {\n    return this.vol.uuid\n  }\n\n  get remote() {\n    return this.vol.remote\n  }\n\n  get remoteHost() {\n    return this.vol.remoteHost\n  }\n\n  get remoteShare() {\n    return this.vol.remoteShare\n  }\n\n  get wbrPath() {\n    return wbrPath(this.nativePath)\n  }\n}\n\nexport const suggestedLibraryDirs = lazy(() => _suggestedLibraryDirs())\n\nexport async function _suggestedLibraryDirs(\n  minAvailableBytes: number = Settings.minDiskFreeGb.valueOrDefault * GB,\n  maxSuggestionCount: number = 6,\n  maybeVolumes?: Promise<Volume[]>\n): Promise<SuggestedLibraryDir[]> {\n  const start = Date.now()\n  const suggestedPaths = env()[SuggestedDirsEnvKey]\n  if (!isProd && suggestedPaths != null) {\n    return logger().tap({\n      msg: \"using ENV\",\n      result: compactBlanks(suggestedPaths.split(path.delimiter)).map(\n        nativePath =>\n          new SuggestedLibraryDir(nativePath, false, {\n            mountpoint: \"/test\",\n            available: GB\n          } as Volume)\n      )\n    })\n  }\n\n  const priorLibraries: SuggestedLibraryDir[] = []\n  const suggestions: SuggestedLibraryDir[] = []\n\n  const vols = (await maybeVolumes) ?? (await volumes())\n  if (vols == null || isEmpty(vols)) {\n    logger().warn(\"volumes() is empty: they don't get any suggestions.\")\n    return []\n  }\n\n  async function addSuggestion(nativePath: Maybe<string>) {\n    const s = await SuggestedLibraryDir.for(nativePath, vols)\n    if (s == null) {\n      return\n    } else if (s.isLibrary || s.isCurrentLibrary) {\n      logger().info(\"addSuggestion(): path is a library\", s)\n      priorLibraries.push(s)\n    } else if (gt0(minAvailableBytes) && s.availableBytes < minAvailableBytes) {\n      logger().info(\n        \"addSuggestion(): volume has insufficient free space for a new library\",\n        {\n          nativePath,\n          availableBytes: s.availableBytes,\n          minAvailableBytes\n        }\n      )\n    } else if (!(await BaseFile.for(s.nativePath).maybeReadWriteDirectory())) {\n      logger().info(\"addSuggestion(): path is not read/writable\", {\n        nativePath\n      })\n    } else {\n      suggestions.push(s)\n    }\n  }\n\n  await addSuggestion(Settings.libraryDir.value)\n\n  if (isDocker()) return [...priorLibraries, ...suggestions]\n\n  await addSuggestion(await picturesDir())\n\n  const dirsToCheck = [\n    process.cwd(),\n    ...(await childDirectories_(process.cwd()))\n  ]\n  if (!isDocker()) {\n    dirsToCheck.push(...(await childDirectories_(homeDir())))\n  }\n\n  filterInPlace(dirsToCheck, ea => isNotHiddenPosixPath(ea))\n\n  // are there any child dirs that are libraries?\n  for (const dir of dirsToCheck) {\n    if (await isLibraryDir(dir)) {\n      logger().info(\"current working dir is a library\", dir)\n      await addSuggestion(dir)\n    }\n  }\n\n  function shouldTimeout() {\n    if (Date.now() - start > ShortCommandTimeoutMs - 500) {\n      logger().debug(\"...ran out of time, stopping.\")\n      return true\n    }\n    return false\n  }\n\n  async function addVolume(vol: Volume) {\n    try {\n      // only add the mountpoint if it's already a library:\n      if (await isLibraryDir(vol.mountpoint)) {\n        logger().info(\n          \"addVolume(): vol.mountpoint is a library\",\n          vol.mountpoint\n        )\n        await addSuggestion(vol.mountpoint)\n        return\n      }\n      // are there any child dirs that are libraries?\n      for (const dir of await childDirectories_(vol.mountpoint)) {\n        if (shouldTimeout()) return\n        if (await isExcludedDirectory(dir)) continue\n        if (await isLibraryDir(dir)) {\n          logger().info(\"addVolume(): dir is a library\", dir)\n          await addSuggestion(vol.mountpoint)\n        } else {\n          for (const child of await childDirectories_(dir)) {\n            if (shouldTimeout()) return\n            if (await isLibraryDir(child)) {\n              logger().info(\"addVolume(): dir is a library\", dir)\n              await addSuggestion(vol.mountpoint)\n            }\n          }\n        }\n      }\n\n      // Maybe add a default suggestion:\n      const defaultPath = path.join(vol.mountpoint, AppName())\n      logger().info(\"addVolume(): adding default suggestion\", defaultPath)\n      await addSuggestion(defaultPath)\n    } catch (err) {\n      logger().warn(\"addVolume(): Failed to add suggestion\", { err, vol })\n    }\n  }\n\n  await mapAsync({\n    name: \"suggestedLibraryDirs.addVolume\",\n    arr: vols,\n    f: vol => addVolume(vol),\n    timeoutMs: ShortCommandTimeoutMs\n  })\n\n  logger().debug(\"Finished gathering suggestions. Filtering...\", {\n    priorLibraries,\n    suggestions\n  })\n\n  const result = priorLibraries\n  for (const s of sortBy(suggestions, ea => [\n    -ea.availableBytes,\n    -ea.nativePath.length\n  ])) {\n    if (result.length >= maxSuggestionCount) break\n    if (\n      !result.some(\n        ea => ea.nativePath === s.nativePath || ea.mountpoint === s.mountpoint\n      )\n    ) {\n      logger().debug(\"adding new path\", s)\n      result.push(s)\n    }\n  }\n  return uniqBy(\n    sortBy(result, ea => [\n      !ea.isCurrentLibrary,\n      !ea.isLibrary,\n      -ea.free,\n      ea.nativePath\n    ]),\n    ea => ea.nativePath\n  )\n}\n","import { toIsoDate } from \"../core/date/FuzzyDate\"\nimport { logDir } from \"../core/dir/LogDir\"\nimport { EditionName } from \"../core/EditionName\"\nimport { HealthCheck } from \"../core/health/HealthCheck\"\nimport { b } from \"../core/licensing/Licensing\"\nimport { defaultLogLevel } from \"../core/log/LogFilter\"\nimport { CPUs, osFullName } from \"../core/OperatingSystem\"\nimport { procDeviceModel } from \"../core/platform/isRaspberryPi\"\nimport { isWebService } from \"../core/ServiceNames\"\nimport { Settings } from \"../core/settings/Settings\"\nimport { libraryHasSettings } from \"../core/settings/SettingsIO\"\nimport { runtimeMs } from \"../core/StartTs\"\nimport { userid, username } from \"../core/UserInfo\"\nimport { version } from \"../core/Version\"\nimport {\n  maxConcurrentImports,\n  sharpThreadsPerProcess\n} from \"../core/work/MaxCpus\"\nimport { compact } from \"../fe/Array\"\nimport { mapNotBlank, notBlank } from \"../fe/Blank\"\nimport { isTrue } from \"../fe/Boolean\"\nimport { fmtDuration } from \"../fe/FmtDuration\"\nimport { HealthCheckLevel } from \"../fe/HealthChecks\"\nimport { mapOr } from \"../fe/Maybe\"\nimport { PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { thenMap } from \"../fe/Promise\"\nimport { stripSuffix } from \"../fe/String\"\nimport { Metric, plurMetric } from \"../fe/Units\"\nimport { Asset } from \"./model/Asset\"\nimport { AssetFile } from \"./model/AssetFile\"\nimport { Tag } from \"./model/Tag\"\n\nexport type DictEntryClass = \"ok\" | \"warn\" | \"tt\" | \"fail\" | \"pending\"\n\nexport interface DictEntry {\n  term: string\n  termURL?: string\n  defn: string | Metric[]\n  defnClass?: DictEntryClass\n  defnTitle?: string\n}\n\nexport async function libraryMetrics(): PromiseMaybe<Metric[]> {\n  if (Asset.db() == null) return\n  // The library may not be initialized for the `info` tool:\n  const arr: Metric[] = []\n  arr.push(plurMetric(Asset.shownCount(), \"asset\"))\n  const mimeCounts = AssetFile.assetFileCountByMimeTypeRoots()\n  for (const ea of mimeCounts) {\n    const type = stripSuffix(ea.mimeTypeRoot, \"/\")\n    // TODO: add the assetCount?\n    arr.push(plurMetric(ea.assetFileCount, type + \" file\"))\n  }\n  arr.push(plurMetric(Tag.rows(), \"tag\"))\n  return arr\n}\n\nconst HealthCheckLevelDictEntryClass = {\n  pending: \"pending\",\n  ok: \"ok\",\n  \"no-library\": \"warn\",\n  warn: \"warn\",\n  \"stop-sync\": \"warn\",\n  error: \"fail\",\n  disabled: \"ok\"\n} as const satisfies Record<HealthCheckLevel, DictEntryClass>\n\nexport async function systemInformation(): Promise<DictEntry[]> {\n  const best = await b()\n  const tier = best?.l?.tier ?? \"lite\"\n  const health = HealthCheck.summary()\n\n  return compact([\n    {\n      term: \"Version\",\n      defn: version\n    },\n    {\n      term: \"Edition\",\n      defn: EditionName()\n    },\n    {\n      term: \"Health checks\",\n      defnClass: HealthCheckLevelDictEntryClass[health.level],\n      defnTitle: \"Click to see all health checks\",\n      termURL: \"/health\",\n      defn: health.msg[0]\n    },\n    {\n      term: \"Subscription\",\n      defnClass: tier,\n      defn: tier,\n      termURL: \"/plans/billing?then=/about\",\n      defnTitle: \"Click to manage your PhotoStructure subscription\"\n    },\n    ...(isTrue(best?.ok)\n      ? [\n          {\n            term: \"Licensed to\",\n            defn: best?.l?.sub\n          },\n          {\n            term: \"Expires or renews\",\n            defn: mapOr(best?.l?.exp, ea => toIsoDate(ea), \"--\"),\n            termURL: \"/plans/billing?then=/about\",\n            defnTitle: \"Click to manage your PhotoStructure subscription\"\n          }\n        ]\n      : []),\n    { term: \"OS\", defn: osFullName() },\n    { term: \"CPUs\", defn: CPUs() },\n    {\n      term: \"Concurrency\",\n      defn: `Target system use: ${Math.round(\n        Settings.cpuLoadPercent.valueOrDefault\n      )}% (${maxConcurrentImports()} concurrent imports, ${sharpThreadsPerProcess()} gfx/process)`\n    },\n    // We may be called by info.js:\n    isWebService()\n      ? { term: \"Web uptime\", defn: fmtDuration(runtimeMs()) }\n      : undefined,\n    mapNotBlank(procDeviceModel(), defn => ({ term: \"Device\", defn })),\n    {\n      term: \"Current user\",\n      defn: (await username()) + \" (userid: \" + userid() + \")\"\n    },\n    libraryHasSettings()\n      ? {\n          term: \"Library path\",\n          defn: Settings.libraryDir.valueOrDefault,\n          defnClass: \"library\"\n        }\n      : undefined,\n    await thenMap(libraryMetrics(), metrics => ({\n      term: \"Library metrics\",\n      termURL: \"https://photostructure.com/faq/metrics/\",\n      defn: metrics\n    })),\n    {\n      term: \"Log directory\",\n      defn: logDir()\n    },\n    {\n      term: \"Log level\",\n      termURL: \"https://photostructure.com/faq/error-reports/#log-levels\",\n      defn: defaultLogLevel()\n    }\n  ]).filter(({ term, defn }) => notBlank(term) && notBlank(defn)) as any\n}\n","import { Command } from \"commander\"\nimport { isMainService, isSyncService } from \"../../core/ServiceNames\"\nimport { CommandPlugin } from \"../../core/cli/CLI\"\nimport { isDaemon } from \"../../core/cli/IsDaemon\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { Obj } from \"../../fe/Object\"\n\nfunction supportsTail() {\n  return isMainService() || isSyncService()\n}\n\nexport const LogArgs: CommandPlugin = {\n  beforeParse: (cmd: Command) => {\n    const maybeLogStdout =\n      (supportsTail() ? `, \"PS_TAIL_LOGS=true\"` : \"\") +\n      ` and \"PS_LOG_STDOUT=true\".`\n\n    if (supportsTail()) {\n      cmd.option(\n        \"-v, --verbose\",\n        `Verbose logging from all processes. Shortcut for \"--info --tail\". Caution: noisy during imports!`\n      )\n    } else {\n      cmd.option(\"-v, --verbose\", `Verbose logging. Equivalent to --info.`)\n    }\n    cmd.option(\n      \"--error\",\n      `Emit \"error\" messages from this process to stdout. Sets \"PS_LOG_LEVEL=error\"${maybeLogStdout}`\n    )\n    cmd.option(\n      \"--warn\",\n      `Emit \"warn\" and \"error\" messages from this process to stdout. Sets \"PS_LOG_LEVEL=warn\"${maybeLogStdout}`\n    )\n    cmd.option(\n      \"--info\",\n      `Emit \"info\", \"warn\", and \"error\" messages from this process to stdout. Sets \"PS_LOG_LEVEL=info\"${maybeLogStdout}`\n    )\n    cmd.option(\n      \"--debug\",\n      `Emit \"debug\", \"info\", \"warn\", and \"error\" messages from this process to stdout. CAUTION: VERY NOISY. Sets \"PS_LOG_LEVEL=debug\"${maybeLogStdout}}`\n    )\n    cmd.option(\n      \"--trace\",\n      `Emit \"trace\", \"debug\", \"info\", \"warn\", and \"error\" messages from this process to stdout. CAUTION: VERY VERY NOISY. Sets \"PS_LOG_LEVEL=trace\"${maybeLogStdout}}`\n    )\n    if (supportsTail()) {\n      cmd.option(\n        \"--tail\",\n        `Emit log messages from both this process and all other concurrently running PhotoStructure processes on this host to stdout. This can be really helpful in seeing how PhotoStructure's processes are coordinating work. Caution: very noisy especially during imports. Sets \"PS_TAIL_LOGS=true\".`\n      )\n    }\n\n    return cmd\n  },\n\n  afterParse: (opts: Obj) => {\n    const error = isTrue(opts.error)\n    const warn = isTrue(opts.warn)\n    const info = isTrue(opts.info) || isTrue(opts.verbose) || isTrue(opts.v)\n    const debug = isTrue(opts.debug)\n    const trace = isTrue(opts.trace)\n\n    // these should win: use envValue\n    if (trace) {\n      Settings.logLevel.envValue = \"trace\"\n    } else if (debug) {\n      Settings.logLevel.envValue = \"debug\"\n    } else if (info) {\n      Settings.logLevel.envValue = \"info\"\n    } else if (warn) {\n      Settings.logLevel.envValue = \"warn\"\n    } else if (error) {\n      Settings.logLevel.envValue = \"error\"\n    }\n\n    if (isDaemon(opts as any)) {\n      // don't log to stdout if we're a daemon. Use .envValue to set to false but not persist\n      Settings.tailLogs.envValue = false\n      Settings.logStdout.envValue = false\n    } else {\n      if (isTrue(opts.tail)) {\n        // they asked for it: do it.\n        Settings.tailLogs.envValue = true\n      }\n      if (error || warn || info || debug || trace) {\n        // not envValue, as it's not being asked for directly.\n        Settings.logStdout.tmpValue = true\n\n        if (supportsTail()) {\n          Settings.tailLogs.tmpValue = true\n        }\n      }\n\n      if (\n        (Settings.tailLogs.valueOrDefault ||\n          Settings.logStdout.valueOrDefault) &&\n        Settings.logLevel.isUnset()\n      ) {\n        Settings.logLevel.envValue = \"info\"\n      }\n    }\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { valpath } from \"../../core/Object\"\nimport { firstSubstringIgnoreCase } from \"../../core/String\"\nimport { mapAsyncSerial } from \"../../core/async/Promise\"\nimport { parseJsonDate } from \"../../core/date/ExtendedDate\"\nimport { mapValidDate } from \"../../core/date/ValidDate\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { readRawTags } from \"../../core/tags/ExifTool\"\nimport { splitKeywords } from \"../../core/tags/KeywordTags\"\nimport { commandTimeoutMs } from \"../../core/volumes/VolumeTtls\"\nimport { isEmpty, uniqBy } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { TagPath, TagRef, TagRoots } from \"../../fe/api/Tag\"\nimport { toS } from \"../../fe/toS\"\n\nconst logger = lazy(() => mkLogger(\"curators.TypeTagger\"))\n\nexport async function tagFilesWithAlbums(\n  files: PosixFile[]\n): Promise<TagPath[]> {\n  if (isEmpty(Settings.tagAlbumFilenames.values)) {\n    return []\n  }\n\n  const dirs = uniqBy(\n    files.map(ea => ea.parent()),\n    ea => ea.nativePath\n  )\n  const arr = flatten(\n    dirs.map(dir => Settings.tagAlbumFilenames.values.map(ea => dir.join(ea)))\n  )\n\n  return mapAsyncSerial({\n    name: \"tagFilesWithAlbums\",\n    arr,\n    f: albumFromFile,\n    timeoutMs: commandTimeoutMs()\n  })\n}\n\nexport async function albumFromFile(\n  file: PosixFile | string\n): PromiseMaybe<TagPath> {\n  return albumFromTags(await readRawTags(file, false))\n}\n\nexport function albumFromTags(t: any): Maybe<TagPath> {\n  if (t == null) return\n\n  const title = valpath(t, Settings.tagAlbumTitle.valueOrDefault)\n  const desc = valpath(t, Settings.tagAlbumDescription.valueOrDefault)\n\n  const titlePath: string[] = blank(title)\n    ? []\n    : Settings.tagAlbumTitleHierarchies.valueOrDefault\n    ? splitKeywords(title)\n    : [title]\n\n  const whyExclude = isEmpty(titlePath)\n    ? \"(blank title)\"\n    : firstSubstringIgnoreCase(\n        Settings.tagAlbumsExcluded.values,\n        [toS(title), toS(desc)].join(\" \")\n      )\n\n  const result: Maybe<TagPath> =\n    whyExclude == null ? [TagRoots.Albums, ...titlePath] : undefined\n\n  if (result != null) {\n    const tagref: TagRef = {\n      name: result[result.length - 1] as string,\n      description: desc\n    }\n\n    mapValidDate(\n      parseJsonDate(valpath(t, Settings.tagAlbumDate.valueOrDefault) as any),\n      (d: Date) => {\n        tagref.releasedAt = d.getTime()\n      }\n    )\n    result[result.length - 1] = tagref\n  }\n\n  return logger().tap({\n    level: \"info\",\n    msg: \"albumFromFile()\",\n    result,\n    meta: { title, desc, whyExclude }\n  })\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { thenMap } from \"../../core/async/Promise\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { CapturedAt } from \"../../core/tags/CapturedAt\"\nimport {\n  joinTagPath,\n  leafIsExcluded,\n  omitAncestorTags\n} from \"../../core/tags/TagPaths\"\nimport { uniqBy } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { thenCollect } from \"../../fe/Promise\"\nimport { TagPath } from \"../../fe/api/Tag\"\nimport { Asset } from \"../model/Asset\"\nimport { tagFilesWithAlbums } from \"./AlbumTagger\"\nimport { cameraTagFile } from \"./CameraTagger\"\nimport { dateTagFile } from \"./DateTagger\"\nimport { tagAssetPaths } from \"./FilePathTagger\"\nimport { keywordTagFiles } from \"./KeywordTagger\"\nimport { lensTagFile } from \"./LensTagger\"\nimport { normalizeTagRoot, tagDeltas } from \"./Taggers\"\nimport { typeTagFiles } from \"./TypeTagger\"\nimport { whoTagFiles } from \"./WhoTagger\"\n\nexport interface AssetTaggingResult {\n  add: TagPath[]\n  remove: TagPath[]\n}\n\nconst logger = lazy(() => mkLogger(\"curators.AssetTagger\"))\n\n/**\n * should only be invoked from AssetPostUpsertTasks and specs\n */\nexport async function tagAndUpsertAsset_(\n  asset: Asset\n): PromiseMaybe<AssetTaggingResult> {\n  const assetFiles = (await asset.getExistingAssetFiles())!\n\n  logger().info(\"tagAndUpsertAsset()\", {\n    asset,\n    existing_uris: assetFiles.map(ea => ea.uri)\n  })\n\n  const existingPrimaryAssetFile = assetFiles.find(ea => ea.shown)\n  const primaryVariant = await existingPrimaryAssetFile?.posixFile_()\n\n  if (existingPrimaryAssetFile == null || primaryVariant == null) {\n    logger().throw(\"tagAndUpsertAsset(): no existing or primary asset file\", {\n      asset,\n      existingPrimaryAssetFile,\n      primaryVariant,\n      doNotSend: true,\n      fatal: false\n    })\n    return\n  }\n\n  const priorPrimaryAF = asset.getShown()\n\n  if (priorPrimaryAF?.id !== existingPrimaryAssetFile.id) {\n    logger().warn(\n      \"Changing primary asset we're using a different variant for tagging.\",\n      {\n        newPrimary: existingPrimaryAssetFile.uri,\n        priorPrimary: priorPrimaryAF?.uri\n      }\n    )\n    asset.setShown_(existingPrimaryAssetFile)\n  }\n\n  const files = await thenCollect(assetFiles, ea => ea.posixFile_())\n  const uris = asset.getAssetFiles().map(ea => ea.uri)\n\n  const priorTagPaths = asset.getTagPaths()\n  const capturedAts = await asset.getCapturedAts()\n\n  const tagResult = await tagAsset({\n    primaryVariation: primaryVariant,\n    files,\n    priorTagPaths,\n    capturedAts,\n    uris\n  })\n  logger().info(\"tagAndUpsertAsset\", tagResult)\n\n  const excludedTag = tagResult.add.find(ea =>\n    leafIsExcluded(ea, Settings.keywordBlocklist.values)\n  )\n  if (excludedTag != null) {\n    if (asset.shown === true) {\n      logger().info(\"this asset has an excluded tag, marking excluded\", {\n        excludedTag\n      })\n      asset.excludedAt = Date.now()\n    } else {\n      logger().info(\n        \"this asset has an excluded tag, and it wasn't shown yet, so we're removing it.\",\n        { excludedTag }\n      )\n      await Asset.remove({\n        assetId: asset.id!,\n        blocklistShas: false,\n        unlinkAssetFiles: false\n      })\n      return logger().throw(\n        \"tagAndUpsertAsset(): asset had excluded tag. Removed.\",\n        {\n          excludedTag,\n          uris,\n          files: files.map(ea => ea.nativePath)\n        }\n      )\n    }\n  }\n\n  const result = map(tagResult, async ea => {\n    Asset.addTags(asset.id!, ea.add)\n    Asset.removeTags(asset.id!, ea.remove)\n    asset.tags = undefined // < clear tags cache\n    return ea\n  })\n\n  await asset.updateFromFiles()\n  return result\n}\n\nexport async function tagAsset({\n  primaryVariation,\n  files,\n  priorTagPaths,\n  capturedAts,\n  uris\n}: {\n  primaryVariation: PosixFile\n  files: PosixFile[]\n  priorTagPaths: string[][]\n  capturedAts: CapturedAt[]\n  uris: string[]\n}): Promise<AssetTaggingResult> {\n  const tagPaths: TagPath[] = []\n\n  if (files.some(ea => ea.nativePath === primaryVariation.nativePath)) {\n    // good caller, GOOD\n  } else {\n    files.unshift(primaryVariation)\n  }\n\n  //\n  // NOTE: IF YOU CHANGE ANY TAGGERS, REMEMBER TO UPDATE AssetVersion!\n  //\n\n  if (Settings.tagCamera.valueOrDefault) {\n    await thenMap(cameraTagFile(primaryVariation), ea => {\n      logger().debug(\"Camera tag for \" + primaryVariation + \":\", ea)\n      tagPaths.push(ea)\n    })\n  }\n\n  if (Settings.tagLens.valueOrDefault) {\n    await thenMap(lensTagFile(primaryVariation), ea => {\n      logger().debug(\"Lens tag for \" + primaryVariation + \":\", ea)\n      tagPaths.push(ea)\n    })\n  }\n\n  await thenMap(dateTagFile(primaryVariation, capturedAts), ea => {\n    logger().debug(\"Date tag for \" + primaryVariation + \":\", ea)\n    tagPaths.push(ea)\n  })\n\n  const whoTags = (await whoTagFiles(files)) ?? []\n  logger().debug(\"whoTagFiles for \" + primaryVariation + \":\", whoTags)\n  tagPaths.push(...whoTags)\n\n  await thenMap(keywordTagFiles(files, whoTags), arr => {\n    logger().debug(\"Keyword tags for \" + primaryVariation + \":\", arr)\n    tagPaths.push(...arr)\n  })\n\n  if (Settings.tagFileType.valueOrDefault) {\n    await thenMap(typeTagFiles(files), arr => {\n      logger().debug(\"MIME type tags for \" + primaryVariation + \":\", arr)\n      tagPaths.push(...arr)\n    })\n  }\n\n  await thenMap(tagAssetPaths(uris), arr => {\n    logger().debug(\"file paths for uris\", { uris, arr })\n    tagPaths.push(...arr)\n  })\n\n  await thenMap(tagFilesWithAlbums(files), arr => {\n    logger().debug(\"Album tags for \" + primaryVariation + \":\", arr)\n    tagPaths.push(...arr)\n  })\n\n  const after = omitAncestorTags(\n    uniqBy(tagPaths.map(normalizeTagRoot), joinTagPath)\n  )\n\n  const result = await tagDeltas(priorTagPaths, after)\n  logger().info(\"tagAsset(\" + primaryVariation + \")\", {\n    priorTagPaths,\n    after,\n    result\n  })\n\n  return result\n}\n","import { PosixFile } from \"../../core/fs/PosixFile\"\nimport { ExifTags } from \"../../core/tags/ExifTags\"\nimport { readTags } from \"../../core/tags/ExifTool\"\nimport { TagRoots } from \"../../fe/api/Tag\"\nimport { compactBlankish } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\n\nexport function cameraTag(tags: Maybe<ExifTags>) {\n  return tags == null || blank(tags.Make) // < only require Make!\n    ? undefined\n    : compactBlankish([TagRoots.Camera, tags.Make, tags.Model])\n}\n\nexport async function cameraTagFile(file: PosixFile) {\n  return cameraTag(await readTags(file))\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { localeSync } from \"../../core/Locale\"\nimport { mapGt0 } from \"../../core/Number\"\nimport { stripSuffix } from \"../../core/String\"\nimport { Dated } from \"../../core/date/Dated\"\nimport { getDay, getMonth, getYear } from \"../../core/date/GetDateField\"\nimport { ee } from \"../../core/event/EventEmitter\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport {\n  CapturedAt,\n  bestCapturedAt,\n  capturedAtSrcFromStat\n} from \"../../core/tags/CapturedAt\"\nimport { readTags } from \"../../core/tags/ExifTool\"\nimport { isEmpty, range } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { within } from \"../../fe/Number\"\nimport { TagPath, TagRef, TagRoots } from \"../../fe/api/Tag\"\nimport { toS } from \"../../fe/toS\"\n\nconst dtf = lazy(\n  () =>\n    new Intl.DateTimeFormat(localeSync(), {\n      month: \"short\"\n    })\n)\n\nconst months = lazy(() => {\n  const f = dtf()\n  // There are rendering bugs (!!) for 1998-4-1, 2003-4-1, 1998-11-1, 2003-11-1,\n  // ... so we just capture the month names once for a known-correct year.\n  return range(0, 12, i => f.format(new Date(2016, i, 1))).map(ea =>\n    // Some locales (like en-CA) end with period:\n    stripSuffix(ea, \".\")\n  )\n})\n\nee().on(\"clearCache\", () => {\n  dtf.unset()\n  months.unset()\n})\n\nexport function yearToOrdinal(year: number): number {\n  // Y10K COME AT ME BRO\n  return 10000 - year\n}\n\nexport function monthToOrdinal(oneIndexedMonth: number): number {\n  return 13 - oneIndexedMonth\n}\n\nexport function ordinalToMonth(monthTagOrdinal: number): number {\n  return 13 - monthTagOrdinal\n}\n\nexport function dayToOrdinal(oneIndexedMonth: number): number {\n  return 33 - oneIndexedMonth\n}\n\nexport function yearTagRef(year: number): Maybe<TagRef> {\n  return mapGt0(year, ea => ({ name: toS(ea), ordinal: yearToOrdinal(ea) }))\n}\n\nexport function monthTagRef(oneIndexedMonth: Maybe<number>): Maybe<TagRef> {\n  if (!within(1, 12, oneIndexedMonth)) return\n  return map(months()[oneIndexedMonth - 1], monthName =>\n    // ordinal makes months order in reverse chron:\n    ({\n      name: String(oneIndexedMonth),\n      displayName: monthName,\n      ordinal: monthToOrdinal(oneIndexedMonth)\n    })\n  )\n}\n\nexport function dayTagRef(day: Maybe<number>): Maybe<TagRef> {\n  return mapGt0(day, ea => ({ name: toS(ea), ordinal: dayToOrdinal(ea) }))\n}\n\nexport function dateTag(date: Maybe<Dated>): Maybe<TagPath> {\n  const s = toS(Settings.tagYMD.valueOrDefault).toLowerCase()\n\n  if (date == null || s === \"\" || s === \"off\" || s.startsWith(\"disable\")) return // date tagging is disabled\n\n  // i18n happens in a layer above this:\n  const result: TagPath = [TagRoots.When]\n\n  if (s.startsWith(\"y\")) {\n    const y = map(getYear(date), yearTagRef)\n    if (y == null) return\n    result.push(y)\n  }\n  if (s.startsWith(\"ym\")) {\n    const m = map(getMonth(date), monthTagRef)\n    if (m == null) return result // just take the year.\n    result.push(m)\n  }\n  if (s.startsWith(\"ymd\")) {\n    const m = map(getDay(date), dayTagRef)\n    if (m == null) return result // just take the month.\n    result.push(m)\n  }\n  return result\n}\n\nexport async function dateTagFile(\n  file: PosixFile,\n  capturedAts: Maybe<CapturedAt>[]\n): PromiseMaybe<TagPath> {\n  if (Settings.tagYMD.valueOrDefault === \"\") return\n\n  const arr = [...capturedAts]\n\n  if (isEmpty(capturedAts)) {\n    arr.push((await readTags(file))?.capturedAt)\n  }\n\n  const best = bestCapturedAt(arr)\n\n  if (\n    best == null ||\n    (capturedAtSrcFromStat(best.src) &&\n      !Settings.tagDateFromStat.valueOrDefault)\n  ) {\n    return\n  }\n\n  return dateTag(best.date)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { tagRefToS } from \"../../core/tags/TagPaths\"\nimport { uriToTagPath } from \"../../core/web/UriToTagPath\"\nimport { compact } from \"../../fe/Array\"\nimport { PS_LOCAL_FILE_SCHEME } from \"../../fe/URI\"\nimport { TagPath, TagRoots } from \"../../fe/api/Tag\"\nimport { Asset } from \"../model/Asset\"\nimport { AssetFile } from \"../model/AssetFile\"\nimport { modelDb } from \"../model/ModelDb\"\nimport { displayNameForVolsha } from \"../tag/TagSql\"\n\nconst logger = lazy(() => mkLogger(\"curators.FilePathTagger\"))\n\nexport async function tagAssetPaths(uris: string[]): Promise<TagPath[]> {\n  const result: TagPath[] = []\n  for (const uri of uris) {\n    try {\n      const tp = uriToTagPath({ uri, isFile: true })\n      if (tp == null) continue\n      // `info` may not have spun up the db:\n      if (uri.startsWith(PS_LOCAL_FILE_SCHEME) && modelDb() != null) {\n        const volsha = tagRefToS(tp[1])\n        // Fix for https://forum.photostructure.com/t/volume-id-shows-as-a-tag/754\n        tp[1] = {\n          name: volsha,\n          displayName: await displayNameForVolsha(volsha)\n        }\n        logger().info(\"tagAssetPaths()\", { uri, tp })\n      }\n      result.push(tp)\n    } catch (err) {\n      logger().warn(\"Failed to parse asset file URI\", { uri })\n    }\n  }\n  return result\n}\n\nexport function isFsTag(t: TagPath): boolean {\n  return tagRefToS(t[0]).toLowerCase() === TagRoots.fs\n}\n\nexport function addFilesTagsToAsset(assetId: number) {\n  const uris = AssetFile.dbl.pluckAllf<string>(q =>\n    q.select(\"uri\").where({ assetId })\n  )\n  return addFileUriTagsToAsset(assetId, uris)\n}\n\nexport function addFileUriTagsToAsset(assetId: number, uris: string[]) {\n  return Asset.addTags(\n    assetId,\n    compact(uris.map(uri => uriToTagPath({ uri, isFile: true })))\n  )\n}\n","import { partition } from \"../../core/Array\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { escapeRegExp } from \"../../core/RegExp\"\nimport {\n  equalsIgnoreCase,\n  includesIgnoreCase,\n  isString,\n  uniqIgnoreCase\n} from \"../../core/String\"\nimport { lcdiff } from \"../../core/StringSimilarity\"\nimport { mapAsyncSerial, thenMap } from \"../../core/async/Promise\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { readRawTags } from \"../../core/tags/ExifTool\"\nimport { delimRe, pathSepRe, rawTagKeywords } from \"../../core/tags/KeywordTags\"\nimport { joinTagPath } from \"../../core/tags/TagPaths\"\nimport {\n  compact,\n  compactBlanks,\n  isNotEmpty,\n  uniq,\n  uniqBy2\n} from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { TagPath, TagRoots } from \"../../fe/api/Tag\"\nimport { toS } from \"../../fe/toS\"\nimport { normalizeTagRoot, stripTagRoot } from \"./Taggers\"\nimport { isWhoTag, nameTag } from \"./WhoTagger\"\n\nconst logger = lazy(() => mkLogger(\"curators.KeywordTagger\"))\n\nconst delimSpaceRe = lazy(() =>\n  mapNotBlank(\n    Settings.keywordDelimiters.valueOrDefault,\n    ea => new RegExp(`[ /${escapeRegExp(ea)}]`)\n  )\n)\n\nlater(() => {\n  Settings.keywordDelimiters.watchLater(() => delimSpaceRe.unset())\n})\n\nexport function extractDashDashTags(s: string): string[] {\n  return logger().tap({\n    msg: \"extractDashDashTags()\",\n    result: mapOr(\n      toS(s).split(\"--\")[1],\n      ea => compactBlanks(mapOr(delimSpaceRe(), re => ea.split(re), [ea])),\n      () => []\n    ),\n    meta: { s }\n  })\n}\n\n/**\n * Extract the \"dash-dash\" tags encoded in `f`'s path\n */\nexport function extractPathnameTags(f: PosixFile): string[] {\n  return [\n    ...extractDashDashTags(f.parent().posixPath),\n    ...extractDashDashTags(f.name)\n  ]\n}\n\n// doesn't handle things like news:alt.goth but those don't have slashes, so who cares\nconst UrlRE = /\\w{2,7}:\\/\\/\\S+/gi\n\n/**\n * Given a bunch of flat or hierarchical strings, split, normalize, and dedupe\n * the paths.\n */\nexport function normalizeKeywordPaths(arr: (string | string[])[]): string[][] {\n  const result: string[][] = []\n\n  // handled as keywords:\n  const urls: string[] = []\n\n  const arr1: (string | string[])[] = []\n\n  for (const ea of compact(arr)) {\n    if (Array.isArray(ea)) {\n      arr1.push(ea)\n    } else {\n      // Pull out the URLs as keywords:\n      const s = toS(ea).replace(UrlRE, m => {\n        urls.push(m)\n        return \"\"\n      })\n      arr1.push(...mapOr(delimRe(), re => s.split(re), [s]))\n    }\n  }\n\n  // Split hierarchical paths:\n  const arr2 = mapOr(\n    pathSepRe(),\n    re => arr1.map(ea => (isString(ea) ? ea.split(re) : ea)),\n    arr1\n  )\n\n  // Convert all one-array-deep keywords to simple strings:\n  const arr3 = arr2.map(ea =>\n    Array.isArray(ea) && ea.length === 1 ? ea[0] : ea\n  )\n\n  // Split strings into paths that contain keywordPathSeparators.\n  const [paths1, kws1] = partition(arr3, Array.isArray) as [\n    string[][],\n    string[]\n  ]\n\n  const paths = paths1\n    .map(ea => compactBlanks(ea.map(ea1 => ea1.trim())))\n    .filter(isNotEmpty)\n\n  // DON'T USE LOWERCASE HERE. We want locale-aware matching.\n  const pathNames: string[] = uniqIgnoreCase(flatten(paths))\n\n  result.push(...paths)\n\n  const kws = [...kws1, ...urls]\n    .map(ea => ea.trim())\n    .filter(ea => notBlank(ea) && !includesIgnoreCase(pathNames, ea))\n\n  const copy = Settings.keywordReparenting.valueOrDefault === \"copy\"\n  const retain = Settings.keywordReparenting.valueOrDefault === \"retain\"\n  const aliases = Settings.rootTagKeywordsAliases.values\n\n  for (const ea of [...result]) {\n    if (includesIgnoreCase(aliases, ea[0])) {\n      // Normalize keyword roots:\n      ea[0] = TagRoots.Keywords\n    }\n    if (ea[0] !== TagRoots.Keywords) {\n      if (copy) {\n        result.push([TagRoots.Keywords, ...ea])\n      } else if (retain) {\n        ea.unshift(TagRoots.Keywords)\n      }\n    }\n  }\n\n  // For all elements that are just strings, delete those that are leafNames.\n  for (const kw of kws) {\n    // Push all elements that are still strings into [Keywords, $ea]\n    result.push([TagRoots.Keywords, kw])\n  }\n\n  return uniq(result)\n}\n\n/**\n * @return uniq paths, with most-cased-values winning over lowercase:\n */\nexport function dedupeKeywordPaths(arr: TagPath[]): TagPath[] {\n  return uniqBy2(\n    sortBy(arr.map(normalizeTagRoot), ea => {\n      const j = joinTagPath(ea)\n      return [j.normalize().toLowerCase(), -1 * lcdiff(j)]\n    }),\n    (a, b) => equalsIgnoreCase(joinTagPath(a), joinTagPath(b))\n  )\n}\n\n/**\n * Normalizes hierarchical paths, extracts Who tags, and returns deduped\n * TagPaths.\n */\nexport function processKeywords(\n  keywords: (string | string[])[],\n  whoTags: TagPath[]\n): TagPath[] {\n  // DigiKam craps into SEVEN TAGS for faces, *yay*\n  const [rawKwWhoTags, nonWhoKws] = partition(\n    normalizeKeywordPaths(keywords),\n    isWhoTag\n  )\n  const kwWhoTags = flatten(rawKwWhoTags.map(nameTag))\n\n  // Include both \"first last\" and \"last, first\"\n  const whoNames = uniq(\n    flatten(\n      [...kwWhoTags, ...whoTags].map(tagPath => {\n        const kw = stripTagRoot(tagPath)\n        return [kw.join(\", \"), kw.join(\" \"), [...kw].reverse().join(\" \")]\n      })\n    )\n  )\n\n  const result = dedupeKeywordPaths([\n    ...nonWhoKws.filter(\n      kw => !includesIgnoreCase(whoNames, stripTagRoot(kw).join(\" \"))\n    ),\n    ...kwWhoTags\n  ])\n\n  // console.log(\"processKeywords\", {\n  //   keywords,\n  //   whoTags,\n  //   rawKwWhoTags,\n  //   nonWhoKws,\n  //   kwWhoTags,\n  //   whoNames,\n  //   result\n  // })\n\n  return logger().tap({\n    msg: \"processKeywords()\",\n    level: \"info\",\n    result\n  })\n}\n\n/**\n * Main entry point: extract and dedupe all keywords for all given files.\n */\nexport async function keywordTagFiles(\n  files: PosixFile[],\n  whoTags: TagPath[]\n): Promise<TagPath[]> {\n  const pathnameKeywords = Settings.tagKeywordsFromPath.valueOrDefault\n    ? flatten(files.map(extractPathnameTags))\n    : []\n  const tagKeywords = Settings.tagKeywordsFromMetadata.valueOrDefault\n    ? flatten(\n        await mapAsyncSerial({\n          name: \"keywordTagFiles\",\n          arr: files,\n          f: f => thenMap(readRawTags(f), rawTagKeywords)\n        })\n      )\n    : []\n\n  return processKeywords([...pathnameKeywords, ...tagKeywords], whoTags)\n}\n","import { thenMap } from \"../../core/async/Promise\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { ExifTags } from \"../../core/tags/ExifTags\"\nimport { readTags } from \"../../core/tags/ExifTool\"\nimport { TagRoots } from \"../../fe/api/Tag\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { mapNotBlank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\n\nexport function lensTag(tags: Maybe<ExifTags>) {\n  return map(tags, t =>\n    mapNotBlank(t.lensMake, make =>\n      mapNotBlank(\n        compactBlanks(\n          Settings.tagFullLensModel.valueOrDefault\n            ? [t.lensModel, t.lensInfo]\n            : [t.lensInfo, t.lensModel]\n        )[0],\n        model => [TagRoots.Lens, make, model]\n      )\n    )\n  )\n}\n\nexport function lensTagFile(file: PosixFile) {\n  return thenMap(readTags(file), lensTag)\n}\n","import { Settings } from \"../../core/settings/Settings\"\nimport { tagDiff, tagPathsInclude, tagRefToS } from \"../../core/tags/TagPaths\"\nimport { TagPath, TagRef, TagRoots } from \"../../fe/api/Tag\"\nimport { filterInPlace, uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\n\nexport const WhenRoot = { name: TagRoots.When, ordinal: 1 } //  icon: \"event\"\nexport const AlbumsRoot = { name: TagRoots.Albums, ordinal: 2 } //\nexport const WhoRoot = { name: TagRoots.Who, ordinal: 4 }\nexport const KwRoot = { name: TagRoots.Keywords, ordinal: 7 }\n\nexport const Roots: TagRef[] = [\n  WhenRoot,\n  AlbumsRoot,\n  { name: TagRoots.fs, ordinal: 3 }, // filesystem\n  WhoRoot,\n  // { name: Where, ordinal: 3, icon: explore},\n  // { name: What, ordinal: 4, icon: nature},\n  { name: TagRoots.Camera, ordinal: 5 }, // icon: photo_camera\n  { name: TagRoots.Lens, ordinal: 6 },\n  KwRoot,\n  { name: TagRoots.Type, ordinal: 8 }\n]\n\n// export const WhereSynonyms = new CISet([\n//   \"country\",\n//   \"el país\",\n//   \"emplacement\",\n//   \"endroit\",\n//   \"gps\",\n//   \"les pays\",\n//   \"location\",\n//   \"locations\",\n//   \"ort\",\n//   \"pays\",\n//   \"place\",\n//   \"places\",\n//   \"platz\",\n//   \"posición\",\n//   \"region\",\n//   \"région\",\n//   \"site\",\n//   \"sitio\",\n//   \"stätte\",\n//   \"ubicación\",\n//   \"where\"\n// ])\n\n// export const WhatSynonyms = new CISet([\n//   \"article\",\n//   \"articles\",\n//   \"item\",\n//   \"items\",\n//   \"le sujet\",\n//   \"matière\",\n//   \"object\",\n//   \"objects\",\n//   \"objet\",\n//   \"objets\",\n//   \"subject\",\n//   \"subjects\",\n//   \"subjekt\",\n//   \"sujet\",\n//   \"sujeta\",\n//   \"sujeto\",\n//   \"what\"\n// ])\n\nconst rootNamesLowerCase = uniq(\n  [\n    ...TagRoots.values,\n    ...Settings.rootTagKeywordsAliases.values,\n    ...Settings.rootTagWhoAliases.values\n  ].map(ea => ea.toLowerCase())\n)\n\nexport function hasTagRoot(path: TagPath): boolean {\n  return rootNamesLowerCase.includes(tagRefToS(path[0]).toLowerCase())\n}\n\nexport function stripTagRoot(path: TagPath): TagPath {\n  return hasTagRoot(path) ? path.slice(1) : path\n}\n\nconst albumRootsLowerCased = uniq(\n  [TagRoots.Albums, ...Settings.rootTagAlbumsAliases.values].map(ea =>\n    ea.toLowerCase()\n  )\n)\n\nconst kwRootsLowerCased = uniq(\n  [TagRoots.Keywords, ...Settings.rootTagKeywordsAliases.values].map(ea =>\n    ea.toLowerCase()\n  )\n)\n\nconst whoRootsLowerCased = uniq(\n  [TagRoots.Who, ...Settings.rootTagWhoAliases.values].map(ea =>\n    ea.toLowerCase()\n  )\n)\n\nexport function normalizeTagRoot(path: TagPath): TagPath {\n  const root = tagRefToS(path[0]).toLowerCase()\n  if (blank(root)) return path\n  if (kwRootsLowerCased.includes(root)) return [KwRoot, ...path.slice(1)]\n  if (kwRootsLowerCased.includes(root)) return [KwRoot, ...path.slice(1)]\n  if (whoRootsLowerCased.includes(root)) return [WhoRoot, ...path.slice(1)]\n  if (albumRootsLowerCased.includes(root)) return [AlbumsRoot, ...path.slice(1)]\n\n  return path\n}\n\n/**\n * Determine which TagPaths need to be added and removed to make `before` become\n * `after`.\n */\nexport async function tagDeltas(\n  before: Maybe<Maybe<TagPath>[]>,\n  after: Maybe<Maybe<TagPath>[]>\n): Promise<{ add: TagPath[]; remove: TagPath[] }> {\n  const add = tagDiff(after, before)\n  const remove = tagDiff(before, after)\n\n  const excludedRootTags = Settings.excludedRootTags.valueOrDefault\n\n  filterInPlace(add, tagPath => {\n    const bad = excludedRootTags.includes(tagRefToS(tagPath[0]).toLowerCase())\n    if (bad && !tagPathsInclude(tagPath, remove)) {\n      remove.push(tagPath)\n      console.log(\"removing bad tag\", tagPath)\n    }\n    return !bad\n  })\n\n  return {\n    add,\n    remove\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { capitalize } from \"../../core/String\"\nimport { mapAsyncSerial } from \"../../core/async/Promise\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { readMimeType } from \"../../core/tags/ReadMimeType\"\nimport { compact, compactBlanks, uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { firstDefinedThunk } from \"../../fe/Thunk\"\nimport { TagRoots } from \"../../fe/api/Tag\"\n\nconst logger = lazy(() => mkLogger(\"curators.TypeTagger\"))\n\nexport async function typeTagFiles(files: PosixFile[]): Promise<string[][]> {\n  const mimetypes = uniq(\n    await mapAsyncSerial({ name: \"typeTagFiles\", arr: files, f: readMimeType })\n  )\n  return compact(mimetypes.map(mimeTypeToTag))\n}\n\nconst Cases = new Map(\n  [\"M2TS\", \"JPEG\", \"QuickTime\"].map(ea => [ea.toLowerCase(), ea])\n)\n\nexport function mimeTypeToTag(mt: string) {\n  const [t, st] = mt.split(\"/\")\n  if (blank(t) || blank(st)) return\n\n  return logger().tap({\n    msg: \"mimetypeToTag(\" + mt + \")\",\n    result: map(friendlySubtype(st, mt), arr =>\n      compactBlanks([TagRoots.Type, capitalize(t), ...arr])\n    )\n  })\n}\n\nconst Subtypes = lazy(\n  () =>\n    new Map<string, string[]>([\n      [\"image/x-adobe-dng\", [\"Raw\", \"DNG\"]],\n      [\"image/x-fuji-raf\", [\"Raw\", \"Fujifilm\"]],\n      [\"video/m2ts\", [\"MPEG-2\"]],\n      [\"video/mp2t\", [\"MPEG-2\"]],\n      [\"video/mp4\", [\"MPEG-4\"]],\n      [\"video/quicktime\", [\"QuickTime\"]],\n      [\"video/x-msvideo\", [\"AVI\"]]\n    ])\n)\n\nexport function friendlySubtype(subtype: string, fullMimeType: string) {\n  return firstDefinedThunk([\n    () => Subtypes().get(fullMimeType.trim().toLowerCase()),\n    () =>\n      map(subtype.match(/^x-(\\w{4,})-\\w{3}/), m => [\"Raw\", capitalize(m[1])]),\n    // () => map(subtype.match(/^\\w{3,4}/), () => [subtype.toUpperCase()]),\n    () => [\n      fixCase(subtype.replace(/^(x-)|(vnd\\.)|(prs\\.)/i, \"\").replace(/-/g, \" \"))\n    ]\n  ])!\n  // if (RawSubtypes().has(s.trim())) {\n  //   return [\"Raw\", capitalize(s.split(\"-\")[1])]\n  // }\n  // const c = Cases.get(s.toLowerCase())\n  // if (c != null) return [c]\n  // return s.replace(/^x-/i, \"\").split(\"-\").map(fixCase)\n}\n\nexport function fixCase(s: string) {\n  if (s.match(/[a-z0-9]{3,4}/i) != null) {\n    return s.toUpperCase()\n  }\n  return orElse(Cases.get(s.trim().toLowerCase()), () => capitalize(s))\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { valpath } from \"../../core/Object\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { readRawTags } from \"../../core/tags/ExifTool\"\nimport { readJsonSidecar } from \"../../core/tags/JsonSidecar\"\nimport { renderNameTag } from \"../../core/tags/Names\"\nimport { tagRefToS } from \"../../core/tags/TagPaths\"\nimport { isNotEmpty, uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { values } from \"../../fe/Object\"\nimport { TagPath, TagRoots } from \"../../fe/api/Tag\"\nimport { toA } from \"../../fe/toA\"\n\nconst logger = lazy(() => mkLogger(\"curators.WhoTagger\"))\n\nexport async function whoTagFiles(files: PosixFile[]): PromiseMaybe<TagPath[]> {\n  // Don't bother to read tags, just read JSON payloads:\n  const names: string[] = []\n\n  if (Settings.tagJsonFaces.valueOrDefault) {\n    const jsonSidecars: PosixFile[] = []\n    for (const f of files) {\n      jsonSidecars.push(...toA(await f.jsonSidecars()))\n    }\n    for (const ea of jsonSidecars) {\n      const tags = await readJsonSidecar(ea)\n      const arr = tags?.peopleNames\n      if (isNotEmpty(arr)) {\n        names.push(...arr)\n      }\n    }\n  }\n\n  if (Settings.tagFaceRegions.valueOrDefault) {\n    for (const f of files) {\n      const tags = await readRawTags(f, true) // include sidecars\n      // Expect something like\n      // {\n      //   \"Area\": {\n      //     \"H\": 0.0653789,\n      //     \"Unit\": \"normalized\",\n      //     \"W\": 0.0318743,\n      //     \"X\": 0.214086,\n      //     \"Y\": 0.178058\n      //   },\n      //   \"Name\": \"First Last\",\n      //   \"Type\": \"Face\"\n      // }\n\n      // or:\n      // \"Regions\": {\n      //   \"AppliedToDimensions\": {\n      //     \"H\": 1704,\n      //     \"Unit\": \"pixel\",\n      //     \"W\": 2272\n      //   },\n      //   \"RegionList\": [{\n      //     \"ALGArea\": {\n      //       \"H\": 0.176056,\n      //       \"W\": 0.132042,\n      //       \"X\": 0.363116,\n      //       \"Y\": 0.288146\n      //     },\n      //     \"DLYArea\": {\n      //       \"H\": 0.181338,\n      //       \"W\": 0.112236,\n      //       \"X\": 0.363116,\n      //       \"Y\": 0.290786\n      //     },\n      //     \"Name\": \"Joe Bloggs\",\n      //     \"NameAssignType\": \"manual\",\n      //     \"Type\": \"Face\"\n\n      if (tags != null) {\n        for (const v of values(tags)) {\n          const regionList = (v as any)?.RegionList\n          if (Array.isArray(regionList)) {\n            for (const region of regionList) {\n              if (region[\"Type\"] === \"Face\") {\n                names.push(region[\"Name\"])\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  if (isNotEmpty(Settings.whoTags.values)) {\n    for (const f of files) {\n      const tags = await readRawTags(f, true) // include sidecars\n      for (const field of Settings.whoTags.values) {\n        names.push(...toA(valpath(tags, field)))\n      }\n    }\n  }\n\n  const result = uniq(flatten(uniq(names).map(nameTag)))\n\n  return logger().tap({\n    msg: \"whoTagFiles()\",\n    level: \"info\",\n    result,\n    meta: { names, files: files.map(ea => ea.nativePath) }\n  })\n}\n\nconst whoRootsLowerCased = uniq(\n  [TagRoots.Who, ...Settings.rootTagWhoAliases.values].map(ea =>\n    ea.toLowerCase()\n  )\n)\n\nexport function isWhoTag(t: TagPath): boolean {\n  return whoRootsLowerCased.includes(tagRefToS(t[0]).toLowerCase())\n}\n\nexport function nameTag(s: string | string[]) {\n  if (blank(s)) return\n  if (Array.isArray(s)) {\n    if (isWhoTag(s)) {\n      s.shift()\n    }\n    return s.length === 0\n      ? undefined // < weird: just a \"Who\":\n      : s.length === 1\n      ? renderNameTag(s[0]) // < \"Who/First Last\"\n      : [[TagRoots.Who, ...s]] // < \"Who/Person/Name\": retain the specified hierarchy\n  } else {\n    return renderNameTag(s)\n  }\n}\n","import sqlite from \"better-sqlite3\"\nimport { max } from \"../../core/Array\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isSyncService } from \"../../core/ServiceNames\"\nimport { EndableRanks, ending } from \"../../core/async/Endable\"\nimport { EndableWrapper } from \"../../core/async/EndableWrapper\"\nimport { time } from \"../../core/async/PromiseTimer\"\nimport { filestamp } from \"../../core/date/Filestamp\"\nimport { DatabaseWithUid } from \"../../core/db/DatabaseWithUid\"\nimport { dbBackupCold_ } from \"../../core/db/DbBackupCold\"\nimport { handleDbRetries } from \"../../core/db/DbRetries\"\nimport { mkdb_ } from \"../../core/db/MkDb\"\nimport { isDirSQLiteReadWrite } from \"../../core/db/SQLiteReadWrite\"\nimport { Schema } from \"../../core/db/Schemas\"\nimport { WrappedError } from \"../../core/error/WrappedError\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { HealthCheck } from \"../../core/health/HealthCheck\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { fmtPct, gt0 } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { randomChars } from \"../../fe/Random\"\nimport { Migration } from \"./Migration\"\nimport { checkpoint_, escStr, repairDbFile_, verifyDb_ } from \"./SQLite\"\nimport { localTableInfo } from \"./TableInfo\"\n\n/**\n * Manages a SQLite database connection. If the connection closes (due to\n * external vacuuming), it will be automatically re-opened.\n */\nexport class Db extends EndableWrapper {\n  #count = 0\n  #db: Maybe<DatabaseWithUid>\n  readonly endTimeoutMs = minuteMs\n\n  /**\n   * @param _dataDir if not given, use `libraryDataDir()`\n   */\n  constructor(\n    readonly schema: Schema,\n    readonly dbFile: PosixFile\n  ) {\n    super(\"db.Db(\" + schema + \")\", () => this.closeDb(), EndableRanks.db)\n  }\n\n  toJSON() {\n    return pick(this, \"schema\", \"dbFile\")\n  }\n\n  get open() {\n    return this.#db != null && this.#db.open\n  }\n\n  get inTransaction() {\n    return this.open && true === this.#db?.inTransaction\n  }\n\n  prepare(source: string) {\n    return this.db.prepare(source)\n  }\n\n  pragma(pragma: string, options?: sqlite.PragmaOptions): any {\n    return this.logger.tapThunk({\n      msg: \"PRAGMA \" + pragma,\n      result: () => this.db.pragma(pragma, options)\n    })\n  }\n\n  get db(): DatabaseWithUid {\n    const priorWasNull = this.#db == null\n    if (!this.open) {\n      this.logger.info(\"setting up new db connection to \" + this.dbFile, {\n        priorWasNull\n      })\n      try {\n        this.#db = mkdb_({ nativePath: this.dbFile.nativePath })\n      } catch (cause) {\n        throw new WrappedError(\"Failed to set up \" + this.dbFile, {\n          cause,\n          path: this.dbFile.nativePath\n        })\n      }\n    }\n    if (\n      isSyncService() &&\n      Settings.dbAutoVacuumMode.valueOrDefault === \"INCREMENTAL\" &&\n      gt0(Settings.dbWalAutoCheckpoint.valueOrDefault) &&\n      ++this.#count % Settings.dbWalAutoCheckpoint.valueOrDefault === 0\n    ) {\n      this.#db?.pragma(\"incremental_vacuum\")\n    }\n    return this.#db!\n  }\n\n  verify_() {\n    return verifyDb_(this.db)\n  }\n\n  assertHeartbeat_() {\n    const str = randomChars(64)\n    const now = Date.now()\n    try {\n      this.db\n        .prepare(\n          \"INSERT INTO heartbeat (name, createdAt, updatedAt) VALUES (?,?,?)\"\n        )\n        .run(str, now, now)\n\n      const row = this.db\n        .prepare(\"SELECT * FROM heartbeat WHERE name = ?\")\n        .get(str) as any\n\n      if (row?.name !== str) {\n        throw new Error(\"heartbeat INSERT/SELECT roundtrip failed\")\n      }\n    } finally {\n      try {\n        this.db.prepare(\"DELETE FROM heartbeat WHERE name = ?\").run(str)\n      } catch {\n        // ignore\n      }\n    }\n  }\n\n  closeDb() {\n    try {\n      if (true === this.#db?.open) {\n        this.logger.info(\"closing db\", this.#db)\n        this.#db?.close()\n      }\n    } catch (err) {\n      this.logger.warn(\"closeDb(): .close() failed\", err)\n    }\n    this.#db = undefined\n  }\n\n  readonly onRetry = lazy(\n    () => this.closeDb(),\n    Settings.maxBusyDbMs.valueOrDefault / 4\n  )\n\n  #maxUpdatedAt(...tablenames: string[]): Maybe<number> {\n    const arr: number[] = []\n    for (const table of tablenames) {\n      try {\n        arr.push(\n          this.db\n            .prepare(\"SELECT MAX(updatedAt) FROM \" + escStr(table))\n            .pluck()\n            .get() as number\n        )\n      } catch (error) {\n        this.logger.warn(\n          `#maxUpdatedAt(): failed to get max updatedAt for ${table}`,\n          error\n        )\n      }\n    }\n    return max(arr)\n  }\n\n  readonly maxUpdatedAt = lazy(\n    () =>\n      this.schema === \"models\"\n        ? this.#maxUpdatedAt(\"Asset\", \"AssetFile\", \"Example\")\n        : 0,\n    5 * secondMs\n  )\n\n  async vacuum() {\n    try {\n      await handleDbRetries(\n        () => time(\"db.checkpoint\", () => checkpoint_({ db: this.db })),\n        this.onRetry\n      )\n      await handleDbRetries(\n        () => time(\"db.optimize\", () => this.db.pragma(\"OPTIMIZE\")),\n        this.onRetry\n      )\n      await handleDbRetries(\n        () => time(\"db.vacuum\", () => this.db.exec(\"VACUUM\")),\n        this.onRetry\n      )\n    } catch (error) {\n      this.logger.warn(\"vacuum(): failed\", { error })\n      throw error\n    }\n  }\n\n  /**\n   * Caller should have an exclusive lock on the database to prevent\n   * concurrent access.\n   */\n  async repair_() {\n    this.logger.warn(\"repair_(): Attempting restore of \" + this.dbFile)\n    this.closeDb()\n    await repairDbFile_(this.dbFile)\n    this.logger.info(\"repair_(): Database restoration was successful!\")\n  }\n\n  async #backupHot_(destFile: PosixFile) {\n    await destFile.parent().mkdirp_()\n    await this.db.backup(destFile.nativePath, {\n      progress: ea => {\n        this.logger.log(\n          ending() ? \"info\" : \"debug\",\n          \"backup() \" +\n            fmtPct(100 - (ea.remainingPages / ea.totalPages) * 100) +\n            \" completed\"\n        )\n        // This is the number of pages to backup per callback\n        return ending() ? 1000 : 100\n      }\n    })\n  }\n\n  async backup_(destDir: PosixFile, isDestDirRW?: boolean): Promise<PosixFile> {\n    const isRW = isDestDirRW ?? (await isDirSQLiteReadWrite(destDir))\n    const hotDestDb = (\n      isRW ? destDir : this.dbFile.parent().join(\"backups\", filestamp())\n    ).join(this.dbFile.base)\n    await this.#backupHot_(hotDestDb)\n    if (!isRW) {\n      await dbBackupCold_(hotDestDb, destDir)\n    }\n    return destDir.join(this.dbFile.base)\n  }\n\n  readonly migrate_ = lazy(async () => {\n    let repaired = false\n    const file = this.dbFile\n    if (this.dbFile == null) {\n      throw new Error(\"Cannot migrate database: missing db\")\n    }\n    let dbSetupError\n    if (await this.dbFile.isNonEmptyFile()) {\n      try {\n        verifyDb_(this.db) // < this will fail if the db is borked\n      } catch (error) {\n        this.logger.warn(\"verifyDb failed before attempting Migration.\", {\n          error\n        })\n        dbSetupError = error\n      }\n    }\n\n    if (dbSetupError != null || Settings.dbForceRecover.valueOrDefault) {\n      HealthCheck.addLoadingMsg(\"Repairing database...\")\n      await this.repair_()\n      repaired = true\n    }\n\n    const migration = new Migration(this.schema, this.db, file)\n    const appliedMigrations = await migration.apply_()\n    return this.logger.tap({\n      msg: \"migrate_\",\n      result: { appliedMigrations, migration, repaired }\n    })\n  })\n\n  readonly tableInfo_ = lazy(() => localTableInfo(this.db))\n}\n","import { isSuspended } from \"../../core/IsSuspended\"\nimport { Logger, mkLogger } from \"../../core/Logger\"\nimport { EndableRanks, ending } from \"../../core/async/Endable\"\nimport { EndableInterval } from \"../../core/async/EndableInterval\"\nimport { EndableWrapper } from \"../../core/async/EndableWrapper\"\nimport { filestamp } from \"../../core/date/Filestamp\"\nimport { dbBackupCold_ } from \"../../core/db/DbBackupCold\"\nimport { sqliteFiles } from \"../../core/db/SQLiteFiles\"\nimport { SqliteExt } from \"../../core/db/Schemas\"\nimport { isUpdateReadyToInstall } from \"../../core/event/UpdateReadyToInstall\"\nimport { FsLock, withLock_ } from \"../../core/fs/FsLock\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { fmtDuration } from \"../../fe/FmtDuration\"\nimport { runMaintenanceTasks } from \"../model/MaintenanceTasks\"\nimport { Db } from \"./Db\"\nimport { libraryDbInfoFromDbFile, libraryDbObjects_ } from \"./DbModelSetup\"\nimport { dbSetupErrors, hasDbSetupErrors } from \"./DbSetupErrors\"\n\nconst endTimeoutMs = 5 * minuteMs\n\nexport const NoWriteLock = Symbol(\"NoWriteLock\")\nexport const NoOp = Symbol(\"NoOp\")\nexport const Contested = Symbol(\"Contested\")\n\nexport class DbModelJanitor extends EndableInterval {\n  readonly backupsDir = this.libraryDbFile.sibling(\"backups\")\n  readonly logger: Logger = mkLogger(this.name)\n  readonly fslockRelease = new EndableWrapper(\n    \"db.DbModelJanitor.fslockRelease\",\n    () => this.dbFslock.release(),\n    EndableRanks.postdb,\n    endTimeoutMs\n  )\n\n  #lastUpdatedAt = 0\n\n  constructor(\n    readonly db: Db,\n    readonly dbFslock: FsLock,\n    readonly libraryDbFile: PosixFile = libraryDbObjects_().libraryDbFile,\n    readonly retentionCount: number = Settings.dbBackupRetentionCount\n      .valueOrDefault\n  ) {\n    super({\n      name: \"db.DbModelJanitor\",\n      callback: () => this.#onInterval(),\n      intervalMs: Settings.dbBackupIntervalMs.valueOrDefault,\n      initialDelayMs: minuteMs,\n      rank: EndableRanks.db,\n      endTimeoutMs: 5 * minuteMs, // 200MB to copy, 1MB/s, 3 minutes\n      onEnd: () => this.#teardown()\n    })\n    void this.dbFslock.tryAcquire_()\n  }\n\n  async vacuumBackups() {\n    const dbFiles =\n      (await this.backupsDir.childFiles(ea => ea.ext === SqliteExt)) ?? []\n    const victims = dbFiles.slice(0, -this.retentionCount)\n    for (const victim of victims) {\n      this.logger.info(\"backup(): removing stale backup \" + victim)\n      for (const ea of sqliteFiles(victim)) {\n        await ea.unlink()\n      }\n    }\n  }\n\n  get useReplica() {\n    return !this.db.dbFile.eql(this.libraryDbFile)\n  }\n\n  async #onInterval() {\n    try {\n      await this.backup_()\n    } catch (error) {\n      this.logger.error(\"backup_() failed\", { error })\n    }\n  }\n\n  async #teardown() {\n    const teardownLock = FsLock.for({\n      file: this.libraryDbFile.sibling(\"db-teardown\"),\n      timeoutMs: endTimeoutMs,\n      endableRank: EndableRanks.postdb,\n      noopIfContested: false // we want to wait for acquisition\n    })\n\n    await teardownLock.withLock_(async () => {\n      // Last one out needs to turn off the lights:\n      if (!(await this.dbFslock.iAmOnly_({ vacuum: true }))) {\n        this.logger.info(\n          \"#teardown(): no-op: other processes are still running\"\n        )\n        return\n      }\n      this.logger.info(\n        \"#teardown(): I'm the last one in. Running backup and cleanup.\"\n      )\n\n      await this.backup_()\n\n      // Only run replica cleanup if backup_() is successful!\n      if (this.useReplica) {\n        const dbInfoJson = libraryDbInfoFromDbFile(this.libraryDbFile)\n        const victims = [dbInfoJson, ...sqliteFiles(this.db.dbFile)]\n        this.logger.info(\"#teardown(): Removing replica artifacts\", { victims })\n        for (const ea of victims) {\n          await ea.unlink()\n        }\n      }\n    })\n\n    this.db.closeDb()\n  }\n\n  /**\n   * Are we under a deadline here?\n   */\n  #needToHurry() {\n    return this.ended || ending() || isSuspended() || isUpdateReadyToInstall()\n  }\n\n  forceBackup_(): Promise<\n    typeof NoOp | typeof NoWriteLock | typeof Contested | PosixFile\n  > {\n    return this.backup_(true)\n  }\n\n  async backup_(\n    force: boolean = false\n  ): Promise<typeof NoOp | typeof NoWriteLock | typeof Contested | PosixFile> {\n    return (\n      (await withLock_(\n        {\n          file: this.libraryDbFile.sibling(\"backup\"),\n          timeoutMs: 5 * minuteMs,\n          noopIfContested: !force\n        },\n        async () => {\n          // don't skip backup if maxUpdatedAt hasn't changed since last backup:\n          if (force) this.#lastUpdatedAt = 0\n          if (hasDbSetupErrors()) {\n            this.logger.warn(\n              \"backup_(): db has setup errors, skipping backup\",\n              {\n                errors: dbSetupErrors()\n              }\n            )\n            return NoOp\n          }\n          if (!(await this.dbFslock.tryAcquire_())) {\n            this.logger.info(\"backup_(): no-op: someone else has the fslock\", {\n              me: this.dbFslock.lockfile?.base,\n              owner: (await this.dbFslock.selfAndSiblingNames_())[0]\n            })\n            return NoWriteLock\n          }\n\n          if (!this.#needToHurry()) {\n            await runMaintenanceTasks()\n          }\n          const newMaxUpdatedAt = this.db.maxUpdatedAt()\n          if (\n            newMaxUpdatedAt != null &&\n            newMaxUpdatedAt > this.#lastUpdatedAt\n          ) {\n            if (!this.#needToHurry()) {\n              await this.db.vacuum()\n            } else {\n              this.logger.info(\"backup_(): posthaste: skipping vacuum\")\n            }\n            this.#lastUpdatedAt = newMaxUpdatedAt\n            const destDir = this.backupsDir.join(filestamp())\n            const destDbFile = await this.db.backup_(destDir, !this.useReplica)\n            if (this.useReplica) {\n              await dbBackupCold_(destDbFile, this.libraryDbFile.parent())\n            }\n            this.logger.info(\"backup_(): backup successful\", { destDbFile })\n            return destDbFile\n          } else {\n            this.logger.info(\n              \"backup_(): no update to the db since last backup\",\n              {\n                ago: fmtDuration(Date.now() - this.#lastUpdatedAt)\n              }\n            )\n            return NoOp\n          }\n        }\n      )) ?? Contested\n    )\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { getLiveDbDir_ } from \"../../core/db/CheckLocalDbReplica\"\nimport { dbBackupCold_ } from \"../../core/db/DbBackupCold\"\nimport { assertDirSQLiteReadWrite_ } from \"../../core/db/SQLiteReadWrite\"\nimport { Schemas, pathToDb } from \"../../core/db/Schemas\"\nimport { libraryDataDirPosixFile } from \"../../core/dir/LibraryDirs\"\nimport { errorToS } from \"../../core/error/Error\"\nimport {\n  DbSetupErrorFlag,\n  InternalErrorFlag,\n  NoLibraryErrorFlag\n} from \"../../core/error/ErrorFlags\"\nimport { FsLock, withLock_ } from \"../../core/fs/FsLock\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { SimpleFileOrString, toNativePath_ } from \"../../core/fs/SimpleFile\"\nimport { HealthCheck } from \"../../core/health/HealthCheck\"\nimport { LogLevels } from \"../../core/log/LogLevel\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { _libraryHasSettings } from \"../../core/settings/SettingsIO\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { blank, mapNotBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { modelDb } from \"../model/ModelDb\"\nimport { Db } from \"./Db\"\nimport { addDbSetupError, clearDbSetupErrors } from \"./DbSetupErrors\"\n\nconst logger = lazy(() => mkLogger(\"db.DbModelSetup\"))\n\nexport function libraryDbObjects_(\n  libraryDir = Settings.libraryDir.valueOrDefault\n) {\n  if (blank(libraryDir)) {\n    throw new Error(\"Library directory is not set\" + NoLibraryErrorFlag)\n  }\n  const dataDir = libraryDataDirPosixFile(libraryDir)\n  if (dataDir == null) {\n    throw new Error(\"missing library dataDir\" + NoLibraryErrorFlag)\n  }\n\n  if (!_libraryHasSettings(libraryDir)) {\n    throw new Error(\n      `Library at ${libraryDir} does not have a settings file` +\n        NoLibraryErrorFlag\n    )\n  }\n  return { dataDir, libraryDbFile: pathToDb(dataDir, \"models\") }\n}\n\nexport function fsLockForDb(dbFile: PosixFile) {\n  // using .for() here to ensure the _same instance_ gets returned for the\n  // same path:\n  return FsLock.for({\n    file: dbFile,\n    timeoutMs: 0,\n    noopIfContested: false\n  })\n}\n\nasync function libraryDbLockObjects_(\n  libraryDir = Settings.libraryDir.valueOrDefault\n) {\n  const result = libraryDbObjects_(libraryDir)\n  return {\n    ...result,\n    fslock: fsLockForDb(result.libraryDbFile)\n  }\n}\n\nexport function libraryDbInfoJsonFile(\n  libraryDir = Settings.libraryDir.valueOrDefault\n): PosixFile {\n  const dataDir = libraryDataDirPosixFile(libraryDir)\n  if (dataDir == null) {\n    throw new Error(\"missing library dir\" + NoLibraryErrorFlag)\n  } else {\n    return libraryDbInfoFromDbFile(pathToDb(dataDir, \"models\"))\n  }\n}\n\nexport function libraryDbInfoFromDbFile(dbFile: PosixFile) {\n  return dbFile.sibling(\"db-info.json\")\n}\n\nexport async function assertValidDbInfo_(\n  infoJsonFile = libraryDbInfoJsonFile(),\n  expectedLiveDbFile?: PosixFile\n): Promise<{ liveDbFile: PosixFile }> {\n  try {\n    const priorInfo = await infoJsonFile.readJson<DbSetupInfo>(LogLevels.info)\n    if (priorInfo == null) {\n      throw new Error(infoJsonFile + \" is missing\" + DbSetupErrorFlag)\n    }\n    if (\n      expectedLiveDbFile != null &&\n      !(await expectedLiveDbFile.equalsUri_(priorInfo.uri))\n    ) {\n      throw new Error(\n        infoJsonFile +\n          \" expects the live db to be \" +\n          priorInfo.uri +\n          \" but the live db is \" +\n          (await expectedLiveDbFile.uri_()) +\n          DbSetupErrorFlag\n      )\n    }\n\n    const liveDbFile = await PosixFile.forUri(priorInfo.uri)\n    if (liveDbFile == null) {\n      throw new Error(\n        infoJsonFile +\n          \" expects the live db to be \" +\n          priorInfo.uri +\n          \" but that URI cannot be resolved.\" +\n          DbSetupErrorFlag\n      )\n    }\n    try {\n      await assertDirSQLiteReadWrite_(liveDbFile.parent())\n    } catch (error) {\n      logger().error(\n        \"assertValidDbInfo_(): failed to assert live dir was r/w\",\n        { error, liveDbFile, infoJsonFile }\n      )\n      throw new Error(\n        \"Failed to validate that the live database directory, \" +\n          liveDbFile.dir +\n          \", was read-writable by SQLite: \" +\n          errorToS(error) +\n          DbSetupErrorFlag\n      )\n    }\n\n    // Don't clear db errors here: we do that in dbModelSetup_() after\n    // migration is successful:\n    return {\n      liveDbFile\n    }\n  } catch (error) {\n    addDbSetupError(error)\n    throw error\n  }\n}\n\nexport interface DbSetupInfo {\n  uri: string\n  useReplica: boolean\n}\n\n/**\n * Handles opening the SQLite model database.\n *\n * @throws if the library directory is missing, or if the library does not\n * have a settings file, or there is a problem opening the database.\n */\nexport async function dbModelSetup_(\n  libraryDir: Maybe<SimpleFileOrString> = Settings.libraryDir.valueOrDefault\n): Promise<{\n  db: Db\n  useReplica: boolean\n  libraryDbFile: PosixFile\n  fslock: FsLock\n}> {\n  const { libraryDbFile, fslock } = await libraryDbLockObjects_(\n    mapNotBlank(libraryDir, toNativePath_)\n  )\n\n  // This isn't a lock as much as a way to coordinate who currently has the\n  // library database open:\n  await fslock.tryAcquire_()\n\n  let useReplica: boolean | undefined\n  let db: Db | undefined\n\n  const infoJsonFile = libraryDbInfoFromDbFile(libraryDbFile)\n\n  try {\n    await withLock_(\n      { file: infoJsonFile, timeoutMs: 5 * minuteMs },\n      async () => {\n        const priorInfo = await infoJsonFile.readJson<DbSetupInfo>(\n          LogLevels.info\n        )\n\n        useReplica = priorInfo?.useReplica\n\n        // We want to prevent \"split brain\" issues where multiple processes\n        // read/write from different sqlite files.\n\n        if (priorInfo != null) {\n          const { liveDbFile } = await assertValidDbInfo_(\n            infoJsonFile,\n            libraryDbFile\n          )\n\n          db = new Db(Schemas.models, liveDbFile)\n        }\n\n        if (useReplica == null || db == null) {\n          const liveDbInfo = await getLiveDbDir_(libraryDir)\n          const uri = await liveDbInfo.db.uri_()\n          useReplica = liveDbInfo.useReplica\n          if (useReplica) {\n            await HealthCheck.traceLater_(\n              \"Setting up local replica database\",\n              dbBackupCold_(libraryDbFile, liveDbInfo.db.parent())\n            ).catch(error =>\n              logger().throw(\"Failed to set up replica db\" + DbSetupErrorFlag, {\n                src: libraryDbFile,\n                dest: liveDbInfo.db,\n                error\n              })\n            )\n          }\n          db = new Db(Schemas.models, liveDbInfo.db)\n          await infoJsonFile.writeJson_({ uri, useReplica })\n        }\n      }\n    )\n\n    if (db == null || useReplica == null) {\n      return logger().throw(\n        \"Failed to open model db\" + DbSetupErrorFlag + InternalErrorFlag,\n        {\n          libraryDir\n        }\n      )\n    }\n\n    if (await fslock.tryAcquire_()) {\n      // migrate_() runs a repair if any checks fail.\n      const result = await db.migrate_()\n      if (\n        useReplica &&\n        (result.repaired || isNotEmpty(result.appliedMigrations))\n      ) {\n        // Only copy back if we repaired or applied migrations:\n        await db.backup_(libraryDbFile.parent(), !useReplica)\n      }\n      // YAY EVERYTHING IS GREAT\n      clearDbSetupErrors()\n    }\n    // ALL IS WELL let's go!\n    modelDb.set(db)\n  } catch (error) {\n    logger().error(\"Failed to set up model db\", { error })\n    addDbSetupError(error)\n    fslock.release()\n    throw error\n  }\n\n  return logger().tap({\n    msg: \"dbModelSetup()\",\n    result: {\n      db,\n      useReplica,\n      libraryDbFile,\n      fslock\n    }\n  })\n}\n","import { RunResult, Statement } from \"better-sqlite3\"\nimport { Knex } from \"knex\"\nimport { FifoCache } from \"../../core/FifoCache\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { isTest } from \"../../core/NodeEnv\"\nimport { ending } from \"../../core/async/Endable\"\nimport { mkElapsed } from \"../../core/async/PromiseTimer\"\nimport { defaultLogLevel } from \"../../core/log/LogFilter\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ellipsize, replaceAll } from \"../../fe/String\"\nimport { TableName } from \"../model/TableName\"\nimport { Db } from \"./Db\"\nimport { DbValue, DbValued } from \"./DbValued\"\nimport { knex } from \"./Knex\"\nimport { Queryish, SqlQuery, sqlQueryToS, toSqlQuery } from \"./SqlQuery\"\n\n// SQLite max params is 100 and max variables is 1000.\n\n// This limit is just to prevent memory bloat. It can be larger than SQLite\n// batch size. It's small in test to prove we do windowing correctly:\nexport const MaxBatchSize = isTest ? 25 : 1000\n\nconst logger = lazy(() => mkLogger(\"db.DbRequest\"))\n\nexport class DbRequest {\n  private readonly cachedStatements = new FifoCache<Statement>(256)\n  constructor(\n    readonly db: () => Db,\n    private readonly tableName?: TableName\n  ) {}\n\n  qb() {\n    return knex()(this.tableName)\n  }\n\n  private prep(q: Queryish, pluck = false): { sq: SqlQuery; stmt: Statement } {\n    const sq = toSqlQuery(q)\n    try {\n      const stmt = this.cachedStatements.getOrSet(\n        this.db().db.__uid + \":\" + (pluck === true ? \"pluck:\" : \"\") + sq.sql,\n        () => {\n          const result = this.db().prepare(sq.sql)\n          return pluck === true ? result.pluck() : result\n        }\n      )\n      if (!stmt.database.open) {\n        this.cachedStatements.clear()\n        return this.prep(q, pluck)\n      } else {\n        return {\n          sq,\n          stmt\n        }\n      }\n    } catch (error) {\n      return logger().throw(\"prep() failed\", {\n        error,\n        sqlQuery: sq,\n        retriable: false\n      })\n    }\n  }\n\n  // private caller() {\n  //   return stack().filter(\n  //     ea =>\n  //       ea.match(\n  //         /DbRequest|transactions|dbRetries|asyncRetry|ModelOps|Promise/i\n  //       ) == null\n  //   )\n  // }\n\n  private wrap({\n    q,\n    pluck,\n    m\n  }: {\n    q: Queryish\n    pluck?: boolean\n    m: \"run\" | \"get\" | \"all\"\n  }) {\n    try {\n      // HEY FUTURE ME: don't put the catch /in/ the tx: that can prevent errors\n      // from being retried correctly.\n      const { sq, stmt } = this.prep(q, pluck)\n      if (Settings.logSql.valueOrDefault)\n        logger().log(\n          defaultLogLevel(),\n          m + \"(): \" + sqlQueryToS(sq)\n          // this.caller()\n        )\n      const meth = stmt[m].bind(stmt) as any\n      // PERF: INLINED FROM mapOr\n      return sq.bindings == null ? meth() : meth(sq.bindings)\n    } catch (err: any) {\n      if (true === err.message?.includes(\"AdvisoryLock\")) {\n        // expect errors from AdvisoryLock!\n        throw err\n      } else {\n        logger().throw(err, { method: m, ...toSqlQuery(q) })\n      }\n    }\n  }\n\n  run(q: Queryish): RunResult {\n    return this.wrap({ q, m: \"run\" })\n  }\n\n  runScript(lines: string[], ignorable: string = \"\") {\n    const e = mkElapsed(\"db.runScript()\")\n    // Don't block anything with a big transaction boundary:\n    for (const sql of lines) {\n      if (blank(sql) || sql.trim().startsWith(\"--\")) continue\n      this.run({ sql })\n      // Only fetch the first part of the query (so temp tables don't pollute\n      // the times):\n      const msg = replaceAll(ellipsize(sql, 60), ignorable, \"\")\n      e.elapsed(msg)\n    }\n  }\n\n  mapRun(queries: Queryish[]): RunResult[] {\n    return queries.map(q => {\n      const { sq, stmt } = this.prep(q)\n      return sq.bindings == null ? stmt.run() : stmt.run(sq.bindings)\n    })\n  }\n\n  runf(f: (q: Knex.QueryBuilder) => Knex.QueryBuilder): RunResult {\n    return this.wrap({ q: f(this.qb()), m: \"run\" })\n  }\n\n  upsert(f: (q: Knex.QueryBuilder) => Knex.QueryBuilder): RunResult {\n    const q = toSqlQuery(f(this.qb()))\n    // https://sqlite.org/lang_insert.html\n    // https://sqlite.org/lang_update.html\n    q.sql = q.sql.replace(\n      /^(update|insert)\\b/i,\n      ea => ea.toUpperCase() + \" OR REPLACE \"\n    )\n    return this.wrap({ q, m: \"run\" })\n  }\n\n  first(q: Queryish): DbValued {\n    return this.wrap({ q, m: \"get\" })\n  }\n\n  firstf(f: (q: Knex.QueryBuilder) => Knex.QueryBuilder): Promise<DbValued> {\n    return this.wrap({ q: f(this.qb()), m: \"get\" })\n  }\n\n  mapAll(queries: Queryish[]): DbValued[] {\n    return flatten(\n      queries.map(q => {\n        const { sq, stmt } = this.prep(q)\n        return stmt.all(sq.bindings) as DbValued[]\n      })\n    )\n  }\n\n  all(q: Queryish): DbValued[] {\n    return this.wrap({ q, m: \"all\" })\n  }\n\n  allf(f: (q: Knex.QueryBuilder) => Knex.QueryBuilder): DbValued[] {\n    return this.wrap({ q: f(this.qb()), m: \"all\" })\n  }\n\n  batched<T>(opts: {\n    onResults: (ids: T[]) => any\n    qb: (q: Knex.QueryBuilder, prior: Maybe<T[]>) => Knex.QueryBuilder\n  }) {\n    let prior: Maybe<T[]>\n    do {\n      prior = this.wrap({\n        q: opts.qb(this.qb(), prior).limit(MaxBatchSize),\n        m: \"all\"\n      })\n      if (isNotEmpty(prior)) {\n        opts.onResults(prior)\n      }\n    } while (isNotEmpty(prior) && !ending())\n  }\n\n  pluckFirst<T = DbValue>(q: Queryish): T {\n    return this.wrap({ q, pluck: true, m: \"get\" })\n  }\n\n  pluckFirstf<T extends DbValue = DbValue>(\n    f: (q: Knex.QueryBuilder) => Knex.QueryBuilder\n  ): T {\n    return this.wrap({ q: f(this.qb()), pluck: true, m: \"get\" })\n  }\n\n  pluckAll<T = DbValue>(q: Queryish): T[] {\n    return this.wrap({ q, pluck: true, m: \"all\" })\n  }\n\n  pluckAllf<T = DbValue>(f: (q: Knex.QueryBuilder) => Knex.QueryBuilder): T[] {\n    return this.wrap({ q: f(this.qb()), pluck: true, m: \"all\" })\n  }\n\n  pluckBatched<T extends number | string>(opts: {\n    onResults: (ids: T[]) => any\n    qb: (q: Knex.QueryBuilder, prior: Maybe<T[]>) => Knex.QueryBuilder\n  }) {\n    let prior: Maybe<T[]>\n    do {\n      prior = this.wrap({\n        q: opts.qb(this.qb(), prior).limit(MaxBatchSize),\n        pluck: true,\n        m: \"all\"\n      })\n      if (isNotEmpty(prior)) {\n        opts.onResults(prior)\n      }\n    } while (isNotEmpty(prior))\n  }\n}\n","import bs = require(\"better-sqlite3\")\nimport _path from \"path\"\nimport { diffEql } from \"../../core/Array\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { Schema } from \"../../core/db/Schemas\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { ProjectPath } from \"../../core/fs/ProjectPath\"\nimport { diff, isNotEmpty } from \"../../fe/Array\"\nimport { andList } from \"../../fe/FmtList\"\nimport { plur } from \"../../fe/Units\"\nimport { dbModelHealthCheck } from \"../health/DbModelHealthCheck\"\nimport { Db } from \"./Db\"\nimport { TableInfo, localTableInfo } from \"./TableInfo\"\n\nconst logger = lazy(() => mkLogger(\"db.DbSchemaValid\"))\n\nexport function schemaJsonFile(schema: Schema) {\n  // NOT SORTED!\n  return PosixFile.for(_path.join(ProjectPath.Data(), schema + \"-schema.json\"))\n}\n\ninterface JsonContents {\n  info: string\n  tableInfo: TableInfo[]\n}\n\nexport async function assertValidDbSchema_(db: Db) {\n  try {\n    await db.migrate_()\n    const actualTableInfo = localTableInfo(db.db)\n    const actualTableNames = actualTableInfo.map(t => t.tableName)\n    const expectedTableInfo = (\n      await schemaJsonFile(db.schema).readJson_<JsonContents>()\n    ).tableInfo\n    {\n      const expectedTableNames = expectedTableInfo.map(t => t.tableName)\n      const missing = diff(expectedTableNames, actualTableNames)\n      if (isNotEmpty(missing)) {\n        logger().throw(\n          \"Db is missing \" +\n            plur(missing.length, \"table\") +\n            \" : \" +\n            andList(missing)\n        )\n      }\n    }\n    for (const table of actualTableInfo) {\n      const exp = expectedTableInfo.find(t => t.tableName === table.tableName)\n      if (exp == null) {\n        logger().warn(\"Unexpected table in db\", table)\n      } else {\n        const missing = diffEql(exp.columns, table.columns)\n        if (isNotEmpty(missing)) {\n          logger().error(\"Missing columns\", { expected: exp, actual: table })\n          logger().throw(\n            \"Db is missing \" +\n              plur(missing.length, \"column\") +\n              \" from table \" +\n              table.tableName +\n              \" : \" +\n              andList(missing.map(ea => ea.name))\n          )\n        }\n      }\n    }\n    logger().info(\"Validated schema.\")\n  } catch (err: any) {\n    // We can't recover from this!\n    dbModelHealthCheck().reset()\n    throw err\n  }\n}\n\nexport function writeSchemaJsonFile_(schema: Schema, db: bs.Database) {\n  return schemaJsonFile(schema).writeJson_(\n    {\n      info: \"This is used in validating PhotoStructure library databases after repair and restore operations.\",\n      tableInfo: localTableInfo(db)\n    } satisfies JsonContents,\n    { spaces: 2 }\n  )\n}\n","import { errorToS } from \"../../core/error/Error\"\nimport { blank } from \"../../fe/Blank\"\nimport { isError } from \"../../fe/isError\"\n\nexport const _dbSetupErrors = new Set<string>()\nconst listeners: (() => void)[] = []\n\nexport function dbSetupErrors() {\n  return [..._dbSetupErrors.values()]\n}\n/**\n * Allow out-of-caller-stack errors to be added to the modelDbHealthCheck\n */\n\nexport function addDbSetupError(error: Error | any) {\n  if (isError(error) || !blank(error)) {\n    _dbSetupErrors.add(errorToS(error))\n    for (const ea of listeners) ea()\n  }\n}\n\nexport function clearDbSetupErrors({\n  notifyListeners = true\n}: { notifyListeners?: boolean } = {}) {\n  _dbSetupErrors.clear()\n  if (notifyListeners) for (const ea of listeners) ea()\n}\n\nexport function hasDbSetupErrors() {\n  return _dbSetupErrors.size > 0\n}\n\nexport function addDbSetupErrorListener(listener: () => void) {\n  listeners.push(listener)\n}\n","import { isDated } from \"../../core/date/Dated\"\nimport { datedToMillis } from \"../../core/date/DatedToMillis\"\nimport { includes } from \"../../fe/Array\"\nimport { entries, mapFields } from \"../../fe/Object\"\n\n// SQLite can only store numbers or strings, but let's also take booleans to\n// simplify constructors\nexport type DbValue = number | string | boolean | Date\n\nexport interface DbValued {\n  [key: string]: DbValue | undefined | null\n}\n\nexport function isDbValue(obj: any): obj is DbValue {\n  return obj === null || includes([\"number\", \"string\"], typeof obj)\n}\n\nexport function isDbValued(obj: any): obj is DbValued {\n  return obj != null && Array.isArray(obj)\n    ? obj.every(isDbValued)\n    : entries(obj).every(([, value]) => isDbValue(value))\n}\n\nexport function toDbValued(obj: any): DbValued {\n  return mapFields(obj, (key, value) => {\n    if (key.startsWith(\"$\")) return\n    if (typeof value === \"boolean\") return [key, value ? 1 : 0]\n    if (isDbValue(value)) return [key, value]\n    if (isDated(value)) return [key, datedToMillis(value)]\n    return\n  }) as DbValued\n}\n","import { Database } from \"better-sqlite3\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { countChars, stripSuffix } from \"../../core/String\"\nimport {\n  TagSep,\n  joinTagPath,\n  splitTagPath,\n  tagPathLeaf\n} from \"../../core/tags/TagPaths\"\nimport { compactBlanks, isEmpty } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { gt0 } from \"../../fe/Number\"\nimport { toS } from \"../../fe/toS\"\n\nconst logger = lazy(() => mkLogger(\"db.DedupeTags\"))\n\nexport function mergeTags_(db: Database, tagIds: number[]) {\n  if (isEmpty(tagIds)) {\n    logger().warn(\"mergeTags(): empty tagIds\", { tagIds })\n  }\n\n  logger().info(\"mergeTags() starting\", { tagIds })\n\n  function run(sql: string) {\n    return db.prepare(sql).run()\n  }\n\n  const arr = db\n    .prepare(\n      \"SELECT id, _path, parentId FROM Tag WHERE id IN (\" +\n        tagIds.join(\",\") +\n        \") ORDER BY ID\"\n    )\n    .all() as { id: number; _path: string; parentId: number | null }[]\n\n  // With the v0.8 test db, we have a {id: 1, parentId: null, path: \"kw\"} and {id: 400,\n  // parentId: 1, path: \"kw/\"}. If id:400 wins, it must assume a null parentId.\n  // BAD THINGS happen if we pick a winner whose parent id is one of the\n  // losers (the id === parentId!), so we need to avoid that case. We avoid\n  // this by assuming null for the parentId if any of the tags have a null parentId.\n  // Capitalized base should win. sort is asciibetical, so capitals come first.\n  const leafs = compactBlanks(arr.map(ea => tagPathLeaf(ea._path)).sort())\n\n  // It doesn't matter which tag wins, because we're about to fix the\n  // parentId and path. Let's arbitrarily pick the lowest id.\n  const winner = arr[0]\n  const losers = arr.slice(1)\n  const winnerId = winner?.id\n  if (isEmpty(leafs) || isEmpty(losers) || winner == null || !gt0(winnerId)) {\n    logger().warn(\"mergeTags(): missing winner\", {\n      winner,\n      winnerId,\n      leafs,\n      losers\n    })\n    return\n  }\n\n  const parentTagPath = splitTagPath(winner._path).slice(0, -1)\n  const winnerTagPath = [...parentTagPath, leafs[0]]\n  winner._path = joinTagPath(winnerTagPath)\n  winner.parentId =\n    parentTagPath.length === 0\n      ? null\n      : (db\n          .prepare(\"SELECT id from Tag where _path LIKE ?\")\n          .pluck()\n          .get(joinTagPath(parentTagPath)) as number) ?? winner.parentId\n\n  logger().info(\"mergeTags()\", { winner, losers, winnerTagPath, leafs })\n\n  const loserIds = losers.map(ea => ea.id).join(\",\")\n  run(\n    `UPDATE OR IGNORE AssetTag SET tagId = ${winnerId} WHERE tagId in (${loserIds})`\n  )\n  run(\n    `UPDATE OR IGNORE Tag SET parentId = ${winnerId} WHERE parentId in (${loserIds})`\n  )\n  run(\n    `UPDATE OR IGNORE Tag SET parentId = ${winnerId} WHERE parentId in (${loserIds})`\n  )\n  run(`DELETE FROM AssetTag WHERE tagId in (${loserIds})`)\n  run(`DELETE FROM Tag WHERE id in (${loserIds})`)\n\n  db.prepare(\n    \"UPDATE Tag SET parentId = :parentId, _path = :path WHERE id = :id\"\n  ).run({ parentId: winner.parentId, path: winner._path, id: winnerId })\n\n  const children = db\n    .prepare(\n      \"SELECT id, _path FROM Tag WHERE id != :winnerId AND _path LIKE :like COLLATE NOCASE\"\n    )\n    .all({\n      winnerId,\n      like: winner._path + \"%\"\n    }) as { id: number; _path: string }[]\n\n  for (const ea of children) {\n    const priorChildPath = splitTagPath(ea._path)\n    const fromParentPath = priorChildPath.slice(winnerTagPath.length)\n    const newPath = joinTagPath([...winnerTagPath, ...fromParentPath])\n    if (ea._path !== newPath) {\n      logger().info(\"mergeTags(): repairing tag path\", { ea, newPath })\n      db.prepare(\n        // the OR IGNORE should not be needed:\n        \"UPDATE OR IGNORE Tag SET _path = :path, updatedAt = :updatedAt WHERE id = :id\"\n      ).run({\n        id: ea.id,\n        updatedAt: Date.now(),\n        path: newPath\n      })\n    }\n  }\n\n  return logger().tap({\n    msg: \"mergeTags()\",\n    level: \"info\",\n    result: { winner, losers: arr }\n  })\n}\n\nexport function dedupeTags_(db: Database) {\n  // Unfortunately, there isn't a way to do unicode normalization in SQLite, so we need to do this:\n  const mm = new MultiMap<string, number>()\n  for (const { id, _path } of db\n    .prepare(\"SELECT id, _path FROM Tag ORDER BY id\")\n    .iterate() as IterableIterator<{ id: number; _path: string }>) {\n    mm.add(stripSuffix(toS(_path).trim(), TagSep).toLowerCase().normalize(), id)\n  }\n  const dupes = sortBy(\n    mm.entriesArray().filter(([, ids]) => ids.length > 1),\n    // Do longest paths first, or child repair isn't going to work (unique\n    // constraints will fail!)\n    ([path]) => [-countChars(path, TagSep), -path.length, path]\n  )\n  for (const [, ids] of dupes) {\n    mergeTags_(db, ids)\n  }\n}\n","import _k, { Knex } from \"knex\"\nimport { lazy } from \"../../core/Lazy\"\nimport { thenMap } from \"../../core/async/Promise\"\nimport { map } from \"../../fe/Maybe\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { values } from \"../../fe/Object\"\n\nexport const knex = lazy(() =>\n  _k({ client: \"sqlite3\", useNullAsDefault: true })\n)\n\nexport async function firstMigratedAt(k: Knex): PromiseMaybe<Date> {\n  return thenMap(k(\"migrations\").min(\"migration_time\").first(), d =>\n    map(values(d as any)[0], ea => new Date(ea as any))\n  )\n}\n","import { Database, Statement } from \"better-sqlite3\"\nimport { randomInt } from \"crypto\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Logger, mkLogger } from \"../../core/Logger\"\nimport { isProd } from \"../../core/NodeEnv\"\nimport { gitDate } from \"../../core/Version\"\nimport { thenOrTimeout } from \"../../core/async/ThenOrTimeout\"\nimport { Schema } from \"../../core/db/Schemas\"\nimport { getDevEnvFlag } from \"../../core/env/DevEnvFlags\"\nimport { InternalErrorFlag } from \"../../core/error/ErrorFlags\"\nimport { onError } from \"../../core/error/OnError\"\nimport { WrappedError } from \"../../core/error/WrappedError\"\nimport { ee } from \"../../core/event/EventEmitter\"\nimport { BaseFile } from \"../../core/fs/BaseFile\"\nimport { withLock_ } from \"../../core/fs/FsLock\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { ProjectPath } from \"../../core/fs/ProjectPath\"\nimport { HealthCheck } from \"../../core/health/HealthCheck\"\nimport { compactBlanks, isNotEmpty } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { lt } from \"../../fe/Primitive\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { addDbSetupError } from \"./DbSetupErrors\"\nimport { Migrations, migrationNameToDate } from \"./Migrations\"\nimport { foreignKeyCheck_ } from \"./SQLite\"\n\nconst CreateMigration = `\nCREATE TABLE IF NOT EXISTS migrations (\n  id integer NOT NULL PRIMARY KEY, \n  name varchar(255) NOT NULL, \n  migration_time integer NOT NULL \n)\n`\n\n// MAGICK NAMING CONVENTIONS:\n\n// \"_nofk\" migrations are applied with foreign keys disabled.\n\nfunction isDisabledForeignKeysMigration(migrationFile: BaseFile) {\n  return migrationFile.name.includes(\"_nofk\")\n}\n\nexport class Migration {\n  private readonly logger: Logger\n  readonly migrationsDir: PosixFile\n  constructor(\n    readonly schema: Schema,\n    readonly db: Database,\n    readonly dbFile: PosixFile\n  ) {\n    this.logger = mkLogger(\n      \"db.Migration(\" +\n        stringify({\n          schema,\n          db: dbFile.nativePath\n        }) +\n        \")\"\n    )\n    this.migrationsDir = PosixFile.for(ProjectPath.Migrations()).join(\n      this.schema\n    )\n  }\n\n  async pendingMigrationFiles_(): Promise<BaseFile[]> {\n    const inDb = this.migrationsInDatabase_()\n    const inFs = await this.fsMigrations_()\n    return inFs.filter(ea => !inDb.includes(ea.name))\n  }\n\n  readonly fsMigrations_ = lazy(() =>\n    // .children_ gives us sorted results!\n    this.migrationsDir\n      .children_(ea => ea.isFile && ea.basename.endsWith(\".sql\"))\n      .catch(error =>\n        this.logger.throw(\n          \"Failed to read migration directory, \" +\n            this.migrationsDir +\n            InternalErrorFlag,\n          { error }\n        )\n      )\n  )\n\n  readonly ensureMigrationTable_ = lazy(() => {\n    this.db.exec(CreateMigration)\n  })\n\n  migrationsInDatabase_(): string[] {\n    this.ensureMigrationTable_()\n    return this.db\n      .prepare(\"SELECT name from migrations\")\n      .pluck()\n      .all() as string[]\n  }\n\n  readonly unknownMigrations_ = lazy(() =>\n    this.migrationsInDatabase_().filter(\n      ea => !lt(migrationNameToDate(ea), gitDate)\n    )\n  )\n\n  readonly assertKnownMigrations_ = lazy(() => {\n    // If any migrations are from after this version was built, the library is\n    // from a newer version.\n    const unknownMigrations = this.unknownMigrations_()\n    if (isNotEmpty(unknownMigrations)) {\n      const err = new WrappedError(\n        \"Please upgrade PhotoStructure to a newer version to open this library: Unknown migrations: \" +\n          unknownMigrations.join(\",\")\n      )\n      onError(err)\n      throw err\n    }\n  })\n\n  async apply_(onBeforeMigrate?: (migrationFile: BaseFile) => Promise<any>) {\n    return withLock_(\n      {\n        file: this.dbFile.sibling(\"migrate\"),\n        timeoutMs: 2 * minuteMs\n      },\n      () => this.#apply(onBeforeMigrate)\n    )\n  }\n\n  async #apply(\n    onBeforeMigrate?: (migrationFile: BaseFile) => Promise<any>\n  ): Promise<string[]> {\n    try {\n      this.ensureMigrationTable_()\n\n      if (isProd) this.assertKnownMigrations_()\n\n      const appliedMigrations: string[] = []\n\n      const p = this.db.prepare(\n        \"INSERT INTO migrations (name, migration_time) VALUES (?, ?)\"\n      )\n\n      for (const migrationFile of await this.pendingMigrationFiles_()) {\n        await HealthCheck.traceLater_(\n          \"Upgrading database (\" + migrationFile.name + \")\",\n          async () => {\n            if (getDevEnvFlag(\"PS_SLOMO\")) {\n              // prove that splash is showing migrations:\n              await delay(randomInt(secondMs, 3 * secondMs))\n            }\n            await map(onBeforeMigrate, ea => ea(migrationFile))\n            await thenOrTimeout(\n              this.applyMigration_(migrationFile, p),\n              minuteMs,\n              () => {\n                throw new WrappedError(\n                  \"Migration \" + migrationFile.name + \" timed out.\",\n                  {\n                    fatal: true,\n                    ignorable: false\n                  }\n                )\n              }\n            )\n          }\n        )\n        appliedMigrations.push(migrationFile.base)\n      }\n\n      this.logger.info(\"Migration complete\", { appliedMigrations })\n      return appliedMigrations\n    } catch (cause: any) {\n      const err = new WrappedError(\n        \"Migrating the \" + this.schema + \" db failed\",\n        { cause }\n      )\n      addDbSetupError(err)\n      HealthCheck.addError(err)\n      throw err\n    }\n  }\n\n  //\n  // Migrations that name-collide with a function in the Migrations namespace\n  // assume to be a javascript-based migration, rather than a SQL migration.\n  //\n  async applyMigration_(f: BaseFile, addMigrationStmt: Statement) {\n    try {\n      const start = Date.now()\n      const m = (Migrations as any)[f.name.replace(/^[\\d_-]+/, \"\")]\n      const codeMigration = isFunction(m)\n      if (codeMigration) {\n        await m.bind(Migrations)(this.db)\n      } else {\n        await this.#applySqlMigration_(f)\n      }\n      this.logger.debug(\"applyMigration() completed\", {\n        elapsedMs: Date.now() - start,\n        codeMigration,\n        migration: f.baseWithParent\n      })\n      return addMigrationStmt.run(f.name, Date.now())\n    } catch (error) {\n      return this.logger.throw(\n        \"Failed to apply migration \" + f.baseWithParent,\n        { error }\n      )\n    } finally {\n      ee().emit(\"clearDbCache\")\n    }\n  }\n\n  async #applySqlMigration_(f: BaseFile) {\n    const disableForeignKeys = isDisabledForeignKeysMigration(f)\n    try {\n      const sql = await f.readTextFile()\n      if (blank(sql)) {\n        this.logger.error(\"Empty migration: \" + f)\n        return\n      }\n      if (disableForeignKeys) {\n        // See https://sqlite.org/lang_altertable.html\n        this.db.pragma(\"foreign_keys = OFF\")\n      }\n\n      // We don't run these inside a transaction, because SQLite doesn't respect\n      // boundaries:\n\n      // split DDL into statements to highlight what part was bad:\n      for (const ea of compactBlanks(sql.split(\";\"))) {\n        try {\n          this.db.exec(ea)\n        } catch (cause) {\n          throw new WrappedError(`Failed to apply: ${ea}`, {\n            cause,\n            fatal: true\n          })\n        }\n      }\n      if (disableForeignKeys) {\n        foreignKeyCheck_(this.db)\n      }\n    } finally {\n      if (disableForeignKeys) {\n        this.db.pragma(\"foreign_keys = ON\")\n      }\n    }\n  }\n}\n","import { Database } from \"better-sqlite3\"\nimport { batches, greatestBy } from \"../../core/Array\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { mapGt0 } from \"../../core/Number\"\nimport { escapeRegExp } from \"../../core/RegExp\"\nimport { countChars, isString } from \"../../core/String\"\nimport { toLabhash, unlabhash } from \"../../core/color/Colorspace\"\nimport { ModeBits } from \"../../core/color/ModeBits\"\nimport { ModeCount } from \"../../core/color/ModeCount\"\nimport { Triplet } from \"../../core/color/Triplet\"\nimport { datedToPrecisionMs, isoToDated } from \"../../core/date/Dated\"\nimport { isoToLocal } from \"../../core/date/Localtime\"\nimport { isoToOffsetMinutes } from \"../../core/date/Timezone\"\nimport { validYMD } from \"../../core/date/ValidDate\"\nimport { splitBits } from \"../../core/math/Bits\"\nimport { TagSep, normalizeTagPath } from \"../../core/tags/TagPaths\"\nimport { normalizeURI } from \"../../core/uri/UriNormalization\"\nimport { compact } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { times, toInt } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { PS_NETWORK_FILESYSTEM_SCHEME } from \"../../fe/URI\"\nimport { toS } from \"../../fe/toS\"\nimport { dedupeTags_, mergeTags_ } from \"./DedupeTags\"\n\nconst logger = lazy(() => mkLogger(\"db.Migrations\"))\n\nconst psnetRe = new RegExp(\n  `^(${escapeRegExp(PS_NETWORK_FILESYSTEM_SCHEME)}://.*?/)(.*)$`\n)\n\n// exported for tests\nexport const lowercase_psnet_function = (s: any) =>\n  opt(s)\n    .filter(isString)\n    .flatMap(ea => psnetRe.exec(ea))\n    .map(m => m[1].toLowerCase() + m[2])\n    .getOrElse(() => s)\n\nfunction splitLabs(labModes: number, bits = ModeBits): Triplet[] {\n  return splitBits(labModes, bits).map(ea => unlabhash(ea, bits)) as Triplet[]\n}\n\nexport function plucklabmodeb6(labModes: number, index: number): Maybe<number> {\n  return mapGt0(labModes, () =>\n    map(splitLabs(labModes, 6)[index], ea => toLabhash(ea, ModeBits))\n  )\n}\n\nexport function migrationNameToDate(name: string): Maybe<Date> {\n  const [y, m, d] = [name.slice(0, 4), name.slice(4, 6), name.slice(6, 8)].map(\n    s => toInt(s)!\n  )\n  return validYMD(y, m, d) ? new Date(y, m - 1, d) : undefined\n}\n\nexport function tag_path_suffix(path: string): string {\n  return path.endsWith(TagSep) ? path : path + TagSep\n}\n\nexport function fix_root_tags(db: Database) {\n  for (const broken of db\n    .prepare(\"SELECT id, parentId, _path FROM Tag WHERE id = parentId\")\n    .iterate() as IterableIterator<{\n    id: number\n    parentId: number\n    _path: string\n  }>) {\n    logger().warn(\"fix_root_tags(): broken tag\", { broken })\n    if (countChars(broken._path, TagSep) < 2) {\n      db.prepare(\"UPDATE Tag set parentId = null where id = ?\").run(broken.id)\n    }\n  }\n}\n\nexport function isoToPrecisionMs(iso: string): number {\n  return map(isoToDated(iso), datedToPrecisionMs) ?? -1 // 0 is valid\n}\n\n/**\n * The functions exported in this namespace may be used by migrations that share\n * the same name as the function. \"Applying\" that migration will run that\n * function.\n */\nexport const Migrations = {\n  lowercase_psnet_hostname: (db: Database) => {\n    db.function(\n      \"lowercase_psnet_hostname\",\n      { deterministic: true },\n      lowercase_psnet_function\n    )\n    db.exec(\"DROP INDEX IF EXISTS assetfile_uri_udx\")\n    db.exec(\"UPDATE AssetFile SET uri = lowercase_psnet_hostname(uri)\")\n    db.exec(\"CREATE UNIQUE INDEX assetfile_uri_udx ON AssetFile(uri)\")\n  },\n\n  numeric_captured_at: (db: Database) => {\n    db.function(\"isoToLocal\", { deterministic: true }, isoToLocal as any)\n    db.function(\n      \"isoToOffsetMinutes\",\n      { deterministic: true },\n      isoToOffsetMinutes as any\n    )\n    db.function(\n      \"isoToPrecisionMs\",\n      { deterministic: true },\n      isoToPrecisionMs as any\n    )\n    db.exec(\"ALTER TABLE AssetFile ADD COLUMN capturedAtLocal bigint\")\n    db.exec(\"ALTER TABLE AssetFile ADD COLUMN capturedAtOffset integer\")\n    db.exec(\"ALTER TABLE AssetFile ADD COLUMN capturedAtPrecisionMs integer\")\n    db.exec(\"UPDATE AssetFile SET capturedAtLocal = isoToLocal(capturedAtISO)\")\n    db.exec(\n      \"UPDATE AssetFile SET capturedAtOffset = isoToOffsetMinutes(capturedAtISO)\"\n    )\n    db.exec(\n      \"UPDATE AssetFile SET capturedAtPrecisionMs = isoToPrecisionMs(capturedAtISO)\"\n    )\n    db.exec(\"DROP INDEX asset_captured_at_geohash_idx\")\n    db.exec(\"DROP INDEX assetfile_exifuid_idx\")\n    db.exec(\n      \"CREATE INDEX assetfile_capturedAtLocal_idx ON AssetFile(capturedAtLocal)\"\n    )\n  },\n\n  spread_modes: (db: Database) => {\n    db.function(\n      \"plucklabmodeb6\",\n      { deterministic: true },\n      plucklabmodeb6 as any\n    )\n\n    times(ModeCount, i =>\n      db.exec(\"ALTER TABLE AssetFile ADD COLUMN \" + `mode${i} integer`)\n    )\n    db.exec(\n      \"UPDATE AssetFile SET \" +\n        times(ModeCount, i => `mode${i} = plucklabmodeb6(mode8b6, ${i})`).join(\n          \", \"\n        )\n    )\n  },\n\n  normalize_asset_file_uris: (db: Database) => {\n    db.function(\"normalizeURI\", { deterministic: true }, normalizeURI as any)\n    const rows = db\n      .prepare(\n        \"SELECT normalizeURI(uri) AS nuri, count(*) AS cnt, GROUP_CONCAT(id) AS ids FROM AssetFile GROUP BY nuri HAVING cnt > 1\"\n      )\n      .all() as { nuri: string; cnt: number; ids: string }[]\n    const loserIds = []\n    for (const row of rows) {\n      const ids = toS(row.ids).split(\",\")\n      const afs = db\n        .prepare(\n          \"SELECT id, shown, version, updatedAt FROM AssetFile WHERE id in (\" +\n            ids.join(\",\") +\n            \")\"\n        )\n        .all() as {\n        id: number\n        shown: number\n        version: number\n        updatedAt: number\n      }[]\n      const winner = greatestBy(afs, ea => [ea.shown, ea.version, ea.updatedAt])\n      const losers = afs.filter(ea => ea.id !== winner?.id)\n      loserIds.push(...losers.map(ea => ea.id))\n    }\n    for (const ids of batches(loserIds, 256)) {\n      db.exec(\"DELETE FROM AssetFile WHERE id in (\" + ids.join(\",\") + \")\")\n    }\n    db.exec(\"UPDATE AssetFile SET uri = normalizeURI(uri)\")\n  },\n\n  dedupe_tag_paths: dedupeTags_,\n\n  suffix_tag_paths: (db: Database) => {\n    db.function(\n      \"tag_path_suffix\",\n      { deterministic: true },\n      tag_path_suffix as any\n    )\n    dedupeTags_(db)\n    db.exec(\"UPDATE Tag SET _path = tag_path_suffix(_path)\")\n  },\n\n  // fixes tags with empty interstitial paths (like `aaa//bbb/ccc/`)\n  normalize_tag_paths: (db: Database) => {\n    const badTags = db\n      .prepare(\n        \"SELECT id, _path FROM Tag WHERE _path LIKE '%' || char(31) || char(31) || '%'\"\n      )\n      .all() as { id: number; _path: string }[]\n    logger().info(\"normalize_tag_paths():\", { badTags })\n    for (const tag of badTags) {\n      const correctPath = normalizeTagPath(tag._path)\n      mergeTags_(\n        db,\n        compact([\n          tag.id,\n          ...(db\n            // handle case insensitivity with LIKE\n            .prepare(\"SELECT id FROM Tag WHERE _path LIKE ?\")\n            .pluck()\n            .all(correctPath) as number[])\n        ])\n      )\n    }\n  },\n\n  drop_tc_tables: (db: Database) => {\n    const re = /^(ct|taf|tag_counts)_[a-z0-9]{6}$/i\n    const tables = db\n      .prepare(\"SELECT name FROM sqlite_master WHERE type='table'\")\n      .pluck()\n      .all() as string[]\n    const victims = tables.filter(ea => re.exec(ea) != null)\n    logger().info(\"drop_tc_tables()\", { tables, victims })\n    for (const ea of victims) {\n      db.exec(\"DROP TABLE \" + ea)\n    }\n  },\n\n  // https://forum.photostructure.com/t/incorrectly-rotated-heic-images/34/15?u=mrm\n  rebuild_rotated_heic: (db: Database) => {\n    db.exec(\n      \"UPDATE AssetFile SET version = 0 WHERE mimetype = 'image/heif' AND rotation <> 0\"\n    )\n  },\n\n  rebuild_videos: (db: Database) => {\n    db.exec(\"UPDATE AssetFile SET version = 0 WHERE mimetype LIKE 'video/%'\")\n    db.exec(\n      \"UPDATE Asset SET version = 0 WHERE id IN (SELECT DISTINCT assetId from AssetFile where mimetype LIKE 'video/%')\"\n    )\n  }\n}\n","import { thenElapsed } from \"../../core/Elapsed\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { execFile, stdout_ } from \"../../core/child/ChildProcess\"\nimport { filestamp } from \"../../core/date/Filestamp\"\nimport { CheckpointType, CheckpointTypes } from \"../../core/db/CheckpointTypes\"\nimport { RepairMode, RepairModes } from \"../../core/db/RepairModes\"\nimport { sqliteFiles, sqliteSizeBytes } from \"../../core/db/SQLiteFiles\"\nimport { FatalErrorFlag } from \"../../core/error/ErrorFlags\"\nimport { WrappedError } from \"../../core/error/WrappedError\"\nimport { ellipsizePath } from \"../../core/fs/Path\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { SimpleFileOrString } from \"../../core/fs/SimpleFile\"\nimport { sqliteNativePath_ } from \"../../core/fs/Tools\"\nimport { PushProgressObserver } from \"../../core/progress/PushProgressObserver\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { commandTimeoutMs } from \"../../core/volumes/VolumeTtls\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { eql } from \"../../fe/Eql\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Latch } from \"../../fe/Latch\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { thenCollect } from \"../../fe/Promise\"\nimport { isString } from \"../../fe/String\"\nimport { MiB } from \"../../fe/Units\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { modelDb } from \"../model/ModelDb\"\nimport { DbValue } from \"./DbValued\"\nimport { withDb, withDbSync } from \"./WithDb\"\nimport bs = require(\"better-sqlite3\")\n\nconst logger = lazy(() => mkLogger(\"db.SQLite\"))\n\n/**\n * Feed the given commands to the sqlite binary tool\n */\nexport async function sqlite({\n  dbFile,\n  sql,\n  args\n}: {\n  dbFile: PosixFile\n  sql: string\n  args?: string[]\n}): Promise<string> {\n  const path = await sqliteNativePath_()\n  const r = await thenElapsed(\n    // backups can take a while (hopefully never longer than a minute!)\n    stdout_(path, [...toA(args), dbFile.nativePath, sql], {\n      timeoutMs: 1 * minuteMs\n    })\n  )\n  logger().debug(\n    \"sqlite(\" + sql + \") on \" + dbFile + \" in \" + r.elapsedMs + \"ms\",\n    r.result\n  )\n  return r.result\n}\n\nexport function backupDbFile_(srcDbFile: PosixFile, destDb: PosixFile) {\n  return retryOnReject(() => _backupDbFile_(srcDbFile, destDb), {\n    maxRetries: 3,\n    retryDelay: secondMs,\n    timeoutMs: minuteMs,\n    errorIsRetriable: () => true\n  })\n}\n\nasync function _backupDbFile_(srcDbFile: PosixFile, destDb: PosixFile) {\n  try {\n    await destDb.parent().mkdirp_()\n    await destDb.unlink(\"trace\")\n    const bytes = await srcDbFile.size()\n    if (!gt0(bytes)) {\n      logger().warn(\"backupDbFile_(): \" + srcDbFile + \" is empty\")\n      return\n    }\n    await modelDb()?.end()\n    await withDb(\n      srcDbFile,\n      async db => db.exec(\"VACUUM INTO \" + escStr(destDb.nativePath)),\n      2 * minuteMs\n    )\n    logger().info(\"backupDbFile_(): Finished \" + srcDbFile + \" -> \" + destDb)\n  } catch (cause) {\n    throw new WrappedError(`Could not back up db ${srcDbFile} -> ${destDb}`, {\n      cause\n    })\n  }\n}\n\nfunction pragmaOrThrow_({\n  db,\n  pragma,\n  okResult\n}: {\n  db: bs.Database\n  pragma: string\n  okResult: any\n}): void {\n  const result = isString(okResult)\n    ? db.pragma(pragma, { simple: true })\n    : db.pragma(pragma)\n  if (!eql(result, okResult)) {\n    throw new Error(\n      `${pragma} failed for ${dbToPath(db)}: ${stringify(result)}`\n    )\n  }\n}\n\nfunction dbToPath(db: bs.Database): string {\n  return ellipsizePath({ p: db.name, maxLength: 80 })\n}\n\nexport function quickCheck_(db: bs.Database): void {\n  return pragmaOrThrow_({ db, pragma: \"quick_check\", okResult: \"ok\" })\n}\n\nexport function integrityCheck_(db: bs.Database): void {\n  return pragmaOrThrow_({ db, pragma: \"integrity_check\", okResult: \"ok\" })\n}\n\nexport function foreignKeyCheck_(db: bs.Database): void {\n  const badRows = toA(db.pragma(\"foreign_key_check\")) as {\n    table: string\n    rowid: number\n  }[]\n\n  if (badRows.length > Settings.dbInvalidFKThreshold.valueOrDefault) {\n    logger().throw(\n      \"foreignKeyCheck_(): too many invalid foreign keys to repair\",\n      {\n        dbInvalidForeignKeyThreshold:\n          Settings.dbInvalidFKThreshold.valueOrDefault,\n        badRowsCount: badRows.length,\n        badRows\n      }\n    )\n  }\n  for (const row of badRows) {\n    logger().warn(\"repairDbFile_(): deleting row with invalid foreign key\", {\n      row\n    })\n    db.prepare(`DELETE FROM ${escStr(row.table)} WHERE rowid = ?`).run(\n      row.rowid\n    )\n  }\n}\n\nexport function verifyDb_(db: bs.Database) {\n  quickCheck_(db)\n  integrityCheck_(db)\n  foreignKeyCheck_(db)\n}\n\n/**\n * @throw if the db is not valid\n */\nexport function verifyDbFile_(dbFile: PosixFile | string) {\n  return withDbSync(dbFile, verifyDb_, commandTimeoutMs())\n}\n\ntype CheckpointResult = { busy: number; log: number; checkpointed: number }\n\n/**\n * @see https://sqlite.org/pragma.html#pragma_wal_checkpoint\n *\n */\nexport async function checkpoint_({\n  db,\n  retries = 3,\n  checkpointType = Settings.dbWalCheckpointType.valueOrDefault as CheckpointType\n}: {\n  db: bs.Database\n  retries?: number\n  checkpointType?: CheckpointType\n}): PromiseMaybe<CheckpointResult> {\n  checkpointType = CheckpointTypes.validOrElse(\n    checkpointType,\n    CheckpointTypes.AUTO\n  )\n  if (checkpointType === CheckpointTypes.AUTO) return\n  const pragma = \"wal_checkpoint(\" + checkpointType + \")\"\n  const [result] = toA(db.pragma(pragma)) as CheckpointResult[]\n  logger().info(\"checkpoint()\", { pragma, result })\n  if (gt0(result?.busy) && retries > 0) {\n    await delay(250) // let things settle down?\n    return checkpoint_({ db, retries: retries - 1 })\n  } else {\n    return result\n  }\n}\n\nconst IgnorableDumpErrorRe = /no such table: sqlite_\\w+/i\n\n/**\n * Dump and restore to srcDb-new, then move src to ./invalid/, and rename the\n * new db to srcDb.\n *\n * The final db will have passed verification.\n *\n * @return where srcDb was moved to\n */\nexport async function repairDbFile_(\n  srcDbPath: SimpleFileOrString,\n  op: RepairMode = RepairModes.dump\n): Promise<PosixFile> {\n  const srcDbFile = PosixFile.for(srcDbPath)\n  const destDir = await srcDbFile\n    .parent()\n    .join(\"db-\" + op, filestamp())\n    .mkdirp_()\n  const destDbFile = destDir.join(srcDbFile.base)\n  logger().info(`repairDbFile_(${srcDbFile} -> ${destDbFile})`)\n  try {\n    const cmd = await sqliteNativePath_()\n    // SQL dumps are written as SQL INSERTs, which are < 2x the size of the\n    // db. 4x is certainly sufficient.\n    const maxBuffer = Math.min(20 * MiB, await sqliteSizeBytes(srcDbFile)) * 4\n    const obs = new PushProgressObserver(\n      { path: toS(srcDbFile), op: \"Repairing your database\" },\n      maxBuffer\n    )\n    const l = new Latch()\n\n    const dumpProc = execFile(\n      cmd,\n      [srcDbFile.nativePath, \".\" + op],\n      5 * minuteMs,\n      {\n        encoding: \"buffer\",\n        maxBuffer\n      }\n    )\n    dumpProc.stdout!.on(\"error\", cause => {\n      const err = toS(cause)\n      if (IgnorableDumpErrorRe.test(err)) {\n        logger().info(\"repairDbFile_(): ignoring stderr\", { err })\n      } else {\n        void l.reject(new Error(\"sqlite \" + op + \" failed: \" + err))\n      }\n    })\n    const load = execFile(cmd, [destDbFile.nativePath], 5 * minuteMs, {\n      encoding: \"buffer\",\n      maxBuffer\n    })\n    load.on(\"exit\", () => l.resolve())\n    dumpProc.stdout!.on(\"end\", () => {\n      load.stdin!.end(null)\n    })\n    dumpProc.stdout!.on(\"data\", buf => {\n      const len = (buf as string | Buffer).length\n      logger().info(\"repairDbFile_(): dump\", { len })\n      obs.incrProgress(len)\n      load.stdin!.write(buf)\n    })\n\n    await l\n    logger().info(`repairDbFile_(): recovered to ${destDbFile}.`)\n\n    verifyDbFile_(destDbFile)\n\n    logger().info(`repairDbFile_(): ${destDbFile} is valid, finishing repair.`)\n    const result = await thenCollect(sqliteFiles(srcDbFile), ea =>\n      ea.renameYMDHMS_({ subdir: \"needed-repair\" })\n    )\n    await thenCollect(sqliteFiles(destDbFile), ea => ea.mv_(srcDbFile.parent()))\n\n    return result.find(ea => ea.ext === \".db\" || ea.ext.startsWith(\".sqlite\"))!\n  } catch (error) {\n    return logger().throw(\n      \"failed to recover DB via dump and restore. Please see https://photostructure.com/faq/restore-db-from-backup/ \" +\n        FatalErrorFlag,\n      { error }\n    )\n  }\n}\n\nexport function escStr(s: DbValue): string {\n  return `'${toS(s).replace(/'/g, \"''\")}'`\n}\n","import { Knex } from \"knex\"\nimport { zip } from \"../../core/Array\"\nimport { escapeRegExp } from \"../../core/RegExp\"\nimport { isString } from \"../../core/String\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { stringify } from \"../../fe/JSON\"\nimport { keys, omit } from \"../../fe/Object\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { toS } from \"../../fe/toS\"\nimport { DbValued, isDbValued } from \"./DbValued\"\n\nexport function isSqlQuery(obj: any): obj is SqlQuery {\n  return (\n    obj != null &&\n    isString(obj.sql) &&\n    (obj.bindings == null || isDbValued(obj.bindings))\n  )\n}\n\nexport interface SqlQuery {\n  sql: string\n  bindings?: Knex.Value[] | DbValued\n  method?: \"select\" | \"raw\"\n}\n\nexport type Queryish = string | Knex.QueryBuilder | SqlQuery | Knex.Raw\n\nexport function toSqlQuery(sql: Queryish): SqlQuery {\n  if (sql == null) throw new Error(\"null sql\")\n  if (isSqlQuery(sql)) return sql\n  if (isString(sql)) {\n    return { sql }\n  } else if (isFunction(sql[\"toSQL\"])) {\n    return omit(sql.toSQL() as any, \"__knexQueryUid\") as any as SqlQuery\n  } else {\n    throw new Error(\"not queryish: \" + stringify(sql))\n  }\n}\n\nexport function sqlQueryToS(sq: SqlQuery) {\n  if (sq.bindings == null) return sq.sql\n  else if (Array.isArray(sq.bindings)) {\n    return (\n      flatten(\n        zip(\n          sq.sql.split(\"?\"),\n          sq.bindings.map(ea => stringify(ea))\n        )\n      )\n        // .map(ea => ea.trim())\n        .join(\"\")\n    )\n  } else {\n    let result = sq.sql\n    for (const key of keys(sq.bindings)) {\n      result = result.replace(\n        new RegExp(\"[@:$]\" + escapeRegExp(key), \"gi\"),\n        toS(sq.bindings[key])\n      )\n    }\n    return result\n  }\n}\n\nexport function isQueryBuilder(q: Queryish): q is Knex.QueryBuilder {\n  return isFunction((q as any)?.where) && isFunction((q as any)?.limit)\n}\n\n/**\n * Assume a \"heredoc\" with 1 or more queries.\n *\n * - Comment lines that start with `--` will be removed\n * - Individual queries are separated by a semicolon at the end of a line\n * - Whitespace is normalized to a single space.\n * - Empty lines are filtered out\n */\nexport function prepQueries(s: string) {\n  return s\n    .replace(/\\s*--.*?\\n/g, \"\")\n    .split(\";\")\n    .map(q => q.replace(/\\s+/g, \" \").trim())\n    .filter(notBlank)\n}\n","import { Database } from \"better-sqlite3\"\nimport { blank } from \"../../fe/Blank\"\nimport { MultiMap } from \"../../fe/MultiMap\"\n\nexport interface TableInfo {\n  readonly tableName: string\n  readonly columns: ColumnInfo[]\n}\n\nexport interface ColumnInfo {\n  readonly name: string\n  readonly type: string\n  readonly notnull: boolean\n  readonly pk: boolean\n}\n\nexport function parseTableInfo(\n  arr: {\n    tableName: string\n    name: string\n    type: string\n    notnull: number\n    pk: number\n  }[]\n): TableInfo[] {\n  const mm = new MultiMap<string, ColumnInfo>()\n  for (const row of arr) {\n    if (\n      !row.tableName.includes(\"fts\") &&\n      !row.tableName.includes(\"sqlite_\") &&\n      !blank(row.name) &&\n      !blank(row.type)\n    ) {\n      mm.add(row.tableName, {\n        name: row.name,\n        type: row.type.toUpperCase().trim().replace(/\\s+/g, \"\"),\n        notnull: row.notnull === 1,\n        pk: row.pk === 1\n      })\n    }\n  }\n  return mm\n    .entriesArray()\n    .map(([tableName, columns]) => ({ tableName, columns }))\n}\n\nconst sql = `SELECT \nm.tbl_name as tableName,\np.*\nFROM sqlite_master AS m\nJOIN pragma_table_info(m.name) AS p\nORDER BY m.tbl_name, p.cid`\n\nexport function localTableInfo(db: Database): TableInfo[] {\n  return parseTableInfo(db.prepare(sql).all() as any[])\n}\n","import { Database } from \"better-sqlite3\"\nimport { mkdb_ } from \"../../core/db/MkDb\"\nimport { BaseFile } from \"../../core/fs/BaseFile\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { toS } from \"../../fe/toS\"\n\n/**\n * Should only be used by tests\n */\nexport function withDbSync<T>(\n  dbfile: BaseFile | string,\n  f: (db: Database) => T,\n  timeoutMs = Settings.dbBusyTimeoutMs.valueOrDefault\n): T {\n  const d = mkdb_({ nativePath: toS(dbfile), timeoutMs })\n  try {\n    return f(d)\n  } finally {\n    d.close()\n  }\n}\n\n/**\n * Should only be used by tests\n */\nexport async function withDb<T>(\n  dbfile: BaseFile | string,\n  f: (db: Database) => Promise<T>,\n  timeoutMs = Settings.dbBusyTimeoutMs.valueOrDefault\n): Promise<T> {\n  const d = mkdb_({ nativePath: toS(dbfile), timeoutMs })\n  try {\n    return await f(d)\n  } finally {\n    d.close()\n  }\n}\n","import { getDevEnvFlag } from \"../../core/env/DevEnvFlags\"\nimport { errorToS } from \"../../core/error/Error\"\nimport { HealthCheck } from \"../../core/health/HealthCheck\"\nimport { libraryHasSettings } from \"../../core/settings/SettingsIO\"\nimport { li, tt } from \"../../fe/BabyMarkdown\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { defer } from \"../../fe/Defer\"\nimport { Link } from \"../../fe/HealthChecks\"\nimport { Library } from \"../Library\"\nimport { Db } from \"../db/Db\"\nimport { assertValidDbSchema_ } from \"../db/DbSchemaValid\"\nimport {\n  addDbSetupErrorListener,\n  clearDbSetupErrors,\n  dbSetupErrors,\n  hasDbSetupErrors\n} from \"../db/DbSetupErrors\"\nimport { Heartbeat } from \"../model/Heartbeat\"\n\nconst dbRepairLink: Link = {\n  text: \"Attempt database repair\",\n  title: \"Run a dump and reload of your library database to try to repair it\",\n  type: \"button\",\n  method: \"POST\",\n  url: \"/admin/repair-db\",\n  icon: \"database\"\n}\n\nexport const dbModelHealthCheck = defer(() => {\n  const result = HealthCheck.for({\n    section: \"Library\",\n    id: \"library-db\",\n    ordinal: 1,\n    pendingMsg: \"Checking library database…\",\n    settings: [\"libraryDir\", \"forceLocalDbReplica\"],\n    ttlMs: minuteMs,\n    onReset: () => clearDbSetupErrors({ notifyListeners: false }),\n    links: [\n      {\n        text: \"Read about PhotoStructure and SQLite\",\n        icon: \"docs\",\n        url: \"https://forum.photostructure.com/t/whats-ps-force-local-db-replica/837\"\n      }\n    ],\n    later: async () => {\n      if (!libraryHasSettings()) {\n        return {\n          level: \"disabled\",\n          msg: [`Library database tests disabled: no library is open`]\n        }\n      }\n      let tryRepair = false\n      let db: Db | undefined\n      let l: Library | undefined\n      try {\n        const start = Date.now()\n\n        // if we can't open the library, we can't repair it.\n        tryRepair = false\n        l = Library.instanceRequired()\n        // if we can't open db , we can't repair it.\n        // const priorError = unrepairableLibraryDirs.get(j.db.dbFile.nativePath)\n        // if (priorError != null) {\n        //   return mkLibraryErrorResult({\n        //     libraryDir: l.rootDir.nativePath,\n        //     errorMsg: errorToHumanString(priorError),\n        //     error: priorError\n        //     // NO REPAIR\n        //   })\n        // }\n        if (hasDbSetupErrors()) {\n          return {\n            level: \"error\",\n            msg: [\n              \"Something is wrong with your library database.\",\n              li(dbSetupErrors())\n            ],\n            links: [dbRepairLink]\n          }\n        }\n        await l.ready\n        // This won't resolve until _after_ migration (whose errors we can't recover from)\n        db = await l.modelDb()\n\n        if (getDevEnvFlag(\"PS_FAIL_DB_HEALTH_CHECK\")) {\n          throw new Error(\"PS_FAIL_DB_HEALTH_CHECK\")\n        }\n\n        // if the schema is missing tables or columns, shit's gone real bad,\n        // yo. Don't attempt repair.\n        await assertValidDbSchema_(db)\n\n        // OK, so if db verify fails, or ping fails, _maybe_ verify will fix it?\n        tryRepair = true\n        db.verify_()\n\n        await db.vacuum()\n\n        Heartbeat.assertPing_()\n\n        const info = await l.dbModelSetup_()\n\n        return {\n          level: \"ok\",\n          msg: [\n            \"Library database is OK\",\n            li([\n              \"Schema validation, vacuum, optimize, and upsert round-trip took \" +\n                (Date.now() - start) +\n                \"ms\",\n              \"Live db is \" + tt(db.dbFile.nativePath),\n              \"Local replica mode is \" + tt(info.useReplica),\n              info.useReplica\n                ? \"Cold library db is \" + tt(info.libraryDbFile)\n                : undefined\n            ])\n          ]\n        }\n      } catch (error: any) {\n        return {\n          level: \"error\",\n          msg: [\n            \"Library database validation failed\",\n            (tryRepair ? \"\" : \"Unrecoverable: \") + errorToS(error),\n            db == null ? undefined : \"Live db is \" + tt(db.dbFile.nativePath),\n            l == null\n              ? undefined\n              : \"Local replica mode is \" + tt(await l.useReplica())\n          ],\n          links: tryRepair ? [dbRepairLink] : undefined\n        }\n      }\n    }\n  })\n  addDbSetupErrorListener(() => result.refresh())\n  return result\n})\n","import { lazy } from \"../../core/Lazy\"\nimport { healthCheckSetup } from \"../../core/health/HealthCheckSetup\"\nimport { readSettings } from \"../../core/settings/SettingsIO\"\nimport { dbModelHealthCheck } from \"./DbModelHealthCheck\"\nimport { syncHealthCheck } from \"./SyncHealthCheck\"\nimport { volumeUuidHealthCheck } from \"./VolumeUuidHealthCheck\"\n\nexport const libraryHealthCheckSetup = lazy(async () => {\n  await readSettings()\n  healthCheckSetup()\n  syncHealthCheck()\n  dbModelHealthCheck()\n  volumeUuidHealthCheck()\n})\n","import { findAsync } from \"../../core/Array\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { acceptParentAndFileAndSimple } from \"../../core/fs/PosixFileFilters\"\nimport { HealthCheck } from \"../../core/health/HealthCheck\"\nimport { libraryHasSettings } from \"../../core/settings/SettingsIO\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { li, tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { pathsToSync } from \"../sync/PathsToSync\"\n\nconst logger = defer(() => mkLogger(\"health.SyncHealthCheck\"))\n\nexport const syncHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Library\",\n    id: \"library-nothing-to-sync\",\n    ordinal: 99,\n    settings: [\n      \"scanAllDrives\",\n      \"scanPaths\",\n      \"scanLibraryFirst\",\n      \"scanLibraryLast\"\n    ],\n    pendingMsg: \"Checking synced directories…\",\n    later: async () => {\n      if (!libraryHasSettings()) {\n        return {\n          level: \"disabled\",\n          msg: \"Library sync paths test disabled: no library is open\"\n        }\n      }\n      const paths = (await pathsToSync()).map(ea => ea.nativePath)\n      if (isEmpty(paths)) {\n        return {\n          level: \"warn\",\n          msg:\n            \"No paths are configured to scan\\n\" +\n            li([\n              tt(\"PS_SCAN_ALL_DRIVES\") + \" is false\",\n              tt(\"PS_SCAN_PATHS\") + \" is empty\",\n              \"both \" +\n                tt(\"PS_SCAN_LIBRARY_FIRST\") +\n                \" and \" +\n                tt(\"PS_SCAN_LIBRARY_LAST\") +\n                \" are false\"\n            ]),\n          links: [\n            {\n              text: \"Read more\",\n              url: \"https://photostructure.com/go/nothing-to-scan\"\n            }\n          ]\n        }\n      } else {\n        // We could run a quick DirectoryIterator here to see if any of the\n        // paths are empty, but let's just complain if nothing is found in\n        // _any_ scanned paths.\n        const posixFiles = paths.map(ea => PosixFile.for(ea))\n        logger().info(\"Checking if any paths are empty\", { posixFiles })\n        const firstNonEmpty = await findAsync(\n          posixFiles,\n          async ea =>\n            null != (await ea.someDescendant(acceptParentAndFileAndSimple, 1))\n        )\n\n        if (firstNonEmpty == null) {\n          return {\n            level: \"warn\",\n            msg: [\n              \"No eligible files found in scanned paths\",\n              \"Checked paths:\",\n              li(paths.map(tt))\n            ],\n            links: [\n              {\n                text: \"Read more\",\n                url: \"https://photostructure.com/go/nothing-to-scan\"\n              }\n            ]\n          }\n        }\n\n        return {\n          level: \"ok\",\n          msg: [\n            \"At least one directory with eligible files is configured to be synced\",\n            \"Checked paths:\",\n            li(paths.map(tt))\n          ]\n        }\n      }\n    }\n  })\n)\n","import { mkLogger } from \"../../core/Logger\"\nimport { mapAsyncSerial } from \"../../core/async/Promise\"\nimport { HealthCheck } from \"../../core/health/HealthCheck\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { libraryHasSettings } from \"../../core/settings/SettingsIO\"\nimport { volsha } from \"../../core/uri/volsha\"\nimport { Volume } from \"../../core/volumes/Volume\"\nimport { commandTimeoutMs } from \"../../core/volumes/VolumeTtls\"\nimport { volumeUuidNotExpected } from \"../../core/volumes/VolumeUUID\"\nimport { bestVolumeForPath, volumes } from \"../../core/volumes/Volumes\"\nimport { compactBlanks, isEmpty, uniqBy } from \"../../fe/Array\"\nimport { li, tt } from \"../../fe/BabyMarkdown\"\nimport { defer } from \"../../fe/Defer\"\nimport { andList } from \"../../fe/FmtList\"\nimport { groupBy } from \"../../fe/MultiMap\"\nimport { pick } from \"../../fe/Object\"\nimport { scanPaths } from \"../sync/PathsToSync\"\n\nconst logger = defer(() => mkLogger(\"health.VolumeUUIDHealthCheck\"))\n\nexport const volumeUuidHealthCheck = defer(() =>\n  HealthCheck.for({\n    section: \"Library\",\n    id: \"volume-uuids\",\n    pendingMsg: \"Checking volumes…\",\n    settings: [\"scanAllDrives\"],\n    links: [\n      {\n        text: `What's a “volume”?`,\n        url: \"https://photostructure.com/faq/what-is-a-volume/\",\n        icon: \"docs\"\n      }\n    ],\n    later: async () => {\n      // If we don't have a library open right now, short-circuit.\n      if (!libraryHasSettings()) {\n        return {\n          level: \"disabled\",\n          msg: `Volume UUID test disabled: no library is open`\n        }\n      }\n\n      const vols: Volume[] = []\n      const noUriPaths: string[] = []\n      if (Settings.scanAllDrives.valueOrDefault) {\n        vols.push(...(await volumes()))\n      } else {\n        const obj = await scanPaths()\n        const arr = await mapAsyncSerial({\n          name: \"scannedVolumes\",\n          arr: obj.result.map(ea => ea.nativePath),\n          f: path => bestVolumeForPath(path),\n          timeoutMs: commandTimeoutMs()\n        })\n        vols.push(...uniqBy(arr, ea => ea.mountpoint))\n        noUriPaths.push(...obj.noUriPaths)\n      }\n\n      const duplicateUUIDVolumes = [\n        ...groupBy(vols, ea => ea.uuid).values()\n      ].filter(ea => ea.length > 1)\n\n      // We only care about uuids for scanned directories.\n      const missingUUIDs = vols\n        .filter(ea => ea.uuid == null && !volumeUuidNotExpected(ea))\n        .map(ea => ea.mountpoint)\n\n      const unhealthyVolumes = (await volumes())\n        .filter(ea => ea.ok === false)\n        .map(ea => compactBlanks([ea.mountpoint, ea.status]).join(\": \"))\n\n      logger().debug(\"volumeHealthCheck result\", {\n        missingUUIDs,\n        noUriPaths,\n        unhealthyVolumes,\n        scannedVolumes: vols.map(ea => pick(ea, \"uuid\", \"mountpoint\"))\n      })\n\n      if (\n        isEmpty(missingUUIDs) &&\n        isEmpty(duplicateUUIDVolumes) &&\n        isEmpty(noUriPaths) &&\n        isEmpty(unhealthyVolumes)\n      ) {\n        if (isEmpty(vols)) {\n          return {\n            msg: [\n              \"No volumes need UUIDs\",\n              tt(Settings.scanAllDrives.key) +\n                \" is false, and no volumes other than the library are configured to be scanned.\"\n            ],\n            level: \"ok\"\n          }\n        } else {\n          return {\n            msg: [\n              `All scanned volume UUIDs are OK`,\n              li(vols.map(ea => tt(volsha(ea.uuid) + \" ⮕ \" + ea.mountpoint)))\n            ],\n            level: \"ok\"\n          }\n        }\n      } else {\n        const msg: string[] = []\n        if (!isEmpty(unhealthyVolumes)) {\n          msg.push(\n            \"Some volumes are unhealthy\",\n            li(unhealthyVolumes.map(ea => tt(ea))) +\n              \"PhotoStructure may crash or hang when accessing unhealthy volumes.\"\n          )\n        }\n        if (!isEmpty(missingUUIDs)) {\n          msg.push(\n            \"Some volumes are missing UUIDs\",\n            li(missingUUIDs.map(ea => tt(ea))),\n            \"This can cause problems with deduplication and library portability.\"\n          )\n        }\n        if (!isEmpty(duplicateUUIDVolumes)) {\n          msg.push(\n            \"Some volumes have duplicate UUIDs\",\n            duplicateUUIDVolumes\n              .map(arr =>\n                li(\n                  andList(arr.map(ea => tt(ea.mountpoint))) +\n                    \" share UUID \" +\n                    tt(arr[0].uuid)\n                )\n              )\n              .join(\"\\n---\\n\"),\n            \"This can cause problems with deduplication and library portability.\"\n          )\n        }\n        if (!isEmpty(noUriPaths)) {\n          msg.push(\n            \"Some paths failed to have URIs generated\",\n            li(noUriPaths.map(ea => tt(ea))),\n            \"This will prevent these paths from being imported.\"\n          )\n        }\n        return {\n          level: \"warn\",\n          msg: msg.join(\"\\n---\\n\"),\n          links: [\n            {\n              text: \"How to manually add a UUID\",\n              icon: \"handyman\",\n              url: \"https://photostructure.com/faq/what-is-a-volume/#add-uuid\"\n            },\n            {\n              text: \"Rescan volumes\",\n              type: \"button\",\n              method: \"POST\",\n              url: \"/admin/clear-caches\",\n              icon: \"refresh\"\n            }\n          ]\n        }\n      }\n    }\n  })\n)\n","// try {\n//   require(\"source-map-support\").install()\n// } catch {\n//   //\n// }\n\nimport { errorToS } from \"../core/error/Error\"\nimport { run } from \"./info/InfoCLI\"\n\nprocess.on(\"unhandledRejection\", err =>\n  console.error(\"UNHANDLED REJECTION\", errorToS(err))\n)\n\nprocess.on(\"uncaughtException\", err =>\n  console.error(\"UNCAUGHT EXCEPTION\", errorToS(err))\n)\n\nvoid run()\n","import { Command } from \"commander\"\nimport { CommandPlugin } from \"../../core/cli/CLI\"\n\nexport const InfoArgs: CommandPlugin = {\n  beforeParse(cmd: Command): Command {\n    return cmd\n      .option(\n        \"--volumes\",\n        `Emit a table with currently mounted volume metadata. See https://photostructure.com/volumes for details.`\n      )\n      .option(\n        \"--mountpoints\",\n        `Emit a table with currently mountpoints. See https://photostructure.com/volumes for details.`\n      )\n      .option(\n        \"--sync-paths\",\n        `Emit a table listing the paths that will be synced next.`\n      )\n      .option(\n        \"--plan, --licensing\",\n        `Emit plan/licensing information. See the About page in the web UI for more details or to activate a subscription.`\n      )\n      .option(\n        \"--child-env\",\n        `Emit the environment variables provided to all spawned processes.`\n      )\n      .option(\n        \"--validate\",\n        `Only run file validation on the given filenames (requires current PLUS subscription).`\n      )\n      .option(\"-j, --json\", \"Emit metadata as un-indented, uncolorized JSON.\")\n      .option(\n        \"--load-library\",\n        \"Load the library database so more metadata can be shown (like if a file is currently in your library). This adds a second or two (depending on the size of your library).\"\n      )\n      .option(\n        \"--filter <term>\",\n        `Case-insensitively filter keys by <term>. <term> may have dots. Note that .nativePath is always included. Repeat to filter for multiple terms (\"--grep foo --grep bar\").`,\n        (val, prev) => prev.concat([val]),\n        [] as string[]\n      )\n      .option(\n        \"--file-filters\",\n        `Include an exhaustive list of file and directory filters. This is hundreds of lines long, so it's not included by default.`\n      )\n      .option(\n        \"--image-hash\",\n        `Automatically filter image hash fields. Equivalent to \"--filter imageHash --filter imageHashComparison\"`\n      )\n      .option(\"--flat\", \"Only return values for objects with only one field\")\n      .option(\n        \"--suggested-libraries\",\n        `Emit the suggested library directories (as seen on the settings page).`\n      )\n      .option(\n        \"--volumes-ttl\",\n        `Emit the volume cache time-to-live (use with --debug to see details).`\n      )\n      .option(\n        \"--is-library <DIR>\",\n        `Run a couple quick checks to see if <DIR> looks like a PhotoStructure library.`\n      )\n      .option(\n        \"--read-settings <FILE>\",\n        `Read the given file and output the parsed settings.`\n      )\n      .option(\n        \"--recount-all-tags\",\n        `Recount every asset tag count. This may take a minute or two. Don't have a sync running concurrently. Implies --cleanup.`\n      )\n      .option(\n        \"--globs, --exclude-globs\",\n        `Emit all file and directory exclusion globs.`\n      )\n      .option(\"--health\", `Emit details for all health checks.`)\n      .option(\n        \"--why-sick\",\n        `Emit details for all health checks that aren't OK.`\n      )\n      .option(\"--skip-health\", `Disable health checks.`)\n      .option(\n        \"--table\",\n        `Emit with console.table() (useful with --volumes or --filter).`\n      )\n      .option(\"--cleanup\", `Run a bunch of maintenance tasks.`)\n  },\n  afterParse: function () {\n    // handled by InfoCLI\n  }\n}\n","import util from \"util\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { zipPojos } from \"../../core/Object\"\nimport { isDbJanitorService } from \"../../core/ServiceNames\"\nimport { setServiceName } from \"../../core/SetServiceName\"\nimport { asObjectKey } from \"../../core/StringCase\"\nimport { groupids, userids, username } from \"../../core/UserInfo\"\nimport { aggregateAssetFiles } from \"../../core/asset-file/AssetFileAggregator\"\nimport { whyNotSimilarAssetFile } from \"../../core/asset-file/AssetFileComparator\"\nimport { mkAssetFile_ } from \"../../core/asset-file/AssetFileFactory\"\nimport {\n  assetFileSortCriteriaPojo,\n  sortAssetFiles\n} from \"../../core/asset-file/AssetFileSorter\"\nimport { exit } from \"../../core/async/Exit\"\nimport { mapAsync } from \"../../core/async/Promise\"\nimport { until } from \"../../core/async/until\"\nimport { childEnv } from \"../../core/child/ChildEnv\"\nimport { CLI } from \"../../core/cli/CLI\"\nimport { ColorArgs } from \"../../core/cli/ColorArgs\"\nimport { WriteSettingsArg } from \"../../core/cli/WriteSettingsArg\"\nimport { fmtFullDuration } from \"../../core/date/DurationFormat\"\nimport { pathToDb } from \"../../core/db/Schemas\"\nimport { cacheDir } from \"../../core/dir/CacheDir\"\nimport { whyNotLibraryDir } from \"../../core/dir/IsLibraryDir\"\nimport {\n  libraryDataDirPosixFile,\n  libraryOriginalsDirPosixFile,\n  libraryPreviewsDirPosixFile,\n  librarySyncReportsDir\n} from \"../../core/dir/LibraryDirs\"\nimport { logDir } from \"../../core/dir/LogDir\"\nimport { onError } from \"../../core/error/OnError\"\nimport { toWrappedError } from \"../../core/error/WrappedError\"\nimport { BaseFile } from \"../../core/fs/BaseFile\"\nimport { excludeGlobs } from \"../../core/fs/Excluded\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { HealthCheck } from \"../../core/health/HealthCheck\"\nimport { compareImageHashes } from \"../../core/img/ImageHashComparison\"\nimport { whyInvalidFile } from \"../../core/img/ValidFile\"\nimport { m, t } from \"../../core/licensing/Licensing\"\nimport { setupLogger } from \"../../core/log/SetupLogger\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport {\n  importFileSettings_,\n  librarySettingsFile,\n  readLibrarySettings,\n  readSystemSettings\n} from \"../../core/settings/SettingsIO\"\nimport { systemSettingsFile } from \"../../core/settings/SystemSettings\"\nimport { verifyPsEnvSettings } from \"../../core/settings/VerifyPsEnvSettings\"\nimport { volsha } from \"../../core/uri/volsha\"\nimport { mountpoints } from \"../../core/volumes/Mountpoints\"\nimport { volumeMetadataTtlMs } from \"../../core/volumes/VolumeTtls\"\nimport { volumes } from \"../../core/volumes/Volumes\"\nimport { CpuUsage } from \"../../core/work/CpuUsage\"\nimport { compact, isEmpty, isNotEmpty, uniq } from \"../../fe/Array\"\nimport { notBlank, notBlankOr } from \"../../fe/Blank\"\nimport { isFalse, isTrue } from \"../../fe/Boolean\"\nimport { secondMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport {\n  compactValues,\n  flattenObject,\n  fromEntries,\n  omit,\n  pick,\n  pickDeep,\n  values\n} from \"../../fe/Object\"\nimport { isPrimitive } from \"../../fe/Primitive\"\nimport { ServiceNames } from \"../../fe/ServiceNames\"\nimport { fmtBytes } from \"../../fe/Units\"\nimport { toA } from \"../../fe/toA\"\nimport { cleanup as cleanup_ } from \"../Cleanup\"\nimport { Library } from \"../Library\"\nimport { calcVolumesTTL } from \"../SetVolumesTTL\"\nimport { suggestedLibraryDirs } from \"../SuggestedLibraryDir\"\nimport { libraryMetrics, systemInformation } from \"../SystemInfo\"\nimport { LogArgs } from \"../cli/LogArgs\"\nimport { libraryHealthCheckSetup } from \"../health/LibraryHealthChecks\"\nimport { syncPathsForUI } from \"../sync/SyncPaths\"\nimport { InfoArgs } from \"./InfoArgs\"\nimport { info } from \"./InfoImpl\"\n\nasync function _run() {\n  const cmd = new CLI(\n    ServiceNames.info,\n    \"[FILE...]\",\n    [\n      \"* Omit any filenames to run diagnostics and output system configuration, tooling, and health check information.\",\n      \"* File paths should be absolute or relative to cwd.\",\n      \"* Provide 2 file paths to see why PhotoStructure may consider them variants of the same asset.\",\n      \"* To emit valid JSON, set NO_COLOR=1 or use --json.\"\n    ].join(\"\\n\")\n  )\n    .add(InfoArgs, WriteSettingsArg, LogArgs, ColorArgs)\n    .parse()\n\n  const opts = cmd.opts()\n  const filenames = uniq(cmd.args)\n  const flat = isTrue(opts.flat)\n  const emitTable = isTrue(opts.table)\n\n  const recountAllTags = isTrue(opts.recountAllTags)\n  if (recountAllTags) {\n    Settings.recountAllTags.envValue = true\n  }\n  const cleanup = recountAllTags || isTrue(opts.cleanup)\n\n  if (isTrue(opts.imageHash)) {\n    opts.filter ??= []\n    opts.filter.push(\"imageHash\")\n    opts.filter.push(\"imageHashComparison\")\n  }\n\n  const includeFileFilters = isTrue(opts.fileFilters)\n\n  const filters = lazy(() => {\n    if (isEmpty(opts.filter)) return\n    const arr = toA(opts.filter)\n    if (flat && filenames.length <= 1) {\n      // don't add nativePath!\n    } else {\n      arr.unshift(\"nativePath\")\n    }\n    if (filenames.length === 2) {\n      arr.push(...arr.map(ea => \"a.\" + ea), ...arr.map(ea => \"b.\" + ea))\n    }\n    return arr\n  })\n\n  function filter(obj: any): any {\n    const f = filters()\n    return f == null\n      ? obj\n      : Array.isArray(obj)\n      ? obj.map(ea => pickDeep(ea, ...f))\n      : pickDeep(obj, ...f)\n  }\n\n  function dump(obj: any) {\n    obj = filter(obj)\n    if (flat) {\n      obj = flattenObject(obj)\n    }\n    const emitJson = isTrue(opts.json)\n    if (flat && isPrimitive(obj)) {\n      console.log(obj)\n    } else if (emitJson || isFalse(Settings.logColor.value)) {\n      console.log(JSON.stringify(obj, undefined, emitJson ? undefined : 2))\n    } else if (emitTable) {\n      console.table(obj)\n    } else {\n      console.log(\n        util.inspect(obj, {\n          depth: 7, // depth 4 will elide tag objects!\n          colors: true,\n          maxArrayLength: 1024\n        })\n      )\n    }\n  }\n\n  setServiceName(\"info\")\n\n  if (isTrue(opts.skipHealth)) {\n    HealthCheck.disableAll(true)\n  }\n\n  if (notBlank(opts.readSettings)) {\n    const result = await importFileSettings_(BaseFile.for(opts.readSettings))\n    return dump({\n      settings: fromEntries(result.settings.map(ea => [ea.name, ea.value])),\n      warnings: result.warnings\n    })\n  }\n\n  await readSystemSettings()\n  await readLibrarySettings()\n\n  if (cleanup) {\n    // force ourselves to be a db janitor:\n    isDbJanitorService.set(true)\n    if (Settings.logLevel.isUnset()) {\n      Settings.logStdout.envValue = true\n      Settings.logLevel.envValue = \"warn\"\n      setupLogger()\n    }\n  }\n\n  if (isTrue(opts.globs) || isTrue(opts.excludeGlobs)) {\n    const g = excludeGlobs()\n    return dump({\n      excludeGlobs: {\n        file: g.file.map(ea => pick(ea, \"glob\", \"desc\")),\n        dir: g.dir.map(ea => pick(ea, \"glob\", \"desc\"))\n      }\n    })\n  }\n\n  if (isTrue(opts.volumes)) {\n    const v = await volumes()\n    if (v == null) {\n      console.error(\"--volumes failed. Please retry with --info for details.\")\n    } else {\n      return dump(\n        v\n          .filter(ea => ea.ignorable !== true)\n          .map(vol => ({\n            filesystem: vol.filesystem,\n            ...vol,\n            size: fmtBytes(vol.size),\n            used: fmtBytes(vol.used),\n            available: fmtBytes(vol.available),\n            volsha: volsha(vol.uuid)\n          }))\n      )\n    }\n  }\n\n  if (isTrue(opts.mountpoints)) {\n    const arr = await mountpoints()\n    if (arr == null) {\n      console.error(\n        \"--mountpoints failed. Please retry with --info for details.\"\n      )\n    } else {\n      return dump(arr)\n    }\n  }\n\n  if (isTrue(opts.plan) || isTrue(opts.licensing)) {\n    const l = (await m())[0]\n\n    const current_license = map(l?.l, ea => ({\n      email: ea.sub,\n      trial: ea.trial,\n      issued_at: ea.iat,\n      expires: ea.exp,\n      meta: l.meta\n    }))\n    const plan = await t()\n\n    return dump({\n      plan,\n      current_license\n    })\n  }\n\n  if (isTrue(opts.suggestedLibraries)) {\n    return dump(await suggestedLibraryDirs())\n  }\n\n  if (isTrue(opts.volumesTtl)) {\n    return dump({\n      volumesTTL: (await calcVolumesTTL()) ?? volumeMetadataTtlMs()\n    })\n  }\n\n  if (isTrue(opts.childEnv)) {\n    return dump(childEnv())\n  }\n\n  const l = mkLogger(\"info\")\n\n  if (isTrue(opts.loadLibrary) || isTrue(opts.syncPaths) || cleanup) {\n    const ldd = libraryDataDirPosixFile()\n    if (ldd == null) {\n      return console.error(\"Error: please set up your library.\")\n    }\n    if (!(await ldd.isDirectory())) {\n      return console.error(\n        \"Error: your library data dir, \" + ldd + \", is missing.\"\n      )\n    }\n    l.info(\"Waiting for library to spin up...\")\n    const library = Library.instance()\n    try {\n      await library?.ready\n    } catch (err) {\n      l.warn(\"Failed to spin up library\", err)\n    }\n    const dbFile = pathToDb(ldd, \"models\")\n    if (!(await dbFile.isNonEmptyFile())) {\n      return console.error(\n        \"Error: your library database, \" + dbFile + \" is missing.\"\n      )\n    }\n  }\n\n  if (cleanup) {\n    await cleanup_()\n    return dump({ cleanup: \"OK\" })\n  }\n\n  if (isTrue(opts.syncPaths)) {\n    return dump(await syncPathsForUI())\n  }\n\n  if (notBlank(opts.isLibrary)) {\n    const why = await whyNotLibraryDir(opts.isLibrary)\n    return dump(\n      compactValues({\n        isLibrary: why == null,\n        why\n      })\n    )\n  }\n\n  if (isTrue(opts.validate)) {\n    if (isEmpty(filenames)) {\n      throw new Error(\"--validate requires filenames\")\n    }\n    Settings.validateVideos.envValue = true\n    Settings.validateJpegImages.envValue = true\n    Settings.validateRawImages.envValue = true\n\n    return dump(\n      await Promise.all(\n        filenames.map(async ea => [\n          ea,\n          notBlankOr(await whyInvalidFile(ea), \"OK\")\n        ])\n      )\n    )\n  }\n\n  if (isEmpty(filenames)) {\n    // wait for busyPct to be set. Only necessary for Windows (it doesn't have\n    // loadavg!)\n    await until(() => CpuUsage.instance().busyPct(), {\n      timeoutMs: 2 * secondMs,\n      intervalMs: 250\n    })\n    const obj: any = {\n      systemInfo: fromEntries(\n        (await systemInformation()).map(({ term, defn }) => [\n          asObjectKey(term),\n          defn\n        ])\n      )\n    }\n    obj.user_ids = userids()\n    obj.group_ids = groupids()\n    obj.username = await username()\n    obj.paths = {\n      libraryDir: Settings.libraryDir.valueOrDefault,\n      originalsDir: libraryOriginalsDirPosixFile()?.nativePath,\n      systemSettingsFile: systemSettingsFile(),\n      librarySettingsFile: librarySettingsFile()?.nativePath,\n      libraryPreviewsDir: libraryPreviewsDirPosixFile()?.nativePath,\n      librarySyncReportsDir: librarySyncReportsDir()?.nativePath,\n      cacheDir: cacheDir(),\n      logDir: logDir()\n    }\n\n    await libraryHealthCheckSetup()\n    await HealthCheck.awaitSettled()\n    obj.healthSummary1 = HealthCheck.summary()\n    await delay(1000)\n    obj.healthSummary2 = HealthCheck.summary()\n    if (isTrue(opts.health)) {\n      obj.healthChecks = await Promise.all(HealthCheck.testResults())\n    } else if (isTrue(opts.whySick)) {\n      obj.healthChecks = await HealthCheck.notOkResults()\n    }\n\n    obj.wrongPsEnvValues = verifyPsEnvSettings()\n\n    if (isTrue(opts.loadLibrary)) {\n      obj.libraryMetrics = fromEntries(\n        (await libraryMetrics())?.map(ea => [asObjectKey(ea.desc), ea.count]) ??\n          []\n      )\n    }\n\n    obj.volumesTTL = fmtFullDuration(await calcVolumesTTL())\n\n    obj.nonDefaultSettings = fromEntries(\n      values(Settings)\n        .filter(ea => ea.hasValue())\n        .map(ea => [ea.name, ea.humanValue])\n    )\n    return dump(obj)\n  } else if (filenames.length === 2) {\n    // If we're comparing 2 files, shove the filters into a and b:\n    const f1 = PosixFile.for(filenames[0])\n    const f2 = PosixFile.for(filenames[1])\n    const af1 = (await mkAssetFile_(f1))!\n    const af2 = (await mkAssetFile_(f2))!\n\n    const errors = []\n\n    if (af1 == null) errors.push(\"Failed to read \" + f1)\n    if (af2 == null) errors.push(\"Failed to read \" + f2)\n\n    if (isNotEmpty(errors)) {\n      return dump({ errors })\n    }\n    const wns = whyNotSimilarAssetFile(af1, af2)\n\n    const fileComparison =\n      wns == null\n        ? \"These two files will be aggregated into a single asset.\"\n        : \"These files represent different assets: \" + wns\n\n    let primary: Maybe<string>\n    let cmpArr: any\n    if (wns == null) {\n      const sorted = sortAssetFiles([af1!, af2!])\n      primary = sorted[0]?.nativePath\n      cmpArr = zipPojos(\n        ...(await Promise.all(sorted.map(assetFileSortCriteriaPojo)))\n      )\n    }\n    const a = await info(f1, includeFileFilters)\n    const b = await info(f2, includeFileFilters)\n    const result: any = {\n      fileComparison,\n      primary,\n      a,\n      b,\n      cmpArr\n    }\n    if (Settings.useImageHashes.valueOrDefault) {\n      result.imageHashComparison = omit(\n        compareImageHashes(af1 as any, af2 as any),\n        \"a\",\n        \"b\"\n      )\n    }\n    return dump(result)\n  } else {\n    const arr = await mapAsync({\n      name: \"info\",\n      arr: filenames,\n      f: ea => info(ea, includeFileFilters)\n    })\n    const result = fromEntries(arr?.map((ea, i) => [i as any, ea]))\n    if (arr.length > 1) {\n      // run clustering on all the files:\n      const assetFiles = compact(\n        await mapAsync({\n          name: \"mkAssetFile\",\n          arr: filenames,\n          f: ea =>\n            mkAssetFile_(PosixFile.for(ea)).catch(error => {\n              console.error(\"Failed to read \" + ea, error)\n              return\n            })\n        })\n      )\n\n      const clusters = await aggregateAssetFiles(assetFiles)\n      result.clusters = clusters.map(arr2 => arr2.map(ea => ea.uri))\n    }\n    return dump(result)\n  }\n}\n\nexport async function run() {\n  try {\n    await _run()\n  } catch (cause) {\n    onError(toWrappedError(\"Failed\", { cause, fatal: true }))\n  } finally {\n    await exit({ reason: \"done\", status: 0 })\n  }\n}\n","import { sortedKeys } from \"../../core/Object\"\nimport { version } from \"../../core/Version\"\nimport { mkAssetFile_ } from \"../../core/asset-file/AssetFileFactory\"\nimport { assetFileSortCriteriaPojo } from \"../../core/asset-file/AssetFileSorter\"\nimport { omitModeData } from \"../../core/color/ModeData\"\nimport { errorToS } from \"../../core/error/Error\"\nimport {\n  notExcludedDirPredicates,\n  whyExcludedDirectoryRecursive\n} from \"../../core/fs/Excluded\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { toNativePath_ } from \"../../core/fs/SimpleFile\"\nimport { whyInvalidFile } from \"../../core/img/ValidFile\"\nimport { needsTranscoding } from \"../../core/img/Video\"\nimport { Predicates } from \"../../core/predicates/Predicates\"\nimport { pathToLibraryAsset } from \"../../core/settings/PathToLibraryAsset\"\nimport { notBlankOr } from \"../../fe/Blank\"\nimport { localToDate } from \"../../fe/Date\"\nimport { DatedJson, Json } from \"../../fe/JSON\"\nimport { compactValues } from \"../../fe/Object\"\nimport { thenCollect } from \"../../fe/Promise\"\nimport { libraryFileFiltersFor } from \"../LibraryFileFilters\"\nimport { tagAsset } from \"../curators/AssetTagger\"\nimport { AssetFile } from \"../model/AssetFile\"\nimport { modelDb } from \"../model/ModelDb\"\nimport { AssetFileFinder } from \"../sync-file/AssetFileFinder\"\n\nexport async function info(\n  filename: string | PosixFile,\n  includeFileFilters: boolean\n) {\n  try {\n    const file = PosixFile.for(filename)\n    const dir = file.parent()\n\n    const af = await mkAssetFile_(file)\n\n    const dirFilters = includeFileFilters\n      ? await Predicates.explain(dir, ...notExcludedDirPredicates(dir))\n      : undefined\n\n    const fileFilters = includeFileFilters\n      ? await Predicates.explain(\n          file,\n          ...libraryFileFiltersFor(file, { validateFile: true })\n        )\n      : undefined\n\n    const dominantColors = af.dominantColors\n      ?.filter(ea => ea?.color?.name != null)\n      .map(ea => ({\n        rgb: ea.rgbhex,\n        name: ea.color?.name,\n        pct: ea.pct\n      }))\n\n    const tagResult = (await tagAsset({\n      primaryVariation: file,\n      files: [],\n      priorTagPaths: [],\n      capturedAts: [],\n      uris: [(await file.uri_())!]\n    })) as any as Json\n\n    const priorAssetFile =\n      modelDb() == null ? undefined : await new AssetFileFinder(file).prior()\n    const priorIsInSync = await priorAssetFile?.matchesFile()\n    const pathsInLibrary = await thenCollect(\n      AssetFile.sameShaInLibrary(file),\n      ea => ea.getNativePath()\n    )\n\n    // Assert NativeValued to prevent any values from being promises:\n    const result = {\n      ...omitModeData(af),\n      dirFilters,\n      dominantColors,\n      fileFilters,\n      needsTranscoding: await needsTranscoding(file),\n      pathsInLibrary,\n      pathToLibraryAsset: pathToLibraryAsset(\n        localToDate(af.capturedAtLocal),\n        file\n      ),\n      priorAssetFile: priorAssetFile?.toJSON() as Json,\n      priorIsInSync,\n      sidecars: (await file.existingSidecars()).map(ea => ea.base),\n      tagResult,\n      validFile: notBlankOr(await whyInvalidFile(file.nativePath), \"OK\"),\n      variantSortCriteria: assetFileSortCriteriaPojo(af),\n      whyExcludedDirectoryRecursive: await whyExcludedDirectoryRecursive(dir),\n      _PhotoStructureVersion: version\n    } satisfies DatedJson\n    return compactValues(sortedKeys(result))\n  } catch (error) {\n    return {\n      nativePath: toNativePath_(filename),\n      error: errorToS(error)\n    }\n  }\n}\n","import { Knex } from \"knex\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { identity } from \"../../core/Object\"\nimport { AssetVersion } from \"../../core/PhotoStructureVersions\"\nimport { filterAsync, thenMap } from \"../../core/async/Promise\"\nimport { fmtLocalDateShort, localToDateObject } from \"../../core/date/Localtime\"\nimport { InternalErrorFlag } from \"../../core/error/ErrorFlags\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { trashOrUnlinkFileUris_ } from \"../../core/fs/Unlink\"\nimport { Previews } from \"../../core/img/Previews\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { CapturedAt } from \"../../core/tags/CapturedAt\"\nimport { readTags } from \"../../core/tags/ExifTool\"\nimport { ExifTagsWithSource, MergedTags } from \"../../core/tags/MergedTags\"\nimport { joinTagPath } from \"../../core/tags/TagPaths\"\nimport {\n  compact,\n  filterInPlace,\n  isEmpty,\n  isNotEmpty,\n  uniqBy\n} from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { assetSqImgAttrs, assetVideoLink } from \"../../fe/AssetUrls\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { ReducerName, ReducerNames } from \"../../fe/ImageReducers\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe, MaybePromiseMaybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, gte } from \"../../fe/Number\"\nimport { StrBoolValued, StringValued, pick } from \"../../fe/Object\"\nimport { thenCollect } from \"../../fe/Promise\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { AssetId } from \"../../fe/api/Asset\"\nimport { ApiTag, TagPath } from \"../../fe/api/Tag\"\nimport { toA } from \"../../fe/toA\"\nimport { Library } from \"../Library\"\nimport { dateTag } from \"../curators/DateTagger\"\nimport { AssetFile } from \"./AssetFile\"\nimport { toAssetId } from \"./AssetId\"\nimport { AssetRevision } from \"./AssetRevision\"\nimport { AssetTag } from \"./AssetTag\"\nimport { upsertToShaBlockslist } from \"./ShaBlocklist\"\nimport { Tag } from \"./Tag\"\nimport { TaggedAssetStream, coalesceStreams } from \"./TaggedAssetStream\"\nimport { TimestampedModel } from \"./TimestampedModel\"\n\nexport interface AssetTagsParams {\n  assetId: number\n  tagPaths: TagPath[]\n}\n\nexport type RemovableColumn = \"deletedAt\" | \"excludedAt\"\n\nconst logger = lazy(() => mkLogger(\"model.Asset\"))\n\nexport class Asset extends TimestampedModel {\n  static override readonly $tableName = \"Asset\"\n  static override readonly $uniqueColumnName = \"id\"\n  static override readonly $booleanFields = [\"shown\", \"hidden\"]\n\n  capturedAtLocal!: number\n  // shown is set by sync, and is false during import or if all files are\n  // missing. It should be renamed to something like \"ready\":\n  shown?: boolean\n  rating?: number | null // [-1, 5]\n  // hidden is set by the user\n  hidden?: boolean\n  excludedAt?: number | null\n  deletedAt?: number | null\n\n  /** de-normalized from the shown assetfile */\n  durationMs?: number\n\n  /** This is the value of the AssetVersion constant at time of last sync. */\n  version?: number\n\n  /** This monotonically increases every time the primary asset file updates. */\n  updateCount?: number\n\n  // TODO: ADD so we don't have to hit json files at serving time:\n  // fitWidths: number[]\n  // sqWidths: number[]\n\n  assetFiles?: AssetFile[]\n  tags?: Tag[]\n\n  // For UI use (transient/not persisted):\n  streams?: TaggedAssetStream[]\n  attrs = {}\n  afterId?: AssetId\n  beforeId?: AssetId\n\n  readonly assetIdish = lazy(() => ({\n    assetId: this.id!,\n    v: this.updateCount,\n    capturedAtLocal: this.capturedAtLocal\n  }))\n  imgAttrs?: Map<ReducerName, StringValued>\n  /**\n   * The \"poster\" image for a video assets\n   */\n  poster?: string\n\n  static shownUnhidden(qb?: Knex.QueryBuilder): Knex.QueryBuilder {\n    return (\n      orElse(qb, () => Asset.query())\n        // Fully specify \"Asset.\" so it can work with JOINs:\n        .andWhere({\n          \"Asset.shown\": 1,\n          \"Asset.hidden\": 0,\n          \"Asset.excludedAt\": null,\n          \"Asset.deletedAt\": null\n        })\n    )\n  }\n\n  static shownRemovable(\n    col: RemovableColumn,\n    qb?: Knex.QueryBuilder\n  ): Knex.QueryBuilder {\n    return orElse(qb, () => Asset.query())\n      .whereNotNull(col)\n      .andWhere({ \"Asset.shown\": 1 })\n  }\n\n  // CAREFUL: if this is cached, be sure to invalidate regularly or else the\n  // \"library is empty\" message will show to first-time users.\n  static shownCount() {\n    return Asset.ops().count(Asset.shownUnhidden().countDistinct(\"Asset.id\"))\n  }\n\n  static #outdatedQuery() {\n    return Asset.shownUnhidden().andWhere(\"version\", \"<\", AssetVersion)\n  }\n\n  static deletePreviews(assetId: number) {\n    return Library.instance()!.previews().ap(assetId).deleteAll()\n  }\n\n  static async remove({\n    assetId,\n    blocklistShas,\n    unlinkAssetFiles\n  }: {\n    assetId: number\n    blocklistShas: boolean\n    unlinkAssetFiles: boolean\n  }) {\n    const l = mkLogger(\"Asset(\" + assetId + \").remove()\")\n    l.info(\"starting\", { blocklistShas, unlinkAssetFiles })\n    const afs = AssetFile.dbl.allf(q =>\n      q.select(\"sha\", \"uri\", \"mountpoint\").where({ assetId })\n    ) as Pick<AssetFile, \"sha\" | \"uri\" | \"mountpoint\">[]\n    if (blocklistShas) {\n      upsertToShaBlockslist(...afs.map(ea => ea.sha))\n    }\n    AssetTag.dbl.runf(q => q.delete().where({ assetId }))\n    AssetFile.dbl.runf(q => q.delete().where({ assetId }))\n    AssetRevision.dbl.runf(q => q.delete().where({ assetId }))\n    Asset.dbl.runf(q => q.delete().where({ id: assetId }))\n    try {\n      await Asset.deletePreviews(assetId)\n    } catch (error) {\n      l.error(\"Failed to delete previews\", {\n        error\n      })\n    }\n    const deletedMeta = unlinkAssetFiles\n      ? await trashOrUnlinkFileUris_(afs)\n      : []\n\n    return { deletedMeta, assetFileMeta: afs }\n  }\n\n  static async exclude(assetId: number) {\n    logger().info(\"Excluding asset \" + assetId)\n    return {\n      dbResult: Asset.dbl.runf(q =>\n        q.update({ excludedAt: Date.now() }).where({ id: assetId })\n      ),\n      deletedPreviews: await Asset.deletePreviews(assetId)\n    }\n  }\n\n  static nextOutdated(\n    q: (qb: Knex.QueryBuilder) => Knex.QueryBuilder = identity\n  ) {\n    return this.ops().findOne(q(this.#outdatedQuery()))\n  }\n\n  static nextOutdateds(q: (qb: Knex.QueryBuilder) => Knex.QueryBuilder) {\n    return this.ops().all(q(this.#outdatedQuery()))\n  }\n\n  static outdatedCount(\n    q: (qb: Knex.QueryBuilder) => Knex.QueryBuilder = identity\n  ) {\n    return this.dbl.pluckFirst<number>(q(this.#outdatedQuery()).count())\n  }\n\n  static findFirstByFile(f: (qb: Knex.QueryBuilder) => Knex.QueryBuilder) {\n    return this.ops().findOne(\n      f(\n        this.query()\n          .select(\"Asset.*\")\n          .join(\"AssetFile\", \"AssetFile.assetId\", \"Asset.id\")\n      )\n    )\n  }\n\n  static addTags(assetId: number, tagPaths: TagPath[]) {\n    const uniqTagPaths = uniqBy(tagPaths.filter(isNotEmpty), t =>\n      joinTagPath(t)\n    )\n    logger().debug(\"addTags()\", { assetId, tagPaths, uniqTagPaths })\n    if (isEmpty(uniqTagPaths)) return\n    const tags = uniqTagPaths.map(tp => Tag.findOrCreate(tp))\n    const tagIds = tags.map(ea => ea.id!)\n    return AssetTag.addTagsToAsset(assetId, tagIds)\n  }\n\n  static removeTags(assetId: number, tagPaths: TagPath[]) {\n    if (isEmpty(tagPaths)) return\n    const tags = compact(tagPaths.map(ea => Tag.findByPath(ea)))\n    logger().info(\"removeTags()\", {\n      assetId,\n      tags: tags.map(ea => pick(ea, \"id\", \"path\")),\n      tagPaths\n    })\n    return AssetTag.removeTagsFromAsset(assetId, compact(tags.map(ea => ea.id)))\n  }\n\n  static unshownAssetIds() {\n    return this.dbl.pluckAll<number>(`\n        SELECT DISTINCT af1.assetId\n        FROM AssetFile af1\n          LEFT JOIN (SELECT DISTINCT assetId FROM AssetFile WHERE shown = 1) AS af2 \n            ON af1.assetId = af2.assetId\n        WHERE af2.assetId IS NULL`)\n  }\n\n  static archive(assetId: number) {\n    const a = Asset.ops().findById(assetId)\n    if (a != null) {\n      AssetTag.dbl.runf(q => q.where({ assetId }).delete())\n      AssetFile.dbl.runf(q => q.where({ assetId }).delete())\n      Asset.dbl.runf(q => q.where({ id: assetId }).delete())\n    }\n  }\n\n  markUnshownAndUpsert() {\n    this.shown = false\n    this.version = AssetVersion // don't touch with modelDbUpdater.\n    this.upsert()\n  }\n\n  markShownAndUpsert_(shownAssetFile?: AssetFile) {\n    const priorShownId = this.getShown()?.id\n    if (shownAssetFile != null) {\n      const previouslyShown = shownAssetFile.shown\n      this.setShown_(shownAssetFile, { skipUpsert: true })\n      if (previouslyShown !== true) shownAssetFile.upsert()\n    }\n    this.shown = true\n    this.version = AssetVersion\n    if (priorShownId !== this.getShown()?.id) {\n      this.updateCount = (this.updateCount ?? 0) + 1\n    }\n    this.upsert()\n  }\n\n  readonly mergedTags = lazy(async () => {\n    // TODO: add other fields (like title, description, ...)\n    const tags: ExifTagsWithSource[] = []\n    for (const af of this.getAssetFiles()) {\n      const pf = await af.posixFile()\n      const t = await readTags(pf)\n      const mtime = await pf?.mtimeMs()\n      if (pf != null && t != null && mtime != null) {\n        tags.push({\n          ...t,\n          SourceFile: pf.nativePath,\n          sourceModifiedTime: mtime,\n          sourceIsPrimary: isTrue(af.shown)\n        })\n      }\n    }\n    const revisions = AssetRevision.ops().allf(q =>\n      q.where({ assetId: this.id })\n    )\n    // TODO: THIS NEEDS MORE TESTS!\n    const mt = new MergedTags(\"Asset:\" + this.id)\n    mt.addTag(...tags, ...this.assetFiles!)\n    mt.addRevision(...revisions)\n    return mt\n  })\n\n  async updateFromFiles() {\n    const mt = await this.mergedTags()\n    map(mt.get(\"rating\"), rating => {\n      this.logger().info(\"updateFromFiles()\", { rating })\n      this.rating = rating.value\n    })\n    // TODO: add title, description, keywords, ...\n  }\n\n  toAssetId(): AssetId {\n    return toAssetId(this)!\n  }\n\n  // get fitWidths() {\n  //   return mapNotBlank(this._fitWidths, ea => JSON.parse(ea) as number[])\n  // }\n\n  // set fitWidths(arr: number[]) {\n  //   this._fitWidths = stringify(arr)\n  // }\n\n  renderCaption(locale?: string) {\n    return map(\n      this.capturedAtLocal,\n      ea => \"Taken \" + fmtLocalDateShort(ea, locale)\n    )\n  }\n\n  // async whenApiTag(): PromiseMaybe<ApiTag> {\n  //   const ca = this.capturedAt\n  //   const path = await dateTag(ca)\n  //   const tag = path == null ? undefined : await Tag.findOrCreate(path)\n  //   return tag == null ? undefined : tag.toApiTag()\n  // }\n\n  async whenApiTag(): PromiseMaybe<ApiTag> {\n    const t = dateTag(localToDateObject(this.capturedAtLocal))\n    return t == null ? undefined : Tag.findOrCreate(t).toApiTag()\n  }\n\n  addTagPaths(tagPaths: TagPath[]) {\n    return Asset.addTags(this.id!, tagPaths)\n  }\n\n  findAssetFileByUri(uri: string): Maybe<AssetFile> {\n    return this.getAssetFiles()?.find(ea => ea.uri === uri)\n  }\n\n  addAssetFile(af: AssetFile): void {\n    // no dupe entries:\n    filterInPlace(\n      af.asset?.assetFiles ?? [],\n      ea => !(ea.id === af.id || ea.uri === af.uri)\n    )\n    af.assetId = this.id\n    af.asset = this\n    af.shown = false\n    this.getAssetFiles().push(af)\n    this.clear() // mergedTags will need to be reset\n    // Only set if we haven't set it yet:\n    this.capturedAtLocal ??= af.capturedAtLocal\n    this.rating ??= af.rating\n  }\n\n  /**\n   * @return prior AssetFile instance, or a new AssetFile that needs to be\n   * updated and upserted\n   */\n  async assetFileForFile_(\n    f: PosixFile,\n    opts?: { skipUpsert?: boolean }\n  ): Promise<AssetFile> {\n    const uri = await f.uri()\n    if (uri == null)\n      return this.logger().throw(\"assetFileForFile_(): null uri\", { f })\n    const prior = this.getAssetFiles().find(ea => ea.uri === uri)\n    if (prior != null) return prior\n    const af = new AssetFile()\n    this.addAssetFile(af)\n    if (opts?.skipUpsert !== true) {\n      await af.upsertIfNeeded_(f)\n    } else {\n      await af.setFile_(f)\n    }\n    return af\n  }\n\n  static getTags(assetId: number) {\n    return Tag.ops().all(\n      Tag.query()\n        .select(\"Tag.*\")\n        .join(\"AssetTag\", \"AssetTag.tagId\", \"Tag.id\")\n        .where(\"AssetTag.assetId\", assetId)\n        .orderByRaw(\"COALESCE(Tag.ordinal, Tag._path)\")\n    )\n  }\n\n  getTags() {\n    return (this.tags ??= Asset.getTags(this.id!))\n  }\n\n  /**\n   * Tags will be strings concatenated by `Tag.sep`\n   */\n  static getTagPaths(assetId: number) {\n    const q = Tag.query()\n      .select(\"Tag._path\")\n      .join(\"AssetTag\", \"AssetTag.tagId\", \"Tag.id\")\n      .where(\"AssetTag.assetId\", assetId)\n      .orderByRaw(\"COALESCE(Tag.ordinal, Tag._path)\")\n    return Tag.dbl.pluckAll(q) as MaybeSyncOrAsync<string[]>\n  }\n\n  tagPaths() {\n    const tags = this.getTags()\n    return tags.map(t => t.path.join(\"/\")).sort()\n  }\n\n  getStreams(limit: number): TaggedAssetStream[] {\n    if (this.streams == null) {\n      // const tags = (await this.getTags()).filter(ea => !isFsTag(ea.path))\n      const tags = this.getTags()\n      this.logger().info(\"getStreams(): fetched tags \" + tags, { limit })\n      const streams = tags.map(tag => tag.getAssetStream(this, limit))\n      this.streams = coalesceStreams(compact(streams))\n      // Backfill the ancestors:\n      for (const stream of this.streams) {\n        for (const tag of stream.tags) {\n          tag.getAncestors()\n        }\n      }\n    }\n    return this.streams\n  }\n\n  getBeforeAfterId() {\n    // Do we have multiple assets with the same capturedAt?\n    const sameIds = Asset.dbl.all(\n      Asset.shownUnhidden()\n        .clearSelect()\n        .select({ assetId: \"id\", v: \"updateCount\" })\n        .andWhere(\"capturedAtLocal\", this.capturedAtLocal)\n        .orderBy(\"assetId\")\n    ) as any as AssetId[]\n    this.afterId = sameIds.find(ea => ea.assetId > this.id!)\n    // use id as a secondary sort for capturedAt.\n    this.beforeId = sameIds.reverse().find(ea => ea.assetId < this.id!)\n    if (this.beforeId == null) this.#getBeforeId()\n    if (this.afterId == null) this.#getAfterId()\n  }\n\n  #getBeforeId() {\n    return (this.beforeId = Asset.dbl.first(\n      Asset.shownUnhidden()\n        .clearSelect()\n        .select({ assetId: \"id\", v: \"updateCount\" })\n        // This needs to be <, not <=. See getBeforeAfterId.\n        .andWhere(\"capturedAtLocal\", \"<\", this.capturedAtLocal)\n        .orderBy([\n          { column: \"capturedAtLocal\", order: \"desc\" },\n          // we have to add this if the prev is a batch of same-time assets:\n          { column: \"assetId\", order: \"desc\" }\n        ])\n    ) as any)\n  }\n\n  #getAfterId() {\n    return (this.afterId = Asset.dbl.first(\n      Asset.shownUnhidden()\n        .clearSelect()\n        .select({ assetId: \"id\", v: \"updateCount\" })\n        // This needs to be >, not >=. See getBeforeAfterId.\n        .andWhere(\"capturedAtLocal\", \">\", this.capturedAtLocal)\n        .orderBy([\n          { column: \"capturedAtLocal\", order: \"asc\" },\n          // we have to add this if the prev is a batch of same-time assets:\n          { column: \"assetId\", order: \"asc\" }\n        ])\n    ) as any)\n  }\n\n  getTagPaths() {\n    const tags = this.getTags()\n    return tags.map(tag => tag.path)\n  }\n\n  getAssetFiles({ refresh = false }: { refresh?: boolean } = {}) {\n    // If we have files, then return them (even if we're not saved!)\n    if (this.id != null) {\n      if (refresh) {\n        this.assetFiles = undefined\n      }\n      this.assetFiles ??= sortBy(\n        AssetFile.ops().findBy({ assetId: this.id }),\n        ea => [!isTrue(ea.shown), -ea.mtime]\n      )\n    }\n    return this.assetFiles ?? []\n  }\n\n  setShown_(af: number | AssetFile, opts?: { skipUpsert?: boolean }): void {\n    if (af instanceof AssetFile) {\n      // replace our copy with `af`.\n      this.getAssetFiles()\n      this.assetFiles?.some((ea, i) => {\n        const result = ea.id === af.id || ea.uri === af.uri\n        if (result) this.assetFiles![i] = af\n        return result\n      })\n    }\n    const afId = af instanceof AssetFile ? af.id : af\n    if (this.getShown()?.id === afId) {\n      this.logger().debug(\"setShown_(): no-op, already set\", { afId })\n      return\n    }\n    this.logger().info(\"setShown_()\", { assetId: this.id, assetFileId: afId })\n\n    if (!gt0(this.id) || !gt0(afId)) {\n      this.logger().throw(\n        \"setShown_(): invalid IDs: \" +\n          stringify({ assetId: this.id, assetFileId: afId }) +\n          InternalErrorFlag\n      )\n    }\n\n    // This is in lieu of\n\n    // UPDATE AssetFile SET shown = CASE id WHEN $assetFileId THEN 1 ELSE 0\n    // END, updatedAt = $updatedAt, WHERE assetId = $assetId\n\n    // but lets stay with knex here, it only adds one more db roundtrip.\n\n    const updatedAt = Date.now()\n\n    // Avoid fighting the unique constraint:\n    const r1 = AssetFile.dbl.runf(q =>\n      q.update({ shown: 0, updatedAt }).where({ assetId: this.id })\n    )\n    if (r1.changes <= 0) {\n      this.logger().warn(\"setShown_(): all asset files were already unshown\", {\n        afId\n      })\n    }\n    const r2 = AssetFile.dbl.runf(q =>\n      q.update({ shown: 1, updatedAt }).where({ id: afId })\n    )\n    if (r2.changes !== 1) {\n      this.logger().throw(\n        \"setShown_(): failed to update asset file: unexpected changed rows\",\n        { runResult: r2 }\n      )\n    }\n    const shownAF =\n      this.assetFiles?.find(ea => ea.id === afId) ??\n      this.getAssetFiles({ refresh: true }).find(ea => ea.id === afId)\n    if (shownAF == null) {\n      this.logger().throw(\"setShown_(): failed to find shown asset file\", {\n        af\n      })\n    }\n    this.capturedAtLocal = shownAF!.capturedAtLocal\n    this.rating = shownAF!.rating\n\n    // Update the in-memory models:\n    for (const ea of this.assetFiles ?? []) {\n      ea.shown = ea.id === afId\n    }\n    if (opts?.skipUpsert !== true) {\n      this.upsert()\n    }\n    return\n  }\n\n  getShown(opts?: { refresh?: boolean }): Maybe<AssetFile> {\n    return this.getAssetFiles(opts)?.find(af => isTrue(af.shown))\n  }\n\n  getShownNativePath(): MaybePromiseMaybe<string> {\n    return this.getShown()?.getNativePath()\n  }\n\n  async getCapturedAts(): Promise<CapturedAt[]> {\n    return thenCollect(this.getAssetFiles(), ea => ea.capturedAt())\n  }\n\n  link(): string {\n    return \"/asset/\" + this.id\n  }\n\n  sqAttrs(lazyLoad: boolean = true): any {\n    return {\n      ...assetSqImgAttrs({ assetId: this.assetIdish(), lazyLoad }),\n      title: this.renderCaption(),\n      ...this.attrs\n    }\n  }\n\n  async getImgAttrs(previews: Previews, reducer: ReducerName, skipFs = false) {\n    if (this.imgAttrs == null)\n      this.imgAttrs = new Map<ReducerName, StringValued>()\n    if (this.imgAttrs.get(reducer) == null) {\n      const ap = previews.ap(this.id!)\n      await thenMap(ap.readInfo(), async info => {\n        if (info.mimetype.startsWith(\"video/\")) {\n          this.poster = await ap.posterLink()\n        }\n      })\n      const stat = true\n      this.imgAttrs.set(reducer, await ap.imgAttrs(reducer, stat, skipFs))\n    }\n    return this.imgAttrs.get(reducer)\n  }\n\n  async fitAttrs(previews: Previews): Promise<StrBoolValued> {\n    return {\n      ...(await this.getImgAttrs(previews, ReducerNames.fit)),\n      // title: this.renderCaption(),\n      ...this.attrs\n    }\n  }\n\n  isVideo(): boolean {\n    if (this.assetFiles == null) {\n      throw new Error(\".video called before getFiles()\")\n    }\n    return this.assetFiles.some(ea => ea.isVideo)\n  }\n\n  videoAttrs(): StrBoolValued {\n    return {\n      controls: true,\n      autoplay: true,\n      poster: this.poster,\n      ...this.attrs\n    }\n  }\n\n  async videoSources(): Promise<{ src: string; type: string }[]> {\n    // We need at least one video to be an mp4.\n    // 1. prefer the shown asset file if it's an mp4\n    // 2. if any siblings are an mp4, use that\n    // 3. otherwise, videolink the shown or first existing asset file with an \"mp4=\"\n\n    // Only take the first existing file for a given mimetype.\n    const result: { src: string; type: string }[] = []\n    let firstExistingAF: AssetFile | undefined\n    for (const af of this.getAssetFiles()) {\n      if (result.some(ea => ea.type === af.mimetype)) continue\n      if (await af.exists()) {\n        firstExistingAF ??= af\n        result.push({\n          src: assetVideoLink({\n            assetId: this.assetIdish(),\n            assetFileId: af.id!\n          }),\n          type: af.mimetype\n        })\n      }\n    }\n\n    if (\n      !result.some(ea => ea.type === \"video/mp4\") &&\n      firstExistingAF != null\n    ) {\n      result.unshift({\n        src:\n          assetVideoLink({\n            assetId: this.assetIdish(),\n            assetFileId: firstExistingAF.id!\n          }) + \".mp4\",\n        type: \"video/mp4\"\n      })\n    }\n    return result\n  }\n\n  async getPosixFiles(): PromiseMaybe<PosixFile[]> {\n    return thenCollect(this.getAssetFiles(), ea => ea.posixFile_())\n  }\n\n  async getExistingAssetFiles() {\n    return filterAsync({\n      name: \"getExistingAssetFiles\",\n      arr: this.getAssetFiles(),\n      f: af => af.exists()\n    })\n  }\n\n  async findOrCreateByFile(f: PosixFile) {\n    const uri = await f.uri_()\n    if (uri == null) return\n    const prior = toA(AssetFile.ops().findBy({ assetId: this.id!, uri }))[0]\n    return orElse<SyncOrAsync<AssetFile>>(prior, async () => {\n      const af = new AssetFile()\n      af.asset = this\n      af.assetId = this.id\n      await af.setFile_(f)\n      return af\n    })\n  }\n\n  partialSimpleAsset() {\n    return {\n      assetId: this.id!,\n      liked: gte(this.rating, Settings.likeRating.valueOrDefault),\n      hidden: isTrue(this.hidden),\n      excluded: this.excludedAt != null,\n      deleted: this.deletedAt != null\n    }\n  }\n\n  clear() {\n    // this _does not_ delete .assetFiles, as that may be un-upserted\n    // information.\n    this.imgAttrs = undefined\n    this.streams = undefined\n    this.tags = undefined\n    this.mergedTags.unset()\n    return this\n  }\n}\n","import { Knex } from \"knex\"\nimport { sep } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { identity } from \"../../core/Object\"\nimport { AssetFileVersion } from \"../../core/PhotoStructureVersions\"\nimport { escapeRegExp } from \"../../core/RegExp\"\nimport { equalsIgnoreCase } from \"../../core/String\"\nimport {\n  assetFileStatFields_,\n  mkAssetFile_\n} from \"../../core/asset-file/AssetFileFactory\"\nimport {\n  AssetFileStatFields,\n  IAssetFile,\n  getAssetFileNativePath\n} from \"../../core/asset-file/IAssetFile\"\nimport { thenMap } from \"../../core/async/Promise\"\nimport { DominantColor } from \"../../core/color/DominantColor\"\nimport { fmtLocalDateShort } from \"../../core/date/Localtime\"\nimport { errorToS } from \"../../core/error/Error\"\nimport { InternalErrorFlag } from \"../../core/error/ErrorFlags\"\nimport { onError } from \"../../core/error/OnError\"\nimport { posixPathFromGrandparent } from \"../../core/fs/Path\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { whyRejectFile } from \"../../core/fs/PosixFileFilters\"\nimport {\n  AssetFileSyncState,\n  AssetFileSyncStates,\n  SyncFileStates\n} from \"../../core/fs/SyncReport\"\nimport { PreviewAssetFile } from \"../../core/img/AssetPreviewBuilder\"\nimport {\n  mkDownloadableTitle,\n  previewToDownloadable\n} from \"../../core/img/AssetPreviewInfo\"\nimport { ImageHash } from \"../../core/img/ImageHash\"\nimport { Previews } from \"../../core/img/Previews\"\nimport { ForceContext } from \"../../core/settings/ForceContext\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { CapturedAt } from \"../../core/tags/CapturedAt\"\nimport { isVideoMimeType } from \"../../core/tags/MimeTypes\"\nimport { uriExists } from \"../../core/uri/FileURI\"\nimport { URI } from \"../../core/uri/URI\"\nimport { uriIsEquivalent } from \"../../core/uri/UriNormalization\"\nimport { currentVolumeRoots } from \"../../core/volumes/CurrentVolumes\"\nimport { uriToTagPath } from \"../../core/web/UriToTagPath\"\nimport { compact, isEmpty, isNotEmpty, uniqBy } from \"../../fe/Array\"\nimport { at } from \"../../fe/At\"\nimport { blank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { secondMs } from \"../../fe/Date\"\nimport { fmtDim } from \"../../fe/Dimensions\"\nimport { eql } from \"../../fe/Eql\"\nimport { fmtDuration } from \"../../fe/FmtDuration\"\nimport { ReducerNames } from \"../../fe/ImageReducers\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { closeTo, gt0, gte0 } from \"../../fe/Number\"\nimport {\n  assignAllFields,\n  assignFields,\n  omit,\n  pick,\n  reqValuedOrElse\n} from \"../../fe/Object\"\nimport { gte } from \"../../fe/Primitive\"\nimport {\n  PS_LIBRARY_PROTOCOL,\n  PS_LIBRARY_SCHEME,\n  PS_LOCAL_FILE_SCHEME\n} from \"../../fe/URI\"\nimport {\n  ApiAssetFile,\n  AssetFilePathInfo,\n  Downloadable,\n  PathTag\n} from \"../../fe/api/Asset\"\nimport { LibraryTagName, TagRoots } from \"../../fe/api/Tag\"\nimport { Library } from \"../Library\"\nimport { mayCopyAssetsToLibrary } from \"../sync-file/AssetFileRepository\"\nimport { Asset } from \"./Asset\"\nimport { isShaBlockslisted } from \"./ShaBlocklist\"\nimport { Tag } from \"./Tag\"\nimport { TimestampedModel } from \"./TimestampedModel\"\n\nexport class AssetFile\n  extends TimestampedModel\n  implements IAssetFile, PreviewAssetFile\n{\n  static override readonly $tableName = \"AssetFile\"\n  static override readonly $uniqueColumnName = \"uri\"\n  static override readonly $booleanFields = [\"shown\"] as const\n  static override readonly $transientFields = [\n    \"nativePath\",\n    \"syncState\"\n  ] as const\n\n  static outdatedQuery(args: {\n    q?: Knex.QueryBuilder\n    maxUpdatedAt?: number\n    uris: string[]\n    mountpoints: string[]\n  }) {\n    let q = (args.q ?? this.query()).where(\"version\", \"<\", AssetFileVersion)\n    if (args.maxUpdatedAt != null) {\n      q = q.andWhere(\"updatedAt\", \"<\", args.maxUpdatedAt)\n    }\n    return q\n      .andWhere(q2 => {\n        if (isNotEmpty(args.mountpoints)) {\n          q2 = q2.whereIn(\"mountpoint\", args.mountpoints)\n        }\n        for (const ea of args.uris) {\n          q2 = q2.orWhereLike(\"uri\", ea + \"%\")\n        }\n        return q2\n      })\n      .orderBy(\"id\")\n  }\n\n  static async nextOutdated(\n    q: (qb: Knex.QueryBuilder) => Knex.QueryBuilder = identity\n  ) {\n    return this.ops().findOne(q(this.outdatedQuery(await currentVolumeRoots())))\n  }\n\n  static async outdatedCount(\n    q: (qb: Knex.QueryBuilder) => Knex.QueryBuilder = identity\n  ): Promise<number> {\n    const qb = this.outdatedQuery(await currentVolumeRoots())\n    return this.dbl.pluckFirst(q(qb.count(\"id\"))) as any // SITS TYPING\n  }\n\n  static shownAssetFileId(assetId: number) {\n    return this.dbl.pluckFirstf<number>(q =>\n      q.where({ assetId, shown: 1 }).limit(1)\n    )\n  }\n\n  static shownUnhidden({\n    uriRoot\n  }: { uriRoot?: string } = {}): Knex.QueryBuilder {\n    let q = Asset.shownUnhidden().join(\n      \"AssetFile\",\n      \"AssetFile.assetId\",\n      \"Asset.id\"\n    )\n    if (!blank(uriRoot)) {\n      q = q.andWhereLike(\"AssetFile.uri\", uriRoot + \"%\")\n    }\n    return q\n  }\n\n  /**\n   * Most recent 64 assetURIs, mapped to their asset id. Given we need at most\n   * 32 per progress bar, and there may be the end of one progress and the start\n   * of another, 64 should do it.\n   */\n  // static readonly uri2assetId = new BoundedMap<string, number>(\n  //   5 * minuteMs,\n  //   64,\n  //   true\n  // )\n  // static clear() {\n  //   this.uri2assetId.clear()\n  // }\n  static recentAssetIdsByUriRoot(\n    uriRoot: Maybe<string>,\n    ttlMs: number,\n    limit = 64\n  ): number[] {\n    const since = Date.now() - ttlMs\n    return this.dbl.pluckAll(\n      AssetFile.shownUnhidden({ uriRoot })\n        .distinct(\"AssetFile.assetId\")\n        .where(\"AssetFile.updatedAt\", \">\", since)\n        .orderBy(\"AssetFile.updatedAt\", \"desc\")\n        .limit(limit)\n    ) as number[]\n  }\n\n  static assetFileCountByMimeType(\n    uriRoot?: string\n  ): { mimetype: string; assetFileCount: number; assetCount: number }[] {\n    const qb = AssetFile.shownUnhidden({ uriRoot })\n      .select(\"mimetype\")\n      .countDistinct({\n        assetFileCount: \"AssetFile.id\",\n        assetCount: \"Asset.id\"\n      })\n      .groupBy(\"mimetype\")\n      .orderBy(\"mimetype\")\n    return this.dbl.all(qb) as any\n  }\n\n  static assetFileCountWithMimeType(\n    mimeRootOrType: string,\n    uriRoot?: string\n  ): { assetFileCount: number; assetCount: number } {\n    let qb = AssetFile.shownUnhidden({ uriRoot }).countDistinct({\n      assetFileCount: \"AssetFile.id\",\n      assetCount: \"Asset.id\"\n    })\n    qb = mimeRootOrType.endsWith(\"/\")\n      ? qb.andWhereLike(\"mimetype\", mimeRootOrType + \"%\")\n      : qb.andWhere(\"mimetype\", mimeRootOrType)\n    return this.dbl.first(qb) as any\n  }\n\n  /**\n   * Aggregate by \"image/\" and \"video/\"\n   */\n  static assetFileCountByMimeTypeRoots(\n    mimeRootOrTypes: string[] = [\"image/\", \"video/\"],\n    uriRoot?: string\n  ): { mimeTypeRoot: string; assetFileCount: number }[] {\n    return mimeRootOrTypes.map(mimeTypeRoot => ({\n      mimeTypeRoot,\n      assetFileCount:\n        AssetFile.assetFileCountWithMimeType(mimeTypeRoot, uriRoot)\n          ?.assetFileCount ?? 0\n    }))\n  }\n\n  static children(\n    uriParent: string,\n    q?: (qb: Knex.QueryBuilder) => Knex.QueryBuilder\n  ) {\n    const qb = this.query()\n      // the uri like allows the index to be used:\n      .whereLike(\"uri\", uriParent + \"/%\")\n      .andWhere(\"uri\", \"regexp\", `^${escapeRegExp(uriParent)}/[^/]+$}`)\n    return this.ops().all(q == null ? qb : q(qb))\n  }\n\n  static async sameShaInLibrary(f: PosixFile): PromiseMaybe<AssetFile[]> {\n    if (this.db() == null) return\n    const sha = await f.sha()\n    const fileSize = await f.size()\n    if (sha == null || fileSize == null) return\n    return this.ops().allf(q =>\n      q.where({ sha, fileSize }).andWhereLike(\"uri\", PS_LIBRARY_PROTOCOL + \"%\")\n    )\n  }\n\n  static sameAssetFileInLibrary(af: AssetFile): AssetFile[] {\n    return this.ops().allf(q =>\n      q\n        .where(pick(af, \"sha\", \"fileSize\"))\n        .andWhere(q2 => q2.whereLike(\"uri\", PS_LIBRARY_PROTOCOL + \"%\"))\n        .andWhere(q2 => q2.whereNot({ id: af.id }))\n    )\n  }\n\n  assetId?: number\n  asset?: Asset\n\n  /** shown is true iff it's the Asset's preview source */\n  shown!: number | boolean\n\n  uri!: string\n\n  mountpoint?: string // < not set for pslib: URIs. Helps reconstitute URIs for unmounted volumes.\n\n  mtime!: number\n  fileSize!: number\n  mimetype!: string\n  sha!: string\n\n  /**\n   * deci-second resolution in YYYYMMddHHmmssSS\n   */\n  capturedAtLocal!: number\n  capturedAtOffset?: number\n  capturedAtPrecisionMs?: number\n  capturedAtSrc!: string\n\n  focalLength?: string // 35 mm\n  aperture?: number // 4.8\n  shutterSpeed?: string // 1/100 (does this need to be cleaned up?)\n  iso?: number // 100\n  durationMs?: number\n  fps?: number\n\n  width!: number\n  height!: number\n  rotation?: number\n\n  make?: string\n  model?: string\n  cameraId?: string\n  imageId?: string\n  lensId?: string\n  geohash?: number\n  rating?: number\n\n  /**\n   * nullable because image hashing is optional\n   */\n  meanHash?: ImageHash[\"meanHash\"]\n  diffHash?: ImageHash[\"diffHash\"]\n  dctHash?: ImageHash[\"dctHash\"]\n  mode0?: number\n  mode1?: number\n  mode2?: number\n  mode3?: number\n  mode4?: number\n  mode5?: number\n  mode6?: number\n  mode0pct?: number\n  mode1pct?: number\n  mode2pct?: number\n  mode3pct?: number\n  mode4pct?: number\n  mode5pct?: number\n  mode6pct?: number\n\n  version!: number\n  updateCount?: number\n\n  // transient\n  nativePath!: string\n  syncState?: AssetFileSyncState\n\n  // afterUpsert() {\n  //   map(this.assetId, assetId =>\n  //     map(this.uri, uri => AssetFile.uri2assetId.set(uri, assetId))\n  //   )\n  // }\n\n  librarySiblings() {\n    return this.getAsset()\n      ?.getAssetFiles()\n      .filter(ea => ea.id !== this.id && ea.uri.startsWith(PS_LIBRARY_PROTOCOL))\n  }\n\n  capturedAtLocale(locale?: string) {\n    return fmtLocalDateShort(this.capturedAtLocal, locale)\n  }\n\n  get dominantColors(): DominantColor[] {\n    return DominantColor.fromModeData(this)\n  }\n\n  set dominantColors(dominantColors: DominantColor[]) {\n    // we want to assign both values and nulls here (in case there are fewer\n    // than 7 dominant colors)\n    assignAllFields(this as AssetFile, DominantColor.toModeData(dominantColors))\n  }\n\n  readonly uriObj = lazy(() => URI.parse(this.uri))\n\n  get posixPathFromGrandparent() {\n    return map(this.uriObj()?.fsPath, posixPathFromGrandparent)\n  }\n\n  /**\n   * You probably want checkForNoop instead -- this only checks if this row in\n   * the database looks OK.\n   */\n  async whyNotMatchesFile(file?: PosixFile): PromiseMaybe<string> {\n    const outdated = this.#whyOutdated()\n    if (outdated != null) return outdated\n\n    if (this.fileSize == null || this.mtime == null) {\n      return \"missing file metadata\"\n    }\n\n    if (file != null) {\n      const fileUri = await file.uri()\n      if (fileUri == null) {\n        return \"file has no URI\"\n      }\n      if (!(await uriIsEquivalent(this.uri, fileUri))) {\n        return \"file URI mismatch\"\n      }\n    }\n\n    try {\n      const pf = file ?? (await this.posixFile_())\n      const ff = await this.fileFields_(pf)\n      if (ff == null) {\n        if (true === (await pf?.isDeleted())) {\n          return \"file is deleted\"\n        } else {\n          return \"file is unreadable\"\n        }\n      }\n      if (ff.fileSize !== this.fileSize) {\n        return \"file size changed since last sync\"\n      }\n      if (!closeTo(ff.mtime, this.mtime, 2 * secondMs)) {\n        return \"file mtime changed since last sync\"\n      }\n      return\n    } catch (error) {\n      return errorToS(error)\n    }\n  }\n\n  async matchesFile(file?: PosixFile): Promise<boolean> {\n    const whyNot = await this.whyNotMatchesFile(file)\n    return this.logger().tap({\n      msg: \"matchesFile()\",\n      result: null == whyNot,\n      meta: { whyNot }\n    })\n  }\n\n  /**\n   * Respects `forceSync` and AssetFileVersion, and then delegates to @link whyNotMatchesFile\n   */\n  async whyNotInSyncWithFile(file?: PosixFile): PromiseMaybe<string> {\n    if (Settings.forceSync.valueOrDefault) {\n      return \"forceSync\"\n    }\n    if (this.version == null || this.version < AssetFileVersion) {\n      return \"outdated AssetFileVersion\"\n    }\n    return this.whyNotMatchesFile(file)\n  }\n\n  async inSyncWithFile(file?: PosixFile): Promise<boolean> {\n    const whyNotInSync = await this.whyNotInSyncWithFile(file)\n    return this.logger().tap({\n      msg: \"inSyncWithFile()\",\n      result: null == whyNotInSync,\n      meta: { whyNotInSync }\n    })\n  }\n\n  async fileFields_(file?: PosixFile): PromiseMaybe<AssetFileStatFields> {\n    const pf = file ?? (await this.posixFile_())\n    return pf == null ? undefined : await assetFileStatFields_(pf)\n  }\n\n  #whyOutdated() {\n    if (blank(this.uri)) {\n      return \"blank uri\"\n    }\n\n    if (blank(this.sha)) {\n      return \"blank sha\"\n    }\n\n    if (!gt0(this.width)) {\n      return \"missing width\"\n    }\n\n    if (!gt0(this.height)) {\n      return \"missing height\"\n    }\n\n    if (!gt0(this.capturedAtLocal)) {\n      return \"missing capturedAtLocal\"\n    }\n\n    if (!gte0(this.capturedAtPrecisionMs)) {\n      return \"missing capturedAtPrecisionMs\"\n    }\n\n    if (\n      Settings.useImageHashes.valueOrDefault &&\n      (blank(this.meanHash) || blank(this.diffHash) || blank(this.dctHash))\n    ) {\n      return \"missing image hashes\"\n    }\n\n    if (!this.isVersionUpToDate()) {\n      return \"outdated version\"\n    }\n\n    return\n  }\n\n  async isNoop(\n    ctx: ForceContext = {\n      forceSync: Settings.forceSync.valueOrDefault\n    }\n  ) {\n    const whyNotNoop = await this.whyNotNoop(ctx)\n    return this.logger().tap({\n      msg: \"isNoop()\",\n      result: null == whyNotNoop,\n      meta: { whyNotNoop }\n    })\n  }\n\n  /**\n   * Verifies that both this row in the database is in sync with the current\n   * running code, and that the file doesn't need to be copied into the\n   * library (if that setting is enabled)\n   */\n  async whyNotNoop(\n    ctx: ForceContext = {\n      forceSync: Settings.forceSync.valueOrDefault\n    }\n  ) {\n    if (true === ctx.forceSync) {\n      return \"forceSync is true\"\n    }\n\n    // SQLite ROWID starts at 1: https://www.sqlite.org/autoinc.html\n    if (!gt0(this.id)) {\n      return \"missing .id\"\n    }\n\n    if (!gt0(this.assetId)) {\n      return \"missing .assetId\"\n    }\n\n    const whyNotMatches = await this.whyNotMatchesFile()\n    if (whyNotMatches != null) {\n      return whyNotMatches\n    }\n\n    if (await mayCopyAssetsToLibrary()) {\n      const repo = Library.instanceRequired().assetFileRepository()\n      const why = repo.whyNotCopyFile(await this.posixFile_())\n      if (blank(why)) {\n        const af = await repo.existingLibraryAssetFile(this)\n        if (af == null) {\n          return \"need to copy into library\"\n        }\n      }\n    }\n\n    this.syncState = AssetFileSyncStates.noop\n    return\n  }\n\n  isVersionUpToDate() {\n    return gte(this.version, AssetFileVersion)\n  }\n\n  async siblingCount(): Promise<number> {\n    return AssetFile.dbl.pluckFirstf<number>(q =>\n      q.count().where({ assetId: this.assetId }).andWhereNot({ id: this.id })\n    )\n  }\n\n  async upsertIfNeeded_(\n    file?: PosixFile,\n    forceSync = Settings.forceSync.valueOrDefault\n  ): PromiseMaybe<this> {\n    if (file != null) {\n      await this.setFile_(file)\n    }\n    if ((await this.matchesFile()) && gt0(this.id) && !forceSync) {\n      this.upsert() // < update the updatedAt\n      this.syncState = AssetFileSyncStates.noop\n      return\n    }\n    const isDeleted = await this.isFileDeleted()\n    if (isDeleted === true) {\n      this.syncState = AssetFileSyncStates.deleted\n      this.delete()\n      return this\n    } else if (isDeleted === false) {\n      const updated = await this.updateFromFile_(file)\n      this.syncState ??=\n        updated == null\n          ? AssetFileSyncStates.skipped\n          : AssetFileSyncStates.synced\n      return this.upsert()\n    } else {\n      // we don't have this volume currently mounted.\n      this.syncState ??= AssetFileSyncStates.skipped\n      return this\n    }\n  }\n\n  async updateFileFields_(file?: Maybe<PosixFile>) {\n    assignFields(this as AssetFile, await this.fileFields_(file))\n  }\n\n  /**\n   * NOTE: DOES NOT UPSERT. See `upsertIfNeeded()`.\n   * @return if this assetFile should not be upserted (due to already being in sync, or source file missing)\n   */\n  async updateFromFile_(file?: PosixFile): PromiseMaybe<this> {\n    const start = Date.now()\n    const l = this.logger().addContext(\".updateFromFile_()\")\n    if (this.id != null && (await this.matchesFile(file))) {\n      l.info(\n        \"updateFromFile() no-op: up-to-date version and file stat matches since last update\"\n      )\n      return\n    }\n    if (file != null) {\n      await this.setFile_(file)\n    }\n    if (file == null) {\n      file = await this.posixFile_()\n    }\n\n    // only decide we're a no-op if we flush cache and it's still not there:\n    if (file == null || (await file.clear().notExists())) {\n      this.syncState = AssetFileSyncStates.deleted\n      l.info(\"no-op, \" + file + \" is missing\")\n      return\n    }\n\n    // this may throw!\n    const fields = await mkAssetFile_(file)\n\n    if (fields.uri !== this.uri) {\n      // It's OK to upgrade the URI from file: but not vice versa.\n      if (blank(this.uri) || true === this.uri?.startsWith(\"file:\")) {\n        this.logger().warn(\"updateFromFile() upgrading uri\", {\n          prior: this.uri,\n          new: fields.uri\n        })\n        this.uri = fields.uri\n      }\n    }\n\n    assignAllFields<AssetFile>(this, omit(fields, \"uri\"))\n\n    this.version = AssetFileVersion\n    this.syncState = SyncFileStates.synced\n\n    l.elapsed(\"finished\", Date.now() - start, this.toJSON())\n    return this\n  }\n\n  /**\n   * Skip exiftool and image hashing ops if the sibling is relevant and\n   * up-to-date.\n   */\n  async updateFromShaSibling_(sibling: AssetFile) {\n    const whySiblingIsInvalid = sibling.#whyOutdated()\n    if (whySiblingIsInvalid != null) {\n      this.logger().warn(\"updateFromShaSibling() sibling is invalid\", {\n        whySiblingIsInvalid\n      })\n      return\n    }\n    this.logger().debug(\"updateFromShaSibling\", sibling)\n    if (\n      sibling.sha != null &&\n      (await sibling.matchesFile()) &&\n      this.sha === sibling.sha\n    ) {\n      assignFields(\n        this as AssetFile,\n        omit(\n          sibling,\n          \"id\",\n          \"posixFile\",\n          \"uriObj\",\n          \"shown\",\n          \"uri\",\n          \"mtime\",\n          \"fileSize\",\n          \"mountpoint\",\n          \"createdAt\",\n          \"updatedAt\",\n          \"updateCount\",\n          ...AssetFile.$transientFields // includes nativePath\n        )\n      )\n      return this.updateFileFields_()\n    } else {\n      return this.updateFromFile_()\n    }\n  }\n\n  getAsset() {\n    return (this.asset ??= gt0(this.assetId)\n      ? Asset.ops().findById(this.assetId)\n      : undefined)\n  }\n\n  exists(): Promise<boolean> {\n    return uriExists(this.uri, this.mountpoint)\n  }\n\n  /**\n   * True if the volume is currently mounted and this file is missing.\n   */\n  async isFileDeleted(): PromiseMaybe<boolean> {\n    return (await this.posixFile_())?.isDeletedUri(this.uri)\n  }\n\n  whyRejected = lazy(async () => {\n    // if the SHA is bad, we don't care about anything else:\n    if (true === isShaBlockslisted(this.sha)) return \"blocklisted SHA\"\n    const pf = await this.posixFile_()\n    if (pf == null) return \"invalid URI\"\n    if (true === (await this.isFileDeleted())) return \"deleted\"\n    return whyRejectFile(pf)\n  })\n\n  async accepted() {\n    return blank(await this.whyRejected())\n  }\n\n  async setFile_(file: PosixFile): Promise<this> {\n    const uri = await file.uri_()\n    if (uri == null) {\n      return this.logger().throw(\"setFile(): no URI for \" + file)\n    }\n    // THIS MAY BE VALIDLY NULL if file lives in the originals or library\n    // directories!\n    const mountpoint = await file.mountpoint()\n\n    if (this.uri != null) {\n      // Verify the prior URI is equivalent:\n      if (!(await uriIsEquivalent(uri, this.uri))) {\n        return this.logger().throw(\n          \"setFile(): cannot reassign non-equivalent URI\",\n          { prior: this.uri, new: uri, file: file.nativePath }\n        )\n      }\n    }\n\n    const u = await file.uriObject_()\n    if (u == null) {\n      return this.logger().throw(\"failed to create URI for \" + file)\n    }\n\n    this.uri = uri\n    this.uriObj.set(u)\n    this.mountpoint = mountpoint?.nativePath\n    this.nativePath = file.nativePath\n\n    this.posixFile_.set(Promise.resolve(file))\n    return this\n  }\n\n  get basename() {\n    return blank(this.uri)\n      ? undefined\n      : decodeURIComponent(this.uri.slice(this.uri.lastIndexOf(\"/\") + 1))\n  }\n\n  readonly posixFile_ = lazy(async () =>\n    PosixFile.for(await this.getNativePath())\n  )\n\n  posixFile() {\n    return this.posixFile_().catch(() => undefined)\n  }\n\n  async getNativePath() {\n    if (blank(this.nativePath)) {\n      // DON'T BE GRUMPY IF MOUNTPOINT IS NULL. mountpoint will be null for\n      // library asset files!\n      if (this.uri == null) {\n        this.logger().error(\n          \".getNativePath() called before .setFile_()\" + InternalErrorFlag\n        )\n      } else {\n        this.nativePath = await getAssetFileNativePath(this)\n      }\n    }\n    return this.nativePath\n  }\n\n  async capturedAt() {\n    if (this.nativePath == null) await this.getNativePath()\n    return CapturedAt.fromAssetFile(this)\n  }\n\n  async originalDownloadable({\n    brief = false\n  }: { brief?: boolean } = {}): PromiseMaybe<Downloadable> {\n    const basename = this.basename\n    if (brief === true) {\n      // GO FAST\n      return basename == null\n        ? undefined\n        : {\n            href: `/dl/${this.assetId}/${this.id}`,\n            size: \"original\",\n            title: `Download ${basename}`,\n            basename,\n            description: \"Download original\"\n          }\n    }\n    const posixFile = await this.posixFile_()\n    return this.logger().tap({\n      msg: \"originalDownloadable()\",\n      level: \"info\",\n      result:\n        posixFile == null || (await posixFile.isEmpty())\n          ? undefined\n          : {\n              href: `/dl/${this.assetId}/${this.id}`,\n              size: \"original\",\n              title: brief\n                ? `Download ${posixFile.base}`\n                : mkDownloadableTitle(\n                    posixFile,\n                    \"original\",\n                    this.isVideo ? \"video\" : \"image\",\n                    { width: this.width, height: this.height }\n                  ),\n              basename: posixFile.base,\n              description: \"Download original\",\n              details: `(${fmtDim(this)} ${posixFile.ext})`\n            },\n      meta: {\n        posixFile\n      }\n    })\n  }\n\n  async downloadables(\n    previews: Previews,\n    shownSha?: string\n  ): Promise<Downloadable[]> {\n    try {\n      const posixFile = await this.posixFile_()\n      if (posixFile == null) return []\n\n      const ap = previews.ap(this.assetId!)\n\n      // If we can't get dimensions, the file is missing\n\n      const result: Downloadable[] = []\n      await thenMap(this.originalDownloadable(), ea => result.push(ea))\n\n      if (this.isVideo) return result\n\n      const shown = isTrue(this.shown) || this.sha === shownSha\n\n      if (!shown) return result\n\n      const arr = compact(\n        await Promise.all(\n          [...(await ap.previews())]\n            .reverse()\n            .filter(ea => ea.reducer === ReducerNames.fit)\n            .map(ea => previewToDownloadable(posixFile.base, ea))\n        )\n      )\n\n      result.push(\n        ...uniqBy(\n          arr,\n          // arr.filter(ea => [\"large\", \"small\"].includes(ea.size)),\n          ea => ea.size\n        )\n      )\n      return result\n    } catch (err) {\n      onError(\"AssetFile.downloadables failed for \" + this.uri, err)\n      return []\n    }\n  }\n\n  /**\n   * @see AssetFilePathInfo\n   */\n  async pathInfo(): PromiseMaybe<AssetFilePathInfo> {\n    try {\n      const uri = URI.parse(this.uri)\n      const tag = map(uriToTagPath({ uri, isFile: true }), tagPath =>\n        Tag.findByPath(tagPath)\n      )\n      return this._pathInfo_(await tag?.toApiPathElements())\n    } catch (err) {\n      this.logger().warn(\"pathInfo(): failed\", err)\n      return\n    }\n  }\n\n  /**\n   * only exposed for tests\n   */\n  async _pathInfo_(\n    tagLineage: Maybe<PathTag[]>\n  ): PromiseMaybe<AssetFilePathInfo> {\n    // See https://forum.photostructure.com/t/image-filepath-not-correct-synology-docker-compose-alpha-branch/545\n\n    const posixFile = await this.posixFile_()\n    if (posixFile == null) {\n      return this.logger().throw(\"pathInfo(): no posixFile\", {\n        uri: this.uri\n      })\n    }\n\n    // for pslib://, it'll be the path from the library.\n    // for psfile://, it'll be the path from the mountpoint.\n\n    const nativePath = posixFile.nativePath\n    const u = URI.parse(this.uri)\n    const exists = await posixFile.exists()\n\n    if (tagLineage == null || isEmpty(tagLineage)) {\n      this.logger().warn(\n        \"pathInfo(): failed to find existing Tag. Returning a simple path.\",\n        {\n          uri: this.uri,\n          nativePath,\n          tagLineage\n        }\n      )\n      return {\n        nativePath,\n        pathElements: [],\n        nativePathSuffix: nativePath,\n        pathSep: sep,\n        exists\n      }\n    }\n\n    // The first tag element is \"fs\", we don't need that:\n    // (remember that slice returns a shallow copy of the array)\n    if (eql(tagLineage[0]?.tagPath, [TagRoots.fs])) {\n      tagLineage = tagLineage.slice(1)\n    }\n\n    function lastTagName() {\n      return at(at(tagLineage, -1)?.tagPath, -1)\n    }\n\n    const isLibraryUri = u.scheme === PS_LIBRARY_SCHEME\n\n    const filePaths = isLibraryUri\n      ? u.path.split(\"/\").slice(1)\n      : posixFile.pathnames\n\n    const nativePathSuffix: string = filePaths.pop()!\n\n    const pathElements: PathTag[] = []\n\n    // We expect almost all the paths to match, but there's shenanigans at the\n    // beginning of the paths due to the volsha and the initial library path:\n    while (\n      filePaths.length > 0 &&\n      equalsIgnoreCase(lastTagName(), at(filePaths, -1))\n    ) {\n      filePaths.pop()!\n      const t = tagLineage.pop()!\n      pathElements.unshift(t)\n      this.logger().debug(\"added matching tag\", t)\n    }\n\n    // fs/XXX tags can represent\n    if (isLibraryUri && lastTagName() === LibraryTagName) {\n      filePaths.pop()\n      const t = tagLineage.pop()!\n      pathElements.unshift(t)\n      this.logger().debug(\"pslib: added matching library tag\", t)\n    }\n\n    // Can we pop off the \"root\" of this volume?\n    if (u.scheme === PS_LOCAL_FILE_SCHEME) {\n      const thisVolSha = URI.parse(this.uri).authority\n      this.logger().debug(\"psfile: pop last?\", {\n        lastTagName: lastTagName(),\n        thisVolSha\n      })\n      if (lastTagName() === thisVolSha) {\n        filePaths.pop()\n        const t = tagLineage.pop()!\n        pathElements.unshift(t)\n      } else {\n        this.logger().warn(\n          \"weird: I expected to be able to include the volsha tag element, but it doesn't seem to match\",\n          {\n            thisVolSha,\n            tagVolSha: lastTagName()\n          }\n        )\n      }\n    }\n\n    return this.logger().tap({\n      msg: \"pathInfo()\",\n      result: {\n        nativePath,\n        pathElements,\n        nativePathSuffix,\n        pathSep: sep,\n        exists\n      }\n    })\n  }\n\n  async toApi(\n    previews: Previews,\n    shownSha?: string\n  ): PromiseMaybe<ApiAssetFile> {\n    return thenMap(this.pathInfo(), async pi =>\n      reqValuedOrElse({\n        assetId: this.assetId,\n        assetFileId: this.id,\n        ...pi,\n        mimetype: this.mimetype,\n        shown: isTrue(this.shown),\n        name: this.basename,\n        width: this.width,\n        height: this.height,\n        rotation: orElse(this.rotation, 0),\n        fileSize: this.fileSize,\n        mtime: this.mtime,\n        downloadables: await this.downloadables(previews, shownSha),\n        createdAtLocale: fmtMillis(this.createdAt!),\n        updatedAtLocale: fmtMillis(this.updatedAt!)\n      })\n    )\n  }\n\n  get isVideo(): boolean {\n    return isVideoMimeType(this.mimetype)\n  }\n}\n\nfunction fmtMillis(ms: Maybe<number>): Maybe<string> {\n  return map(ms, ea => fmtDuration(Date.now() - ea, 1) + \" ago\")\n}\n","import { durationHMS } from \"../../core/date/Date\"\nimport { AssetId } from \"../../fe/api/Asset\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, isNumber, toGt0 } from \"../../fe/Number\"\nimport { DbValued } from \"../db/DbValued\"\n\nexport function toAssetId(\n  obj:\n    | Maybe<{\n        id?: number\n        assetId?: number\n        capturedAtLocal: number\n        updatedAt?: number\n        updateCount?: number\n        v?: number\n        durationMs?: number\n      }>\n    | DbValued\n): Maybe<AssetId> {\n  const assetId = toGt0(obj?.assetId) ?? toGt0(obj?.id)\n  if (obj == null || assetId == null || !isNumber(obj?.capturedAtLocal)) return\n  const v =\n    (toGt0(obj.v) ?? toGt0(obj.updateCount) ?? toGt0(obj.updatedAt) ?? 0) % 1e6\n  const result: AssetId = { assetId, capturedAtLocal: obj.capturedAtLocal, v }\n  if (gt0(obj.durationMs)) {\n    result.durationHMS = durationHMS(obj.durationMs)\n  }\n  return result\n}\n","import {\n  PrimitiveRevision,\n  RevisionValue,\n  SetAddRevision,\n  SetDeleteRevision\n} from \"../../core/tags/MergedTags\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { parseJSON } from \"../../fe/ParseMaybe\"\nimport { Model } from \"./Model\"\n\nexport class AssetRevision extends Model {\n  static override readonly $tableName = \"AssetRevision\"\n\n  static insert(\n    ...arr: (Omit<\n      PrimitiveRevision | SetAddRevision | SetDeleteRevision,\n      \"createdAt\"\n    > & {\n      assetId: number\n    })[]\n  ) {\n    return AssetRevision.ops().insert(\n      arr.map(obj => ({\n        assetId: obj.assetId,\n        createdAt: Date.now(),\n        field: obj.field,\n        op: (obj as any).op,\n        _priorValueJson: stringify((obj as any).priorValue),\n        _newValueJson: stringify((obj as any).newValue)\n      }))\n    )\n  }\n\n  assetId?: number\n  createdAt!: number\n  field!: string\n  op?: \"add\" | \"delete\"\n  _priorValueJson?: string | null\n  _newValueJson?: string | null\n\n  get priorValue(): Maybe<RevisionValue> {\n    return parseJSON(this._priorValueJson)\n  }\n\n  get newValue(): Maybe<RevisionValue> {\n    return parseJSON(this._newValueJson)\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { gt0 } from \"../../fe/Number\"\nimport { Asset } from \"./Asset\"\nimport { ChangedTag } from \"./ChangedTag\"\nimport { Model } from \"./Model\"\nimport { Tag } from \"./Tag\"\n\nconst logger = lazy(() => mkLogger(\"model.AssetTag\"))\n\nexport class AssetTag extends Model {\n  static override readonly $tableName = \"AssetTag\"\n  static override readonly $uniqueColumnName = \"assetId,tagId\"\n  static override readonly $useCache = false\n\n  $pk() {\n    return [\n      orElse(this.assetId, () => map(this.asset, ea => ea.id)),\n      orElse(this.tagId, () => map(this.tag, ea => ea.id))\n    ].join(\":\")\n  }\n\n  asset!: Asset\n  assetId!: number\n\n  tag!: Tag\n  tagId!: number\n\n  static addTagsToAsset(assetId: number, tagIds: number[]) {\n    if (!gt0(assetId)) {\n      logger().warn(\"addTagsToAsset(): invalid assetId\")\n      return\n    }\n    tagIds = tagIds.filter(gt0)\n    if (isEmpty(tagIds)) return\n\n    ChangedTag.upsertChangedTagIds(tagIds)\n    return this.dbl.runf(q =>\n      q\n        .insert(tagIds.map(tagId => ({ assetId, tagId })))\n        .onConflict([\"assetId\", \"tagId\"])\n        .ignore()\n    )\n  }\n\n  static removeTagsFromAsset(assetId: number, tagIds: number[]) {\n    tagIds = tagIds.filter(gt0)\n    if (isEmpty(tagIds)) return\n    ChangedTag.upsertChangedTagIds(tagIds)\n    return this.dbl.runf(q =>\n      q.whereIn(\"tagId\", tagIds).andWhere({ assetId }).delete()\n    )\n  }\n}\n","import { mapNotEmpty } from \"../../fe/Array\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { compressWhitespace } from \"../../fe/String\"\nimport { AssetTag } from \"./AssetTag\"\nimport { Model } from \"./Model\"\n\nexport class ChangedTag extends Model {\n  static override readonly $tableName = \"ChangedTag\"\n  tagId!: number\n  updatedAt?: number\n\n  static upsertChangedTagIds(tagIds: number[]) {\n    const updatedAt = Date.now()\n    return mapNotEmpty(\n      tagIds.filter(gt0).map(tagId => ({ tagId, updatedAt })),\n      arr =>\n        ChangedTag.dbl.runf(q =>\n          q.insert(arr).onConflict(\"tagId\").merge({ updatedAt })\n        )\n    )\n  }\n\n  static onAssetRemoval(assetId: number) {\n    const tagIds = AssetTag.dbl.pluckAllf<number>(q =>\n      q.select(\"tagId\").where({ assetId })\n    )\n    return ChangedTag.upsertChangedTagIds(tagIds)\n  }\n\n  static getAllChangedTags(lagtimeMs?: number): ChangedTagPojo[] {\n    const updatedAt = Date.now() - (lagtimeMs ?? minuteMs)\n    return ChangedTag.dbl.all({\n      sql: compressWhitespace(\n        \" WITH RECURSIVE ancestors(id) AS (\",\n        \"   SELECT\",\n        \"     tagId\",\n        \"   FROM\",\n        \"     ChangedTag\",\n        \"   WHERE\",\n        \"     updatedAt <= \" + updatedAt,\n        \"   UNION\",\n        \"   SELECT\",\n        \"     Tag.parentId\",\n        \"   FROM\",\n        \"     Tag,\",\n        \"     ancestors\",\n        \"   WHERE\",\n        \"     Tag.id = ancestors.id\",\n        \" )\",\n        \" SELECT DISTINCT\",\n        \"   id as tagId,\",\n        \"   ct.updatedAt as updatedAt\",\n        \" FROM\",\n        \"   ancestors\",\n        \" LEFT JOIN ChangedTag AS ct on ct.tagId = ancestors.id\"\n      )\n    }) as any\n  }\n\n  static deleteChangedTag(t: Maybe<ChangedTagPojo>) {\n    return t == null || !gt0(t.tagId)\n      ? undefined\n      : ChangedTag.dbl.runf(q => q.delete().where(t))\n  }\n}\n\nexport type ChangedTagPojo = Pick<ChangedTag, \"tagId\" | \"updatedAt\">\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { mapGt0 } from \"../../core/Number\"\nimport { TagRoots } from \"../../fe/api/Tag\"\nimport { monthTagRef, ordinalToMonth } from \"../curators/DateTagger\"\nimport { Tag } from \"./Tag\"\n\nconst whenQuery = `'${TagRoots.When}' || char(31)`\nconst yearQuery = whenQuery + ` || '%' || char(31)`\nconst monthQuery = yearQuery + ` || '%' || char(31)`\nconst dayQuery = monthQuery + ` || '%' || char(31)`\n\nconst logger = lazy(() => mkLogger(\"model.DateTagNormalizer\"))\n\nexport function getMonthTags() {\n  return Tag.ops().allf(\n    q =>\n      q\n        .whereNotNull(\"ordinal\")\n        .andWhereRaw(\n          \"_path LIKE \" + monthQuery + \" AND _path NOT LIKE \" + dayQuery\n        )\n        .limit(200 * 12) // 200 years of month tags. We can fetch all 2400 into RAM, no need to batch.\n  )\n}\n\nexport async function normalizeDateTags() {\n  for (const ea of getMonthTags()) {\n    normalizeMonthTag(ea)\n  }\n}\n\nexport function normalizeMonthTag(tag: Tag) {\n  const tagRef = mapGt0(tag.ordinal, ord => monthTagRef(ordinalToMonth(ord)))\n  if (tagRef == null) {\n    logger().warn(\"failed to fix tag (no monthTagRef)\", { t: tag })\n  } else if (tagRef.name !== tag.name) {\n    logger().info(\"Fixing month name\", { tagRef, tag })\n    tag.changeName(tagRef.name)\n  }\n  tag.maybeUpsertDisplayName(tagRef?.displayName)\n}\n","import { NoLibraryErrorFlag } from \"../../core/error/ErrorFlags\"\nimport { secondMs } from \"../../fe/Date\"\nimport { lt } from \"../../fe/Number\"\nimport { TimestampedModel } from \"./TimestampedModel\"\n\nexport class Heartbeat extends TimestampedModel {\n  static override readonly $tableName = \"Heartbeat\"\n  static override readonly $uniqueColumnName = \"name\"\n  static override readonly $useCache = false\n\n  name?: string\n\n  static ping(name: string): Heartbeat {\n    return Heartbeat.ops().upsertOne({ name })\n  }\n\n  static assertPing_(name: string = \"ping-\" + Date.now()) {\n    if (Heartbeat.db() == null) {\n      throw new Error(\"no library is open\" + NoLibraryErrorFlag)\n    }\n    // Don't check if the db is open here. If it's not, the db will throw an\n    // error from this.ping().\n    try {\n      Heartbeat.ping(name)\n      const fromDb = Heartbeat.ops().findOneBy({ name })\n      if (\n        fromDb == null ||\n        fromDb.name !== name ||\n        lt(fromDb.updatedAt, Date.now() - 20 * secondMs)\n      ) {\n        throw new Error(\"Heartbeat row wasn't inserted\")\n      }\n    } finally {\n      try {\n        Heartbeat.dbl.runf(q => q.delete().where({ name }))\n      } catch {\n        // don't care, we're just trying to clean up\n      }\n    }\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { time } from \"../../core/async/PromiseTimer\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { hourMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { runTagMaintenance } from \"../tag/TagSql\"\nimport { normalizeDateTags } from \"./DateTagNormalizer\"\nimport { Progress } from \"./Progress\"\n\nexport async function runMaintenanceTasks({ force }: { force?: boolean } = {}) {\n  await _normalizeDateTags() // < never needs to be done more than once\n  await (force === true ? progressVacuum.refresh() : progressVacuum())\n  await (force === true ? runTagMaintenance.force() : runTagMaintenance())\n}\n\nconst _normalizeDateTags = lazy(() =>\n  time(\"db.normalizeDateTags\", normalizeDateTags)\n)\n\nconst progressVacuum = lazy(\n  () => time(\"db.Progress.vacuum\", () => Progress.vacuum()),\n  2 * hourMs\n)\n\nlater(() => {\n  Settings.libraryDir.watchLater(() => {\n    _normalizeDateTags.unset()\n    progressVacuum.unset()\n  })\n})\n","import { Knex } from \"knex\"\nimport { inspect } from \"util\"\nimport { Logger, mkLogger } from \"../../core/Logger\"\nimport { isProd, isTest } from \"../../core/NodeEnv\"\nimport { Constructor } from \"../../core/Object\"\nimport { uid } from \"../../core/UID\"\nimport { Schema } from \"../../core/db/Schemas\"\nimport { includes, notEmptyOr } from \"../../fe/Array\"\nimport { boolToInt, isTrue } from \"../../fe/Boolean\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { fromEntries } from \"../../fe/Object\"\nimport { isPrimitive } from \"../../fe/Primitive\"\nimport { toS } from \"../../fe/toS\"\nimport { Db } from \"../db/Db\"\nimport { DbRequest } from \"../db/DbRequest\"\nimport { DbValue, DbValued } from \"../db/DbValued\"\nimport { knex } from \"../db/Knex\"\nimport { PartialPojo } from \"../db/PartialPojo\"\nimport { modelDb } from \"./ModelDb\"\nimport { ModelInterface } from \"./ModelInterface\"\nimport { assignFromJSON, fromJSON } from \"./ModelJson\"\nimport { ModelOps } from \"./ModelOps\"\nimport { TableName } from \"./TableName\"\n\nexport interface ModelClass<M extends Model> extends Constructor<M> {\n  db(): Db\n  dbl: DbRequest\n  // NOTE TO FUTURE ME: .ops() can't be a getter, as I need to capture the\n  // <this> for typing. :(\n  ops(): ModelOps<M>\n  fromJSON(json: M | PartialPojo<M>): M\n  toJSON(json: M | PartialPojo<M>): DbValued\n  // TODO: remove these methods and make everything go through .ops()?\n  query(): Knex.QueryBuilder\n  queryBy(constraint: PartialPojo<M>): Knex.QueryBuilder\n  queryOneBy(constraint: PartialPojo<M>): Knex.QueryBuilder\n\n  $tableName: TableName\n  $schema: Schema\n  $ctor: string\n  $uniqueColumnName: string\n  $booleanFields?: string[] | readonly string[]\n  $transientFields?: string[] | readonly string[]\n  $useCache?: boolean\n}\n// let id = 0\n\nexport class Model implements ModelInterface {\n  // readonly $id = ++id\n  static readonly $tableName: TableName\n  static readonly $schema: Schema = \"models\"\n  static readonly db = modelDb\n  static readonly $uniqueColumnName: string\n  static readonly $booleanFields?: string[] | readonly string[]\n  static readonly $transientFields?: string[] | readonly string[]\n  static readonly $useCache?: boolean\n\n  static get $ctor() {\n    return this.$schema + \".\" + this.$tableName\n  }\n\n  static query() {\n    return knex()(this.$tableName)\n  }\n\n  static queryBy<M extends Model>(\n    this: ModelClass<M>,\n    constraint: PartialPojo<M>\n  ) {\n    return this.query().where(constraint)\n  }\n\n  static queryOneBy<M extends Model>(\n    this: ModelClass<M>,\n    constraint: PartialPojo<M>\n  ) {\n    return this.queryBy(constraint)\n  }\n\n  static ops<M extends Model>(this: Constructor<M>): ModelOps<M> {\n    return ((this as any)._ops ??= new ModelOps(this as any, (this as any).db))\n  }\n\n  static get dbl(): DbRequest {\n    return this.ops().dbl\n  }\n\n  static rows(): number {\n    return this.ops().rows()\n  }\n\n  static truncate() {\n    if (isProd) {\n      throw new Error(\"rejecting attempt to truncate in prod\")\n    }\n    this.dbl.run(\"DELETE FROM \" + this.$tableName)\n  }\n\n  $ops() {\n    return this.class().ops()\n  }\n\n  id?: number\n\n  // Can't be a getter because getters can't have args and we need to give it\n  // the this:\n  class<M extends Model>(this: M): ModelClass<M> {\n    return this.constructor as any\n  }\n\n  $pk(): string {\n    return toS(this.id)\n  }\n\n  $ucn(): DbValue {\n    return (this as any)[this.class().$uniqueColumnName]\n  }\n\n  $tableName(): string {\n    return this.class().$tableName\n  }\n\n  readonly $instanceId = isTest ? uid() : undefined\n\n  $uid(): string {\n    return `${this.$tableName()}(${this.id ?? this.$ucn()})${\n      (this as any).shown === true ? \"!\" : \"\"\n    }`\n  }\n\n  protected logger(): Logger {\n    return mkLogger(this.class().$schema + \".\" + toS(this.valueOf()))\n  }\n\n  [inspect.custom]() {\n    return { ...this.$toShallowJSON(), $instanceId: this.$instanceId }\n  }\n\n  toString(): string {\n    return this.$uid()\n  }\n\n  // We have to return Object to follow es5\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  valueOf(): Object {\n    return this.$uid()\n  }\n\n  /**\n   * Supports both db and rpc JSON representations\n   */\n  static fromJSON<M extends Model>(\n    this: Constructor<M>,\n    Obj: M | PartialPojo<M>\n  ): M {\n    return fromJSON(this as ModelClass<M>, Obj)\n  }\n\n  static toJSON<M extends Model>(\n    this: ModelClass<M>,\n    m: M | PartialPojo<M>\n  ): DbValued {\n    return this.fromJSON(m).toJSON()\n  }\n\n  $toShallowJSON() {\n    return this.$_toJSON({ encodeBool: isTrue })\n  }\n\n  $toDbJSON(colNames?: string[]): Record<keyof this, DbValue> {\n    return this.$_toJSON({\n      encodeBool: boolToInt,\n      includeCtor: false,\n      includeTransient: false,\n      colNames\n    }) as any\n  }\n\n  $clone(): this {\n    return fromJSON(this.class(), this.toJSON())\n  }\n\n  // used for RPC (millis dates to reduce unnecessary parsing work)\n  toJSON(): PartialPojo<this> {\n    // the m.valueOf removes circular reference errors.\n    // we want date in millis to make date parsing simpler.\n    return this.$_toJSON({ encodeBool: isTrue })\n  }\n\n  _get(\n    key: keyof this & string,\n    encodeBool: (b: any) => any,\n    includeTransient = true\n  ): Maybe<[string, DbValue | null]> {\n    const value = this[key]\n    if (value === null) {\n      return [key, null]\n    }\n    if (!isPrimitive(value)) {\n      // unexpected!\n      return\n    }\n    if (!includeTransient && includes(this.class().$transientFields, key)) {\n      return\n    }\n    if (includes(this.class().$booleanFields, key)) {\n      return [key, encodeBool(value)]\n    }\n    return [key, value]\n  }\n\n  $_toJSON({\n    encodeBool,\n    includeCtor = true,\n    includeTransient = true,\n    colNames\n  }: {\n    encodeBool: (b: any) => any\n    includeCtor?: boolean\n    includeTransient?: boolean\n    colNames?: string[]\n  }): PartialPojo<this> {\n    const mc = this.class()\n    const columnNames = notEmptyOr(colNames, mc.ops().columnNames())\n    return fromEntries(\n      columnNames.map(ea => this._get(ea as any, encodeBool, includeTransient)),\n      includeCtor ? { $ctor: mc.$ctor } : {}\n    ) as any\n  }\n\n  insert(): this {\n    this.logger().debug(\"insert()\", { self: this.toJSON() })\n    return this.class().ops().insertOne(this)\n  }\n\n  upsert(arg?: PartialPojo<this>): this {\n    if (arg != null) assignFromJSON(this, arg)\n    this.logger().debug(\"upsert()\", { self: this.toJSON(), arg })\n    const result = this.class().ops().upsertOne(this)\n    this.$afterUpsert()\n    return result\n  }\n\n  $beforeUpsert() {\n    // no-op, but Timestamped overrides.\n  }\n\n  $afterUpsert() {\n    // no-op, but Tag overrides.\n  }\n\n  reload() {\n    // reloadOne already assigns fetched values to `this`.\n    return this.class().ops().reloadOne(this)\n  }\n\n  delete() {\n    if (gt0(this.id)) {\n      this.class().ops().delete([this.id])\n    }\n  }\n}\n","import { pathToDb } from \"../../core/db/Schemas\"\nimport { libraryDataDirPosixFile } from \"../../core/dir/LibraryDirs\"\nimport { SimpleFileOrString } from \"../../core/fs/SimpleFile\"\nimport { lazy } from \"../../core/Lazy\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { Db } from \"../db/Db\"\n\nexport const modelDb = lazy<Db>(() => undefined as any)\n\nexport function libraryModelDbFile(libraryDir?: Maybe<SimpleFileOrString>) {\n  return map(libraryDataDirPosixFile(libraryDir), ldd =>\n    pathToDb(ldd, \"models\")\n  )\n}\n","import { mkLogger } from \"../../core/Logger\"\nimport { includes, uniq } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { opt } from \"../../fe/Opt\"\nimport { stripPrefixes } from \"../../fe/String\"\nimport { Model, ModelClass } from \"./Model\"\n\nconst ctor2class = new Map<string, ModelClass<any>>()\n\nexport function addModelClass(mc: ModelClass<any>) {\n  ctor2class.set(mc.$ctor, mc)\n}\n\n/**\n * Supports both db and rpc JSON representations\n */\nexport function fromJSON<M extends Model>(caller: ModelClass<M>, json: any): M {\n  if (json == null) {\n    throw new Error(\"json is null\")\n  }\n  if (\n    caller != null &&\n    notBlank(caller.$ctor) &&\n    !ctor2class.has(caller.$ctor)\n  ) {\n    addModelClass(caller)\n  }\n  if (json instanceof caller) {\n    return json as M\n  }\n\n  const mc = opt(json[\"$ctor\"])\n    .flatMap(ea => ctor2class.get(ea))\n    .getOrElse(() => caller)\n  if (json instanceof mc) return json\n  const m = new mc()\n  if (json == null) return m\n  return assignFromJSON(\n    m,\n    json,\n    uniq([caller.$tableName + \".\", mc.$tableName + \".\"])\n  )\n}\n\nexport function assignFromJSON<M extends Model>(\n  m: M,\n  json: any,\n  prefixes: string[] = []\n): M {\n  const mc = m.class()\n  for (const [k, v] of Object.entries(json)) {\n    if (k === \"$ctor\") continue\n    if (v === undefined) continue\n    const key = stripPrefixes(k, prefixes)\n    // If v is NULL, let it be null\n    ;(m as any)[key] =\n      v == null\n        ? v\n        : // if field is boolean, convert to boolean\n        includes(mc.$booleanFields, key)\n        ? isTrue(v)\n        : // otherwise pass through value from db:\n          v\n  }\n  return m\n}\n\nexport function toJSON(\n  m: Maybe<Model | Model[]>,\n  mc: ModelClass<any>,\n  key: string\n): any | any[] {\n  if (m == null) return\n  if (Array.isArray(m))\n    return m.map((ea, idx) => toJSON(ea, mc, `${key}[${idx}]`))\n  if (typeof m.toJSON === \"function\") return m.toJSON()\n  mkLogger(\"ModelJSON.toJSON()\").warn(\"Failed\", { m, key, mc: mc.$ctor })\n  return undefined\n}\n","import { RunResult } from \"better-sqlite3\"\nimport { Knex } from \"knex\"\nimport { batches } from \"../../core/Array\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Logger, mkLogger } from \"../../core/Logger\"\nimport { equalsIgnoreCase } from \"../../core/String\"\nimport { WeakCache } from \"../../core/WeakCache\"\nimport {\n  InternalErrorFlag,\n  NonRetriableErrorFlag\n} from \"../../core/error/ErrorFlags\"\nimport { ee } from \"../../core/event/EventEmitter\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { compact, diff, isNotEmpty, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank, toNotBlank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toGt0, toInt } from \"../../fe/Number\"\nimport { assignFields, isEmptyObj, keys, pick } from \"../../fe/Object\"\nimport { toA } from \"../../fe/toA\"\nimport { Db } from \"../db/Db\"\nimport { DbRequest } from \"../db/DbRequest\"\nimport { DbValue, toDbValued } from \"../db/DbValued\"\nimport { PartialPojo } from \"../db/PartialPojo\"\nimport { Queryish } from \"../db/SqlQuery\"\nimport { Model, ModelClass } from \"./Model\"\nimport { addModelClass } from \"./ModelJson\"\nimport { TableName } from \"./TableName\"\n\nexport class ModelOps<M extends Model> {\n  readonly dbl: DbRequest\n  readonly #logger: Logger\n  #cacheEnabled: boolean = true\n  readonly #cache = new WeakCache<string, M>()\n  readonly #deletedIds = new Set<number>()\n\n  constructor(\n    readonly model: ModelClass<M>,\n    readonly db: () => Db\n  ) {\n    this.#logger = mkLogger(`ModelOps(${model.$tableName})`)\n    addModelClass(model)\n    this.#cacheEnabled = model.$useCache ?? true\n    this.dbl = new DbRequest(this.db, model.$tableName)\n    ee().on(\"clearCache\", () => this.#cache.clear())\n    ee().on(\"clearDbCache\", () => this.#cache.clear())\n  }\n\n  #assign(dest: PartialPojo<M> | M, src: Maybe<PartialPojo<M> | M>) {\n    assignFields(dest, src, { omitKeys: [\"$instanceId\"], assignNullish: true })\n  }\n\n  clearDbCache() {\n    this.#cache.clear()\n  }\n\n  get $cache() {\n    return this.#cache\n  }\n\n  #maybeCache(m: M) {\n    if (this.#cacheEnabled) {\n      const prior = this.$cachedByJson(m)\n      if (prior != null) {\n        this.#assign(prior, m)\n        return prior\n      } else {\n        const k = this.$pickModelUcn(m) ?? m.id\n        if (k != null) {\n          this.#cache.set(stringify(k), m)\n        }\n      }\n    }\n    return m\n  }\n\n  $cachedByJson(json: M | Record<keyof M, DbValue>) {\n    if (json == null || !this.#cacheEnabled) return\n    const ucn = this.$pickModelUcn(json as any)\n    return (\n      (ucn == null ? undefined : this.#cache.get(stringify(ucn))) ??\n      this.$cachedById((json as any).id)\n    )\n  }\n\n  $cachedById(id: Maybe<number>) {\n    return gt0(id) && this.#cacheEnabled\n      ? this.#cache.get(stringify(id)) ??\n          this.#cache.findEntry(ea => ea.id === id)\n      : undefined\n  }\n\n  get dbOpen(): boolean {\n    return mapOr(\n      this.db(),\n      ea => ea.open,\n      () => false\n    )\n  }\n\n  readonly columnNames = lazy<string[]>(() =>\n    this.db()\n      .tableInfo_()\n      .find(ea => equalsIgnoreCase(ea.tableName, this.tableName))!\n      .columns.map(ea => ea.name)\n  )\n\n  readonly updatableColumnNames = lazy<string[]>(() =>\n    diff(this.columnNames(), this.immutableColumnNames)\n  )\n\n  private get tableName(): TableName {\n    return this.model.$tableName\n  }\n\n  query() {\n    return this.model.query()\n  }\n\n  toDbValued(obj: PartialPojo<M> | M) {\n    const m = this.model.fromJSON(obj)\n    const dbv = toDbValued(m)\n    return pick(dbv, ...this.columnNames())\n  }\n\n  private run(qb: Queryish) {\n    return this.dbl.run(qb)\n  }\n\n  fromJSON(obj: Maybe<any>): Maybe<M> {\n    if (isEmptyObj(obj)) return\n    const result = this.model.fromJSON(obj)\n    return this.#maybeCache(result)\n  }\n\n  fromJSONs(pojos: any[]): M[] {\n    return compact(pojos.map(ea => this.fromJSON(ea as any)))\n  }\n\n  first(qb: Knex.QueryBuilder): Maybe<M> {\n    return this.fromJSON(this.dbl.first(qb))\n  }\n\n  firstf(f: (qb: Knex.QueryBuilder) => Knex.QueryBuilder): Maybe<M> {\n    return this.first(f(this.query()))\n  }\n\n  all(qb: Queryish = this.query()): M[] {\n    return this.fromJSONs(this.dbl.all(qb))\n  }\n\n  allf(f: (qb: Knex.QueryBuilder) => Knex.QueryBuilder): M[] {\n    return this.all(f(this.query()))\n  }\n\n  findOne(qb: Knex.QueryBuilder): Maybe<M> {\n    return this.fromJSON(this.dbl.first(qb))\n  }\n\n  findOneBy(constraint: PartialPojo<M>): Maybe<M> {\n    return this.findOne(this.model.query().where(constraint))\n  }\n\n  findById(id: Maybe<number>, constraint?: PartialPojo<M>): Maybe<M> {\n    return this.findOneBy({ ...constraint, id } as any)\n  }\n\n  findByIds(ids: number[]): M[] {\n    ids = toA(ids).filter(gt0)\n    const cached: M[] = []\n    const uncachedIds: number[] = []\n    for (const id of ids) {\n      const prior = this.$cachedById(id)\n      if (prior != null) cached.push(prior)\n      else uncachedIds.push(id)\n    }\n    const results = batches(\n      uncachedIds,\n      Settings.dbBatchSelectSize.valueOrDefault\n    ).map(arr => this.dbl.all(this.query().whereIn(\"id\", arr)))\n    return sortBy([...cached, ...this.fromJSONs(flatten(results))], ea =>\n      ids.indexOf(ea.id!)\n    )\n  }\n\n  findBy(constraint: PartialPojo<M>): M[] {\n    return this.all(this.model.queryBy(constraint))\n  }\n\n  findWhereIn<K extends keyof M>(column: K, values: M[K][]): M[] {\n    // SITS TODO: remove the as any cast\n    return this.all(this.model.query().whereIn(column as any, values as any))\n  }\n\n  rows(qb?: Knex.QueryBuilder): number {\n    // don't apply count to qb (so countDistinct() will be respected):\n    return this.count(qb ?? this.model.query().count())\n  }\n\n  /**\n   * Count the rows in the given query,\n   */\n  count(qb: Knex.QueryBuilder): number {\n    return toGt0(this.dbl.pluckFirst(qb)) ?? 0\n  }\n\n  countf(f: (qb: Knex.QueryBuilder) => Knex.QueryBuilder): number {\n    return this.count(f(this.query()))\n  }\n\n  insert(arr: (M | PartialPojo<M>)[]): M[] {\n    return toA(arr).map(ea => this.insertOne(ea))\n  }\n\n  upsertOne(t: M | PartialPojo<M>) {\n    return this.modelSupportsUpsert\n      ? this.upsert([t])![0]\n      : this.insertOrUpdateOne(t)\n  }\n\n  insertOrUpdateOne(t: M | PartialPojo<M>) {\n    return t.id == null ? this.insertOne(t) : this.updateOne(t)\n  }\n\n  insertOne(t: M | PartialPojo<M>): M {\n    if (t.id != null) {\n      throw new Error(\n        \"insert called for \" + stringify(t) + NonRetriableErrorFlag\n      )\n    }\n    const m = this.fromJSON(t)\n    if (m == null) {\n      return this.#logger.throw(\n        \"insertOne(): fromJSON returned null\" + InternalErrorFlag,\n        { t }\n      )\n    }\n\n    // we want this instance to be cached:\n    if (m instanceof this.model) this.#maybeCache(m)\n\n    m.$beforeUpsert()\n    const dbJson = m.$toDbJSON(this.columnNames())\n    const runInfo = this.dbl.runf(q => q.insert(dbJson))\n    m.id = toInt(runInfo.lastInsertRowid)\n    m.$afterUpsert()\n    return m\n  }\n\n  unsetField(id: number, fieldName: keyof M) {\n    map(this.$cachedById(id), (ea: any) => {\n      ea[fieldName] = null\n    })\n    return this.dbl.runf(q => q.where({ id }).update(fieldName as string, null))\n  }\n\n  updateOne(t: M | PartialPojo<M>): M {\n    if (t.id == null) {\n      throw new Error(\n        \"update called for \" +\n          stringify(t) +\n          NonRetriableErrorFlag +\n          InternalErrorFlag\n      )\n    }\n    const m = this.model.fromJSON(t)\n    m.$beforeUpsert()\n    const updateRecord = m.$toDbJSON(this.updatableColumnNames())\n    this.dbl.runf(q => q.where({ id: t.id }).update(updateRecord))\n    // There shouldn't be anything to assign back to `t`.\n    m.$afterUpsert()\n    return this.#maybeCache(m) ?? m\n  }\n\n  /**\n   * unique column name (not ID): NOTE THAT THIS MAY BE MULTIPLE COLUMNS (see\n   * ProgressMeta: \"progressId,name\" or AssetTag: \"assetId,tagId\")\n   */\n  get ucn(): string {\n    return toNotBlank(this.model.$uniqueColumnName) ?? \"id\"\n  }\n\n  // TODO: make this return `(keyof M)[]`\n  ucnFieldNames = lazy(() => this.ucn.split(\",\"))\n\n  get modelSupportsUpsert() {\n    return this.ucn != null && this.ucn !== \"id\"\n  }\n\n  get ucnConstraint(): string {\n    return `(${this.ucn})`\n  }\n\n  get immutableColumnNames(): string[] {\n    return uniq([...this.ucnFieldNames(), \"id\", \"createdAt\"])\n  }\n\n  onConflictClause(cols: string[]) {\n    const skip = this.immutableColumnNames\n    const doUpdate = cols\n      .filter(ea => !skip.includes(ea))\n      .sort()\n      .map(ea => `${ea}=excluded.${ea}`)\n      .join(\",\")\n    // https://sqlite.org/lang_UPSERT.html\n    const onConflictArr = [\"ON CONFLICT\", this.ucnConstraint]\n    if (blank(doUpdate)) {\n      onConflictArr.push(\"DO NOTHING\")\n    } else {\n      onConflictArr.push(\"DO UPDATE SET\", doUpdate)\n    }\n    return onConflictArr.join(\" \")\n  }\n\n  #upsertDbJson(jsons: Record<keyof M, DbValue>[]) {\n    const insert = this.query().insert(jsons).toSQL()\n    const setKeys = new Set<string>()\n    for (const json of jsons) {\n      for (const key of keys(json)) {\n        setKeys.add(key)\n      }\n    }\n    const sql = insert.sql + \" \" + this.onConflictClause([...setKeys.values()])\n    const upsert = { sql, bindings: insert.bindings as Knex.Value[] }\n    // NOTE: lastInsertRowid DOES NOT WORK HERE, as the ID will be from a\n    // prior insert if the ON CONFLICT clause runs.\n    this.run(upsert)\n    for (const json of jsons) {\n      const prior = this.$cachedByJson(json)\n      if (prior != null) {\n        this.#assign(prior, this.model.fromJSON(json as any))\n      }\n    }\n  }\n\n  $pickModelUcn(m: Model): Maybe<PartialPojo<M>> {\n    const result: any = {}\n    for (const key of this.ucnFieldNames()) {\n      const v = (m as any)[key]\n      if (v == null) return\n      result[key] = v\n    }\n    return result\n  }\n\n  reloadOne(m: M): Maybe<M> {\n    if (this.#deletedIds.has((m as any).id)) return\n    const bk = this.$pickModelUcn(m)\n    if (bk != null) {\n      // m should win\n      const result = this.#maybeCache(m)\n      const fromDb = this.findOneBy(bk)\n      this.#assign(result, fromDb)\n      if (result !== m) {\n        this.#assign(m, result)\n      }\n      return result\n    } else {\n      this.#logger.warn(\".reloadOne(): failed to reload \" + stringify(m))\n      return // no business key: TODO: throw?\n    }\n  }\n\n  reload(arr: M[]): M[] {\n    return compact(arr.map(ea => this.reloadOne(ea)))\n  }\n\n  upsert(arr: (M | PartialPojo<M>)[], skipReturn = false): M[] {\n    if (!this.modelSupportsUpsert) {\n      return arr.map(ea => this.insertOrUpdateOne(ea))\n    }\n\n    const cols = this.columnNames()\n    const result: M[] = []\n    for (const batchArr of batches(\n      toA(arr),\n      Settings.dbBatchUpsertSize.valueOrDefault\n    )) {\n      const models = compact(batchArr.map(ea => this.fromJSON(ea)))\n      for (const ea of models) {\n        ea.$beforeUpsert()\n      }\n      this.#upsertDbJson(models.map(ea => ea.$toDbJSON(cols)))\n\n      for (const ea of models) {\n        const m = skipReturn ? ea : this.reloadOne(ea) ?? ea\n        m.$afterUpsert()\n        result.push(m)\n      }\n    }\n    return result\n  }\n\n  delete(ids: number[]): Maybe<RunResult> {\n    const arr = toA(ids).filter(gt0)\n    for (const ea of arr) {\n      this.#deletedIds.add(ea)\n    }\n    this.#cache.deleteValueIf(ea => arr.includes(ea.id!))\n    return this.run(this.model.query().delete().whereIn(\"id\", arr))\n  }\n\n  /**\n   * @param q the query will have an .orderBy(\"id\", \"asc\") added.\n   */\n  batched(opts: {\n    onResults: (arr: M[]) => any\n    qb: (q: Knex.QueryBuilder) => Knex.QueryBuilder\n  }) {\n    const limit = Settings.dbBatchSelectSize.valueOrDefault\n    let prior: Maybe<M[]>\n    let maxId: Maybe<number>\n    do {\n      prior = this.allf(q => {\n        q = opts.qb(q)\n        if (maxId != null) q = q.andWhere(\"id\", \">\", maxId)\n        return q.orderBy(\"id\", \"asc\").limit(limit)\n      })\n      if (isNotEmpty(prior)) {\n        maxId = Math.max(...prior.map(ea => ea.id!))\n        opts.onResults(prior)\n      }\n    } while (isNotEmpty(prior))\n  }\n}\n","import { Knex } from \"knex\"\nimport { ending } from \"../../core/async/Endable\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { identity } from \"../../core/Object\"\nimport { blank } from \"../../fe/Blank\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { PartialPojo } from \"../db/PartialPojo\"\nimport { TimestampedModel } from \"./TimestampedModel\"\n\n// TODO: rebuild, rebuild-assets (just rebuilds assets), sync-asset, ...\nexport const OperationNames = strEnum(\n  \"rebuildLibrary\",\n  \"forceRestartSync\",\n  \"enqueueAssetFileUpdates\",\n  \"enqueueAssetUpdates\",\n  \"applyNewTagger\",\n  // Actually exclude all excluded assets:\n  \"applyExcluded\",\n  // Actually delete all assets marked as deleted:\n  \"applyDeleted\"\n)\nexport type OperationName = StrEnumKeys<typeof OperationNames>\n\nconst logger = lazy(() => mkLogger(\"model.Operation\"))\n\n// TODO: REPLACE \"Operations\" with non-transient events?\n\nexport class Operation extends TimestampedModel {\n  static override readonly $tableName = \"Operation\"\n  static override readonly $uniqueColumnName = \"id\"\n  name!: OperationName\n  value?: string\n  version?: number\n  completedAt?: number\n\n  static incomplete() {\n    return this.ops().allf(q =>\n      q.whereIn(\"id\", q2 =>\n        q2.table(Operation.$tableName).min(\"id\").whereNull(\"completedAt\")\n      )\n    )\n  }\n\n  /**\n   * Ensure there's an incomplete/pending Operation with the given attributes\n   */\n  static ensurePendingOp(Obj: Pick<Operation, \"name\" | \"value\">): Operation {\n    return Operation.getFirstPendingOp(Obj) ?? Operation.ops().insertOne(Obj)\n  }\n\n  static getFirstPendingOp(crit?: PartialPojo<Operation>) {\n    return logger().tap({\n      msg: \"getFirstPendingOp\",\n      level: \"info\",\n      result: this.ops().firstf(q => {\n        // We want the earliest incomplete op (order by id desc)\n        const result = q.whereNull(\"completedAt\").orderBy(\"createdAt\", \"asc\")\n        return crit != null ? result.andWhere(crit) : result\n      }),\n      meta: { crit }\n    })\n  }\n\n  static markOpCompleted(\n    crit: Pick<Operation, \"name\" | \"value\" | \"version\">,\n    update?: Pick<Operation, \"value\">\n  ) {\n    if (blank(crit?.name))\n      return logger().throw(\"markOpCompleted(): bad query\", { crit })\n    return this.dbl.runf(q =>\n      q\n        .whereNull(\"completedAt\")\n        .andWhere(crit)\n        .update({ completedAt: Date.now(), ...update })\n    )\n  }\n\n  static async applyIfPending<T>(\n    crit: Pick<Operation, \"name\" | \"value\" | \"version\">,\n    f: (op: Operation) => Promise<T>\n  ): PromiseMaybe<T> {\n    const op = this.ops().firstf(q => q.whereNull(\"completedAt\").andWhere(crit))\n    logger().info(\"applyIfPending()\", { crit, op })\n    return op == null ? undefined : f(op)\n  }\n\n  static async applyOnce<T>(\n    crit: Pick<Operation, \"name\" | \"value\" | \"version\">,\n    f: (op: Operation) => SyncOrAsync<T>,\n    qb: (ea: Knex.QueryBuilder) => Knex.QueryBuilder = identity\n  ): PromiseMaybe<T> {\n    const priorCompleted = this.ops().firstf(q =>\n      qb(q.whereNotNull(\"completedAt\").andWhere(crit))\n    )\n\n    if (priorCompleted != null) {\n      logger().debug(\"applyOnce(): already done\", { priorCompleted })\n      return\n    }\n    const op = this.ops().insertOne(crit)\n    const result = await f(op)\n    if (!ending()) {\n      op.upsert({ completedAt: Date.now() })\n    }\n    return result\n  }\n}\n","import { hostname } from \"os\"\nimport { pid } from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { InternalErrorFlag } from \"../../core/error/ErrorFlags\"\nimport { isRaspberryPi } from \"../../core/platform/isRaspberryPi\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { maxCpus } from \"../../core/work/MaxCpus\"\nimport { compactBlanks, isNotEmpty } from \"../../fe/Array\"\nimport { dayMs, secondMs } from \"../../fe/Date\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, MaybePromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { fromEntries, omit } from \"../../fe/Object\"\nimport { parseJSON } from \"../../fe/ParseMaybe\"\nimport { thenCollect } from \"../../fe/Promise\"\nimport { compressWhitespace } from \"../../fe/String\"\nimport { ProgressState, SyncStatus } from \"../../fe/api/ProgressState\"\nimport { toA } from \"../../fe/toA\"\nimport { assignFromJSON } from \"./ModelJson\"\nimport { Operation, OperationNames } from \"./Operation\"\nimport {\n  ProgressMeta,\n  ProgressMetaName,\n  ProgressMetaRecord\n} from \"./ProgressMeta\"\nimport { TableName } from \"./TableName\"\nimport { TimestampedModel } from \"./TimestampedModel\"\n\nconst logger = lazy(() => mkLogger(\"model.Tag\"))\n\nexport interface ProgressPojo extends ProgressState {\n  id: number\n  uri: string\n  completedAt?: number\n}\n\nexport type ProgressUpdatePojo = Omit<ProgressState, \"volume\" | \"uri\"> &\n  Pick<Progress, \"updatedAt\" | \"completedAt\">\n\n// Slower progress rate if we don't have free CPUs:\nexport const ProgressRateMs = lazy(\n  () => secondMs * (isRaspberryPi() || maxCpus() <= 3 ? 5 : 2)\n)\n\nexport interface ProgressTimes {\n  uri: string\n  lastProgressId: number\n  lastStartedAt: number\n  lastUpdatedAt: number\n  lastCompletedAt: Maybe<number>\n}\n\nconst ProgressTimesQuery = compressWhitespace(`\nSELECT\n  p1.uri,\n  p1.id as lastProgressId,\n  p1.createdAt as lastStartedAt,\n  p1.updatedAt as lastUpdatedAt,\n  p3.lastCompletedAt\nFROM\n  Progress AS p1\n  JOIN (\n    SELECT\n      uri,\n      max(updatedAt) AS lastUpdatedAt\n    FROM\n      Progress\n    WHERE createdAt > :minCreatedAt\n    GROUP BY\n      1\n  ) AS p2 ON p1.uri = p2.uri\n  AND p1.updatedAt = p2.lastUpdatedAt\n  LEFT JOIN (\n    SELECT\n      uri,\n      max(completedAt) AS lastCompletedAt\n    FROM\n      Progress\n    WHERE\n      createdAt > :minCreatedAt\n      AND CAST(completedAt AS int) > 0\n    GROUP BY\n      1\n  ) AS p3 ON p1.uri = p3.uri\nWHERE p1.createdAt > :minCreatedAt\nGROUP BY\n  p1.uri`)\n\nfunction stringifyDek(dek: string[]) {\n  return stringify(compactBlanks(toA(dek)))\n}\n\nexport function defaultMinCreatedAt() {\n  const d = Settings.progressStaleDays.valueOrDefault\n  return d <= 0 ? 0 : Date.now() - d * dayMs\n}\n\n/**\n * Holds per-volume information rendered to the UI by progress-panel. We delete\n * records older than 90 days, so we expect max ~ new sync job every hour: 2,160\n * rows (so we only bother with an index on updatedAt to help performance of\n * ProgressRouter)\n */\nexport class Progress\n  extends TimestampedModel\n  implements Omit<ProgressPojo, \"id\">\n{\n  static override readonly $tableName: TableName = \"Progress\"\n  static override readonly $uniqueColumnName = \"id\" as const\n  uri!: string\n  hostname!: string\n  pid!: number\n  volume!: string\n  state?: SyncStatus\n  hed?: string\n  dekJSON?: string\n  completePct?: number\n  incompletePct?: number\n  scanningPct?: number\n  completedAt?: number\n\n  // we only look back 30 days for last-started-at times\n  static vacuum(\n    staleMs = Settings.progressRetentionDays.valueOrDefault * dayMs\n  ) {\n    const staleAt = Date.now() - staleMs\n    const victimIds = this.dbl.pluckAllf<number>(q =>\n      q.select(\"id\").where(\"createdAt\", \"<=\", staleAt)\n    )\n\n    const metaVictimIds = ProgressMeta.dbl.pluckAllf<number>(q =>\n      q.select(\"id\").whereIn(\"progressId\", victimIds)\n    )\n    ProgressMeta.ops().delete(metaVictimIds)\n    Progress.ops().delete(victimIds)\n  }\n\n  // don't cache this! Operations can be completed!\n\n  static minCreatedAt() {\n    const op = Operation.getFirstPendingOp({\n      name: OperationNames.forceRestartSync\n    })\n    return logger().tap({\n      msg: \"minCreatedAt\",\n      level: \"info\",\n      result: op?.createdAt ?? defaultMinCreatedAt(),\n      meta: { op }\n    })\n  }\n\n  static times(): Promise<ProgressTimes[]> {\n    const minCreatedAt = this.minCreatedAt()\n    return logger().tap({\n      msg: \"times()\",\n      result: this.dbl.all({\n        sql: ProgressTimesQuery,\n        bindings: { minCreatedAt }\n      }) as any,\n      meta: { minCreatedAt }\n    })\n  }\n\n  static async saveSyncState(sync: {\n    progress: () => MaybePromiseMaybe<Progress | Progress[]>\n  }): Promise<Progress[]> {\n    return thenCollect(toA(await sync.progress()), ea => {\n      if (ea.state === \"done\" && ea.completedAt == null) {\n        ea.completedAt = Date.now()\n      }\n      if (ea.id == null) {\n        return logger().throw(\n          \"saveSyncState() returned an unsaved Progress\" + InternalErrorFlag,\n          ea\n        )\n      }\n      return ea.upsert()\n    })\n  }\n\n  static insertNew(\n    obj: { uri: string; volume: string } & Partial<\n      Omit<ProgressPojo, \"uri\" | \"volume\">\n    >\n  ) {\n    const dekJSON = map(obj.dek, stringify)\n    return this.ops().insertOne({\n      ...omit(obj, \"dek\"),\n      pid,\n      hostname: hostname(),\n      dekJSON\n    })\n  }\n\n  // TODO: save recent asset ids to the db in this table, instead of requiring a\n  // query?\n\n  toSyncState(): ProgressPojo {\n    return {\n      id: this.id!,\n      uri: this.uri,\n      volume: this.volume,\n      state: this.state,\n      hed: this.hed,\n      dek: this.dek,\n      completePct: this.completePct,\n      incompletePct: this.incompletePct,\n      scanningPct: this.scanningPct\n    }\n  }\n\n  get dek(): string[] {\n    return compactBlanks(parseJSON<string>(this.dekJSON))\n  }\n\n  set dek(arr: string[]) {\n    this.dekJSON = stringifyDek(arr)\n  }\n\n  assignFromPojo(Obj: ProgressUpdatePojo) {\n    return assignFromJSON(this, omit(Obj as any, \"volume\", \"uri\"))\n  }\n\n  getThisMeta() {\n    return ProgressMeta.ops().allf(q =>\n      q.where({ progressId: this.id! }).orderBy(\"createdAt\")\n    )\n  }\n\n  getPriorIncompleteProgress() {\n    const minCreatedAt = Progress.minCreatedAt()\n    const prior = Progress.ops().firstf(q =>\n      q\n        .where({ hostname: this.hostname, uri: this.uri })\n        .andWhere(\"createdAt\", \">\", minCreatedAt)\n        .orderBy(\"updatedAt\", \"desc\")\n        .limit(1)\n    )\n    if (prior?.completedAt != null) {\n      return this.logger().tap({\n        msg: \"priorIncompleteProgress(): last Progress was complete\",\n        result: undefined,\n        meta: { prior }\n      })\n    } else {\n      return this.logger().tap({\n        msg: \"priorIncompleteProgress()\",\n        result: prior\n      })\n    }\n  }\n\n  getPriorIncompleteMeta() {\n    return this.getPriorIncompleteProgress()?.getThisMeta()\n  }\n\n  getMeta() {\n    const thisMeta = this.getThisMeta()\n    if (isNotEmpty(thisMeta)) {\n      return thisMeta\n    } else {\n      const priorMeta = this.getPriorIncompleteMeta()\n      if (isNotEmpty(priorMeta)) {\n        this.logger().info(\"getMeta(): inheriting prior progress\", priorMeta)\n        return ProgressMeta.ops().upsert(\n          priorMeta.map(ea => ({\n            progressId: this.id,\n            name: ea.name,\n            value: ea.value\n          })),\n          false\n        )\n      } else {\n        this.logger().info(\"getMeta(): no relevant prior progress\")\n        return []\n      }\n    }\n  }\n\n  setMeta(name: ProgressMetaName, value: string) {\n    this.logger().debug(\"setMeta()\", { progressId: this.id, name, value })\n    return ProgressMeta.ops().upsertOne({ progressId: this.id, name, value })\n  }\n\n  deleteMeta(...names: ProgressMetaName[]) {\n    this.logger().debug(\"deleteMeta()\", { progressId: this.id, names })\n    return ProgressMeta.dbl.runf(q =>\n      q.whereIn(\"name\", names).andWhere({ progressId: this.id }).delete()\n    )\n  }\n\n  deleteAllMeta() {\n    this.logger().debug(\"deleteAllMeta()\", { progressId: this.id })\n    return ProgressMeta.dbl.runf(q => q.where({ progressId: this.id }).delete())\n  }\n\n  getMetaAsRecord(): ProgressMetaRecord {\n    return this.logger().tap({\n      msg: \"getMetaAsRecord()\",\n      result: fromEntries(this.getMeta().map(ea => [ea.name, ea.value])) ?? {}\n    })\n  }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\nimport { TimestampedModel } from \"./TimestampedModel\"\n\nexport const ProgressMetaNames = strEnum(\n  \"lastScannedDirectory\",\n  \"scannedDirectoryCount\",\n  \"completedDirectoryScan\",\n  \"enqueuedStaleFiles\",\n  \"processedImageCount\",\n  \"processedVideoCount\",\n  \"completedDirectorySync\"\n)\nexport type ProgressMetaName = StrEnumKeys<typeof ProgressMetaNames>\n\nexport class ProgressMeta extends TimestampedModel {\n  static override readonly $tableName = \"ProgressMeta\"\n  static override readonly $uniqueColumnName = \"progressId,name\"\n  name!: ProgressMetaName\n  value!: string\n}\n\nexport type ProgressMetaRecord = Record<ProgressMetaName, string>\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { ee } from \"../../core/event/EventEmitter\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { SimpleFile } from \"../../core/fs/SimpleFile\"\nimport { isBadSha } from \"../../core/img/AssetPreviewBuilder\"\nimport { isEmpty, uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { DbRequest } from \"../db/DbRequest\"\nimport { modelDb } from \"./ModelDb\"\n\n// This is implementation doesn't extend from Model as it doesn't have an ID or\n// timestamps (or anything, really)\n\nconst logger = lazy(() => mkLogger(\"model.ShaBlocklist\"))\n\nconst dbr = lazy(() => new DbRequest(modelDb, \"ShaBlocklist\"))\n\nexport async function notBlocklistedSha(file: string | SimpleFile) {\n  if (modelDb() == null) return null\n  const result = isShaBlockslisted(await PosixFile.for(file).sha())\n  return result == null ? null : !result\n}\nexport function isShaBlockslisted(sha: Maybe<string>) {\n  if (modelDb() == null || blank(sha)) return false\n  return logger().tap({\n    msg: \"isShaBlockslisted\",\n    result: null != dbr().pluckFirstf(q => q.where({ sha }).limit(1)),\n    meta: { sha }\n  })\n}\n\nexport async function upsertFileToShaBlockslist(file: string | SimpleFile) {\n  if (modelDb() == null) return\n  const sha = await PosixFile.for(file).sha()\n  return sha == null ? undefined : upsertToShaBlockslist(sha)\n}\n\nexport function upsertToShaBlockslist(...shas: string[]) {\n  if (modelDb.prior() == null) return\n  const data = uniq(shas).map(sha => ({ sha }))\n  return isEmpty(data) ? undefined : dbr().upsert(q => q.insert(data))\n}\n\nexport const listenForInvalidFiles = lazy(() => {\n  ee().on(\"invalidFile\", upsertFileToShaBlockslist)\n})\n\nexport const installBadShaShim = lazy(() => {\n  isBadSha.setShim(isShaBlockslisted)\n})\n","import { Knex } from \"knex\"\nimport { ee } from \"../../core/event/EventEmitter\"\nimport { lazy, MemoizedThunk } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { prngOrderByClause } from \"../../core/math/PRNG\"\nimport { mapGt0 } from \"../../core/Number\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { ShortCommandTimeoutMs } from \"../../core/ShortCommandTimeoutMs\"\nimport { includesIgnoreCase } from \"../../core/String\"\nimport { joinTagPath, splitTagPath, TagSep } from \"../../core/tags/TagPaths\"\nimport { AssetId, PathTag } from \"../../fe/api/Asset\"\nimport {\n  ApiTag,\n  BeforeAfterStreamLimit,\n  ChildTagCriteria,\n  TagAssetsCriteria,\n  TagPath,\n  TagRef,\n  TagRoots,\n  ThumbsPerSample\n} from \"../../fe/api/Tag\"\nimport { compact, compactBlanks, isEmpty } from \"../../fe/Array\"\nimport { blank, mapNotBlank, toNotBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { eql } from \"../../fe/Eql\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, mapNumeric } from \"../../fe/Number\"\nimport { cmp } from \"../../fe/Primitive\"\nimport { thenCollect } from \"../../fe/Promise\"\nimport { compressWhitespace } from \"../../fe/String\"\nimport { fmt, plur } from \"../../fe/Units\"\nimport { Roots } from \"../curators/Taggers\"\nimport { knex } from \"../db/Knex\"\nimport { PartialPojo } from \"../db/PartialPojo\"\nimport { Asset } from \"./Asset\"\nimport { toAssetId } from \"./AssetId\"\nimport { AssetTag } from \"./AssetTag\"\nimport { TableName } from \"./TableName\"\nimport { TaggedAssetStream } from \"./TaggedAssetStream\"\nimport { TimestampedModel } from \"./TimestampedModel\"\n\nfunction orderBy(builder: Knex.QueryBuilder) {\n  return builder.orderByRaw(\"COALESCE(ordinal, _path) COLLATE NOCASE\")\n}\n\nconst logger = lazy(() => mkLogger(\"model.Tag\"))\n\nlater(() => {\n  ee().on(\"clearCache\", () => Tag.clear())\n  ee().on(\"clearDbCache\", () => Tag.clear())\n})\n\nconst AssetCountForTag = compressWhitespace(\n  \"WITH RECURSIVE descendants(id) AS (\",\n  \"  VALUES (:tagId)\",\n  \"  UNION\",\n  \"  SELECT Tag.id\",\n  \"  FROM Tag, descendants\",\n  \"  WHERE Tag.parentId = descendants.id\",\n  \")\",\n  \"SELECT\",\n  \"  count(DISTINCT Asset.id) AS assetCount\",\n  // \"  count(DISTINCT AssetFile.id) AS assetFileCount\",\n  \"FROM\",\n  \"  descendants\",\n  \"  JOIN AssetTag ON AssetTag.tagId = descendants.id\",\n  \"  JOIN Asset ON Asset.id = AssetTag.assetId\",\n  // \"  JOIN AssetFile ON AssetFile.assetId = Asset.id\",\n  \"WHERE\",\n  \"  Asset.shown = 1\",\n  \"  AND Asset.hidden = 0\",\n  \"  AND Asset.excludedAt IS NULL\",\n  \"  AND Asset.deletedAt IS NULL\"\n)\n\nexport class Tag extends TimestampedModel implements TagRef {\n  static override readonly $tableName: TableName = \"Tag\"\n  static override readonly $uniqueColumnName = \"_path\"\n  // Attempt to fix foreign key constraints failures error from @avdp:\n  // \"sql\":\"insert into Tag (_displayName, _path, assetCount, createdAt, id,\n  // ordinal, parentId, updatedAt) values (?, ?, ?, ?, ?, ?, ?, ?) ON CONFLICT\n  // (_path) DO UPDATE SET\n  // _displayName=excluded._displayName,assetCoun…tId,updatedAt=excluded.updatedAt\",\"bindings\":[\"Jan\",\"fs\\u001f\",0,1691671043786,3,12,2,1691671999051]}}\n  static override readonly $useCache = false\n\n  static readonly cmp = (a: Tag, b: Tag) =>\n    cmp(\n      [a.ordinal ?? Number.MAX_SAFE_INTEGER, ...a.path],\n      [b.ordinal ?? Number.MAX_SAFE_INTEGER, ...b.path]\n    )\n\n  static clear() {\n    this.root.unset()\n    this.roots.unset()\n    this._upsertDefaultRoots.unset()\n  }\n\n  static validate_() {\n    for (const bad of this.ops().allf(q => q.whereRaw(\"id = parentId\"))) {\n      logger().warn(\n        `Tag ${bad.id} has itself as parentId. Attempting to fix...`\n      )\n      const parentPath = bad.path.slice(0, -1)\n      const parent = isEmpty(parentPath)\n        ? undefined\n        : this.findOrCreate(parentPath)\n      bad.upsert({ parentId: parent?.id ?? null })\n    }\n    for (const ea of Tag.roots()) {\n      ea.validate_([])\n    }\n  }\n\n  validate_(expectedParentPath: string[]) {\n    const path = this.path\n    if (!eql(path.slice(0, -1), expectedParentPath)) {\n      throw new Error(\n        `Tag:${this.id} path ${path.join(\n          \"/\"\n        )} does not match expected parent ${expectedParentPath.join(\"/\")}`\n      )\n    }\n    for (const ea of this.getChildren()) {\n      ea.validate_(path)\n    }\n  }\n\n  static cacheTags(arr: Tag[]) {\n    return arr.map(ea => this.cacheTag(ea))\n  }\n\n  static cacheTag(tag: Maybe<Tag>): Maybe<Tag> {\n    // if (tag != null) this.recentTagsByPath.set(tag._path, tag)\n    if (tag?.parentId === 0) {\n      this.root.unset()\n    }\n    return tag\n  }\n\n  static readonly root = lazy(() => {\n    const root = new Tag()\n    root.id = 0\n    // root.name = \"\" // DON'T SET .name, it's always derived from _path.\n    root._path = TagSep\n    root.parentId = undefined\n    root.children = Tag.roots().filter(\n      ea =>\n        !includesIgnoreCase(Settings.hiddenHomeTags.valueOrDefault, ea.name) &&\n        !includesIgnoreCase(\n          Settings.hiddenHomeTags.valueOrDefault,\n          ea.description ?? \"\"\n        )\n    )\n    root.ancestors = []\n    root.assetCount = Asset.shownCount()\n    root.upsert = () => {\n      throw new Error(\"upsert not supported on root\")\n    }\n    return root\n  }, ShortCommandTimeoutMs) // so Tag.roots() gets refreshed\n\n  private static readonly _upsertDefaultRoots = lazy(() =>\n    Tag.ops().upsert(\n      Roots.map(\n        ea =>\n          ({\n            _path: joinTagPath([ea.name]),\n            ordinal: ea.ordinal\n          }) as PartialPojo<Tag>\n      )\n    )\n  )\n\n  static withNullAssetCount(): number[] {\n    return Tag.dbl.pluckAll({\n      sql: compressWhitespace(\n        \"WITH RECURSIVE ancestors(id) AS (\",\n        \"  SELECT id FROM Tag where assetCount IS NULL\",\n        \"  UNION ALL\",\n        \"  SELECT Tag.parentId as id\",\n        \"  FROM Tag, ancestors\",\n        \"  WHERE Tag.id = ancestors.id\",\n        \")\",\n        \"SELECT distinct(id)\",\n        \"FROM ancestors\"\n      )\n    })\n  }\n\n  static selfAndAncestorIds(ids: number[]): number[] {\n    return Tag.dbl.pluckAll({\n      sql: compressWhitespace(\n        \"WITH RECURSIVE ancestors(id) AS (\",\n        `  SELECT id FROM Tag where assetCount in (${ids\n          .filter(gt0)\n          .join(\",\")})`,\n        \"  UNION ALL\",\n        \"  SELECT Tag.parentId as id\",\n        \"  FROM Tag, ancestors\",\n        \"  WHERE Tag.id = ancestors.id\",\n        \")\",\n        \"SELECT distinct(id)\",\n        \"FROM ancestors\"\n      )\n    })\n  }\n\n  static updateAssetCount(tagId: number) {\n    if (!gt0(tagId)) return\n    const assetCount = Tag.dbl.pluckFirst({\n      sql: AssetCountForTag,\n      bindings: { tagId }\n    })\n    Tag.dbl.runf(q =>\n      q.update({ assetCount, updatedAt: Date.now() }).where({ id: tagId })\n    )\n    logger().debug(\"Updated asset counts for tag \", { tagId, assetCount })\n  }\n\n  // afterUpsert will only clear this if new root tags are added\n  static readonly roots = lazy<Tag[]>(() => {\n    Tag._upsertDefaultRoots() // < this is lazy, so\n    const tags = Tag.ops().all(orderBy(Tag.query().whereNull(\"parentId\")))\n    tags.forEach(ea => {\n      ea.parentId = undefined\n      ea.ancestors = []\n      Tag.cacheTag(ea)\n    })\n    return tags\n  }, ShortCommandTimeoutMs) // < TTL is important! Without this, tag counts don't update!\n\n  static #newTag(tagPath: TagPath): Tag {\n    const t = new Tag()\n    t._path = joinTagPath(tagPath)\n    const d = tagPath[tagPath.length - 1] as any\n    if (typeof d === \"object\") {\n      mapNotBlank(d.displayName, ea => (t._displayName = ea))\n      mapNumeric(d.ordinal, ea => (t.ordinal = ea))\n      mapNotBlank(d.description, ea => (t.description = ea))\n      mapNumeric(d.releasedAt, ea => (t.releasedAt = ea))\n    }\n    return t\n  }\n\n  static findByIdOrPath(tagId: Maybe<number>, tagPath: string[]) {\n    return tagId === 0\n      ? Tag.root()\n      : gt0(tagId)\n      ? this.findById(tagId)\n      : this.findByPath(tagPath)\n  }\n\n  static findById(tagId: number) {\n    return tagId === 0 ? Tag.root() : this.ops().findById(tagId)\n  }\n\n  static findByPath(tagPath: TagPath): Maybe<Tag> {\n    if (isEmpty(tagPath)) return Tag.root()\n    const _path = joinTagPath(tagPath)\n    return this.ops().firstf(q => q.whereLike(\"_path\", _path))\n    // return Tag.recentTagsByPath.getOrSet(_path, () =>\n    //   map(\n    //     // LIKE gives us case insensitivity:\n    //     this.ops().firstf(q => q.whereLike(\"_path\", _path)),\n    //     ea => Tag.tagById.set(ea.id!, ea)\n    //   )\n    // )\n  }\n\n  static getPagedAssets(tagId: number, crit: TagAssetsCriteria) {\n    const t = new Tag()\n    t.id = tagId\n    return t.getPagedAssetIds(crit)\n  }\n\n  static findOrCreate(tagPath: TagPath): Tag {\n    if (isEmpty(tagPath)) {\n      throw new Error(\"empty tagPath\")\n    }\n    // const path = joinTagPath(tagPath, \"/\")\n    const prior = this.findByPath(tagPath) as Tag\n    // this.logger().debug(\"_findOrCreate(\" + path + \")\", { prior })\n    if (prior != null) {\n      return prior\n    }\n\n    const newTag = this.#newTag(tagPath)\n    const parent =\n      newTag.depth <= 1 ? undefined : this.findOrCreate(tagPath.slice(0, -1))\n    map(parent, p => (newTag.parentId = p.id!))\n\n    const result = Tag.cacheTag(this.ops().upsertOne(newTag))!\n    // this.logger().debug(\"_findOrCreate(\" + path + \") upserted\", {\n    //   newTag,\n    //   result,\n    //   parent\n    // })\n    return result\n  }\n\n  id?: number\n  parentId?: number | null\n  ordinal?: number\n\n  // The _path is required and must be unique. It's used for navigation.\n  _path!: string\n\n  // \"_displayName\" is optional, and used when the \"canonical\" name differs from\n  // the \"display\" name.\n\n  // \"_displayName\" allows for more friendly tag names in the UI (for\n  // month name localization or to replace the \"volsha\" in filesystem paths with the label\n  // of the device).\n\n  _displayName?: string\n  description?: string\n  releasedAt?: number\n  assetCount?: number\n\n  parent?: Tag\n  root?: Tag\n  children?: Tag[]\n  ancestors?: Tag[]\n  assets?: Asset[]\n\n  /**\n   * Holds the last-fetched related assets from `getRelatedAssets`\n   */\n  relatedAssets?: Asset[]\n  nextBatchUrl?: string\n\n  clear() {\n    this.parent = undefined\n    this.root = undefined\n    this.children = undefined\n    this.ancestors = undefined\n    this.assets = undefined\n    this.relatedAssets = undefined\n    this.ancestorIds.unset()\n    return this\n  }\n\n  $afterUpsert() {\n    Tag.cacheTag(this)\n  }\n\n  siblingPath(name: string) {\n    return joinTagPath([...this.parentPath, name])\n  }\n\n  changeName(name: string) {\n    return this.changePath(this.siblingPath(name))\n  }\n\n  maybeUpsertDisplayName(displayName: Maybe<string>) {\n    return blank(displayName) || displayName === this._displayName\n      ? undefined\n      : this.upsert({ _displayName: displayName } as any)\n  }\n\n  changePath(newPath: string, finallyClear = true) {\n    const priorPath = this._path\n\n    // If a sibling already exists, they win.\n    const existingSibling = Tag.findByPath(splitTagPath(newPath))\n\n    this.logger().info(\"changePath(): \", {\n      priorPath,\n      newPath,\n      existingSibling\n    })\n\n    try {\n      if (existingSibling == null) {\n        Tag.dbl.runf(q =>\n          q.whereLike(\"_path\", priorPath + \"%\").update({\n            updatedAt: Date.now(),\n            _path: knex().raw(\"REPLACE(_path, ?, ?)\", [priorPath, newPath])\n          })\n        )\n        this._path = newPath\n      } else {\n        // OH NOES. I'm about to get deleted. Give my children to existingSibling.\n        newPath = existingSibling._path // < deal with case insensitivity\n        this.logger().info(\"changePath(): replacing with sibling\", newPath)\n\n        // Make sure my assets are still tagged:\n        AssetTag.dbl.upsert(q =>\n          q.where({ tagId: this.id }).update({ tagId: existingSibling.id })\n        )\n        AssetTag.dbl.runf(q => q.where({ tagId: this.id }).delete())\n\n        // TODO: make this one big batch command instead of doing it in node:\n        for (const ea of this.getChildren()) {\n          ea.changePath(joinTagPath([...existingSibling.path, ea.name]), false)\n        }\n\n        // At this point my child tags will have been either deleted, if they were duplicated by `existingSibling`, or they need to be re-parented:\n        Tag.dbl.runf(q =>\n          q\n            .where({ parentId: this.id })\n            .update({ parentId: existingSibling.id })\n        )\n        this.delete()\n      }\n    } finally {\n      if (finallyClear) Tag.clear()\n    }\n  }\n\n  get name(): string {\n    const p = this.path\n    return p[p.length - 1]\n  }\n\n  get path(): string[] {\n    return splitTagPath(this._path)\n  }\n\n  get displayName() {\n    return toNotBlank(this._displayName) ?? this.name\n  }\n\n  // Watch out for the root tag: it should be [], not [\"\"]!\n  readonly displayPath: MemoizedThunk<string[]> = lazy(() => {\n    const p = this.getParent()\n    return compactBlanks([\n      ...(p == null ? [] : p.displayPath()),\n      this.displayName\n    ])\n  })\n\n  get isRoot(): boolean {\n    return this.id === 0\n  }\n\n  get depth(): number {\n    return this.path.length\n  }\n\n  get parentPath(): string[] {\n    return this.path.slice(0, -1)\n  }\n\n  get sortBy() {\n    return [\n      this.depth,\n      this.ordinal == null ? 2 ** 51 : this.ordinal,\n      this.path.map(ea => ea.toLowerCase())\n    ]\n  }\n\n  $childrenQuery() {\n    return orderBy(Tag.query().where({ parentId: this.id }))\n  }\n\n  $assetsQuery() {\n    return Asset.shownUnhidden()\n      .columns(\"Asset.*\")\n      .join(\"AssetTag\", \"AssetTag.assetId\", \"Asset.id\")\n      .where({ tagId: this.id! })\n  }\n\n  $selectAssetIdColumns(qb: Knex.QueryBuilder): Knex.QueryBuilder {\n    return qb.clearSelect().select({\n      assetId: \"Asset.id\",\n      capturedAtLocal: \"Asset.capturedAtLocal\",\n      updateCount: \"Asset.updateCount\",\n      durationMs: \"Asset.durationMs\"\n    })\n  }\n\n  $assetIdsQuery() {\n    return this.$selectAssetIdColumns(this.$assetsQuery())\n  }\n\n  setAncestors(a: Tag[]) {\n    this.ancestors = a\n    this.parent = a[a.length - 1]\n    map(this.parent, p => p.setAncestors(a.slice(0, -1)))\n  }\n\n  async toApiPathElements(): Promise<PathTag[]> {\n    return thenCollect(this.getAncestorsAndSelf(), ea => ea.toPathTag())\n  }\n\n  toPathTag(): PathTag {\n    return {\n      tagPath: this.path,\n      displayName: this.displayName\n    }\n  }\n\n  toApiTag(): ApiTag {\n    return {\n      tagId: this.id!,\n      tagPath: this.path,\n      displayPath: this.displayPath(),\n      description: this.description,\n      assetCount: this.assetCount!\n      // assetFileCount: this.assetFileCount!\n    }\n  }\n\n  toStringId() {\n    return \"Tag(\" + this.path.join(\"/\") + \")\"\n  }\n\n  getParent() {\n    if (this.isRoot) return undefined\n    if (this.parentId != null && this.parent == null) {\n      return (this.parent = Tag.findById(this.parentId))\n    } else {\n      return this.parent\n    }\n  }\n\n  getPagedChildren(crit: ChildTagCriteria): Tag[] {\n    if (this.id === 0) {\n      // Root tag:\n      const begin = crit.offset ?? 0\n      const end = begin + (crit.limit ?? this.children!.length)\n      return [...this.children!].slice(begin, end)\n    }\n    const q = this.$childrenQuery()\n    mapGt0(crit.offset, offset => {\n      void q.offset(offset)\n    })\n    mapGt0(crit.limit, limit => void q.limit(limit))\n    const result = Tag.ops().all(q)\n    for (const ea of result) Tag.cacheTag(ea)\n    return result\n  }\n\n  getChildrenCount(): number {\n    return this.children != null\n      ? this.children.length\n      : (Tag.dbl.pluckFirstf(q =>\n          (this.isRoot\n            ? q.whereNull(\"parentId\")\n            : q.where({ parentId: this.id })\n          ).count()\n        ) as number)\n  }\n\n  getChildren() {\n    if (!this.isRoot) {\n      this.children = Tag.ops().all(this.$childrenQuery())\n      this.children.forEach(childTag => {\n        childTag.parent = this\n      })\n    }\n    return this.children!\n  }\n\n  link(): string {\n    return \"/tag/\" + this.path.map(encodeURIComponent).join(\"/\")\n  }\n\n  get rootName() {\n    return this.path[0]\n  }\n\n  get ancestorsAndSelf(): Tag[] {\n    return [...this.ancestors!, this]\n  }\n\n  /**\n   * @return nearest parent last\n   */\n  getAncestors() {\n    return (this.ancestors ??= this._getAncestors())\n    //   const result = this._getAncestors()\n    //   const\n    //   const ancestorPaths = ancestry(this.parentPath).map(ea => joinTagPath(ea))\n    //   const cachedAncestors = ancestorPaths.map(ea =>\n    //     Tag.recentTagsByPath.get(ea)\n    //   )\n    //   if (cachedAncestors.every(ea => ea != null)) {\n    //     return (this.ancestors = cachedAncestors as Tag[])\n    //   }\n    //   const q = Tag.query().whereIn(\"_path\", ancestorPaths).orderBy(\"_path\")\n    //   this.ancestors = Tag.ops().all(q)\n    //   Tag.cacheTags(this.ancestors)\n\n    //   this.parent = orElse(\n    //     this.parent,\n    //     this.ancestors[this.ancestors.length - 1]\n    //   )\n    // }\n    // return this.ancestors\n  }\n\n  getAncestorsAndSelf() {\n    return [...this.getAncestors(), this]\n  }\n\n  /**\n   * Doesn't cache ancestors.\n   * @return nearest parent last: [..., grandParent, parent]\n   */\n  _getAncestors() {\n    if (this.parentId === 0 || this.parentId == null) return []\n    return Tag.ops().all({\n      sql: compressWhitespace(\n        \"WITH RECURSIVE cte(id, level) AS (\",\n        \"  VALUES (:tagId, 0)\",\n        \"  UNION ALL\",\n        \"  SELECT Tag.parentId as id, cte.level + 1 as level\",\n        \"  FROM Tag, cte\",\n        \"  WHERE Tag.id = cte.id\",\n        \")\",\n        \"SELECT Tag.*\",\n        \"FROM Tag JOIN cte on cte.id = Tag.id\",\n        \"WHERE Tag.id <> :tagId\",\n        \"ORDER BY cte.level DESC\"\n      ),\n      bindings: { tagId: this.id }\n    })\n  }\n\n  /**\n   * @return nearest parentId last: [..., grandParentId, parentId]\n   */\n  readonly ancestorIds = lazy(() => {\n    if (this.parentId === 0 || this.parentId == null) return []\n    return Tag.dbl.pluckAll<number>({\n      sql: compressWhitespace(\n        \"WITH RECURSIVE cte(id, level) AS (\",\n        \"  VALUES (:tagId, 0)\",\n        \"  UNION ALL\",\n        \"  SELECT Tag.parentId as id, cte.level + 1 as level\",\n        \"  FROM Tag, cte\",\n        \"  WHERE Tag.id = cte.id\",\n        \")\",\n        \"SELECT Tag.id\",\n        \"FROM Tag JOIN cte on cte.id = Tag.id\",\n        \"WHERE Tag.id <> :tagId\",\n        \"ORDER BY cte.level DESC\"\n      ),\n      bindings: { tagId: this.id }\n    })\n  })\n\n  getPagedAssetIds(crit: TagAssetsCriteria): AssetId[] {\n    let q = this.$assetIdsQuery()\n\n    q = q.limit(ThumbsPerSample)\n    if (gt0(crit.offset)) {\n      q = q.offset(crit.offset)\n    }\n    q = q.orderBy([\n      { column: \"capturedAtLocal\", order: \"desc\" },\n      { column: \"assetId\" }\n    ])\n    return compact(Asset.dbl.all(q).map(toAssetId))\n  }\n\n  getAssets() {\n    // reverse chron:\n    const q: any = this.$assetsQuery().orderBy(\"capturedAtLocal\", \"desc\")\n    return Asset.ops().all(q)\n  }\n\n  async assetCountDesc(assets?: Asset[]) {\n    const assetCount = this.assetCount\n    return (\n      (assetCount == null ||\n      assets == null ||\n      assets.length === assetCount ||\n      assets.length === 0\n        ? \"\"\n        : fmt(assets.length) + \" of \") + plur(assetCount!, \"asset\")\n    )\n  }\n\n  readonly firstNonInterstitialTagId: MemoizedThunk<number> = lazy(() => {\n    if (\n      !this.isRoot &&\n      0 === this.directAssetCount() &&\n      1 === this.getChildrenCount()\n    ) {\n      const arr = this.getChildren()\n      if (arr?.length === 1) return arr[0].firstNonInterstitialTagId()\n    }\n    return this.id!\n  })\n\n  readonly directAssetCount = lazy(() =>\n    this.id === 0\n      ? 0\n      : Asset.dbl.pluckFirst<number>(\n          Asset.shownUnhidden()\n            .join(\"AssetTag\", \"AssetTag.assetId\", \"Asset.id\")\n            .where(\"AssetTag.tagId\", this.id)\n            .countDistinct(\"Asset.id\")\n        )\n  )\n\n  getAssetCount(): Promise<number> {\n    // fetching asset file counts more than doubles calculation time:\n    return this.id === 0\n      ? (Tag.dbl.pluckFirst({\n          sql: compressWhitespace(\n            \"SELECT\",\n            \"  count(DISTINCT Asset.id) AS assetCount\",\n            // \"  count(DISTINCT AssetFile.id) AS assetFileCount\",\n            \"FROM\",\n            \"  Asset\",\n            // \"  JOIN AssetFile ON AssetFile.assetId = Asset.id\",\n            \"WHERE\",\n            \"  Asset.shown = 1\",\n            \"  AND Asset.excluded = 0\",\n            \"  AND Asset.hidden = 0\",\n            \"  AND Asset.deletedAt IS NULL\"\n          )\n        }) as any)\n      : Tag.dbl.pluckFirst({\n          sql: AssetCountForTag,\n          bindings: { tagId: this.id }\n        })\n  }\n\n  $assetStreamQuery(asset: Asset, limit: number, op: \"<\" | \"=\" | \">\") {\n    let qb =\n      this.path[0] === TagRoots.When\n        ? Asset.shownUnhidden()\n        : this.$assetsQuery()\n    qb = qb\n      .distinct()\n      .where(\"capturedAtLocal\", op, asset.capturedAtLocal)\n      .andWhereNot(\"Asset.id\", asset.id)\n      .limit(op === \"=\" ? limit * 2 : limit) // in case both sides of the stream are all from the same time (!!!)\n\n    if (op === \"=\") {\n      return qb.orderByRaw(`ABS(Asset.id-${asset.id})`)\n    } else {\n      return qb.orderBy([\n        { column: \"capturedAtLocal\", order: op === \">\" ? \"asc\" : \"desc\" },\n        \"Asset.id\"\n      ])\n    }\n  }\n\n  getAssetStream(asset: Asset, limit: number): TaggedAssetStream {\n    limit = gt0(limit) ? limit : BeforeAfterStreamLimit\n    const [before, same, after] = ([\"<\", \"=\", \">\"] as const).map(op =>\n      compact(\n        Asset.ops()\n          .all(this.$assetStreamQuery(asset, limit, op))\n          .map(toAssetId)\n      )\n    )\n    for (const ea of same) {\n      if (ea.assetId! < asset.id!) {\n        before.push(ea)\n      } else {\n        after.push(ea)\n      }\n    }\n    return new TaggedAssetStream([this], before, after.reverse(), limit)\n  }\n\n  getRelatedAssetIds({\n    seed,\n    limit = ThumbsPerSample\n  }: {\n    seed: number\n    limit?: number\n  }): AssetId[] {\n    const max = Math.max(256, assetCount())\n    const results = compact(\n      AssetTag.dbl\n        .allf(q =>\n          Asset.shownUnhidden(this.$selectAssetIdColumns(q))\n            .distinct()\n            .join(\"Asset\", \"Asset.id\", \"AssetTag.assetId\")\n            .join(\"Tag\", \"Tag.id\", \"AssetTag.tagId\")\n            // TODO: is this faster?\n            // .whereIn(\"AssetTag.assetId\", await this.selfAndDescendantIds(txn))\n            .whereLike(\"_path\", this._path + \"%\")\n            .orderByRaw(\n              prngOrderByClause(seed + orElse(this.id, 0), \"Asset.id\", max)\n            )\n            .limit(limit)\n        )\n        .map(toAssetId)\n    )\n\n    this.logger().debug(\n      this.path + \": Found \" + results.length + \" related assets\"\n    )\n    return results\n  }\n\n  get attrs(): Record<string, string> {\n    return { href: this.link(), title: this.name }\n  }\n}\n\nconst assetCount = lazy(\n  () => Asset.dbl.pluckFirstf<number>(q => q.count()),\n  minuteMs\n)\n","import { isEmpty } from \"../../fe/Array\"\nimport { tag_fts_path, tag_fts_root } from \"../tag/TagFtsFns\"\nimport { Model } from \"./Model\"\nimport { Tag } from \"./Tag\"\n\n// FTS === Full Text Search\n\nexport class TagFts extends Model {\n  static override readonly $tableName = \"tag_fts\"\n  static override readonly $uniqueColumnName = \"rowid\"\n  static override readonly $booleanFields = []\n\n  root?: string\n  path?: string\n\n  static insertFts(tags: Tag[]) {\n    const arr = tags\n      // never need to index root tags:\n      .filter(tag => tag.parentId != null)\n      .map(tag => ({\n        rowid: tag.id,\n        root: tag_fts_root(tag._path),\n        path: tag_fts_path(tag._path)\n      }))\n    return isEmpty(arr) ? undefined : this.dbl.runf(q => q.insert(arr))\n  }\n\n  static async rebuild() {\n    const tn = TagFts.$tableName\n    this.dbl.runScript([`INSERT INTO ${tn}(${tn}) VALUES('delete-all')`])\n    Tag.ops().batched({\n      qb: q => q,\n      onResults: arr => this.insertFts(arr)\n    })\n  }\n}\n","import {\n  diceCoeff,\n  greatestBy,\n  retainFirstN,\n  retainLastN\n} from \"../../core/Array\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { ApiAssetStream, AssetId } from \"../../fe/api/Asset\"\nimport { pushUniqBy } from \"../../fe/Array\"\nimport { sortByInPlace } from \"../../fe/ArraySort\"\nimport { gtOrElse, times } from \"../../fe/Number\"\nimport { cmp } from \"../../fe/Primitive\"\nimport { thenCollect } from \"../../fe/Promise\"\nimport { toA } from \"../../fe/toA\"\nimport { Asset } from \"./Asset\"\nimport { Tag } from \"./Tag\"\n\nexport const cmpAssetAsc = (a: Asset, b: Asset) =>\n  cmp([a.capturedAtLocal, a.id], [b.capturedAtLocal, b.id])\n\nexport const cmpAssetDesc = (a: Asset, b: Asset) =>\n  cmp([b.capturedAtLocal, b.id], [a.capturedAtLocal, a.id])\n\nexport class TaggedAssetStream {\n  readonly logger = () =>\n    mkLogger(\"model.TaggedAssetStream(\" + this.toString() + \")\")\n\n  constructor(\n    readonly tags: Tag[],\n    readonly before: AssetId[],\n    readonly after: AssetId[],\n    readonly limit: number\n  ) {\n    this.logger().info(\"new\", this.toJSON())\n  }\n\n  vacuum() {\n    sortByInPlace(this.before, a => [-a.capturedAtLocal, -a.assetId])\n    retainFirstN(this.before, this.limit)\n    sortByInPlace(this.after, a => [-a.capturedAtLocal, -a.assetId])\n    retainLastN(this.after, this.limit)\n  }\n\n  toString() {\n    return this.tags.map(ea => ea.path.join(\"/\")).join(\",\")\n  }\n\n  valueOf() {\n    return this.toString()\n  }\n\n  get length() {\n    return toA(this.before).length + toA(this.after).length\n  }\n\n  leftPad(ids: AssetId[]): AssetId[] {\n    return [\n      ...times(this.limit - ids.length, ea => ({\n        assetId: -(ea + 1),\n        capturedAtLocal: -1,\n        v: 0\n      })),\n      ...ids\n    ]\n  }\n\n  rightPad(ids: AssetId[]): AssetId[] {\n    return [\n      ...ids,\n      ...times(this.limit - ids.length, ea => ({\n        assetId: -(ea + this.limit + 1),\n        capturedAtLocal: -1,\n        v: 0\n      }))\n    ]\n  }\n\n  toJSON() {\n    return {\n      tags: this.tags.map(tag => tag.toString()),\n      assetIdsAfter: this.after,\n      assetIdsBefore: this.before\n    }\n  }\n\n  mergeWith(tas: TaggedAssetStream) {\n    // this.logger().info(\"mergeWith()\", {\n    //   tas: tas.toJSON(),\n    //   beforeIds: this.before.map(briefAsset),\n    //   afterIds: this.after.map(briefAsset)\n    // })\n\n    pushUniqBy(this.tags, tas.tags, ea => ea.path)\n\n    // These are the thumbnails to the right of the current asset:\n    pushUniqBy(this.before, tas.before, ea => ea.assetId!)\n\n    // These are the thumbnails to the left of the current asset:\n    pushUniqBy(this.after, tas.after, ea => ea.assetId!)\n    this.logger().debug(\"mergeWith() complete\", {\n      tas: tas.toJSON(),\n      tags: this.tags.map(ea => ea.path),\n      beforeIds: this.before,\n      afterIds: this.after\n    })\n  }\n\n  async toApi(): Promise<ApiAssetStream> {\n    this.vacuum()\n    return this.logger().tap({\n      msg: \"toApi()\",\n      result: {\n        tags: await thenCollect(this.tags, ea => ea.toApiTag()),\n        assetIdsAfter: this.leftPad(this.after),\n        assetIdsBefore: this.rightPad(this.before)\n      }\n    })\n  }\n\n  streamCoeff(tas: TaggedAssetStream) {\n    return this.logger().tap({\n      msg: \"streamCoeff\",\n      meta: {\n        this: this.tags.map(ea => ea.path),\n        tas: tas.tags.map(ea => ea.path)\n      },\n      result: diceCoeff(\n        [...this.before, ...this.after],\n        [...tas.before, ...tas.after],\n        ea => ea.assetId!\n      )\n    })\n  }\n}\n\nexport function coalesceStreams(\n  streams: TaggedAssetStream[]\n): TaggedAssetStream[] {\n  const minStreamCorr = Settings.minStreamCorrPct.valueOrDefault / 100\n  const result: TaggedAssetStream[] = []\n  const prefilter = streams.filter(ea => ea.length > 5)\n  for (const stream of prefilter) {\n    const nearest = greatestBy(result, ea =>\n      gtOrElse(ea.streamCoeff(stream), minStreamCorr)\n    )\n    if (nearest == null) {\n      result.push(stream)\n    } else {\n      nearest.mergeWith(stream)\n    }\n  }\n  return result\n}\n","import { mapGt0 } from \"../../core/Number\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { gt0, toGt0 } from \"../../fe/Number\"\nimport { toA } from \"../../fe/toA\"\nimport { PartialPojo } from \"../db/PartialPojo\"\nimport { Model, ModelClass } from \"./Model\"\n\nexport class TimestampedModel extends Model {\n  static touch<M extends TimestampedModel>(\n    this: ModelClass<M>,\n    ids: number[],\n    Obj: PartialPojo<M> = {}\n  ) {\n    Obj.updatedAt ??= Date.now()\n    delete Obj.id\n    const arr = toA(ids).filter(gt0)\n    return isEmpty(arr)\n      ? undefined\n      : this.dbl.runf(q => q.whereIn(\"id\", arr).update(Obj))\n  }\n\n  createdAt?: number\n  updatedAt?: number\n\n  get createdAtDate() {\n    return mapGt0(this.createdAt, ea => new Date(ea))\n  }\n\n  get updatedAtDate() {\n    return mapGt0(this.updatedAt, ea => new Date(ea))\n  }\n\n  touch(Obj: PartialPojo<this> = {}) {\n    Obj.updatedAt ??= Date.now()\n    const id = this.id\n    if (id == null) {\n      this.upsert()\n    } else {\n      this.class().dbl.runf(q => q.where({ id }).update(Obj))\n    }\n  }\n\n  override $beforeUpsert() {\n    // overrides should always call super!\n    super.$beforeUpsert()\n    if (this.createdAt == null) {\n      this.createdAt = Date.now()\n    }\n    this.updatedAt = Date.now()\n    if (\"updateCount\" in this) {\n      const obj = this as any\n      const prior = obj.updateCount\n      obj.updateCount = (toGt0(obj.updateCount) ?? 0) + 1\n      this.logger().debug(\"$beforeUpsert(): incr updateCount\", {\n        prior,\n        now: obj.updateCount\n      })\n    }\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Db } from \"../db/Db\"\n\nexport const statsDb = lazy<Db>(() => undefined as any)\n","import { EndableRanks } from \"../../core/async/Endable\"\nimport { EndableInterval } from \"../../core/async/EndableInterval\"\nimport { Schemas, SqliteBase } from \"../../core/db/Schemas\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { isTest } from \"../../core/NodeEnv\"\nimport { isStatsDbMigrator } from \"../../core/ServiceNames\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { Db } from \"../db/Db\"\nimport { statsDb } from \"./StatsDb\"\n\nexport async function statsDbJanitor(dbDir: PosixFile): Promise<Db> {\n  const db = new Db(Schemas.stats, dbDir.join(SqliteBase))\n  // stats are only opened by sync:\n  if (isStatsDbMigrator()) {\n    await db.migrate_()\n    new EndableInterval({\n      name: \"statsDbJanitor vacuum\",\n      callback: () => db.vacuum(),\n      intervalMs: isTest ? 20 * secondMs : 5 * minuteMs,\n      rank: EndableRanks.service\n    })\n  }\n  statsDb.set(db)\n  return db\n}\n","import { Knex } from \"knex\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Logger, mkLogger } from \"../../core/Logger\"\nimport { whyNotSameAsset } from \"../../core/asset-file/AssetFileComparator\"\nimport { thenMap } from \"../../core/async/Promise\"\nimport { time, timedLazy } from \"../../core/async/PromiseTimer\"\nimport { SerialLaterQueue } from \"../../core/async/SerialLaterQueue\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { imageHash } from \"../../core/img/ImageHash\"\nimport { throwIfInvalidFile_ } from \"../../core/img/ValidFile\"\nimport {\n  ForceContext,\n  RequiredForceContext,\n  forceContextOrSetting\n} from \"../../core/settings/ForceContext\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { readTags } from \"../../core/tags/ExifTool\"\nimport { isNotEmpty, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { secondMs } from \"../../fe/Date\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { Asset } from \"../model/Asset\"\nimport { AssetFile } from \"../model/AssetFile\"\n\nexport async function isFileInSync(\n  nativePath: PosixFile | string\n): Promise<boolean> {\n  return new AssetFileFinder(PosixFile.for(nativePath)).alreadySynced()\n}\n\nconst AssetIdCreationMutex = new SerialLaterQueue<number>()\n\nexport class AssetFileFinder {\n  private readonly logger: Logger\n  readonly ctx: RequiredForceContext\n\n  constructor(\n    readonly file: PosixFile,\n    ctx?: ForceContext\n  ) {\n    this.logger = mkLogger(\n      \"sync-file.AssetFileFinder(\" + file.baseWithGrandparent + \")\"\n    )\n    this.ctx = forceContextOrSetting(ctx)\n  }\n\n  async prior() {\n    return this.byUri()\n  }\n\n  async priorIfSynced() {\n    if (this.ctx.forceSync) return undefined\n    const prior = await this.prior()\n    return true === (await prior?.matchesFile()) ? prior : undefined\n  }\n\n  readonly alreadySynced = timedLazy(\n    \"sync-file.AssetFileFinder.alreadySynced: \" + this.file,\n    async () =>\n      this.logger.tap({\n        msg: \"alreadySynced\",\n        result: (await this.priorIfSynced()) != null\n      })\n  )\n\n  readonly newAssetFile_ = timedLazy(\n    \"sync-file.AssetFileFinder.newAssetFile: \" + this.file,\n    async () => {\n      const af = await new AssetFile().updateFromFile_(this.file)\n      if (af == null) {\n        return this.logger.throw(\"AssetFile.updateFromFile returned null\", {\n          fatal: false\n        })\n      } else {\n        return af\n      }\n    }\n  )\n\n  /**\n   * @return a persisted AssetFile if `maybeAsset` resolves to a persisted Asset\n   */\n  async newAssetFileForAsset(maybeAsset: MaybeSyncOrAsync<Asset>) {\n    const asset = await maybeAsset\n    if (asset == null) {\n      // We expect the asset to be undefined if we do a query for a sibling\n      // asset file and miss.\n      return\n    } else if (asset.id == null) {\n      this.logger.throw(\"newAssetFileForAsset(): given non-persisted Asset\")\n    } else {\n      const af = await this.newAssetFile_()\n      asset.addAssetFile(af)\n      af.insert()\n      this.logger.debug(\"newAssetFileForAsset() upsert success!\", { af })\n      return af\n    }\n  }\n\n  async tags_() {\n    const t = await readTags(this.file)\n    if (t == null) {\n      throw new Error(this.file + \" doesn't have metadata\")\n    } else {\n      return t\n    }\n  }\n\n  readonly capturedAt_ = lazy(() => this.tags_().then(ea => ea.capturedAt))\n\n  readonly imageHash = lazy(() =>\n    Settings.useImageHashes.valueOrDefault ? imageHash(this.file) : undefined\n  )\n\n  readonly dominantLabhashes = lazy(() =>\n    thenMap(this.imageHash(), ih =>\n      // the uniq _shouldn't_ be needed, but we're backstopping against prior\n      // bad/buggy means:\n      uniq(ih.dominantColors.filter(ea => ea.pct > 5).map(ea => ea.labhash))\n    )\n  )\n\n  readonly capturedAtLocal = lazy(async () => {\n    const ca = await this.capturedAt_()\n    return this.logger.tap({\n      msg: \"capturedAtLocal\",\n      result: ca?.local,\n      meta: { capturedAt: ca }\n    })\n  })\n\n  readonly mapSibling = (assetFile: Maybe<AssetFile>) =>\n    this.newAssetFileForAsset(assetFile?.getAsset())\n\n  readonly apply_ = timedLazy<Promise<AssetFile>>(\n    \"sync-file.AssetFileFinder: \" + this.file,\n    async () => {\n      if (blank(await this.file.uri_())) {\n        throw new Error(\"Cannot import, file URI is blank for \" + this.file)\n      }\n\n      {\n        // this throws if the file is invalid:\n        const withExistingAsset = await this.byExistingAsset_()\n        if (withExistingAsset != null) {\n          this.logger.info(\"Found existing asset for file\")\n          return withExistingAsset\n        }\n      }\n\n      // this can be done outside the asset id creation mutex:\n      const af = await this.newAssetFile_()\n\n      const assetId = await AssetIdCreationMutex.enqueue(async () => {\n        // did a sibling file make an asset suitable for me while I was\n        // waiting for the mutex?\n        const withExistingAsset = await this.byExistingAsset_()\n        if (withExistingAsset?.assetId != null) {\n          this.logger.info(\n            \"Found existing asset for file after acquiring lock\",\n            { withExistingAsset }\n          )\n          return withExistingAsset.assetId\n        }\n        const asset = new Asset()\n        // NOTE: we're not setting shown = true or version yet, because we haven't\n        // built previews:\n        asset.capturedAtLocal = af.capturedAtLocal\n        asset.addAssetFile(af) // < may adopt capturedAt and rating from this\n        asset.upsert()\n        return asset.id!\n      })\n\n      af.assetId = assetId\n      return af.upsert()\n    }\n  )\n\n  // DO NOT LAZY THIS! WE CALL IT TWICE.\n  private readonly byExistingAsset_ = () =>\n    time(\n      \"sync-file.AssetFileFinder.byExistingAsset: \" + this.file,\n      async () => {\n        const strategies = [\n          // URI is the business key, so if it exists, use that\n          {\n            name: \"byUri\",\n            f: () => this.byUri()\n          },\n          // DON'T THINK \"equivalent\" URIs ARE THE SAME ASSET FILE. You can't change\n          // URIs for existing AssetFiles: that's a different AssetFile!\n          {\n            name: \"byNormalizedPathUri\",\n            f: () => this.newAssetFileForAsset(this.assetByNormalizedPathUri())\n          },\n          // Same file contents must be adopted by the same asset\n          {\n            name: \"bySha\",\n            f: () => this.newAssetFileForAsset(this.assetBySha())\n          },\n          // OK, we haven't seen this SHA, so let's validate tags can be fetched:\n          {\n            name: \"hasTags\",\n            f: async () => {\n              await this.tags_()\n              return undefined\n            }\n          },\n          // OK, we haven't seen this SHA, so let's validate the image.\n          {\n            name: \"validFile\",\n            f: async () => {\n              await throwIfInvalidFile_(this.file)\n              return undefined\n            }\n          },\n          {\n            name: \"byCapturedAtOrImageHash\",\n            f: () =>\n              this.newAssetFileForAsset(this.assetByCapturedAtOrImageHash())\n          }\n        ]\n\n        for (const { name, f } of strategies) {\n          try {\n            const af = await time(\n              \"sync-file.assetFileFinder.\" + name + \": \" + this.file,\n              f\n            )\n            if (af == null) {\n              this.logger.debug(\"apply(): \" + name + \": returned null\")\n            } else {\n              this.logger.info(\"apply(): \" + name, {\n                assetFileId: af.id,\n                assetId: af.assetId\n              })\n              return af\n            }\n          } catch (err) {\n            this.logger.debug(\"apply(): \" + name + \" rejected: \" + err)\n            throw err\n          }\n        }\n        return undefined\n      }\n    )\n\n  // Must not be cached (part of the double-checked advisory lock)\n  async byUri() {\n    const uri = await this.file.uri_()\n    if (uri == null) {\n      this.logger.warn(\"byUri() uri is null\", { file: this.file })\n      return\n    }\n\n    // HEY FUTURE ME: I bet you want to search by SHA, right? DO NOT! The URI\n    // is different, and that's a different AssetFile.\n\n    // AssetFile.URIs are the business key--they can't change!\n\n    return (\n      AssetFile.ops().findOneBy({ uri }) ??\n      AssetFile.ops().findOneBy({ uri: this.file.fileuri() })\n    )\n  }\n\n  assetByNormalizedPathUri() {\n    return thenMap(this.file.normalizedPathUri_(), uri =>\n      Asset.findFirstByFile(qb => qb.where(\"AssetFile.uri\", uri))\n    )\n  }\n\n  // Must not be cached (part of the double-checked advisory lock)\n  assetBySha() {\n    return thenMap(this.file.sha(), sha =>\n      Asset.findFirstByFile(qb => qb.where(\"AssetFile.sha\", sha))\n    )\n  }\n\n  async assetByCapturedAtOrImageHash(): PromiseMaybe<Asset> {\n    const ca = await this.capturedAt_()\n    if (null == ca) {\n      // Note that the CapturedAt might be low quality, but we're never\n      // expecting this to be null (`stat` should be a thing!), so this should\n      // never happen:\n      return this.logger.throw(\"Cannot import, capturedAt is null\")\n    }\n\n    if (Settings.strictDeduping.valueOrDefault) {\n      return this.firstSimilarAsset(\n        AssetFile.ops().allf(q => q.where({ capturedAtLocal: ca.local }))\n      )\n    }\n\n    const limit = Settings.maxContemporaryAdoptionAssets.valueOrDefault\n\n    const qb = () => {\n      let q = AssetFile.query()\n      if (gt0(limit)) q = q.limit(limit)\n      return q.orderByRaw(`abs(capturedAtLocal - ${ca.local})`)\n    }\n\n    const delta = Math.max(\n      secondMs,\n      Settings.minCapturedAtPrecisionDifferentMimetypes.valueOrDefault\n    )\n\n    return time(\n      \"sync-file.AssetFileFinder.assetByCapturedAtAndImageHash: \" + this.file,\n      async () => {\n        {\n          const bounds = ca.localBoundaries({ delta })\n          const result = this.firstSimilarAssetByQuery(\n            \"captured-at\",\n            qb().whereBetween(\"capturedAtLocal\", [bounds.start, bounds.end])\n          )\n          if (result != null) return result\n        }\n\n        const ih = await this.imageHash()\n        if (ih == null) {\n          this.logger.warn(\"assetByCapturedAtAndImageHash: no imageHash\")\n          return\n        }\n        const modes = await this.dominantLabhashes()\n        if (isNotEmpty(modes)) {\n          // Expand the captured-at delta but only for matching dominant colors:\n          const wideBounds = ca.localBoundaries({ delta: delta * 4 })\n          const result = this.firstSimilarAssetByQuery(\n            \"wide captured-at and dominant color\",\n            qb()\n              .whereBetween(\"capturedAtLocal\", [\n                wideBounds.start,\n                wideBounds.end\n              ])\n              .andWhere(b =>\n                b\n                  .whereIn(\"mode0\", modes)\n                  .orWhereIn(\"mode1\", modes)\n                  .orWhereIn(\"mode2\", modes)\n              )\n          )\n          if (result != null) return result\n        }\n        // if it's exactly the same image hash, check those:\n        return this.firstSimilarAssetByQuery(\n          \"image hash\",\n          qb()\n            .where(\"meanHash\", ih.meanHash)\n            .orWhere(\"diffHash\", ih.diffHash)\n            .orWhere(\"dctHash\", ih.dctHash)\n        )\n      }\n    )\n  }\n\n  async firstSimilarAssetByQuery(context: string, qb: Knex.QueryBuilder) {\n    const result = await this.firstSimilarAsset(AssetFile.ops().all(qb))\n    if (result != null) {\n      this.logger.info(\"Found similar asset by \" + context, { result })\n    }\n    return result\n  }\n\n  async firstSimilarAsset(assetFiles: AssetFile[]) {\n    const thisAF = await this.newAssetFile_()\n    const cal = await this.capturedAtLocal()\n    if (thisAF == null) {\n      throw new Error(\"Failed to update from \" + this.file)\n    }\n    // Look at the nearest-captured-at-time first.\n    const sorted = sortBy(assetFiles, af => [\n      mapOr(cal, ea => Math.abs(af.capturedAtLocal - ea), -af.capturedAtLocal),\n      af.id!\n    ])\n\n    for (const af of sorted) {\n      if (af != null) {\n        await af.getNativePath()\n        const siblings = AssetFile.ops().findBy({ assetId: af.assetId })\n        await Promise.all(siblings.map(ea => ea.getNativePath()))\n        const why = whyNotSameAsset(thisAF, af, siblings)\n        if (why == null) {\n          this.logger.info(\"Found sibling AssetFile\", af)\n          return Asset.ops().findById(af.assetId!)\n        } else {\n          this.logger.debug(\n            \"Contemporary assetFile not similar: \" + why,\n            af?.uri\n          )\n        }\n      }\n    }\n    return\n  }\n}\n","import { submitTask_ } from \"../../core/event/SharedState\"\nimport { PosixFile } from \"../../core/fs/PosixFile\"\nimport { SyncFileStates, syncReport } from \"../../core/fs/SyncReport\"\nimport { l, p } from \"../../core/licensing/Licensing\"\nimport { LogLevels } from \"../../core/log/LogLevel\"\nimport { Logger, mkLogger } from \"../../core/Logger\"\nimport { RequiredForceContext } from \"../../core/settings/ForceContext\"\nimport { pathToLibraryAsset } from \"../../core/settings/PathToLibraryAsset\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { readCapturedAt, readTags, sidecarEql } from \"../../core/tags/ExifTool\"\nimport { ensureInferredHistoryRecords } from \"../../core/tags/History\"\nimport { isMimeTypeIncluded } from \"../../core/tags/MimeTypes\"\nimport { readMimeType } from \"../../core/tags/ReadMimeType\"\nimport { mkAssetUrl } from \"../../core/web/WebUrls\"\nimport { compact, isEmpty, uniqBy } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toA } from \"../../fe/toA\"\nimport { PS_LIBRARY_PROTOCOL } from \"../../fe/URI\"\nimport { AssetFile } from \"../model/AssetFile\"\n\nexport async function mayCopyAssetsToLibrary() {\n  return Settings.copyAssetsToLibrary.valueOrDefault && (await p())\n}\n\n/**\n * Stores all found asset files in date-prefixed folder hierarchies.\n */\nexport class AssetFileRepository {\n  private readonly logger: Logger = mkLogger(\"AssetFileRepository\")\n\n  constructor(readonly originalsDir: PosixFile) {}\n\n  async shouldCopy(file: Maybe<PosixFile>) {\n    const whyNot = await this.whyNotCopyFile(file)\n    return this.logger.tap({\n      level: \"info\",\n      msg: \"shouldCopy()\",\n      result: whyNot == null,\n      meta: {\n        file: file?.nativePath,\n        whyNot\n      }\n    })\n  }\n\n  async whyNotCopyFile(src: Maybe<PosixFile>) {\n    if (src == null || blank(src.nativePath)) {\n      return \"blank nativePath\"\n    } else if (!Settings.copyAssetsToLibrary.valueOrDefault || (await l())) {\n      return \"copyAssetsToLibrary is false\"\n    } else if (await src.notExists({ refresh: true })) {\n      return \"file doesn't exist\"\n    } else if (src.isDescendantOf(this.originalsDir)) {\n      return src + \" already contained by \" + this.originalsDir\n    } else if (src.isDescendantOf(Settings.libraryDir.valueOrDefault)) {\n      return src + \" already contained by \" + Settings.libraryDir.valueOrDefault\n    }\n\n    const mt = await readMimeType(src)\n    if (mt == null) {\n      return \"readMimeType(\" + src + \") was null\"\n      // And we don't need to worry about the sidecar, either.\n    } else if (\n      !isMimeTypeIncluded(mt, Settings.copyToLibraryMimeTypes.values)\n    ) {\n      return \"mimetype \" + mt + \" is not included in copyToLibraryMimeTypes\"\n    }\n\n    return null\n  }\n\n  async existingLibraryAssetFile(af: AssetFile) {\n    if (af.uri.startsWith(PS_LIBRARY_PROTOCOL)) return af\n\n    const candidates = uniqBy(\n      toA(af.librarySiblings()?.filter(ea => ea.sha === af.sha)).concat(\n        AssetFile.sameAssetFileInLibrary(af)\n      ),\n      ea => ea.id\n    )\n    for (const prior of candidates) {\n      if (await prior.exists()) {\n        if (prior.assetId !== af.assetId) {\n          this.logger.warn(\n            \"Existing library asset file with a matching SHA is associated to a different asset. Requesting repair of the two impacted assets.\",\n            { af, prior }\n          )\n          const priorAssetId = prior.assetId\n          af.getAsset()?.addAssetFile(prior)\n          void submitTask_(\"repairAsset\", { assetId: priorAssetId! })\n        }\n        this.logger.info(\n          \"whyNotCopyAssetFile(\" + af.uri + \"): found existing db record\",\n          {\n            af,\n            prior\n          }\n        )\n        return prior\n      }\n    }\n    return null\n  }\n\n  // Try to find a file with the same contents\n  async findLibraryFileWithSameContents(src: PosixFile, dest: PosixFile) {\n    if (await src.matchesContent(dest)) return dest\n    let destDir = dest.parent()\n    while (destDir.isSelfOrDescendantOf(this.originalsDir)) {\n      const child = destDir.childWithSameContents(src)\n      if (child != null) return child\n      else destDir = destDir.parent()\n    }\n    return\n  }\n\n  /**\n   * @throws if there are any errors\n   */\n  async importFile_(src: PosixFile): Promise<PosixFile> {\n    // initial sanity check:\n\n    const dest = await this.#importFile_(src)\n    if (dest != null) {\n      await this.#handleSidecars(src, dest)\n      await this.#handleInferred(src, dest)\n    }\n    return dest\n  }\n  async #importFile_(src: PosixFile): Promise<PosixFile> {\n    const ca = await readCapturedAt(src)\n    const assetPath = pathToLibraryAsset(ca?.date, src)\n\n    this.logger.debug(\"importFile(\" + src + \")\", {\n      capturedAt: ca,\n      assetPath: assetPath\n    })\n\n    if (assetPath == null) {\n      throw new Error(src.nativePath + \" failed to create a library path\")\n    }\n    const dest = this.originalsDir.join(...assetPath)\n\n    // Does a file in that subdirectory already have the same filesize and SHA?\n    // This would only happen if the library db is not in sync with the library\n    // directory.\n    const existing = await this.findLibraryFileWithSameContents(src, dest)\n    if (existing != null) {\n      this.logger.debug(\"#importFile_(\" + src + \"): found existing file\", {\n        src,\n        existing\n      })\n      return existing\n    }\n\n    const uniqDest = await dest.ensureNew_()\n    this.logger.info(\"#importFile_(\" + src + \"): copying...\", {\n      uniqDest,\n      dest\n    })\n    return src.copyFile_(uniqDest)\n  }\n\n  async #handleSidecars(src: PosixFile, dest: PosixFile): Promise<PosixFile[]> {\n    const sidecars = await src.existingSidecars()\n    const results = []\n    for (const srcSidecar of sidecars) {\n      results.push(await this.#handleSidecar(srcSidecar, dest))\n    }\n    return compact(results)\n  }\n\n  async #handleSidecar(srcSidecar: PosixFile, dest: PosixFile) {\n    for (const destSidecar of await dest.existingSidecars()) {\n      if (await sidecarEql(srcSidecar, destSidecar)) {\n        this.logger.info(\"handleSidecar(): metadata already exists.\", {\n          srcSidecar,\n          destSidecar,\n          dest\n        })\n        // We don't touch to the same mtime, as they may be different file types.\n        return\n      }\n    }\n    const copyTo = await dest\n      .parent()\n      .join(dest.name + srcSidecar.ext)\n      .ensureNew_({ emptyIsNew: true })\n    return srcSidecar.copyFile_(copyTo)\n  }\n\n  async #handleInferred(src: PosixFile, dest: PosixFile) {\n    if (src == null || dest == null || src.eql(dest)) return\n    const t = await readTags(src)\n    if (t == null) {\n      this.logger.warn(\"#handleInferred(): Failed to read tags from \" + src, {\n        dest\n      })\n      return\n    }\n    // At least for now, only store inferred tags in the sidecar, so we know in\n    // the future that the tag source is not necessarily trustworthy.\n    return ensureInferredHistoryRecords(src, await dest.sidecar(), t.inferred)\n  }\n\n  /**\n   * @return undefined for no-op, rejection for internal error, or new upserted AssetFile if copied\n   */\n  async maybeCopyToLibrary_(\n    srcAssetFile: AssetFile,\n    ctx: RequiredForceContext\n  ): PromiseMaybe<AssetFile> {\n    const start = Date.now()\n    const src = await srcAssetFile.posixFile_()\n    if (src == null) {\n      this.logger.throw(\n        \"maybeCopyToLibrary_(\" + srcAssetFile.uri + \"): posixFile is null\",\n        {\n          ignorable: false,\n          retriable: false\n        }\n      )\n    }\n    {\n      const why = await this.whyNotCopyFile(src)\n      if (!blank(why)) {\n        return this.logger.tap({\n          level: LogLevels.info,\n          msg: \"maybeCopyToLibrary_(): not copying: \" + why,\n          result: undefined\n        })\n      }\n    }\n\n    const asset = srcAssetFile.getAsset()\n    if (asset == null) {\n      this.logger.throw(\n        \"maybeCopyToLibrary_(\" + srcAssetFile.uri + \"): null asset\"\n      )\n    }\n\n    {\n      const prior = await this.existingLibraryAssetFile(srcAssetFile)\n      if (prior != null) {\n        const dest = await prior.posixFile_()\n        if (dest == null) {\n          this.logger.warn(\n            \"existingLibraryAssetFile() returned an assetFile that could not be resolved to a PosixFile\",\n            { prior }\n          )\n        } else {\n          const copiedSidecars = await this.#handleSidecars(src, dest)\n          const copiedInferredMetadata =\n            null != (await this.#handleInferred(src, dest))\n          const upsertNeeded =\n            null != (await prior.upsertIfNeeded_(undefined, ctx.forceSync))\n          const noop =\n            !copiedInferredMetadata && isEmpty(copiedSidecars) && !upsertNeeded\n          if (!noop) {\n            syncReport().onProgress({\n              path: dest.nativePath,\n              from: \"maybeCopyToLibrary()\",\n              state: SyncFileStates.synced,\n              details:\n                \"Found and synced prior replica already in your library \" +\n                stringify({\n                  src: src.nativePath,\n                  upsertNeeded,\n                  copiedSidecars,\n                  copiedInferredMetadata\n                }),\n              elapsedMs: Date.now() - start,\n              url: mkAssetUrl(asset.id)?.toString()\n            })\n          }\n          return prior\n        }\n      }\n    }\n\n    const dest = await this.importFile_(src)\n    if (dest == null) {\n      this.logger.info(\"importFile() returned null\", { srcAssetFile })\n      return\n    }\n    if (dest.nativePath === src.nativePath) {\n      this.logger.info(\"importFile() returned the same nativePath as src\", {\n        srcAssetFile,\n        dest\n      })\n      return\n    }\n\n    const destAF = await asset.assetFileForFile_(dest, { skipUpsert: true })\n    await destAF.updateFromShaSibling_(srcAssetFile)\n    const result = destAF.upsert()\n    syncReport().onProgress({\n      path: dest.nativePath,\n      from: \"maybeCopyToLibrary()\",\n      state: SyncFileStates.copied,\n      details: \"Copied into your library from \" + src.nativePath,\n      elapsedMs: Date.now() - start,\n      url: mkAssetUrl(asset.id)?.toString()\n    })\n    return result\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { filterAsync, thenMapOr } from \"../../core/async/Promise\"\nimport { libraryOriginalsDirPosixFile } from \"../../core/dir/LibraryDirs\"\nimport { ee } from \"../../core/event/EventEmitter\"\nimport { isReadableDirectory } from \"../../core/fs/Stat\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { nativePath2uri } from \"../../core/uri/FileURI\"\nimport { isExcludedMountpoint } from \"../../core/volumes/PosixVolumes\"\nimport { volumes } from \"../../core/volumes/Volumes\"\nimport { later } from \"../../fe/Delay\"\nimport { gt0 } from \"../../fe/Number\"\nimport { thenCollect } from \"../../fe/Promise\"\nimport { toA } from \"../../fe/toA\"\nimport { nativePathBlocklist } from \"./SyncPaths\"\nimport {\n  UriPath,\n  nativePathToUriPath,\n  posixFileToUriPath,\n  toUriPath\n} from \"./UriPath\"\n\nexport const logger = lazy(() => mkLogger(\"sync.PathsToSync\"))\n\nconst volumeUriPaths = lazy(() =>\n  thenCollect(volumes(), vol =>\n    vol.ignorable !== true &&\n    gt0(vol.size) &&\n    !isExcludedMountpoint(vol.mountpoint)\n      ? toUriPath(vol.mountpoint, nativePath2uri(vol.mountpoint, vol))\n      : undefined\n  )\n)\n\nexport async function scanPaths() {\n  const noUriPaths: string[] = []\n  const result: UriPath[] = []\n  for (const scanDir of toA(Settings.scanPaths.value)) {\n    if (!(await isReadableDirectory(scanDir))) {\n      logger().warn(\n        \"Ignoring scanPath element: not readable directory\",\n        scanDir\n      )\n    } else {\n      const uriPath = await nativePathToUriPath(scanDir)\n      if (uriPath == null) {\n        noUriPaths.push(scanDir)\n        logger().warn(\n          \"Ignoring scanPath element: failed to create URI path\",\n          scanDir\n        )\n      } else {\n        result.push(uriPath)\n      }\n    }\n  }\n  return { result, noUriPaths }\n}\n\nlater(() => {\n  ee().on(\"volumesChanged\", () => {\n    volumeUriPaths.unset()\n  })\n})\n\nexport async function pathsToSync(): Promise<UriPath[]> {\n  const arr: UriPath[] = []\n  arr.push(...(await scanPaths()).result)\n  if (Settings.scanAllDrives.valueOrDefault) {\n    arr.push(...(await volumeUriPaths()))\n  }\n\n  const lp = await thenMapOr(\n    libraryOriginalsDirPosixFile(),\n    posixFileToUriPath,\n    () =>\n      logger().throw(\"libraryOriginalsDir was null\", {\n        libraryDir: Settings.libraryDir.valueOrDefault,\n        originalsDir: Settings.originalsDir.value\n      })\n  )\n\n  if (Settings.scanLibraryFirst.valueOrDefault) {\n    arr.unshift(lp!)\n  }\n\n  if (Settings.scanLibraryLast.valueOrDefault) {\n    arr.push(lp!)\n  }\n\n  const result = await filterAsync({\n    name: \"pathsToSync\",\n    arr,\n    f: ea =>\n      !nativePathBlocklist.has(ea.nativePath) &&\n      isReadableDirectory(ea.nativePath)\n  })\n\n  logger().info(\"pathsToSync\", result)\n  return result\n}\n","import { greatestBy, leastBy } from \"../../core/Array\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { isSyncService } from \"../../core/ServiceNames\"\nimport { ShortCommandTimeoutMs } from \"../../core/ShortCommandTimeoutMs\"\nimport { TTLSet } from \"../../core/TTLSet\"\nimport { tsToLocal } from \"../../core/date/Localtime\"\nimport { libraryOriginalsDirPosixFile } from \"../../core/dir/LibraryDirs\"\nimport { ee } from \"../../core/event/EventEmitter\"\nimport { LogLevels } from \"../../core/log/LogLevel\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { compact } from \"../../fe/Array\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { fmtDuration } from \"../../fe/FmtDuration\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { closeTo, gt } from \"../../fe/Number\"\nimport { Operation, OperationNames } from \"../model/Operation\"\nimport { Progress, ProgressTimes } from \"../model/Progress\"\nimport { pathsToSync } from \"./PathsToSync\"\nimport { UriPath } from \"./UriPath\"\n\nconst logger = lazy(() => mkLogger(\"sync.SyncPaths\"))\n\nexport const nativePathBlocklist = new TTLSet(10 * minuteMs)\n\nexport type UriPathTimes = UriPath & Partial<Exclude<ProgressTimes, \"uri\">>\n\nexport async function pathsAndTimesToSync(): Promise<UriPathTimes[]> {\n  const todo = await pathsToSync()\n  const times = Settings.forceSync.valueOrDefault ? [] : await Progress.times()\n  return logger().tap({\n    msg: \"pathsAndTimesToSync()\",\n    level: LogLevels.info,\n    result: todo.map(path => ({\n      ...path,\n      ...times.find(ea => ea.uri === path.uri)\n    }))\n  })\n}\n\nexport async function restartSyncAt() {\n  const arr = await pathsAndTimesToSync()\n  return (\n    Math.min(...compact([Date.now(), ...arr.map(ea => ea.lastCompletedAt)])) +\n    Settings.syncNewIntervalMs.valueOrDefault\n  )\n}\n\nexport async function bestPathToSync() {\n  return bestStable(await pathsAndTimesToSync())\n}\n\nexport const getStaleCompletedAt = lazy(async () => {\n  // A sync is \"stale\" if the user has asked for a full-resync and it hasn't\n  // completed:\n  const op = Operation.getFirstPendingOp({\n    name: OperationNames.forceRestartSync\n  })\n\n  return (\n    op?.createdAt ??\n    // Or it's been more than syncIntervalHours since now since the last sync:\n    Date.now() - Settings.syncNewIntervalMs.valueOrDefault\n  )\n}, ShortCommandTimeoutMs)\n\nlater(() => ee().on(\"clearCache\", () => getStaleCompletedAt.unset()))\n\n/**\n * This algorithm tries to keep a stable \"best\" pick, until the best is done.\n */\nexport async function bestStable(arr: UriPathTimes[]) {\n  const staleCompletedAt = await getStaleCompletedAt()\n  const incomplete = arr.filter(\n    ea => ea.lastCompletedAt == null || ea.lastCompletedAt < staleCompletedAt\n  )\n\n  logger().info(\"bestStable()\", {\n    paths: arr.map(ea => ({\n      ...ea,\n      lastStarted: map(ea.lastStartedAt, tsToLocal),\n      lastCompleted: map(ea.lastCompletedAt, tsToLocal),\n      lastUpdated: map(ea.lastUpdatedAt, tsToLocal),\n      incomplete:\n        ea.lastCompletedAt == null || ea.lastCompletedAt < staleCompletedAt,\n      staleMs: staleCompletedAt - (ea.lastCompletedAt ?? 0)\n    })),\n    stalePaths: incomplete.map(ea => ea.nativePath),\n    stale: tsToLocal(staleCompletedAt)\n  })\n\n  // 1. If we're currently syncing a volume, keep at that until it's done.\n  {\n    const mostRecentlyUpdated = greatestBy(incomplete, ea => ea.lastUpdatedAt)\n    // Only return this if we touched it in the last 15 minutes.\n    if (\n      mostRecentlyUpdated != null &&\n      gt(mostRecentlyUpdated.lastUpdatedAt, Date.now() - 15 * minuteMs)\n    ) {\n      logger().info(\n        \"bestStable(): returning most recently updated\",\n        mostRecentlyUpdated\n      )\n      return { ...mostRecentlyUpdated, why: \"recently updated\" }\n    }\n    // Otherwise, there's no need to be \"stable\":\n  }\n\n  // ** Assume order of arr matters **\n\n  // If there are any volumes we've never done before, start those:\n  {\n    const neverStartedBefore = incomplete.find(ea => ea.lastStartedAt == null)\n    if (neverStartedBefore != null) {\n      logger().info(\n        \"bestStable(): returning neverStartedBefore\",\n        neverStartedBefore\n      )\n      return { ...neverStartedBefore, why: \"never synced before\" }\n    }\n  }\n\n  {\n    // If any volumes haven't been completed, start those:\n    const neverCompletedBefore = incomplete.find(\n      ea => ea.lastCompletedAt == null\n    )\n    if (neverCompletedBefore != null) {\n      logger().info(\n        \"bestStable(): returning neverCompletedBefore\",\n        neverCompletedBefore\n      )\n      return { ...neverCompletedBefore, why: \"never completed before\" }\n    }\n  }\n\n  {\n    // They've all been completed at least once. Return the least completed:\n    const leastRecentlyCompleted = leastBy(incomplete, ea => ea.lastCompletedAt)\n    if (leastRecentlyCompleted != null) {\n      logger().info(\n        \"bestStable(): returning leastRecentlyCompleted\",\n        leastRecentlyCompleted\n      )\n      return { ...leastRecentlyCompleted, why: \"least recently synced\" }\n    }\n  }\n\n  logger().info(\n    \"bestPathToSync(): all paths have been recently completed (yay).\"\n  )\n\n  // This is called by `info`: don't mark completed if we're not `sync`!\n  if (isSyncService()) {\n    logger().info(\"bestPathToSync(): Marking sync as complete.\")\n    Operation.markOpCompleted({ name: OperationNames.forceRestartSync })\n  }\n\n  return\n}\n\nfunction uptToStatus(info: UriPathTimes, staleCompletedAt: number) {\n  return info.lastStartedAt == null\n    ? \"new\"\n    : gt(info.lastUpdatedAt, Date.now() - 10 * secondMs) &&\n      !closeTo(info.lastCompletedAt, info.lastUpdatedAt, 5 * secondMs)\n    ? \"syncing\"\n    : gt(info.lastCompletedAt, staleCompletedAt)\n    ? \"synced\"\n    : \"stale\"\n}\n\nexport async function syncPathsForUI() {\n  const arr = await pathsAndTimesToSync()\n  const best = await bestStable(arr)\n  const staleCompletedAt = await getStaleCompletedAt()\n  const libraryDir = libraryOriginalsDirPosixFile()?.nativePath\n\n  const atToS = (ts: Maybe<number>) => {\n    if (ts == null) return\n    const dur = Date.now() - ts\n    return dur < 2 * secondMs ? \"now\" : fmtDuration(dur) + \" ago\"\n  }\n\n  return arr.map(info => ({\n    path: info.nativePath,\n    library: libraryDir === info.nativePath,\n    status: uptToStatus(info, staleCompletedAt),\n    isNext: info.nativePath === best?.nativePath,\n    lastStarted: atToS(info.lastStartedAt),\n    lastCompleted: atToS(info.lastCompletedAt)\n  }))\n}\n","import { PosixFile } from \"../../core/fs/PosixFile\"\nimport { nativePath2uri } from \"../../core/uri/FileURI\"\nimport { URI } from \"../../core/uri/URI\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\n\nexport interface UriPath {\n  nativePath: string\n  uri: string\n}\n\nexport async function toUriPath(\n  nativePath: string,\n  maybeUri: MaybeSyncOrAsync<URI>\n): PromiseMaybe<UriPath> {\n  const uri = await maybeUri\n  if (uri == null) return\n  return {\n    nativePath,\n    uri: uri.toString()\n  }\n}\n\nexport async function posixFileToUriPath(f: PosixFile): PromiseMaybe<UriPath> {\n  return toUriPath(f.nativePath, await f.uriObject_())\n}\n\nexport async function nativePathToUriPath(\n  nativePath: string\n): PromiseMaybe<UriPath> {\n  return toUriPath(nativePath, nativePath2uri(nativePath))\n}\n","import { TagSep } from \"../../core/tags/TagPaths\"\nimport { toS } from \"../../fe/toS\"\n\nexport function tag_fts_root(tag_path: string) {\n  const s = toS(tag_path)\n  const idx = s.indexOf(TagSep)\n  return idx === -1 ? \"\" : tag_path.substring(0, idx)\n}\n\nexport function tag_fts_path(tag_path: string) {\n  return toS(tag_path)\n    .split(TagSep)\n    .filter(ea => ea != null && ea.trim() !== \"\")\n    .join(\" \")\n}\n","import _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mkLogger } from \"../../core/Logger\"\nimport { rateLimited } from \"../../core/RateLimited\"\nimport { memoizeAsync } from \"../../core/async/MemoizedAsyncFunc\"\nimport { time, timeSync } from \"../../core/async/PromiseTimer\"\nimport { ee } from \"../../core/event/EventEmitter\"\nimport { hostname } from \"../../core/net/Hostname\"\nimport {\n  ForceContext,\n  RequiredForceContext,\n  forceContextOrSetting\n} from \"../../core/settings/ForceContext\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { TagSep } from \"../../core/tags/TagPaths\"\nimport { volsha } from \"../../core/uri/volsha\"\nimport { lazyFsAsync } from \"../../core/volumes/LazyFsAsync\"\nimport { mountpoints } from \"../../core/volumes/Mountpoints\"\nimport { volumeMetadataTtlMs } from \"../../core/volumes/VolumeTtls\"\nimport { volumes } from \"../../core/volumes/Volumes\"\nimport { compact, isEmpty, isNotEmpty, uniq } from \"../../fe/Array\"\nimport { notBlank, notBlankOr } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { fmtDuration } from \"../../fe/FmtDuration\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, lt } from \"../../fe/Number\"\nimport { gt } from \"../../fe/Primitive\"\nimport { randomChars } from \"../../fe/Random\"\nimport { stripPrefixSuffix } from \"../../fe/String\"\nimport { LibraryTagName, TagRoots } from \"../../fe/api/Tag\"\nimport { DbRequest } from \"../db/DbRequest\"\nimport { knex } from \"../db/Knex\"\nimport { prepQueries } from \"../db/SqlQuery\"\nimport { AssetFile } from \"../model/AssetFile\"\nimport { ChangedTag, ChangedTagPojo } from \"../model/ChangedTag\"\nimport { modelDb } from \"../model/ModelDb\"\nimport { Tag } from \"../model/Tag\"\nimport { TagFts } from \"../model/TagFts\"\n\nconst logger = lazy(() => mkLogger(\"tag.TagSql\"))\n\nconst dbr = lazy(() => new DbRequest(modelDb, \"Tag\"))\n\nexport const tagFtsRebuild = lazy(\n  () => time(\"db.rebuildTagFts\", () => TagFts.rebuild()),\n  minuteMs\n)\n\n/**\n * This should only be run by integration tests or at the end of a sync.\n */\nexport async function forceRunTagMaintenance(\n  args: ForceContext = { forceSync: true, recountAllTags: true }\n) {\n  logger().info(\"forceRunTagMaintenance()\")\n  return await runTagMaintenance.force(args)\n}\n\nconst MinCallDelayMs = 5 * secondMs\n\nexport const runTagMaintenance = rateLimited({\n  name: \"runTagMaintenance\",\n  minCallDelayMs: MinCallDelayMs,\n  f: async (_ctx?: ForceContext) => {\n    const ctx = forceContextOrSetting(_ctx)\n    const start = Date.now()\n    const log = logger().addContext(\".runTagMaintenance()\")\n    log.info(\"starting\", { ctx })\n    try {\n      log.info(\"validating all tags...\")\n      Tag.validate_()\n\n      log.info(\"updating tag mountpoints...\")\n      await updateTagMountpoints()\n\n      log.info(\"vacuuming orphan tags...\")\n      await vacuumOrphanTags()\n\n      let countedTags = false\n      if (ctx.recountAllTags) {\n        if (ctx.forceSync || updateAllTagCounts.isStale()) {\n          log.info(\"recounting all tags...\")\n          updateAllTagCounts.refresh()\n          countedTags = true\n        }\n      }\n      if (!countedTags) {\n        log.info(\"recounting changed tags...\")\n        const updatedTagIds = updateChangedTagCounts(ctx)\n        countedTags = isNotEmpty(updatedTagIds)\n      }\n\n      if (countedTags) {\n        log.info(\"rebuilding tag search index...\")\n        await tagFtsRebuild()\n      }\n    } catch (err: any) {\n      logger().warn(\"runTagMaintenance() failed\", err)\n    }\n    const elapsedMs = Date.now() - start\n    // We want to run this often, but not so often as to cause no other work\n    // to be done.\n    const newMinCallDelayMs = clamp(MinCallDelayMs, minuteMs, elapsedMs * 5)\n    runTagMaintenance.setMinCallDelayMs(newMinCallDelayMs)\n    logger().info(\"runTagMaintenance(): complete.\", {\n      newMinCallDelayMs,\n      elapsedMs\n    })\n  }\n})\n\nfunction updateChangedTagCounts(ctx: RequiredForceContext, lagtimeMs?: number) {\n  // return timeSync(\"db.updateChangedTagCounts\", () => {\n  const nullTagIds = Tag.withNullAssetCount()\n  logger().info(\"updateChangedTagCounts()\", { nullTagIds })\n  const changedTags = ChangedTag.getAllChangedTags(0)\n  logger().info(\"updateChangedTagCounts()\", { changedTags })\n  const changedTagsById = new Map<number, ChangedTagPojo | null>(\n    nullTagIds.map(ea => [ea, null])\n  )\n  for (const ct of changedTags) {\n    changedTagsById.set(ct.tagId, ct)\n  }\n  const maxUpdatedAt =\n    Date.now() - (lagtimeMs ?? (ctx.forceSync ? 0 : minuteMs))\n\n  // TODO: figure out what the correct value is (not just \"20\")\n  if (changedTagsById.size > 20 && updateAllTagCounts.isStale()) {\n    logger().warn(\n      \"updateChangedTagCounts(): too many changed tags. Rebuilding everything.\"\n    )\n    updateAllTagCounts()\n  } else {\n    for (const tagId of changedTagsById.keys()) {\n      Tag.updateAssetCount(tagId)\n    }\n  }\n\n  for (const changedTag of compact(changedTagsById.values())) {\n    if (changedTag != null && lt(changedTag.updatedAt, maxUpdatedAt)) {\n      const result = ChangedTag.deleteChangedTag(changedTag)\n      logger().debug(\"updateChangedTagCounts(): removing updated tag\", {\n        changedTag,\n        result\n      })\n    }\n  }\n  return [...changedTagsById.keys()]\n  // })\n}\n\n// only exported for tests\nexport function updateTagCountSql(rnd = randomChars(6)) {\n  // closure tree table without a depth/level column:\n  const ct = `temp.closure_tree_${rnd}`\n\n  // tag counts table\n  const tc = `temp.tag_counts_${rnd}`\n\n  // This takes 6 seconds on nuc test library:\n  // CREATE TABLE ${ct} AS\n  // SELECT\n  // DISTINCT t.id AS parentId,\n  // kid.id AS childId\n  // FROM\n  // Tag t\n  // JOIN Tag kid ON kid._path LIKE (t._path || '%');\n\n  // The CTE takes 0.161 seconds on nuc test library (!!)\n\n  return prepQueries(`\nCREATE TABLE ${ct} AS \nWITH RECURSIVE cte AS (\n  SELECT\n    id AS anc_id,\n    id AS id\n    -- ,0 AS LEVEL\n  FROM\n    Tag\n  UNION\n  ALL\n  SELECT\n    prev.anc_id,\n    curr.id AS id\n    -- ,prev.level + 1 AS LEVEL\n  FROM\n    Tag curr\n    JOIN cte AS prev\n  WHERE\n    curr.id <> prev.id\n    AND curr.parentId = prev.id\n)\nSELECT\n  *\nFROM\n  cte;\n\nCREATE INDEX ${ct}_idx ON ${ct.replace(/^temp\\./, \"\")}(id);\n\n-- NOTE: creating a temp table for shown assets with a covering index didn't speed up the next create table\n\nCREATE TABLE ${tc} AS\nSELECT\n  anc_id AS tagId,\n  count(DISTINCT assetId) AS assetCount\nFROM\n  ${ct}\n  JOIN AssetTag ON AssetTag.tagId = ${ct}.id\n  JOIN Asset ON Asset.id = AssetTag.assetId\nWHERE\n  Asset.shown = 1\n  AND Asset.hidden = 0\n  AND Asset.excludedAt IS NULL\n  AND Asset.deletedAt IS NULL\nGROUP BY\n  1;\n\nCREATE INDEX ${tc}_idx ON ${tc.replace(/^temp\\./, \"\")}(tagId, assetCount);\n\n-- We now have a comprehensive set of counts. Wipe prior counts:\n\nUPDATE Tag SET \n  assetCount = NULL;\n\nUPDATE Tag\nSET\n  assetCount = ${tc}.assetCount\nFROM ${tc}\nWHERE ${tc}.tagId = Tag.id;\n\n-- Clean up:\n\nDELETE FROM ChangedTag; -- we just rebuilt everything!\n\nDROP INDEX IF EXISTS ${ct}_idx;\nDROP INDEX IF EXISTS ${tc}_idx;\nDROP TABLE ${ct};\nDROP TABLE ${tc};\n`)\n}\n\nexport const updateAllTagCounts = lazy(\n  () =>\n    timeSync(\"db.updateAllTagCounts\", () => {\n      if (dbr().db() == null) {\n        logger().throw(\"updateAllTagCounts(): modelDb is unset\", {\n          retriable: false\n        })\n      }\n      try {\n        const rnd = randomChars(6)\n        const ignorable = \"_\" + rnd\n        const start = Date.now()\n        dbr().runScript(updateTagCountSql(rnd), ignorable)\n        const elapsedMs = Date.now() - start\n        const newTTL = clamp(7 * secondMs, 5 * minuteMs, elapsedMs * 20)\n        logger().info(\"updateAllTagCounts() done\", {\n          elapsedMs,\n          newTTL\n        })\n      } catch (err) {\n        logger().warn(\"updateAllTagCounts() failed\", err)\n      }\n    }),\n  minuteMs // < we shouldn't have to rebuild everything more than once a minute\n)\n\nexport async function vacuumOrphanTags(\n  minCreatedAt = Date.now() - 10 * minuteMs\n) {\n  const deleted: number[] = []\n  for (let iter = 0; iter < 6; iter++) {\n    const arr = await vacuumLeafTags(minCreatedAt)\n    if (isEmpty(arr)) break\n    else deleted.push(...arr)\n  }\n  return uniq(deleted)\n}\n\nexport async function vacuumLeafTags(minCreatedAt: number) {\n  const candidates = Tag.dbl.pluckAllf<number>(\n    q =>\n      q\n        .select(\"Tag.id\")\n        .leftOuterJoin(\"AssetTag\", \"AssetTag.tagId\", \"Tag.id\")\n        .leftOuterJoin(knex().raw(\"Tag AS child ON child.parentId = Tag.id\"))\n        .whereNull(\"AssetTag.assetId\")\n        .andWhere(q2 => q2.whereNull(\"child.id\"))\n        .andWhere(q2 => q2.whereNull(\"Tag.assetCount\"))\n        .andWhere(\"Tag.createdAt\", \"<\", minCreatedAt)\n        .orderBy(\"Tag._path\", \"asc\") // leaves first\n  )\n  logger().debug(\"vacuumLeafTags()\", { candidates })\n  for (const ea of candidates) {\n    try {\n      Tag.dbl.runf(q => q.where({ id: ea }).delete())\n    } catch (err) {\n      logger().info(\"vacuumLeafTags(): failed to delete\", { tagId: ea, err })\n    }\n  }\n  logger().info(\"vacuumLeafTags() complete.\", { candidates })\n  return candidates\n}\n\nconst updateTagMountpoints = lazyFsAsync(\"updateTagMountpoints\", async () => {\n  const fileRoot = Tag.findByPath([TagRoots.fs])\n  if (fileRoot == null) {\n    mkLogger(\"updateTagMountpoints()\").info(\n      \"No root filesystem tag (new db, I hope?)\"\n    )\n    return\n  }\n\n  fileRoot.maybeUpsertDisplayName(Settings.tagDisplayNameFS.valueOrDefault)\n\n  for (const t of fileRoot.getChildren()) {\n    await fixFileRootTag(t)\n  }\n})\n\nfunction _reset() {\n  tagFtsRebuild.unset()\n  // if (!isProd) updateAllTagCounts.clear()\n  updateTagMountpoints.unset()\n}\n\nlater(() => {\n  ee().on(\"clearCache\", _reset)\n  Settings.libraryDir.watchLater(_reset)\n})\n\nexport async function fixFileRootTag(t: Maybe<Tag>) {\n  // Is this an actual file root tag?\n  if (t == null || t.depth !== 2 || !t._path.startsWith(TagRoots.fs + TagSep)) {\n    // no-op\n    return\n  }\n\n  const log = mkLogger(\"fixFileRootTag(\" + t + \")\")\n  if (t.name === LibraryTagName) {\n    if (t.ordinal !== 1) {\n      log.info(\"fixing library ordinal\", { id: t.id, path: t.path })\n      t.upsert({ ordinal: 1 })\n      Tag.clear()\n    }\n    return\n  }\n\n  // Was this updated recently?\n  if (\n    forceContextOrSetting().forceSync &&\n    notBlank(t.displayName) &&\n    gt(t.updatedAt, Date.now() - volumeMetadataTtlMs())\n  ) {\n    log.info(\"no-op: tag recently updated\", {\n      id: t.id,\n      path: t.path,\n      updated: fmtDuration(Date.now() - t.updatedAt!) + \" ago\"\n    })\n    return\n  }\n\n  const displayName = await displayNameForVolsha(t.name)\n\n  if (notBlank(displayName)) {\n    t.maybeUpsertDisplayName(displayName)\n    log.info(\"updated tag\", { id: t.id, path: t.path, displayName })\n    Tag.clear()\n  } else {\n    log.debug(\"cannot update tag: no current volume.\", {\n      id: t.id,\n      path: t.path\n    })\n  }\n}\n\nexport const displayNameForVolsha = memoizeAsync(\n  async (volumeSHA: string) => {\n    const log = mkLogger(\"displayNameForVolsha(\" + volumeSHA + \")\")\n    const vols = await volumes()\n    if (vols != null) {\n      const vol = vols.find(ea => volsha(ea.uuid) === volumeSHA)\n      log.info(\"find()\", { vol })\n      if (vol != null) {\n        if (\n          Settings.tagDisplayNameFSLabels.valueOrDefault &&\n          notBlank(vol.label)\n        ) {\n          return vol.label.trim()\n        }\n\n        if (vol.mountpoint === \"/\") {\n          return (\n            Settings.tagDisplayNameFSRoot.valueOrDefault +\n            (Settings.tagDisplayNameFSRootWithHostname.valueOrDefault\n              ? \" on \" + hostname()\n              : \"\")\n          )\n        }\n\n        return notBlankOr(\n          // We don't want \"C:\\\" (because the UI renders the path separators)\n          stripPrefixSuffix(vol.mountpoint, {\n            prefix: _path.sep,\n            suffix: _path.sep\n          }),\n          _path.sep // < handle \"/\"\n        )\n      } else {\n        return AssetFile.dbl.pluckFirstf<string>(q =>\n          q\n            .select(\"mountpoint\")\n            .whereLike(\"uri\", \"psfile://\" + volumeSHA + \"/%\")\n            .limit(1)\n        )\n      }\n    }\n    return\n  },\n  {\n    name: \"tag.displayNameForVolsha\",\n    maxSize: 64,\n    timeoutMs: volumeMetadataTtlMs()\n  }\n)\n\nlater(() => {\n  mountpoints.watch(() => displayNameForVolsha.clear())\n})\n","module.exports = require(\"@iarna/toml\");","module.exports = require(\"@parcel/watcher\");","module.exports = require(\"@photostructure/tz-lookup\");","module.exports = require(\"assert\");","module.exports = require(\"batch-cluster\");","module.exports = require(\"better-sqlite3\");","module.exports = require(\"commander\");","module.exports = require(\"events\");","module.exports = require(\"exiftool-vendored\");","module.exports = require(\"exiftool-vendored/dist/Timezones\");","module.exports = require(\"fast-xml-parser\");","module.exports = require(\"file-type\");","module.exports = require(\"fs-extra\");","module.exports = require(\"he\");","module.exports = require(\"knex\");","module.exports = require(\"luxon\");","module.exports = require(\"ml-kmeans\");","module.exports = require(\"papaparse\");","module.exports = require(\"picomatch\");","module.exports = require(\"platform-folders\");","module.exports = require(\"plist\");","module.exports = require(\"process\");","module.exports = require(\"punycode\");","module.exports = require(\"semver\");","module.exports = require(\"sharp\");","module.exports = require(\"trash\");","module.exports = require(\"type-detect\");","module.exports = require(\"util\");","module.exports = require(\"utimes\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"net\");","module.exports = require(\"node:fs/promises\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path/posix\");","module.exports = require(\"node:process\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"stream/promises\");","module.exports = require(\"timers\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(__webpack_require__.s = 82118);\n"],"names":["CODES","PasetoNotSupported","PasetoDecryptionFailed","PasetoInvalid","PasetoVerificationFailed","PasetoClaimInvalid","PasetoWorkerFailure","PasetoError","Error","constructor","message","super","this","name","code","captureStackTrace","module","exports","decode","parsePayload","token","parse","TypeError","version","purpose","payload","footer","length","split","result","undefined","sigLength","raw","slice","err","ms","audience","expiresIn","iat","issuer","jti","kid","notBefore","now","Date","subject","getTime","unix","exp","nbf","aud","iss","sub","ignoreExp","ignoreNbf","ignoreIat","maxTokenAge","clockTolerance","tolerance","Buffer","isEncoding","encode","input","from","toString","replace","isObject","isBuffer","JSON","stringify","applyOptions","options","Object","keys","deepClone","crypto","util","pae","hkdf","pHkdf","promisify","key","salt","info","prk","methods","hmac","u","i","t","lb","bi","byteLength","String","fromCharCode","inp","concat","orm","pack","timingSafeEqual","m","f","k","nonce","n","ek","ak","Promise","all","c","encrypt","preAuth","t2","decrypt","alg","createHmac","update","digest","verify","signature","sign","cipher","cleartext","iv","encryptor","createCipheriv","final","ciphertext","decryptor","createDecipheriv","Number","isSafeInteger","up","dn","buf","allocUnsafe","writeUInt32LE","hour","minute","REGEX","str","matched","exec","value","parseFloat","toLowerCase","Math","round","second","day","header","le64","pieces","accumulator","piece","len","strict","assert","parsed","randomFill","async","bytes","h","expectedSigLength","m2","sig","createSecretKey","KeyObject","type","symmetricKeySize","TSE","paddedBuffer","buffer","alloc","copy","a","b","max","substr","b64ms","b64f","s","errors","V1","V2","assertPayload","checkKey","complete","b64","export","checkFooter","checkPayload","randomBytes","generateKey","generateKeyPair","PUBLIC_KEY_ARGS","modulusLength","privateKey","constants","RSA_PKCS1_PSS_PADDING","padding","RSA_PSS_SALTLEN_DIGEST","saltLength","createPrivateKey","asymmetricKeyType","createPublicKey","SimpleAppName","SimpleShortAppName","SimpleAppNameLC","AppName","lazy","isProd","nodeEnv","AppNameVersion","allDefined","arr","defined","every","intersection","valueOf","primitiveValueOfOrElse","Set","map","filter","ea","has","_uniqCount","sortedArr","lastElem","lastIndexOf","count","zip","arrarr","times","leastIndex","leastIndexBy","greatestIndex","greatestIndexBy","estIndex","lt","gt","leastBy","isEmpty","cmp","estIndexCtx","index","v","batches","batchsize","stepRange","everyAsync","diff","remove","minuend","subtrahend","some","eb","eql","objects","notBlank","toA","r","thunks","isNotEmpty","predicate","fromIndex","arrs","Array","isArray","elem","push","element","moved","sortBy","stringifySorted","x","y","idx","findIndex","splice","copyArrayTo","uniqBy","accept","reject","indexOf","sort","compact","Map","reduce","prev","curr","min","arr_length","results","j","ctx","batchSize","batchArr","lastPass","tap","prior","find","ea2","ea3","outer","resultArr","pred","maxDelta","before","after","mm","set","mapOr","get","entries","minLength","pad","unshift","BatchClusterObserver","EndableWrapper","rank","EndableRanks","service","end","commandTimeoutMs","ShortCommandTimeoutMs","bce","on","bp","pid","logger","renice","catch","onError","addPid","ppid","cmd","maxAgeMs","maxProcAgeMillis","minuteMs","TimeoutError","error","lastStartError","task","errorToS","match","onTimeout","lastTaskError","command","FatalErrorFlag","lastInternalError","stdout","stderr","proc","streamFlushMillis","secondMs","warn","new","stout","toS","child_pid","cp","gt0","Pids","instance","onKill","reason","ended","ending","isIgnorableError","maxProcs","loggerName","maxIdleMsPerProcess","isWin","maxTasksPerProcess","Settings","valueOrDefault","spawnTimeoutMillis","minDelayBetweenSpawnMillis","minDelayBetweenSpawnMs","streamFlushMs","cleanupChildProcs","mkLogger","BoundedList","maxLength","_length","_firstIndex","store","mapIndex","trunc","at","last","l","clamp","clear","Symbol","iterator","self","iter","items","item","pop","reverse","shift","shiftOrFirst","callbackfn","forEach","initialValue","acc","floor","to","swap","start","ByteOrderMarks","bom","encoding","debom","bufferStartsWith","subarray","prefix","CaseInsensitiveMap","initialContents","normalizer","DefaultNormalizer","lookup","delete","size","values","toStringTag","pick","obj","synonyms","MultiMap","vacuum","o","uniq","add","getFirst","lookupNearest","minDiceCoeff","exact","best","bestCoeff","coeff","diceCoeff","newBest","lc","colorEnabled","noColor","withAsciiEscape","off","msg","reset","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","lightGrey","darkGrey","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","white","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgLightGrey","bgDarkGrey","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhite","incr","countSum","sum","keyAvg","avg","Average","isNumber","toJSON","toRecord","entriesByCountDesc","mapNumericOr","abs","top","topKeys","averageCounts","addAll","join","valuesToA","fill","DefaultSensitiveEnvRegexPattern","EditionName","isElectron","updateChannel","listener","ts","elapsed","log","elapsedMs","lowerCaseKeys","blank","line","splitCompactLines","re","groups","val","map2Or","a1","a2","examples","PosixFile","for","examplesNativePath_","exampleParentDir","ancestors","__dirname","childrenSync","joinNativePath","Function","bind","_self","FifoCache","maxSize","clearEveryMs","setsSinceLastSpill","expireListeners","clearInterval","setUnrefInterval","spill","priorCache","currentCache","el","create","inspect","custom","visit","union","v2","visitor","deleteIf","orElse","getOrSet","valueThunk","_event","__uid","__start","FifoCacheAsync","opts","cacheHitsSync","cacheHitsAsync","cacheMisses","rejections","timeouts","readFsCache","writeFsCache","cache","fsCacheTtlMs","timeoutMs","mergeStats","stats","hasFsCacheSync","fsCachePath","isMtimeRecentSync","get_","Deferred","isRejected","isPending","promise","cacheDir","d","victim","filestamp","moveSync","rm","recursive","maxRetries","retryDelay","force","deleteFsCache","unlinkSync","getOrSetAsync","later","observe","setTimeout","then","fsCacheSlowMs","gte","sha","shortFsStringSha","parseJSON","bufferToString","readFileSync","meta","unlink","debug","outputFile","FifoSet","delegate","next","IndexedHeader","text","isString","greedyLeft","toEntry","row","substring","leftIdx","rightIdx","trim","headers","table","warnIfMissingHeaders","Fixed","skippedHeaders","rows","splitLines","headerRow","maxLen","max_","blankColumns","range","extractHeaders","fromEntries","firstBlankColumn","fromIdx","toIdx","RegExp","escapeRegExp","priorLastIndex","skippedOver","m_index","lastIndex","left","indexOfNonSpace","right","lastIndexOfNonSpace","priorRightBoundary","leftmost","lastHeader","DefaultBitDepth","toNearestBitDepth","bitDepth","validLat","latitude","within","validLon","longitude","validLatLon","geohash","geohashNumeric","GeoRadix","loc","lat","lon","GeoHashBitZip","BitZip","ungeohash_num","geohashNum","unzip","geoHashToLocation","geohashString","distanceMeters","phi1","PI","phi2","deltaPhi","deltaLambda","sin","cos","atan2","sqrt","geohash1","geohash2","halted","halt","HashBits","isSuspended","thunk","ttlMs","LazyClass","ExtensibleFunction","watchers","_call","isStale","onSetResult","priorP","currentP","_prior","current","setUnrefTimeout","unset","lastSetTs","refresh","ttl","setTTL","watchLater","watcher","watch","lastSetAgoMs","hasPrior","ROLazy","_","DefaultLocale","extractLocale","e","env","LC_ALL","LC_MESSAGES","LANG","LANGUAGE","toLocale","locale","lastValue","envLocale","lazyAsync","desc","lc2locale","localeWin","isMac","localeMac","localePosix","regex","equalsIgnoreCase","g","lang","country","thenMap","PowerShell","executeJson","Name","stdout_","parseEnvTokens","logStartup","serviceName","StartTs","argv","arch","platform","os","osFullName","isPacked","versions","settings","logLevel","httpPort","libraryDir","psenv","rootLoggers","ConsoleLogger","consoleLogger","context","ContextualLogger","compactMap","iterable","retainIfTrue","callCount","memoryUsageBytes","mem","memoryUsage","external","heapUsed","arrayBuffers","memoryUsageRssBytes","rss","sigFigs","MB","toBoolean","process","PS_LOG_COLOR","isTrue","NO_COLOR","includes","TERM","MaybeTestArgRe","_nodeEnv","NODE_ENV","isDev","isTest","SINGLE_SPEC_TESTS","_isSupportedNode","nodeVersion","node","satisfies","RequiredNodeVersions","isSupportedNode","mapGte0","mapInt","mapGt0","toInt","flatten","toFloat","defaultValue","mapNumeric","numstartRe","extractFloat","extractInt","prepHammBigInts","leftPad","hammRatioBinaryString","matching","map2Numeric","columns","col","s1","s2","charAt","bitsPerValue","BigInt","bitsPerCell","total","Try","toErr","primitiveEntries","isPrimitive","isDate","mapEntries","fieldNames","field","fieldName","first","errIfMissing","propertyIsEnumerable","defaults","sources","assign","dest","src","keysToRetain","maxKeys","keyCount","valpath","ciFieldPath","nextDot","fieldRemains","ciField","sortedKeys","sortIgnoreCase","deepDelete","keysToDelete","caseInsensitiveKeyName","osNameDefault","release","osArch","osNameLinux","osNameMac","osNameWin","osName","isDocker","OsReleaseFiles","osReleaseTokens","isLinux","filename","pretty_name","version_id","MacCodenames","WinReleaseToVersions","versionToCodename","ver","codenames","major","minor","majorMinor","macProductVersion","execSync","productVersion","mapNotBlankOr","macCodename","codename","startsWith","CPUs","uniqCount","cpuInfo","model","isPreAlphaVersion","isAlphaVersion","isBetaVersion","isStableVersion","channel","baseVersion","versionMajor","versionMinor","versionPatch","versionMajorMinor","AssetFileVersion","AssetVersion","pids","pidExists","untilTrue","intervalMs","AllowableStartSlopMs","matchesPidfileInfo","entry","entryStartTime","fileStartTime","startTime","killPidWinTaskkill","args","execFile","killPid","rewritePidfileOnForce","execute","identity","killPidWin","kill","killPidWithNode","pidsDir","recentPids","vacuumOldWip","rateLimited","minCallDelayMs","minMtime","old","childFiles","isJsonExt","isHiddenBasename","base","mtimeMs","killOldProcs","everything","pidfiles","killed","endPromises","pidEntries","pidInfos","pidfile","json","readJson","pidEntry","timeoutAt","everythingBefore","toISOString","allSettled","opt","parseNativePath","getOrElse","writeJson_","children","ext","priorInfo","ago","configDir","dir","BaseFile","ProcCleaner","timers","predb","PriorityClasses","strEnum","PriorityClassToPosix","freeze","Normal","BelowNormal","Low","Idle","PriorityClassToNode","AboveNormal","priority","PRIORITY_ABOVE_NORMAL","PRIORITY_NORMAL","PRIORITY_BELOW_NORMAL","PRIORITY_LOW","isFinite","isProcEntry","pe","existingPids","collectBatchedAsync","pidInfoWin","pidInfoPosix","win2pe","Id","pwshJsonDate","StartTime","ProcessName","procs","psWinWmic","executeJsonToA","PsWinCmd","PsWinSelectObj","psWin","psStdout2ProcEntry","stdoutOpts","psPosix","alive","pidToS","maxBuffer","ignoreExitCode","ignoreStderr","processIdClause","stdoutResult_","wmic","onlyReqValued","parseFixed","ProcessId","wmiDate","CreationDate","CommandLine","title","PID","STARTED","COMMAND","radix","TokenRadix","decuss","randomChars","randomUid","chars","splitEveryN","sepChar","nullOnBusy","priorResult","nextArgs","running","delayNextRunUntil","ceil","doneLatches","isRateLimited","afterRunDelay","delay","resolve","cause","WrappedError","postRun","run","donePromise","Latch","status","needToDelay","minNextDelayMs","setMinCallDelayMs","RegExpEscaped","source","global","flags","ignoreCase","multiline","RegExpOptional","concatRegexp","ee","reniced","niceableCmds","basename","ffmpegPath","vlcPath","ensureSuffix","compactBlanks","nodeReniceWorks","TTLSet","priorityClass","priorityPosixToClass","processPriority","setPriority","permissionDenied","errno","pc","reniceWin","nice","renicePosix","isMainService","MainServices","isWebService","ServiceNames","web","isWorkerService","worker","isSyncService","sync","isTestService","test","isTestNotWorker","isStatsDbService","processName","main","desktop","DbServices","list","billing","StatsDbServices","isDbJanitorService","asSet","onAdd","console","setupLogger","impl","shim","time","setShim","hasShim","toKey","emit","useFsCache","cacheDelete","findValueIndex","low","high","mid","midV","found","shiftLte","deleteCount","retainLastN","optionalParams","quiet","stdoutEnded","crlf","streamEnded","envValue","stdoutWrite","ready","writeTTY","stream","write","FailStr","isFatalError","isHealthCheckError","ReadyStr","addToEnv","migrationFile","migration","StdoutWrite","shutdownSync","restartSync","forceRestartSync","rebuildLibrary","shutdown","splitFirst","ellipsize","ensurePrefix","stripPrefix","stripSuffix","wrap","he","padChar","strslice","haystack","needle","fromPosition","countChars","maxSplits","sliceTimes","matchedIndex","captured","uncaptured","unmatched","startsWithIgnoreCase","suffix","sfx","maxPre","maxPost","charsOmitted","toLocaleLowerCase","toLocaleUpperCase","CapRE","compareIgnoreCase","localeCompare","sensitivity","normalize","as","bs","uniqBy2","nn","hn","nl","hl","patterns","greatestBy","Smart2Dumb","dumbquote","smart","dumb","quoted","splitKeep","splitUp","flatZip","nonSeparators","separators","NonRetriableErrorFlag","pos","sortNaturalBy","escape","cb","lines","rev","parseInt","CommentRE","sep","replacement","dedupeRe","trimRe","delim","snake2camel","toUpperCase","stringShaToBuffer","msbits","createHash","shortStringSha","Radix58","encodeBuffer","lcs","Array2D","z","ret","hamming","_hamming","an","bn","A","B","firstThunk","aGrams","bigrams","bGrams","nonUniqIntersection","uniqIntersections","diffWithoutCommonPrefix","cpc","commonPrefixLength","longestNumericString","digits","lnsDiff","b1","notAlphaNumRe","radixDiff","stripDiacritics","RadixAlphaNum","positionalDiff","aChar","charCodeAt","bChar","pref","ham","dice","lns","minLen","TTLMap","deleteAll","getOrMaybeSet","lastSetOrGetTs","valuesByRecency","scheduleExpirationTimers","addIfMissing","onMissing","ctime","expired","TestLibraryDirPrefix","lastTime","UidRadix","uidForTs","uidSuffix","uidRe","tsFromUid","uid","username","gte0","userid","userids","geteuid","getuid","userInfo","groupids","getegid","getgid","gid","groupid","usernameFromEnv","getEnv","usernameFromUserInfo","toNotBlank","userNameFromWhoami","userNameFromWindowsAccessToken","isRootUser","versionPrerelease","gitSha","gitDate","WeakCache","findEntry","deleteValueIf","w","deref","WeakRef","wmi","year","mon","sec","micros","offset","UTC","WinDateRe","flatMap","dayMs","sorted","sortAssetFiles","assetAggregation","AggregateTypes","clusterSome","clusterEvery","isSimilarAssetFile","whyInequal","af1","af2","mapNotBlank","lc2","whyExifUidNotEql","ne","findInequalFields","aKey","aValue","whyNotSimilarAssetFile","allKeysDefined","definedAndEql","af1IsVideo","isVideoMimeType","mimetype","af2IsVideo","VideoImageMismatchMsg","uri","af1ca","CapturedAt","fromAssetFile","af2ca","capturedAtIsFuzzy","isFuzzy","allowFuzzyDateImageHashMatches","ih1","toImageHash","ih2","isSimilarImageHash","noRotation","overlaps","toISOStringWithPrecision","fieldDiff","dist","geohashDistanceMeters","fields","cameraId","imageId","lensId","exposureSettings","whyExposureSettingsNotSimilar","closeGeoHash","gpsErrorMeters","fmt","mismatched","useImageHashes","ihc","compareImageHashes","isSimilar","whyNotSimilar","minMatchesWithoutImageHashes","siblings","why","sib","id","assetFileUriFields_","nativePath","uri_","mountpoint","throw","assetFileStatFields_","stat","stat_","sidecareStats","mtime","fileSize","assetFileImageHashFields_","ih","imageHash_","DominantColor","toModeData","dominantColors","mkSortableAssetFile_","assetFileMetadata_","sha_","shim1","readTags","caFields","capturedAt","toAssetFileFields","dimensions","rotation","make","Make","Model","rating","geohashNumericShort","GPSLatitude","GPSLongitude","durationMs","duration","fps","VideoFrameRate","saf","UriSchemes","PS_NETWORK_FILESYSTEM_SCHEME","PS_LOCAL_FILE_SCHEME","PS_LIBRARY_SCHEME","dim2sort","width","height","sortScale","pow","variantSortCriteriaPower","mtime2sort","MetadataFields","files","sameSha","groupBy","maxMtime","assetFileSortCriteria","assetFileSortCriteriaPojo","af","parsedURI","URI","scheme","path","uri_scheme","uri_path","schemeIdx","parsedFile","parsePosixPath","metadataFields","resolution","capturedAtPrecision","capturedAtPrecisionMs","weekMs","metadataCoverage","isBrowserSupported","isSupportedByCurrentBrowserExt","isCover","includesIgnoreCase","copySuffixCountFromName","parentBasename","toReqValued","assetFileSortFields","variantSortCriteria","uriExists","uri2nativePath","AbortError","lastTimeout","clearTimeout","setTimeoutMs","toAsyncIterable","race","startedAt","PromiseStates","pending","serialId","toLogJSON","_ctor","state","omit","settledAt","observeQuietly","p","isPromise","maybeResolve","maybeReject","unref","stateStr","isResolved","isSettled","resolved","rejected","settledMs","asError","finally","onfulfilled","onrejected","firstback","endablesByRank","vacuumEndables","DefaultTimeoutMs","endable","validOrElse","_ending","endTimeoutMs","getDevEnvFlag","firstGt0","trace","thenOrTimeoutError","filterInPlace","entriesArray","endEndables","isSingleSpecTests","EndableInterval","callback","onEnd","onEnds","setIntervalMs","initialDelayMs","hasTimer","hasTimeout","timingOpts","maybeScheduleInterval","setInterval","awaitSettled","addEndable","awaitEnd","exit","LogLevels","toWrappedError","fatal","stderrWrite","onFatalHandlers","exitOnStdStream","streamName","eventName","res","rej","settledCount","setResult","priorD","resultD","resultIdAtStart","onChange","fn","runLaterIfBusy","undefinedIfBusy","runAgain","postrun","setImmediate","isRunning","thenCompact","thenCollectSerial","thenCollectParallel","maxConcurrent","promises","array","maxCpus","PermissivePromises","Promises","func","enqueueAll","tol","batchInput","objP","withinMs","isFalse","DefaultTryAllTimeoutMs","thenOrTimeout","err_","finally_","caught","isFunction","defaultIfNull","objP1","objP2","o1","o2","ifUndefined","predicatePromise","promiseThunks","unsorted","normalizeName","PromiseTimer","CountingSet","post","expectedTime","p98","slowTimer","tot","entriesBySumDesc","namePrefix","merged","agg","merge","mkElapsed","Elapsed","weightedAvg","weightedSampleAvg","errorCounts","callCounts","weightedAvgs","compactValues","mapFinite","report","sumSec","pushTime","pt","mapCompactObj","mapNotEmpty","maxConcurrency","EventEmitter","lastWorkTs","settleMsAvg","lastPushedNames","awaitAll","lastPushMsAgo","freeSlots","unsettledCount","runningNames","pendingNames","totalWorkCount","enqueue","laterPop","laters","serial","promiseOrLater","maybePopPendingWork","maxJobsToStart","isIdle","jobsToStart","runningSerialIds","blockedBySerialId","isTaskRunning","taskName","maybeRun","runningCount","hasPending","isFull","deferreds","pendingWithName","payloadsWithName","pendingPromises","awaitAllByName","_name","timeoutStacks","onSuccess","asPromise","_resolved","timedOut","timeoutHandler","_soft","soft","until","acceptable","timeoutResult","sentSoftTimeout","delayCount","delayMs","SettingsKeys","sensitiveEnvRE","sensitiveEnvRegExp","sanitizedEnv","allSettings","RequiredPosixEnv","RequiredWindowsEnv","requiredEnv","caseInsensitiveEnv","isPosix","pathWithDefaults","childProcEnvSettings","forWorker","PS_IS_CHILD_PROCESS","PS_IS_DOCKER","ELECTRON_RUN_AS_NODE","persistedSettings","hasValue","addToEnvMaybe","maybeOpts","childEnv","overrides","forceCLocale","detached","shell","childEnvLogged","childProcLocale","transientSettings","deleteFromEnv","isLogged","ps","nonPs","partition","getSettingByNameOrKey","cp2log","endProcess","closeStreams","killResult","childGotSigterm","waitForPidExit","newProc","niceable","ReniceAfterMs","AddPidAfterMs","spawnOptions","disconnect","stdoutChunks","stderrChonks","exitCode","endStream","stdin","data","stderrEnded","isIgnorableFunc","causes","spawn","level","trimLastNewline","WatchedChild","childFactory","onStdout","ignoreStopErrors","startTs","_stopped","startRate","Rate","mutex","ignorable","lastError","dataSep","maxErrorsPerMinute","fatalErrorRatePerMinute","endableRank","exitCommand","restartOnExit","denull","stopped","notRunning","stop","isErrorRateExceeded","eventsPerMinute","startRatePerMin","maxErrorsPerMin","restart","msSinceLastEvent","minTimeBetweenServiceRestartsMs","writable","errorsPerMinute","msSinceLastStart","isRecentMs","probationMs","currentPid","onRestart","onEvent","sout","onDataChunked","serr","onStderr","signal","stableBasename","stripCopySuffixFromName","aggressive","pf","sibling","isSelfOrDescendantOf","path_posix","posixPathFrom","origDir","originalsDir","anc","findAncestor","baseWithGrandparent","additionalDescription","plugins","setServiceName","verifyUidGid","addFooter","program","description","cliWrap","CliDesc","arguments","beforeParse","option","joinLines","DescriptionFooter","isMainElectron","afterParse","logcat","logtail","maxLineLen","ColorArgs","isEnvTrue","logColor","color","getFullYear","__is_daemon","daemon","whyMismatched","envKey","actual","toGt0","whyUidGidMismatched","WriteSettingsArg","writeSettings","systemSettingsFile","writeSystemSettings_","checkedDirectories","osConfigDirs","librarySettingsFile","writeLibrarySettings_","colorToTuple","rgb","normalizeRgbHex","lab","rgbhex2Lab","labhash","toLabhash","ModeBits","closeLabhashes","closeRgb","capitalize","bestLabName","colors","ColorNames","ciede2000_delta_e","CrayonColors","CrayonSupplements","DarkWikipediaColors","LightWikipediaColors","Greys","rgb2lab","bestLabhashName","rgbhex2Labhash","labhashToColor","unlabhash","pushUniq","lab2rgbhex","srgb2xyz","xyz2srgb","xyz2lab","rgb2xyz","lab2rgb","clampRGB","xyz2rgb","lab2xyz","clampLab","srgb","matXvec","rgbHex","rgbhex2triplet","rgbTriplet2hex","RefWhite","X","Y","Z","epsilon","kappa","xyz","fx","fy","fz","vecXvec","fx3","fz3","xr","yr","zr","LabBitZip","rgb2hsv","delta","hh","rgb2hsl","hsv2hsl","hsv","hsl2hsv","hsl","s0","hsv2rgb","mod6","hash","_unlabhash","minLabhash","zipMin","maxLabhash","zipMax","rgbhex","lab1","lab2","L1","L2","b2","dL","dA","dB","c1","dC","deltaH","MinCie","MaxCie","kL","kC","kH","std","smp","lStd","aStd","bStd","cStd","lSmp","aSmp","bSmp","cAvg","G","apStd","apSmp","cpStd","cpSmp","hpStd","hpSmp","dhp","dH","Lp","Cp","hp","Lpm50","T","Sl","Sc","Sh","deltaTheta","Rc","Rt","fmtPct","pct","fromModeData","md","ModeCount","fromLabhash","labhashBits","fromCentroid","totalPixels","centroid","toGreyscale","other","closeTo","_impl","totalCoverage","totalMatch","nearest","delta_e","scaled","scaled_delta_e","_match","DeltaEMatchPoints","lerp2d","labs","timeSync","runs","dominantColorKmeansRuns","cs","maybeFilterGrey","minK","distFunc","DeltaEImpls","dominantColorDeltaE","kActual","dominantColorMergeThreshold","setKActual","maxK","kmeansResults","Seeds","seed","km","kmeans","KmeansDefaults","mergeNearCentroids","centroids","score","leastByCtx","p84","centroidDeltaP84","kIn","kOut","kMerged","iterations","uniqColors","bestResult","dominantColorsFromModes","totalColors","iters","dominantColorsToRgbHex","pixelCount","dominantColorScore","_extractDominantColors","closest","cie76","cie76_delta_e","cie94","cie94_delta_e","ciede2000","maxIterations","initialization","distanceFunction","thresh","retries","greyThreshold","dominantColorGreyThreshold","filtered","filteredCount","labhashCountingSet","mergeLabhashes","mergedColors","lh","cnt","pctOmitted","sumf","threshold","winners","minSize","greyscaleColorThreshold","clamped","stdDev","mode0","mode0pct","ModeDataKeys","RgbHexRe","maxMsDelta","aTime","bTime","timeMs","deltaMs","Duration","fromMillis","toFormat","hourMs","iso","dt","DateTime","fromISO","zone","isValid","toMillis","dou","fromObject","invalidExplanation","dateIntervalRE","Fields","DateInterval","defaultZone","parseExifDateTime","splits","fromJSON","ExifDateTime","hasZone","setZone","zoneName","middle","plus","milliseconds","month","millisecond","edtField","precisionMs","datedToPrecisionMs","toDate","contains","datedOverlap","aContainsB","aOverlapsB","isDated","FuzzyDate","ExifDate","isDateTime","isDateObject","datedToStartTs","datedToMillis","datedToDateTime","toDateTime","fromJSDate","dateObjectToExifDateTime","hasTime","getMillisecond","getSecond","getMinute","getHour","getDay","getMonth","monthMs","yearMs","maybeCall","isoToDated","NoOverlap","aPrecisionMs","bPrecisionMs","aZone","getZoneName","bZone","a0","b0","toObject","DefaultDateTimeFormats","decCache","decodeDuration","parseDuration","encCache","fmtFullDuration","isDigits","captures","units","parseUnit","lt0","Units","unit","parseExifDateTimeRe","isEmptyObj","_k","fuzzyDateParsing","subsec","tzoffsetMinutes","timezoneOffsetFromRegExpMatch","zoneOffsetToName","rawValue","UnsetZone","Info","normalizeZone","UnsetZoneOffsetMinutes","format","fromDateTime","fromFormat","fromRFC2822","fromEXIF","ymd_hmsRegExp","nonNumericLookbackRE","yearRE","monthRE","dayRE","hourRE","minuteRE","secondRE","subsecRE","TimezoneOffsetRE","zoneToTzOffsetMinutes","edt","fmtDateTime","dateTime","DATETIME_MED","mapValidDate","setLocale","toLocaleString","BadMsRE","isoToDateTime","locale2dtf","shortDateTimeFormat","Intl","DateTimeFormat","isoDate","isValidDate","toJSDate","timestamp","formatted","tsDate","fmtDate","pad2","getDate","getHours","getMinutes","getSeconds","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","ISO_YMD_RE","ISO_YMD_LAX_RE","fd","localToday","toFuzzyDate","validYMD","toLocal","datedToLocal","following","toExifDateTime","getYear","ignorableSubpaths","subpath","offsetMinutes","includeUTCPrefix","rounded","hours","minutes","includeOffset","datedToYMD","ExifFmt","ExifFmtWithZone","separator","diffMillis","aMs","bMs","datedToEXIF","dis","dat","lte","maxDiffMs","zoneA","keepLocalTime","dated","date","priorZone","toUTC","FuzzyDateParser","extractDateFromPath","parseYMD","yearishRE","monthishRE","dayishRE","seps","optSeps","divideEqually","parseDated","descPredicate","isExifDateTime","ZoneSuffixes","stripDSC","extraDateTimeFormats","parseExifDateTimeFormat","parseExifDateTimeFromRFC2822","ymdParsers","ymParsers","yParsers","allParsers","fuzzyYearParsing","apply","usePathsToInferDates","ignorableDCF","reversePath","parser","Parser","hasDay","hasMonth","allMonthsRE","monthNames","rec","monthName2index","monthname","getMilliseconds","datesBeforeAreEstimated","isoToLocal","tsToLocal","datedToLocalSec","getCentisecond","localToDateObject","local","pop2","localToDateTime","dateObjectToDateTime","agoLocal","agoMs","localCs","localToDate","flavorOfTheMonth","dtf","monthName","offsetToMinutes","MaxTzOffsetHours","ValidTimezoneOffsets","AllZoneOffsetMinutes","normalizeZoneOffsetMinutes","allowedSlopMinutes","isValidZone","ZuluPrimitives","isUTCPrimitive","isInvalidNumber","FixedOffsetZone","utcInstance","isoToOffsetMinutes","ianaZoneToOffsetMinutes","UnsetZoneName","fmtOffsetMinutes","mins","utcRE","signRE","negativeRE","paddedHourRE","minRE","utc","tzHour","tzSign","tzMinutes","IanaZonePrefixRE","IanaTimezoneOffsetRE","iana","tz","badDates","badDatesISO","datedToISO","badDatesLocal","badDatesTs","whyNotValidDate","isNaN","minYear","minValidYear","maxYear","maxMonth","validYear","validMonth","validDay","AutoVacuumModes","schema","Schemas","models","libraryUidStore","NoLibraryErrorFlag","libraryUid","readUid_","cacheDir_","mkdirp_","readme","writeTextfile_","cacheDbFile_","cacheDbDir_","SqliteBase","forceLocalDbReplica","libraryDb","pathToDb","setupLibraryDataDir_","assertDirSQLiteReadWrite_","parent","db","useReplica","cacheDbFile","CheckpointTypes","srcDbFile","destDir","wips","sqliteFiles","wip","copyFile_","unwip_","onRetry","maxBusyDbMs","isRetriableError","isSqliteBusyError","randomInt","pageSizeBytes","dbPageSizeBytes","log2","dbBusyTimeoutMs","logSql","verbose","mkdirpSync_","dirname","partialPath","posixPathFromGrandparent","ll","defaultLogLevel","sql","dbFileSize","nativePathSizeSync","dbFileSizeMb","MiB","minDbCacheSizeMb","dbCacheSizeMb","minRamMb","maxMemoryMb","fileMustExist","readonly","timeout","pragma","dbSynchronousMode","dbWalAutoCheckpoint","dbAutoVacuumMode","tapThunk","RepairModes","dbFile","SQLiteSuffixes","existsSync","isDirSQLiteReadWrite","dirNativePath","child","mkdb_","prepare","close","pluck","dirs","sqliteVersion_","libraryVersion","sqliteNativePath","sqliteNativePath_","fullToolVersion","toolVersion","pathToDbDir","dataDir","SqliteExt","SynchronousModes","tmpCacheDirs","preexistingDir","tmpDir","cacheDirs","XDG_CACHE_HOME","DefaultDockerLibraryDir","homeDir","cacheSubDir","filterDirs","defaultCacheDir","firstDir","addSettingsListener","setSettingsDefaults","resetCacheDir","refreshEnvValue","broadcastChange","mkNoMedia_","envConfigDir","dockerConfigDirs","desktopConfigDir","desktopConfigDirs","ReadPhotoLibraryDir","isReadable","isReadableDirectory","isReadWriteableDirectorySync","XDG_DATA_HOME","XDG_CONFIG_HOME","fromEnv","mkdirpSync","paths","isDirectorySync","homedir","toPathnames","libraryDataDir","libraryPreviewsDir","containedByNativePath","descendant","ancestor","acceptSelf","pathToS","toNativePath_","whyNotLibraryDir","_whyNotLibraryDir","isDirectory","libraryDataDirPosixFile","settingsToml","isNonEmptyFile","modelDb","KB","previews","libraryPreviewsDirPosixFile","libraryDirOverride","resolveMaybe","previewsDir","README","libraryDirPosixFile","forMaybe","mkdirRW_","neverIndex","assertReadWriteExecutable","touch","readmeFile","libraryOriginalsDirPosixFile","setupLibraryOriginalsDir_","setupLibraryPreviewsDir_","librarySyncReportsDir","syncReportsDir","setupLibrarySyncReportsDir_","setupLibraryDbDir_","imageCacheDir_","defaultLogDirs","defaultLogDir_","logDir","readTomlFileSync","ld","picturesDirWindows","picturesDir","defaultPicturesDir","XDG_PICTURES_DIR","PS_ENV_KEYS","delimiter","SensitiveEnvRE","file","tokens","DevEnvFlags","DevEnvKeys","IgnorableEnvKeys","EnvKeys","onEnvChange","SensitiveEnvRegexPattern","camel2snake","firstNotBlank","PS_SENSITIVE_ENV_REGEX_PATTERN","sensitiveEnvRegexPattern","CaseInsensitiveValued","splitErrorMessage","errs","messages","getErrorDescriptions","isError","errorName","errorCode","stripAnsiEsc","ErrorDelimiter","uniqSubstrings","normalizeErrorMessages","IgnoredErrorNames","joinErrorMessages","trimmed","trailingChars","sortErrorFlags","extractErrorFlags","stripErrorFlags","errorRate","fatalErrorRate","internalErrorRate","lastInternalErrors","MissingError","maxMsgLen","maxStackLines","shortStack","stack","ErrorCodes","errorErrno","err2desc","UNKNOWN","OK","EOF","EADDRINFO","EACCES","EAGAIN","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EALREADY","EBADF","EBUSY","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDESTADDRREQ","EFAULT","EHOSTUNREACH","EINTR","EINVAL","EISCONN","EMFILE","EMSGSIZE","ENETDOWN","ENETUNREACH","ENFILE","ENOBUFS","ENOMEM","ENOTDIR","EISDIR","ENONET","ENOTCONN","ENOTSOCK","ENOTSUP","ENOENT","ENOSYS","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ETIMEDOUT","ECHARSET","EAIFAMNOSUPPORT","EAISERVICE","EAISOCKTYPE","ESHUTDOWN","EEXIST","ESRCH","ENAMETOOLONG","EPERM","ELOOP","EXDEV","ENOTEMPTY","ENOSPC","EIO","EROFS","ENODEV","ESPIPE","ECANCELED","ErrorFlags","IgnorableErrorFlag","PleaseSendErrorFlag","HealthCheckErrorFlag","DoNotSendErrorFlag","RetriableErrorFlag","HealthCheckWarningFlag","InternalErrorFlag","DbSetupErrorFlag","NonFatalErrorFlag","ErrorFlagsRE","FatalErrorPatterns","FatalErrorRe","InternalErrorRe","isPleaseSendError","notIgnorablePatterns","ignorablePatterns","BusyErrorRe","isSqliteDisconnectedError","isSqliteConstraintError","isNonRetriableError","retriable","doNotSendPatterns","doNotSend","internalError","InternalError","isInternalError","event","isFatalErrorAllowed","postProbation","lowErrorRate","acceptsFatalErrors","isServiceThatAcceptsFatalErrors","fatalErrorRatePerMin","errorRatePerMin","fatalErrorRatePerMinuteSetting","mkMessage","mkCtx","toErrs","codes","splitUniq","syscall","maybeAnd","isDoNotSendError","dedupeNeedle","broadcastEvent_","SharedState","broadcastExit","target","eventsToRetain","omniListeners","priorEvents","once","addOmniListener","watchEvent","removeOmniListener","emitDebounced","listeners","removeAllListeners","mkEE","setMaxListeners","CapturingEventEmitter","syncing","EventNames","updateReadyToInstall","clearCache","clearDbCache","clearToolCache","_msg","_err","_ctx","_error","nonFatal","fileChanged","_nativePath","invalidFile","mountpointsChanged","reloadLicenses","pause","resume","_isSyncing","progress","_p","updateProgress","settingsChanged","showAbout","taskResult","_result","timing","_elapsedMs","vacuuming","_isVacuuming","volumesChanged","TaskNames","checkOperations","repairAsset","_arg","repairAssetFile","runTagMaintenance","syncDir","isUID","EventNameToLevel","TaskNameToLevel","isStateFile","isWip","isSharedStateFileOrDir","isPsLockFileOrDir","isFreshEvent","evt","fresh","isStoredEvent","EventTimeoutMs","dedupeStoredEvents","uniqByLast","isBoolean","paused","events","tasks","eventEmitter","processors","taskProcessors","handledEventUids","sharedStateTaskTimeoutMs","handledTaskUids","setup","read","DirWatcher","save","oneAtATime","currentState","jsonFile","sharedStatePollMs","clearThisAndParent","isMtimeRecent","readFileMaybe","updated","unfilteredTasks","taskExpireTs","taskTimeoutMs","sortUniqBy","isStoredTask","sendEvents","withFsLock","isPaused","isSyncing","maybeSave","broadcast","canHandleTaskLocally","submitTask_","endsWith","syncingPids","syncingPid","setIsSyncing","isTaskResult","withLock_","noopIfContested","processor","sharedStateDir","root","visitDescendants","rmdir","getUid","getGids","getgroups","access","processUid","processGid","gids","isRoot","isUser","isGroup","mode","actualPath_","actualPathCache","FileCache","pathIsRoot","actualDir","readdir_","readdirSync","hasChildren","childNames","object","isSimpleFile","dirent","bflog","directoryEntry","de","posixPath","native2posix","withFastestAccess","msArr","shaMs","forPosix","posixPathOrFile","forDirectoryEntry","nativePathOrFile","fromPath","forChildDirent","DirectoryEntry","fromSimpleDirent","forSiblingDirent","pathnames","that","thatNativePath","isUNC","baseWithParent","ellipsizePath","baseWithParentNoExt","StatDirent","directoryEntrySync","statSync","childDirectoryEntries","dirents","_directoryEntryChild","resolve_","children_","filterInPlaceAsync","isFile","childDirectories","trapSync","childFilesSync","withFileTypes","actualChildNames","includesAll","hasNoChildren","descendants","someDescendant","depth","descendantsSync","thisDe","visitDescendantsSync","ancestorWithChildren","siblingDirectoryEntries","selfAndSiblings","firstExistingSelfOrAncestor","exists","splitNativePath","pathsForDateParsing","pathnamesWithoutDrive","bname","pathDepth","isAncestorOf","maybeDescendant","isDescendantOf","maybeAncestor","parentsAndSelf","parents","selfAndParents","actualPath","withPrefix","withNameSuffix","withSuffix","siblingOf","possibleSibling","isAbsolute","joinYMD","map3","pathElements","trap","methodName","errLogLevel","trapOr","statMaybe","thenDefined","notExists","thenNot","isDeleted","maxDepth","parentIsDeleted","mtimeSec","unixtime","lastModifiedUtc","toUTCString","statTimes","maxStatMs","maxStatDate","minStatMs","minStatDate","size_","isExecutable","isNotReadable","isReadWritable","isNotReadWritable","isReadWriteExecutable","isStatRWX","isReadWriteExecutableSync","isReadWriteExecutable_","isReadWriteDirectory","userDesc","maybeReadWriteDirectory","bytesConsideredEmpty","isNonEmpty","minSizeBytes","isEmptyFile","modifiedGTE","thisMtime","modifiedCloseTo","thisMtimeMs","isRecent","modifiedGT","thenMapOr","isNotDirectory","nearestDir","isFileSync","isDefined","_fse","rmdirSync","mkdirp","fileSha_","fileShaMeta_","autoInvalidate","readJson_","readFile","readJsonSync","readFileSync_","readFile_","readTextFile_","readTextFile","zReadFile_","zCopyToBuffer_","zcat","readLines","writeText_","txt","writeTextSync_","writeFile_","writeJson","writeFile","replacer","spaces","matchesContent","touch_","ensureFile","utimes","unlink_","rmrf","rmrf_","retryOnReject","errorIsRetriable","gunzip","createGunzip","gzip","createGzip","compressBrotli","createBrotliCompress","ensureFile_","ensureFileSync_","ensureFileSync","ensureNewNativePath","ensureNewNativePath_","ensureNew_","ensureNewSync_","ensureNewNativePathSync_","chmod_","chmod","chmodSync","zreadline","createReadStream","pipe","LineReader","siblingWithSameContents","childWithSameContents","targetSize","withSameName","sameSize","isNameHidden","targetSha","firstMatchingLine","newlineRe","contemporary","thenMap2Or","arr1","arr2","watchUntil","persistent","_useFsWatch","interval","sibs","transform","pipeline","autoClose","createWriteStream","attrTTL","projectRoot","ProjectPath","Root","execPath","extFilter","extType","respectFileExtensions","isExtType","excludedBasenames","isBrowserExtension","ExtTypes","SupportedByCurrentBrowser","isVideoExtension","Video","isAssetFileExtension","AssetFile","Newline","CACHEDIR_TAG","CACHEDIR_TAG_CONTENT","isCachedirTagFile","readFilePart_","position","dirPath","DefaultMacOSPaths","DefaultPosixPaths","DefaultDockerPaths","DefaultWinPaths","SYSTEMROOT","DefaultPaths","path2stat","subscribe","filterAsync","WipPrefix","statEql","subscription","unsubscribe","isSimpleDirent","Stats","for_","fse","parentAndBase","readdir","visitDescendantFiles","filterDescendantFiles","rmdir_","DefaultEnsureNewOptions","emptyIsNew","maxVersions","requireNumber","startIndex","arg","isEmptyFileSync","path2formattedPathForGlobCache","EndWithSepRe","formatPathForGlob","sf","isDir","Glob","glob","exclude","given","pattern","globsCaseInsensitive","makeRe","nocase","dot","posixSlashes","valid","bundle","pairToObject","GlobSet","globs","pushNativePath","defaultExcludeGlobs","addIgnorableSubdirs","subdirs","varDirs","watchSettings","excludeGlobsAdd","excludeBundles","excludeGlobsOmit","defaultDirPredicates","notSymlinkLoop","notInHiddenPhotoStructureDir","notNoMedia","notHidden","defaultFilePredicates","excludeGlobs","addGlob","omitGlob","mergeObjects","ifDisabled","disableIgnorableFilters","ifBlank","notExcludedFilePredicates","whyExcludedFile","SyncPredicates","whyRejected","notExcludedDirPredicates","whyExcludedDirectory","Predicates","seemsLikeSymlinkLoop","hasNoMedia","isHidden","inHiddenPhotoStructureDir","firstSelfOrAncestor","isCacheableFile","InstanceCacheMaxSize","rootNativePath","staleMs","isPrunable","scheduleInterval","cleanup","minFreshTs","victimDirs","prunedFiles","prunedDirs","isNoMediaName","pruned_file_count","pruned_dir_count","ShortExtRe","normalizeExt","Dirent","JpegExts","isExt","exts","SidecarFiletypes","SidecarExts","extAliases","regexCache","BadMimes","fromBuffer","mime","readRawField","mimetypeExt","defaultFsAdvisoryLockDir","lockNames","lockDir","locks","lockName","FsLock","lock","acquire_","LastNumberRe","PsLockExt","newUid","pidFromLockfile","lockfile","pidFromBasename","postdb","tryAcquire_","lockdir","fsLockFileBasename","startRefreshTimer_","fsLockDir","randomFloat","acquired","selfAndSiblingNames_","siblingNames","iAmLast_","iAmOnly_","lockfileRefreshMs","stopRefreshTimer","releaseOnFailure","dirty","skipFsLock","survivors","names","staleAt","childMtimeMs","fmtDuration","internalErrors","ownerPid","lockfiles","success","basenameIsPsLockFileOrDir","ensurePrefixSuffix","DefaultWatchedStatFields","WatchMgr","path2watcher","id2watchers","vacuumEnded","registeredPaths","watchedPaths","oldPaths","unwatchedPaths","np","maybeWatch","watchersForPath","or","fsw","registerWatcher","debouncedCheck","FsWatcher","maxPollIntervalMs","applyOnChangeAtSetupIfExists","debounce","check","watchDebounceMs","partialStatPrior","statNow","applyOnChangeIfTargetMissing","partialStatNow","changed","newMaxPollIntervalMs","debounceMs","forcedCheck","statTimeoutMs","Timeout","CopiesRe","Copies2Re","_stripCopySuffixFromName","initialName","ymdIsoRE","strippedName","strip","stripped","burstRe","coverRe","dscPrefixRe","GrepReader","Transform","objectMode","autoDestroy","_transform","chunk","_encoding","done","output","WritableToBuffer","out","actualExt","expectedExt","matcherForExtOrCompressedExt","extMatchers","fileStats_","shimmedFileSha_","uncachedFileSha_","streamSha_","transforms","hashAlgorithm","pwshQuote","Mode","isHiddenWin","isHiddenMac","DevMounts","MacSystemVolumes","MacPrivate","MacOsInstall","MacNotDmg","isPhotoStructureDmg","whyIgnorableMountpoint","isExcludedMountpoint","mkObject","onWrite","read_","write_","_flush","nomediaRe","NoMedia","variants","NoMediaNames","noMediaDirsCache","Halt","cached","readdirCached","someIsNoMedia","_dirHasNoMediaChild","_readdirHasNoMediaChild","dirHasNoMediaChild","isCachedirTagDirectory","someSelfOrAncestor","driveRe","drive","upcaseDriveLetters","posix2native","fileish","pathlike1","pathlike2","CompressedExtRE","spliceCapture","splitLast","filePaths","lhs","rhs","basename_","srcNativePath","destNativePath","move","overwrite","mountpoints","MinBinarySize","KiB","isBinaryFile","fallbackPathDirectories","systemRoot","tool","PATH","pathDirectories","isStatRX","fsutil","nslookupWin","pingWin","arpWin","contextFilter","sortFiles","_idx","NoOp","pflog","uriObject_","nativePath2uri","fileuri","normalizedPathUri_","etag","isMountpoint","existingSidecars","unlock","forUri","bestMountpoint","isDeletedUri","_uri","notBlankOr","toURI","isRootPath","pathBase","expectedBase","uriBase","schemeDiscount","httpHeaders","ETag","hide","hide_","mkNoMedia","hasNoMediaRecursive","isSidecar","isSidecarExt","existingExifSidecars","sidecar","defaultSidecarExt","defaultSidecar","jsonSidecars","thisOrSidecareMaxMtimeMs","ss","writeStream_","readable","onProgress","ByteCounter","destroy","applyIfEmpty_","fn_","returnUndefinedIfNotEmpty","skipWip","initiallyNotEmpty","applyWip_","wipIsRecent","WipTimeoutMs","unwipBase","mv_","destFileOrDir","onlyNativeFileCopy","maybeVerifySameOrThrow_","verifyFileCopies","zCopyFile_","zpipe_","copyTimeoutMs","MinIoRate","destOrDestDir","destOrDir","renameYMDHMS_","fmtYMDHMS","subdir","renameWithNameSuffix_","nameSuffix","saveIfNewOrDelete","move_","equalsUri_","uriIsEquivalent","obs","copyDest","copyFile","COPYFILE_FICLONE","PullProgressObserver","op","approximates","expectedSize","actualSize","btimeMs","birthtimeMs","wipDest","reference","mkTagFilter","readRawTags","notDimensionsTooSmall","minVideoDimension","minImageDimension","readMimeType","extractSizeInfoFromFile","ImageWidth","ImageHeight","notVideoTooShort","minVideoDurationSec","extractDurationSec","notVideoTooLong","maxVideoDurationSec","notMissingMimeType","notRejectedRating","rejectRatingsLessThan","Rating","notExcludedKeyword","keywordBlocklist","rawTagKeywords","leafIsExcluded","notMissingMakeAndModelTags","requireMakeModel","MIMEType","notFileMissing","isBaseFile","notFileTooSmall","minAssetFileSizeBytes","notFileTooBig","maxAssetFileSizeBytes","simpleFileFiltersFor","isPhotoOrVideoExtension","expensiveFileFiltersFor","supportedMimeType","isAssetFileMimeType","whyRejectFile","requiredExifTags","allNotBlank","hasBrowserImgMimeType","accepted","isExcludedDirectory","hostname","posix","pathTo","execDir","projectDirs","cwd","uniqInPlace","npx","Bin","Data","ICC","Migrations","Public","Tools","Views","isInDMG","projectPathRoot","fs","bufLen","open","ReadableBuffer","Readable","ReadDirCacheName","readdirCacheDir","clearReaddirCaches","path2cache","readdirCacheMs","clearCachedReaddir","readdirUncached_","quickResult","readdirSizeCacheThresh","slowDirs","toNotTimeout","thenOrTimeoutAt","_readdir_","maxDuplicatePathElements","winDriveRE","statToType","statFieldToComparable","whyStatNotEql","aType","bType","aVal","bVal","isEmptyStats","minFileSize","throwIfNoEntry","nativePathExistsSync","onData","Chunker","filterBlanks","incompleteChunk","onChunk","destroyed","writableEnded","writableFinished","PassthroughStream","Duplex","_write","closable","remoteFamily","remoteAddress","remotePort","AssetFileSyncStates","SyncFileStates","FileDoneStates","SyncDirStates","FileStateDescriptions","enqueued","started","noop","deleted","skipped","synced","failed","copied","note","unknown","DirStateDescriptions","scanning","scanned","canceled","recordToBullets","WarnStates","syncReportDir","syncReportReadme","SyncReportHeaders","details","url","ensureSyncReportReadme","min_mtime","isCsvExt","syncReport","SyncReport","outputFiles","outputNativePath","rowCount","rowObj","unparse","syncReportMaxRows","wrap_","mkSyncReportPath","toolsDir","pathToTool_","firstDefinedLater","pathIfExists","platformName","devPathToTool","systemPathToTool","dcrawEmuNativePath_","rawIdentifyNativePath_","jpegtranNativePath_","toMs","rStat","atimeMs","retainFileBirthtimes","atime","btime","mkuid","safeRandomUid","UIDStore","JsonFileStore","rootDir","createdAt","SystemUIDStore","LibraryUIDStore","fsp","trashOrUnlinkNativePath_","nativePathIsFile","unlinked","trySoftDeletes","mapAsyncSerial","Writable","deferred","_buf","writeFileSync_","writeFileSync","zcat_","outputStream","createBrotliDecompress","readJsonGz_","outputJsonGz_","exiftoolHealthCheck","defer","HealthCheck","section","pendingMsg","exiftoolVersion","tt","exiftool","exiftoolPath","externalDirsHealthCheck","rejectIsWarn","getHomeFolder","getPicturesFolder","getVideosFolder","getDesktopFolder","defaultApplePhotosLibrary","valueCount","li","sortByCaseInsensitive","tuples","HealthCheckLevelToLogLevel","ok","disabled","HealthCheckLevelOrder","summaryForLevel","buttons","restartResetOrShutdownButtons","links","DockerVolumeLink","method","icon","WhatIsALibraryLink","UnreachableCaseError","traceLater_","onResultChange","priorRunStates","addError","addLoadingMsg","normalizeMsg","unseenOrOldestPendingTrace","shownCounts","findById","loadingMsg","runState","summary","enableAll","disableAll","skipHealthCheckIds","HealthCheckIds","testResults","errorResults","notOkResults","levelIsNotOK","summaryFromResults","allResults","settled","rerunSetup","ordinal","okLinks","warnLinks","noLibraryLinks","errorLinks","onReset","HealthCheckSections","toResultSyncMaybe","settledAtLeastOnce","isSkipped","toLevelSync","toResultSync","resultOrTimeout","thenOrTimeoutAs","partitionLinks","pendingIds","pendingCount","BaseHealthCheckSummary","HealthCheckLevels","RunStates","hcWithLevel","hcNotOK","linkIds","checks","plur","fmtDateShort","resetDebounced","testHealthCheck","PS_TEST_HEALTH_CHECK_LEVEL","healthCheckSetup","heifHealthCheck","libraryDirectoriesCheck","libraryFreeSpaceCheck","settingsEnvHealthCheck","settingsSystemHealthCheck","settingsLibraryHealthCheck","memoryHealthCheck","nodejsHealthCheck","notInDMGHealthCheck","powershellHealthCheck","securityHealthCheck","sqliteHealthCheck","systemLoadHealthCheck","videoHealthCheck","volumeHealthCheck","lastLibraryHasSettings","libraryHasSettings","newValue","vtd","getHeifSupportDetails","verifyLibraryDirs_","setupLibraryDirs_","testDockerLibraryDir","toEnvLine","testLibraryDir","minDiskFreeGb","toCheck","vol","bestVolumeForPath","minFreeBytes","GB","descriptions","fmtBytes","available","setting","asTest","thresholdBytes","memoryUsageTest","totalmem","memoryUsageMb","memoryUsageIsHigh","checkboxLabel","checkPowerShell_","PUID","PS_FAIL_SECURITY_HEALTH_CHECK","_envValue","sensitive","toEnvValue","warnings","verifyPsEnvSettings","validateSettingsToml","flavor","importFileSettings_","tooBusy","isTooBusy","CpuUsage","busyPct","cpuLoadPercent","getVideoToolDetails","vols","volumes","localVolumes","getLocalVolumesWin_","dfPosixRawLocal_","fmtAgo","notOk","remote","badShaCache","fp","isBadSha","_sha","AssetPreviewBuilder","ap","assetFiles","assetId","forceContextOrSetting","ctor","build_","getAssetFileNativePath","_build","infoForBest_","throwIfInvalidFile_","filesize","fits","fitSizes","assetFileId","uris","sqWidths","ImageSize","sq","outputSize","fitWidths","priorIfValid_","forceSync","forceRebuildPreviews","readInfo","priorFits","currFits","equivalentFitSizes","leftovers","fitname","fitsize","fileForWidth","reducer","writeInfo","srcFile","PushProgressObserver","fit","priorExistingFiles","existingFiles","origSharpReadable","sharpReadable_","largestFit","origSharp","toSharp","isHeifMimeType","rotate","previewTagFiles","sqDim","sqSharp","lsq","largestSq","bestFitNameForSq","megapixels","origDim","fitSharp","clone","fitDim","inputDim","resize","dmegapixels","Fit","includePreviewTags","toJpeg","sh","fmtDim","positioned","squareThumbStrategy","includePreviewTags_","unwipped","epilog","mkDownloadableTitle","imageOrVideo","previewsRoot","ReducerNames","pi","map2","dimToSize","extname","href","assetImgLink","infoJson","id2id","paddedId","assetPath","splitEvery","parentNotExists","thenOrElse","existingJpgs","sortByAsync","extractPreviewInfo","fileForSuffix","mp4","filesForReducer","smallestFileForReducer","largestFileForReducer","widths","posterLink","imgAttrs","lazyLoad","assetImgAttrs","assetSqImgAttrs","CropStrategies","SAMPLE_SIZE","SQRT","initSQRT","COS","cosines","initCOS","dctPixels","pixels","dct","matrix","N","F","applyDCT","totalSum","img","greyscale","toBuffer","rgb2labArray","Megapixels","aspect_ratio","widthF","roundAspectRatio","isSharp","metadata","FitAlways","QVGA","QQVGA","old2new","sizes","smallestDim","isMimeTypeSupportedByBrowser","oldArr","newArr","extractHeifConvertVersion","helptext","isHeifSupported","sipsPath","heifConvertPath","sips2jpeg_","heif2png_","isHeifConvertSupported","withImageCache_","_heif2png_","HeifMimeTypeRE","ImageCacheName","watchCacheDir","cachedImageFile_","ciSafePath","imgCacheSubdir","tag","bits","_imageHash_","sizeInfo","minDim","fitToResolution","dominantColorPixels","s1dims","jpeg","toFile","removeAlpha","background","outside","withoutEnlargement","rgbInfo","resolveWithObject","channels","labTriplets","rgb2labTriplets","dc","extractDominantColors","isGreyscale","labsAreGreyscale","meanDiff","meanDiffHash","meanDiffHashCIELAB","phashBits","dctHash","dctHashCIELAB","meanHash","b64encodeBits","diffHash","dominantColorsDescription","__imageHash_","isImageHash","isModeData","omitModeData","HashDim","imageCorr","colorCorr","aRotation","diffs","diffCIECorr","closestLab","GreyscaleRE","isGreyscaleMeanHash","Degrees","splitbits","b64decode","dim2","hammRatio","m_a","m_b","hammRatioIntArrays","rotateSquareMatrix","isSimilarImage","imageHash","a_","b_","forceColor","forceGreyscale","meanHashCorr","diffHashCorr","dctHashCorr","dominantColorCorrelation","mimeMatches","aAspectRatio","aspectRatio","maybeDimSwap","bAspectRatio","aspectRatioMismatches","isCloseAspectRatio","imageCoeffDelta","colorCoeffDelta","imageHashFuzzyDateDelta","imageHashDifferentMimetypesDelta","imageHashGreyscaleDelta","minImageCorr","clamp01","minImageCoeffPct","minColorCorr","minColorCoeffPct","fmtAspectRatio","failingImageHashes","hashAvg","onlyMeanHash","andList","colorPass","hashCorrAvg","isVerySimilarComparison","deg","b64encode","Square","previewResolutions","maxWidth","maxHeight","rotational","maxDim","maxMP","maxPixels","minDimension","inputSize","isPortrait","dimSwap","previewSharpen","sharpen","sharpRenderOptions","UHD8k","UHD5k","UHD","QHD","FHD","HD","WVGA","S480","S240","S120","S60","includedPreviewTags","writeTags","ca","assignFields","asExifTag","FocalLength","focalLength","FNumber","aperture","ExposureTime","shutterSpeed","ISO","Source","overwriteTags_","mhash","dhash","hashSize","Previews","apb","AssetPreviews","buildAssetPreviews_","roundToNearestRatio","ratioOrDimension","RatioEpsilon","mapGt0f","ratio","StandardAspectRatios","similarRatios","absdiff","nearestAspectRatio","Ratios","rawInfo_","parseRawInfoOutput_","Filename","SharpFits","lteBoth","cover","ltBoth","fitInside","Reducers","sharpFromRawBuffer","quality","previewQuality","progressive","previewProgressive","mozjpeg","previewMinimized","SharpFailOns","setupSharp","simd","enableSIMD","enableVipsCache","concurrency","sharpThreadsPerProcess","_imgFromExif_","useBuffer","extractBinaryTagToBuffer","extractImageForThumbs_","imgFromExif_","tags","fileAspectRatio","BinaryField","maxEmbeddedBuffer","failOn","imageFailOn","renderedAspectRatio","sharp","tmpImageFile_","extractBinaryTag","addParameterContext","mt","_strategies","addStrategy","rot","isVideo","isRaw","isLibrawMimeType","sid","map2Gt0","fileDimensions","isFilePortrait","isSharpMimeAndNoMinDim","isSharpMimeType","includeSidecars","tagsToExtract","embeddedPreviews","embeddedThumbnails","minBytes","sizeSortedTagNames","heif2img","raw2tiff_","isVideoSupported","extractVideoFrame_","_sharpReadable_","MinSyncFileTimeoutMs","DurationMultiplier","ImagePoints","p0","p1","RawPoints","transcodeTimeout","isVideoExt","syncFileTimeoutForFile","readMeta","syncFileTimeout","dbMs","tagMs","copyMs","lerpPoints","thumbMs","rawDecodeMs","isRawImageExt","transcodeMs","validateMs","validateVideos","fileOrPath","whyInvalidFile","validateJpegImages","validVideo_","validJpeg_","validateRawImages","sr","failOnError","toSharpFailOnError","tiff","validationErrorAllowlist","validationErrorBlocklist","joinPatterns","mkLog","ffmpeg","ignoreffmpeg","ffmpegVersion","vlc","ignorevlc","vlcInfo","extractMaxBitrate","rawTags","bitrateKbps","extractBitrateKbps","transcodeBitrateUHD","videoBitrateKbps","bitrateKps","transcodeBitrateQVGA","_extractVideoFrame_","__extractVideoFrame_","forceImpl","useFfmpeg","useVlc","isFFmpegSupported","isVlcSupported","srcMtime","extractRotation","srcDim","extractSizeInfoFromTags","destStat","destDim","startAtSec","videoFrameAtSec","destWip","ffmpegFrame_","vlcFrame","deleteAllTags_","rotateInPlace_","isVideoTranscodingSupported","transcodeVideos","needsTranscoding","audioCodecs","AudioFormat","isSafeAudioCodec","doNotTranscodeAudioCodecs","videoCodecs","VideoCodec","CompressorID","CompressorName","isSafeVideoCodec","doNotTranscodeVideoCodecs","isSafeMimeType","doNotTranscodeMimeTypes","guessExpectedSize","durationSec","destRawTags","srcRawTags","srcDurationSec","isTranscode","expectedFilesize","transcodeMaxResolution","srcPixels","fitInsideToMaxPixels","original","bySize","byTime","ffmpegTranscode_","vlcTranscode_","_transcode_","ffmpegValidVideo_","ffmpegThreads","versionRe","_ffmpegVersion","clearCaches","ffmpegVersionDescription","hwaccel","ffmpegHwaccel","isDisabled","mapGte0f","toFixed","isIgnorableValidationError","bitrate","ffmpegAvcTranscodeArgs","devnull","rotate_","degrees","isRotation","readableToFile_","dcraw_emu_","TiffOutput","WriteToStdout","Colorspace","IgnoreOrientation","maybeHalfSize","dcrawEmuArgs","childProc","expectedElapsedMs","dcrawTimeout","VersionRe","DefaultVlcArgs","_vlcInfo","versionPosix","versionWin","isRaspberryPi","pathOrFile","stopTime","tcOpts","stdOpts","brotliDecompressSync","sids","_l","_sids","matchedUids","uids","matchedSchemePrefixes","matchedSchemes","prefix2scheme","uidsOK","mat","dateOK","cmpVal","S","rolazy","v_","V","utcIsoToTs","toGte0","L","rawFromDir","UserTimeoutMs","ud","someOrTimeout","rawLicenseFromSettings","getScheme","isValidUid","GenericUUIDs","UidLength","pfx","uidRE","schemeCounts","addUids","fileGrep_","cpuinfoSerial","toUID","oemRe","readFiles","linuxMachineUid","lm","linuxProductUid","lp","linuxBoardSerial","macUids","ia","mp","mac_IOPlatformUUID_","win_machineGuid_","MachineGuid","winMachineUid","wm","cpuModel","cm","boardModel","bm","systemUid","si","volumeIds","vl","uuid","priorSids","sidFuncs","sortUids","procColors","colorProcessName","_inspectOptions","logLevels","inspectOptions","showHidden","customInspect","maxArrayLength","logContextLimit","breakLength","defaultProcessName","formatMeta","prepMeta","formatLogEntry","le","contextColor","logFilter","highlight","enabled","pushLogEntries","flush","loggers","addContext","param","throwIfAborted","aborted","msTolevel","tapAsync","errorLevel","errorMsg","LogWriter","DefaultLogFormatter","PlaintextLogFormatter","defaultFrom","_service","_pid","extractFrom","pidStr","logEntry","level2syslog","host","short_message","full_message","errorToVerbose","mkConsoleLogger","nul","logBroadcaster","server","portStr","logServer","port","parseLogServerSetting","LogBroadcaster","socket","logFormatter","GelfLogFormatter","LogFilterImpl","logServerLevel","createConnection","DefaultLogFlushMs","fmtIsoDate","LogDirCleanup","isBillingService","FileCleanup","sortByInPlace","SimpleLogFilter","minLogLevel","silent","defaultLevelIndex","levelIndex","LogLevelRe","contexts","contextOverride","co","TraceLevelIndex","LogLevel2SyslogLevel","errorMs","PromisePlaceholder","levels","limit","meth","isPromiseLike","mapNullEntries","omittedKeys","DefaultLogEntryWriter","consoleLog","LogTail","writer","filenameMutexes","file2pos","lastReadFiles","readSystemSettings","logdir","scan","ignorableFilename","setLogTailEnabled","flushTimeout","scanTimeout","popExpiredLogEntries","watchDir","ifLog","watchListener","consoleError","firstTime","nowish","currentLogDir","datedLogDir","currentSize","priorSize","readLogEntries","_logTailEnabled","logEntries","SortedSet","logEntrySorter","flushEveryMs","pendingWrites","_linesSinceRotate","_nextForcedRotateTs","nextMidnightTs","_startIndex","logOpts","maxLinesPerFile","errorLogger","writeRecentLogEntries","recentLogEntries","clearRecentLogEntries","shouldRotate","_logfile","toFlush","remainingCapacity","logCompression","gzip_","paddedLogLevels","rightPad","chunkToLogEntry","isLogEntry","SentLogLevels","recentLogEntriesByLevel","bl","setupLogFormatter","fl","currentFileLogger","logStdout","tailLogs","setColorEnabled","currentIsColored","ColoredLogFormatter","settingIsColored","vec","pushAll","maxSamples","samples","_n","_min","_max","_m","_s","_samples","_weightedTotalAvg","with","priorM","sigfigs","empty","mean","sd","p16","p29","p38","p99","variance","sampleMode","sampleModes","sampleVariance","sampleStdDev","sampleAvg","sampleSlope","slope","weightedTotalAvg","sigmasFromMean","mu","sigma","splitBits","ea1","dims","clampValue","randomValue","bit","dimIndex","dIdx","isBitSet","BitShiftMax","disableBitshifting","bitsSetBig","setBits","ml_kmeans","lerp","v0","v1","nearest2","dx","submatrixForEach","rowFrom","rowTo","colFrom","colTo","submatrixMagnitude","submatrixStdDev","submatrixMode","vector","rowIdx","colIdx","quarterMagnitudes","fromDim","toDim","colDelta","rowDelta","rowStart","colStart","prng","factors","y1","y2","primeSeeds","encodeDigits","PrimesPerBin","PrimeBins","primes","idColumn","primeInt","memoize","SeedCount","numericSha","zero","Radix","numerals","decodePreparser","digitsToNumerals","num","negate","encodeBigInt","decodeBigInt","MAX_SAFE_INTEGER","ch","tokenEql","normalizeToken","Hex","Base64","AlphaRadix","NumericRadix","eventCount","eventsPerSecond","normalizeRotation","SquareMatrix","ary","index_a","index_b","transpose","reverseRows","reverseCols","UUIDRegExp","modes","topN","Mean","l2norm","strength","normMin","normMax","xMin","xRange","normRange","x_mean","y_mean","denom","carryForward","vectors","finiteOrElse","hex","base64","gunzipSync","gzipSync","gz64decodeString","hammRatioBigInt","_hostname","myExternalIpAddresses","myIpAddresses","isLoopback","networkInterfaces","address","loopbackPatterns","octetRE","ipv4Re","friendlyname","memoizeAsync","ipOrName","nslookup","loopbackRE","octets","nameOrIp","resolve4","firstNonBlank","aAddrs","bAddrs","ping","ipAddrFromPing","__filename","_platform","inspectFlag","NODE_INSPECT","isCI","isWinPortable","PORTABLE_EXECUTABLE_DIR","isLinux_x64","isArm","isLinux_arm","isLinuxAppImage","APPIMAGE","APPDIR","isLinuxSnap","SNAP_USER_DATA","containsRpiModel","cpuinfoPath","procDeviceModel","camel2words","_logger","predicates","explain","notApplicable","negateFilterName","firstFalse","logged","firstTrue","firstDefined","DefaultThrottleMs","recentProgress","recentDone","isProgressEvt","onProgressEvt","throttleMs","onInterval","completed","emitProgressEvt","incrProgress","incremental","Done","ConvertToCompressedJson","clearMockResults","ensureInstance","bco","mockResults","BatchCluster","processFactory","powerShellArgs","versionCommand","powerShellCulture","pass","fail","powerShellProcs","taskTimeoutMillis","setMaxProcs","pwsh","versionPojo","Major","Minor","Build","spawnedProcCount","pushMockJsonResult","pushMockResult","passed","thenElapsed","enqueueTask","Task","fixed","which","AssetFileSortCriteria","BooleanSetting","Setting","toEnv","notBlankToS","BoundedFloatSetting","addToJSON","BoundedIntegerSetting","ColorDistanceFunctions","DominantColorKmeansRunsDefault","DominantColorPixelsDefault","DurationSetting","encodeDuration","userValue","humanValue","fileValue","OptionalDurationSetting","FloatSetting","ForceContextKeys","IntegerSetting","getSettingValue","disableAllFilters","setStrictDeduping","strictDeduping","minExposureSettingsCoeffPct","allowFilesystemSleep","imported","setQuickSyncMode","quickSyncMode","scanMyPictures","newPath","priorValues","scanPaths","assetSubdirectoryDatestampFormat","assetPathnameFormat","syncIntervalHours","syncNewIntervalMs","syncChangedIntervalMs","dbBackupIntervalMinutes","dbBackupIntervalMs","enableSiblingInference","siblingInference","TagInferenceSettingValues","never","quickSyncSettings","argonDefaults","argon2TimeCost","argon2MemoryCostMB","argon2Parallelism","argonQuick","quick","tmpValueIfUnset","tmpValue","argon","OptionalFileSetting","OptionalStringSetting","OptionalFloatSetting","OptionalIntegerSetting","esc","replaceAll","withZone","stripQuotes","grandParentBasename","SettingCategories","LibraryCategories","Auth","Color","Db","Deduping","Events","Filters","HealthChecks","Parsing","Reporting","Sidecars","Subscriptions","Sync","Tagging","Volumes","Web","SystemCategories","readFromEnv","optsOverrides","getState","user","_userValue","_fileValue","tmp","_tmpValue","dump","isUnset","setState","normalizeValue","shallowClone","maybeBroadcastChange","valueOrThrow","civ","setFromEnv","environment","setValueIfDefined","unWatch","mutateFunc","_names","_setName","aliases","_key","envFromName","_keys","envAliases","altKeys","category","categoryType","transient","advanced","envValueOrDefault","resetDefaultValue","exampleValue","overrideValue","cie","toCommentedLines","deprecated","WrapComments","maybeAddList","pluralize","orList","toTomlLines","wrapTomlToLines","prepend","exposeNetworkWithoutAuth","DefaultMaxEmbeddedBuffer","Paths","copyAssetsToLibrary","StringSetting","scanAllDrives","StringArraySetting","argvScanPaths","pidFile","Cache","imageCacheMs","Logging","logWebRequests","logWebDir","useFsWatch","Filesystem","excludedFilesystemTypes","DefaultExcludedFilesystemTypes","excludedRootDirectories","DefaultExcludedLinuxRoots","excludedMountpointPaths","DefaultExcludedLinuxMountpointPaths","excludedMountpointBasenames","validateMountpoints","mountpointsTtlMs","remoteFilesystemTypes","volumeUuidFilePaths","readVolumeUuidFiles","writeVolumeUuidFiles","writeVolumeUuidMountpointBlocklist","volumeMetadataTtlMs","Networking","localhost","trustProxy","Security","cspReportOnly","upgradeInsecureRequests","cspDirective","disabledHelmetMiddleware","StringEnumsSetting","HelmetPlugins","shortProcessNames","Processes","BatchClusterOptions","minDelayBetweenRetriesMs","exiftoolProcsPerChild","syncExitTimeoutMs","timeoutThrottleCoeff","maxConcurrentImports","maxConcurrentImportsWhenRemote","StringEnumSetting","enableArchive","enableDelete","enableEmptyTrash","enableRemove","enableRemoveAssets","dbRetries","dbBackupRetentionCount","INCREMENTAL","dbWalCheckpointType","TRUNCATE","dbInvalidFKThreshold","NORMAL","dbRepairMode","dbBatchSelectSize","dbBatchUpsertSize","dbForceRecover","dbBackupRemoteOnSuspend","showFileInFolderUsesThunar","showFileInFolderUsesFileUri","showFileInFolderCommand","dcraw_emuPath","toolPaths","Desktops","UpgradeChannels","updateOnLaunch","updateCheckMinutes","autoHideMenuBar","hideOnLaunch","pauseSyncOnBattery","email","reportErrors","maxErrorsPerDay","minStreamCorrPct","lazyLoadExtraVh","hiddenHomeTags","placeholderThumbs","fastForwardEmptyTags","scanLibraryFirst","scanLibraryLast","progressRetentionDays","progressStaleDays","copyToLibraryMimeTypes","writeSourceTagToLibraryCopies","startPaused","retryEnqueued","forceRebuildLibrary","dropWorkQueues","noModelUpdates","exitWhenDone","overwriteOriginal","noAssetFileUpdates","noAssetUpdates","resyncAssetOnVisit","cpuCount","excludeNoMediaAssetsOnRebuild","matchSidecarsCaseInsensitively","matchSidecarsFuzzily","defaultSidecarType","writeMetadataToSidecarsIfImage","sidecarTagBlocklist","writeMetadataToSidecarsIfVideo","writeMetadataToSidecarsIfSidecarExists","maxContemporaryAdoptionAssets","minCapturedAtPrecisionDifferentMimetypes","fuzzyDatePrecisionCoeff","iccProfileMappings","attention","FitSizes","skipPreviews","DefaultIncludedPreviewTags","truncated","capturedAtTags","DefaultCapturedAtTagsConst","capturedAtTagsFallback","ProblematicCapturedAtTags","defaultVideosToUTC","defaultCopyright","likeRating","lensMakes","DefaultLensMakes","twoDigitCutoffYear","useStatToInferDates","useLibraryDirsToInferDates","auto","siblingInferenceBasenameCoeff","writeInferredTagsToLibraryCopies","recountAllTags","tagCamera","tagLens","tagFullLensModel","tagYMD","DateTagFormats","ym","tagDateFromStat","tagKeywordsFromPath","tagKeywordsFromMetadata","keywordTags","keywordReparenting","KeywordReparentingStrategies","rootTagAlbumsAliases","rootTagKeywordsAliases","rootTagWhoAliases","keywordDelimiters","keywordPathSeparators","tagFileType","tagJsonFaces","tagFaceRegions","whoTags","tagNamesFormatter","NameTagFormats","tagNamesDefaultFamily","tagNamesCapitalizedAsFamily","tagNamesOrder","NameTagOrders","tagNamesSurnamePrefixes","tagNamesSurnames","tagNamesGiven","tagNamesFamilySurrounds","tagNamesGivenSurrounds","tagNamesLexical","excludedRootTags","tagDisplayNameFS","tagDisplayNameFSRoot","tagDisplayNameFSRootWithHostname","tagDisplayNameFSLabels","tagAlbumFilenames","tagAlbumTitle","tagAlbumTitleHierarchies","tagAlbumDescription","tagAlbumDate","tagAlbumsExcluded","omitAncestorTags","subscriptionTimeoutMs","pickPlanOnWelcome","coupon","autoRefreshLicense","license","withDefaultPaths","settingsSorter","SuggestedDirsEnvKey","persistedSystemSettings","persistedLibrarySettings","SettingsByNameOrKey","ciSettings","DefaultSharedStateDir","defaultLibraryDir","defaultOriginalsDir","SettingsToml","settingsFile","_readSettings","savedLibraryDir","readTomlFile_","systemSettingsVersion","readSettingsVersion","librarySettingsVersion","_libraryHasSettings","lsf","readSettings","readLibrarySettings","VersionRE","writeToml_","wrapComments","versionForSettings","priorCat","cat","trimRight","_writeToml_","nonDefaults","settingsToObj","st","tomlMap","toNotEmpty","handleMetaSettings","handleDeprecatedSettings","UnclearableSettings","clearSettings","extra","extraLines","valueToS","_join","splitStringArray","compactBlankish","_split","toValidValue","toValidValues","getCI","dv","parseStringEnum","parseTomlBuffer","stringifyToml","kvToToml","parseBitrateKbps","pat","fac","stripCounts","trimLeftPadding","capturedAtSrcFromTags","capturedAtSrcFromStat","capturedAtLocal","capturedAtOffset","capturedAtSrc","spread","toExifString","toOffsetMinutes","datedToOffsetMinutes","exifOffsetMinutes","isFromTags","isInferred","localIsFuzzy","fmtMs","hasTz","isUTC","isUTCZone","hasMillis","OffsetTime","SubSecDateTimeOriginal","DateTimeOriginal","fuzzyPrecisionMs","localBoundaries","datedToStartDateTime","minus","extMimetype","capturedAtFromTags","_capturedAtFromTags","OverrideUTCZoneTags","skipInference","uniqPath","skipPathInference","cannotUseDateFromPath","inferred","extractStatBname","extractStatPathTime","inferCapturedAtFromSiblings","capturedAtFromBasename","capturedAtFromPath","capturedAtFromStat","tzSource","localSec","least","overlapsWithLeast","earliest","IgnoredCapturedAtTags","MediaDuration","TrackDuration","_addInstanceIdsToTags","shutdownExiftool","_exiftool","ExifTool","batchClusterOptions","et","gracefully","tagname","tagsCache","rawTagsCache","mimetypeCache","readSidecarTags","IgnoredSidecarFields","_readTags","moveOriginal","writeTagArgs","writeTagDest","tagName","srcMimeType","isImageMimeType","useSidecar","fileTags","_readRawTags","file2tags","readJsonSidecar","histories","sidecarTags","safeTags","sidecars","assignNullishFields","getInferredHistoricValues","pickedResult","parseTags","skipSiblingInference","canInferForDir","tzMeta","maybeInferTimezone","assignUndefinedFields","extractMakeAndModel","inferMakeAndModel","isExifUnset","Copyright","lensMakeModel","extractLensMakeModel","extractCapturedAt","extractExposureSettings","extractTitleDescription","cameraIdFromTags","imageIdFromTags","lensIdFromLensInfo","extractRating","__parsedBy__","definedValues","_parseTags","IgnoredTypedFields","FileFormat","FileIndex","FileName","FileNumber","FileNumberMemory","FileNumberSequence","FileSize","FileType","FileTypeExtension","FileVersion","SourceFile","ExifToolVersion","RAFVersion","Directory","ExifByteOrder","FileAccessDate","FileCreateDate","FileIndex2","FileInfoVersion","FileInodeChangeDate","FileModifyDate","FilePermissions","eqlAsync","readRaw","pluckCaseInsensitive","path2entries","tagEntries","problems","Warning","safeUUID","ImageNumberSynonyms","CameraSerialNumberSynonyms","TagSynonymGroups","stringifyExifUid","normalizeString","renderExifUidId","uniqSynonymValues","blankish","zeroesRe","group","Tag2SynonymGroup","splitToEntry","keyColonValue","decodeExifUid","compactBlankValues","whyDefinedNotApproximate","minCoeff","lensMake","lensInfo","mli","Tag2Synonyms","aObj","bObj","commonSimpleFields","bValue","bKey","aPick","bPick","aValues","bValues","includesAny","firstDefinedThunk","extractFraction","NotSetRe","firstNonZero","ISOSpeed","SonyISO","Fnumber","ApertureValue","Aperture","SonyFNumber","ShutterSpeed","ShutterSpeedValue","SonyExposureTime","reqValuedOrElse","BrowserFiletypes","SharpImageFiletypes","unfiltered","_sharp","fileSuffix","sharpImageFiletypes","HeifFiletypes","RawImageFiletypes","VideoFiletypes","AllFiletypes","AssetFiletypes","ExifFiletypes","Ext2mime","ExtAliases","getExtAliases","AllFileExts","AssetFileExts","OldBrowserMimetypes","CurrentBrowserMimetypes","ext2types","Sharp","HEIF","RawImage","Sidecar","Exif","SupportedByOldBrowser","extTypes","ext1","ext2","mkHistoryRecords","action","mkHistoryRecord","Action","Changed","Parameters","When","SoftwareAgent","Actions","InferAction","tagsContainHistory","History","valueFromResourceEvent","inferredToTags","isFirstCharAZ","Title","Description","luxonTzOffsetToOffsetMinutes","ensureHistoryRecords","historyRecords","additionalTags","sidecarPath","newHistoryRecords","hr","infer","tagsToWrite","sidecarFile","history","oldestFirst","_maybeInferTimezone","zoneFromLatLon","tzSrc","extractTzOffsetFromTags","inferTzOffsetMinutesFromFilename","nearestSiblingTzOffset","basenameDT","parseDateTime","toDated","rawTzoffsetMinutes","normalizedOffsetMinutes","parseTimestamp","geoData","geoDataExif","GPSAltitude","altitude","alt","favorited","peopleNames","people","person","creationTime","modificationTime","photoTakenTime","imageViews","googlePhotosOrigin","splitKeyword","delimRe","splitKeywords","catToS","Category","pathSepRe","BlankCategoryRE","parseCategories","xml","XMLParser","textNodeName","Categories","kwtags","KnownLensBrands","nikkor","zuiko","zeissBatisHackRe","nonZeroish","justLengthAndAperture","cleanBogusPrecision","significant","LensMake","LensInfo","DNGLensInfo","LensSpec","LensModel","LensID","lensModels","LensType","LensType2","LensType3","Lens","lensModel","lcLensModel","replacementLensMake","mfg","m1","Lower2Camel","companyCased","Constants","ignorables","ignorableSep","IgnorableMakePatterns","IgnorableModelPatterns","samsungPatterns","lgPatterns","onePlusPatterns","CommonNamesByMake","Samsung","LG","OnePlus","GoProRe","rawMake","makeFromSoftware","Software","CreatorTool","HandlerDescription","goProMakeMaybe","toExifDefined","CameraModelName","CameraModel","SoftwarePatterns","Acer","Canon","Daisy","Fujifilm","GE","Kodak","Kyocera","Minolta","Nikon","Olympus","Pentax","Ricoh","RIM","rawSoftware","AncientSamsungModel","cleanMake","rawModel","commonName","isBaseRevision","isPrimitiveRevision","isPrimary","sourceIsPrimary","shown","sourceModifiedTime","resourceEvent","createdAtTs","revision","InstanceID","revisions","addRevision","addTag","revs","priorValue","normalizeMimetype","isMimeTypeIncluded","userAgent","isChrome","isFirefox","escRE","matchQuotes","lifespanRE","modifierRE","uppercaseWordsRE","ignorableNameRE","parseName","compoundName","lifespan","modifier","givenNames","givenNameEnds","familyNames","givenNameSurroundREs","minFamilyNameIndex","onCapture","familyNameSurroundREs","commaIndex","givenNameCount","familyNameCount","western","cleanupNames","renderName","family","fam_given","suff","notEmptyOr","fam","TagRoots","Who","orientationToRotation","Orientation","CameraOrientation","Rotation","ExifOrientationToRotation","orientation","Rotation2ExifOrientation","rotationToExifOrientation","nr","clampRating","RatingPercent","cachedTags","readFileType_","strEql","isSidecarOf","isJson","srcName","sidecarName","mkExtsRegExp","fuzzy","srcEa","stripExt","sidecarEa","commonIdx","commonPrefixIgnoreCase","suffixOK","AllowedUncommonSuffixRe","aSuffixOK","bSuffixOK","isJsonFuzzyMatch","sizeInfoCache","_extractSizeInfoFromFile","defaultTags","rawInfo","_rawInfo","isDimensions","MaxSiblingsChecked","isSlowDir","isCachedDir","firstWithCapturedAt","nearestN","zipSibling","nearestSiblings","fromSibling","definedAndNotEql","beforeAfterCapturedAt","slots","bacaCache","younger","older","myIndex","findFileIndex","minMatch","youngerDE","olderDE","firstWithZoneName","fromName","dateFromPath","tagRefToS","tagref","tagPathToStringArray","tagPath","joinTagPath","_sep","TagSep","splitTagPath","tagPathToLowerStr","tagPathLeaf","isTagPathDescendant","des","tp","ancestry","displayName","bPaths","excluded","leaf","tagPaths","not","CameraID","nativePath2uris","nativePath2pslib","nativePath2psfile","nativePath2psnet","nativePath2uriVariants","uriEncodingVariants","isUri","fsPath","psfile2nativePath","psnet2nativePath","pslib2nativePath","volume","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","thing","authority","fragment","query","schemeOrData","_strict","toURLSearchParams","_schemeFix","_referenceResolution","_validateUri","uriToFsPath","change","Uri","percentDecode","fixedPath","components","joinPath","pathFragment","win32","findLast","skipEncoding","_asFormatted","_pathSepMarker","_formatted","_fsPath","$mid","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","q","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","toUnicode","uriPrefixes","uriEqlSync","au","bu","joinMountpoint","fullPath","volPath","volsha","notMySep","mountpointMatchesPlatform","volshaVolume","bestVolumeForVolsha","PSLIB_ROOT_URI","libDir","relativePath","orig","lib","remoteHost","remoteShare","_path","share","isEquivalentHost","currentVolumeRoots","lazyFsAsync","DefaultExcludedLinuxMountpointNames","localMountpoints","dfPosixRaw","localsOnly","acceptPosixVolume","notAssetMountpoint","mightBeAssetMountpoint","excludedFS","filesystem","isExcludedFilesystem","excludedMP","excludedDir","isReadableDirectorySync","locals","isGioSupported","gioVolumes","dfVol","gioVol","assignMissingPrimitives","kibToBytes","parseDfVolumes","parseDfVolume","used","volumeInfoWin","DriveLetterRE","cleanDriveLetter","driveLetter","normalizeDriveLetter","getPsDriveCommand","parseGetPsDriveRow","Free","Used","label","DisplayRoot","parseRemoteName","getVolumeCommand","uuidRE","toDefinedAndNotEql","parseGetVolumeRow","DriveLetter","FileSystemLabel","notOkStatus","HealthStatus","OperationalStatus","Size","SizeRemaining","FileSystem","UniqueId","driveLetters","mountpointsWin","psDrivesJson","mapAsync","psDriveVols","getVolumesJson","getVolumesVols","unhealthy","healthyMountpoints","GioCommand","GioMountMonitorArgs","fuseDirs","thenFlatten","readProcMounts","gvfsFuseDirectories","remoteInfo","getRemoteInfo","setupVolumeTTL","URL","pathname","lsblk","localVolumes_lsblk_","blkid","localVolumes_blkid_","df","lsblkVersion","lsblkOutput","cols","fsused","fsavail","DEVNAME","PARTLABEL","LABEL","PARTUUID","UUID","mnt2uuidMac","uuids","diskDevices","diskRE","stdouts","dev","AllDisksAndPartitions","APFSVolumes","MountPoint","OSInternal","DeviceIdentifier","VolumeName","VolumeUUID","unsetMountpoints","mountpoints_","setMountpointsTTL","onMountpointsChanged","localMountpointSetup","diskUtilActivity","maybeWatchProcMounts","gioMountMonitor","isFindmntSupported","findmntPoll","priorMountpoints","mountpointsPosix","mkBasicWatchedChild","gioVols","ProcMounts","defaultFilesystemTypePredicate","fsType","defaultMountpointPredicate","procMounts","filesystemTypePredicate","mountpointPredicate","readLines_","unoctal","fsOK","mpOK","mountpointsWinPwsh","mountpointsWinFsutil","driveletterRe","LinuxDevMapperRE","LinuxVarSnapRE","LinuxRunUserGVFSRE","LinuxDockerRE","whyExcludedMountpoint","smbRe","parseRemote","smb","nfs","nfsRe","netInfos","netInfoWin","toMap","netInfo","netuseCmd","UNC_RE","driveLetterRE","remoteName","_netInfoWinWmic","RemoteName","LocalName","Status","NetInfoCmd","ConnectionState","volumeUuidNotExpected","toVolumeUUID","clean","stripComments","readUuidFile_","readVolumeUUID","volUuidFile","savedUUID","writeVolumeUuid","withBoundedConcurrency","thenOrOnTimeout","addVolumeUUID","mount2vol","mount2volsha","volsha2vol","replaceIfNewer","updatedAt","cacheVolume","volumeCacheDirs","mountpointToVolsha","loadCachedVolumes","deleteFileCache","cachedVolumes","fromCache","readCachedVolumes","writeVolumesToCache","priorWriteVolumesToCacheLatch","fromHost","cleanHostname","name2vol","vol_mountpoints","priorVolumesIfMountpointsMatch","priorIsStale","priorIsMissingMountpoints","eqlPrimitiveUnordered","vp","bestMountpointForDir","bestRemoteVolume","withCorrectShare","withExactHostname","friendlyRemoteHost","asyncFind","canWriteVolumesToCache","withCurrentMountpoints","currentMountpoints","volumesImpl","shim0","hangMs","PS_VOLUMES_HANG_MS","rawDfVols","dfWin","dfPosix","dfVols","addRemoteVolumeInfoWin","addRemoteVolumeInfoPosix","addLocalVolumeInfoMac","addLocalVolumeInfoLinux","addVolumeUUIDs","rootPath","mounts","mount","volumeSha","volumeUuidSubpath","LibraryTagName","myWebUrls","hostnames","myExternalIp4Addresses","myWebUrl","uriToTagPath","mkTagUri","CussNativePath","loadCuss","words","cussTrie","asTrie","trie","small","TriePrefixLength","getCuss","naughtyWords","stripEmoji","unl33t","smol","bad","isCussy","a2l","l2a","origPrefix","prefixes","suffixes","cpus","quota","intFromFileSync","period","shares","logTooBusy","currentBusyPct","reasonableMaxCpuPct","busyPctAvg","CpuTimes","busyPctFromLoad","idlePct","busyMs","idleMs","sys","irq","idle","totalMs","legit","loadavg","estimatedFreeMem","freemem","newPausedValue","clearMaxWorkCaches","timeoutRate","maxProcsForMem","worstCaseMemPerProc","estFreeMemMb","worstCaseMemPerProcMb","timeoutPenalization","timeoutsPerMinute","targetCpuLoadPct","cpuPortion","timeoutsPerSecond","penalization","resultBeforePenalization","resultAfterPenalization","cpuLoadPct","refreshEveryMinute","rateStats","toPrimitive","isPrimitiveArray","eqlArray","keepIfTrue","toIndex","step","needles","vArr","cmp_","notBlankish","strings","equals","expense","allowedDelta","newPos","currentExpense","newExpense","finalJoin","destination","deepSortBy","isIterable","mkSrcSet","toQuery","params","mergeURLSearchParams","URLSearchParams","append","assetUrl","assembleFullPath","assetImgActualLink","attrs","fmtLocalToShort","laterLoad","isSafari","ua","loading","srcSetArr","SqWidths","numericOr","globalThis","window","devicePixelRatio","onRetryWaitUntil","retry","retryCount","markdown","replaceAllMatches","BlankishRE","shortDateFormat","hms","includeMs","millis","pad3","setHours","fmtElapsedMs","dateParts","timeParts","toFixedStr","type_detect","memoizeCompare","leftHandOperand","rightHandOperand","memoizeMap","memoizeSet","leftHandMap","WeakMap","_deepEqual","comparator","extensiveDeepEqual","simpleResult","simpleEqual","memoizeResultLeft","memoizeResultRight","comparatorResult","leftHandType","keysEqual","iterableEqual","regexpEqual","getGeneratorEntries","generatorEqual","Uint8Array","leftHandItems","rightHandItems","entriesEqual","objectEqual","extensiveDeepEqualByType","getIteratorEntries","hasIteratorFunction","iteratorError","generator","generatorResult","getEnumerableKeys","getEnumerableSymbols","allKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","enumerable","leftHandKeys","rightHandKeys","mapSymbols","leftHandEntries","rightHandEntries","applied","isNode","isBrowser","withinRatio","space","pixels2size","swappableRotation","dateComparator","functionComparator","deepEql","objComparators","fieldComparators","FramesToIgnoreRE","errorToArr","maxLines","inputAspectRatio","largestUnitIndex","remaining","singular","plural","fmtList","joinWord","HealthCheckEmoji","Summary","Library","System","OkLevels","HealthCheckLevelToEmoji","HealthCheckLevelDescription","emoji","FitSizeValues","SqSizes","decycle","Revivers","addJsonRevivers","parseJSON_","retrocycle","reviver","JSON_","derez","nu","_value","$ref","prototype","hasOwnProperty","call","$","px","rez","eval","_state","_resolve","_reject","onfinally","Lazy","t1","t3","addUniq","flatValues","findKeyByTuple","filterKeysByTuple","document","numeralRE","nonNumericRE","isBigInt","mapPredicate","isToNumber","toNumber","nton","MIN_SAFE_INTEGER","ston","toPrecision","decimalPlaces","numerator","denominator","expected","mustBeGreaterThan","orElseF","decimals","fractionDigits","log10","rnd","_factorials","factorial","Infinity","notEmptyObj","pairs","mapFields","isReqValued","block","omitKeys","assignNullish","srcKeys","compactValuesDeep","keyNames","pickDeep","flat","deepKeysByLocalField","keysToOmit","Reflect","getPrototypeOf","ownKeys","lckey","flattenObject","NoneImpl","zip1","zip2","zip3","None","Some","isOpt","ec","ed","pads","char","padNumeric","irregular","es","consonant_y","vowel_y","is","irr","primitiveTypes","TypeLevel","cmpArr","shorterArrayIsLessThan","eaP","ifTrue","rndInt","random","randomInts","excludeSet","slotsRemaining","candidate","randomChar","RandomChars","trueRatio","NumericChars","LowercaseChars","nonZeroes","rand","valueToIndex","dict","mapValid","isBMP","codePointAt","_graphemeSegmenter","graphemeSegmenter","Segmenter","granularity","sliceIterable","segment","charArr","leftIndexOf","countIterable","stripPrefixes","leftSliceAt","rightSliceAt","searchValue","replaceValue","fmtHMS","timeoutAtTs","PS_LIBRARY_PROTOCOL","PS_LOCAL_FILE_PROTOCOL","PS_NETWORK_FILESYSTEM_PROTOCOL","PS_EXAMPLES_SCHEME","isURLSearchParams","queries","numberFormat","NumberFormat","thousandsSep","decimalSep","TB","GiB","TiB","byteUnits","mebiUnits","mag","megabytes","MP","SizeDescriptions","navigator","chromeRE","safariRE","firefoxRE","ipadRE","iphoneRE","matches","tagId","ThumbsPerSample","BeforeAfterStreamLimit","crit","TagGalleryProps","tagIds","NotInfoPanelTags","Camera","Type","rootNameOrTag","ensureSeed","forceNewSeed","usp","urlSeed","mkTagFullPath","prngSeed","objs","toStr","DefaultToString","joinChar","library","forceRunTagMaintenance","dbModelSetup_","runDbBackup","vacuumStatDbDirs","fileCleanups","imageCacheCleanup","readdirCleanup","sharedFileCleanup","previewWipCleanup","advisoryLockWipCleanup","scheduleFileAndProcCleanups","priorDir","priorWasOpen","isReadySync","priorEnded","priorInstance","endPriorInstance","instanceReady","instanceRequired","readyLatch","throwIfEnding","statsDbDir_","previewsVol","isDbService","dbModelJanitor","statsDb","libraryHealthCheckSetup","assetFileRepository","AssetFileRepository","libraryDbFile","dbFsLock","fslock","DbModelJanitor","statsDbJanitor","statsDbFile","isPendingSetup","backup_","validateFile","notBlocklistedSha","isValidFile","calcVolumesTTL","volFree","minFreeDefaultBytes","free","minFree","excessFree","secondsUntilFull","newTTL","durationHMS","defaultTTL","statDbDirs","CacheDirPrefix","createIfMissing","LibraryUID","SystemUID","rmStatDbDir","currentCacheDir","newestTs","SuggestedLibraryDir","isReadWriteableDirectory","isLibrary","isLibraryDir","whyExcluded","whyExcludedDirectoryRecursive","isCurrentLibrary","availableBytes","wbrPath","_suggestedLibraryDirs","minAvailableBytes","maxSuggestionCount","maybeVolumes","suggestedPaths","priorLibraries","suggestions","addSuggestion","dirsToCheck","childDirectories_","isNotHiddenPosixPath","shouldTimeout","defaultPath","addVolume","suggestedLibraryDirs","libraryMetrics","Asset","plurMetric","shownCount","mimeCounts","assetFileCountByMimeTypeRoots","mimeTypeRoot","assetFileCount","Tag","HealthCheckLevelDictEntryClass","tier","health","term","defn","defnClass","defnTitle","termURL","toIsoDate","runtimeMs","metrics","supportsTail","LogArgs","maybeLogStdout","isDaemon","tail","albumFromFile","albumFromTags","titlePath","whyExclude","firstSubstringIgnoreCase","Albums","parseJsonDate","releasedAt","tagAsset","primaryVariation","priorTagPaths","capturedAts","cameraTagFile","lensTagFile","dateTagFile","whoTagFiles","keywordTagFiles","typeTagFiles","tagAssetPaths","tagFilesWithAlbums","normalizeTagRoot","tagDeltas","asset","getExistingAssetFiles","existing_uris","existingPrimaryAssetFile","primaryVariant","posixFile_","priorPrimaryAF","getShown","newPrimary","priorPrimary","setShown_","thenCollect","getAssetFiles","getTagPaths","getCapturedAts","tagResult","excludedTag","blocklistShas","unlinkAssetFiles","excludedAt","addTags","removeTags","updateFromFiles","cameraTag","localeSync","months","yearToOrdinal","monthToOrdinal","oneIndexedMonth","dayToOrdinal","yearTagRef","monthTagRef","dayTagRef","dateTag","monthTagOrdinal","bestCapturedAt","addFileUriTagsToAsset","displayNameForVolsha","dbl","pluckAllf","select","where","delimSpaceRe","extractDashDashTags","extractPathnameTags","UrlRE","normalizeKeywordPaths","urls","arr3","paths1","kws1","pathNames","uniqIgnoreCase","kws","retain","Keywords","kw","dedupeKeywordPaths","lcdiff","processKeywords","keywords","rawKwWhoTags","nonWhoKws","isWhoTag","kwWhoTags","nameTag","whoNames","stripTagRoot","lensTag","WhenRoot","AlbumsRoot","WhoRoot","KwRoot","Roots","rootNamesLowerCase","hasTagRoot","albumRootsLowerCased","kwRootsLowerCased","whoRootsLowerCased","tagDiff","tagPathsInclude","mimetypes","mimeTypeToTag","Cases","friendlySubtype","Subtypes","subtype","fullMimeType","fixCase","regionList","RegionList","region","renderNameTag","closeDb","maxUpdatedAt","migrate_","repaired","dbSetupError","verifyDb_","repair_","Migration","appliedMigrations","apply_","tableInfo_","localTableInfo","inTransaction","priorWasNull","verify_","assertHeartbeat_","handleDbRetries","checkpoint_","repairDbFile_","isDestDirRW","isRW","hotDestDb","dbBackupCold_","tablenames","escStr","destFile","backup","remainingPages","totalPages","NoWriteLock","Contested","dbFslock","libraryDbObjects_","retentionCount","backupsDir","fslockRelease","vacuumBackups","victims","forceBackup_","hasDbSetupErrors","dbSetupErrors","me","owner","runMaintenanceTasks","newMaxUpdatedAt","destDbFile","teardownLock","libraryDbInfoFromDbFile","isUpdateReadyToInstall","fsLockForDb","libraryDbInfoJsonFile","assertValidDbInfo_","infoJsonFile","expectedLiveDbFile","liveDbFile","addDbSetupError","libraryDbLockObjects_","liveDbInfo","getLiveDbDir_","clearDbSetupErrors","MaxBatchSize","tableName","cachedStatements","qb","knex","prep","toSqlQuery","stmt","database","sqlQuery","sqlQueryToS","bindings","runScript","mapRun","runf","upsert","firstf","mapAll","allf","batched","onResults","pluckFirst","pluckFirstf","pluckAll","pluckBatched","schemaJsonFile","actualTableInfo","actualTableNames","expectedTableInfo","tableInfo","expectedTableNames","missing","diffEql","dbModelHealthCheck","_dbSetupErrors","notifyListeners","isDbValue","isDbValued","mergeTags_","leafs","winner","losers","winnerId","parentTagPath","winnerTagPath","parentId","loserIds","like","fromParentPath","iterate","dupes","ids","client","useNullAsDefault","fsMigrations_","migrationsDir","ensureMigrationTable_","unknownMigrations_","migrationsInDatabase_","migrationNameToDate","assertKnownMigrations_","unknownMigrations","pendingMigrationFiles_","inDb","onBeforeMigrate","applyMigration_","addMigrationStmt","codeMigration","disableForeignKeys","foreignKeyCheck_","psnetRe","plucklabmodeb6","labModes","splitLabs","tag_path_suffix","isoToPrecisionMs","lowercase_psnet_function","broken","lowercase_psnet_hostname","function","deterministic","numeric_captured_at","spread_modes","normalize_asset_file_uris","normalizeURI","afs","dedupe_tag_paths","dedupeTags_","suffix_tag_paths","normalize_tag_paths","badTags","correctPath","normalizeTagPath","drop_tc_tables","tables","rebuild_rotated_heic","rebuild_videos","pragmaOrThrow_","okResult","simple","dbToPath","quickCheck_","integrityCheck_","badRows","dbInvalidForeignKeyThreshold","badRowsCount","rowid","verifyDbFile_","withDbSync","destDb","withDb","_backupDbFile_","checkpointType","AUTO","busy","IgnorableDumpErrorRe","srcDbPath","sqliteSizeBytes","dumpProc","load","isSqlQuery","toSQL","parseTableInfo","notnull","pk","dbfile","dbRepairLink","tryRepair","assertValidDbSchema_","Heartbeat","assertPing_","addDbSetupErrorListener","syncHealthCheck","volumeUuidHealthCheck","pathsToSync","posixFiles","findAsync","acceptParentAndFileAndSimple","noUriPaths","duplicateUUIDVolumes","missingUUIDs","unhealthyVolumes","scannedVolumes","InfoArgs","CLI","filenames","emitTable","includeFileFilters","fileFilters","filters","emitJson","skipHealth","plan","licensing","current_license","trial","issued_at","expires","suggestedLibraries","volumesTtl","volumesTTL","loadLibrary","syncPaths","ldd","syncPathsForUI","validate","systemInfo","systemInformation","asObjectKey","user_ids","group_ids","healthSummary1","healthSummary2","healthChecks","whySick","wrongPsEnvValues","nonDefaultSettings","f1","f2","mkAssetFile_","wns","fileComparison","primary","zipPojos","imageHashComparison","clusters","aggregateAssetFiles","_run","dirFilters","libraryFileFiltersFor","priorAssetFile","AssetFileFinder","priorIsInSync","matchesFile","pathsInLibrary","sameShaInLibrary","getNativePath","pathToLibraryAsset","validFile","_PhotoStructureVersion","TimestampedModel","assetIdish","updateCount","mergedTags","posixFile","AssetRevision","ops","MergedTags","shownUnhidden","andWhere","shownRemovable","whereNotNull","countDistinct","deletePreviews","upsertToShaBlockslist","AssetTag","deletedMeta","trashOrUnlinkFileUris_","assetFileMeta","dbResult","deletedPreviews","nextOutdated","findOne","nextOutdateds","outdatedCount","findFirstByFile","uniqTagPaths","findOrCreate","addTagsToAsset","findByPath","removeTagsFromAsset","unshownAssetIds","archive","markUnshownAndUpsert","markShownAndUpsert_","shownAssetFile","priorShownId","previouslyShown","skipUpsert","toAssetId","renderCaption","fmtLocalDateShort","whenApiTag","toApiTag","addTagPaths","findAssetFileByUri","addAssetFile","assetFileForFile_","upsertIfNeeded_","setFile_","getTags","orderByRaw","getStreams","streams","getAssetStream","coalesceStreams","getAncestors","getBeforeAfterId","sameIds","clearSelect","orderBy","afterId","beforeId","findBy","afId","changes","r2","runResult","shownAF","getShownNativePath","link","sqAttrs","getImgAttrs","skipFs","poster","fitAttrs","videoAttrs","controls","autoplay","videoSources","firstExistingAF","assetVideoLink","getPosixFiles","findOrCreateByFile","partialSimpleAsset","liked","deletedAt","column","order","$tableName","$uniqueColumnName","$booleanFields","uriObj","isShaBlockslisted","isFileDeleted","outdatedQuery","q2","whereIn","orWhereLike","shownAssetFileId","uriRoot","andWhereLike","recentAssetIdsByUriRoot","since","distinct","assetFileCountByMimeType","assetCount","assetFileCountWithMimeType","mimeRootOrType","mimeRootOrTypes","uriParent","whereLike","sameAssetFileInLibrary","whereNot","librarySiblings","getAsset","capturedAtLocale","assignAllFields","whyNotMatchesFile","outdated","fileUri","ff","fileFields_","whyNot","whyNotInSyncWithFile","inSyncWithFile","whyNotInSync","isNoop","whyNotNoop","whyNotMatches","mayCopyAssetsToLibrary","repo","whyNotCopyFile","existingLibraryAssetFile","syncState","isVersionUpToDate","siblingCount","andWhereNot","updateFromFile_","updateFileFields_","updateFromShaSibling_","whySiblingIsInvalid","$transientFields","originalDownloadable","brief","downloadables","shownSha","previewToDownloadable","pathInfo","_pathInfo_","toApiPathElements","tagLineage","nativePathSuffix","pathSep","lastTagName","isLibraryUri","thisVolSha","tagVolSha","toApi","createdAtLocale","fmtMillis","updatedAtLocale","insert","_priorValueJson","_newValueJson","$pk","ChangedTag","upsertChangedTagIds","onConflict","ignore","$useCache","onAssetRemoval","getAllChangedTags","lagtimeMs","compressWhitespace","deleteChangedTag","monthQuery","dayQuery","getMonthTags","andWhereRaw","normalizeMonthTag","tagRef","ord","ordinalToMonth","changeName","maybeUpsertDisplayName","upsertOne","fromDb","findOneBy","_normalizeDateTags","progressVacuum","normalizeDateTags","Progress","$instanceId","$ctor","$schema","queryBy","constraint","queryOneBy","_ops","ModelOps","truncate","$ops","class","$ucn","$uid","$toShallowJSON","Obj","$_toJSON","encodeBool","$toDbJSON","colNames","boolToInt","includeCtor","includeTransient","$clone","_get","mc","columnNames","insertOne","assignFromJSON","$afterUpsert","$beforeUpsert","reload","reloadOne","ctor2class","addModelClass","caller","updatableColumnNames","immutableColumnNames","ucnFieldNames","ucn","DbRequest","$cache","$cachedByJson","$pickModelUcn","$cachedById","dbOpen","toDbValued","dbv","fromJSONs","pojos","findByIds","uncachedIds","findWhereIn","countf","modelSupportsUpsert","insertOrUpdateOne","updateOne","dbJson","runInfo","lastInsertRowid","unsetField","updateRecord","ucnConstraint","onConflictClause","skip","doUpdate","onConflictArr","bk","skipReturn","maxId","jsons","setKeys","OperationNames","Operation","incomplete","whereNull","ensurePendingOp","getFirstPendingOp","markOpCompleted","completedAt","applyIfPending","applyOnce","priorCompleted","ProgressRateMs","ProgressTimesQuery","defaultMinCreatedAt","victimIds","metaVictimIds","ProgressMeta","minCreatedAt","saveSyncState","insertNew","dekJSON","dek","toSyncState","hed","completePct","incompletePct","scanningPct","assignFromPojo","getThisMeta","progressId","getPriorIncompleteProgress","getPriorIncompleteMeta","getMeta","thisMeta","priorMeta","setMeta","deleteMeta","deleteAllMeta","getMetaAsRecord","ProgressMetaNames","dbr","upsertFileToShaBlockslist","shas","listenForInvalidFiles","installBadShaShim","builder","AssetCountForTag","displayPath","getParent","ancestorIds","firstNonInterstitialTagId","directAssetCount","getChildrenCount","getChildren","roots","_upsertDefaultRoots","validate_","whereRaw","parentPath","expectedParentPath","cacheTags","cacheTag","withNullAssetCount","selfAndAncestorIds","updateAssetCount","findByIdOrPath","getPagedAssets","getPagedAssetIds","newTag","assets","relatedAssets","siblingPath","changePath","_displayName","finallyClear","priorPath","existingSibling","$childrenQuery","$assetsQuery","$selectAssetIdColumns","$assetIdsQuery","setAncestors","getAncestorsAndSelf","toPathTag","toStringId","getPagedChildren","begin","childTag","rootName","ancestorsAndSelf","_getAncestors","getAssets","assetCountDesc","getAssetCount","$assetStreamQuery","same","TaggedAssetStream","getRelatedAssetIds","prngOrderByClause","TagFts","insertFts","tag_fts_root","tag_fts_path","rebuild","tn","cmpAssetAsc","cmpAssetDesc","retainFirstN","assetIdsAfter","assetIdsBefore","mergeWith","tas","pushUniqBy","beforeIds","afterIds","streamCoeff","minStreamCorr","prefilter","gtOrElse","createdAtDate","updatedAtDate","dbDir","isStatsDbMigrator","alreadySynced","AssetIdCreationMutex","SerialLaterQueue","timedLazy","priorIfSynced","newAssetFile_","capturedAt_","tags_","dominantLabhashes","mapSibling","assetFile","newAssetFileForAsset","withExistingAsset","byExistingAsset_","strategies","byUri","assetByNormalizedPathUri","assetBySha","assetByCapturedAtOrImageHash","maybeAsset","firstSimilarAsset","bounds","firstSimilarAssetByQuery","whereBetween","wideBounds","orWhereIn","orWhere","thisAF","cal","whyNotSameAsset","shouldCopy","candidates","priorAssetId","findLibraryFileWithSameContents","importFile_","maybeCopyToLibrary_","srcAssetFile","copiedSidecars","copiedInferredMetadata","upsertNeeded","mkAssetUrl","destAF","readCapturedAt","existing","uniqDest","srcSidecar","destSidecar","sidecarEql","copyTo","ensureInferredHistoryRecords","volumeUriPaths","toUriPath","scanDir","uriPath","nativePathToUriPath","posixFileToUriPath","nativePathBlocklist","pathsAndTimesToSync","todo","bestStable","staleCompletedAt","getStaleCompletedAt","lastCompletedAt","lastStarted","lastStartedAt","lastCompleted","lastUpdated","lastUpdatedAt","stalePaths","stale","mostRecentlyUpdated","neverStartedBefore","neverCompletedBefore","leastRecentlyCompleted","uptToStatus","atToS","dur","isNext","maybeUri","tag_path","tagFtsRebuild","MinCallDelayMs","updateTagCountSql","ct","tc","prepQueries","vacuumOrphanTags","vacuumLeafTags","leftOuterJoin","updateTagMountpoints","countedTags","updateAllTagCounts","updatedTagIds","nullTagIds","changedTags","changedTagsById","changedTag","updateChangedTagCounts","newMinCallDelayMs","fileRoot","fixFileRootTag","_reset","volumeSHA","stripPrefixSuffix","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","nmd","__webpack_exports__"],"sourceRoot":""}