{"version":3,"file":"logcat.js","mappings":"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","sources":["webpack://@photostructure/library/../core/AppName.ts","webpack://@photostructure/library/../core/Array.ts","webpack://@photostructure/library/../core/BatchClusterObserver.ts","webpack://@photostructure/library/../core/BoundedList.ts","webpack://@photostructure/library/../core/Buffer.ts","webpack://@photostructure/library/../core/CaseInsensitiveMap.ts","webpack://@photostructure/library/../core/CaseInsensitiveValued.ts","webpack://@photostructure/library/../core/Chalk.ts","webpack://@photostructure/library/../core/CountingSet.ts","webpack://@photostructure/library/../core/DefaultSensitiveEnvRegexPattern.ts","webpack://@photostructure/library/../core/EditionName.ts","webpack://@photostructure/library/../core/Elapsed.ts","webpack://@photostructure/library/../core/EnvTokens.ts","webpack://@photostructure/library/../core/ExamplesDir.ts","webpack://@photostructure/library/../core/ExamplesNativePath.ts","webpack://@photostructure/library/../core/ExtensibleFunction.ts","webpack://@photostructure/library/../core/FifoCache.ts","webpack://@photostructure/library/../core/FifoCacheAsync.ts","webpack://@photostructure/library/../core/FifoSet.ts","webpack://@photostructure/library/../core/Fixed.ts","webpack://@photostructure/library/../core/Halt.ts","webpack://@photostructure/library/../core/HashBits.ts","webpack://@photostructure/library/../core/JSON.ts","webpack://@photostructure/library/../core/Lazy.ts","webpack://@photostructure/library/../core/Locale.ts","webpack://@photostructure/library/../core/LogStartup.ts","webpack://@photostructure/library/../core/Logger.ts","webpack://@photostructure/library/../core/Map.ts","webpack://@photostructure/library/../core/MemoizedFunc.ts","webpack://@photostructure/library/../core/NoColor.ts","webpack://@photostructure/library/../core/NodeEnv.ts","webpack://@photostructure/library/../core/Number.ts","webpack://@photostructure/library/../core/Object.ts","webpack://@photostructure/library/../core/OperatingSystem.ts","webpack://@photostructure/library/../core/PhotoStructureVersion.ts","webpack://@photostructure/library/../core/Pid.ts","webpack://@photostructure/library/../core/Pids.ts","webpack://@photostructure/library/../core/PriorityClass.ts","webpack://@photostructure/library/../core/Ps.ts","webpack://@photostructure/library/../core/RateLimited.ts","webpack://@photostructure/library/../core/RegExp.ts","webpack://@photostructure/library/../core/Renice.ts","webpack://@photostructure/library/../core/ServiceNames.ts","webpack://@photostructure/library/../core/Set.ts","webpack://@photostructure/library/../core/SetServiceName.ts","webpack://@photostructure/library/../core/Shim0.ts","webpack://@photostructure/library/../core/Shim1.ts","webpack://@photostructure/library/../core/ShortCommandTimeoutMs.ts","webpack://@photostructure/library/../core/SortedSet.ts","webpack://@photostructure/library/../core/StartTs.ts","webpack://@photostructure/library/../core/Stdout.ts","webpack://@photostructure/library/../core/StdoutEnded.ts","webpack://@photostructure/library/../core/StdoutWrite.ts","webpack://@photostructure/library/../core/String.ts","webpack://@photostructure/library/../core/StringCase.ts","webpack://@photostructure/library/../core/StringHash.ts","webpack://@photostructure/library/../core/StringNormalizer.ts","webpack://@photostructure/library/../core/StringSimilarity.ts","webpack://@photostructure/library/../core/StringifySorted.ts","webpack://@photostructure/library/../core/TTLMap.ts","webpack://@photostructure/library/../core/TTLSet.ts","webpack://@photostructure/library/../core/TestLibraryDirPrefix.ts","webpack://@photostructure/library/../core/UID.ts","webpack://@photostructure/library/../core/UserInfo.ts","webpack://@photostructure/library/../core/Version.ts","webpack://@photostructure/library/../core/WinDate.ts","webpack://@photostructure/library/../core/async/AbortError.ts","webpack://@photostructure/library/../core/async/Debounce.ts","webpack://@photostructure/library/../core/async/Deferred.ts","webpack://@photostructure/library/../core/async/Endable.ts","webpack://@photostructure/library/../core/async/EndableInterval.ts","webpack://@photostructure/library/../core/async/EndableWrapper.ts","webpack://@photostructure/library/../core/async/Exit.ts","webpack://@photostructure/library/../core/async/LazyAsync.ts","webpack://@photostructure/library/../core/async/MemoizedAsyncFunc.ts","webpack://@photostructure/library/../core/async/OneAtATime.ts","webpack://@photostructure/library/../core/async/Postrun.ts","webpack://@photostructure/library/../core/async/Promise.ts","webpack://@photostructure/library/../core/async/PromiseTimer.ts","webpack://@photostructure/library/../core/async/Promises.ts","webpack://@photostructure/library/../core/async/ThenOrTimeout.ts","webpack://@photostructure/library/../core/async/TimeoutHandler.ts","webpack://@photostructure/library/../core/async/Timers.ts","webpack://@photostructure/library/../core/async/until.ts","webpack://@photostructure/library/../core/child/ChildEnv.ts","webpack://@photostructure/library/../core/child/ChildProcess.ts","webpack://@photostructure/library/../core/child/WatchedChild.ts","webpack://@photostructure/library/../core/ciSafePath.ts","webpack://@photostructure/library/../core/cli/CLI.ts","webpack://@photostructure/library/../core/cli/CliConstants.ts","webpack://@photostructure/library/../core/cli/CliWrap.ts","webpack://@photostructure/library/../core/cli/ColorArgs.ts","webpack://@photostructure/library/../core/cli/DescriptionFooter.ts","webpack://@photostructure/library/../core/cli/VerifyUidGid.ts","webpack://@photostructure/library/../core/date/Date.ts","webpack://@photostructure/library/../core/date/DefaultDateTimeFormats.ts","webpack://@photostructure/library/../core/date/DurationCodec.ts","webpack://@photostructure/library/../core/date/DurationFormat.ts","webpack://@photostructure/library/../core/db/AutoVacuumModes.ts","webpack://@photostructure/library/../core/db/CheckpointTypes.ts","webpack://@photostructure/library/../core/db/RepairModes.ts","webpack://@photostructure/library/../core/db/Schemas.ts","webpack://@photostructure/library/../core/db/SynchronousModes.ts","webpack://@photostructure/library/../core/dir/CacheDir.ts","webpack://@photostructure/library/../core/dir/ConfigDir.ts","webpack://@photostructure/library/../core/dir/DefaultDockerLibraryDir.ts","webpack://@photostructure/library/../core/dir/DefaultLibraryDir.ts","webpack://@photostructure/library/../core/dir/DesktopConfigDir.ts","webpack://@photostructure/library/../core/dir/EnvConfigDir.ts","webpack://@photostructure/library/../core/dir/FirstDir.ts","webpack://@photostructure/library/../core/dir/HomeDir.ts","webpack://@photostructure/library/../core/dir/InHiddenPhotoStructureDir.ts","webpack://@photostructure/library/../core/dir/LibraryDir.ts","webpack://@photostructure/library/../core/dir/LibraryDirs.ts","webpack://@photostructure/library/../core/dir/LogDir.ts","webpack://@photostructure/library/../core/dir/PicturesDir.ts","webpack://@photostructure/library/../core/env/DevEnvFlags.ts","webpack://@photostructure/library/../core/env/Env.ts","webpack://@photostructure/library/../core/env/EnvKeys.ts","webpack://@photostructure/library/../core/env/EnvName.ts","webpack://@photostructure/library/../core/env/GetEnv.ts","webpack://@photostructure/library/../core/error/Error.ts","webpack://@photostructure/library/../core/error/ErrorCodes.ts","webpack://@photostructure/library/../core/error/ErrorFlags.ts","webpack://@photostructure/library/../core/error/ErrorTypes.ts","webpack://@photostructure/library/../core/error/OnError.ts","webpack://@photostructure/library/../core/error/WrappedError.ts","webpack://@photostructure/library/../core/error/stack.ts","webpack://@photostructure/library/../core/event/BroadcastEvent.ts","webpack://@photostructure/library/../core/event/CapturingEventEmitter.ts","webpack://@photostructure/library/../core/event/DefaultSharedStateDir.ts","webpack://@photostructure/library/../core/event/EventEmitter.ts","webpack://@photostructure/library/../core/event/IsSyncing.ts","webpack://@photostructure/library/../core/event/PhotoStructureEvents.ts","webpack://@photostructure/library/../core/event/SharedState.ts","webpack://@photostructure/library/../core/event/TaskProcessor.ts","webpack://@photostructure/library/../core/fs/Access.ts","webpack://@photostructure/library/../core/fs/ActualPath.ts","webpack://@photostructure/library/../core/fs/Ancestors.ts","webpack://@photostructure/library/../core/fs/BaseFile.ts","webpack://@photostructure/library/../core/fs/CRLF.ts","webpack://@photostructure/library/../core/fs/CachedirTag.ts","webpack://@photostructure/library/../core/fs/DefaultPaths.ts","webpack://@photostructure/library/../core/fs/DirWatcher.ts","webpack://@photostructure/library/../core/fs/DirectoryEntry.ts","webpack://@photostructure/library/../core/fs/EnsureNew.ts","webpack://@photostructure/library/../core/fs/FileCache.ts","webpack://@photostructure/library/../core/fs/FileExt.ts","webpack://@photostructure/library/../core/fs/FileStats.ts","webpack://@photostructure/library/../core/fs/FsLock.ts","webpack://@photostructure/library/../core/fs/FsLockDir.ts","webpack://@photostructure/library/../core/fs/FsWatcher.ts","webpack://@photostructure/library/../core/fs/FuzzyNames.ts","webpack://@photostructure/library/../core/fs/Gzip.ts","webpack://@photostructure/library/../core/fs/Hash.ts","webpack://@photostructure/library/../core/fs/Hidden.ts","webpack://@photostructure/library/../core/fs/IgnorableMountpoint.ts","webpack://@photostructure/library/../core/fs/JpegExts.ts","webpack://@photostructure/library/../core/fs/LineReader.ts","webpack://@photostructure/library/../core/fs/MkNoMedia.ts","webpack://@photostructure/library/../core/fs/NoMedia.ts","webpack://@photostructure/library/../core/fs/Path.ts","webpack://@photostructure/library/../core/fs/PathTo.ts","webpack://@photostructure/library/../core/fs/PosixFile.ts","webpack://@photostructure/library/../core/fs/PosixNative.ts","webpack://@photostructure/library/../core/fs/ProjectPath.ts","webpack://@photostructure/library/../core/fs/ReadFile.ts","webpack://@photostructure/library/../core/fs/ReadFilePart.ts","webpack://@photostructure/library/../core/fs/ReadLines.ts","webpack://@photostructure/library/../core/fs/ReadableBuffer.ts","webpack://@photostructure/library/../core/fs/Readdir.ts","webpack://@photostructure/library/../core/fs/SimpleDirent.ts","webpack://@photostructure/library/../core/fs/SimpleFile.ts","webpack://@photostructure/library/../core/fs/Stat.ts","webpack://@photostructure/library/../core/fs/StatSync.ts","webpack://@photostructure/library/../core/fs/StatTimeout.ts","webpack://@photostructure/library/../core/fs/StreamChunker.ts","webpack://@photostructure/library/../core/fs/StreamEnded.ts","webpack://@photostructure/library/../core/fs/Streams.ts","webpack://@photostructure/library/../core/fs/Touch.ts","webpack://@photostructure/library/../core/fs/WIP.ts","webpack://@photostructure/library/../core/fs/WritableToBuffer.ts","webpack://@photostructure/library/../core/fs/WriteFile.ts","webpack://@photostructure/library/../core/fs/zcat.ts","webpack://@photostructure/library/../core/health/HealthCheckIds.ts","webpack://@photostructure/library/../core/img/CropStrategies.ts","webpack://@photostructure/library/../core/img/ImageCache.ts","webpack://@photostructure/library/../core/img/SharpFailOn.ts","webpack://@photostructure/library/../core/log/ColoredLogFormatter.ts","webpack://@photostructure/library/../core/log/ConsoleLogger.ts","webpack://@photostructure/library/../core/log/ContextualLogger.ts","webpack://@photostructure/library/../core/log/CurrentFileLogger.ts","webpack://@photostructure/library/../core/log/DefaultLogFormatter.ts","webpack://@photostructure/library/../core/log/GelfLogFormatter.ts","webpack://@photostructure/library/../core/log/LogBroadcaster.ts","webpack://@photostructure/library/../core/log/LogCommon.ts","webpack://@photostructure/library/../core/log/LogDir.ts","webpack://@photostructure/library/../core/log/LogEntry.ts","webpack://@photostructure/library/../core/log/LogFilter.ts","webpack://@photostructure/library/../core/log/LogFilterImpl.ts","webpack://@photostructure/library/../core/log/LogLevel.ts","webpack://@photostructure/library/../core/log/LogMeta.ts","webpack://@photostructure/library/../core/log/LogReader.ts","webpack://@photostructure/library/../core/log/LogTail.ts","webpack://@photostructure/library/../core/log/LogTailEntries.ts","webpack://@photostructure/library/../core/log/LogWriter.ts","webpack://@photostructure/library/../core/log/PlaintextLogFormatter.ts","webpack://@photostructure/library/../core/log/ReadLogEntries.ts","webpack://@photostructure/library/../core/log/RecentLogs.ts","webpack://@photostructure/library/../core/log/SetupLogger.ts","webpack://@photostructure/library/../core/logcat.ts","webpack://@photostructure/library/../core/math/Average.ts","webpack://@photostructure/library/../core/math/Bits.ts","webpack://@photostructure/library/../core/math/Lerp.ts","webpack://@photostructure/library/../core/math/Radix.ts","webpack://@photostructure/library/../core/math/Rate.ts","webpack://@photostructure/library/../core/math/UUID.ts","webpack://@photostructure/library/../core/math/Vector.ts","webpack://@photostructure/library/../core/net/Hostname.ts","webpack://@photostructure/library/../core/net/nslookup.ts","webpack://@photostructure/library/../core/net/ping.ts","webpack://@photostructure/library/../core/platform/IsPacked.ts","webpack://@photostructure/library/../core/platform/Platform.ts","webpack://@photostructure/library/../core/platform/isDocker.ts","webpack://@photostructure/library/../core/platform/isRaspberryPi.ts","webpack://@photostructure/library/../core/progress/ProgressEvt.ts","webpack://@photostructure/library/../core/progress/ProgressObserver.ts","webpack://@photostructure/library/../core/progress/PullProgressObserver.ts","webpack://@photostructure/library/../core/pwsh/PowerShell.ts","webpack://@photostructure/library/../core/settings/AggregateTypes.ts","webpack://@photostructure/library/../core/settings/AssetFileSortCriteria.ts","webpack://@photostructure/library/../core/settings/BooleanSetting.ts","webpack://@photostructure/library/../core/settings/BoundedFloatSetting.ts","webpack://@photostructure/library/../core/settings/BoundedIntegerSetting.ts","webpack://@photostructure/library/../core/settings/ColorDistanceFunctions.ts","webpack://@photostructure/library/../core/settings/DominantColorKmeansRunsDefault.ts","webpack://@photostructure/library/../core/settings/DominantColorPixelsDefault.ts","webpack://@photostructure/library/../core/settings/DurationSetting.ts","webpack://@photostructure/library/../core/settings/FloatSetting.ts","webpack://@photostructure/library/../core/settings/IntegerSetting.ts","webpack://@photostructure/library/../core/settings/MetaSettings.ts","webpack://@photostructure/library/../core/settings/OptionalFileSetting.ts","webpack://@photostructure/library/../core/settings/OptionalFloatSetting.ts","webpack://@photostructure/library/../core/settings/OptionalIntegerSetting.ts","webpack://@photostructure/library/../core/settings/OptionalStringSetting.ts","webpack://@photostructure/library/../core/settings/PsEnvNames.ts","webpack://@photostructure/library/../core/settings/Setting.ts","webpack://@photostructure/library/../core/settings/Settings.ts","webpack://@photostructure/library/../core/settings/SettingsDefaults.ts","webpack://@photostructure/library/../core/settings/SettingsIO.ts","webpack://@photostructure/library/../core/settings/SettingsToml.ts","webpack://@photostructure/library/../core/settings/StringArraySetting.ts","webpack://@photostructure/library/../core/settings/StringEnumSetting.ts","webpack://@photostructure/library/../core/settings/StringEnumsSetting.ts","webpack://@photostructure/library/../core/settings/StringSetting.ts","webpack://@photostructure/library/../core/settings/SystemSettings.ts","webpack://@photostructure/library/../core/settings/TagInferenceSettingValues.ts","webpack://@photostructure/library/../core/settings/Toml.ts","webpack://@photostructure/library/../core/settings/TomlStringify.ts","webpack://@photostructure/library/../core/settings/UpgradeChannels.ts","webpack://@photostructure/library/../core/settings/ValueToS.ts","webpack://@photostructure/library/../core/settings/WrapComments.ts","webpack://@photostructure/library/../core/tags/Bname.ts","webpack://@photostructure/library/../core/tags/DateTagFormats.ts","webpack://@photostructure/library/../core/tags/DefaultCapturedAtTags.ts","webpack://@photostructure/library/../core/tags/DefaultIncludedPreviewTags.ts","webpack://@photostructure/library/../core/tags/DefaultLensMakes.ts","webpack://@photostructure/library/../core/tags/ExtType.ts","webpack://@photostructure/library/../core/tags/FileTypes.ts","webpack://@photostructure/library/../core/tags/KeywordReparentingStrategies.ts","webpack://@photostructure/library/../core/tags/NameTagFormats.ts","webpack://@photostructure/library/../core/tags/NameTagOrders.ts","webpack://@photostructure/library/../core/tags/Sidecars.ts","webpack://@photostructure/library/../core/uri/FileURI.ts","webpack://@photostructure/library/../core/uri/URI.ts","webpack://@photostructure/library/../core/uri/UriNormalization.ts","webpack://@photostructure/library/../core/uri/psfile.ts","webpack://@photostructure/library/../core/uri/pslib.ts","webpack://@photostructure/library/../core/uri/psnet.ts","webpack://@photostructure/library/../core/uri/volsha.ts","webpack://@photostructure/library/../core/volumes/AssetMountpoint.ts","webpack://@photostructure/library/../core/volumes/DefaultExcludedLinuxRoots.ts","webpack://@photostructure/library/../core/volumes/DefaultIgnorableFilesystemTypes.ts","webpack://@photostructure/library/../core/volumes/DfPosix.ts","webpack://@photostructure/library/../core/volumes/DfPosixRaw.ts","webpack://@photostructure/library/../core/volumes/DfWin.ts","webpack://@photostructure/library/../core/volumes/Gio.ts","webpack://@photostructure/library/../core/volumes/LazyFsAsync.ts","webpack://@photostructure/library/../core/volumes/LocalVolumesLinux.ts","webpack://@photostructure/library/../core/volumes/LocalVolumesMac.ts","webpack://@photostructure/library/../core/volumes/Mountpoints.ts","webpack://@photostructure/library/../core/volumes/MountpointsPosix.ts","webpack://@photostructure/library/../core/volumes/MountpointsWin.ts","webpack://@photostructure/library/../core/volumes/PosixVolumes.ts","webpack://@photostructure/library/../core/volumes/RemoteVolumesPosix.ts","webpack://@photostructure/library/../core/volumes/RemoteVolumesWin.ts","webpack://@photostructure/library/../core/volumes/VolumeTtls.ts","webpack://@photostructure/library/../core/volumes/VolumeUUID.ts","webpack://@photostructure/library/../core/volumes/Volumes.ts","webpack://@photostructure/library/../core/volumes/WriteVolumeUuid.ts","webpack://@photostructure/library/../core/web/HelmetPlugins.ts","webpack://@photostructure/library/../core/words/Cuss.ts","webpack://@photostructure/library/../core/words/Leet.ts","webpack://@photostructure/library/../core/work/CpuInfo.ts","webpack://@photostructure/library/../core/work/FreeMem.ts","webpack://@photostructure/library/../core/work/IsPaused.ts","webpack://@photostructure/library/../core/work/MaxCpus.ts","webpack://@photostructure/library/../core/work/WorkTimeout.ts","webpack://@photostructure/library/../fe/Array.ts","webpack://@photostructure/library/../fe/ArrayCopy.ts","webpack://@photostructure/library/../fe/ArraySort.ts","webpack://@photostructure/library/../fe/AsPromise.ts","webpack://@photostructure/library/../fe/AsyncRetry.ts","webpack://@photostructure/library/../fe/At.ts","webpack://@photostructure/library/../fe/Blank.ts","webpack://@photostructure/library/../fe/Boolean.ts","webpack://@photostructure/library/../fe/Clone.ts","webpack://@photostructure/library/../fe/Date.ts","webpack://@photostructure/library/../fe/DateToJson.ts","webpack://@photostructure/library/../fe/DeepEql.ts","webpack://@photostructure/library/../fe/Delay.ts","webpack://@photostructure/library/../fe/Eql.ts","webpack://@photostructure/library/../fe/Error.ts","webpack://@photostructure/library/../fe/Flatten.ts","webpack://@photostructure/library/../fe/FmtDuration.ts","webpack://@photostructure/library/../fe/FmtList.ts","webpack://@photostructure/library/../fe/ImageSizes.ts","webpack://@photostructure/library/../fe/Iterable.ts","webpack://@photostructure/library/../fe/JSON.ts","webpack://@photostructure/library/../fe/Latch.ts","webpack://@photostructure/library/../fe/Lazy.ts","webpack://@photostructure/library/../fe/Map.ts","webpack://@photostructure/library/../fe/Maybe.ts","webpack://@photostructure/library/../fe/MultiMap.ts","webpack://@photostructure/library/../fe/NodeOrBrowser.ts","webpack://@photostructure/library/../fe/Number.ts","webpack://@photostructure/library/../fe/Object.ts","webpack://@photostructure/library/../fe/Opt.ts","webpack://@photostructure/library/../fe/Pad.ts","webpack://@photostructure/library/../fe/Pluralize.ts","webpack://@photostructure/library/../fe/Primitive.ts","webpack://@photostructure/library/../fe/Promise.ts","webpack://@photostructure/library/../fe/PromiseState.ts","webpack://@photostructure/library/../fe/Random.ts","webpack://@photostructure/library/../fe/ServiceNames.ts","webpack://@photostructure/library/../fe/SplitFirst.ts","webpack://@photostructure/library/../fe/StrEnum.ts","webpack://@photostructure/library/../fe/String.ts","webpack://@photostructure/library/../fe/ThenOrTimeout.ts","webpack://@photostructure/library/../fe/Thunk.ts","webpack://@photostructure/library/../fe/TimeoutError.ts","webpack://@photostructure/library/../fe/URI.ts","webpack://@photostructure/library/../fe/URLSearchParams.ts","webpack://@photostructure/library/../fe/Units.ts","webpack://@photostructure/library/../fe/UnrefTimeout.ts","webpack://@photostructure/library/../fe/isError.ts","webpack://@photostructure/library/../fe/isFunction.ts","webpack://@photostructure/library/../fe/toA.ts","webpack://@photostructure/library/../fe/toErr.ts","webpack://@photostructure/library/../fe/toS.ts","webpack://@photostructure/library/external commonjs \"@iarna/toml\"","webpack://@photostructure/library/external commonjs \"@parcel/watcher\"","webpack://@photostructure/library/external commonjs \"batch-cluster\"","webpack://@photostructure/library/external commonjs \"commander\"","webpack://@photostructure/library/external commonjs \"events\"","webpack://@photostructure/library/external commonjs \"fs-extra\"","webpack://@photostructure/library/external commonjs \"he\"","webpack://@photostructure/library/external commonjs \"luxon\"","webpack://@photostructure/library/external commonjs \"plist\"","webpack://@photostructure/library/external commonjs \"process\"","webpack://@photostructure/library/external commonjs \"punycode\"","webpack://@photostructure/library/external commonjs \"sharp\"","webpack://@photostructure/library/external commonjs \"type-detect\"","webpack://@photostructure/library/external commonjs \"util\"","webpack://@photostructure/library/external commonjs \"utimes\"","webpack://@photostructure/library/external node-commonjs \"child_process\"","webpack://@photostructure/library/external node-commonjs \"crypto\"","webpack://@photostructure/library/external node-commonjs \"dns\"","webpack://@photostructure/library/external node-commonjs \"fs\"","webpack://@photostructure/library/external node-commonjs \"fs/promises\"","webpack://@photostructure/library/external node-commonjs \"net\"","webpack://@photostructure/library/external node-commonjs \"node:os\"","webpack://@photostructure/library/external node-commonjs \"node:path/posix\"","webpack://@photostructure/library/external node-commonjs \"node:process\"","webpack://@photostructure/library/external node-commonjs \"os\"","webpack://@photostructure/library/external node-commonjs \"path\"","webpack://@photostructure/library/external node-commonjs \"stream\"","webpack://@photostructure/library/external node-commonjs \"stream/promises\"","webpack://@photostructure/library/external node-commonjs \"timers\"","webpack://@photostructure/library/external node-commonjs \"zlib\"","webpack://@photostructure/library/webpack/bootstrap","webpack://@photostructure/library/./logcat.ts"],"sourcesContent":["import { lazy } from \"../core/Lazy\"\nimport { isProd, nodeEnv } from \"./NodeEnv\"\nimport { version } from \"./Version\"\n\nexport const SimpleAppName = \"PhotoStructure\"\nexport const SimpleShortAppName = \"phstr\" // < phstr.com redirects to photostructure.com\nexport const SimpleAppNameLC = SimpleAppName.toLowerCase()\n\nexport const AppName = lazy(() => SimpleAppName + (isProd ? \"\" : `-${nodeEnv}`))\nexport const AppNameVersion = lazy(() => AppName() + \" \" + version)\n","import {\n  compact,\n  isEmpty,\n  isNotEmpty,\n  primitiveValueOfOrElse,\n  remove,\n  stepRange,\n  uniqBy\n} from \"../fe/Array\"\nimport { copyArrayTo } from \"../fe/ArrayCopy\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { notBlank } from \"../fe/Blank\"\nimport { eql } from \"../fe/Eql\"\nimport { stringify } from \"../fe/JSON\"\nimport { Defined, defined, map, mapOr } from \"../fe/Maybe\"\nimport { Maybe, MaybeNull, PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { times } from \"../fe/Number\"\nimport { tap } from \"../fe/Object\"\nimport { Comparable, Primitivable, Primitive, gt, lt } from \"../fe/Primitive\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { Thunk } from \"../fe/Thunk\"\nimport { toA } from \"../fe/toA\"\nimport { stringifySorted } from \"./StringifySorted\"\n\n// TODO: INLINE\nexport { diff, remove } from \"../fe/Array\"\n\n/**\n * `minuend - subtrahend`, using eql() to compare elements.\n *\n * @template T must have a .valueOf() implementation\n * @param {T[]} minuend (haystack)\n * @param {T[]} subtrahend (needles)\n * @returns {T[]} values in `minuend` that, according to `eql()`, are\n * not in `subtrahend`. Neither arg is mutated.\n */\nexport function diffEql<T>(minuend: T[], subtrahend: T[]): T[] {\n  return minuend.filter(ea => !subtrahend.some(eb => eql(ea, eb)))\n}\n\n// Extract the element type of an array:\nexport type ElementType<T extends readonly unknown[]> = T[number]\n// type T = ElementType<SomeArrayType[]>\n\n/**\n * @return true iff all `objects` are neither `undefined` nor `null`. Note\n * that `[]` returns true.\n */\nexport function allDefined<T>(\n  arr: MaybeNull<MaybeNull<T>[]>\n): arr is Defined<T>[] {\n  return defined(arr) && arr.every(defined)\n}\n\nexport function mapAllDefined<T, U>(\n  arr: MaybeNull<MaybeNull<T>[]>,\n  f: (t: T[]) => U\n): Maybe<U> {\n  return allDefined(arr) ? f(arr) : undefined\n}\n\nexport function mapAll<T, V>(\n  arr: MaybeNull<MaybeNull<T>[]>,\n  f: (ea: T[]) => V\n): Maybe<V> {\n  return allDefined(arr) ? f(arr) : undefined\n}\n\n/**\n * @return true iff all `objects` are `undefined` or `null`\n */\nexport function allNotDefined(objects: any[]): boolean {\n  return objects == null || objects.every(ea => ea == null)\n}\n\nexport function allNotBlank(...arr: MaybeNull<any>[]): boolean {\n  return arr != null && arr.every(notBlank)\n}\n\n/**\n * @return true iff any `objects` are `undefined` or `null`. Note that `[]`\n * returns false (as there aren't not-defined instances).\n */\nexport function anyNotDefined(objects: any[]): boolean {\n  return objects == null || objects.some(ea => ea == null)\n}\n\nexport function anyDefined(objects: any[]): boolean {\n  return objects != null && objects.some(ea => ea != null)\n}\n\nexport async function findAsync<T>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T) => MaybeSyncOrAsync<boolean>\n): PromiseMaybe<T> {\n  for (const ea of toA(arr)) {\n    if (ea != null && true === (await f(ea))) return ea\n  }\n  return\n}\n\nexport async function findLastAsync<T>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T) => MaybeSyncOrAsync<boolean>\n): PromiseMaybe<T> {\n  arr = toA(arr)\n  for (let i = arr.length - 1; i >= 0; i--) {\n    const ea = arr[i]\n    if (ea != null && true === (await f(ea))) return ea\n  }\n  return\n}\n\n/**\n * @return the first non-`null` result of `f`, or if `f` is omitted, the first\n * non-null value in `arr`.\n */\nexport function first<T, R>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T) => MaybeNull<R>\n): Maybe<R> {\n  // PERF: avoid compact() to avoid creating a new array\n  if (arr != null) {\n    for (const ea of toA(arr)) {\n      if (ea != null) {\n        const r = f(ea)\n        if (r != null) {\n          return r\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * Return the first result from `f` that is defined.\n * @see Array#first\n * @see Later#firstDefinedLater\n */\nexport async function firstAsync<T, R>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T, index: number) => SyncOrAsync<MaybeNull<R>>\n): PromiseMaybe<R> {\n  if (arr != null) {\n    let index = -1\n    for (const t of arr) {\n      index++\n      try {\n        if (t != null) {\n          const r = await f(t, index)\n          if (r != null) {\n            return r\n          }\n        }\n      } catch (err) {\n        //\n      }\n    }\n  }\n  return undefined\n}\n\n/**\n * @see Later#firstDefinedLater\n */\nexport function firstNonEmptyThunk<T>(\n  ...thunks: Thunk<Maybe<T[]>>[]\n): Maybe<T[]> {\n  for (const t of thunks) {\n    const arr = t()\n    if (isNotEmpty(arr)) {\n      return arr\n    }\n  }\n  return\n}\n\n/**\n * @return the last value in the array that satisfies the predicate\n */\nexport function findFromIndex<T>(\n  arr: T[],\n  predicate: (t: T) => boolean,\n  fromIndex: number\n): Maybe<number> {\n  for (let i = fromIndex; i <= arr.length - 1; i++) {\n    if (predicate(arr[i])) return i\n  }\n  return\n}\n\n/**\n * @return the last value in the array that satisfies the predicate\n */\nexport function findLast<T>(arr: T[], predicate: (t: T) => boolean): Maybe<T> {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) return arr[i]\n  }\n  return\n}\n\n/**\n * @return the last index in the array that satisfies the predicate\n */\nexport function findLastIndex<T>(\n  arr: T[],\n  predicate: (t: T) => boolean\n): number {\n  for (let i = arr.length - 1; i >= 0; i--) {\n    if (predicate(arr[i])) return i\n  }\n  return -1\n}\n\nexport function concat<T>(...arrs: (MaybeNull<T> | MaybeNull<T>[])[]): T[] {\n  const arr: T[] = []\n  for (const ea of arrs) {\n    if (Array.isArray(ea)) {\n      for (const elem of ea) {\n        if (elem != null) arr.push(elem)\n      }\n    } else if (ea != null) {\n      arr.push(ea)\n    }\n  }\n  return arr\n}\n\nexport function moveToEnd<T>(arr: T[], element: T): T[] {\n  remove(arr, element)\n  arr.push(element)\n  return arr\n}\n\nexport function moveIndexToEnd<T>(arr: T[], index: number): T[] {\n  const moved = arr[index]\n  if (moved == null) return arr\n  arr.push(moved)\n  for (let i = index; i < arr.length - 1; i++) {\n    arr[i] = arr[i + 1]\n  }\n  arr.length = arr.length - 1\n  return arr\n}\n\n/**\n * @template T must have a .valueOf() implementation\n * @return the values in both `a` and `b`\n */\nexport function intersection<T>(\n  a: T[],\n  b: T[],\n  valueOf: (t: T) => Primitive = primitiveValueOfOrElse\n): T[] {\n  const s = new Set(b.map(valueOf))\n  return a.filter(ea => s.has(valueOf(ea)))\n}\n\nexport function diceCoeff<T>(\n  a: T[],\n  b: T[],\n  valueOf: (t: T) => Primitive = primitiveValueOfOrElse\n): number {\n  if (isEmpty(a) && isEmpty(b)) return 1\n  return (intersection(a, b, valueOf).length * 2) / (a.length + b.length)\n}\n\n/**\n * @return true iff all elements in `a` are in `b` and all elements in `b` are\n * in `a`. Order is ignored. Elements must be sortable, however.\n */\nexport function eqlUnordered(a: Maybe<any[]>, b: Maybe<any[]>): boolean {\n  return a == null || b == null\n    ? false\n    : zip(sortBy(a, stringifySorted), sortBy(b, stringifySorted)).every(\n        ([x, y]) => eql(x, y)\n      )\n}\n\n/**\n * Remove the first item from `arr` where the `predicate` returns `true`.\n * @return the element removed from `arr`\n */\nexport function removeFirst<T>(\n  arr: T[],\n  predicate: (item: T, index: number, sourceArray: T[]) => boolean\n): Maybe<T> {\n  const idx = arr.findIndex(predicate)\n  return idx >= 0 ? arr.splice(idx, 1)[0] : undefined\n}\n\nexport function uniqInPlace<T>(\n  arr: T[],\n  f: (t: T) => Maybe<Primitive> = ea => stringify(ea)\n): void {\n  copyArrayTo(uniqBy(arr, f), arr)\n}\n\nexport function partition<T>(\n  arr: Iterable<T>,\n  filter: (t: T, index: number) => boolean\n): [T[], T[]] {\n  const accept: T[] = []\n  const reject: T[] = []\n  let i = 0\n  for (const ea of arr) {\n    ;(filter(ea, i++) ? accept : reject).push(ea)\n  }\n  return [accept, reject]\n}\n\nexport function isUniq<T extends Comparable>(t: T[]): boolean {\n  return t.every((ea, i) => t.indexOf(ea) === i)\n}\n\n/**\n * `Uniq -c`: return unique strings and their count\n */\nexport function uniqCount<T extends Primitive>(\n  arr: T[]\n): { t: T; count: number }[] {\n  return _uniqCount(arr.sort())\n}\n\nfunction _uniqCount<T extends Primitive>(\n  sortedArr: T[]\n): { t: T; count: number }[] {\n  if (sortedArr == null || sortedArr.length === 0) return []\n  const t = sortedArr[0]\n  const lastElem = sortedArr.lastIndexOf(t)\n  return [\n    { t, count: lastElem + 1 },\n    ..._uniqCount(sortedArr.slice(lastElem + 1))\n  ]\n}\n\nexport function mapCompact<T, R>(\n  arr: MaybeNull<T>[],\n  f: (t: T) => Maybe<R>\n): R[] {\n  return compact(compact(arr).map(f))\n}\n\nexport function toMapEntries<T, K, V>(\n  arr: T[],\n  f: (t: T) => MaybeNull<[K, V]>\n): Map<K, V> {\n  return new Map<K, V>(arr.map(f).filter(defined) as [K, V][])\n}\n\nexport function flatMap<T, U>(arr: T[], f: (t: T) => Maybe<Maybe<U>[]>): U[] {\n  return arr.reduce(\n    (prev: U[], curr: T) => prev.concat(...compact(f(curr))),\n    []\n  )\n}\n\nexport function retainLastN<T>(arr: T[], length: number): T[] {\n  if (arr.length > length) {\n    arr.splice(0, arr.length - length)\n  }\n  return arr\n}\n\nexport function retainFirstN<T>(arr: T[], length: number): T[] {\n  arr.length = Math.min(arr.length, length)\n  return arr\n}\n\nexport function zip<T1, T2>(arr1: T1[], arr2: T2[]): [T1, T2][]\nexport function zip<T1, T2, T3>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[]\n): [T1, T2, T3][]\nexport function zip<T1, T2, T3, T4>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[]\n): [T1, T2, T3, T4][]\nexport function zip<T1, T2, T3, T4, T5>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[],\n  arr5: T5[]\n): [T1, T2, T3, T4, T5][]\nexport function zip<T1, T2, T3, T4, T5, T6>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[],\n  arr5: T5[],\n  arr6: T6[]\n): [T1, T2, T3, T4, T5, T6][]\n// YAY TYPING IS FUN\nexport function zip<T1, T2, T3, T4, T5, T6, T7>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[],\n  arr5: T5[],\n  arr6: T6[],\n  arr7: T7[]\n): [T1, T2, T3, T4, T5, T6, T7][]\nexport function zip<T1, T2, T3, T4, T5, T6, T7, T8>(\n  arr1: T1[],\n  arr2: T2[],\n  arr3: T3[],\n  arr4: T4[],\n  arr5: T5[],\n  arr6: T6[],\n  arr7: T7[],\n  arr8: T8[]\n): [T1, T2, T3, T4, T5, T6, T7, T8][]\n\nexport function zip<T>(...arrarr: T[][]): Maybe<T>[][] {\n  const len = Math.max(...arrarr.map(ea => ea?.length ?? 0))\n  return times(len, i => arrarr.map(ea => ea?.[i]))\n}\n\nexport function flatZip<T>(...arrarr: T[][]): Maybe<T>[] {\n  const len = Math.max(...arrarr.map(ea => ea?.length ?? 0))\n  const r: T[] = []\n  times(len, i => arrarr.map(ea => r.push(ea?.[i])))\n  return r\n}\n\nexport function unFlatZip<T>(arr: T[] | Buffer, n: number): number[][] {\n  const len = arr.length / n\n  if (len !== Math.round(len))\n    throw new Error(\n      \"unFlatZip(): bad input array length \" +\n        stringify({ arr_length: arr.length, n })\n    )\n  const results = times(n, () => new Array(len))\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < n; j++) {\n      results[j][i] = arr[i * n + j]\n    }\n  }\n  return results\n}\n\n/**\n * Given [A,B,C], return [A], [A,B], [A,B,C]\n */\nexport function ancestry<T>(arr: T[]): T[][] {\n  return times(arr.length, i => arr.slice(0, i + 1))\n}\n\nexport function min<T extends Primitivable>(arr: MaybeNull<T>[]): Maybe<T> {\n  return arr[leastIndex(arr)] as Maybe<T>\n}\n\n/**\n * Return the first index into `arr` holding the least value (using `valueOf`\n * of T)\n */\nexport function leastIndex<T extends Primitivable>(\n  arr: MaybeNull<T>[]\n): number {\n  return leastIndexBy(arr, ea => ea.valueOf())\n}\n\nexport function max<T extends Primitivable>(arr: MaybeNull<T>[]): Maybe<T> {\n  return arr[greatestIndex(arr)] as Maybe<T>\n}\n\n/**\n * Return the first index into `arr` holding the largest value (using `valueOf`\n * of T)\n */\nexport function greatestIndex<T extends Primitivable>(\n  arr: MaybeNull<T>[]\n): number {\n  return greatestIndexBy(arr, ea => ea.valueOf())\n}\n\nexport function leastIndexBy<T>(\n  arr: MaybeNull<T>[],\n  valueOf: (t: T) => Maybe<Comparable>\n): number {\n  return estIndex(arr, valueOf, (a, b) => lt(a, b))\n}\n\nexport function greatestIndexBy<T>(\n  arr: MaybeNull<T>[],\n  valueOf: (t: T) => Maybe<Comparable>\n): number {\n  return estIndex(arr, valueOf, (a, b) => gt(a, b))\n}\n\nexport function leastBy<T>(\n  arr: Maybe<MaybeNull<T>[]>,\n  valueOf: (t: T) => Maybe<Comparable>\n): Maybe<T> {\n  return isEmpty(arr)\n    ? undefined\n    : (arr[leastIndexBy(arr, valueOf)] as Maybe<T>)\n}\n\nexport function least<T extends Comparable>(\n  arr: Maybe<MaybeNull<T>[]>\n): Maybe<T> {\n  return leastBy(arr, ea => ea)\n}\n\nexport function greatestBy<T>(\n  arr: Maybe<MaybeNull<T>[]>,\n  valueOf: (t: T) => Maybe<Comparable>\n): Maybe<T> {\n  return isEmpty(arr)\n    ? undefined\n    : (arr[greatestIndexBy(arr, valueOf)] as Maybe<T>)\n}\n\nfunction estIndex<T>(\n  arr: MaybeNull<T>[],\n  valueOf: (t: T) => Maybe<Comparable>,\n  cmp: (a: Comparable, b: Comparable) => boolean\n): number {\n  return estIndexCtx(arr, valueOf, cmp).index\n}\n\nexport function leastByCtx<T, C extends Comparable>(\n  arr: Maybe<MaybeNull<T>[]>,\n  valueOf: (t: T) => Maybe<C>\n): Maybe<{ result: T; index: number; value: C }> {\n  const ctx = estIndexCtx(arr ?? [], valueOf, lt)\n  return arr == null || ctx == null || ctx.index < 0 || ctx.value == null\n    ? undefined\n    : { result: arr[ctx.index]!, index: ctx.index, value: ctx.value }\n}\n\nfunction estIndexCtx<T, C extends Comparable>(\n  arr: MaybeNull<T>[],\n  valueOf: (t: T) => Maybe<C>,\n  cmp: (a: C, b: C) => boolean\n): { index: number; value: Maybe<C> } {\n  if (isEmpty(arr)) return { index: -1, value: undefined }\n\n  let result = -1\n  let value: Maybe<C>\n\n  for (let i = 0; i < arr.length; i++) {\n    const ea = arr[i]\n    if (ea != null) {\n      const v = valueOf(ea)\n      if (v != null) {\n        if (value == null || cmp(v, value) === true) {\n          result = i\n          value = v\n        }\n      }\n    }\n  }\n  return { index: result, value }\n}\n\nexport interface ArrayLike<T> {\n  length: number\n  [index: number]: Maybe<T>\n}\n\nexport function reverse<T extends ArrayLike<any>>(arr: T): T {\n  const r = []\n  for (let i = arr.length - 1; i >= 0; i--) {\n    r.push(arr[i])\n  }\n  return r as any\n}\n\nexport function batches<T>(arr: T[], batchsize: number): T[][] {\n  if (batchsize < 1) batchsize = 1\n  return stepRange(0, arr.length, Math.round(batchsize), i =>\n    arr.slice(i, i + batchsize)\n  )\n}\n\nexport function collectBatched<T1, T2>(\n  arr: T1[],\n  batchSize: number,\n  f: (batch: T1[]) => Maybe<Maybe<T2>[]>\n): T2[] {\n  const result: T2[] = []\n  for (const batchArr of batches(compact(toA(arr)), batchSize)) {\n    result.push(...compact(f(batchArr)))\n  }\n  return result\n}\n\nexport async function collectBatchedAsync<T1, T2>(\n  arr: T1[],\n  batchSize: number,\n  f: (batch: T1[]) => PromiseMaybe<Maybe<T2>[]>\n): Promise<T2[]> {\n  const result: T2[] = []\n  for (const batchArr of batches(compact(toA(arr)), batchSize)) {\n    result.push(...compact(await f(batchArr)))\n  }\n  return result\n}\n\nexport function contextFilter<T>(\n  arr: T[],\n  predicate: (t: T, idx: number, lastPass: Maybe<T>) => boolean\n): T[] {\n  let lastPass: Maybe<T>\n  return arr.filter((ea, idx) =>\n    tap(predicate(ea, idx, lastPass), result => {\n      if (result) lastPass = ea\n    })\n  )\n}\n\nexport function clusterSome<T>(arr: T[], cmp: (a: T, b: T) => boolean): T[][] {\n  const result: T[][] = []\n  for (const ea of arr) {\n    const prior = result.find(ea2 => ea2.some(ea3 => cmp(ea, ea3)))\n    if (prior) prior.push(ea)\n    else result.push([ea])\n  }\n  return result\n}\n\nexport function clusterEvery<T>(arr: T[], cmp: (a: T, b: T) => boolean): T[][] {\n  const result: T[][] = []\n  for (const ea of arr) {\n    const prior = result.find(ea2 => ea2.every(ea3 => cmp(ea, ea3)))\n    if (prior) prior.push(ea)\n    else result.push([ea])\n  }\n  return result\n}\n\nexport async function clusterAsync<T>(\n  arr: T[],\n  cmp: (a: T, b: T) => SyncOrAsync<boolean>\n): Promise<NonNullable<T>[][]> {\n  const result: NonNullable<T>[][] = []\n  outer: for (const ea of arr) {\n    for (const resultArr of result) {\n      if (\n        ea != null &&\n        (await everyAsync(resultArr, prior => cmp(ea, prior)))\n      ) {\n        resultArr.push(ea)\n        continue outer\n      }\n    }\n    if (ea != null) result.push([ea])\n  }\n  return result\n}\n\n/**\n * Return if any `f` returns true.\n * @see Array#some\n */\nexport async function someAsync<T>(\n  arr: T[],\n  f: (t: T, index: number) => SyncOrAsync<boolean>\n): Promise<boolean> {\n  if (arr != null) {\n    for (let i = 0; i < arr.length; i++) {\n      if (await f(arr[i], i)) return true\n    }\n  }\n  return false\n}\n\n/**\n * Return if every `f` returns true.\n * @see Array#every\n */\nexport async function everyAsync<T>(\n  arr: T[],\n  f: (t: T, index: number) => SyncOrAsync<boolean>\n): Promise<boolean> {\n  return isEmpty(arr) || (await Promise.all(arr.map(f))).every(ea => ea)\n}\n\nexport function firstIndexNearest<T>({\n  arr,\n  fromIndex,\n  pred,\n  maxDelta\n}: {\n  arr: T[]\n  fromIndex: number\n  pred: (t: T, index: number) => boolean\n  maxDelta: number\n}): Maybe<number> {\n  for (let i = 1; i < Math.min(maxDelta + 1, arr.length); i++) {\n    {\n      const before = fromIndex - i\n      if (before >= 0 && true === map(arr[before], ea => pred(ea, before))) {\n        return before\n      }\n    }\n    {\n      const after = fromIndex + i\n      if (after < arr.length && pred(arr[after]!, after)) return after\n    }\n  }\n  return\n}\n\nexport function dupes<T extends Primitive>(arr: Maybe<T>[]) {\n  const mm = new Map<T, number>()\n  for (const ea of arr) {\n    if (ea != null)\n      mm.set(\n        ea,\n        mapOr(mm.get(ea), i => i + 1, 1)\n      )\n  }\n  return toA(mm.entries()).filter(([, v]) => v > 1)\n}\n\nexport function leftPadArray<T>(arr: T[], minLength: number, pad: T) {\n  if (arr.length < minLength) {\n    arr.unshift(...times(minLength - arr.length, () => pad))\n  }\n  return arr\n}\n","import {\n  BatchCluster,\n  BatchClusterEmitter,\n  BatchClusterOptions\n} from \"batch-cluster\"\nimport { ExifTool } from \"exiftool-vendored\"\nimport process from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { minuteMs, secondMs } from \"../fe/Date\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0 } from \"../fe/Number\"\nimport { TimeoutError } from \"../fe/TimeoutError\"\nimport { toS } from \"../fe/toS\"\nimport { mkLogger } from \"./Logger\"\nimport { Pids, addPid } from \"./Pids\"\nimport { renice } from \"./Renice\"\nimport { ShortCommandTimeoutMs } from \"./ShortCommandTimeoutMs\"\nimport { EndableRank, EndableRanks, ending } from \"./async/Endable\"\nimport { EndableWrapper } from \"./async/EndableWrapper\"\nimport { onTimeout } from \"./async/TimeoutHandler\"\nimport { errorToS } from \"./error/Error\"\nimport { FatalErrorFlag } from \"./error/ErrorFlags\"\nimport { isIgnorableError } from \"./error/ErrorTypes\"\nimport { onError } from \"./error/OnError\"\nimport { isWin } from \"./platform/Platform\"\nimport { Settings } from \"./settings/Settings\"\nimport { commandTimeoutMs } from \"./volumes/VolumeTtls\"\n\n// TODO: move to ./proc/? ./bc/?\n/**\n * Rather than extend ExifTool or BatchCluster, just facade it to be an\n * Endable\n */\nexport class BatchClusterObserver<\n  T extends ExifTool | BatchCluster\n> extends EndableWrapper {\n  lastStartError: Maybe<Error>\n  lastInternalError: Maybe<Error>\n  lastTaskError: Maybe<Error>\n\n  constructor(\n    name: string,\n    readonly t: T,\n    rank: EndableRank = EndableRanks.service\n  ) {\n    super(\n      `proc.BatchClusterObserver(${name})`,\n      () => this.t.end(),\n      rank,\n      name === \"worker\" ? commandTimeoutMs() : ShortCommandTimeoutMs\n    )\n    // TODO: TYPESCRIPT SITS: this cast shouldn't be necessary\n    const bce: Pick<BatchClusterEmitter, \"on\"> = t\n    bce.on(\"childStart\", async bp => {\n      if (bp.pid == null) {\n        this.onError(\"No PID returned for \" + name, new TimeoutError())\n        return\n      }\n      this.logger.info(\"Started child process\", { pid: bp.pid })\n      renice(bp.pid).catch(err => this.onError(\"renice failed\", err))\n      addPid(\n        {\n          pid: bp.pid,\n          ppid: process.pid,\n          cmd: name,\n          maxAgeMs: t.options.maxProcAgeMillis + minuteMs\n        },\n        new Date()\n      )?.catch(err => this.onError(\"addPid failed for \" + name, err))\n    })\n    bce.on(\"startError\", error => {\n      this.lastStartError = error\n      this.onError(\"failed to start\", error)\n    })\n    bce.on(\"taskError\", (error, task) => {\n      if (errorToS(error).match(/timeout/) != null) onTimeout()\n      this.lastTaskError = error\n      this.onError(\"failed to run \" + map(task, ea => ea.command), error)\n    })\n    bce.on(\"fatalError\", error => {\n      this.onError(\"on(fatalError)\" + FatalErrorFlag, error)\n    })\n    bce.on(\"internalError\", error => {\n      this.lastInternalError = error\n      this.onError(\"internal error\", error)\n    })\n    bce.on(\"noTaskData\", (stdout, stderr, proc) => {\n      // This is probably due to streamFlushMillis being too aggressive.\n      const prior = t.options.streamFlushMillis\n      // Bump up the streamFlushMillis if it's not \"too big\" already, to try to\n      // avoid this in the future:\n      if (prior < secondMs) {\n        t.options.streamFlushMillis += 100\n        this.logger.warn(\"on(noTaskData): bumping up streamFlushMillis.\", {\n          prior,\n          new: t.options.streamFlushMillis,\n          stout: toS(stdout),\n          stderr: toS(stderr),\n          child_pid: proc?.pid\n        })\n      }\n    })\n    bce.on(\"endError\", err => {\n      this.logger.error(\"observeBatchCluster.endError()\", err)\n    })\n    bce.on(\"childEnd\", cp => {\n      if (gt0(cp?.pid)) {\n        this.logger.info(\"on(childExit)\", cp.pid)\n        void Pids.instance()?.onKill(cp.pid)\n      }\n    })\n  }\n\n  onError(reason: string, error: Error): void {\n    // Avoid stack overflow on end (where end error asks services to shut down,\n    // which causes an end error, which ...)\n    if (!this.t.ended && !ending() && isIgnorableError(error) === false) {\n      onError(this.name + \": \" + reason, error)\n    } else {\n      this.logger.warn(\"onError() (ending or ignorable): \" + reason, error)\n    }\n  }\n}\n\nexport function batchClusterOptions(\n  maxProcs: number,\n  loggerName: string\n): Partial<BatchClusterOptions> {\n  return {\n    maxProcs,\n    // Shut down idle procs after a minute or two (longer on Windows because\n    // forking is so expensive)\n    maxIdleMsPerProcess: (isWin ? 3 : 1) * minuteMs,\n    maxTasksPerProcess: Settings.maxTasksPerProcess.valueOrDefault,\n    // it shouldn't take longer than a second for node to spin up, but\n    // antivirus and slow external disks can cause huge latency:\n    spawnTimeoutMillis: commandTimeoutMs(),\n    // no fork-bombs\n    minDelayBetweenSpawnMillis: Settings.minDelayBetweenSpawnMs.valueOrDefault,\n    streamFlushMillis: Settings.streamFlushMs.valueOrDefault,\n    // We'll take care of it with the pid reaper:\n    cleanupChildProcs: false,\n    logger: lazy(() => mkLogger(loggerName))\n  }\n}\n","import { List } from \"../fe/List\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { clamp, times } from \"../fe/Number\"\n\nexport class BoundedList<T> implements Iterable<T>, List<T> {\n  // round-robin implementation:\n  private readonly store: T[]\n  private _length = 0\n  private _firstIndex = 0\n  constructor(readonly maxLength: number) {\n    if (maxLength > 1000)\n      throw new Error(\"BoundedList.maxLength of \" + maxLength)\n    this.store = new Array<T>(...(times(maxLength, () => null) as any))\n  }\n\n  /**\n   * @param index follows https://github.com/tc39/proposal-item-method\n   */\n  private mapIndex<U>(index: number, f: (storeIndex: number) => U): Maybe<U> {\n    index = Math.trunc(index) ?? 0\n    if (index < 0) {\n      index += this._length\n    }\n    return index < 0 || index >= this._length\n      ? undefined\n      : f((index + this._firstIndex + this.maxLength) % this.maxLength)\n  }\n\n  // [i: number]: T {\n  //   return this.get(i) as any\n  // }\n\n  /**\n   * @see https://github.com/tc39/proposal-item-method\n   */\n  at(n: number): T {\n    return this.mapIndex(n, idx => this.store[idx]) as T\n  }\n\n  /**\n   * @return the last value in this list\n   */\n  get last(): Maybe<T> {\n    return this.at(-1)\n  }\n\n  set(n: number, value: T) {\n    return this.mapIndex(n, idx => (this.store[idx] = value))\n  }\n\n  get length(): number {\n    return this._length\n  }\n\n  set length(l: number) {\n    this._length = clamp(0, this._length, l)\n  }\n\n  clear() {\n    this.length = 0\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<T> {\n      for (let i = 0; i < self.length; i++) {\n        yield self.mapIndex(i, ea => self.store[ea])!\n      }\n    }\n    return iter()\n  }\n\n  push(...items: T[]): number {\n    // Don't bother pushing more than the last maxLength items:\n    for (const item of items.slice(-this.maxLength)) {\n      if (this._length < this.maxLength) {\n        this._length++\n      } else {\n        // push 1 entry off the head:\n        this._firstIndex++\n        this._firstIndex = this._firstIndex % this.maxLength\n      }\n      this.mapIndex(this._length - 1, idx => {\n        this.store[idx] = item\n      })\n    }\n    return this._length\n  }\n\n  pop(): T | undefined {\n    return this.mapIndex(this._length - 1, idx => {\n      this._length--\n      return this.store[idx]\n    })\n  }\n\n  unshift(...items: T[]): number {\n    for (const item of items.reverse()) {\n      if (this._length < this.maxLength) {\n        this._length++\n      }\n      // push 1 entry off the head:\n      this._firstIndex--\n      this.mapIndex(0, idx => {\n        this.store[idx] = item\n        this._firstIndex = idx\n      })\n    }\n    return this._length\n  }\n\n  shift(): T | undefined {\n    return this.mapIndex(0, idx => {\n      this._firstIndex++\n      this._length--\n      return this.store[idx]\n    })\n  }\n\n  shiftOrFirst() {\n    return this.length > 1 ? this.shift() : this.at(0)\n  }\n\n  every(callbackfn: (value: T, index: number) => boolean): boolean {\n    for (let i = 0; i < this._length; i++) {\n      if (!callbackfn(this.at(i), i)) return false\n    }\n    return true\n  }\n\n  some(callbackfn: (value: T, index: number) => boolean): boolean {\n    for (let i = 0; i < this._length; i++) {\n      if (callbackfn(this.at(i), i)) return true\n    }\n    return false\n  }\n\n  forEach(callbackfn: (value: T, index: number) => void): void {\n    for (let i = 0; i < this._length; i++) {\n      callbackfn(this.at(i), i)\n    }\n  }\n\n  map<U>(callbackfn: (value: T, index: number) => U): U[] {\n    const arr = []\n    for (let i = 0; i < this._length; i++) {\n      arr.push(callbackfn(this.at(i), i))\n    }\n    return arr\n  }\n\n  reduce<U>(\n    callbackfn: (previousValue: U, currentValue: T, currentIndex: number) => U,\n    initialValue: U\n  ): U {\n    let acc = initialValue\n    for (let i = 0; i < this._length; i++) {\n      acc = callbackfn(acc, this.at(i), i)\n    }\n    return acc\n  }\n\n  reverse(): this {\n    for (let i = 0; i < Math.floor(this._length / 2); i++) {\n      this.mapIndex(i, from => {\n        this.mapIndex(this._length - 1 - i, to => {\n          const swap = this.store[to]\n          this.store[to] = this.store[from]\n          this.store[from] = swap\n        })\n      })\n    }\n    return this\n  }\n\n  toA(): T[] {\n    return [...this]\n  }\n\n  slice(start?: number | undefined, end?: number | undefined): T[] {\n    return [...this].slice(start, end)\n  }\n\n  // sort(compareFn?: ((a: T, b: T) => number) | undefined): this {\n  //   throw new Error(\"Method not implemented.\")\n  // }\n  // indexOf(searchElement: T, fromIndex?: number | undefined): number {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // lastIndexOf(searchElement: T, fromIndex?: number | undefined): number {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // filter<S extends T>(callbackfn: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];\n  // filter(callbackfn: (value: T, index: number, array: T[]) => , thisArg?: any): T[];\n  // filter(callbackfn: any, thisArg?: any) {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n  // reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n  // reduce(callbackfn: any, initialValue?: any) {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\n  // reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\n  // reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\n  // reduceRight(callbackfn: any, initialValue?: any) {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // find<S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;\n  // find(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): T | undefined;\n  // find(predicate: any, thisArg?: any) {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // findIndex(predicate: (value: T, index: number, obj: T[]) => boolean, thisArg?: any): number {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // fill(value: T, start?: number | undefined, end?: number | undefined): this {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // copyWithin(target: number, start: number, end?: number | undefined): this {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // entries(): IterableIterator<[number, T]> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // keys(): IterableIterator<number> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // values(): IterableIterator<T> {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // [Symbol.unscopables](): { copyWithin: boolean; entries: boolean; fill: boolean; find: boolean; findIndex: boolean; keys: boolean; values: boolean; } {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n  // includes(searchElement: T, fromIndex?: number | undefined): boolean {\n  //   throw new Error(\"Method not implemented.\");\n  // }\n}\n","import { toS } from \"../fe/toS\"\n\nconst ByteOrderMarks: { bom: number[]; encoding: BufferEncoding }[] = [\n  { bom: [0xef, 0xbb, 0xbf], encoding: \"utf8\" },\n  { bom: [0xff, 0xfe], encoding: \"utf16le\" }\n]\n\n// tested by SettingsIO.spec.ts:\nexport function debom(b: Buffer): string {\n  for (const { bom, encoding } of ByteOrderMarks) {\n    if (bufferStartsWith(b, bom)) {\n      return b.subarray(bom.length).toString(encoding)\n    }\n  }\n  return b.toString()\n}\n\nexport function bufferToString(b: Buffer | string): string {\n  return Buffer.isBuffer(b) ? debom(b) : toS(b)\n}\n\nexport function bufferStartsWith(b: Buffer, prefix: number[]) {\n  return prefix.every((ea, idx) => b[idx] === ea)\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { DefaultNormalizer } from \"./StringNormalizer\"\n\nexport class CaseInsensitiveMap<V> implements Map<string, V> {\n  // the value contains the original-cased key\n  private readonly store = new Map<string, [string, V]>()\n\n  constructor(\n    initialContents: [string, V][] = [],\n    readonly normalizer = DefaultNormalizer\n  ) {\n    for (const [k, v] of initialContents) {\n      this.set(k, v)\n    }\n  }\n  get(key: string): Maybe<V> {\n    const k = this.normalizer(key)\n    return k == null ? undefined : this.store.get(k)?.[1]\n  }\n  lookup(key: Maybe<string>): Maybe<[string, V]> {\n    const k = this.normalizer(key)\n    return k == null ? undefined : this.store.get(k)\n  }\n  has(key: Maybe<string>): boolean {\n    const k = this.normalizer(key)\n    return k == null ? false : this.store.has(k)\n  }\n  set(key: Maybe<string>, value: V): this {\n    const k = this.normalizer(key)\n    if (key != null && k != null) this.store.set(k, [key, value])\n    return this\n  }\n  clear(): void {\n    this.store.clear()\n  }\n  delete(key: string): boolean {\n    const k = this.normalizer(key)\n    return k == null ? false : this.store.delete(k)\n  }\n  forEach(\n    callbackfn: (value: V, key: string, map: Map<string, V>) => void\n  ): void {\n    this.store.forEach(v => callbackfn(v[1], v[0], this))\n  }\n  get size(): number {\n    return this.store.size\n  }\n  entries(): IterableIterator<[string, V]> {\n    return this.store.values()\n  }\n  keys(): IterableIterator<string> {\n    return [...this.store.values()].map(ea => ea[0])[Symbol.iterator]()\n  }\n  values(): IterableIterator<V> {\n    return [...this.store.values()].map(ea => ea[1])[Symbol.iterator]()\n  }\n  [Symbol.iterator](): IterableIterator<[string, V]> {\n    return this.entries()\n  }\n  get [Symbol.toStringTag](): string {\n    return \"CaseInsensitiveMap\"\n  }\n\n  pick(...keys: string[]): Record<string, V> {\n    const result: Record<string, V> = {}\n    for (const key of keys) {\n      const l = this.lookup(key)\n      if (l != null) {\n        result[l[0]] = l[1]\n      }\n    }\n    return result\n  }\n}\n","import { uniq } from \"../fe/Array\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { MultiMap } from \"../fe/MultiMap\"\nimport * as o from \"../fe/Object\"\nimport { toA } from \"../fe/toA\"\nimport { diceCoeff } from \"./StringSimilarity\"\n\n/**\n * ONLY BASE-ASCII CASE-INSENSITIVE!\n */\nexport class CaseInsensitiveValued<V> {\n  private readonly m: MultiMap<string, string>\n  constructor(\n    readonly obj: o.Valued<V>,\n    readonly synonyms: (key: string, value: V) => Maybe<string[]> = () =>\n      undefined\n  ) {\n    this.m = new MultiMap()\n    this.vacuum()\n  }\n\n  vacuum() {\n    this.m.clear()\n    for (const [k, v] of o.entries(this.obj)) {\n      for (const key of uniq(\n        [k, ...toA(this.synonyms(k, v))].map(ea => ea.toLowerCase())\n      )) {\n        this.m.add(key, k)\n      }\n    }\n    this.m.vacuum()\n  }\n\n  lookup(key: string): Maybe<{ key: string; value: V }> {\n    if (key == null) return\n    const value = this.obj[key]\n    return value != null\n      ? { key, value }\n      : this.getFirst(this.m.get(key.toLowerCase()))\n  }\n\n  lookupNearest(key: string, minDiceCoeff = 0.4) {\n    const exact = this.lookup(key)\n    if (exact != null) return exact\n    let bestCoeff = -1\n    let best: Maybe<{ key: string; value: V }>\n    for (const [k, arr] of this.m.entries()) {\n      const coeff = diceCoeff(k, key)\n      if (coeff > minDiceCoeff && coeff > bestCoeff) {\n        const newBest = this.getFirst(arr)\n        if (newBest != null) {\n          best = newBest\n          bestCoeff = coeff\n        }\n      }\n    }\n\n    return best\n  }\n\n  get(key: string): Maybe<V> {\n    return this.lookup(key)?.value\n  }\n\n  getFirst(keys: Maybe<string[]>): Maybe<{ key: string; value: V }> {\n    if (keys == null) return\n    for (const k of keys) {\n      // return the first non-null value:\n      const value = this.obj[k]\n      if (value != null) return { key: k, value }\n    }\n    return\n  }\n\n  delete(key: string) {\n    const lc = key.toLowerCase()\n    const arr = this.m.get(lc)\n    if (arr != null) {\n      for (const k of arr) {\n        delete this.obj[k]\n      }\n      this.m.delete(lc)\n    }\n  }\n\n  pick(...keys: string[]): Record<string, V> {\n    const result: Record<string, V> = {}\n    for (const key of keys) {\n      const l = this.lookup(key)\n      if (l?.key != null) {\n        result[l.key] = l.value\n      }\n    }\n    return result\n  }\n}\n","import { noColor } from \"./NoColor\"\n\n// we're not referencing Setting.logColor here to break deploop:\nlet colorEnabled = !noColor()\n\nexport function setColorEnabled(on?: boolean) {\n  colorEnabled = on ?? !noColor()\n}\n\nfunction withAsciiEscape(on: number, off: number) {\n  return (msg: string) =>\n    colorEnabled ? `\\u001b[${on}m${msg}\\u001b[${off}m` : msg\n}\n\n// https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit\n\nexport const reset = withAsciiEscape(0, 0)\nexport const bold = withAsciiEscape(1, 22)\nexport const dim = withAsciiEscape(2, 22)\nexport const italic = withAsciiEscape(3, 23)\nexport const underline = withAsciiEscape(4, 24)\nexport const overline = withAsciiEscape(53, 55)\nexport const inverse = withAsciiEscape(7, 27)\nexport const hidden = withAsciiEscape(8, 28)\nexport const strikethrough = withAsciiEscape(9, 29)\n\nexport const black = withAsciiEscape(30, 39)\nexport const red = withAsciiEscape(31, 39)\nexport const green = withAsciiEscape(32, 39)\nexport const yellow = withAsciiEscape(33, 39)\nexport const blue = withAsciiEscape(34, 39)\nexport const magenta = withAsciiEscape(35, 39)\nexport const cyan = withAsciiEscape(36, 39)\n\nexport const lightGrey = withAsciiEscape(37, 39)\nexport const darkGrey = withAsciiEscape(90, 39)\nexport const redBright = withAsciiEscape(91, 39)\nexport const greenBright = withAsciiEscape(92, 39)\nexport const yellowBright = withAsciiEscape(93, 39)\nexport const blueBright = withAsciiEscape(94, 39)\nexport const magentaBright = withAsciiEscape(95, 39)\nexport const cyanBright = withAsciiEscape(96, 39)\nexport const white = withAsciiEscape(97, 39)\n\nexport const bgBlack = withAsciiEscape(40, 49)\nexport const bgRed = withAsciiEscape(41, 49)\nexport const bgGreen = withAsciiEscape(42, 49)\nexport const bgYellow = withAsciiEscape(43, 49)\nexport const bgBlue = withAsciiEscape(44, 49)\nexport const bgMagenta = withAsciiEscape(45, 49)\nexport const bgCyan = withAsciiEscape(46, 49)\n\nexport const bgLightGrey = withAsciiEscape(47, 49)\nexport const bgDarkGrey = withAsciiEscape(100, 49)\nexport const bgRedBright = withAsciiEscape(101, 49)\nexport const bgGreenBright = withAsciiEscape(102, 49)\nexport const bgYellowBright = withAsciiEscape(103, 49)\nexport const bgBlueBright = withAsciiEscape(104, 49)\nexport const bgMagentaBright = withAsciiEscape(105, 49)\nexport const bgCyanBright = withAsciiEscape(106, 49)\nexport const bgWhite = withAsciiEscape(107, 49)\n\n// export function ansiColor(msg: string, rgb: Triplet) {\n//   const [r,g,b] = clampRGB(rgb)\n//   return `\\u001b[38;2;${r};${g};${b}m\"`\n// }\n","import { sort, sortBy } from \"../fe/ArraySort\"\nimport { isNumber, mapNumericOr } from \"../fe/Number\"\nimport { tap } from \"../fe/Object\"\nimport { toS } from \"../fe/toS\"\nimport { Average } from \"./math/Average\"\nimport { sum } from \"./math/Vector\"\n\nexport class CountingSet<K extends number | string> {\n  private readonly m = new Map<K, number>()\n\n  incr(key: K, count: number = 1): number {\n    const v = this.get(key) + count\n    if (v === 0) this.m.delete(key)\n    else this.m.set(key, v)\n    return v\n  }\n\n  get(key: K): number {\n    return this.m.get(key) ?? 0\n  }\n\n  /**\n   * If no keys are provided, return the max value\n   */\n  max(...arr: K[]): number {\n    return Math.max(\n      ...(arr.length === 0 ? this.m.values() : arr.map(ea => this.get(ea)))\n    )\n  }\n\n  has(key: K): boolean {\n    return this.m.has(key)\n  }\n\n  delete(key: K): boolean {\n    return this.m.delete(key)\n  }\n\n  /**\n   * Return the number of unique non-zero `incr`emented keys\n   */\n  get size(): number {\n    return this.m.size\n  }\n\n  /**\n   * Return the sum of all counts\n   */\n  get countSum(): number {\n    return sum(this.m.values())\n  }\n\n  keys(): IterableIterator<K> {\n    return this.m.keys()\n  }\n\n  /**\n   * @return if all keys are numeric, the average value of keys, otherwise, `undefined`.\n   */\n  keyAvg() {\n    const avg = new Average(0)\n    for (const k of this.keys()) {\n      if (isNumber(k)) {\n        avg.push(k)\n      } else {\n        return\n      }\n    }\n    return avg.avg\n  }\n\n  entries(): IterableIterator<[K, number]> {\n    return this.m.entries()\n  }\n\n  toJSON() {\n    return this.toRecord()\n  }\n\n  toRecord(): Record<string, number> {\n    const obj: any = {}\n    for (const [k, v] of this.m.entries()) {\n      obj[toS(k)] = v\n    }\n    return obj\n  }\n\n  /** Multimodal ties are solved by proximity to mean */\n  entriesByCountDesc(): [K, number][] {\n    const keyAvg = this.keyAvg()\n    return sortBy([...this.entries()], ([k, v]) => [\n      -v,\n      mapNumericOr(keyAvg, ea => Math.abs((k as number) - ea), 0)\n    ])\n  }\n\n  top(n = 1): [K, number][] {\n    return this.entriesByCountDesc().slice(0, n)\n  }\n\n  topKeys(n = 1): K[] {\n    return this.top(n).map(ea => ea[0])\n  }\n\n  get averageCounts(): Average {\n    return tap(new Average(this.size), a =>\n      [...this.m.values()].forEach(ea => a.push(ea))\n    )\n  }\n\n  forEach(callbackfn: (count: number, key: K) => void): void {\n    this.m.forEach(callbackfn)\n  }\n\n  clear(): void {\n    this.m.clear()\n  }\n\n  sortedByKey(): CountingSet<K> {\n    const result = new CountingSet<K>()\n    for (const [k, count] of sortBy(this.m.entries(), ea => ea[0])) {\n      result.incr(k, count)\n    }\n    return result\n  }\n\n  addAll(s: this) {\n    for (const [k, i] of s.entries()) {\n      this.incr(k, i)\n    }\n    return this\n  }\n\n  get toS() {\n    return sort([...this.keys()])\n      .map(key => key + \" \" + this.get(key))\n      .join(\"\\n\")\n  }\n\n  valuesToA<T>(f: (k: K) => T): T[] {\n    const arr: T[] = []\n    // pre-allocate:\n    arr.length = sum(this.m.values())\n    let idx = 0\n    for (const [k, count] of this.m.entries()) {\n      const value = f(k)\n      arr.fill(value, idx, idx + count)\n      idx += count\n    }\n    return arr\n  }\n}\n","export const DefaultSensitiveEnvRegexPattern = [\n  \"key(?!word)\",\n  \"aws_\",\n  \"npm_\",\n  \"pass\",\n  \"private\",\n  \"secret\",\n  \"token\"\n].join(\"|\")\n","import { lazy } from \"../core/Lazy\"\nimport { SimpleAppName } from \"./AppName\"\nimport { isElectron } from \"./platform/Platform\"\nimport { Settings } from \"./settings/Settings\"\n\nexport const EditionName = lazy(\n  () =>\n    SimpleAppName +\n    (isElectron\n      ? ` for Desktops (${Settings.updateChannel.valueOrDefault} channel)`\n      : \" for Servers\")\n)\n","import { map } from \"../fe/Maybe\"\nimport { SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { Thunk } from \"../fe/Thunk\"\nimport { Logger } from \"./Logger\"\n\nexport class Elapsed {\n  private ts = Date.now()\n  constructor(\n    readonly l: Logger,\n    readonly listener?: (name: string, elapsedMs: number) => any\n  ) {}\n\n  elapsed(msg: string) {\n    const now = Date.now()\n    const diff = now - this.ts\n    this.ts = now\n    map(this.listener, ea => ea(msg, diff))\n    if (diff > 2) {\n      this.l.log(diff > 500 ? \"warn\" : diff > 100 ? \"info\" : \"debug\", msg, {\n        elapsedMs: diff\n      })\n    }\n  }\n}\n\nexport function elapsed<T>(t: Thunk<T>): { elapsedMs: number; result: T } {\n  const start = Date.now()\n  const result = t()\n  return { elapsedMs: Date.now() - start, result }\n}\n\nexport async function thenElapsed<T>(\n  t: SyncOrAsync<T>\n): Promise<{ elapsedMs: number; result: T }> {\n  const start = Date.now()\n  const result = await t\n  return { elapsedMs: Date.now() - start, result }\n}\n","import { blank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { StringValued } from \"../fe/Object\"\nimport { splitCompactLines } from \"./fs/CRLF\"\n\n/**\n * Parser for sh environment variable assignments, like `FOO=\"bar\"`.\n *\n * NO, WE DON'T SUPPORT NEWLINES IN VALUES. Use `\\n` like a reasonable person.\n *\n * Pairs may be one per line or joined on a single line.\n *\n * \\# Comments are removed.\n */\nexport function parseEnvTokens({\n  input,\n  lowerCaseKeys\n}: {\n  input: Maybe<string>\n  lowerCaseKeys: boolean\n}): StringValued {\n  const result: StringValued = {}\n  if (blank(input)) return result\n  let m\n  for (const line of splitCompactLines(input)) {\n    const re =\n      /(?:\\s*#.*$)|\\s*(?:export\\s+)?(?<key>[a-z_]+)\\s*=\\s*([\"'])?(?<val>(?:\\\\[\"']|.)*?)(\\2)(?:$|\\s+|#.*?)\\s*/gim\n\n    while ((m = re.exec(line)) != null) {\n      if (m.groups == null) continue\n      const { key, val } = m.groups\n      if (blank(key) || val == null) continue\n      const str = val.replace(/\\\\n/g, \"\\n\").replace(/\\\\([\"'])/g, \"$1\") // unescape escaped quotes\n      // DON'T DO THIS: it makes values like \"20.10\" turn into 20.1\n      // const val = blank(quot) && isNumeric(v) ? toFloat(v) : v\n      result[lowerCaseKeys ? key.toLowerCase() : key] = str\n    }\n  }\n  return result\n}\n","import { examplesNativePath_ } from \"./ExamplesNativePath\"\nimport { lazy } from \"./Lazy\"\nimport { PosixFile } from \"./fs/PosixFile\"\n\n// This can't be a PosixFile: it causes a dep loop.\nexport const examples = lazy(() => PosixFile.for(examplesNativePath_()))\n","import { lazy } from \"../core/Lazy\"\nimport { ancestors, childrenSync } from \"./fs/Ancestors\"\nimport { joinNativePath } from \"./fs/Path\"\n\n// This was broken out of ExamplesDir so assertEqlPrior could avoid a deploop\nexport const examplesNativePath_ = lazy(() => {\n  const exampleParentDir = ancestors(__dirname).find(ea =>\n    childrenSync(ea).some(f => f === \"examples\")\n  )\n  if (exampleParentDir == null) {\n    throw new Error(\"Couldn't find the examples directory\")\n  }\n  return joinNativePath([exampleParentDir, \"examples\"])\n})\n","export abstract class ExtensibleFunction<T> extends Function {\n  readonly _self: ExtensibleFunction<T>\n  constructor() {\n    super(\"...args\", \"return this._self._call(...args)\")\n    const self = this.bind(this)\n    this._self = self\n    return self\n  }\n  abstract _call(): T\n}\n","import { inspect } from \"util\"\nimport { isNotEmpty, uniq } from \"../fe/Array\"\nimport { GetOrSet } from \"../fe/GetOrSet\"\nimport { orElse } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0, isNumber, round } from \"../fe/Number\"\nimport { toS } from \"../fe/toS\"\nimport { union } from \"./Set\"\nimport { setUnrefInterval } from \"./async/Timers\"\n\n// simple null-safe keys()\nfunction keys(o: any): string[] {\n  return o == null ? [] : Object.keys(o)\n}\n\n/**\n * First-in-first-out cache. Implementation inspired by\n * https://github.com/dominictarr/hashlru.\n *\n * https://en.wikipedia.org/wiki/Cache_replacement_policies\n */\nexport class FifoCache<V> implements GetOrSet<string, V> {\n  private currentCache!: Record<string, V>\n  private setsSinceLastSpill: number = 0\n  private priorCache!: Record<string, V>\n  private clearInterval?: NodeJS.Timeout\n\n  private readonly expireListeners: ((k: string, v: V) => void)[] = []\n\n  constructor(\n    readonly maxSize: number,\n    readonly clearEveryMs?: number\n  ) {\n    if (maxSize < 1) {\n      throw new Error(\"maxSize must be positive\")\n    }\n    if (maxSize > 30_000) {\n      // 30 seconds\n      throw new Error(\"maxSize is too big\")\n    }\n    // Set up _size and caches:\n    this.clear()\n    if (gt0(clearEveryMs)) {\n      this.clearInterval = setUnrefInterval(\n        () => {\n          this.spill()\n        },\n        round(clearEveryMs / 2)\n      )\n    }\n  }\n\n  private spill() {\n    if (\n      this.priorCache != null &&\n      this.currentCache != null &&\n      isNotEmpty(this.expireListeners)\n    ) {\n      for (const k in this.priorCache) {\n        if (this.currentCache[k] == null) {\n          const v = this.priorCache[k]\n          if (v != null) {\n            for (const el of this.expireListeners) {\n              el(k, v)\n            }\n          }\n        }\n      }\n    }\n    this.priorCache = this.currentCache ?? Object.create(null)\n    this.currentCache = Object.create(null)\n    this.setsSinceLastSpill = 0\n  }\n\n  [inspect.custom]() {\n    return {\n      ...this.priorCache,\n      ...this.currentCache\n    }\n  }\n\n  end() {\n    if (this.clearInterval != null) clearInterval(this.clearInterval)\n  }\n\n  clear(): this {\n    this.visit((k, v) => {\n      for (const el of this.expireListeners) {\n        el(k, v)\n      }\n    })\n    this.currentCache = Object.create(null)\n    this.priorCache = Object.create(null)\n    this.setsSinceLastSpill = 0\n    return this\n  }\n\n  get size(): number {\n    if (this.currentCache == null || this.priorCache == null) return 0\n    let sum = 0\n    for (const k of union(keys(this.priorCache), keys(this.currentCache))) {\n      if (this.has(k)) sum++\n    }\n    return sum\n  }\n\n  has(key: string): boolean {\n    return this.currentCache[key] != null || this.priorCache[key] != null\n  }\n\n  keys(): string[] {\n    return uniq([...keys(this.priorCache), ...keys(this.currentCache)]).filter(\n      k => null != this.currentCache[k] ?? this.priorCache[k]\n    )\n  }\n\n  delete(key: string) {\n    // We don't decrement size here, because we don't use `delete\n    // this.currentCache[key]` (because delete is slow (!!))\n    const v = this.currentCache[key]\n    if (v != null) {\n      this.currentCache[key] = undefined as any\n      for (const el of this.expireListeners) {\n        el(key, v)\n      }\n    }\n    const v2 = this.priorCache[key]\n    if (v2 != null) {\n      this.priorCache[key] = undefined as any\n      if (v == null) {\n        for (const el of this.expireListeners) {\n          el(key, v2)\n        }\n      }\n    }\n  }\n\n  visit(visitor: (key: string, value: V) => any) {\n    for (const k of union(keys(this.priorCache), keys(this.currentCache))) {\n      const v = this.currentCache[k] ?? this.priorCache[k]\n      if (v != null) visitor(k, v)\n    }\n  }\n\n  deleteIf(predicate: (key: string, value: V) => boolean) {\n    for (const k of this.keys()) {\n      const v = orElse(this.currentCache[k], this.priorCache[k])\n      if (v != null) {\n        if (predicate(k, v)) {\n          this.delete(k)\n        }\n      }\n    }\n  }\n\n  get(key: string | number): Maybe<V> {\n    key = toS(key)\n    return this.currentCache[key] ?? this.priorCache[key]\n  }\n\n  set(key: string | number, value: V) {\n    key = toS(key)\n    if (this.currentCache[key] == null) {\n      if (this.setsSinceLastSpill >= this.maxSize) this.spill()\n      this.setsSinceLastSpill++\n    }\n    this.currentCache[key] = value\n  }\n\n  getOrSet(key: string | number, valueThunk: () => V): V {\n    key = toS(key)\n    const prior = this.get(key)\n    if (prior != null) return prior\n\n    const v = valueThunk()\n    this.set(key, v)\n    return v\n  }\n\n  on(_event: \"expire\", listener: (k: string, v: V) => void) {\n    this.expireListeners.push(listener)\n  }\n}\n\nexport interface Placeholder {\n  __uid: number\n  __start: number\n}\n\nexport function isPlaceholder(s: any): s is Placeholder {\n  return s != null && isNumber(s.__uid) && isNumber(s.__start)\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0 } from \"../fe/Number\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { TimeoutError } from \"../fe/TimeoutError\"\nimport { toS } from \"../fe/toS\"\nimport { FifoCache } from \"./FifoCache\"\nimport { Deferred } from \"./async/Deferred\"\n\n// NOTE: this is used statically by Shim, so BE CAREFUL WITH NEW CORE IMPORTS:\n// they will probably cause a dependency loop.\n\nexport type FifoCacheAsyncOpts = ConstructorParameters<typeof FifoCacheAsync>[0]\n\nexport class FifoCacheAsync<V = any> {\n  #cacheHitsSync = 0\n  #cacheHitsAsync = 0\n  #cacheMisses = 0\n  #rejections = 0\n  #timeouts = 0\n  readonly cache: FifoCache<Deferred<V> | V>\n  constructor(\n    readonly opts: {\n      name: string\n      maxSize: number\n      timeoutMs: number\n      clearEveryMs?: number\n    }\n  ) {\n    this.cache = new FifoCache(opts.maxSize, opts.clearEveryMs)\n  }\n\n  get name() {\n    return this.opts.name\n  }\n\n  get size() {\n    return this.cache.size\n  }\n\n  mergeStats(stats: ReturnType<FifoCacheAsync[\"stats\"]>) {\n    this.#cacheHitsSync += stats.cacheHitsSync\n    this.#cacheHitsAsync += stats.cacheHitsAsync\n    this.#cacheMisses += stats.cacheMisses\n    this.#rejections += stats.rejections\n    this.#timeouts += stats.timeouts\n  }\n\n  stats() {\n    return {\n      size: this.size,\n      cacheHitsSync: this.#cacheHitsSync,\n      cacheHitsAsync: this.#cacheHitsAsync,\n      cacheMisses: this.#cacheMisses,\n      rejections: this.#rejections,\n      timeouts: this.#timeouts\n    }\n  }\n\n  has(key: string) {\n    return this.cache.has(key)\n  }\n\n  /**\n   * If the prior getOrSetAsync() threw an error, this method will also.\n   */\n  get_(key: string): MaybeSyncOrAsync<V> {\n    if (!this.cache.has(key)) {\n      this.#cacheMisses++\n      return\n    }\n    const v = this.cache.get(key)\n    if (v instanceof Deferred) {\n      if (v.isRejected) {\n        throw v.error\n      } else if (v.isPending) {\n        this.#cacheHitsAsync++\n        return v.promise\n      } else {\n        this.#cacheHitsSync++\n        return v.value\n      }\n    } else if (v instanceof Error) {\n      throw v\n    } else {\n      this.#cacheHitsSync++\n      return v\n    }\n  }\n\n  /**\n   * @return a value if the key was in cache and the promise was resolved.\n   */\n  get(key: string): Maybe<V> {\n    const v = this.cache.get(key)\n    if (v == null || (v instanceof Deferred && v.isPending)) {\n      this.#cacheMisses++\n    } else {\n      this.#cacheHitsSync++\n    }\n    return v instanceof Deferred ? v.value : v\n  }\n\n  clear() {\n    this.cache.clear()\n    this.#cacheHitsSync = 0\n    this.#cacheHitsAsync = 0\n    this.#cacheMisses = 0\n    this.#rejections = 0\n    this.#timeouts = 0\n  }\n\n  delete(key: string) {\n    return this.cache.delete(key)\n  }\n\n  deleteIf(predicate: (key: string) => boolean) {\n    for (const k of this.cache.keys()) {\n      if (predicate(k)) {\n        this.delete(k)\n      }\n    }\n  }\n\n  set(key: string, value: V): V {\n    this.cache.set(key, value)\n    return value\n  }\n\n  getOrSet(key: string, valueThunk: () => V): V {\n    const prior = this.get(key)\n    if (prior != null) {\n      if (prior instanceof Error) {\n        throw prior\n      } else {\n        return prior\n      }\n    }\n    return this.set(key, valueThunk())\n  }\n\n  // THIS METHOD IS NOT ASYNC: it relies on stable internal state!\n  getOrSetAsync(key: number | string, later: () => Promise<V>): SyncOrAsync<V> {\n    const k = toS(key)\n    {\n      const prior = this.get_(k)\n      if (prior != null) {\n        return prior instanceof Deferred ? prior.promise : prior\n      }\n    }\n\n    const d = new Deferred<V>(this.opts.name).observe(later())\n    // Add the deferred to the cache ASAP:\n    this.cache.set(k, d)\n\n    if (gt0(this.opts.timeoutMs)) {\n      void d.setTimeout(this.opts.timeoutMs)\n    }\n\n    void d.promise.then(\n      result => {\n        // remove the Deferred and release the scoped memory:\n        this.set(k, result)\n      },\n      error => {\n        this.cache.set(k, error)\n        this.#rejections++\n        if (error instanceof TimeoutError) {\n          this.#timeouts++\n        }\n      }\n    )\n    return d.promise\n  }\n}\n","export class FifoSet<T> implements Set<T> {\n  readonly [Symbol.toStringTag] = \"FifoSet\"\n  readonly values = (): IterableIterator<T> => this.delegate.values()\n  readonly keys = this.values\n\n  private readonly delegate = new Set<T>()\n\n  constructor(readonly maxSize: number) {}\n\n  get size(): number {\n    return this.delegate.size\n  }\n\n  add(value: T): this {\n    this.delegate.add(value)\n    this.vacuum()\n    return this\n  }\n\n  clear(): this {\n    this.delegate.clear()\n    return this\n  }\n\n  delete(value: T): boolean {\n    return this.delegate.delete(value)\n  }\n\n  forEach(callbackfn: (value: T, index: T, set: Set<T>) => void): void {\n    this.delegate.forEach(callbackfn)\n  }\n\n  has(value: T): boolean {\n    return this.delegate.has(value)\n  }\n\n  entries(): IterableIterator<[T, T]> {\n    return this.delegate.entries()\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    return this.values()\n  }\n\n  /**\n   * remove all expired entries\n   */\n  private vacuum() {\n    if (this.size > this.maxSize) {\n      const iter = this.delegate.entries()\n      while (this.size > this.maxSize) {\n        this.delete(iter.next().value[0])\n      }\n    }\n  }\n}\n","import { lazy } from \"../core/Lazy\"\nimport { last, range } from \"../fe/Array\"\nimport { blank, notBlank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { max_ } from \"../fe/Number\"\nimport { fromEntries, values } from \"../fe/Object\"\nimport { mkLogger } from \"./Logger\"\nimport { escapeRegExp } from \"./RegExp\"\nimport { indexOfNonSpace, isString, lastIndexOfNonSpace } from \"./String\"\nimport { splitLines } from \"./fs/CRLF\"\n\nexport interface Header<T> {\n  text: string & keyof T\n  greedyLeft?: boolean\n  greedyRight?: boolean\n}\n\nclass IndexedHeader<T> {\n  readonly text: string\n  readonly greedyLeft: boolean\n  indexOf?: number\n  leftIdx?: number\n  rightIdx?: number\n  constructor(h: Header<T> | string) {\n    this.text = isString(h) ? h : h.text\n    this.greedyLeft = isString(h) ? false : h[\"greedyLeft\"] ?? false\n  }\n\n  toEntry(row: string): [string, string] {\n    return [this.text, row.substring(this.leftIdx!, this.rightIdx).trim()]\n  }\n}\n\nconst logger = lazy(() => mkLogger(\"Fixed\"))\n\nexport type Headers<T> = (Header<T> | string)[]\n\n/**\n * Parse fixed-width input into an array of objects\n */\nexport function parseFixed<T>(\n  headers: Headers<T>,\n  table: string,\n  warnIfMissingHeaders = true\n): T[] {\n  return new Fixed(headers, table, warnIfMissingHeaders).entries\n}\n\n/**\n * Support for parsing fixed-width tabular data\n */\nexport class Fixed<T> {\n  readonly headers: IndexedHeader<T>[]\n  readonly headerRow: string\n  readonly skippedHeaders: string[] = []\n  readonly rows: string[] // doesn't include the header row!\n  readonly entries: T[]\n  readonly blankColumns: Set<number>\n\n  constructor(\n    headers: Headers<T>,\n    table: string,\n    readonly warnIfMissingHeaders = true\n  ) {\n    this.rows = splitLines(table)\n    this.headerRow = this.rows.shift()!\n    const maxLen = max_(...this.rows.map(ea => ea.length))\n    this.blankColumns = new Set(\n      range(0, maxLen).filter(idx => this.rows.every(ea => blank(ea[idx])))\n    )\n\n    this.headers = this.extractHeaders(headers.map(ea => new IndexedHeader(ea)))\n    this.entries = this.rows\n      .map(row => this.headers.map(h => h.toEntry(row)))\n      .map(arr => fromEntries(arr))\n      // Remove rows that have all blank values:\n      .filter(row => values(row).some(notBlank))\n  }\n\n  /**\n   * @param fromIdx inclusive\n   * @param toIdx inclusive\n   */\n  private firstBlankColumn(fromIdx: number, toIdx: number): Maybe<number> {\n    for (let idx = fromIdx; idx !== toIdx; toIdx > fromIdx ? idx++ : idx--) {\n      if (this.blankColumns.has(idx)) return idx\n    }\n    if (this.blankColumns.has(toIdx)) return toIdx\n    if (fromIdx === 0 || toIdx === 0) {\n      return 0\n    }\n    return undefined\n  }\n\n  private extractHeaders(headers: IndexedHeader<T>[]): IndexedHeader<T>[] {\n    // For every column, determine which header it belongs to.\n\n    // First parse headers columns\n    const re = new RegExp(\n      headers\n        .map(\n          ea => (ea.greedyLeft ? \"\\\\s+\" : \"\\\\b\") + escapeRegExp(ea.text) + \"\\\\b\"\n        )\n        .join(\"|\"),\n      \"ig\"\n    )\n    const result: IndexedHeader<T>[] = []\n\n    // basically String.splitKeep\n    // we're looking for tokens at or right of pos\n    let m: RegExpExecArray | null\n\n    // this is the \"re.lastIndex\" from the prior match\n    let priorLastIndex = 0\n\n    while ((m = re.exec(this.headerRow)) != null) {\n      const skippedOver = this.headerRow.substring(priorLastIndex, m.index)\n      if (!blank(skippedOver)) {\n        logger().debug(\"extractHeaders: skipping over unknown header\", {\n          skippedOver,\n          m_index: m.index\n        })\n        this.skippedHeaders.push(skippedOver.trim())\n      }\n\n      const matched = this.headerRow.substring(m.index, re.lastIndex)\n      // this is the leftmost non-whitespace index of the current header\n      const left = m.index + (indexOfNonSpace(matched) ?? 0)\n      // this is the rightmost non-whitespace index of the current header\n      const right = m.index + (lastIndexOfNonSpace(matched) ?? matched.length)\n      const text = matched.trim()\n      const h = headers.find(ea => ea.text === text)\n      if (h == null || left == null || right == null) {\n        this.skippedHeaders.push(text)\n        logger().debug(\"extractHeaders: internal error\", {\n          matched,\n          match: m,\n          left,\n          right\n        })\n      } else {\n        const prior = last(result)\n        result.push(h)\n\n        if (prior != null) {\n          const priorRightBoundary =\n            prior.rightIdx! +\n            (indexOfNonSpace(skippedOver) ?? skippedOver.length) +\n            1\n          prior.rightIdx = h.greedyLeft\n            ? this.firstBlankColumn(prior.rightIdx!, priorRightBoundary)\n            : this.firstBlankColumn(priorRightBoundary, prior.rightIdx!)\n        }\n        const leftmost = max_(\n          prior?.rightIdx,\n          m.index - (lastIndexOfNonSpace(skippedOver) ?? skippedOver.length)\n        )\n        h.leftIdx = h.greedyLeft\n          ? this.firstBlankColumn(leftmost, left)\n          : this.firstBlankColumn(left, leftmost)\n        h.rightIdx = right // < temporary!\n      }\n      priorLastIndex = re.lastIndex\n    }\n    // expand the right header... but how much?\n    const lastHeader = last(result)\n    if (lastHeader != null) {\n      if (!blank(this.headerRow.slice(priorLastIndex))) {\n        lastHeader.rightIdx = priorLastIndex\n      } else {\n        // If the remainder of the header is whitespace, just expand to the end:\n        lastHeader.rightIdx = max_(...this.rows.map(ea => ea.length))\n      }\n    }\n    return result\n  }\n}\n","/**\n * Used to signal Promises to halt processing and return asap\n */\nexport class Halt {\n  #halt = false\n  get halted() {\n    return this.#halt\n  }\n  halt() {\n    this.#halt = true\n  }\n}\n","// Secure hash research:\n\n// SHA1 has known collisions. It should be expected for a nerd to have sample\n// images that have colliding SHA1 hashes on their laptop.\n\n// I don't see why these SHA values would need to be externally consumed, so\n// people shouldn't care if the SHA in the db isn't a FIPS standard. I don't\n// want to pull in another native library dependency if I can help it.\n\n// ALSO: I don't need that many bits to ensure uniqueness! 160 was enough for\n// SHA1, 192 should be plenty, and only takes 32 base64 characters (and doesn't\n// waste chars on padding).\n\n// HOWEVER: versions pre-v0.3.5 used the most significant 224 bits, so when we\n// build SHAs of strings (like for volume UIDs), we maintain backward\n// compatibility by slicing MSB 224 bits. If we slice 192 bits and we use a\n// non-8-bit-divisible radix, the values change.\n\n// See https://news.ycombinator.com/item?id=10011472\n// https://en.wikipedia.org/wiki/Secure_Hash_Algorithms\n\n// `shasum -a 512224` implements SHA-512/224.\n// `shasum -a 512256` implements SHA-512/256.\n\nexport const HashBits = 192\n","import { parseJSON } from \"../fe/JSON\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { Obj } from \"../fe/Object\"\n\n// TODO: inline\nexport { parseJSON } from \"../fe/JSON\"\n\nexport function mapParsed<T>(s: string, f: (o: Obj) => T): Maybe<T> {\n  const j = parseJSON(s)\n  return j == null ? undefined : f(j)\n}\n","import { inspect } from \"util\"\nimport { isEmpty } from \"../fe/Array\"\nimport { ChangeListener } from \"../fe/ChangeListener\"\nimport { eql } from \"../fe/Eql\"\nimport { MemoizedLazy, MemoizedThunk } from \"../fe/Lazy\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0 } from \"../fe/Number\"\nimport { setUnrefTimeout } from \"../fe/UnrefTimeout\"\nimport { ExtensibleFunction } from \"./ExtensibleFunction\"\n\n// USED BY LOG: DON'T DEPEND ON ANYTHING (much)\n\n// TODO: INLINE\nexport { MemoizedLazy, MemoizedThunk, UnwrapLazy } from \"../fe/Lazy\"\n\nexport function lazy<T>(thunk: () => T, ttlMs?: number): MemoizedThunk<T> {\n  return new LazyClass(thunk, ttlMs) as any\n}\n\nclass LazyClass<T> extends ExtensibleFunction<T> implements MemoizedLazy<T> {\n  private lastSetTs?: number\n  private result?: T\n  readonly watchers: ChangeListener<T>[] = []\n\n  constructor(\n    private readonly thunk: () => T,\n    private ttlMs?: number\n  ) {\n    super()\n  }\n\n  override _call() {\n    if (this.isStale()) {\n      // NO PROMISE AWAITING HERE. Otherwise N calls would go through while we\n      // wait for the promise to resolve.\n      this.#setResult(this.thunk())\n    }\n    return this.result!\n  }\n\n  private async onSetResult(priorP: Maybe<T>, currentP: T) {\n    if (isEmpty(this.watchers)) return\n    // prior and current could be a promise!\n\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const _prior = await priorP\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const current = await currentP\n    if (!eql(_prior, current)) {\n      for (const ea of this.watchers) ea(current)\n    }\n    // We're interpreting undefined as unset, and `null` as a valid set value.\n    if (this.ttlMs != null && this.ttlMs > 0 && current !== undefined) {\n      // help the garbage collector:\n      setUnrefTimeout(() => this.vacuum(), this.ttlMs)\n    }\n  }\n\n  vacuum() {\n    if (this.isStale()) this.unset()\n  }\n\n  #setResult(t: T) {\n    this.lastSetTs = Date.now()\n    void this.onSetResult(this.result, t)\n    return (this.result = t)\n  }\n\n  isStale() {\n    return (\n      this.lastSetTs == null ||\n      (gt0(this.ttlMs) && this.lastSetTs + this.ttlMs < Date.now())\n    )\n  }\n\n  set(t: T) {\n    this.#setResult(t)\n  }\n\n  unset() {\n    this.#setResult(undefined as any)\n    this.lastSetTs = undefined\n  }\n\n  clear() {\n    const _prior = this.result\n    this.unset()\n    return _prior\n  }\n\n  prior() {\n    this.vacuum()\n    return this.result\n  }\n\n  refresh() {\n    return this.#setResult(this.thunk())\n  }\n\n  ttl() {\n    return this.ttlMs\n  }\n\n  setTTL(ttl: number | undefined) {\n    this.ttlMs = gt0(ttl) ? ttl : undefined\n  }\n\n  watchLater(watcher: ChangeListener<T>) {\n    this.watchers.push(watcher)\n  }\n\n  watch(watcher: ChangeListener<T>) {\n    watcher(this())\n    this.watchLater(watcher)\n  }\n\n  toString() {\n    return \"[Lazy]\"\n  }\n\n  // If you move this back to fe, you'll need to switch this with something\n  // like `const inspect_custom = isNode ? require(\"util\").inspect.custom :\n  // Symbol.for(\"inspect.custom\")`\n  [inspect.custom]() {\n    return \"[Lazy]\"\n  }\n\n  lastSetAgoMs() {\n    return this.lastSetTs == null ? undefined : Date.now() - this.lastSetTs\n  }\n\n  hasPrior() {\n    return this.lastSetTs != null\n  }\n}\n\nclass ROLazy<T> extends LazyClass<T> {\n  override set(_: T) {}\n}\n\nexport function rolazy<T>(thunk: () => T, ttlMs?: number): MemoizedThunk<T> {\n  return new ROLazy(thunk, ttlMs) as any\n}\n","import { lazy } from \"../core/Lazy\"\nimport { compact } from \"../fe/Array\"\nimport { blank } from \"../fe/Blank\"\nimport { secondMs } from \"../fe/Date\"\nimport { Maybe, PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { Obj } from \"../fe/Object\"\nimport { parseEnvTokens } from \"./EnvTokens\"\nimport { mkLogger } from \"./Logger\"\nimport { equalsIgnoreCase } from \"./String\"\nimport { lazyAsync } from \"./async/LazyAsync\"\nimport { thenMap } from \"./async/Promise\"\nimport { StdoutOpts, stdout_ } from \"./child/ChildProcess\"\nimport { env } from \"./env/Env\"\nimport { isMac, isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\nimport { commandTimeoutMs } from \"./volumes/VolumeTtls\"\n\nexport const DefaultLocale = \"en\"\n\nconst logger = lazy(() => mkLogger(\"Locale\"))\n\nexport function localeSync() {\n  return locale.lastValue() ?? envLocale() ?? DefaultLocale\n}\n\n/**\n * @see https://en.wikipedia.org/wiki/ISO_639\n */\nexport const locale = lazyAsync<string>({\n  desc: \"locale\",\n  later: async () =>\n    lc2locale(\n      extractLocale() ??\n        (await (isWin\n          ? localeWin()\n          : isMac\n          ? localeMac()\n          : localePosix()\n        ).catch(error => {\n          logger().warn(\"Failed to get locale\", { error })\n          return DefaultLocale\n        }))\n    ),\n  timeoutMs: commandTimeoutMs()\n})\n\nexport const envLocale = lazy(extractLocale)\n\n// See https://wiki.archlinux.org/index.php/Locale\nfunction extractLocale(e: Obj = env()) {\n  for (const ea of [e.LC_ALL, e.LC_MESSAGES, e.LANG, e.LANGUAGE]) {\n    const lc = toLocale(ea)\n    if (lc != null) return lc\n  }\n  return\n}\n\n// Like \"en_US.UTF-8\"\nconst regex = /^(?<lang>[a-z]{2,3})(?:[_-](?<country>[a-z]{2,3}))?\\b/i\n\nfunction toLocale(str: Maybe<string>) {\n  if (blank(str)) return\n  // Some people set their locale to \"C\":\n  if (\n    str === DefaultLocale ||\n    equalsIgnoreCase(\"c\", str) ||\n    equalsIgnoreCase(\"posix\", str)\n  ) {\n    return DefaultLocale\n  }\n  const g = regex.exec(str.trim())?.groups\n  return g == null ? undefined : compact([g.lang, g.country]).join(\"-\")\n}\n\nexport function lc2locale(lc: Maybe<string>): string {\n  return toLocale(lc) ?? DefaultLocale\n}\n\nexport function localeWin(): PromiseMaybe<string> {\n  return thenMap(\n    PowerShell.instance().executeJson(\n      \"Get-WinSystemLocale | Select-Object -Property Name\"\n    ),\n    ea => ea.Name as string\n  )\n}\n\nconst opts: StdoutOpts = {\n  timeoutMs: 10 * secondMs\n}\n\nexport async function localeMac(): PromiseMaybe<string> {\n  return toLocale(\n    await stdout_(\"defaults\", [\"read\", \"-globalDomain\", \"AppleLocale\"], opts)\n  )\n}\n\nexport async function localePosix() {\n  return lc2locale(\n    extractLocale(\n      parseEnvTokens({\n        lowerCaseKeys: false,\n        input: await stdout_(\"locale\", [], opts)\n      })\n    )\n  )\n}\n\nexport function childProcLocale() {\n  return {\n    LANG: \"C\",\n    LC_ALL: \"C\"\n  }\n}\n","import { arch, platform } from \"os\"\nimport { argv, versions } from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { pick } from \"../fe/Object\"\nimport { mkLogger } from \"./Logger\"\nimport { osFullName } from \"./OperatingSystem\"\nimport { serviceName } from \"./ServiceNames\"\nimport { StartTs } from \"./StartTs\"\nimport { version } from \"./Version\"\nimport { psenv } from \"./child/ChildEnv\"\nimport { isPacked } from \"./platform/IsPacked\"\nimport { isElectron } from \"./platform/Platform\"\nimport { Settings } from \"./settings/Settings\"\n\nexport const logStartup = lazy(() => {\n  mkLogger(\"LogStartup\").info(\"setup(): starting \" + serviceName(), {\n    version,\n    StartTs,\n    argv,\n    arch: arch(),\n    platform: platform(),\n    os: osFullName(),\n    isPacked: isPacked(),\n    isElectron,\n    versions: pick(versions, \"electron\", \"node\"),\n    settings: {\n      logLevel: Settings.logLevel.valueOrDefault,\n      httpPort: Settings.httpPort.valueOrDefault,\n      libraryDir: Settings.libraryDir.valueOrDefault\n    },\n    ...psenv()\n  })\n})\n","import { lazy } from \"../core/Lazy\"\nimport { ConsoleLogger } from \"./log/ConsoleLogger\"\nimport { ContextualLogger } from \"./log/ContextualLogger\"\nimport { SimpleLogger } from \"./log/Logger\"\n\nexport const rootLoggers = lazy<SimpleLogger[]>(() => [\n  ConsoleLogger.instance()\n])\n\nconst consoleLogger = lazy(() => [ConsoleLogger.instance()])\n\nexport type Logger = ContextualLogger // TODO: inline?\n\nexport function mkLogger(context: string): ContextualLogger {\n  return new ContextualLogger(context, rootLoggers)\n}\n\nexport function mkConsoleLogger(context: string): ContextualLogger {\n  return new ContextualLogger(context, consoleLogger)\n}\n","import { compact } from \"../fe/Array\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe, MaybePromiseMaybe } from \"../fe/MaybeTypes\"\nimport { toA } from \"../fe/toA\"\nimport { concat } from \"./Array\"\n\nexport function hasAll<K>(m: Map<K, any> | Set<K>, arr: K[]): boolean {\n  return arr.every(ea => m.has(ea))\n}\n\nexport function flatMap<T, K, V>(iter: T[], f: (t: T) => [K, V][]): Map<K, V> {\n  return new Map<K, V>(concat(...iter.map(ea => f(ea))))\n}\n\nexport function compactMap<K, V>(\n  m: Iterable<Maybe<[Maybe<K>, Maybe<V>]>>\n): Map<K, V> {\n  const arr = compact(m).filter(([k, v]) => k != null && v != null) as [K, V][]\n  return new Map<K, V>(arr)\n}\n\nexport function toMap<T, K, V>(\n  i: Maybe<Iterable<Maybe<T>>>,\n  f: (entry: T) => Maybe<[Maybe<K>, Maybe<V>]>\n): Map<K, V> {\n  return compactMap(compact(i).map(f))\n}\n\nexport async function toMapAsync<T, K, V>(\n  iterable: Maybe<Iterable<Maybe<T>>>,\n  f: (entry: T) => MaybePromiseMaybe<[Maybe<K>, Maybe<V>]>\n): Promise<Map<K, V>> {\n  if (iterable == null) return new Map()\n  const entries = await Promise.all(compact(toA(iterable)).map(ea => f(ea)))\n  return compactMap(entries)\n}\n\nexport function toObj<T>(m: Map<string, T>): { [key: string]: T } {\n  const obj: any = {}\n  for (const [k, v] of m) {\n    obj[k] = v\n  }\n  return obj\n}\n\nexport function filter<K, V>(\n  m: Map<K, V>,\n  f: (key: K, value: V) => boolean\n): Map<K, V> {\n  return new Map<K, V>([...m.entries()].filter(([k, v]) => f(k, v)))\n}\n\n/**\n * Only retain the entries in m where f() returns true.\n */\nexport function filterInPlace<K, V>(\n  m: Map<K, V>,\n  retainIfTrue: (key: K, value: V) => boolean\n): void {\n  ;[...m.entries()].forEach(([k, v]) => retainIfTrue(k, v) || m.delete(k))\n}\n\nexport function pickKeys<K, V>(m: Map<K, V>, keys: K[]): Map<K, V> {\n  return filter(m, k => keys.indexOf(k) >= 0)\n}\n\n/**\n * Return the first value associated to the key that matches the given predicate\n */\nexport function getLike<K, V>(\n  m: Map<K, V>,\n  predicate: (k: K) => boolean\n): Maybe<V> {\n  return map(\n    [...m.entries()].find(([k]) => predicate(k)),\n    ([, v]) => v\n  )\n}\n\nexport function inverse<K, V>(m: Map<K, V>): Map<V, K> {\n  return new Map([...m.entries()].map(([k, v]) => [v, k] as [V, K]))\n}\n","import { stringify } from \"../fe/JSON\"\nimport { FifoCache } from \"./FifoCache\"\n\nexport interface MemoizedFunc<A, R> {\n  (a: A): R\n  clear(a?: A): void\n  size(): number\n  callCount(): number\n}\n\nexport function memoize<A, R>(\n  f: (a: A) => R,\n  opts: { maxSize: number; ttlMs?: number }\n): MemoizedFunc<A, R> {\n  let callCount = 0\n  const store = new FifoCache<R>(opts.maxSize, opts.ttlMs)\n  const r: any = (a: A) => {\n    if (a == null) return\n    callCount++\n    return store.getOrSet(stringify(a), () => f(a))\n  }\n  r.clear = (a?: A) => (a == null ? store.clear() : store.delete(stringify(a)))\n  r.size = () => store.size\n  r.callCount = () => callCount\n  return r\n}\n","import { isTrue, toBoolean } from \"../fe/Boolean\"\n\n/**\n * @see https://no-color.org/\n */\nexport function noColor(): boolean {\n  // force color if PS_LOG_COLOR is true\n  return (\n    toBoolean(process.env.PS_LOG_COLOR) ??\n    (isTrue(process.env.NO_COLOR) ||\n      [\"dumb\", \"unknown\"].includes(process.env.TERM as string))\n  )\n}\n","import process from \"process\"\nimport { isTrue } from \"../fe/Boolean\"\nimport { toS } from \"../fe/toS\"\nimport { isPacked } from \"./platform/IsPacked\"\n\n// new mocha 10 uses \"mocha.js\"\nconst MaybeTestArgRe = /mocha(?:\\.js)$|\\.spec\\.js$/\n\nexport function _nodeEnv() {\n  switch (toS(process.env.NODE_ENV).toLowerCase()) {\n    case \"test\":\n    case \"testing\":\n      return \"test\"\n    case \"dev\":\n    case \"development\":\n      return \"development\"\n    case \"prod\":\n    case \"production\":\n      return \"production\"\n    default:\n      if (\n        !isPacked() &&\n        process.argv.some(ea => MaybeTestArgRe.exec(ea) != null)\n      ) {\n        return \"test\"\n      } else {\n        return \"production\"\n      }\n  }\n}\n\n// Make sure NODE_ENV gets the final value. If not, stuff like Pug stays in\n// dev mode: https://pugjs.org/api/express.html\nexport const nodeEnv = (process.env.NODE_ENV = _nodeEnv())\n\nexport const isDev = nodeEnv === \"development\"\nexport const isTest = nodeEnv === \"test\"\nexport const isProd = nodeEnv === \"production\"\n\nexport function isSingleSpecTests() {\n  return isTest && isTrue(process.env.SINGLE_SPEC_TESTS)\n}\n\nexport function setSingleSpecTests(b: boolean) {\n  process.env.SINGLE_SPEC_TESTS = b ? \"true\" : \"false\"\n}\n","import { count, isEmpty } from \"../fe/Array\"\nimport { blank } from \"../fe/Blank\"\nimport { flatten } from \"../fe/Flatten\"\nimport { map, orElse } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport {\n  clamp,\n  gt0,\n  isNumber,\n  map2Numeric,\n  mapInt,\n  mapNumeric,\n  toFloat,\n  toInt\n} from \"../fe/Number\"\nimport { leftPad } from \"../fe/Pad\"\nimport { toS } from \"../fe/toS\"\nimport { pop } from \"./math/Bits\"\n\n// TODO: INLINE\nexport { within } from \"../fe/Number\"\n\nexport function firstGt0(...objects: any[]): Maybe<number> {\n  return objects.find(gt0)\n}\n\n/**\n * @return the first element in `objects` that can be parsed into a number and is\n * greater than zero.\n */\nexport function firstNonZero(...objects: any[]): Maybe<number> {\n  for (const ea of flatten(objects)) {\n    const f = toFloat(ea)\n    if (f != null && f !== 0) return f\n  }\n  return undefined\n}\n\nexport function mapGte0<T>(n: any, f: (i: number) => T): Maybe<T> {\n  return mapInt(n, i => (i >= 0 ? f(i) : undefined))\n}\n\nexport function mapGte0Or<T>(\n  n: any,\n  f: (i: number) => T,\n  defaultValue: T | (() => T)\n): T {\n  return orElse(mapGte0(n, f), defaultValue)\n}\n\nexport function mapGte0f<T>(n: any, f: (i: number) => T): Maybe<T> {\n  return mapNumeric(n, i => (i >= 0 ? f(i) : undefined))\n}\n\nexport function mapGt0<T>(n: any, f: (i: number) => T): Maybe<T> {\n  const ea = toInt(n)\n  return ea != null && ea > 0 ? f(ea) : undefined\n}\n\nexport function map2Gt0<T>(\n  a: any,\n  b: any,\n  f: (i: number, j: number) => T\n): Maybe<T> {\n  const i = toInt(a)\n  const j = toInt(b)\n  return i != null && i > 0 && j != null && j > 0 ? f(i, j) : undefined\n}\n\nexport function mapGt0f<T>(n: any, f: (i: number) => T): Maybe<T> {\n  const ea = toFloat(n)\n  return ea != null && ea > 0 ? f(ea) : undefined\n}\n\nexport function mapGt0Or<T>(\n  n: any,\n  f: (i: number) => T,\n  defaultValue: T | (() => T)\n): T {\n  return orElse(mapGt0(n, f), defaultValue)\n}\n\n// WAT WAT WAAAAAT? (this is the simplest regex I could come up with that\n// supported both \"-123\", \"+123.\", \"-123.456\" and \"-.789\") \\\n\n// I could do this:\n// const validFloatRe = /((?:[+-]?[0-9]+(?:\\.[0-9]*)?)|(?:[+-]?[0-9]*(?:\\.[0-9]+)))/\n\n// but that sort of rigor isn't necessary. parseFloat is fine with parsing\n// \"-123.456GUACAMOLE\".\nconst numstartRe = /[+-]?[0-9\\,\\.]+/\n\n/**\n * Pull out the first float from `value`.\n *\n * This method ignores any non-numeric characters that prefix or suffix the\n * first number (as opposed to `toFloat`, which ignores only non-numeric\n * suffixes)\n */\nexport function extractFloat(value: any): Maybe<number> {\n  if (isNumber(value)) return value\n  if (blank(value)) return undefined\n  const s = String(value)\n  return map(numstartRe.exec(s), m => toFloat(s.substr(m.index)))\n}\n\n/**\n * Pull out the first integer from `value`.\n *\n * This method ignores any non-numeric characters that prefix or suffix the\n * first number (as opposed to `toInt`, which ignores only non-numeric suffixes)\n */\nexport function extractInt(value: any): Maybe<number> {\n  return toInt(extractFloat(value))\n}\n\nexport function extractFraction(value: any): Maybe<number> {\n  if (isNumber(value)) return value\n  const s = toS(value)\n  if (s.includes(\"/\")) {\n    const arr = s.split(\"/\", 2)\n    return map2Numeric(extractInt(arr[0]), extractInt(arr[1]), (i, j) => i / j)\n  } else {\n    return extractFloat(s)\n  }\n}\n\nexport function assertPositive(name: string, value?: number) {\n  if (value == null || value <= 0) {\n    throw new Error(name + \" must be positive\")\n  }\n}\n\nexport class Array2D {\n  private readonly store: number[] = []\n  constructor(readonly columns: number) {}\n  get(row: number, col: number): number {\n    return row < 0 || col < 0\n      ? 0\n      : orElse(this.store[row * this.columns + col], () => 0)\n  }\n  set(row: number, col: number, value: number) {\n    this.store[row * this.columns + col] = value\n  }\n}\n\nfunction prepHammBigInts(\n  a: number | bigint,\n  b: number | bigint\n): Maybe<[string, string]> {\n  if (a == null || b == null) return\n  const arr = [a, b].map(ea => ea.toString(2))\n  const maxLen = Math.max(...arr.map(ea => ea.length))\n  return arr.map(ea => leftPad(ea, maxLen, \"0\")) as [string, string]\n}\n\n/**\n * @return the number of bits not matching between a and b\n */\nexport function hammingDistanceBigInt(\n  a: number | bigint,\n  b: number | bigint\n): Maybe<number> {\n  return map(prepHammBigInts(a, b), ([s1, s2]) =>\n    count([...s1], (ea, idx) => ea !== s2.charAt(idx))\n  )\n}\n\n/**\n * @return `matching bits / total bits`. 1 == complete match.\n */\nexport function hammRatioBigInt(\n  a: Maybe<number | bigint>,\n  b: Maybe<number | bigint>\n): Maybe<number> {\n  if (a == null || b == null) return 0\n  return map(prepHammBigInts(a, b), ([i, j]) => hammRatioBinaryString(i, j))\n}\n\nexport function hammRatioBinaryString(a: string, b: string) {\n  if (a === b) return 1\n  if (a.length !== b.length)\n    throw new Error(`hammRatioBinaryString(${a}, ${b}): invalid lengths`)\n  let matching = 0\n  // console.log(\"hammRatioBinaryString a\")\n  // console.log(splitEvery(a, 24).join(\"\\n\"))\n  // console.log(\"hammRatioBinaryString b\")\n  // console.log(splitEvery(b, 24).join(\"\\n\"))\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === b[i]) matching++\n  }\n  // console.log(\"matching: \" + matching)\n  // 50% match is random. Scale that to 0.\n  return clamp(0, 1, (2 * matching) / a.length - 1)\n}\n\nexport function valuesToBigInt(arr: number[], bitsPerValue: number): bigint {\n  if (isEmpty(arr)) return BigInt(0)\n  return BigInt(\n    \"0b0\" +\n      arr.map(ea => leftPad(ea.toString(2), bitsPerValue - 1, \"0\")).join(\"\")\n  )\n}\n\nexport function hammRatioIntArrays(\n  a: number[],\n  b: number[],\n  bitsPerCell: number\n) {\n  if (a.length !== b.length)\n    throw new Error(\"hammRatioIntArrays(): inequal arrays\")\n  let diff = 0\n  const total = bitsPerCell * a.length\n  for (let i = 0; i < a.length; i++) {\n    diff += pop(a[i] ^ b[i])\n  }\n\n  // 50% match is random. Scale that to 0:\n  return clamp(0, 1, (2 * (total - diff)) / total - 1)\n}\n\n/**\n * \"safe\" square-root\n *\n * @return 0 if i is not a number or is negative\n */\nexport function sqrt(i: number): number {\n  return gt0(i) ? Math.sqrt(i) : 0\n}\n","import { compact, uniq } from \"../fe/Array\"\nimport { blank } from \"../fe/Blank\"\nimport { isDate } from \"../fe/Date\"\nimport { eql } from \"../fe/Eql\"\nimport { flatten } from \"../fe/Flatten\"\nimport { defined, map } from \"../fe/Maybe\"\nimport { Maybe, MaybeNull } from \"../fe/MaybeTypes\"\nimport { gt } from \"../fe/Number\"\nimport { Obj, entries, keys } from \"../fe/Object\"\nimport { Primitive, isPrimitive } from \"../fe/Primitive\"\nimport { Thunk } from \"../fe/Thunk\"\nimport { toErr } from \"../fe/toErr\"\nimport { first } from \"./Array\"\nimport { equalsIgnoreCase, sortIgnoreCase } from \"./String\"\n\n// \"{ new(): T }\"\n// is from https://www.typescriptlang.org/docs/handbook/generics.html#using-class-types-in-generics\nexport interface Constructor<M> {\n  new (...args: any[]): M\n}\n\nexport function definedThunks(...thunks: Thunk<any>[]): boolean {\n  return thunks.every(ea => defined(ea()))\n}\n\nexport function firstThunk<T>(...thunks: Thunk<Maybe<T>>[]): Maybe<T> {\n  for (const t of thunks) {\n    const r = t()\n    if (r != null) {\n      return r\n    }\n  }\n  return\n}\n\nexport function firstTrueThunk<T>(\n  thunks: Thunk<Maybe<T>>[],\n  predicate?: (t: T) => boolean\n): Maybe<T> {\n  for (const t of thunks) {\n    const r = t()\n    if (r != null && (predicate == null || predicate(r))) {\n      return r\n    }\n  }\n  return\n}\n\nexport function firstDefined<T>(...objects: MaybeNull<T>[]): Maybe<T> {\n  return objects.find(defined)\n}\n\nexport function firstDefinedField<T, K extends keyof T>(\n  obj: T,\n  ...fieldNames: K[]\n): Maybe<T[K]> {\n  return map(\n    fieldNames.find(field => null != obj[field]),\n    fieldName => obj[fieldName]\n  )\n}\n\nexport function firstFieldLike<T extends Obj, K extends keyof T>(\n  obj: T,\n  predicate: (key: K, value: T[K]) => boolean\n): Maybe<T[K]> {\n  return first(\n    keys(obj) as K[], // SITS: why is this cast needed?\n    key => (predicate(key, obj[key]) ? obj[key] : undefined)\n  )\n}\n\n// knex interprets undefined parameters as runtime mistakes, so use null:\nexport function ornull<T>(a?: T): T | null {\n  return a === undefined ? null : a\n}\n\nexport function mapAnd<T>(obj: MaybeNull<T>, f: (t: T) => boolean): boolean {\n  return obj != null ? f(obj) : false\n}\n\nexport function mapOrThrow<T, R>(\n  obj: MaybeNull<T>,\n  f: (t: T) => R,\n  errIfMissing: string\n): R {\n  if (obj != null) {\n    return f(obj)\n  } else {\n    throw new Error(errIfMissing)\n  }\n}\n\nexport function Try<T>(\n  f: () => T,\n  onError?: (error: Error) => Maybe<T>\n): Maybe<T> {\n  try {\n    return f()\n  } catch (err) {\n    return onError?.(toErr(err)!)\n  }\n}\n\nexport function tryEach<T>(iter: Iterable<T>, f: (t: T) => any): void {\n  ;[...iter].forEach(ea => Try(() => f(ea)))\n}\n\nexport function identity<T>(t: T) {\n  return t\n}\n\nexport function ctor(obj: any): Maybe<string> {\n  return map(obj.constructor, ea => ea.name)\n}\n\nexport function hasKeys(obj: any): boolean {\n  return Object.keys(obj).some(\n    k => typeof k === \"string\" && obj.propertyIsEnumerable(k)\n  )\n}\n\n/**\n * primitive and Dates\n */\nexport function primitiveEntries<T extends Obj>(o: T): [keyof T, Primitive][] {\n  return keys(o)\n    .filter(k => isPrimitive(o[k]) || isDate(o[k]))\n    .map(k => [k, o[k]] as [string, Primitive])\n}\n\nexport function spread<T extends Obj>(\n  defaults: T,\n  ...sources: MaybeNull<Partial<T>>[]\n): T {\n  return Object.assign({} as T, defaults, ...compact(sources))\n}\n\n/**\n * Assign fields from src that have Primitive value types\n */\nexport function assignMissingPrimitives<T>(dest: T, src: Maybe<Partial<T>>): T {\n  if (src == null) {\n    return dest\n  }\n  for (const [k, v] of primitiveEntries(src)) {\n    if (dest[k] == null) {\n      dest[k] = v as any\n    }\n  }\n  return dest\n}\n\n/**\n * Only assign fields that are missing or nullish\n */\nexport function assignNullishFields<T>(dest: T, src: Maybe<Partial<T>>): T {\n  if (src == null) {\n    return dest\n  }\n  for (const [k, v] of entries(src)) {\n    if (dest[k] == null) {\n      ;(dest[k] as any) = v\n    }\n  }\n  return dest\n}\n\nexport function pickMap<K extends string, V, U>(\n  obj: Record<K, V>,\n  keysToRetain: K[],\n  f: (key: K, value: V) => U\n): Record<K, U> {\n  const r = {} as Record<K, U>\n  for (const k of keysToRetain) {\n    r[k] = f(k, obj[k])\n  }\n  return r\n}\n\nexport function mapEntries<T extends Obj, U>(\n  obj: T,\n  f: (key: keyof T & string, value: T[keyof T]) => Maybe<U>\n): Record<keyof T, U> {\n  const r = {} as Record<keyof T, U>\n  for (const [k, v] of entries(obj)) {\n    // PERF: UNROLL\n    const val = f(k, v)\n    if (val != null) r[k] = val\n  }\n  return r\n}\n\nexport function mapNullEntries<T extends Obj, U>(\n  obj: T,\n  f: (key: keyof T & string, value: T[keyof T]) => MaybeNull<U>,\n  maxKeys?: number\n): Record<keyof T, U> {\n  const r = {} as Record<keyof T, U>\n  let keyCount = 0\n  for (const k of keys(obj)) {\n    r[k] = f(k, obj[k])!\n    keyCount++\n    if (gt(keyCount, maxKeys)) break\n  }\n  return r\n}\n\n/**\n * Do all fields in `a` match `b`?\n */\nexport function eqlSubset<T>(a: Maybe<Pick<T, any>>, b: T): boolean {\n  return a == null ? false : keys(a).every((ea: keyof T) => eql(a[ea], b[ea]))\n}\n\n/**\n * For a given field name, what's o[fieldpath]?\n *\n * If fieldpath includes \".\", those will be used to find sub-objects.\n */\nexport function valpath(o: any, ciFieldPath: string): any {\n  if (ciFieldPath == null || o == null || blank(ciFieldPath)) return o\n  if (Array.isArray(o)) return compact(o.map(ea => valpath(ea, ciFieldPath)))\n  const nextDot = ciFieldPath.indexOf(\".\")\n  const field = nextDot < 0 ? ciFieldPath : ciFieldPath.slice(0, nextDot)\n  const fieldRemains = nextDot < 0 ? undefined : ciFieldPath.slice(nextDot + 1)\n  const k = keys(o)\n  if (k.includes(field)) return valpath(o[field], fieldRemains!)\n  const ciField = k.find(ea => equalsIgnoreCase(ea, field))\n  if (ciField != null) {\n    return valpath(o[ciField], fieldRemains!)\n  }\n  return\n}\n\nexport function sortedKeys(o: any): any {\n  if (o == null || isPrimitive(o)) return o\n  if (Array.isArray(o)) {\n    return o.map(ea => sortedKeys(ea))\n  }\n  if (typeof o === \"object\") {\n    const a: any = {}\n    for (const k of sortIgnoreCase(keys(o))) {\n      a[k] = sortedKeys(o[k])\n    }\n    return a\n  }\n  return o\n}\n\nexport function deepDelete(o: any, ...keysToDelete: string[]): any {\n  if (o == null || typeof o !== \"object\") return o\n  if (Array.isArray(o)) return o.map(ea => deepDelete(ea, ...keysToDelete))\n  return mapEntries(o, (k, v) =>\n    keysToDelete.includes(k) ? undefined : deepDelete(v, ...keysToDelete)\n  )\n}\n\n/**\n * @return the value associated to `caseInsensitiveKeyName`\n */\nexport function pluckCaseInsensitive(\n  o: any,\n  caseInsensitiveKeyName: string\n): any {\n  if (typeof o !== \"object\") return\n  if (o[caseInsensitiveKeyName] !== undefined) return o[caseInsensitiveKeyName]\n  for (const ea of keys(o).filter(s =>\n    equalsIgnoreCase(s, caseInsensitiveKeyName)\n  )) {\n    if (o[ea] !== undefined) return o[ea]\n  }\n  return\n}\n\nexport function pairToObject(key: string, value: any) {\n  const o: any = {}\n  o[key] = value\n  return o\n}\n\nexport function mergeObjects(...arr: Maybe<object>[]) {\n  const o: any = {}\n  for (const obj of compact(arr)) {\n    for (const k of keys(obj)) {\n      o[k] = obj[k]\n    }\n  }\n  return o\n}\n\nexport function zipPojos(...arr: Maybe<Obj>[]): Obj {\n  const result: Obj = {}\n  for (const key of uniq(flatten(arr.map(keys)))) {\n    result[key] = arr.map(obj => obj?.[key])\n  }\n  return result\n}\n","import { execSync } from \"child_process\"\nimport { readFileSync } from \"fs\"\nimport { arch, platform, release } from \"os\"\nimport { lazy } from \"../core/Lazy\"\nimport { mapNotBlankOr, notBlank } from \"../fe/Blank\"\nimport { minuteMs } from \"../fe/Date\"\nimport { map2Or } from \"../fe/Maybe\"\nimport { isString } from \"../fe/String\"\nimport { uniqCount } from \"./Array\"\nimport { parseEnvTokens } from \"./EnvTokens\"\nimport { mkLogger } from \"./Logger\"\nimport { isLinux } from \"./platform/Platform\"\nimport { isDocker } from \"./platform/isDocker\"\nimport { cpuInfo } from \"./work/CpuInfo\"\n\nconst logger = lazy(() => mkLogger(\"os\"))\n\nexport const osArch = lazy(() => `${osName()} on ${arch()}`)\nexport const osFullName = lazy(() => osArch() + (isDocker() ? \" (Docker)\" : \"\"))\n\nfunction osName() {\n  switch (platform()) {\n    case \"linux\":\n      return osNameLinux()\n    case \"darwin\":\n      return osNameMac()\n    case \"win32\": // doesn't mean 32 bit (BECAUSE WINDOWS)\n      return osNameWin()\n    default:\n      return osNameDefault()\n  }\n}\n\nfunction osNameDefault() {\n  return platform() + \" \" + release()\n}\n\n// Ubuntu:\n\n// NAME=\"Ubuntu\"\n// VERSION=\"20.04.1 LTS (Focal Fossa)\"\n// ID=ubuntu\n// ID_LIKE=debian\n// PRETTY_NAME=\"Ubuntu 20.04.1 LTS\"\n// VERSION_ID=\"20.04\"\n// HOME_URL=\"https://www.ubuntu.com/\"\n// SUPPORT_URL=\"https://help.ubuntu.com/\"\n// BUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\n// PRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\n// VERSION_CODENAME=focal\n// UBUNTU_CODENAME=focal\n\n// Alpine:\n\n// NAME=\"Alpine Linux\"\n// ID=alpine\n// VERSION_ID=3.11.6\n// PRETTY_NAME=\"Alpine Linux v3.11\"\n// HOME_URL=\"https://alpinelinux.org/\"\n// BUG_REPORT_URL=\"https://bugs.alpinelinux.org/\"\n\n// Fedora:\n\n// NAME=\"Fedora Linux\"\n// VERSION=\"36 (Container Image)\"\n// ID=fedora\n// VERSION_ID=36\n// VERSION_CODENAME=\"\"\n// PLATFORM_ID=\"platform:f36\"\n// PRETTY_NAME=\"Fedora Linux 36 (Container Image)\"\n// ANSI_COLOR=\"0;38;2;60;110;180\"\n// LOGO=fedora-logo-icon\n// CPE_NAME=\"cpe:/o:fedoraproject:fedora:36\"\n// HOME_URL=\"https://fedoraproject.org/\"\n// DOCUMENTATION_URL=\"https://docs.fedoraproject.org/en-US/fedora/f36/system-administrators-guide/\"\n// SUPPORT_URL=\"https://ask.fedoraproject.org/\"\n// BUG_REPORT_URL=\"https://bugzilla.redhat.com/\"\n// REDHAT_BUGZILLA_PRODUCT=\"Fedora\"\n// REDHAT_BUGZILLA_PRODUCT_VERSION=36\n// REDHAT_SUPPORT_PRODUCT=\"Fedora\"\n// REDHAT_SUPPORT_PRODUCT_VERSION=36\n// PRIVACY_POLICY_URL=\"https://fedoraproject.org/wiki/Legal:PrivacyPolicy\"\n// VARIANT=\"Container Image\"\n// VARIANT_ID=container\n\n// `man os-release`:\nconst OsReleaseFiles = [\"/etc/os-release\", \"/usr/lib/os-release\"]\n\nexport const osReleaseTokens = lazy(() => {\n  if (!isLinux) return\n\n  for (const filename of OsReleaseFiles) {\n    try {\n      const input = readFileSync(filename).toString()\n      if (notBlank(input)) {\n        return parseEnvTokens({ input, lowerCaseKeys: true })\n      }\n    } catch (error) {\n      logger().warn(\"failed to read os-release file\", { filename, error })\n    }\n  }\n\n  return\n})\n\nexport const osNameLinux = lazy(() => {\n  const t = osReleaseTokens()\n  if (notBlank(t?.pretty_name)) return t?.pretty_name\n  return map2Or(\n    t?.name,\n    t?.version ?? t?.version_id,\n    (n, v) => n + \" \" + v,\n    osNameDefault\n  )\n})\n\nconst MacCodenames = {\n  \"10\": {\n    \"6\": \"Snow Leopard\",\n    \"7\": \"Lion\",\n    \"8\": \"Mountain Lion\",\n    \"9\": \"Mavericks\",\n    \"10\": \"Yosemite\",\n    \"11\": \"El Capitan\",\n    \"12\": \"Sierra\",\n    \"13\": \"High Sierra\",\n    \"14\": \"Mojave\",\n    \"15\": \"Catalina\"\n  },\n  \"11\": \"Big Sur\", // 11.1, 11.2, ...\n  \"12\": \"Monterey\" // 12.1, 12.2, ...\n}\n\n// Windows 11:\n// require(\"os\").release() === '10.0.22000'\n\n// Windows 10:\n// require(\"os\").release() === '10.0.19044'\n\n// YAY\n\nconst WinReleaseToVersions = {\n  \"10\": \"10\",\n  \"6\": { \"3\": \"8.1\", \"2\": \"8\", \"1\": \"7\", \"0\": \"Vista\" },\n  \"5\": { \"2\": \"Server 2003\", \"1\": \"XP\", \"0\": \"2000\" },\n  \"4\": { \"9\": \"ME\", \"1\": \"98\", \"0\": \"95\" }\n}\n\nfunction majorMinor(ver: string) {\n  return ver.split(\".\").slice(0, 2)\n}\n\nfunction versionToCodename(\n  ver: string,\n  codenames: typeof MacCodenames | typeof WinReleaseToVersions\n) {\n  const [major, minor] = majorMinor(ver)\n  const m = (codenames as any)[major]\n  return isString(m) ? m : m?.[minor]\n}\n\nconst macProductVersion = lazy(() =>\n  execSync(\"sw_vers -productVersion\").toString().trim()\n)\n\nfunction macCodename(productVersion = macProductVersion()) {\n  return versionToCodename(productVersion, MacCodenames)\n}\n\nexport function osNameMac(productVersion = macProductVersion()) {\n  try {\n    return mapNotBlankOr(\n      macCodename(productVersion),\n      ea => `macOS ${ea} (${productVersion})`,\n      osNameDefault\n    )\n  } catch (err) {\n    logger().warn(\"osNameMac(): unknown release\", err)\n    return osNameDefault()\n  }\n}\n\nexport function osNameWin(r = release()) {\n  const codename = r.startsWith(\"10.0.22\")\n    ? \"11\"\n    : versionToCodename(r, WinReleaseToVersions)\n  if (codename != null) {\n    return `Windows ${codename} (${r})`\n  } else {\n    logger().warn(\"osNameWin(): unknown release: \" + r)\n    return `Windows (${r})`\n  }\n}\n\nexport const CPUs = lazy(\n  () =>\n    uniqCount(cpuInfo().map(c => c.model))\n      .map(ea => `${ea.count} × ${ea.t}`)\n      .join(\", \"),\n  minuteMs\n)\n","import { Thunk } from \"../fe/Thunk\"\nimport { UpgradeChannel } from \"./settings/UpgradeChannels\"\nimport { version, versionMajor, versionMinor, versionPatch } from \"./Version\"\n\nexport const isPreAlphaVersion = () => version.includes(\"-prealpha\")\nexport const isAlphaVersion = () => version.includes(\"-alpha\")\nexport const isBetaVersion = () => version.includes(\"-beta\")\nexport const isStableVersion = () => !isAlphaVersion() && !isBetaVersion()\n\nexport const channel: Thunk<UpgradeChannel> = () =>\n  isPreAlphaVersion()\n    ? \"prealpha\"\n    : isAlphaVersion()\n    ? \"alpha\"\n    : isBetaVersion()\n    ? \"beta\"\n    : \"stable\"\n\n/**\n * @return \"1.2.3\", even if `version` is \"1.2.3-alpha.0\" or \"1.2.3-beta.32\"\n */\nexport const baseVersion = () =>\n  [versionMajor, versionMinor, versionPatch].join(\".\")\n\nexport const versionMajorMinor = versionMajor + \".\" + versionMinor\n","import { pidExists } from \"batch-cluster\"\nimport { toA } from \"../fe/toA\"\nimport { untilTrue } from \"./async/until\"\n\nexport function existingPids(pids: number[]): number[] {\n  return toA(pids).filter(pidExists)\n}\n\nexport function waitForPidExit(\n  pid: number,\n  timeoutMs: number\n): Promise<boolean> {\n  return untilTrue(() => !pidExists(pid), { timeoutMs, intervalMs: 250 })\n}\n","import child_process from \"child_process\"\nimport process from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { compact, isEmpty } from \"../fe/Array\"\nimport { notBlank } from \"../fe/Blank\"\nimport { ago, minuteMs, secondMs } from \"../fe/Date\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { gt, gt0, lt, toInt } from \"../fe/Number\"\nimport { opt } from \"../fe/Opt\"\nimport { MaybeSyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { toA } from \"../fe/toA\"\nimport { toS } from \"../fe/toS\"\nimport { FifoCache } from \"./FifoCache\"\nimport { mkLogger } from \"./Logger\"\nimport { Try, identity } from \"./Object\"\nimport { ProcEntry, pidInfos } from \"./Ps\"\nimport { rateLimited } from \"./RateLimited\"\nimport { Endable, EndableRanks, ending } from \"./async/Endable\"\nimport { EndableWrapper } from \"./async/EndableWrapper\"\nimport { thenMap } from \"./async/Promise\"\nimport { setUnrefInterval } from \"./async/Timers\"\nimport { configDir } from \"./dir/ConfigDir\"\nimport { onError } from \"./error/OnError\"\nimport { BaseFile } from \"./fs/BaseFile\"\nimport { isJsonExt } from \"./fs/FileExt\"\nimport { isHiddenBasename, parseNativePath } from \"./fs/Path\"\nimport { isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\n\n// TODO: move to ./proc/Pids.ts\nconst logger = lazy(() => mkLogger(\"proc.Pids\"))\n\nexport interface PidfileInfo {\n  pid: number\n  cmd: string // < only for debugging\n  ppid: number // < if ppid is gone, reap.\n  /**\n   * If <= 0, the process can run indefinitely (like web or sync)\n   */\n  maxAgeMs: number\n}\n\nexport interface PidfileJson extends PidfileInfo {\n  startTime: number\n  timeoutTime?: number\n}\n\n// yeah, it's a lot of slop, but addPid() is called after a timeout, so start\n// isn't really the start time.\nconst AllowableStartSlopMs = 10 * secondMs\n\nfunction matchesPidfileInfo(\n  info: Maybe<PidfileJson>,\n  entry: Maybe<ProcEntry>\n): boolean {\n  if (info == null || entry == null || info.pid !== entry.pid) return false\n\n  // The start times need to match, ish:\n  const entryStartTime = map(entry.start, ea => ea.getTime())\n  const fileStartTime = info.startTime\n  return (\n    gt0(entryStartTime) &&\n    gt0(fileStartTime) &&\n    Math.abs(entryStartTime - fileStartTime) < AllowableStartSlopMs\n  )\n\n  // Command names can change, so we just use the start time to match PIDs.\n}\n\nfunction killPidWinTaskkill(pid: number, force = false) {\n  const args = [\"/PID\", toS(toInt(pid)), \"/T\"]\n  if (force) {\n    args.push(\"/F\")\n  }\n  child_process.execFile(\"taskkill\", args)\n}\n\nasync function killPidWin(pid: number, force = false) {\n  if (ending() || PowerShell.instance().ended) {\n    killPidWinTaskkill(pid, force)\n  } else {\n    try {\n      // https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/stop-process?view=powershell-6\n      const cmd = compact([\n        \"Stop-Process\",\n        \"-Id\",\n        toInt(pid),\n        force ? \"-Force\" : undefined\n      ]).join(\" \")\n      await PowerShell.instance().execute(cmd, identity)\n    } catch (err) {\n      logger().warn(\"killWin(): pwsh error, using TASKKILL: \" + err)\n      killPidWinTaskkill(pid, force)\n    }\n  }\n}\n\nasync function killPidWithNode(pid: number, force = false) {\n  try {\n    process.kill(pid, force ? \"SIGKILL\" : \"SIGTERM\")\n  } catch (err) {\n    if (!String(err).includes(\"ESRCH\")) throw err\n  }\n}\n\n/**\n * Send a signal to the given process id.\n *\n * @param {number} pid the process id. Required.\n * @param {boolean} [force=false] if true, and the current user has\n * permissions to send the signal, the pid will be forced to shut down.\n */\nexport function killPid(\n  pid: number,\n  force = false,\n  rewritePidfileOnForce = true\n) {\n  logger().log(force ? \"warn\" : \"debug\", \"killPid\", { pid, force })\n  if (pid === process.pid || pid === process.ppid) {\n    throw new Error(\"cannot self-terminate\")\n  }\n  if (force && rewritePidfileOnForce) {\n    void Pids.instance()?.onKill(pid)\n  }\n  return isWin ? killPidWin(pid, force) : killPidWithNode(pid, force)\n}\n\nexport class Pids {\n  static readonly instance = lazy(() =>\n    map(configDir(), dir => new Pids(BaseFile.for(dir).join(\"pids\")))\n  )\n  private readonly recentPids = new FifoCache<Promise<BaseFile>>(10 * secondMs)\n  constructor(readonly pidsDir: BaseFile) {\n    //\n  }\n\n  async addPid(\n    info: PidfileInfo,\n    start: Date,\n    force = false\n  ): Promise<BaseFile> {\n    if (info == null) {\n      throw new Error(\"undefined info\")\n    }\n    const pid = info.pid\n    if (!gt0(pid)) {\n      throw new Error(\"undefined pid\")\n    }\n    const key = info.ppid + \":\" + info.pid\n    if (force) this.recentPids.delete(key)\n    return this.recentPids.getOrSet(key, async () => {\n      const f = this.pidsDir.join(info.pid + \".json\")\n      const cmd = opt(Try(() => parseNativePath(info.cmd).base))\n        .filter(notBlank)\n        .getOrElse(() => info.cmd)\n\n      const startTime = start.getTime()\n      const json: PidfileJson = {\n        ...info,\n        cmd,\n        startTime\n      }\n      // no need to fslock for pidfiles\n      await f.writeJson_(json)\n      logger().debug(\"addPid() wrote \" + f, json)\n      return f\n    })\n  }\n\n  pidfiles() {\n    return this.pidsDir.clear().children(ea => {\n      const pid = toInt(ea.name)\n      return ea.ext === \".json\" && pid != null && pid !== process.pid\n    })\n  }\n\n  async pids(pidfiles: MaybeSyncOrAsync<BaseFile[]> = this.pidfiles()) {\n    return compact(toA(await pidfiles).map(ea => toInt(ea.name)))\n  }\n\n  async onKill(pid: number): PromiseMaybe<BaseFile> {\n    const pidfile = this.pidsDir.join(pid + \".json\")\n    return thenMap(pidfile.clear().readJson<PidfileJson>(), priorInfo =>\n      this.addPid({ ...priorInfo, maxAgeMs: 1 }, ago(minuteMs), true).catch(\n        err => {\n          logger().info(\"onKill(): failed to rewrite pidfile: \" + err, { pid })\n          return undefined\n        }\n      )\n    )\n  }\n\n  readonly vacuumOldWip = rateLimited({\n    name: \"Pids.vacuumOldWip()\",\n    minCallDelayMs: minuteMs,\n    f: async () => {\n      // look for and delete old WIPs\n      const minMtime = Date.now() - 2 * minuteMs\n      const old = await this.pidsDir.childFiles(\n        async ea =>\n          isJsonExt(ea) &&\n          isHiddenBasename(ea.base) &&\n          lt(await ea.mtimeMs(), minMtime)\n      )\n      for (const ea of toA(old)) {\n        logger().warn(\"killOldProcs(): deleting old pid WIP, \" + ea.base)\n        await ea.unlink(\"debug\")\n      }\n    }\n  })\n\n  /**\n   * @param everything if `true`, ignore pidfile maxAgeMs.\n   * @param force given to `kill`.\n   */\n  readonly killOldProcs = rateLimited({\n    name: \"Pids.killOldProcs()\",\n    minCallDelayMs: minuteMs,\n    f: async (\n      opts: {\n        everything?: boolean\n        force?: boolean\n        everythingBefore?: number\n      } = {}\n    ) => {\n      await this.vacuumOldWip()\n      const everything = opts.everything ?? false\n      const force = opts.force ?? isWin\n      const pidfiles = await this.pidfiles()\n      const pids = await this.pids(pidfiles ?? [])\n      if (isEmpty(pids)) {\n        logger().info(\"killOldProcs(): no pidfiles\")\n        return []\n      }\n      const killed: (PidfileJson & Partial<ProcEntry>)[] = []\n\n      const endPromises: Promise<void>[] = []\n\n      const pidEntries = await pidInfos(pids)\n      if (pidEntries == null) {\n        onError(\"Pids.killOldProcs(): failed to get process information\")\n        return\n      }\n\n      for (const pidfile of pidfiles!) {\n        const pid = toInt(pidfile.name)\n        if (pid == null) {\n          logger().warn(\"killOldProcs(): null pid from \" + pidfile.base)\n          await pidfile.unlink(\"debug\")\n          continue\n        }\n\n        const json = await pidfile.readJson<PidfileJson>()\n        if (json == null) {\n          logger().warn(\n            \"killOldProcs(): failed to read pidfile \" + pidfile.base\n          )\n          await pidfile.unlink(\"debug\")\n          continue\n        }\n        if (json.pid !== pid) {\n          // WHAT?\n          logger().warn(\n            \"killOldProcs(): json.pid != name: unlinking invalid pidfile \" +\n              pidfile.base,\n            { json, pid }\n          )\n          await pidfile.unlink(\"debug\")\n          continue\n        }\n\n        const pidEntry = pidEntries.find(ea => ea.pid === pid)\n        if (pidEntry == null || !matchesPidfileInfo(json, pidEntry)) {\n          logger().debug(\n            \"killOldProcs(): pid no longer present: unlinking \" + pidfile.base,\n            { json, pidEntry }\n          )\n          await pidfile.unlink(\"debug\")\n          killed.push(json)\n          continue\n        }\n\n        const timeoutAt = gt0(json.maxAgeMs)\n          ? json.startTime + json.maxAgeMs\n          : undefined\n\n        const reason = everything\n          ? \"all pids are being shut down\"\n          : gt(Date.now(), timeoutAt)\n          ? `timed out ${Date.now() - timeoutAt!} ms ago`\n          : lt(json.startTime, opts.everythingBefore)\n          ? \"cleanup everything before \" +\n            new Date(opts.everythingBefore!).toISOString()\n          : undefined\n\n        if (reason != null) {\n          logger().info(\"killOldProcs(): killing\", {\n            reason,\n            json\n          })\n          endPromises.push(killPid(pid, force, false))\n          killed.push({ ...json, ...pidEntry })\n          // ... we'll remove the pidfile once the process exits ...\n        }\n      }\n      if (endPromises.length > 0) {\n        await Promise.allSettled(endPromises)\n      }\n\n      return killed\n    }\n  })\n}\n\nexport function addPid(\n  info: PidfileInfo,\n  start: Date\n): Maybe<Promise<BaseFile>> {\n  return Pids.instance()?.addPid(info, start)\n}\n\n// Should only be invoked by MainService\nexport const ProcCleaner = lazy<Endable>(() => {\n  const timers = [\n    // TCBH: prime intervals so they don't collide unnecessarily:\n    { everything: false, force: false, intervalMs: 5 * minuteMs },\n    { everything: false, force: true, intervalMs: 17 * minuteMs }\n  ].map(ea =>\n    setUnrefInterval(() => Pids.instance()?.killOldProcs(ea), ea.intervalMs)\n  )\n  return new EndableWrapper(\n    \"ProcCleaner\",\n    () => {\n      timers.map(clearInterval)\n      return Pids.instance()?.killOldProcs()\n    },\n    EndableRanks.predb\n  )\n})\n","import os from \"os\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { strEnum, StrEnumKeys } from \"../fe/StrEnum\"\n\n// From https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processpriorityclass?view=netframework-4.8\n\n// AboveNormal Specifies that the process has priority higher than Normal but\n// lower than High.\n\n// BelowNormal Specifies that the process has priority above Idle but below\n// Normal.\n\n// High Specifies that the process performs time-critical tasks that must be\n// executed immediately, such as the Task List dialog, which must respond\n// quickly when called by the user, regardless of the load on the operating\n// system. The threads of the process preempt the threads of normal or idle\n// priority class processes. Use extreme care when specifying High for the\n// process's priority class, because a high priority class application can use\n// nearly all available processor time.\n\n// Idle Specifies that the threads of this process run only when the system is\n// idle, such as a screen saver. The threads of the process are preempted by the\n// threads of any process running in a higher priority class. This priority\n// class is inherited by child processes.\n\n// Normal Specifies that the process has no special scheduling needs.\n\nexport const PriorityClasses = strEnum(\"Normal\", \"BelowNormal\", \"Idle\", \"Low\")\n\nexport type PriorityClass = StrEnumKeys<typeof PriorityClasses>\n\n// PRIORITY_LOW: 19,\n// PRIORITY_BELOW_NORMAL: 10,\n// PRIORITY_NORMAL: 0,\n// PRIORITY_ABOVE_NORMAL: -7,\n// PRIORITY_HIGH: -14,\n// PRIORITY_HIGHEST: -20\n\nexport const PriorityClassToPosix = Object.freeze({\n  Normal: 0,\n  BelowNormal: 10,\n  Low: 19,\n  Idle: 19\n}) satisfies Record<PriorityClass, number>\n\nexport const PriorityClassToNode = Object.freeze({\n  AboveNormal: os.constants.priority.PRIORITY_ABOVE_NORMAL,\n  Normal: os.constants.priority.PRIORITY_NORMAL,\n  BelowNormal: os.constants.priority.PRIORITY_BELOW_NORMAL,\n  Idle: os.constants.priority.PRIORITY_LOW,\n  Low: os.constants.priority.PRIORITY_LOW\n}) satisfies Record<PriorityClass, number>\n\nexport function priorityPosixToClass(\n  priority: Maybe<number>\n): Maybe<PriorityClass> {\n  if (priority == null || !isFinite(priority)) {\n    return\n  } else if (priority < PriorityClassToPosix.BelowNormal) {\n    return PriorityClasses.Normal\n  } else if (priority < PriorityClassToPosix.Idle) {\n    return PriorityClasses.BelowNormal\n  } else {\n    return PriorityClasses.Idle\n  }\n}\n","import process from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { isEmpty, isNotEmpty, uniq } from \"../fe/Array\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank, notBlank } from \"../fe/Blank\"\nimport { secondMs } from \"../fe/Date\"\nimport { orElse } from \"../fe/Maybe\"\nimport { PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { gt0, toInt } from \"../fe/Number\"\nimport { onlyReqValued } from \"../fe/Object\"\nimport { toA } from \"../fe/toA\"\nimport { toS } from \"../fe/toS\"\nimport { collectBatchedAsync } from \"./Array\"\nimport { parseFixed } from \"./Fixed\"\nimport { mkLogger } from \"./Logger\"\nimport { existingPids } from \"./Pid\"\nimport { StartTs } from \"./StartTs\"\nimport { pwshJsonDate, wmiDate } from \"./WinDate\"\nimport { thenMap } from \"./async/Promise\"\nimport { StdoutOpts, stdoutResult_, stdout_ } from \"./child/ChildProcess\"\nimport { wmic } from \"./fs/PathTo\"\nimport { isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\n\nexport interface ProcEntry {\n  pid: number\n  start: Date\n  cmd: string\n}\n\n// TODO: move to ./proc/Ps.ts\nconst logger = lazy(() => mkLogger(\"proc.ps\"))\n\nexport function isProcEntry(pe: any): pe is ProcEntry {\n  return pe != null && gt0(pe.pid) && pe.start != null && notBlank(pe.cmd)\n}\n\nexport async function ps(): Promise<ProcEntry[]> {\n  const procs = await (isWin ? psWin() : psPosix())\n  return orElse(\n    sortBy(procs.filter(isProcEntry), ea => ea.pid),\n    []\n  )\n}\n\nexport async function pidInfo(pid: number): PromiseMaybe<ProcEntry> {\n  return thenMap(pidInfos([pid]), arr => toA(arr).find(ea => ea.pid === pid))\n}\n\nexport async function notExistingPids(pids: number[]): PromiseMaybe<number[]> {\n  if (isEmpty(pids)) return []\n  return thenMap(existingPids(pids), arr => {\n    const alive = [process.pid, ...arr]\n    return pids.filter(ea => !alive.includes(ea))\n  })\n}\n\nexport async function pidInfos(pids: number[]): PromiseMaybe<ProcEntry[]> {\n  const arr = existingPids(pids)\n\n  const arr2 = await collectBatchedAsync<number, ProcEntry>(\n    arr,\n    20,\n    isWin ? pidInfoWin : pidInfoPosix\n  )\n  const result = arr2.filter(ea => isProcEntry(ea) && arr.includes(ea.pid))\n  return logger().tap({ msg: \"pidInfos()\", result, meta: { pids } })\n}\n\nfunction win2pe(arr: any[]): ProcEntry[] {\n  return arr.map((entry: any) => ({\n    pid: entry.Id,\n    start: pwshJsonDate(entry.StartTime),\n    cmd: entry.ProcessName\n  })) as ProcEntry[]\n}\n\nconst PsWinCmd = \"Get-Process\"\nconst PsWinSelectObj = \"| Select-Object -Property Id,ProcessName,StartTime\"\n\nasync function psWin(): Promise<ProcEntry[]> {\n  if (PowerShell.instance().ended) return psWinWmic()\n  const result = await PowerShell.instance().executeJsonToA(\n    [PsWinCmd, PsWinSelectObj].join(\" \")\n  )\n  return result == null ? psWinWmic() : win2pe(result)\n}\n\nfunction pidToS(pids: number[]): string {\n  return uniq([...pids.filter(gt0), process.pid]).join(\",\")\n}\n\nasync function pidInfoWin(pids: number[]): PromiseMaybe<ProcEntry[]> {\n  if (PowerShell.instance().ended) return psWinWmic(pids)\n  const cmd = [\n    PsWinCmd,\n    \"-Id\",\n    // PowerShell wants the IDs joined by comma:\n    pidToS(pids),\n    \"-ErrorAction SilentlyContinue\", // I expect it not to find some pids\n    PsWinSelectObj\n  ].join(\" \")\n  return thenMap(PowerShell.instance().executeJsonToA(cmd), ea => win2pe(ea))\n}\n\nconst stdoutOpts: StdoutOpts = {\n  maxBuffer: 1024 * 1024, // windows process lists can be enormous\n  timeoutMs: 15 * secondMs, // ps sometimes takes a long time\n  ignoreExitCode: true,\n  ignoreStderr: true\n}\n\nconst headers: (\"CommandLine\" | \"CreationDate\" | \"ProcessId\")[] = [\n  \"CommandLine\",\n  \"CreationDate\",\n  \"ProcessId\"\n]\n\n// NOTE: only used if powershell is shut down\nexport async function psWinWmic(pids?: number[]): Promise<ProcEntry[]> {\n  const args = [\"process\"]\n  if (isNotEmpty(pids)) {\n    // wmic wants multiple PIDs as or clauses, like\n    // wmic process where \"ProcessId=11308 or ProcessId=9416\"\n    const processIdClause = uniq([...pids.filter(gt0), process.pid])\n      .map(ea => `ProcessId=${ea}`)\n      .join(\" or \")\n    args.push(\"where\", processIdClause)\n  }\n  args.push(\"get\", headers.join(\",\"))\n  const result = await stdoutResult_(wmic(), args, stdoutOpts)\n  const results = onlyReqValued(\n    parseFixed(headers, result.result).map((ea: any) => ({\n      pid: toInt(ea.ProcessId, { defaultValue: -1 })!,\n      start: wmiDate(ea.CreationDate),\n      cmd: toS(ea.CommandLine)\n    }))\n  )\n  if (!results.find(ea => ea.pid === process.pid)) {\n    results.push({\n      pid: process.pid,\n      start: new Date(StartTs),\n      cmd: \"node \" + process.title\n    })\n  }\n  return results\n}\n\nfunction psStdout2ProcEntry(result: string): ProcEntry[] {\n  if (blank(result)) return []\n  return parseFixed(\n    [\"PID\", { text: \"STARTED\", greedyLeft: true }, \"COMMAND\"],\n    result\n  ).map((ea: any) => ({\n    pid: toInt(ea.PID, { defaultValue: -1 })!,\n    start: new Date(ea.STARTED),\n    cmd: toS(ea.COMMAND)\n  }))\n}\n\nasync function psPosix(): Promise<ProcEntry[]> {\n  return psStdout2ProcEntry(\n    await stdout_(\"ps\", [\"-ewwwo\", \"pid,lstart,command\"], stdoutOpts)\n  )\n}\n\n/**\n * @param pid the pid to look for\n * @return an array of either just this process, or the process and the requested pid.\n */\nasync function pidInfoPosix(pids: number[]): Promise<ProcEntry[]> {\n  const r = await stdoutResult_(\n    \"ps\",\n    // we include the current pid to prevent either `ps` or the fixed parser\n    // from grumping at us:\n    [\"-p\", pidToS(pids), \"-wwwo\", \"pid,lstart,command\"],\n    {\n      ...stdoutOpts,\n      ignoreExitCode: true\n    }\n  )\n  return psStdout2ProcEntry(r.result)\n}\n","import { delay } from \"../fe/Delay\"\nimport { Latch } from \"../fe/Latch\"\nimport { Maybe, PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { gt0, max_ } from \"../fe/Number\"\nimport { SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { Deferred } from \"./async/Deferred\"\nimport { setUnrefTimeout } from \"./async/Timers\"\nimport { WrappedError } from \"./error/WrappedError\"\n\nexport interface RateLimited<T> {\n  (...args: any[]): PromiseMaybe<T>\n  // unschedule any pending future calls\n  clear(): void\n  isRateLimited(): boolean\n  minCallDelayMs(): number\n  setMinCallDelayMs(millis: number): void\n  donePromise(): Promise<void>\n  force(...args: any[]): PromiseMaybe<T>\n  status(): {\n    running: boolean\n    needToDelay: boolean\n    delayNextRunUntil: number\n  }\n}\n\n/**\n * Ensures no concurrent invocations, and a delay between method calls to be at\n * least `minCallDelayMs`.\n *\n * As opposed to debounce, this implementation will only postpone a\n * call to f() at most every timeoutMs, rather than postponing forever.\n */\nexport function rateLimited<T>({\n  f,\n  minCallDelayMs,\n  timeoutMs = undefined,\n  nullOnBusy,\n  name\n}: {\n  f: (...args: any[]) => SyncOrAsync<T>\n  minCallDelayMs: number\n  timeoutMs?: number\n  nullOnBusy?: boolean\n  name: string\n}): RateLimited<T> {\n  let running = false\n  let delayNextRunUntil: number = 0\n  let priorResult: Maybe<Deferred<T>>\n  let nextArgs: Maybe<any[]>\n  minCallDelayMs = Math.ceil(minCallDelayMs)\n\n  const doneLatches: Latch[] = []\n\n  function isRateLimited() {\n    return running || delayNextRunUntil > Date.now()\n  }\n\n  function afterRunDelay() {\n    if (nextArgs != null) {\n      const arr = nextArgs\n      nextArgs = undefined\n      void r(...arr)\n    }\n  }\n\n  async function postRun() {\n    running = false\n    delayNextRunUntil = Date.now() + minCallDelayMs\n\n    setUnrefTimeout(afterRunDelay, minCallDelayMs + 1)\n\n    // only release latches _after_ we've marked ourselves as not running:\n    doneLatches.forEach(ea => ea.resolve())\n    doneLatches.length = 0\n  }\n\n  async function run(...args: any[]) {\n    running = true\n    delayNextRunUntil = Date.now() + max_(minCallDelayMs, timeoutMs)\n\n    // We get to run!\n    const d = (priorResult = new Deferred<T>(name))\n    if (gt0(timeoutMs)) void d.setTimeout(timeoutMs)\n    try {\n      void d.resolve(await f(...args))\n    } catch (cause) {\n      void d.reject(\n        new WrappedError(\"RateLimited(\" + name + \") failed\", { cause })\n      )\n    } finally {\n      void postRun()\n    }\n    return d.promise\n  }\n\n  const r: any = (...args: any[]) => {\n    if (isRateLimited()) {\n      if (nullOnBusy === true) {\n        return null\n      }\n      const result = priorResult?.promise\n      nextArgs = args\n      // the delay breaks hard loops:\n      return delay(1).then(() => result)\n    } else {\n      return run(...args)\n    }\n  }\n  r.clear = () => {\n    nextArgs = undefined\n  }\n\n  r.donePromise = () => {\n    if (!running) return Promise.resolve()\n    const l = new Latch()\n    doneLatches.push(l)\n    return l\n  }\n\n  r.force = async (...args: any[]) => {\n    // unschedule any other runs\n    nextArgs = undefined\n    // wait for the prior run:\n    if (running) await r.donePromise()\n    running = false\n    delayNextRunUntil = 0\n    return r(...args)\n  }\n\n  r.isRateLimited = () => isRateLimited()\n  r.status = () => {\n    return {\n      running,\n      needToDelay: delayNextRunUntil > Date.now(),\n      minNextDelayMs: Math.max(0, Date.now() - delayNextRunUntil)\n    }\n  }\n  r.minCallDelayMs = () => minCallDelayMs\n  r.setMinCallDelayMs = (ms: number) => {\n    minCallDelayMs = ms\n  }\n  return r\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { pick } from \"../fe/Object\"\nimport { toS } from \"../fe/toS\"\n\nexport type IndexedString = [string, number]\n\n/**\n * Given a RegExp and string, return all captured groups and their starting\n * index.\n */\nexport function captures(\n  regex: RegExp,\n  str: string\n): Pick<RegExpExecArray, \"index\" | \"groups\">[] {\n  const result = []\n  if (!regex.global) throw new Error(\"must provide global regex\")\n  let m: RegExpExecArray | null\n  while ((m = regex.exec(str)) != null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++\n    } else {\n      result.push(pick(m, \"index\", \"groups\"))\n    }\n  }\n  return result\n}\n\nexport function escapeRegExp(s: string | RegExpEscaped): string {\n  return s instanceof RegExpEscaped\n    ? s.source\n    : toS(s).replace(/[-.,\\\\^$*+?()|[\\]{}]/g, \"\\\\$&\")\n}\n\nexport function matchQuotes(s: string) {\n  return s.replace(/[‘’']/g, \"[‘’']\").replace(/[“”„”«»〃\"]/g, `[“”„”«»〃\"]`)\n}\n\nexport function joinPatterns(arr: string[], flags?: string): RegExp {\n  const result = []\n  for (const ea of arr) {\n    try {\n      new RegExp(ea)\n      result.push(ea)\n    } catch {\n      result.push(escapeRegExp(ea))\n    }\n  }\n  return new RegExp(result.join(\"|\"), flags)\n}\n\n/**\n * When provided to `concatRegexp()`, this `source` won't be further\n * escaped.\n *\n * This is only useful if a snippet of a regular expression is not valid by\n * itself (as it doesn't include balanced parenthesis or other grouping\n * constructs).\n */\nexport class RegExpEscaped {\n  constructor(\n    readonly source: string,\n    readonly flags?: string\n  ) {}\n\n  get global() {\n    return this.flags?.includes(\"g\") ?? false\n  }\n  get ignoreCase() {\n    return this.flags?.includes(\"m\") ?? false\n  }\n  get multiline() {\n    return this.flags?.includes(\"i\") ?? false\n  }\n}\n\nexport class RegExpOptional extends RegExpEscaped {\n  static from(...arr: Maybe<RegExp | string | RegExpEscaped>[]) {\n    const re = concatRegexp(arr)\n    return new RegExpOptional(\"(?:\" + re.source + \")?\", re.flags)\n  }\n}\n\nexport function concatRegexp(\n  arr: Maybe<RegExp | string | RegExpEscaped>[],\n  flags?: string\n): RegExp {\n  let re = \"\"\n  let global = flags?.includes(\"g\") ?? false\n  let ignoreCase = flags?.includes(\"i\") ?? false\n  let multiline = flags?.includes(\"m\") ?? false\n  for (const ea of arr) {\n    if (ea instanceof RegExpEscaped || ea instanceof RegExp) {\n      re += ea.source\n      global ||= ea.global\n      ignoreCase ||= ea.ignoreCase\n      multiline ||= ea.multiline\n    } else {\n      re += escapeRegExp(toS(ea))\n    }\n  }\n  return new RegExp(\n    re,\n    flags ??\n      (global ? \"g\" : \"\") + (ignoreCase ? \"i\" : \"\") + (multiline ? \"m\" : \"\")\n  )\n}\n","import os from \"os\"\nimport path from \"path\"\nimport { lazy } from \"../core/Lazy\"\nimport { compactBlanks } from \"../fe/Array\"\nimport { minuteMs, secondMs } from \"../fe/Date\"\nimport { later } from \"../fe/Delay\"\nimport { flatten } from \"../fe/Flatten\"\nimport { gt0 } from \"../fe/Number\"\nimport { ensureSuffix } from \"../fe/String\"\nimport { toS } from \"../fe/toS\"\nimport { mkLogger } from \"./Logger\"\nimport {\n  PriorityClass,\n  PriorityClassToNode,\n  PriorityClassToPosix,\n  PriorityClasses,\n  priorityPosixToClass\n} from \"./PriorityClass\"\nimport { TTLSet } from \"./TTLSet\"\nimport { stdoutResult_ } from \"./child/ChildProcess\"\nimport { ee } from \"./event/EventEmitter\"\nimport { isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\nimport { Settings } from \"./settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"Renice\"))\n\n// HEY FUTURE ME: reniced.prior()?.clear() is NOT THE SAME as reniced.unset()\n// -- we want to keep the prior TTLSet to avoid creating more memory garbage.\nlater(() => ee().on(\"clearCache\", () => reniced.prior()?.clear()))\n\n// 20220215: changed to a include-list, because we really only care to nice\n// sync, worker, ffmpeg, and vlc.\n\n// Don't renice web, renice, ps, df, ...\n\nconst niceableCmds = lazy(() => [\n  \"sync.js\",\n  \"worker.js\",\n  ...flatten(\n    [\n      \"dcraw_emu\",\n      path.basename(Settings.ffmpegPath.valueOrDefault),\n      path.basename(Settings.vlcPath.valueOrDefault)\n    ].map(ea => (isWin ? [ea, ensureSuffix(ea, \".exe\")] : ea))\n  )\n])\n\nexport function niceable(\n  cmd: string,\n  args: string[] | readonly string[]\n): boolean {\n  return compactBlanks([\n    path.basename(cmd),\n    ...args.map(ea => path.basename(ea))\n  ]).some(ea => niceableCmds().includes(ea.toLowerCase()))\n}\n\nlet nodeReniceWorks = true\n\nconst reniced = lazy(() => new TTLSet<number>(minuteMs))\n\n// both the batch cluster observer and child services renice, which makes sync-file get\n// double-renice-d.\nexport async function renice(pid: number | undefined, priority?: number) {\n  if (!gt0(pid) || reniced().has(pid)) return\n  reniced().add(pid)\n\n  const priorityClass: PriorityClass =\n    priorityPosixToClass(priority) ??\n    (Settings.processPriority.valueOrDefault as PriorityClass)\n\n  priority ??= PriorityClassToNode[priorityClass]\n\n  if (nodeReniceWorks) {\n    try {\n      os.setPriority(pid, priority)\n      return priority\n    } catch (error: any) {\n      // if it's a permission issue, don't try other methods.\n      const permissionDenied =\n        error?.errno === -13 || error?.info?.code === \"EACCES\"\n\n      logger().warn(\"Failed to renice using node:os\", {\n        pid,\n        priority,\n        permissionDenied,\n        error\n      })\n\n      if (permissionDenied) {\n        // it's not node's fault!\n        return\n      }\n      nodeReniceWorks = false\n      // try os-specific methods below:\n    }\n  }\n\n  try {\n    await (isWin\n      ? reniceWin(pid, priorityClass)\n      : renicePosix(\n          pid,\n          PriorityClassToPosix[priorityClass] ??\n            PriorityClassToPosix.BelowNormal\n        ))\n    logger().info(\"Renice pid \" + pid + \" to \" + priorityClass)\n    return priority\n  } catch (err) {\n    // Probably because the process already ended:\n    logger().info(\"Failed to renice pid \" + pid, err)\n    return\n  }\n}\n\nasync function reniceWin(pid: number, pc: PriorityClass) {\n  if (gt0(pid) && PriorityClasses.includes(pc)) {\n    await PowerShell.instance()\n      .execute(`(Get-Process -Id ${pid}).PriorityClass = \"${pc}\"`, ea => ea)\n      .catch(error => logger().info(\"reniceWin() failed\", error))\n  }\n}\n\nasync function renicePosix(pid: number, nice = 19) {\n  await stdoutResult_(\"renice\", [nice, \"-p\", pid].map(toS), {\n    timeoutMs: 10 * secondMs,\n    isIgnorableError: () => true,\n    ignoreExitCode: true\n  }).catch(error => logger().info(\"renicePosix() failed\", error))\n}\n","import process from \"process\"\nimport { lazy } from \"../core/Lazy\"\nimport { compactBlanks } from \"../fe/Array\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { ServiceName, ServiceNames } from \"../fe/ServiceNames\"\nimport { toS } from \"../fe/toS\"\nimport { isTest } from \"./NodeEnv\"\nimport { isPacked } from \"./platform/IsPacked\"\n\nexport const serviceName = lazy<ServiceName>(() => {\n  if (isPacked()) {\n    throw Error(\"serviceName() is unset\")\n  } else {\n    return \"\" as any\n  }\n})\n\nexport const processName = lazy(() =>\n  compactBlanks([serviceName.prior(), toS(process.pid)]).join(\"-\")\n)\n\nserviceName.watchLater(() => {\n  processName.unset()\n})\n\nexport function serviceNameIndex(s: Maybe<ServiceName>): number {\n  return ServiceNames.indexOf(s) ?? ServiceNames.length + 1\n}\n\nexport const MainServices: ServiceName[] = [\n  ServiceNames.main,\n  ServiceNames.desktop\n]\n\n/**\n * If a database isn't available, these services can't run\n */\nexport const DbServices: ServiceName[] = [\n  ServiceNames.sync,\n  ServiceNames.info,\n  ServiceNames.web,\n  ServiceNames.list,\n  ServiceNames.test\n]\n\nexport function isDbService() {\n  return DbServices.includes(serviceName())\n}\n\nexport function isLibraryRequiredService() {\n  return [ServiceNames.sync, ServiceNames.list].includes(serviceName() as any)\n}\n\nexport function isServiceThatAcceptsFatalErrors() {\n  return !isMainService() && !isWebService()\n}\n\nexport function isMainService(name?: ServiceName) {\n  // \"main\" and \"desktop\" are both \"main services\". We only discriminate between\n  // them when the CLI is rendered.\n  return MainServices.includes(name ?? serviceName())\n}\n\nexport function isWebService(name?: ServiceName) {\n  return (name ?? serviceName()) === ServiceNames.web\n}\n\nexport function isBillingService(name?: ServiceName) {\n  return (name ?? serviceName()) === ServiceNames.billing\n}\n\nexport function isWorkerService(name?: ServiceName) {\n  return (name ?? serviceName()) === ServiceNames.worker\n}\n\nexport function isSyncService(name?: ServiceName) {\n  return (name ?? serviceName()) === ServiceNames.sync\n}\n\nexport function isInfoService() {\n  return serviceName() === ServiceNames.info\n}\n\nexport function isTestService() {\n  return serviceName() === ServiceNames.test\n}\n\nfunction isTestNotWorker() {\n  return (isTest || isTestService()) && !isWorkerService()\n}\n\nexport const StatsDbServices: ServiceName[] = [ServiceNames.sync]\n\nexport function isStatsDbService() {\n  return isSyncService()\n}\n\nexport function isStatsDbMigrator() {\n  return isStatsDbService() || isTestNotWorker()\n}\n\nexport function isModelDbMigrator() {\n  // Normally the web service is doing the migrations -- it's first to set up\n  // a library.\n  return isSyncService() || isWebService() || isTestNotWorker()\n}\n\n// Lazy so info can force --cleanup to run a backup:\nexport const isDbJanitorService = lazy(() => isSyncService() || isTestService())\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { Primitive } from \"../fe/Primitive\"\nimport { toA } from \"../fe/toA\"\n\nexport function asSet<T>(s: Maybe<Iterable<T>>): Set<T> {\n  return s instanceof Set ? s : new Set(toA(s))\n}\n\nexport function setEql<T>(a: Set<T>, b: Set<T>): boolean {\n  return (\n    toA(a.keys()).every(ea => b.has(ea)) && toA(b.keys()).every(ea => a.has(ea))\n  )\n}\n\nexport function getOrAdd<K, V>(s: Set<K>, k: K, onAdd: () => V): Maybe<V> {\n  if (k == null) throw new Error(\"null key\")\n  if (s.has(k)) {\n    return undefined\n  } else {\n    s.add(k)\n    return onAdd()\n  }\n}\n\n//\n// These only support primitives, as comparison is done with ==\n//\n\n/**\n * @return unique elements in a or b\n */\nexport function union<T extends Primitive>(\n  a: Iterable<T>,\n  b: Iterable<T>\n): Set<T> {\n  return new Set([...a, ...b])\n}\n\n/**\n * @return elements in a that are also in b\n */\nexport function intersection<T extends Primitive>(\n  a: Iterable<T>,\n  b: Iterable<T>\n): Set<T> {\n  const s = asSet(b)\n  return new Set([...a].filter(ea => s.has(ea)))\n}\n\n/**\n * @return elements in `a` that are not in `b`\n */\nexport function diff<T extends Primitive>(\n  a: Iterable<T>,\n  b: Iterable<T>\n): Set<T> {\n  const s = asSet(b)\n  return new Set([...a].filter(ea => !s.has(ea)))\n}\n","import { ServiceName, ServiceNames } from \"../fe/ServiceNames\"\nimport { setupLogger } from \"./log/SetupLogger\"\nimport { logStartup } from \"./LogStartup\"\nimport { isTest } from \"./NodeEnv\"\nimport { isMainService, serviceName } from \"./ServiceNames\"\n\nexport function setServiceName(s: ServiceName) {\n  // Normalize \"desktop\" to \"main\":\n  if (isMainService(s as any)) s = ServiceNames.main\n  const prior = serviceName.prior()\n  if (prior === s) return // already done\n\n  if (!isTest && prior != null && prior !== s) {\n    console.error(\"Don't set service name twice\", {\n      prior,\n      new: s\n    })\n  }\n  serviceName.set(s)\n  setupLogger()\n  logStartup()\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { time } from \"./async/PromiseTimer\"\n\n// TODO: add a cache to Shim0\n\nexport interface Shim0<R> {\n  (): Promise<R>\n  setShim(f: Maybe<() => Promise<R>>): void\n  hasShim(): boolean\n}\n\nexport function shim0<R>({\n  impl,\n  name\n}: {\n  impl: () => Promise<R>\n  name: string\n}): Shim0<R> {\n  let shim: undefined | (() => Promise<R>)\n\n  const f: Shim0<R> = () =>\n    time(\n      name + (shim == null ? \"(local)\" : \"(remote)\"),\n      shim != null ? shim() : impl()\n    )\n\n  f.setShim = (i: Maybe<() => Promise<R>>) => {\n    shim = i\n  }\n\n  f.hasShim = () => shim != null\n\n  return f\n}\n","import { stringify } from \"../fe/JSON\"\nimport { MemoizedThunk } from \"../fe/Lazy\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { isString } from \"../fe/String\"\nimport { SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { FifoCacheAsync } from \"./FifoCacheAsync\"\nimport { Shim0 } from \"./Shim0\"\nimport { ee } from \"./event/EventEmitter\"\n\n// NOTE: this is used statically, so BE CAREFUL WITH NEW CORE IMPORTS: they will\n// probably cause a dependency loop.\n\nexport interface Shim1<I, O> {\n  (input: I): Promise<O>\n  setShim(f: Maybe<(input: I) => SyncOrAsync<O>>): void\n  hasShim(): boolean\n  cache?: MemoizedThunk<FifoCacheAsync<O>>\n  cacheDelete(input: I): void\n}\n\nexport function shim1<I, R>({\n  name,\n  impl,\n  cache,\n  toKey = ea => (isString(ea) ? ea : stringify(ea))\n}: {\n  name: string\n  impl: (input: I) => SyncOrAsync<R>\n  cache?: MemoizedThunk<FifoCacheAsync<R>>\n  toKey?: (input: I) => string\n}): Shim1<I, R> {\n  let shim: Maybe<(input: I) => SyncOrAsync<R>>\n\n  const f = async (input: I) => {\n    const start = Date.now()\n    const result = await (shim != null ? shim(input) : impl(input))\n    ee().emit(\n      \"timing\",\n      name + (shim == null ? \"(local)\" : \"(remote)\"),\n      Date.now() - start\n    )\n    return result\n  }\n\n  const result: Shim1<I, R> = async (input: I) => {\n    if (cache == null) return f(input)\n    return cache().getOrSetAsync(toKey(input), async () => f(input))\n  }\n\n  result.setShim = (i: Maybe<(input: I) => Promise<R>>) => {\n    shim = i\n  }\n\n  result.hasShim = () => shim != null\n\n  result.cache = cache\n\n  result.cacheDelete = (input: I) => cache?.().delete(toKey(input))\n\n  return result\n}\n\nexport type ShimReturnType<\n  T extends Shim0<any> | Shim1<any, any> | ((...args: any) => any)\n> = T extends Shim0<infer R>\n  ? Promise<R>\n  : T extends Shim1<any, infer R>\n  ? Promise<R>\n  : T extends (...args: any) => infer R\n  ? R\n  : any\n","import { secondMs } from \"../fe/Date\"\n\n/**\n * For commands that don't need to wait for a disk to spin up, and only return\n * something like --version\n *\n * Note that this is considered the longest time a human can wait before\n * overwhelmed by WTF IS GOING ON.\n */\nexport const ShortCommandTimeoutMs = 7 * secondMs\n","import { at } from \"../fe/At\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { Comparable } from \"../fe/Primitive\"\n\nexport class SortedSet<T> {\n  readonly store: T[] = []\n\n  constructor(readonly valueOf: (t: T) => Maybe<Comparable>) {}\n\n  get length() {\n    return this.store.length\n  }\n\n  addAll(...t: Maybe<T>[]) {\n    return t.map(ea => this.add(ea))\n  }\n\n  findIndex(t: Maybe<T>) {\n    return this.findValueIndex(t == null ? undefined : this.valueOf(t))\n  }\n\n  findValueIndex(v: Maybe<Comparable>) {\n    if (v == null) return\n\n    let low = 0,\n      high = this.store.length - 1\n\n    while (low <= high) {\n      const mid = low + Math.floor((high - low) / 2)\n      const midV = this.valueOf(this.store[mid])!\n      if (v === midV) return { found: true, index: mid }\n      else if (v > midV) low = mid + 1\n      else high = mid - 1\n    }\n    return { found: false, index: low }\n  }\n\n  add(t: Maybe<T>) {\n    const idx = this.findIndex(t)\n    if (idx?.found === false) {\n      this.store.splice(idx.index, 0, t!)\n    }\n    return idx\n  }\n\n  /**\n   * @see https://github.com/tc39/proposal-relative-indexing-method#polyfill\n   */\n  at(idx: number) {\n    return at(this.store, idx)\n  }\n\n  toA() {\n    return [...this.store]\n  }\n\n  /**\n   * Remove all the entries less than the given entry\n   */\n  shiftLte(c: Comparable): T[] {\n    const idx = this.findValueIndex(c)\n    if (idx == null || (idx.index === 0 && !idx.found)) return []\n    if (idx.index === this.store.length - 1) {\n      const result = [...this.store]\n      this.store.length = 0\n      return result\n    } else {\n      return this.store.splice(0, idx.index + (idx.found ? 1 : 0))\n    }\n  }\n\n  /**\n   * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n   * @param start The zero-based location in the array from which to start removing elements.\n   * @param deleteCount The number of elements to remove.\n   */\n  splice(start: number, deleteCount?: number): T[] {\n    const result = this.store.splice(start, deleteCount)\n    return result\n  }\n\n  retainLastN(n: number) {\n    if (n < this.length) {\n      this.splice(0, this.store.length - n)\n    }\n    return this.store\n  }\n}\n","export const StartTs = Date.now()\n\nexport function runtimeMs() {\n  return Date.now() - StartTs\n}\n","import { stderr } from \"process\"\nimport { SyncOrAsync } from \"../fe/SyncOrAsync\"\nimport { stdoutEnded } from \"./StdoutEnded\"\nimport { crlf } from \"./fs/CRLF\"\nimport { streamEnded } from \"./fs/StreamEnded\"\nimport { Settings } from \"./settings/Settings\"\n\n/**\n * Emit `msg` to stdout unless `quiet` is true\n */\nexport function consoleLog(msg: string, ...optionalParams: any[]) {\n  if (!Settings.quiet.valueOrDefault && !stdoutEnded()) {\n    console.log(crlf(msg), ...optionalParams)\n  }\n}\n\nexport function consoleError(msg: string, ...optionalParams: any[]) {\n  if (!Settings.quiet.valueOrDefault && !streamEnded(stderr)) {\n    console.error(msg, ...optionalParams)\n  }\n}\n\nexport async function quietly<T>(f: () => SyncOrAsync<T>): Promise<T> {\n  const prior = Settings.quiet.envValue\n  try {\n    Settings.quiet.envValue = true\n    return await f()\n  } finally {\n    Settings.quiet.envValue = prior\n  }\n}\n","import { stdout } from \"process\"\nimport { streamEnded } from \"./fs/StreamEnded\"\n\nexport function stdoutEnded() {\n  return streamEnded(stdout)\n}\n","import process from \"process\"\nimport { WriteStream } from \"tty\"\nimport { notBlank } from \"../fe/Blank\"\nimport { stringify } from \"../fe/JSON\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { isWorkerService } from \"./ServiceNames\"\nimport { stdoutEnded } from \"./StdoutEnded\"\nimport { FailStr } from \"./error/ErrorFlags\"\nimport { isFatalError, isHealthCheckError } from \"./error/ErrorTypes\"\nimport { BaseFile } from \"./fs/BaseFile\"\nimport { streamEnded } from \"./fs/StreamEnded\"\nimport { Setting } from \"./settings/Setting\"\n\nexport const ReadyStr = JSON.stringify({ ready: true })\n\nexport function stdoutWriteReady(ready: boolean = true) {\n  if (!stdoutEnded()) {\n    process.stdout.write(JSON.stringify({ ready }) + \"\\n\")\n  }\n}\n\nexport function stdoutWrite(obj: any, ready?: boolean) {\n  return writeTTY({ obj, ready, stream: process.stdout })\n}\n\nexport function stderrWrite(obj: any) {\n  return writeTTY({ obj, stream: process.stdout })\n}\n\nexport function writeTTY({\n  obj,\n  ready,\n  stream\n}: {\n  obj: any\n  ready?: boolean\n  stream: Maybe<WriteStream>\n}) {\n  const ttyEnded = stream == null || streamEnded(stream)\n  // if (obj != null) {\n  //   try {\n  //     mkLogger(\"writeTTY\").debug(\"()\", { obj, ready, ttyEnded })\n  //   } catch {\n  //     // don't care if I can't log\n  //   }\n  // }\n\n  if (ttyEnded) return\n\n  const str = stringify(obj)\n  stream.write(str + \"\\n\")\n\n  // Only the worker service runs under batch-cluster\n  if (isWorkerService() && ready != null) {\n    if (str.includes(FailStr) || isFatalError(str) || isHealthCheckError(str)) {\n      stream.write(FailStr + \"\\n\")\n    } else {\n      stream.write(ReadyStr + \"\\n\")\n    }\n  }\n}\n\nexport function stdoutWriteSettings(...arr: Setting<any>[]) {\n  const o = {}\n  for (const ea of arr) {\n    ea.addToEnv(o)\n  }\n  stdoutWrite(o)\n}\n\nexport function stdoutWriteMigration(migrationFile: BaseFile) {\n  return stdoutWrite({ migration: migrationFile.name })\n}\n\nexport interface MigrationEvent {\n  migration: string\n}\n\nexport function isMigrationEvent(o: any): o is MigrationEvent {\n  return o != null && notBlank(o.migration)\n}\n\nexport const StdoutWrite = {\n  shutdownSync: () => stdoutWrite({ shutdownSync: true }),\n  restartSync: () => stdoutWrite({ restartSync: true }),\n  forceRestartSync: () => stdoutWrite({ forceRestartSync: true }),\n  rebuildLibrary: () => stdoutWrite({ rebuildLibrary: true }),\n  shutdown: () => stdoutWrite({ shutdown: true })\n}\n","import { compactBlanks, isEmpty, uniq, uniqBy2 } from \"../fe/Array\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank, notBlank } from \"../fe/Blank\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe, MaybeNull } from \"../fe/MaybeTypes\"\nimport { mapNumeric, times, toFloat } from \"../fe/Number\"\nimport { padding } from \"../fe/Pad\"\nimport { cmp } from \"../fe/Primitive\"\nimport { strslice } from \"../fe/String\"\nimport { toA } from \"../fe/toA\"\nimport { toS } from \"../fe/toS\"\nimport { flatZip, greatestBy } from \"./Array\"\nimport { escapeRegExp } from \"./RegExp\"\nimport { NonRetriableErrorFlag } from \"./error/ErrorFlags\"\n\n// TODO: inline\nexport { splitFirst } from \"../fe/SplitFirst\"\nexport {\n  ellipsize,\n  ensurePrefix,\n  ensureSuffix,\n  isString,\n  stripPrefix,\n  stripSuffix,\n  wrap\n} from \"../fe/String\"\n\nconst he = require(\"he\")\n\nexport function rightPad(s: any, minLength: number, padChar: string): string {\n  if (padChar.length === 0) throw new Error(\"rightPad() given empty pad\")\n  const str = String(s)\n  return str + padding(padChar, minLength - str.length)\n}\n\nexport function padReplace(\n  s: string,\n  fromIdx: number,\n  length: number,\n  padChar: string\n) {\n  return (\n    strslice(s, 0, fromIdx) +\n    padding(padChar, length) +\n    strslice(s, fromIdx + length)\n  )\n}\n\nexport function contains(\n  haystack: string,\n  needle: string,\n  fromPosition?: number\n): boolean {\n  return toS(haystack).indexOf(toS(needle), fromPosition) > -1\n}\n\nexport function countChars(\n  haystack: string,\n  needle: string,\n  fromPosition = 0\n): number {\n  if (needle == null || needle.length === 0) return 0\n  // NOTE: this assumes .indexOf is going to be quick native code, and\n  // recursion will be faster than a simple for loop over ths string\n  // characters.\n  const idx = haystack.indexOf(needle, fromPosition)\n  return idx === -1 ? 0 : 1 + countChars(haystack, needle, idx + needle.length)\n}\n\nexport function maybeToS(a?: any): Maybe<string> {\n  return a == null ? undefined : String(a)\n}\n\nexport function trim(arr: any[]): string[] {\n  return arr.map(toS).filter(ea => notBlank(ea))\n}\n\nexport function splitEvery(s: string, n: number, maxSplits?: number): string[] {\n  const sliceTimes =\n    Math.min(Math.ceil(s.length / n), maxSplits ?? s.length) - 1\n  if (sliceTimes <= 0) return [s]\n  return [\n    ...times(sliceTimes, i => s.slice(i * n, (i + 1) * n)),\n    s.slice(sliceTimes * n)\n  ]\n}\n\n/**\n * Removes the first capture group defined by `re` found in `s`.\n */\nexport function spliceCapture(\n  s: string,\n  re: RegExp\n): Maybe<{\n  captured: string\n  uncaptured: string\n  unmatched: string\n  matchedIndex: number\n}> {\n  const m = re.exec(s)\n  if (m == null || m[1] == null) return\n  const matchedIndex = m[0].indexOf(m[1]) + m.index\n  return {\n    captured: m[1],\n    uncaptured:\n      s.substring(0, matchedIndex) + s.substring(matchedIndex + m[1].length),\n    unmatched: s.substring(0, m.index) + s.substring(m.index + m[0].length),\n    matchedIndex\n  }\n}\n\nexport function stripPrefixIgnoreCase(s: string, prefix: string): string {\n  s = toS(s)\n  prefix = toS(prefix)\n  return startsWithIgnoreCase(s, prefix) ? s.slice(prefix.length) : s\n}\n\nexport function stripSuffixIgnoreCase(\n  s: string,\n  suffix: string,\n  opts: { normalize?: boolean } = {}\n): string {\n  if (suffix == null) return s\n  const str = toS(s)\n  const sfx = toS(suffix)\n\n  return sfx.length > 0 && equalsIgnoreCase(str.slice(-sfx.length), sfx, opts)\n    ? str.slice(0, -sfx.length)\n    : str\n}\n\nexport function gist(a: string, maxPre = 80, maxPost = 80): string {\n  const s = toS(a)\n  const charsOmitted = s.length - (maxPre + maxPost)\n  return charsOmitted <= 0\n    ? s\n    : s.slice(0, maxPre).trim() +\n        \" …(+\" +\n        charsOmitted +\n        \" chars)…\" +\n        s.slice(-maxPost).trim()\n}\n\nexport function isLowerCase(s: Maybe<string>): boolean {\n  return toS(s).toLocaleLowerCase() === s\n}\n\nexport function isUpperCase(s: Maybe<string>): boolean {\n  return toS(s).toLocaleUpperCase() === s\n}\nconst CapRE = /^[A-Z]/\n\n/**\n * Is the first character in `s` `[A-Z]`?\n */\nexport function isFirstCharAZ(s: Maybe<string>): boolean {\n  return CapRE.test(toS(s))\n}\n\nexport function capitalize(s: Maybe<string>): string {\n  s = toS(s)\n  return blank(s) ? s : strslice(s, 0, 1).toLocaleUpperCase() + strslice(s, 1)\n}\n\nexport function compareIgnoreCase(a: string, b: string) {\n  const result = a.localeCompare(b, undefined, { sensitivity: \"base\" })\n  return result === 0\n    ? // for determinism:\n      a.localeCompare(b)\n    : result\n}\n\nexport function equalsIgnoreCase(\n  a: MaybeNull<string | Buffer>,\n  b: MaybeNull<string | Buffer>,\n  { normalize = true }: { normalize?: boolean } = {}\n): boolean {\n  if (a == null || b == null) return false\n  const as = toS(a)\n  const bs = toS(b)\n  if (as.length !== bs.length) return false\n  if (as === bs) return true\n  // cheap, but false is sometimes wrong (like in Turkish):\n  if (as.toLowerCase() === bs.toLowerCase()) return true\n  return (\n    (normalize ? as.normalize() : as).localeCompare(\n      normalize ? bs.normalize() : bs,\n      undefined,\n      { sensitivity: \"base\" }\n    ) === 0\n  )\n}\n\nexport function uniqIgnoreCase(arr: string[]): string[] {\n  return uniqBy2(arr, equalsIgnoreCase)\n}\n\nexport function sortIgnoreCase(arr: Iterable<string>): string[] {\n  return toA(arr).sort(compareIgnoreCase)\n}\n\nexport function sortByCaseInsensitive<T>(\n  arr: Iterable<T> | T[],\n  f: (t: T, index: number) => Maybe<string>\n): T[] {\n  return toA(arr)\n    .filter(ea => ea != null)\n    .map((item, idx) => ({\n      item,\n      cmp: map(f(item, idx), ea => [ea, idx]) as [string, number]\n    }))\n    .filter(ea => ea.cmp != null)\n    .sort((a, b) => {\n      const ea = compareIgnoreCase(a.cmp[0], b.cmp[0])\n      return ea !== 0 ? ea : cmp(a.cmp[1], b.cmp[1])\n    })\n    .map(ea => ea.item)\n}\n\n/** TODO DELETE IF UNUSED\n * @return true iff `haystack` starts with `needle`\n */\nexport function startsWithIgnoreCase(\n  haystack: string,\n  needle: string\n): boolean {\n  return haystack == null ||\n    needle == null ||\n    needle.length === 0 ||\n    haystack.length === 0\n    ? false\n    : equalsIgnoreCase(haystack.substring(0, needle.length), needle)\n}\n\n/**\n * @return the first item in `haystack` that is a case-insensitive substring of\n * `needle`.\n */\nexport function firstSubstringIgnoreCase(\n  haystack: string[],\n  needle: string\n): Maybe<{ index: number; match: string }> {\n  if (isEmpty(haystack) || blank(needle)) return\n  for (const ea of haystack) {\n    if (equalsIgnoreCase(ea, needle)) return { index: 0, match: ea }\n  }\n  for (const ea of haystack) {\n    const index = needle.indexOf(ea)\n    if (index >= 0) return { index, match: ea }\n  }\n  const nn = needle.normalize()\n  for (const ea of haystack) {\n    {\n      const index = nn.indexOf(ea)\n      if (index >= 0) return { index, match: ea }\n    }\n    const hn = ea.normalize()\n    {\n      const index = nn.indexOf(hn)\n      if (index >= 0) return { index, match: hn }\n    }\n    {\n      const nl = nn.toLowerCase()\n      const hl = hn.toLowerCase()\n      const index = nl.indexOf(hl)\n      if (index >= 0) return { index, match: hl }\n    }\n  }\n  return\n}\n\n/**\n * Is any item in `haystack` included in `needle`?\n */\nexport function includesIgnoreCase(\n  haystack: string[],\n  needle: string\n): boolean {\n  return isEmpty(haystack) || blank(needle)\n    ? false\n    : haystack.some(ea => equalsIgnoreCase(needle, ea))\n}\n\nexport function reverse(s: string): string {\n  return s == null ? s : [...s].reverse().join(\"\")\n}\n\nexport type Stringable = { valueOf(): string }\n\n/**\n * Return the longest-matching prefix pattern from `patterns` that needle\n * startsWith.\n */\nexport function longestPrefix(\n  needle: string,\n  patterns: string[]\n): Maybe<string> {\n  return greatestBy(\n    patterns.filter(ea => needle.startsWith(ea)),\n    ea => ea.length\n  )\n}\n\n// \\u001b[90m\nexport function stripAnsiEsc(s: string): string {\n  // DON'T REPLACE WITH https://github.com/chalk/ansi-regex/blob/main/index.js :: that shite doesn't work.\n\n  return toS(s).replace(/\\u001b\\[[0-9;]+[a-z]/gi, \"\")\n}\n\nconst Smart2Dumb: [RegExp, string][] = [\n  [/[‘’]/g, `'`],\n  [/[“”„«»”〃]/g, `\"`]\n]\n\nexport function dumbquote(s: string): string {\n  return Smart2Dumb.reduce(\n    (acc, [smart, dumb]) => acc.replace(smart, dumb),\n    s\n  ).normalize()\n}\n\nconst quoted = /^(['\"]).+\\1$/\n\nexport function stripQuotes(s: string): string {\n  if (blank(s)) return s\n  // Some Vivitar cameras have numeric models (!!) so we need to toS().\n  s = toS(s).trim()\n  if (quoted.exec(dumbquote(s)) != null) {\n    s = s.slice(1, -1).trim()\n  }\n  return s\n}\n\nexport function wbrPath(s: string): string {\n  return s\n    .split(/(?<=[\\\\/_,:=-]+)/)\n    .map(ea => he.escape(ea.normalize()) as string)\n    .join(\"<wbr>\")\n}\n\nexport function zipStrings(...arr: string[]): string {\n  let s = \"\"\n  const cb = compactBlanks(arr)\n  const maxLen = Math.max(...cb.map(ea => ea.length))\n  for (let j = 0; j < maxLen; j++) {\n    for (let i = 0; i < cb.length; i++) {\n      map(cb[i], str => map(str[j], ea => (s += ea)))\n    }\n  }\n  return s\n}\n\nexport function splitKeep(s: string, re: RegExp): string[] {\n  const result = splitUp(s, re)\n  return flatZip(result.nonSeparators, result.separators).filter(\n    ea => ea != null && ea.length > 0\n  ) as string[]\n}\n\n/**\n * @return (nonSeparator + separator)*\n */\nexport function splitUp(\n  s: string,\n  re: RegExp\n): { nonSeparators: string[]; separators: string[] } {\n  if (!re.global)\n    throw new Error(\"bad regex (missing global flag)\" + NonRetriableErrorFlag)\n  const nonSeparators: string[] = []\n  const separators: string[] = []\n  let pos = 0\n  let m: RegExpExecArray | null\n  while ((m = re.exec(s)) != null) {\n    // This is necessary to avoid infinite loops with zero-width matches\n    if (m.index === re.lastIndex) {\n      re.lastIndex++\n    } else {\n      re.lastIndex = m[0].length + m.index\n      nonSeparators.push(s.substring(pos, m.index))\n      separators.push(s.substring(m.index, re.lastIndex))\n      pos = re.lastIndex\n    }\n  }\n  if (pos < s.length) {\n    nonSeparators.push(s.substring(pos))\n  }\n  return { nonSeparators, separators }\n}\n\nexport function sortNaturalBy(line: string) {\n  return splitKeep(toS(line), /\\d+(?:\\.\\d+)?/g).map(\n    ea => toFloat(ea.trim()) ?? ea\n  )\n}\n\nexport function sortNatural(lines: string[]): string[] {\n  return sortBy(lines, line => sortNaturalBy(line))\n}\n\nexport function stripDiacritics(s: string): string {\n  // see https://stackoverflow.com/a/37511463/1268016\n  return toS(s)\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n}\n\nexport function stripEmoji(s: string): string {\n  // see https://stackoverflow.com/a/38987183/1268016\n  return toS(s).replace(\n    /\\ud83c[\\udf00-\\udfff]|\\ud83d[\\udc00-\\ude4f]|\\ud83d[\\ude80-\\udeff]/g,\n    \"\"\n  )\n}\n\n/**\n * Remove strings that are prefixes to longer strings in `arr`, ignoring case\n * differences\n * @example ([\"abc\", \"bcd\", \"a\", \"ab\", \"b\"]) -> [\"abc\", \"bcd\"]\n */\nexport function uniqSubstr(arr: string[]): string[] {\n  const rev = sortIgnoreCase(compactBlanks(arr))\n  const result = rev.filter(\n    (ea, idx) => !startsWithIgnoreCase(rev[idx + 1], ea)\n  )\n  return sortBy(result, ea => arr.indexOf(ea))\n}\n\nexport function commonPrefix(a: Maybe<string>, b: Maybe<string>) {\n  if (blank(a) || blank(b)) return \"\"\n  const max = Math.min(a.length, b.length)\n  for (let i = 0; i < max; i++) {\n    if (a[i] !== b[i]) {\n      return a.slice(0, i)\n    }\n  }\n  return a.slice(0, max)\n}\n\nexport function commonPrefixIgnoreCase(\n  a: Maybe<string>,\n  b: Maybe<string>,\n  opts: { normalize?: boolean } = {}\n) {\n  if (blank(a) || blank(b)) return \"\"\n  const max = Math.min(a.length, b.length)\n  for (let i = 0; i < max; i++) {\n    if (!equalsIgnoreCase(a[i], b[i], opts)) {\n      return a.slice(0, i)\n    }\n  }\n  return a.slice(0, max)\n}\n\nexport function commonPrefixLengthIgnoreCase(\n  a: Maybe<string>,\n  b: Maybe<string>,\n  opts: { normalize?: boolean } = {}\n): number {\n  if (blank(a) || blank(b)) return 0\n  const max = Math.min(a.length, b.length)\n  for (let i = 0; i < max; i++) {\n    if (!equalsIgnoreCase(a[i], b[i], opts)) {\n      return i\n    }\n  }\n  return max\n}\n\nexport function indexOfNonSpace(s: string): Maybe<number> {\n  return s.match(/\\S/)?.index\n}\n\nexport function lastIndexOfNonSpace(s: string): Maybe<number> {\n  return s.match(/\\S\\s*$/)?.index\n}\n\nexport function trimLeftPadding(s: string): string {\n  return s.replace(/^[-0_\\s]+/, \"\")\n}\n\n/**\n * Convert \"hello\\040world\" to \"hello world\"\n */\nexport function unoctal(s: string): string {\n  const o = splitUp(s, /\\\\\\d\\d\\d/g)\n\n  return flatZip(\n    o.nonSeparators,\n    o.separators.map(ea =>\n      ea?.length === 4\n        ? mapNumeric(parseInt(ea.slice(1), 8), String.fromCharCode)\n        : undefined\n    )\n  )\n    .map(toS)\n    .join(\"\")\n}\n\nconst CommentRE = /#.*$/gm\n\nexport function stripComments(s: string): string {\n  return s.replace(CommentRE, \"\")\n}\n\nexport function uniqPath(s: MaybeNull<string>[], sep = \":\"): string {\n  // This impl may be easier to follow than 2 compactBlanks() and a uniq()\n  const set = new Set<string>()\n  for (const ea of toA(s)) {\n    if (ea != null && !blank(ea)) {\n      for (const ea2 of ea.split(sep)) {\n        if (!blank(ea2)) set.add(ea2)\n      }\n    }\n  }\n  return [...set].join(sep)\n}\n\n/**\n * First needle wins, all other needles are replaced with `replacement`. Used\n * to make error messages a bit shorter.\n */\nexport function dedupeNeedle(\n  arr: string[],\n  needle: string,\n  replacement: string\n) {\n  if (blank(needle)) return arr\n  const re = new RegExp(\n    // `(?<quot>['\"]?)` + escapeRegExp(needle) + `$<quot>`,\n    `(['\"]?)` + escapeRegExp(needle) + `\\\\1`,\n    \"mg\"\n  )\n  const idx = arr.findIndex(ea => re.test(ea))\n  const dedupeRe = new RegExp(\n    \"(\" + escapeRegExp(replacement) + \"[,:\\\\s]*){2,}\",\n    \"gmi\"\n  )\n  const trimRe = /(^\\s+)|(\\s+$)/gm\n  if (idx < 0) return arr\n  for (let i = idx + 1; i < arr.length; i++) {\n    arr[i] = arr[i]\n      .replace(re, replacement)\n      .replace(/(\\s)\\s+/gm, \" \")\n      // de-stutter:\n      .replace(dedupeRe, replacement)\n      .replace(trimRe, \"\")\n  }\n  return arr\n}\n\nexport function splitUniq(arr: Maybe<string>[], delim: string): string[] {\n  return uniq(\n    compactBlanks(\n      arr\n        .join(delim)\n        .split(delim)\n        .map(ea => ea.trim())\n    )\n  )\n}\n","import { toS } from \"../fe/toS\"\n\nexport function camel2snake(s: string): string {\n  return toS(s)\n    .replace(/([A-Z])([a-z])/g, (_, a, b) => \"_\" + a.toLowerCase() + b)\n    .replace(/[A-Z]+|[0-9]+/g, ea => \"_\" + ea)\n    .replace(/^_/, \"\")\n    .replace(/_+/g, \"_\")\n}\n\nexport function camel2words(s: string): string {\n  return toS(s)\n    .replace(/([A-Z])([a-z])/g, (_, a, b) => \" \" + a.toLowerCase() + b)\n    .replace(/[A-Z]+|[0-9]+/g, ea => \" \" + ea)\n    .trim()\n}\n\nexport function snake2camel(s: string): string {\n  return toS(s).replace(/_([A-Z])/gi, (_, a) => a.toUpperCase())\n}\n\nexport function asObjectKey(s: string) {\n  return snake2camel(\n    s.replace(/^[A-Z]+/, ea => ea.toLowerCase()).replace(/[^a-z]+/gi, \"_\")\n  )\n}\n","import crypto from \"crypto\"\nimport { HashBits } from \"./HashBits\"\nimport { GeoRadix, Radix58 } from \"./math/Radix\"\n\nexport function stringShaToBuffer(input: string, msbits = HashBits): Buffer {\n  return crypto\n    .createHash(\"sha512\")\n    .update(input)\n    .digest()\n    .subarray(0, msbits / 8)\n}\n/**\n * Encoding of the SHA of `input`.\n */\n\nexport function shortStringSha(\n  input: string,\n  len = 9,\n  radix = Radix58,\n  msbits = 224 // < pre-v0.3.5 used 224 bits, so this keeps those SHAs stable\n): string {\n  return radix.encodeBuffer(stringShaToBuffer(input, msbits)).substring(0, len)\n}\n// filesystem-safe short shas\n\nexport function shortFsStringSha(\n  input: string,\n  len = 24,\n  radix = GeoRadix,\n  msbits = 224 // < pre-v0.3.5 used 224 bits, so this keeps those SHAs stable\n): string {\n  return shortStringSha(input, len, radix, msbits)\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { toS } from \"../fe/toS\"\n\nexport function DefaultNormalizer(ea: Maybe<string>): Maybe<string> {\n  return ea == null || ea === \"\" ? undefined : toS(ea).toLowerCase().normalize()\n}\n","import { commonPrefixLength, compactBlanks, count } from \"../fe/Array\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { clamp, mapNumericOr, times, toInt } from \"../fe/Number\"\nimport { leftPad } from \"../fe/Pad\"\nimport { Primitive } from \"../fe/Primitive\"\nimport { strslice, substr } from \"../fe/String\"\nimport { toS } from \"../fe/toS\"\nimport { RadixAlphaNum } from \"./math/Radix\"\nimport { Array2D } from \"./Number\"\nimport { firstThunk } from \"./Object\"\nimport { intersection } from \"./Set\"\nimport { stripDiacritics } from \"./String\"\n\n/**\n * @return [0,1], where 0 means no common string, and 1 is equality\n */\nexport function commonSubstringRatio(a: string, b: string): number {\n  return [a, b].some(blank)\n    ? 0\n    : lcs(a, b).length / Math.max(a.length, b.length)\n}\n\n/**\n * @see https://en.wikipedia.org/wiki/Longest_common_substring_problem\n */\nexport function lcs(a: string, b: string): string {\n  if (a == null) return b\n  if (b == null) return a\n  a = a.normalize()\n  b = b.normalize()\n  if (a === b || b.includes(a)) return a\n  if (a.includes(b)) return b\n  const m = new Array2D(a.length)\n  let z = 0\n  let ret = \"\"\n  for (let i = 0; i < a.length; i++) {\n    for (let j = 0; j < b.length; j++) {\n      if (a[i] === b[j]) {\n        if (i === 0 || j === 0) {\n          m.set(i, j, 1)\n        } else {\n          m.set(i, j, m.get(i - 1, j - 1) + 1)\n        }\n        if (m.get(i, j) >= z) {\n          z = m.get(i, j)\n          ret = substr(a, i - z + 1, z)\n        }\n      }\n    }\n  }\n  return ret\n}\n\n/**\n * Hamming distance. Note that `a` and `b` (before or after normalization) must\n * be the same length, or `undefined` will be returned.\n *\n * Note that this is case-sensitive!\n *\n * @see https://en.wikipedia.org/wiki/Hamming_distance\n */\nexport function hamming(a: string, b: string): Maybe<number> {\n  if (a == null || b == null) return undefined\n  if (a === b) return 0\n  const r = _hamming(a, b)\n  if (r != null) return r\n  const an = a.normalize()\n  const bn = b.normalize()\n  return a !== an || b !== bn ? _hamming(an, bn) : undefined\n}\n\nfunction _hamming(a: string, b: string): Maybe<number> {\n  return a.length !== b.length\n    ? undefined\n    : [...a].reduce((acc, ea, idx) => (ea === b.charAt(idx) ? acc : acc + 1), 0)\n}\n\n/**\n * Return the Sørensen–Dice similarity index between two strings.\n * @see https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient\n * @return [0,1]. O for no match, 1 for full, case-insensitive match.\n */\nexport function diceCoeff(a: string, b: string): number {\n  const A = a.toUpperCase().normalize()\n  const B = b.toUpperCase().normalize()\n  return firstThunk<number>(\n    () => (A === B ? 1 : undefined),\n    () => (blank(a) !== blank(b) ? 0 : undefined),\n    () => (a.length === 1 && b.length === 1 ? 0 : undefined),\n    () => {\n      const aGrams = bigrams(A)\n      const bGrams = bigrams(B)\n      const intersections = nonUniqIntersection(aGrams, bGrams).length\n      return (2 * intersections) / (aGrams.length + bGrams.length)\n    }\n  )!\n}\n\n/**\n * Convert \"abcd\" to [\"ab\", \"bc\", \"cd\"]\n */\nexport function bigrams(s: string): string[] {\n  if (s == null || s.length === 0) return []\n  const arr = [...s]\n  return arr.slice(0, -1).map((ea, i) => ea + arr[i + 1])\n}\n\nexport function nonUniqIntersection<T extends Primitive>(a: T[], b: T[]): T[] {\n  const uniqIntersections = intersection(a, b)\n  const i: T[] = []\n  uniqIntersections.forEach(ea => {\n    const n = Math.min(\n      count(a, s => s === ea),\n      count(b, s => s === ea)\n    )\n    times(n, () => i.push(ea))\n  })\n  return i\n}\n\n/**\n * Tries to prevent numeric overflow:\n */\nfunction diffWithoutCommonPrefix(\n  a: string,\n  b: string,\n  f: (s: string) => number\n): number {\n  const cpc = commonPrefixLength(a, b)\n  return f(strslice(a, cpc)) - f(strslice(b, cpc))\n}\n\n/**\n * Return the value of the longest string of digits in `s`\n */\nfunction longestNumericString(s: string): Maybe<string> {\n  const digits = compactBlanks(toS(s).split(/[^\\d]+/))\n  return sortBy(digits, ea => -ea.length)[0]\n}\n\nexport function lnsDiff(a: string, b: string): number {\n  const [a1, b1] = [a, b]\n    .map(longestNumericString)\n    .map(ea => (blank(ea) ? \"\" : ea))\n  return diffWithoutCommonPrefix(a1, b1, s => toInt(s, { defaultValue: 0 })!)\n}\n\nconst notAlphaNumRe = /[^0-9a-z]+/gi\nexport function radixDiff(a: string, b: string): number {\n  const [a1, b1] = [a, b].map(s =>\n    stripDiacritics(s).replace(notAlphaNumRe, \"\").toLowerCase()\n  )\n  return diffWithoutCommonPrefix(a1, b1, s => RadixAlphaNum.decode(s)!)\n}\n\nexport function str(a: string, b: string) {\n  return {\n    pref: commonPrefixLength(a, b),\n    ham: hamming(a, b),\n    dice: diceCoeff(a, b),\n    lns: lnsDiff(a, b),\n    radixDiff: radixDiff(a, b)\n  }\n}\n\n/**\n * @return the number of non-lower-case characters in `s`\n */\nexport function lcdiff(s: string): number {\n  return count(\n    [...s.normalize()],\n    ea => ea.toLowerCase().localeCompare(ea) !== 0\n  )\n}\n\n/**\n * @return the weighted average of the character differences per character index\n */\nexport function positionalDiff(a: string, b: string) {\n  let result: Maybe<number>\n  for (let i = Math.max(a.length, b.length); i >= 0; i--) {\n    const aChar = mapNumericOr(a.charCodeAt(i), ea => ea, 256)\n    const bChar = mapNumericOr(b.charCodeAt(i), ea => ea, 256)\n    const diff = clamp(-256, 256, aChar - bChar)\n    if (result == null) result = diff\n    else result = (result + diff) / 2\n  }\n  return result\n}\n\nexport function paddedPositionalDiff(a: string, b: string, minLen = 8) {\n  return positionalDiff(leftPad(a, minLen, \" \"), leftPad(b, minLen, \" \"))\n}\n","import { stringify } from \"../fe/JSON\"\nimport { sortedKeys } from \"./Object\"\n\n/**\n * Returns JSON.stringify with keys in sorted order (if `o` is a Record)\n */\nexport function stringifySorted(o: any): string {\n  return stringify(sortedKeys(o))\n}\n","import { sortBy } from \"../fe/ArraySort\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { Primitive } from \"../fe/Primitive\"\nimport { setUnrefInterval } from \"./async/Timers\"\n\nexport class TTLMap<K extends Primitive, V> implements Map<K, V> {\n  readonly [Symbol.toStringTag] = \"TTLMap\"\n\n  readonly #expireListeners: ((k: K, v: V) => void)[] = []\n\n  // Maps entries to insertion time values. Entries should expire after ttlMs.\n  readonly #delegate = new Map<K, { ts: number; v: V }>()\n\n  #ttlMs!: number\n  #interval!: NodeJS.Timeout\n\n  constructor(ttlMs: number) {\n    this.ttlMs = ttlMs\n  }\n\n  get ttlMs() {\n    return this.#ttlMs\n  }\n\n  set ttlMs(ms: number) {\n    this.#ttlMs = ms\n    if (this.#interval != null) {\n      clearInterval(this.#interval)\n    }\n    this.#interval = setUnrefInterval(() => this.#vacuum(), ms)\n    this.#vacuum()\n  }\n\n  clear(): this {\n    this.#delegate.clear()\n    return this\n  }\n\n  delete(key: K): boolean {\n    return this.#delegate.delete(key)\n  }\n\n  deleteAll(keys: K[]) {\n    for (const ea of keys) {\n      this.delete(ea)\n    }\n  }\n\n  forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void): void {\n    for (const [k, v] of this.#delegate.entries()) {\n      if (this.#chkEntry(k, v)) {\n        callbackfn(v.v, k, this)\n      }\n    }\n  }\n\n  get(key: K): V | undefined {\n    const v = this.#delegate.get(key)\n    if (this.#chkEntry(key, v)) {\n      v.ts = Date.now()\n      return v.v\n    } else {\n      return\n    }\n  }\n\n  getOrMaybeSet(key: K, valueThunk: () => Maybe<V>): Maybe<V> {\n    const v = this.#delegate.get(key)\n    if (this.#chkEntry(key, v)) return v.v\n    const value = valueThunk()\n    if (value != null) this.set(key, value)\n    return value\n  }\n\n  /**\n   * Get the timestamp of the last set() or get() for the given key.\n   */\n  lastSetOrGetTs(key: K) {\n    // NOTE: don't use this.get() here: that'd update the timestamp to now!\n    return this.#delegate.get(key)?.ts\n  }\n\n  set(key: K, value: V): this {\n    this.#delegate.set(key, { ts: Date.now(), v: value })\n    return this\n  }\n\n  has(key: K): boolean {\n    return this.#chkEntry(key, this.#delegate.get(key))\n  }\n\n  get size() {\n    this.#vacuum()\n    return this.#delegate.size\n  }\n\n  keys(): IterableIterator<K> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<K> {\n      for (const [k, v] of self.#delegate.entries()) {\n        if (self.#chkEntry(k, v)) {\n          yield k\n        }\n      }\n    }\n    return iter()\n  }\n\n  values(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<V> {\n      for (const [k, v] of self.#delegate.entries()) {\n        if (self.#chkEntry(k, v)) {\n          yield v.v\n        }\n      }\n    }\n    return iter()\n  }\n\n  valuesByRecency() {\n    this.#vacuum()\n    return sortBy(this.#delegate.values(), ea => -ea.ts)\n  }\n\n  entries(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[K, V]> {\n      for (const [k, v] of self.#delegate.entries()) {\n        if (self.#chkEntry(k, v)) {\n          yield [k, v.v]\n        }\n      }\n    }\n    return iter()\n  }\n\n  [Symbol.iterator](): IterableIterator<[K, V]> {\n    return this.entries()\n  }\n\n  on(_event: \"expire\", listener: (k: K, v: V) => void) {\n    this.#expireListeners.push(listener)\n  }\n\n  #chkEntry(\n    key: K,\n    value: Maybe<{ v: V; ts: number }>\n  ): value is { v: V; ts: number } {\n    if (value == null) {\n      return false\n    } else if (value.ts + this.ttlMs > Date.now()) {\n      return true\n    } else {\n      this.#delegate.delete(key)\n      for (const ea of this.#expireListeners) {\n        ea(key, value.v)\n      }\n      return false\n    }\n  }\n\n  /**\n   * remove all expired entries\n   */\n  #vacuum() {\n    for (const [k, v] of this.#delegate.entries()) {\n      this.#chkEntry(k, v)\n    }\n  }\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\nimport { setUnrefTimeout } from \"./async/Timers\"\n\nexport class TTLSet<T> implements Set<T> {\n  readonly [Symbol.toStringTag] = \"TTLSet\"\n  private readonly expireListeners: ((k: T) => void)[] = []\n\n  // Maps entries to insertion time values. Entries should expire after value + this.ttlMs.\n  private readonly delegate = new Map<T, number>()\n\n  /**\n   * @param ttlMs if external consumers change this public value, we won't\n   * auto-re-vacuum existing values, but the new ttl will be correct for new\n   * values.\n   */\n  constructor(\n    public ttlMs: number,\n    readonly scheduleExpirationTimers = false\n  ) {}\n\n  get size(): number {\n    this.#vacuum()\n    return this.delegate.size\n  }\n\n  add(value: T): this {\n    this.delegate.set(value, Date.now())\n    if (this.scheduleExpirationTimers)\n      setUnrefTimeout(() => this.#vacuum(), this.ttlMs + 1)\n    return this\n  }\n\n  addAll(values: T[]) {\n    for (const ea of values) {\n      this.add(ea)\n    }\n    return\n  }\n\n  addIfMissing<R>(value: T, onMissing: () => R): Maybe<R> {\n    const prior = this.delegate.get(value)\n    if (prior == null || this.#isEntryExpired(value, prior)) {\n      this.add(value)\n      return onMissing()\n    } else {\n      return\n    }\n  }\n\n  clear(): this {\n    this.delegate.clear()\n    return this\n  }\n\n  delete(value: T): boolean {\n    return this.delegate.delete(value)\n  }\n\n  forEach(callbackfn: (value: T, index: T, set: Set<T>) => void): void {\n    for (const [value, ctime] of this.delegate) {\n      if (!this.#isEntryExpired(value, ctime)) {\n        callbackfn(value, value, this)\n      }\n    }\n  }\n\n  has(value: Maybe<T>): boolean {\n    return value != null && !this.#isEntryExpired(value)\n  }\n\n  values(): IterableIterator<T> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<T> {\n      for (const [k, v] of self.delegate) {\n        if (!self.#isEntryExpired(k, v)) {\n          yield k\n        }\n      }\n    }\n    return iter()\n  }\n\n  readonly keys = this.values.bind(this)\n\n  entries(): IterableIterator<[T, T]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[T, T]> {\n      for (const [k, v] of self.delegate) {\n        if (!self.#isEntryExpired(k, v)) {\n          yield [k, k]\n        }\n      }\n    }\n    return iter()\n  }\n\n  toA(): T[] {\n    this.#vacuum()\n    return [...this.delegate.keys()]\n  }\n\n  [Symbol.iterator](): IterableIterator<T> {\n    return this.values()\n  }\n\n  on(_event: \"expire\", listener: (k: T) => void) {\n    this.expireListeners.push(listener)\n  }\n\n  /**\n   * @param ctime is the last-set time associated to the key.\n   */\n  #isEntryExpired(key: T, ctime?: number): boolean {\n    ctime ??= this.delegate.get(key)\n    if (ctime == null || !this.delegate.has(key)) return true\n\n    const expired = ctime <= Date.now() - this.ttlMs\n    if (expired) {\n      // delete the key before we tell the listerners\n      this.delegate.delete(key)\n      for (const ea of this.expireListeners) {\n        ea(key)\n      }\n    }\n    return expired\n  }\n\n  /**\n   * remove all expired entries\n   */\n  #vacuum() {\n    for (const [k, v] of this.delegate) {\n      this.#isEntryExpired(k, v)\n    }\n  }\n}\n","export const TestLibraryDirPrefix = \"test-ps-lib-\"\n","import { lazy } from \"../core/Lazy\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { blank } from \"../fe/Blank\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { toS } from \"../fe/toS\"\nimport { isTest } from \"./NodeEnv\"\nimport { GeoRadix } from \"./math/Radix\"\n\nlet lastTime = 0\n\nconst UidRadix = GeoRadix\n\n// only exposed for tests:\nexport const uidSuffix = lazy(() => \"-\" + UidRadix.randomChars(7))\n\n/**\n * Generate a unique ID with filesystem safe characters that sorts\n * chronologically. This is required by FsLock to ensure older locks are\n * acquired before newer locks.\n */\nexport function uid() {\n  // No need to pad the date:\n\n  // > GeoRadix.encode(new Date(\"2019-12-31\").getTime())\n  // '1exdn1300'\n  // > GeoRadix.encode(new Date(\"2064-12-31\").getTime()) <- MTBMF Mean Time Before Matt Failure\n  // '2r80m3600'\n\n  lastTime = Math.max(Date.now(), lastTime + 1)\n  return uidForTs(lastTime)\n}\n\nexport function uidForTs(ts: number): string {\n  return UidRadix.encode(ts) + uidSuffix()\n}\n\nconst uidRe = /^[0-9a-z]{9}-[0-9a-z]{7}$/i\n\nexport function isUID(s: Maybe<string>): boolean {\n  return uidRe.test(toS(s))\n}\n\nexport function tsFromUid(s: Maybe<string>): Maybe<number> {\n  const ts = toS(s).replace(/(?<=\\S+)-.*/, \"\")\n  return blank(ts) ? undefined : UidRadix.decode(ts)\n}\n\nexport function sortByUid<T extends { uid: string }>(arr: T[]) {\n  return sortBy(arr, ea => tsFromUid(ea.uid))\n}\n\nexport function resetUid() {\n  if (isTest) {\n    uidSuffix.unset()\n    lastTime = 0\n  } else {\n    throw new Error(\"unsupported\")\n  }\n}\n","import os from \"node:os\"\nimport process from \"node:process\"\nimport { lazy } from \"../core/Lazy\"\nimport { uniq } from \"../fe/Array\"\nimport { blank, toNotBlank } from \"../fe/Blank\"\nimport { toBoolean } from \"../fe/Boolean\"\nimport { PromiseMaybe } from \"../fe/MaybeTypes\"\nimport { gte0 } from \"../fe/Number\"\nimport { mkLogger } from \"./Logger\"\nimport { ShortCommandTimeoutMs } from \"./ShortCommandTimeoutMs\"\nimport { stdout_ } from \"./child/ChildProcess\"\nimport { getEnv } from \"./env/GetEnv\"\nimport { isWin } from \"./platform/Platform\"\nimport { PowerShell } from \"./pwsh/PowerShell\"\n\nconst logger = lazy(() => mkLogger(\"UserInfo\"))\n\nexport async function userDesc() {\n  let result = \"user \" + (await username())\n  if (gte0(userid())) {\n    result += \" (userid \" + userid() + \")\"\n  }\n  return result\n}\n\nexport const userids = lazy<number[]>(() =>\n  // we prefer the effective id, but use getgid and userInfo to backfill.\n  // uniq also compacts\n  uniq([process.geteuid?.(), process.getuid?.(), os.userInfo().uid])\n)\n\nexport const userid = lazy<number>(() => userids()[0])\n\nexport const groupids = lazy<number[]>(() =>\n  // we prefer the effective id, but use getgid and userInfo to backfill:\n  uniq([process.getegid?.(), process.getgid?.(), os.userInfo().gid])\n)\n\nexport const groupid = lazy<number>(() => groupids()[0])\n\nexport const usernameFromEnv = lazy(() => {\n  for (const ea of [\n    // https://github.com/sindresorhus/username/blob/f4a47485fcdf3bafee221cf5e6d6180344020d08/index.js#L9\n    \"SUDO_USER\",\n    \"C9_USER\", // Cloud9\n    \"LOGNAME\",\n    \"USER\",\n    \"LNAME\",\n    \"USERNAME\" // windows calls this UserName, so we're using getEnv() (which is case-insensitive)\n  ]) {\n    const v = getEnv(ea as any)\n    if (!blank(v)) return v\n  }\n  return\n})\n\nexport const usernameFromUserInfo = lazy(() =>\n  toNotBlank(os.userInfo()?.username)\n)\n\nexport const userNameFromWhoami = lazy(async () =>\n  stdout_(\"whoami\", [], {\n    ignoreExitCode: true,\n    timeoutMs: ShortCommandTimeoutMs,\n    isIgnorableError: () => true\n  })\n    .then(toNotBlank)\n    .catch(error => logger().warn(\"$(whoami) failed\", { error }))\n)\n\nexport const userNameFromWindowsAccessToken = lazy(async () =>\n  !isWin\n    ? undefined\n    : PowerShell.instance().execute(\n        // https://stackoverflow.com/a/29955210\n        \"[System.Security.Principal.WindowsIdentity]::GetCurrent().Name\",\n        toNotBlank\n      )\n)\n\nexport const username = lazy<PromiseMaybe<string>>(\n  async () =>\n    usernameFromEnv() ??\n    usernameFromUserInfo() ??\n    (await userNameFromWhoami()) ??\n    (await userNameFromWindowsAccessToken())\n)\n\nfunction pwshIsAdmin() {\n  return isWin\n    ? PowerShell.instance().execute(\n        // https://serverfault.com/a/95464\n        \"(New-Object Security.Principal.WindowsPrincipal([Security.Principal.WindowsIdentity]::GetCurrent())).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)\",\n        toBoolean\n      )\n    : undefined\n}\n\nexport const isRootUser = lazy<PromiseMaybe<boolean>>(async () =>\n  isWin ? pwshIsAdmin() : userids().includes(0)\n)\n","export const version = \"2023.8.0-prealpha.15\";\nexport const versionMajor = 2023;\nexport const versionMinor = 8;\nexport const versionPatch = 0;\nexport const versionPrerelease = [\"prealpha\",15];\nexport const release = \"2023.8.0-prealpha.15+20230906201147\";\nexport const gitSha = \"42ca16cffdf51d4f715dc666d7cd6c3775d13a74\";\nexport const gitDate = new Date(1694056307000);\nexport default {version,versionMajor,versionMinor,versionPatch,versionPrerelease,release,gitSha,gitDate};\n","import { dayMs, minuteMs } from \"../fe/Date\"\nimport { allDefined } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { toInt } from \"../fe/Number\"\nimport { opt } from \"../fe/Opt\"\nimport { within } from \"./Number\"\n\nconst wmi =\n  /((?:19|20)\\d\\d)([01]\\d)([0123]\\d)([012]\\d)([012345]\\d)([012345]\\d)\\.(\\d{6})([+-]\\d{3})?/\n/**\n * yyyymmddHHMMSS.mmmmmmsUUU or 20190415124112.947119-420\n *\n * @see https://msdn.microsoft.com/en-us/library/aa387237(v=vs.85).aspx\n */\nexport function wmiDate(s: string): Maybe<Date> {\n  const m = wmi.exec(s)\n  if (m == null) return\n  const arr = m.slice(1, 8).map(ea => toInt(ea))\n  if (!allDefined(arr)) return undefined\n  const [year, mon, day, hour, min, sec, micros] = arr as number[]\n  const offset = toInt(m[8], { defaultValue: 0 })!\n\n  // console.dir({ s, m, year, mon, day, hour, min, sec, micros, offset })\n  return new Date(\n    Date.UTC(year, mon - 1, day, hour, min, sec, micros / 1000) -\n      offset * minuteMs\n  )\n}\n\nconst WinDateRe = /Date\\((\\d+)\\)/\n\n/**\n * PowerShell renders Dates in JSON structures as \"/Date(1552014999676)/\"\n */\nexport function pwshJsonDate(s: string): Maybe<Date> {\n  return opt(s)\n    .flatMap(ea => WinDateRe.exec(ea))\n    .flatMap(ea => ea[1])\n    .flatMap(toInt)\n    .filter(ea => within(0, Date.now() + dayMs, ea))\n    .map(ea => new Date(ea))\n    .get()\n}\n","/**\n * @see AbortController\n * @see AbortSignal\n */\nexport class AbortError extends Error {}\n","import timers from \"timers\"\nimport { gt0 } from \"../../fe/Number\"\n\nexport interface Debounced {\n  (...args: any[]): any\n  reset(): void\n  force(): void\n  setTimeoutMs(timeoutMs: number): void\n  timeoutMs(): number\n}\n\nexport function debounce(\n  f: (...args: any[]) => any,\n  timeoutMs: number\n): Debounced {\n  let lastTimeout: any\n  let args: any[] = []\n\n  const r: any = gt0(timeoutMs)\n    ? (...a: any[]) => {\n        args = a\n        if (lastTimeout != null) timers.clearTimeout(lastTimeout)\n        lastTimeout = timers.setTimeout(() => {\n          f(...args)\n        }, timeoutMs)\n      }\n    : f\n  r.reset = () => {\n    if (lastTimeout != null) timers.clearTimeout(lastTimeout)\n    lastTimeout = undefined\n  }\n  r.force = () => {\n    r.reset()\n    f()\n  }\n  r.setTimeoutMs = (ea: number) => {\n    r.reset()\n    timeoutMs = ea\n  }\n  r.timeoutMs = () => timeoutMs\n  return r\n}\n","import timers from \"timers\"\nimport util from \"util\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { asError } from \"../../fe/Error\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { omit } from \"../../fe/Object\"\nimport { Comparable } from \"../../fe/Primitive\"\nimport { isPromise } from \"../../fe/Promise\"\nimport { PromiseState, PromiseStates } from \"../../fe/PromiseState\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { TimeoutError } from \"../../fe/TimeoutError\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { isIgnorableError } from \"../error/ErrorTypes\"\nimport { onTimeout } from \"./TimeoutHandler\"\n\n/**\n * Deferred resolution of a promise with synchronous state\n */\nexport class Deferred<T, P = any> implements Promise<T> {\n  static async *toAsyncIterable<I, O>(arr: Deferred<I, O>[]) {\n    while (!isEmpty(arr)) {\n      // Yield the first completed value:\n      const idx = arr.findIndex(ea => !ea.isPending)\n      if (idx >= 0) {\n        const result = arr[idx]\n        arr.splice(idx, 1)\n        yield result\n      } else {\n        try {\n          // Wait for the next one to complete, and run the loop again:\n          await Promise.race(arr)\n        } catch {\n          // if the next promise raises, we still want to return that Deferred\n          // (the caller can check on the rejected status)\n        }\n      }\n    }\n  }\n\n  static #id = 0\n\n  static resolve<I, O = any>(\n    t: I,\n    opts?: { payload?: O; serialId?: Comparable }\n  ): Deferred<I, O> {\n    const d = new Deferred<I>(\".resolved()\", opts)\n    return d.resolve(t)\n  }\n\n  readonly id: number\n  readonly payload?: P\n  /**\n   * If this is defined, Promises should prevent concurrent execution of other\n   * Deferred instances with the same serialId.\n   */\n  readonly serialId?: Comparable\n  readonly startedAt = Date.now()\n  #settledAt?: number\n  #state: PromiseState = PromiseStates.pending\n  #value?: T\n  readonly promise: Promise<T>\n  #resolve!: (value: T) => void\n  #reject!: (reason?: any) => void\n  #error: Maybe<Error>\n  #priorTimeout: Maybe<NodeJS.Timeout>\n  #logger: Maybe<Logger>\n\n  /**\n   * @param name can be either a string or a data payload to associate with the\n   * promise.\n   */\n  constructor(\n    readonly name: string,\n    opts?: { payload?: P; serialId?: Comparable }\n  ) {\n    this.id = Deferred.#id++\n    this.promise = new Promise<T>((resolve, reject) => {\n      this.#resolve = resolve\n      this.#reject = reject\n    })\n    this.payload = opts?.payload\n    this.serialId = opts?.serialId\n  }\n\n  private get logger() {\n    return this.#logger ?? mkLogger(\"async.Deferred(\" + this.name + \")\")\n  }\n\n  // Only true for the same instance\n  eql(d: Deferred<T>): boolean {\n    return d instanceof Deferred && d.id === this.id\n  }\n\n  // This is used by LogMeta for logging:\n  toLogJSON() {\n    return {\n      _ctor: \"Deferred\",\n      name: this.name,\n      state: this.#state,\n      value: this.value,\n      serialId: this.serialId,\n      payload: this.payload,\n      elapsedMs: this.elapsedMs\n    }\n  }\n\n  toJSON() {\n    return omit(this.toLogJSON(), \"value\", \"elapsedMs\")\n  }\n\n  get settledAt() {\n    return this.#settledAt\n  }\n\n  get elapsedMs() {\n    return (this.#settledAt ?? Date.now()) - this.startedAt\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"async.Deferred(\" + this.name + \")\"\n  }\n\n  [util.inspect.custom]() {\n    return this.toJSON()\n  }\n\n  observeQuietly(p: Promise<T>): Deferred<Maybe<T>> {\n    if (isPromise(p)) {\n      p.then(resolution => {\n        void this.maybeResolve(resolution)\n      }).catch(err => {\n        this.logger.warn(\"observeQuietly.reject()\", err)\n        void this.maybeResolve(undefined as any)\n      })\n    } else {\n      void this.maybeResolve(p)\n    }\n    return this as any\n  }\n\n  observe(p: SyncOrAsync<T>): this {\n    if (isPromise(p)) {\n      p.then(resolution => {\n        void this.maybeResolve(resolution)\n      }).catch(err => {\n        void this.maybeReject(err)\n      })\n    } else {\n      void this.maybeResolve(p)\n    }\n    return this\n  }\n\n  /**\n   * Reject the promise if it hasn't been resolved or rejected within\n   * `timeoutMs`\n   */\n  setTimeout(timeoutMs: number, unref: boolean = true): this {\n    if (this.#priorTimeout != null) {\n      timers.clearTimeout(this.#priorTimeout)\n      this.#priorTimeout = undefined\n    }\n\n    if (gt0(timeoutMs)) {\n      // unref so it doesn't prevent node from exiting:\n      this.#priorTimeout = timers.setTimeout(() => {\n        if (this.isPending) {\n          void this.reject(\n            new TimeoutError(\n              \"Timeout \" +\n                this.name +\n                \" after \" +\n                (Date.now() - this.startedAt) +\n                \"ms\"\n            )\n          )\n          onTimeout()\n        }\n      }, timeoutMs)\n      if (unref) {\n        this.#priorTimeout.unref()\n      }\n    }\n    return this\n  }\n\n  get stateStr(): PromiseState {\n    return this.isPending\n      ? \"pending\"\n      : this.isResolved\n      ? \"resolved\"\n      : \"rejected\"\n  }\n\n  get isPending() {\n    return this.#state === PromiseStates.pending\n  }\n\n  /**\n   * @return the resolved value for this Deferred, or `undefined` if this\n   * is either still pending or rejected.\n   */\n  get value(): Maybe<T> {\n    return this.isResolved ? this.#value : undefined\n  }\n\n  get error(): Maybe<Error> {\n    return this.#error\n  }\n\n  /**\n   * true iff either resolved or rejected.\n   */\n  get isSettled() {\n    return this.#state !== PromiseStates.pending\n  }\n\n  get isResolved() {\n    return this.#state === PromiseStates.resolved\n  }\n\n  get isRejected() {\n    return this.#state === PromiseStates.rejected\n  }\n\n  get settledMs(): number | undefined {\n    return this.#settledAt == null\n      ? undefined\n      : this.#settledAt - this.startedAt\n  }\n\n  /**\n   * Resolves the internal promise. Cannot be invoked more than once.\n   */\n  resolve(value: T): this {\n    return this.#settle(() => {\n      this.#state = PromiseStates.resolved\n      this.#value = value\n      this.#resolve(value)\n    })\n  }\n\n  maybeResolve(value: T): this {\n    return this.isPending ? this.resolve(value) : this\n  }\n\n  reject(reason?: any): this {\n    this.logger.log(\n      isIgnorableError(reason) === true ? \"info\" : \"warn\",\n      \".reject()\",\n      reason\n    )\n    const err = asError(reason)\n    return this.#settle(() => {\n      this.#error = err\n      this.#state = PromiseStates.rejected\n      this.#reject(err)\n    })\n  }\n\n  maybeReject(reason?: any): this {\n    return this.isPending ? this.reject(reason) : this\n  }\n\n  finally(f: () => any): this {\n    // don't create a new promise chain that may have an unhandled error!\n    void this.promise.finally(f).catch(() => undefined)\n    return this\n  }\n\n  then<TResult1 = T, TResult2 = never>(\n    onfulfilled?:\n      | ((value: T) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?:\n      | ((reason: any) => TResult2 | PromiseLike<TResult2>)\n      | undefined\n      | null\n  ): Promise<TResult1 | TResult2> {\n    return this.promise.then(onfulfilled, onrejected)\n  }\n\n  catch<U>(onrejected: (reason: any) => U | PromiseLike<U>): Promise<T | U> {\n    return this.promise.catch(err => onrejected(err))\n  }\n\n  #settle(firstback: () => void): this {\n    if (this.#state === PromiseStates.pending) {\n      map(this.#priorTimeout, timers.clearTimeout)\n      firstback()\n      this.#settledAt = Date.now()\n      const ms = this.settledMs!\n      if (this.isResolved && ms > 5000) {\n        this.logger.info(\"Completed in \" + ms + \"ms\")\n      }\n    } else {\n      this.logger.warn(\n        \"settled multiple times (already \" + this.stateStr + \")\",\n        { value: this.#value }\n      )\n    }\n    return this\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { isSingleSpecTests, isTest } from \"../NodeEnv\"\nimport { firstGt0 } from \"../Number\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { setUnrefInterval } from \"./Timers\"\n\nconst logger = lazy(() => mkLogger(\"async.Endable\"))\n\nexport interface Endable {\n  readonly name: string\n  readonly ended: boolean\n  readonly endTimeoutMs?: number\n  end(): Promise<any> | any\n}\n\nconst endablesByRank = new MultiMap<EndableRank, Endable>()\n\nsetUnrefInterval(() => vacuumEndables(), 1 * minuteMs)\n\nconst DefaultTimeoutMs = 5 * secondMs\n\nexport const EndableRanks = strEnum(\n  \"first\",\n  \"stats\",\n  \"service\",\n  \"predb\",\n  \"db\",\n  \"postdb\",\n  \"logger\",\n  \"logtail\"\n)\nexport type EndableRank = StrEnumKeys<typeof EndableRanks>\n\n/**\n * Add an endable with an arbitrary end rank\n */\nexport function addEndable<T extends Endable>(\n  rank: EndableRank,\n  endable: T\n): T {\n  EndableRanks.validOrElse(rank, () => {\n    throw new Error(\"internal error: invalid rank \" + rank)\n  })\n  endablesByRank.add(rank, endable)\n  return endable\n}\n\nlet _ending = false\n\nexport function ending(): boolean {\n  return _ending\n}\n\nexport function setEnding(value: boolean) {\n  if (isTest) {\n    _ending = value\n  } else {\n    throw new Error(\"cannot set ending\")\n  }\n}\n\nexport function endAll(...arr: Maybe<Endable>[]) {\n  return Promise.all(arr.map(ea => end(ea)))\n}\n\nexport async function end(e: MaybeSyncOrAsync<Endable>, endTimeoutMs?: number) {\n  const endable = await e\n  if (endable == null || true === endable?.ended) return\n  const timeoutMs =\n    isTest && getDevEnvFlag(\"PS_SINGLE_SPEC_TESTS\")\n      ? 100\n      : firstGt0(endTimeoutMs, endable.endTimeoutMs, DefaultTimeoutMs)!\n  logger().trace(endable.name + \" ending...\", { timeoutMs })\n  try {\n    await thenOrTimeoutError(endable.end(), timeoutMs, false)\n  } catch (err) {\n    try {\n      // the logger might throw errors at the very end:\n      logger().warn(endable.name + \".end() failed\", err)\n    } catch {\n      //\n    }\n  }\n}\n\nfunction vacuumEndables() {\n  endablesByRank.filterInPlace((_, v) => v.ended !== true)\n  logger().debug(\n    \"vacuumEndables()\",\n    endablesByRank.entriesArray().map(([k, v]) => [k, v.map(ea => ea.name)])\n  )\n}\n\nexport const endEndables = lazy(async () => {\n  const endTimeoutMs = isSingleSpecTests() ? 500 : undefined\n  logger().info(\"endEndables()\", {\n    isTest,\n    isSingleSpecTests: isSingleSpecTests()\n  })\n  if (!isTest) _ending = true\n  vacuumEndables()\n  for (const rank of EndableRanks.values) {\n    const arr = endablesByRank.get(rank) ?? []\n    if (isNotEmpty(arr)) {\n      logger().debug(\"endEndables(): ending \" + rank)\n      await Promise.allSettled(arr.map(ea => end(ea, endTimeoutMs)))\n    }\n  }\n})\n\nexport function endablesStats() {\n  const result: any = {}\n  for (const rank of EndableRanks.values) {\n    const arr = endablesByRank.get(rank) ?? []\n    result[rank] = arr.map(ea => ({ name: ea.name, ended: ea.ended }))\n  }\n  return result\n}\n","import { clearInterval, clearTimeout, setInterval, setTimeout } from \"timers\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toInt } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { EndableRank, EndableRanks, ending } from \"./Endable\"\nimport { EndableWrapper } from \"./EndableWrapper\"\n\nexport class EndableInterval extends EndableWrapper {\n  #timer: Maybe<NodeJS.Timeout>\n  #timeout: Maybe<NodeJS.Timeout>\n  constructor(\n    readonly opts: {\n      name: string\n      callback: (...args: any[]) => any\n      intervalMs: number\n      initialDelayMs?: number\n      rank?: EndableRank\n      endTimeoutMs?: number\n      unref?: boolean // < defaults to false to prevent tools from exiting unexpectedly\n      onEnd?: () => unknown\n    }\n  ) {\n    super(\n      opts.name,\n      () => this.#clear(),\n      opts.rank ?? EndableRanks.first,\n      opts.endTimeoutMs\n    )\n    if (opts.onEnd != null) {\n      this.onEnds.push(opts.onEnd)\n    }\n    this.setIntervalMs(this.opts.intervalMs, this.opts.initialDelayMs, true)\n  }\n\n  #clear() {\n    map(this.#timer, clearInterval)\n    this.#timer = undefined\n    map(this.#timeout, clearTimeout)\n    this.#timeout = undefined\n  }\n\n  hasTimer() {\n    return this.#timer != null\n  }\n\n  hasTimeout() {\n    return this.#timeout != null\n  }\n\n  get timingOpts() {\n    return pick(this.opts, \"intervalMs\", \"initialDelayMs\")\n  }\n\n  readonly #callback = () => {\n    if (!ending() && !this.ended) {\n      this.opts.callback()\n    }\n  }\n\n  get #canRun() {\n    return !ending() && !this.ended\n  }\n\n  /**\n   * @return true if the given args or state resulted in new intervals being scheduled\n   */\n  setIntervalMs(\n    intervalMs: number,\n    initialDelayMs?: number,\n    force = false\n  ): boolean {\n    intervalMs = toInt(intervalMs) ?? 0\n    initialDelayMs = toInt(initialDelayMs) ?? 0\n    if (\n      !force &&\n      this.opts.intervalMs === intervalMs &&\n      (this.opts.initialDelayMs ?? 0) === initialDelayMs\n    ) {\n      // no-op if these are already the correct value\n      return false\n    }\n\n    this.opts.intervalMs = intervalMs\n    this.opts.initialDelayMs = initialDelayMs\n\n    this.#clear()\n\n    const maybeScheduleInterval = () => {\n      if (this.#canRun && gt0(this.opts.intervalMs)) {\n        this.#timer = setInterval(this.#callback, this.opts.intervalMs)\n        if (this.opts.unref === true) this.#timer.unref()\n      }\n    }\n\n    if (gt0(this.opts.initialDelayMs)) {\n      this.#timeout = setTimeout(() => {\n        if (this.#canRun) {\n          this.#callback()\n          maybeScheduleInterval()\n        }\n      }, this.opts.initialDelayMs)\n      if (this.opts.unref === true) this.#timeout.unref()\n    } else {\n      maybeScheduleInterval()\n    }\n    return true\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Latch } from \"../../fe/Latch\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { Endable, EndableRank, EndableRanks, addEndable } from \"./Endable\"\nimport { awaitSettled } from \"./Promise\"\n\n/**\n * Base class for Endables.\n */\nexport class EndableWrapper implements Endable {\n  #name!: string\n  logger!: Logger\n\n  protected readonly onEnds: (() => any)[] = []\n  readonly #endPromise = lazy(() => new Latch())\n  /**\n   * @param name for logging\n   * @param onEnd called by `this.end()`. May return a promise.\n   * @param _isEnded if the wrapped instance can end from other state mutations,\n   * providing this method will allow this wrapper to be garbage collected.\n   */\n  constructor(\n    name: string,\n    onEnd?: () => Promise<any> | any,\n    rank: EndableRank = EndableRanks.first,\n    readonly endTimeoutMs?: number\n  ) {\n    this.name = name\n    if (onEnd != null) this.onEnds.push(onEnd)\n    addEndable(rank, this)\n  }\n\n  get name() {\n    return this.#name\n  }\n\n  set name(n: string) {\n    this.#name = n\n    this.logger = mkLogger(n)\n  }\n\n  get ended() {\n    return this.end.hasPrior()\n  }\n\n  end = lazy(async () => {\n    await awaitSettled(this.onEnds.map(ea => ea()))\n    void this.#endPromise().resolve()\n  })\n\n  awaitEnd(): Promise<void> {\n    return this.#endPromise()\n  }\n}\n","import process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { toNotBlank } from \"../../fe/Blank\"\nimport { magenta } from \"../Chalk\"\nimport { mkLogger } from \"../Logger\"\nimport { stderrWrite } from \"../StdoutWrite\"\nimport { toWrappedError } from \"../error/WrappedError\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { endEndables, ending } from \"./Endable\"\n\nconst logger = lazy(() => mkLogger(magenta(\"Exit\")))\n\nexport const onFatalHandlers: ((reason: string) => any)[] = []\n\nexport async function exit(args: {\n  reason?: string\n  status?: number\n  error?: any\n}) {\n  logger().log(args.status === 0 ? LogLevels.info : LogLevels.warn, \"exit()\", {\n    ...args,\n    ending: ending()\n  })\n  const error = toWrappedError(args.error, {\n    message: args.reason,\n    errno: args.status\n  })\n  if (error.errno !== 0 || error.fatal === true) {\n    stderrWrite({ fatal: true, ...args })\n    const reason = toNotBlank(args?.reason) ?? error.toString()\n    for (const ea of onFatalHandlers) {\n      await ea(reason)\n    }\n  }\n\n  if (!ending()) {\n    await endEndables()\n    process.exit(args.status)\n  }\n}\n\nexport const exitOnStdStream = lazy(() => {\n  for (const streamName of [\"stdin\", \"stdout\", \"stderr\"] as const) {\n    for (const eventName of [\"close\", \"error\", \"disconnect\", \"end\"] as const) {\n      process[streamName].on(eventName, (error: any) => {\n        void exit({\n          reason: `${streamName}:${eventName}`,\n          status: 0,\n          error\n        })\n      })\n    }\n  }\n})\n","import { eql } from \"../../fe/Eql\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { toErr } from \"../../fe/toErr\"\nimport { Deferred } from \"./Deferred\"\n\nexport type MemoizedDeferredListener<T> = {\n  onChange(newResult: T): any\n  onError(error: Error): any\n}\n\nexport interface MemoizedDeferred<T> {\n  (): Deferred<T>\n\n  /**\n   * Clears the prior value but doesn't return it (so we don't have to\n   * explicitly ignore unawaited promises)\n   */\n  unset(): void\n\n  /**\n   * Force the prior value to be `t`\n   */\n  set(t: T): void\n\n  /**\n   * Forces the underlying thunk or later to be applied\n   */\n  refresh(): Deferred<T>\n\n  /**\n   * @return the milliseconds a prior result may be returned by `apply`, or\n   * undefined if no TTL is set\n   */\n  ttl(): Maybe<number>\n\n  /**\n   * @param ttl undefined to remove TTL expirations\n   */\n  setTTL(ttl: Maybe<number>): void\n\n  /**\n   * Calls the listener if the result changes later. The underlying thunk is\n   * not applied now (like with {@link MemoizedThunk.watch}).\n   */\n  watchLater(watcher: MemoizedDeferredListener<T>): void\n\n  /**\n   * @return undefined if unset\n   */\n  lastSetAgoMs(): Maybe<number>\n\n  /**\n   * @return the previously-memoized Deferred, if it isn't stale (according to\n   * `ttl()`)\n   */\n  prior(): Maybe<Deferred<T>>\n\n  /**\n   * @return the last memoized awaited result (even if it's stale!).\n   */\n  lastValue(): Maybe<T>\n\n  /**\n   * @return the number of times the underlying thunk has been applied\n   */\n  settledCount(): number\n\n  /**\n   * Has a result not been calculated, or was calculated more than `ttl()` ms\n   * ago?\n   */\n  isStale(): boolean\n\n  /**\n   * How long did the last fulfilled result take to calculate?\n   */\n  elapsedMs(): Maybe<number>\n\n  toString(): string\n}\n\n/**\n * @param ttlMs if 0 or null, the result of `later` will be cached forever.\n */\nexport function lazyAsync<T>({\n  later,\n  desc,\n  ttlMs,\n  timeoutMs\n}: {\n  later: () => Promise<T>\n  desc?: string\n  ttlMs?: number\n  timeoutMs?: number\n}): MemoizedDeferred<T> {\n  let lastSetTs: number | undefined\n  let settledCount = 0\n  let lastValue: T | undefined\n  let result: Deferred<T> | undefined\n  const watchers: MemoizedDeferredListener<T>[] = []\n\n  async function onSetResult(\n    priorD: Deferred<T> | undefined,\n    resultD: Deferred<T>\n  ) {\n    const resultIdAtStart = result?.id\n    try {\n      // There's a chance that the prior or current result has already\n      // changed. Don't submit onChanges or change priorValue if the current\n      // Deferred result has changed.\n\n      const current = await resultD\n      if (result?.id === resultIdAtStart) {\n        lastValue = current\n      }\n\n      if (\n        result?.id === resultIdAtStart &&\n        !eql(priorD?.value ?? (await priorD?.promise), current)\n      ) {\n        for (const ea of watchers) {\n          await ea.onChange(current)\n        }\n      }\n    } catch (err) {\n      const error = toErr(err)\n      if (error != null) for (const ea of watchers) ea.onError(error)\n    } finally {\n      settledCount++\n    }\n  }\n\n  function setResult(t: Promise<T>): Deferred<T> {\n    lastSetTs = Date.now()\n    const priorResult = result\n    result =\n      t instanceof Deferred\n        ? t\n        : new Deferred<T>(desc ?? \"lazyAsync\").observe(t)\n    if (gt0(timeoutMs)) {\n      void result.setTimeout(timeoutMs)\n    }\n    void onSetResult(priorResult, result)\n    return result\n  }\n\n  function isStale() {\n    return lastSetTs == null || (gt0(ttlMs) && lastSetTs + ttlMs < Date.now())\n  }\n\n  const f = (() =>\n    // NO PROMISE AWAITING HERE. Otherwise N calls would go through while we\n    // wait for the promise to resolve.\n    result == null || isStale() ? setResult(later()) : result) as any\n\n  f.unset = () => {\n    settledCount = 0\n    lastSetTs = undefined\n    lastValue = undefined\n    result = undefined\n  }\n\n  f.set = (t: T) => setResult(Deferred.resolve(t))\n\n  f.isStale = isStale\n\n  f.settledCount = () => settledCount\n\n  f.prior = () => {\n    if (isStale()) f.unset()\n    return result\n  }\n\n  f.lastValue = () => {\n    return result?.value ?? lastValue\n  }\n\n  f.refresh = () => setResult(later())\n\n  f.ttl = () => ttlMs\n\n  f.setTTL = (ttl: Maybe<number>) => {\n    ttlMs = gt0(ttl) ? ttl : undefined\n  }\n\n  f.watchLater = (watcher: MemoizedDeferredListener<T>) => {\n    watchers.push(watcher)\n  }\n\n  f.toString = f.toLogJSON = f.toJSON = () => desc ?? \"[LazyAsync]\"\n\n  f.lastSetAgoMs = () =>\n    lastSetTs == null ? undefined : Date.now() - lastSetTs\n\n  f.elapsedMs = () => result?.settledMs ?? result?.elapsedMs\n\n  return f\n}\n","import { stringify } from \"../../fe/JSON\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { FifoCacheAsync, FifoCacheAsyncOpts } from \"../FifoCacheAsync\"\n\nexport interface MemoizedAsyncFunc<A, R> {\n  (a: A): Promise<R>\n  clear(a?: A): void | Promise<void>\n  size(): number\n  callCount(): number\n}\n\nexport function memoizeAsync<A, R>(\n  f: (a: A) => SyncOrAsync<R>,\n  opts: FifoCacheAsyncOpts\n): MemoizedAsyncFunc<A, R> {\n  let callCount = 0\n  const store = new FifoCacheAsync<R>(opts)\n  const r: any = (a: A) => {\n    callCount++\n    return store.getOrSetAsync(stringify(a), async () => f(a))\n  }\n  r.clear = (a?: A) => {\n    if (a == null) {\n      return store.clear()\n    } else {\n      const aKey = stringify(a)\n      return store.deleteIf(ea => aKey === ea)\n    }\n  }\n  r.size = () => store.size\n  r.callCount = () => callCount\n  return r\n}\n","import { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { postrun } from \"./Postrun\"\n\nexport interface OneAtATime<T> {\n  (): Promise<T>\n  isRunning(): boolean\n  force(): Promise<T>\n  prior(): Promise<T>\n}\n\nexport function oneAtATime<R>({\n  fn,\n  runLaterIfBusy = false,\n  undefinedIfBusy\n}: {\n  fn: () => SyncOrAsync<R>\n  runLaterIfBusy?: boolean\n  undefinedIfBusy?: boolean\n}): OneAtATime<R> {\n  let prior: Promise<R>\n  let running = false\n  let runAgain = false\n  // this isn't async just to reduce promise creation:\n  const result = () => {\n    if (running) {\n      runAgain = true\n      return true === undefinedIfBusy ? (undefined as any) : prior\n    } else {\n      running = true\n      return (prior = postrun({\n        fn,\n        postrun: () => {\n          running = false\n          if (runLaterIfBusy === true && runAgain) {\n            runAgain = false\n            setImmediate(result)\n          }\n        }\n      }))\n    }\n  }\n  result.isRunning = () => running\n\n  result.prior = () => prior\n\n  result.force = async () => {\n    await prior\n    return result()\n  }\n\n  return result\n}\n","import { SyncOrAsync } from \"../../fe/SyncOrAsync\"\n\nexport async function postrun<T>(args: {\n  fn: () => SyncOrAsync<T>\n  postrun: () => SyncOrAsync<any>\n}): Promise<T> {\n  try {\n    return await args.fn()\n  } finally {\n    await args.postrun()\n  }\n}\n","import { compact, isEmpty, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { isFalse, isTrue } from \"../../fe/Boolean\"\nimport { secondMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { orElse } from \"../../fe/Maybe\"\nimport {\n  Maybe,\n  MaybeNull,\n  MaybePromiseMaybe,\n  PromiseMaybe\n} from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { Primitive } from \"../../fe/Primitive\"\nimport { thenMap } from \"../../fe/Promise\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { thenOrTimeout, thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { Thunk, ThunkOrLater, tol } from \"../../fe/Thunk\"\nimport { TimeoutError } from \"../../fe/TimeoutError\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { toA } from \"../../fe/toA\"\nimport { toErr } from \"../../fe/toErr\"\nimport { Arg0 } from \"../Args\"\nimport { batches } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { identity } from \"../Object\"\nimport { Predicate } from \"../predicates/Predicates\"\nimport { maxCpus } from \"../work/MaxCpus\"\nimport { PermissivePromises, Promises } from \"./Promises\"\n\n// TODO: INLINE\nexport { thenMap } from \"../../fe/Promise\"\n\nexport async function someOrTimeout<T>(\n  arr: ThunkOrLater<T>[],\n  opts: { timeoutMs: number }\n): Promise<(T | TimeoutError | Error)[]> {\n  return Promise.all(\n    arr.map(ea => thenOrTimeoutError(tol(ea), opts.timeoutMs).catch(err => err))\n  )\n}\n\nexport async function thenCompact<T>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T>[]>\n): Promise<T[]> {\n  if (arr == null) return []\n  const c = compact(await arr)\n  return isEmpty(c) ? [] : compact(await Promise.all(c))\n}\n\nexport async function thenCollectBatched<T1, T2>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T1>[]>,\n  batchSize: number,\n  f: (batch: T1[]) => MaybeSyncOrAsync<T2[]>\n) {\n  const result: T2[] = []\n  for (const batchArr of batches(toA(await arr), batchSize)) {\n    const batchInput: T1[] = await thenCompact(batchArr)\n    result.push(...(await thenCompact(f(batchInput))))\n  }\n  return result\n}\n\nexport async function thenMapResolved<T1, T2>(\n  objP: MaybeSyncOrAsync<T1>,\n  f: (t: T1) => MaybeSyncOrAsync<T2>\n): PromiseMaybe<T2> {\n  if (objP == null) return Promise.resolve(undefined)\n  try {\n    return await thenMap(objP, f)\n  } catch (e) {\n    return undefined\n  }\n}\n\nexport function resolvedWithin<T>(\n  p: Promise<T>,\n  withinMs: number\n): Promise<boolean> {\n  return Promise.race([\n    p.then(() => true),\n    delay(withinMs).then(() => false)\n  ]).catch(() => false)\n}\n\nexport async function resolved(p: Promise<any>): Promise<boolean> {\n  try {\n    await p\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\nexport async function rejected(p: Promise<any>): Promise<boolean> {\n  return !(await resolved(p))\n}\n\nexport async function thenDefined(p: Promise<any>): Promise<boolean> {\n  return (await p) != null\n}\n\nexport async function allSerial<T>(\n  arr: Maybe<() => MaybeSyncOrAsync<T>>[]\n): Promise<T[]> {\n  const result: T[] = []\n  for (const ea of compact(arr)) {\n    const v = await ea()\n    if (v != null) result.push(v)\n  }\n  return result\n}\n\nexport async function awaitAll(\n  arr: Maybe<(PromiseMaybe<any> | any)[]>\n): Promise<void> {\n  for (const ea of toA(arr)) {\n    if (ea != null) await ea\n  }\n}\n\nexport async function awaitSettled(\n  arr: Maybe<(PromiseMaybe<any> | any)[]>\n): Promise<void> {\n  for (const ea of toA(arr)) {\n    try {\n      if (ea != null) await ea\n    } catch {\n      //\n    }\n  }\n}\n\n// maybeist champion:\nexport async function thenFlatten<T>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T | MaybeSyncOrAsync<T>[]>[]>\n): Promise<T[]> {\n  const result: T[] = []\n  for (const ea of toA(await arr)) {\n    const v = await ea\n    if (v != null) {\n      if (Array.isArray(v)) {\n        for (const ea2 of v) {\n          const v2 = await ea2\n          if (v2 != null) result.push(v2)\n        }\n      } else {\n        result.push(v)\n      }\n    }\n  }\n  return result\n}\n\nexport async function thenUniq<T>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T>[]>\n): Promise<T[]> {\n  const result: T[] = []\n  for (const ea of toA(await arr)) {\n    const v = await ea\n    if (v != null) {\n      result.push(v)\n    }\n  }\n  return uniq(result)\n}\n\nexport async function asyncFind<T>(\n  arr: T[],\n  f: (t: T) => Promise<boolean>\n): PromiseMaybe<T> {\n  for (const ea of arr) {\n    if (await f(ea)) return ea\n  }\n  return\n}\n\n/**\n * @see thenCollect in fe -- which doesn't have logging or timeout support\n */\nexport async function thenCollectSerial<T, V>({\n  name,\n  arr,\n  f,\n  timeoutMs\n}: {\n  name: string\n  arr: Maybe<MaybeSyncOrAsync<Maybe<T>[]>>\n  f: (t: T) => SyncOrAsync<Maybe<V>>\n  timeoutMs?: number\n}): Promise<[V, T][]> {\n  const result: [V, T][] = []\n  for (const ea of compact(await arr)) {\n    try {\n      const v = await (gt0(timeoutMs)\n        ? thenOrTimeoutError(f(ea), timeoutMs)\n        : f(ea))\n      if (v != null) result.push([v, ea])\n    } catch (error) {\n      mkLogger(name).warn(\"failed to apply\", {\n        ea,\n        error\n      })\n    }\n  }\n  return result\n}\n\nexport async function mapAsyncSerial<T, V>(\n  args: Arg0<typeof thenCollectSerial<T, V>>\n): Promise<V[]> {\n  return (await thenCollectSerial(args)).map(ea => ea[0])\n}\n\n/**\n * For each in `V[]`, apply `f(v)` concurrently, returning `[v, await f(v)]`\n * @see thenCollect\n */\nexport async function thenCollectParallel<T, V>({\n  arr,\n  f,\n  name,\n  maxConcurrent,\n  timeoutMs,\n  promises\n}: {\n  arr: Maybe<MaybeSyncOrAsync<Maybe<T>[]>>\n  f: (t: T) => SyncOrAsync<Maybe<V>>\n  name: string\n  maxConcurrent?: number\n  timeoutMs?: number\n  promises?: Promises\n}): Promise<[V, T][]> {\n  if (arr == null) return []\n  const array = compact(await arr)\n  if (isEmpty(array)) return []\n  maxConcurrent = Math.round(maxConcurrent ?? maxCpus())\n  if (maxConcurrent <= 1) return thenCollectSerial({ arr, f, name, timeoutMs })\n  const p =\n    promises ??\n    (array.length <= maxConcurrent\n      ? PermissivePromises\n      : new Promises(name, () => maxConcurrent))\n  // ^ creating new Promises() is expensive\n  const func = gt0(timeoutMs)\n    ? (t: T) => thenOrTimeoutError(f(t), timeoutMs)\n    : f\n  const t = await p.enqueueAll(\n    name,\n    array.map(ea => async () => {\n      try {\n        return [await func(ea), ea] as [V, T]\n      } catch (error) {\n        mkLogger(name).warn(\"failed to apply\", {\n          ea,\n          error\n        })\n        return\n      }\n    })\n  )\n  // compact prevents TypeError: undefined is not iterable:\n  return compact(t).filter(([k, v]) => k != null && v != null)\n}\n\n/**\n * Apply `f` to each element of `arr` concurrently, returning the results\n */\nexport async function mapAsync<T, V>({\n  arr,\n  f,\n  name,\n  maxConcurrent,\n  timeoutMs,\n  promises\n}: {\n  arr: Maybe<MaybeSyncOrAsync<Maybe<T>[]>>\n  f: (t: T) => SyncOrAsync<Maybe<V>>\n  name: string\n  maxConcurrent?: number\n  timeoutMs?: number\n  promises?: Promises\n}): Promise<V[]> {\n  return (\n    await thenCollectParallel({\n      arr,\n      f,\n      name,\n      maxConcurrent,\n      timeoutMs,\n      promises\n    })\n  ).map(ea => ea[0])\n}\n\n/**\n * @return all items in `arr` that `f` doesn't reject and returns true or\n * Promise<true>\n */\nexport async function filterAsync<T>({\n  name,\n  arr,\n  f,\n  maxConcurrent,\n  timeoutMs\n}: {\n  name: string\n  arr: Maybe<T>[]\n  f: Predicate<T>\n  maxConcurrent?: number\n  timeoutMs?: number\n}): Promise<T[]> {\n  const t = await thenCollectParallel({\n    name,\n    arr: compact(arr),\n    f,\n    maxConcurrent,\n    timeoutMs\n  })\n  return t.filter(([b]) => b).map(([, v]) => v)\n}\n\nexport async function partitionAsync<T>(\n  arr: T[],\n  filter: (t: T) => MaybeSyncOrAsync<boolean>\n): Promise<[T[], T[]]> {\n  const t = await thenCollectParallel({\n    name: \"partitionAsync\",\n    arr,\n    f: filter\n  })\n  return [\n    t.filter(([ea]) => isTrue(ea)).map(([, ea]) => ea),\n    t.filter(([ea]) => isFalse(ea)).map(([, ea]) => ea)\n  ]\n}\n\nexport async function tryAsync<T>(f: () => T | Promise<T>) {\n  try {\n    return await f()\n  } catch {\n    return\n  }\n}\n\nexport const DefaultTryAllTimeoutMs = 30 * secondMs\n\nexport async function tryAll(\n  arr: (any | (() => any))[],\n  onError = (err: Error) => console.error(err),\n  timeoutMs = DefaultTryAllTimeoutMs\n): Promise<void> {\n  for (const ea of arr) {\n    try {\n      await thenOrTimeout(ea, timeoutMs)\n    } catch (err) {\n      onError(toErr(err)!)\n    }\n  }\n  return\n}\n\nexport async function thenFinally<T>(\n  p: SyncOrAsync<T> | (() => SyncOrAsync<T>),\n  err_: (err: Error | any) => any = () => {\n    // no-op\n  },\n  finally_: (r: T | Error) => any = () => {\n    // no-op\n  }\n): Promise<T> {\n  let result: T\n  let caught = null\n  try {\n    result = await (isFunction(p) ? p() : p)\n  } catch (err) {\n    caught = toErr(err)\n    try {\n      await err_(err)\n    } catch {\n      // no-op\n    }\n  }\n  try {\n    await finally_(caught ?? result!)\n  } catch {\n    // no-op\n  }\n  if (caught != null) {\n    throw caught\n  } else {\n    return result!\n  }\n}\n\nexport async function thenNot(\n  p: Maybe<boolean> | MaybePromiseMaybe<boolean>,\n  defaultIfNull = true\n): Promise<boolean> {\n  if (p == null) return defaultIfNull\n  const r = await p\n  return r == null ? defaultIfNull : !isTrue(r)\n}\n\nexport async function thenMap2<T1, T2, T3>(\n  objP1: MaybeSyncOrAsync<T1>,\n  objP2: MaybeSyncOrAsync<T2>,\n  f: (t1: T1, t2: T2) => MaybeSyncOrAsync<T3>\n): PromiseMaybe<T3> {\n  const o1 = await objP1\n  if (o1 == null) return\n  const o2 = await objP2\n  if (o2 == null) return\n  return f(o1, o2)\n}\n\n/**\n * Safe calls for Optional promises, with default\n */\nexport async function thenMapOr<T1, T2, T3>(\n  objP: MaybeSyncOrAsync<T1>,\n  f: (t: T1) => MaybeSyncOrAsync<T2>,\n  ifUndefined: () => SyncOrAsync<T3>\n): Promise<T2 | T3> {\n  const obj = await objP\n  if (obj == null) return ifUndefined()\n  const result = await f(obj)\n  return result == null ? ifUndefined() : result\n}\n/**\n * Safe calls for Optional promises, with default\n */\nexport async function thenMap2Or<A1, A2, R1, R2>(\n  objP1: MaybeSyncOrAsync<A1>,\n  objP2: MaybeSyncOrAsync<A2>,\n  f: (t1: A1, t2: A2) => MaybeSyncOrAsync<R1>,\n  ifUndefined: () => SyncOrAsync<R2>\n): Promise<R1 | R2> {\n  const o1 = await objP1\n  if (o1 == null) return ifUndefined()\n  const o2 = await objP2\n  if (o2 == null) return ifUndefined()\n  const result = await f(o1, o2)\n  return result == null ? ifUndefined() : result\n}\n\n/**\n * Only call f if the promise resolves to truthy\n */\nexport async function thenAnd<T>(\n  predicatePromise: MaybeNull<Promise<true | any>>,\n  f: () => SyncOrAsync<T>\n): PromiseMaybe<T> {\n  return predicatePromise != null && isTrue(await predicatePromise)\n    ? f()\n    : undefined\n}\n\nexport async function thenOrElse<T>(\n  objP: Promise<MaybeNull<T>> | MaybeNull<T>,\n  f: () => SyncOrAsync<T>\n): Promise<T> {\n  return orElse(await objP, f)\n}\n\n/**\n * Just like `firstDefinedPromise` but applies a function to all defined\n * elements in `arr`.\n */\nexport async function first<T, R>(\n  arr: Maybe<Maybe<T>[]>,\n  f: (t: T, index: number) => SyncOrAsync<MaybeNull<R>>\n): PromiseMaybe<R> {\n  if (arr != null) {\n    let index = -1\n    for (const t of arr) {\n      index++\n      try {\n        if (t == null) continue\n        const r = await f(t, index)\n        if (r != null) {\n          return r\n        }\n      } catch {\n        // no-op\n      }\n    }\n  }\n  return undefined\n}\n\n/**\n * @see #firstDefinedLater\n */\nexport async function firstDefinedPromise<T, U = T>(\n  promiseThunks: Thunk<MaybeSyncOrAsync<T>>[],\n  filter: (t: T) => SyncOrAsync<Maybe<U>> = identity as any\n): PromiseMaybe<U> {\n  for (const ea of promiseThunks) {\n    const o = await ea()\n    if (o != null) {\n      const result = await filter(o)\n      if (result != null) {\n        return result\n      }\n    }\n  }\n  return\n}\n\nexport async function firstResolvedDefinedPromise<T>(\n  promiseThunks: Thunk<MaybeSyncOrAsync<T>>[],\n  onError: (err: Error) => void\n): PromiseMaybe<T> {\n  for (const t of promiseThunks) {\n    try {\n      const result = await t()\n      if (result != null) {\n        return result\n      }\n    } catch (err) {\n      onError(toErr(err)!)\n    }\n  }\n  return\n}\n\nexport async function firstTruePromise<T>(\n  predicate: (t: T) => Maybe<boolean> | PromiseMaybe<boolean>,\n  ...promiseThunks: (() => MaybeSyncOrAsync<T>)[]\n): PromiseMaybe<T> {\n  for (const thunk of promiseThunks) {\n    try {\n      const ea = await thunk()\n      if (ea != null && (await predicate(ea)) === true) {\n        return ea\n      }\n    } catch (_) {\n      //\n    }\n  }\n  return\n}\n\n/**\n * @return `arr` sorted by the tuples in f. elements that `f` returns undefined\n * will be removed from the returned array.\n * @see https://en.wikipedia.org/wiki/Schwartzian_transform\n */\nexport async function sortByAsync<T, V extends Primitive | Primitive[]>({\n  name,\n  arr,\n  f\n}: {\n  name: string\n  arr: Maybe<MaybeSyncOrAsync<Maybe<T>[]>>\n  f: (t: T) => PromiseMaybe<V>\n}): Promise<T[]> {\n  const unsorted: [V, T][] = await thenCollectParallel({ name, arr, f })\n  return sortBy(unsorted, ea => ea[0]).map(ea => ea[1])\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { mapNotEmpty } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, mapFinite, round, sigFigs } from \"../../fe/Number\"\nimport {\n  Obj,\n  compactValues,\n  fromEntries,\n  mapCompactObj,\n  omit\n} from \"../../fe/Object\"\nimport { opt } from \"../../fe/Opt\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { Thunk, tot } from \"../../fe/Thunk\"\nimport { toErr } from \"../../fe/toErr\"\nimport { CountingSet } from \"../CountingSet\"\nimport { Elapsed } from \"../Elapsed\"\nimport { Logger, mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Average, AverageStats } from \"../math/Average\"\nimport { EndableRanks } from \"./Endable\"\nimport { EndableWrapper } from \"./EndableWrapper\"\nimport { setUnrefTimeout } from \"./Timers\"\n\nconst MinMs = 15\n\n// by undocumented convention, names are\n// ${section}.${filename}.${function?}?:${context?}\n\nfunction normalizeName(name: string) {\n  return name.split(\":\")[0].trim()\n}\n\nexport class PromiseTimer {\n  static readonly instance = lazy(() => {\n    const pt = new PromiseTimer()\n    new EndableWrapper(\n      \"PromiseTimer\",\n      () => {\n        const logger = mkLogger(\"async.PromiseTimer\")\n        mapCompactObj(pt.report(), ea => logger.info(\"timings:\", ea))\n        mapNotEmpty(pt.errorCounts(), err =>\n          logger.warn(\"error counts:\", fromEntries(err))\n        )\n      },\n      EndableRanks.stats\n    )\n    ee().on(\"timing\", (name: string, elapsedMs: number) =>\n      pt.push(name, elapsedMs)\n    )\n    // no need to clear stats except in tests:\n    if (isTest) ee().on(\"clearCache\", () => pt.clear())\n    return pt\n  })\n  private readonly errors = new CountingSet<string>()\n  private readonly times = new Map<string, Average>()\n\n  clear() {\n    this.errors.clear()\n    this.times.clear()\n  }\n\n  async time<T>(\n    desc: string,\n    p: Promise<T> | (() => SyncOrAsync<T>),\n    post?: (result: T | Error, elapsed: number) => void\n  ): Promise<T> {\n    const start = Date.now()\n    const expectedTime = clamp(\n      10 * secondMs,\n      minuteMs,\n      Math.round(this.times.get(desc)?.p98 ?? 0)\n    )\n    const slowTimer = setUnrefTimeout(\n      () =>\n        mkLogger(\"time(\" + desc + \")\").warn(\n          \"unsettled for \" + (Date.now() - start) + \"ms\"\n        ),\n      expectedTime\n    )\n\n    try {\n      const result = await tot(p)\n      const elapsed = Date.now() - start\n      post?.(result, elapsed)\n      this.push(desc, elapsed)\n      return result\n    } catch (err) {\n      this.errors.incr(desc)\n      post?.(toErr(err)!, Date.now() - start)\n      throw err\n    } finally {\n      clearTimeout(slowTimer)\n    }\n  }\n\n  get entriesBySumDesc() {\n    return sortBy([...this.times.entries()], ([, v]) => -v.sum)\n  }\n\n  stats(namePrefix: string) {\n    const arr = this.entriesBySumDesc.filter(([k]) => k.startsWith(namePrefix))\n    const merged = arr.reduce(\n      (agg, ea) => Average.merge(ea[1], agg),\n      new Average()\n    )\n    const stats = arr.map(\n      ([name, avg]) => [name, avg.stats()] as [string, AverageStats]\n    )\n    return fromEntries([[\"merged\", merged.stats()], ...stats])\n  }\n\n  mkElapsed(l: Logger) {\n    return new Elapsed(l, (s, ts) => this.push(s, ts))\n  }\n\n  push(name: string, elapsedMs: number) {\n    if (elapsedMs > MinMs) {\n      getOrSet(this.times, normalizeName(name), () => new Average()).push(\n        elapsedMs\n      )\n    }\n  }\n\n  weightedAvg(name: string): Maybe<number> {\n    return opt(this.times.get(normalizeName(name)))\n      .map(avg => avg.weightedSampleAvg)\n      .get()\n  }\n\n  errorCounts() {\n    return this.errors.top(10)\n  }\n\n  callCounts(): { [name: string]: number } {\n    return [...this.times.entries()].reduce(\n      (o, [k, v]) => ({ ...o, [k]: v.n }),\n      {}\n    )\n  }\n\n  weightedAvgs(): { [name: string]: number } {\n    return compactValues(\n      [...this.times.entries()].reduce(\n        (o, [k, v]) => ({ ...o, [k]: mapFinite(v.weightedSampleAvg, round) }),\n        {}\n      )\n    ) as any\n  }\n\n  toJSON() {\n    return this.entriesBySumDesc.reduce(\n      (o, [k, v]) => ({\n        ...o,\n        [k]: v.toJSON()\n      }),\n      {}\n    )\n  }\n\n  report(): { [name: string]: Obj } {\n    // Sort by most time first:\n    return this.entriesBySumDesc.reduce(\n      (o, [k, v]) => ({\n        ...o,\n        [k]: {\n          sumSec: sigFigs(v.sum / secondMs, 3),\n          ...omit(v.stats(), \"sum\")\n        }\n      }),\n      {}\n    )\n  }\n}\n\nexport function mkElapsed(name: string) {\n  return PromiseTimer.instance().mkElapsed(mkLogger(name))\n}\n\nexport function time<T>(\n  name: string,\n  p: Promise<T> | (() => SyncOrAsync<T>),\n  post?: (result: T | Error, elapsed: number) => void\n): Promise<T> {\n  return PromiseTimer.instance().time(name, p, post)\n}\n\nexport function timeSync<T>(name: string, t: Thunk<T>): T {\n  const start = Date.now()\n  const result = t()\n  pushTime(name, Date.now() - start)\n  return result\n}\n\nexport function pushTime(name: string, elapsedMs: number) {\n  PromiseTimer.instance().push(name, elapsedMs)\n}\n\nexport function timeStats(namePrefix: string) {\n  return PromiseTimer.instance().stats(namePrefix)\n}\n\nexport function timedLazy<T>(\n  name: string,\n  thunk: () => SyncOrAsync<T>,\n  ttlMs?: number\n) {\n  return lazy(async () => time(name, thunk), ttlMs)\n}\n","import events from \"events\"\nimport { compact, count, filterInPlace, isEmpty, remove } from \"../../fe/Array\"\nimport { Later } from \"../../fe/Later\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { Comparable } from \"../../fe/Primitive\"\nimport { Thunk, tot } from \"../../fe/Thunk\"\nimport { toS } from \"../../fe/toS\"\nimport { BoundedList } from \"../BoundedList\"\nimport { TypedEventEmitter } from \"../event/TypedEventEmitter\"\nimport { Average } from \"../math/Average\"\nimport { maxCpus } from \"../work/MaxCpus\"\nimport { Deferred } from \"./Deferred\"\n\nexport type NamedObject = Record<string, any> & { name: string }\n\nexport function toName(o: string | NamedObject) {\n  return (o as any)?.name ?? toS(o)\n}\n\nexport interface PromisesEvents {\n  vacancy: () => void\n  drain: () => void\n}\n\n/**\n * Aggregate promises efficiently\n *\n * Note that `N` is either a descriptive name for the promise, or can be a data\n * payload associated to the promise.\n */\nexport class Promises {\n  readonly ee = new events.EventEmitter() as TypedEventEmitter<PromisesEvents>\n\n  #maxConcurrency: Maybe<Thunk<Maybe<number>>>\n  lastWorkTs = 0\n  settleMsAvg = new Average()\n\n  #settledCount = 0\n  readonly #running: Deferred<any>[] = []\n  readonly #pending: {\n    d: Deferred<any>\n    l: Later<any>\n  }[] = []\n\n  readonly lastPushedNames = new BoundedList<string>(16)\n\n  constructor(\n    readonly name: string,\n    maxConcurrency?: Thunk<Maybe<number>>\n  ) {\n    this.#maxConcurrency = maxConcurrency\n  }\n\n  get maxConcurrency(): number {\n    return Math.floor(\n      clamp(1, maxCpus(), this.#maxConcurrency?.() ?? maxCpus())\n    )\n  }\n\n  end() {\n    this.#pending.length = 0\n    return this.awaitAll()\n  }\n\n  vacuum() {\n    filterInPlace(this.#running, ea => ea.isPending)\n  }\n\n  private get running() {\n    this.vacuum()\n    return this.#running\n  }\n\n  /**\n   * @return the total number of promises that have settled\n   */\n  get settledCount() {\n    return this.#settledCount\n  }\n\n  stats() {\n    return {\n      maxConcurrency: this.maxConcurrency,\n      lastPushMsAgo: Date.now() - this.lastWorkTs,\n      freeSlots: this.freeSlots(),\n      unsettledCount: this.unsettledCount(),\n      runningNames: this.#running.map(ea => ea.name),\n      pendingNames: this.#pending.map(ea => ea.d.name),\n      totalWorkCount: this.#settledCount\n    }\n  }\n\n  #enqueue<T>({\n    name,\n    l,\n    payload,\n    serialId\n  }: {\n    name: string\n    l: Later<T>\n    payload?: any\n    serialId?: Comparable\n  }) {\n    const d = new Deferred<T>(name, { payload, serialId })\n    this.#pending.push({ d, l })\n    return d\n  }\n\n  /**\n   * Start the given promise once concurrency is below\n   */\n  enqueue<T>({\n    name,\n    l,\n    payload,\n    serialId\n  }: {\n    name: string\n    l: Later<T>\n    payload?: any\n    serialId?: Comparable\n  }): Deferred<T> {\n    const d = this.#enqueue({ name, l, payload, serialId })\n    this.laterPop()\n    return d\n  }\n\n  enqueueAll<T>(name: string, laters: Later<T>[]): Promise<T[]> {\n    const p = laters.map(l => this.#enqueue({ name, l }).promise)\n    this.laterPop()\n    return Promise.all(p)\n  }\n\n  /**\n   * Run f() after all prior-enqueued promises with the same name have resolved.\n   */\n  serial<T>(name: string, f: () => Promise<T>): Promise<T> {\n    return this.enqueue({ name, l: f, serialId: name })\n  }\n\n  /**\n   * Immediately run the given promise\n   */\n  push<T>(\n    name: string,\n    promiseOrLater: Promise<T> | Later<T>,\n    payload?: any\n  ): Promise<T> {\n    return this.#pushDeferred(\n      new Deferred<T>(name, { payload }),\n      promiseOrLater\n    ).promise\n  }\n\n  #pushDeferred<T>(d: Deferred<T>, promiseOrLater: Promise<T> | Later<T>) {\n    const start = Date.now()\n    this.lastWorkTs = start\n\n    void d.observe(tot(promiseOrLater)).finally(() => {\n      this.#settledCount++\n      remove(this.#running, d)\n      this.settleMsAvg.push(Date.now() - start)\n      this.laterPop()\n    })\n    this.lastPushedNames.push(d.name)\n    this.#running.push(d)\n    return d\n  }\n\n  /**\n   * If there are any free slots and pending work, this may enqueue pending\n   * work.\n   */\n  laterPop() {\n    setImmediate(() => this.maybePopPendingWork())\n  }\n\n  // this doesn't need a mutex (like oneAtATime) because it's not async:\n  maybePopPendingWork() {\n    this.vacuum()\n    const maxJobsToStart = this.maxConcurrency - this.#running.length\n    if (maxJobsToStart === 0) {\n      return\n    }\n    // vacancy AND drain TESTS MUST BE DONE IN THIS ORDER:\n    if (isEmpty(this.#pending) && maxJobsToStart > 0) {\n      // listeners may add pending work, so this should be first:\n      this.ee.emit(\"vacancy\")\n    }\n    // If we're still empty after emitting vacancy, we're drained:\n    if (this.isIdle()) {\n      this.ee.emit(\"drain\")\n    }\n    const jobsToStart = Math.min(this.#pending.length, maxJobsToStart)\n    const runningSerialIds = compact(this.#running.map(ea => ea.serialId))\n    const blockedBySerialId = []\n    for (let i = 0; i < jobsToStart; i++) {\n      const pending = this.#pending.shift()!\n      if (pending == null) break // < shouldn't happen, but it's a backstop for Later Me to hit.\n      if (\n        pending.d.serialId != null &&\n        runningSerialIds.includes(pending.d.serialId)\n      ) {\n        // Nope, shove it to the back of the queue.\n        blockedBySerialId.push(pending)\n        // But keep going: other pending tasks may be eligible to run now!\n      } else {\n        if (pending.d.serialId != null) {\n          // Don't push another of these!\n          runningSerialIds.push(pending.d.serialId)\n        }\n        void this.#pushDeferred(pending.d, pending.l)\n      }\n    }\n    this.#pending.push(...blockedBySerialId)\n  }\n\n  isTaskRunning(taskName: string) {\n    return this.#running.some(ea => ea.name === taskName)\n  }\n\n  /**\n   * If you don't care about the returned promise: only run f() if all prior\n   * with the same name have finished, and return no-op otherwise\n   */\n  maybeRun<T>(name: string, f: () => Promise<T>): Maybe<Promise<T>> {\n    return this.freeSlots() > 0 && !this.isTaskRunning(name)\n      ? this.push(name, f)\n      : undefined\n  }\n\n  runningCount() {\n    return count(this.#running, ea => ea.isPending)\n  }\n\n  /**\n   * @return the count of both currently-running *and* enqueued jobs.\n   */\n  unsettledCount() {\n    // We don't want to muck with _arr state, so use this._arr directly:\n    return this.runningCount() + this.#pending.length\n  }\n\n  /**\n   * @return true if there are jobs that are running or enqueued.\n   */\n  hasPending() {\n    return this.#pending.length > 0 || this.running.length > 0\n  }\n\n  isIdle() {\n    return !this.hasPending()\n  }\n\n  freeSlots() {\n    return clamp(\n      0,\n      this.maxConcurrency,\n      this.maxConcurrency - this.unsettledCount()\n    )\n  }\n\n  isFull() {\n    return this.freeSlots() === 0\n  }\n\n  pendingNames(): string[] {\n    return [\n      ...this.#pending.map(ea => ea.d.name),\n      ...this.running.map(ea => ea.name)\n    ]\n  }\n\n  get deferreds() {\n    return [...this.running, ...this.#pending.map(ea => ea.d)]\n  }\n\n  pendingWithName(name: string) {\n    return this.deferreds.filter(ea => ea.name === name)\n  }\n\n  payloadsWithName(name: string) {\n    return this.pendingWithName(name)\n      .filter(ea => ea.payload != null)\n      .map(ea => ea.payload!)\n  }\n\n  get pendingPromises() {\n    return this.deferreds.map(ea => ea.promise)\n  }\n\n  /**\n   * @return a promise that will be resolved when all previously pushed and\n   * enqueued Promises are resolved. Rejections are swallowed.\n   * @see Promise.allSettled\n   */\n  async awaitSettled() {\n    await Promise.allSettled(this.pendingPromises)\n  }\n\n  /**\n   * @return a promise that will be resolved when all previously pushed and\n   * enqueued Promises are resolved, or any promises are rejected.\n   * @see Promise.all\n   */\n  async awaitAll() {\n    await Promise.all(this.pendingPromises)\n  }\n\n  async awaitAllByName(name: string) {\n    await Promise.all(\n      this.deferreds.filter(ea => ea.name === name).map(ea => ea.promise)\n    )\n  }\n}\n\n/**\n * Run the given thunk never more than once concurrently. Invocations while\n * prior runs were invoked will return after prior runs have completed but will\n * be no-ops.\n */\nexport function maybeRun<T>(\n  name: string,\n  l: Later<T>\n): () => Maybe<Promise<T>> {\n  const p = new Promises(name)\n  return () => p.maybeRun(name, l)\n}\n\nexport async function withBoundedConcurrency<T>({\n  name,\n  laters,\n  maxConcurrent\n}: {\n  name: string\n  laters: Later<T>[]\n  maxConcurrent?: number\n}): Promise<T[]> {\n  // SITS: NOTE: if we share the same Promises instance, and a code block within\n  // withBoundedConcurrency calls withBoundedConcurrency, we'll starve.\n  return new Promises(\n    name,\n    map(maxConcurrent, ea => () => ea)\n  ).enqueueAll(name, laters)\n}\n\nexport const PermissivePromises: Pick<Promises, \"enqueueAll\"> = {\n  enqueueAll<T>(_name: string, laters: Later<T>[]): Promise<T[]> {\n    return Promise.all(laters.map(f => f()))\n  }\n}\n","import { asPromise } from \"../../fe/AsPromise\"\nimport { delay } from \"../../fe/Delay\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\n\nexport const timeoutStacks: string[][] = []\n\n// TODO: convert consumers to fe/thenOrTimeout?\nexport async function thenOrTimeout<T>(\n  p: T | (() => T | Promise<T>),\n  timeoutMs: number,\n  onTimeout?: () => any,\n  onSuccess?: (t: T) => any | Promise<any>\n): PromiseMaybe<T> {\n  if (!gt0(timeoutMs)) {\n    const result = await asPromise(p)\n    await onSuccess?.(result)\n    return result\n  }\n  let _resolved = false\n  let timedOut = false\n  let result: Maybe<T>\n  await Promise.race([\n    asPromise(p).then(ea => {\n      if (!timedOut) {\n        result = ea\n        _resolved = true\n        return ea\n      } else {\n        return\n      }\n    }),\n    // This delay must be unref'ed so as to not prevent node from exitting:\n    delay(timeoutMs).then(() => {\n      if (!_resolved) {\n        timedOut = true\n      }\n    })\n  ])\n  if (_resolved) {\n    await onSuccess?.(result!)\n  } else {\n    await onTimeout?.()\n  }\n  return result\n}\n","// no-dependency onTimeout, to be set to ../work/WorkTimeout.onTimeout by\n// SyncService to avoid dependency loops\n\nlet timeoutHandler = (_soft?: boolean) => null\n\nexport function setTimeoutHandler(f: typeof timeoutHandler) {\n  timeoutHandler = f\n}\n\nexport function onTimeout({ soft }: { soft?: boolean } = {}) {\n  timeoutHandler(soft)\n}\n","import { setInterval, setTimeout } from \"timers\"\n\nexport function setUnrefTimeout(\n  callback: (...ea: any[]) => void,\n  ms: number,\n  ...args: any[]\n): NodeJS.Timeout {\n  return setTimeout(callback, Math.round(ms), ...args).unref()\n}\n\nexport function setUnrefInterval(\n  callback: (...ea: any[]) => void,\n  ms: number,\n  ...args: any[]\n): NodeJS.Timeout {\n  return setInterval(callback, Math.round(ms), ...args).unref()\n}\n","import { isTrue } from \"../../fe/Boolean\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { MaybeSyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { onTimeout } from \"./TimeoutHandler\"\n\nexport type UntilOpts<T> = {\n  timeoutMs?: number\n  intervalMs?: number\n  acceptable?: (t: Maybe<T>) => boolean\n  timeoutResult?: T\n  unref?: boolean\n}\n\n/**\n * Run `f()` until the result either passes `acceptable`, or is not `null`,\n * `undefined` or `false`.\n */\nexport async function until<T>(\n  f: () => MaybeSyncOrAsync<T>,\n  { timeoutMs, intervalMs, acceptable, timeoutResult, unref }: UntilOpts<T> = {}\n): PromiseMaybe<T> {\n  let sentSoftTimeout = false\n  const timeoutAt = timeoutMs == null ? undefined : timeoutMs + Date.now()\n  let delayCount = 1\n  while (timeoutAt == null || Date.now() < timeoutAt) {\n    const start = Date.now()\n    const result = await f()\n    const accept =\n      result != null &&\n      (isFunction(acceptable) ? acceptable(result) : (result as any) !== false)\n\n    if (accept) {\n      return result\n    } else {\n      const elapsedMs = Date.now() - start\n      if (timeoutMs != null && elapsedMs > timeoutMs / 2 && !sentSoftTimeout) {\n        sentSoftTimeout = true\n        onTimeout({ soft: true })\n      }\n      const delayMs =\n        intervalMs ??\n        clamp(\n          10 * delayCount, // < wait longer for subsequent delays.\n          ShortCommandTimeoutMs,\n          (timeoutMs ?? minuteMs) / 5\n        )\n      await delay(delayMs, unref)\n      delayCount++\n    }\n  }\n  if (!sentSoftTimeout) onTimeout({ soft: false })\n  return timeoutResult\n}\n\n/**\n * Run the given thunk until the promise is resolved to true, or the timeout\n * passes.\n * @return false on timeout, or true when the the given Later returned true.\n */\nexport async function untilTrue(\n  f: () => MaybeSyncOrAsync<boolean>,\n  opts: Omit<UntilOpts<boolean>, \"acceptable\" | \"timeoutResult\"> = {}\n): Promise<boolean> {\n  return until(f, {\n    ...opts,\n    acceptable: isTrue,\n    timeoutResult: false\n  }) as Promise<boolean>\n}\n","import child_process from \"child_process\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport {\n  compactValues,\n  entries,\n  filter,\n  fromEntries,\n  omit,\n  StringValued,\n  values\n} from \"../../fe/Object\"\nimport { partition } from \"../Array\"\nimport { env } from \"../env/Env\"\nimport {\n  ELECTRON_RUN_AS_NODE,\n  PS_IS_CHILD_PROCESS,\n  PS_IS_DOCKER\n} from \"../env/EnvKeys\"\nimport { caseInsensitiveEnv } from \"../env/GetEnv\"\nimport { ee } from \"../event/EventEmitter\"\nimport { childProcLocale } from \"../Locale\"\nimport { isLogged } from \"../log/LogFilter\"\nimport { mkLogger } from \"../Logger\"\nimport { nodeEnv } from \"../NodeEnv\"\nimport { mapEntries, sortedKeys } from \"../Object\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { isElectron, isPosix } from \"../platform/Platform\"\nimport {\n  allSettings,\n  getSettingByNameOrKey,\n  pathWithDefaults,\n  persistedSettings,\n  Settings,\n  transientSettings\n} from \"../settings/Settings\"\n\nconst SettingsKeys = lazy(() => new Set(values(Settings).map(ea => ea.key)))\n\nexport function psenv(): StringValued {\n  const set = SettingsKeys()\n  return sortedKeys(filter(env(), k => k === \"NODE_ENV\" || set.has(k)))\n}\n\nconst sensitiveEnvRE = lazy(() => {\n  try {\n    return new RegExp(Settings.sensitiveEnvRegExp.valueOrDefault, \"i\")\n  } catch (err) {\n    console.error(\n      `Invalid setting for \"sensitiveEnvRegExp\": ${err}. Using default value.`\n    )\n    return new RegExp(Settings.sensitiveEnvRegExp.defaultValue, \"i\")\n  }\n})\n\nlater(() => {\n  function unset() {\n    sensitiveEnvRE.unset()\n    sanitizedEnv.unset()\n  }\n  ee().on(\"clearCache\", unset)\n  ee().on(\"settingsChanged\", unset)\n  for (const ea of allSettings()) {\n    // allSettings because anything might need to be included in the child env!\n    ea.watchLater(unset)\n  }\n})\n\nconst RequiredPosixEnv = [\"HOME\", \"LANG\", \"USER\"]\nconst RequiredWindowsEnv = [\n  \"APPDATA\",\n  \"HOME\",\n  \"HOMEDRIVE\",\n  \"LOCALAPPDATA\",\n  \"SYSTEMDRIVE\",\n  \"SYSTEMROOT\",\n  \"TEMP\"\n]\n\nconst requiredEnv = lazy(() => {\n  const result = caseInsensitiveEnv().pick(\n    ...(isPosix ? RequiredPosixEnv : RequiredWindowsEnv)\n  )\n  // set PATH, and respect prior case:\n  const p = caseInsensitiveEnv().lookup(\"PATH\")\n  result[p?.key ?? \"PATH\"] = pathWithDefaults()\n  return result\n})\n\nexport const sanitizedEnv = lazy(() => {\n  const re = sensitiveEnvRE()\n  return mapEntries(process.env, (k, v) => (re.exec(k) == null ? v : undefined))\n})\n\nexport function childProcEnvSettings(forWorker: boolean) {\n  const result: StringValued = {\n    NODE_ENV: nodeEnv,\n    NO_COLOR: \"1\" // children shouldn't be rendering anything to the terminal\n  }\n  result[PS_IS_CHILD_PROCESS] = \"1\"\n\n  if (isDocker()) {\n    result[PS_IS_DOCKER] = \"1\"\n  }\n  if (isElectron) {\n    result[ELECTRON_RUN_AS_NODE] = \"1\"\n  }\n\n  for (const s of persistedSettings().filter(ea => ea.hasValue())) {\n    forWorker ? s.addToEnv(result) : s.addToEnvMaybe(result)\n  }\n  return result\n}\n\nexport type SpawnOptionsWithLocale = child_process.SpawnOptions & {\n  forceCLocale?: boolean\n  forThread?: boolean\n}\n\nexport function spawnOptions(\n  maybeOpts?: SpawnOptionsWithLocale\n): child_process.SpawnOptions {\n  const opts: SpawnOptionsWithLocale = maybeOpts ?? {}\n  return {\n    ...omit(opts, \"forceCLocale\"),\n    env: childEnv({\n      overrides: opts.env,\n      forceCLocale: opts.forceCLocale\n    }),\n    detached: false,\n    shell: false\n    // NOTE: don't use `windowsHide: true`, it doesn't work!\n  }\n}\n\nlet childEnvLogged = false\n\nexport function childEnv({\n  overrides,\n  forceCLocale = true,\n  forWorker = false\n}: {\n  overrides?: Maybe<StringValued>\n  forceCLocale?: boolean\n  forWorker?: boolean\n} = {}) {\n  const e: StringValued = compactValues({\n    // Include all (non-sensitive) env values, because things like `gio` need\n    // GNOME* and DBUS* variables set:\n    ...sanitizedEnv(),\n    ...requiredEnv(),\n    ...(forceCLocale ? childProcLocale() : {}),\n    ...childProcEnvSettings(forWorker),\n    ...(overrides ?? {}) // < env param wins\n  })!\n\n  // Don't let parent ENV set transients:\n  for (const s of transientSettings()) {\n    s.deleteFromEnv(e)\n  }\n\n  if (isLogged(\"debug\") && !childEnvLogged) {\n    childEnvLogged = true\n    const logger = mkLogger(\"child.ChildEnv\")\n    const arr = entries(e)\n    const [ps, nonPs] = partition(\n      arr,\n      ([k]) =>\n        k === \"TZ\" ||\n        k === \"NODE_ENV\" ||\n        k.startsWith(\"LC_\") ||\n        // we have some env that aren't settings (like PS_KEEP_LIBRARY):\n        k.startsWith(\"PS_\") ||\n        getSettingByNameOrKey(k) != null\n    )\n    logger.debug(\"PS env:\", fromEntries(ps))\n    logger.debug(\"non PS env:\", fromEntries(nonPs))\n  }\n\n  return sortedKeys(e)\n}\n","import child_process from \"child_process\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { secondMs } from \"../../fe/Date\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Latch } from \"../../fe/Latch\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt, gt0, isNumber } from \"../../fe/Number\"\nimport { omit, pick } from \"../../fe/Object\"\nimport { trimLastNewline } from \"../../fe/String\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { isSingleSpecTests } from \"../NodeEnv\"\nimport { Try } from \"../Object\"\nimport { waitForPidExit } from \"../Pid\"\nimport { Pids, addPid, killPid } from \"../Pids\"\nimport { niceable, renice } from \"../Renice\"\nimport { Deferred } from \"../async/Deferred\"\nimport { setUnrefTimeout } from \"../async/Timers\"\nimport { isIgnorableError } from \"../error/ErrorTypes\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { closeStreams, endStream } from \"../fs/Streams\"\nimport { isLogged } from \"../log/LogFilter\"\nimport { spawnOptions } from \"./ChildEnv\"\n\nconst logger = lazy(() => mkLogger(\"child.ChildProcess\"))\n\nfunction cp2log(cp: child_process.ChildProcess) {\n  return pick(\n    cp as any,\n    \"pid\",\n    \"killed\",\n    \"connected\",\n    \"exitCode\",\n    \"signalCode\",\n    \"spawnfile\",\n    \"spawnargs\"\n  )\n}\n\nexport async function endProcess(\n  cp: Maybe<child_process.ChildProcess>,\n  timeoutMs = 30 * secondMs\n): Promise<boolean> {\n  if (cp == null) return false\n  logger().debug(\"endProcess()\", cp2log(cp))\n\n  const pid = cp.pid\n\n  if (pid == null || pid <= 0) {\n    logger().warn(\"endProcess(): asked to end invalid pid\", cp2log(cp))\n    return false\n  }\n  if (pid === process.pid) {\n    logger().warn(\"endProcess(): asked to end MY pid\", cp2log(cp))\n    return false\n  }\n  if (pid === process.ppid) {\n    logger().warn(\"endProcess(): asked to end my parent pid\", cp2log(cp))\n    return false\n  }\n\n  closeStreams(cp)\n\n  {\n    // Send a SIGTERM\n    const killResult = cp.kill()\n    logger().debug(\"endProcess(\" + pid + \")\", {\n      killResult,\n      childGotSigterm: cp.killed\n    })\n    if (!killResult) {\n      await killPid(pid).catch(err => {\n        logger().warn(\"endProcess(): kill(\" + pid + \",false) failed: \" + err)\n      })\n    }\n  }\n\n  // We don't use messaging, but in case we do later:\n  // TODO: do we need to do this?\n  // if (cp.connected) Try(() => cp.disconnect())\n\n  // We can exit even if this child is still running:\n  Try(() => cp.unref())\n\n  // don't wait for cleanup if we're running tests:\n  if (isSingleSpecTests()) return true\n\n  if (await waitForPidExit(pid, timeoutMs)) {\n    logger().debug(\"endProcess(): exitted\", cp2log(cp))\n    return true\n  }\n\n  {\n    // OK, shite got real. time for kill -9.\n    void Pids.instance()?.onKill(pid)\n    const killResult = cp.kill(\"SIGKILL\")\n    logger().warn(\"endProcess(\" + pid + \") had to resort to SIGKILL\", {\n      killResult\n    })\n    if (!killResult) {\n      await killPid(pid, true).catch(err => {\n        logger().warn(\"endProcess(): kill(\" + pid + \",true) failed: \" + err)\n      })\n    }\n  }\n\n  // Give the OS some time to clean up:\n  return waitForPidExit(pid, 5000)\n}\n\nexport const ReniceAfterMs = lazy(() => 15 * secondMs)\nexport const AddPidAfterMs = lazy(() => 30 * secondMs)\n\n// NOTE: MUST NOT BE ASYNC\nfunction newProc(\n  cp: child_process.ChildProcess,\n  cmd: string,\n  args: ReadonlyArray<string>,\n  maxAgeMs = 0\n) {\n  const start = new Date()\n  // If we write the pidfile now and hold up processing, `cp.stderr` and\n  // `cp.stdout` event listeners will miss initial data, so we put this in a\n  // timeout for later.\n\n  // Note that THIS IS NOT UNREF'ed! We want pids to be cleaned up!\n\n  const timeouts: NodeJS.Timeout[] = []\n\n  // Renice after a second\n  if (niceable(cmd, args)) {\n    timeouts.push(\n      setUnrefTimeout(\n        () => {\n          if (gt0(cp.pid)) {\n            void renice(cp.pid)\n          }\n        },\n        ReniceAfterMs() // only track and renice processes that run for a while\n      )\n    )\n  }\n\n  // Force-end processes after maxAgeMs\n  if (gt(maxAgeMs, secondMs)) {\n    timeouts.push(\n      setUnrefTimeout(() => {\n        if (gt0(cp.pid)) {\n          void endProcess(cp)\n        }\n      }, maxAgeMs - 250)\n    )\n  }\n\n  // Track long-lived processes:\n  timeouts.push(\n    setUnrefTimeout(\n      () => {\n        if (gt0(cp.pid)) {\n          return addPid(\n            { pid: cp.pid, cmd, maxAgeMs, ppid: process.pid },\n            start\n          )\n        }\n        return\n      },\n      AddPidAfterMs() // only track and renice processes that run for a while\n    )\n  )\n  // This allows cp resources to be GC'ed:\n  cp.on(\"exit\", () => timeouts.forEach(clearTimeout))\n\n  return cp\n}\n\nexport function spawn(\n  command: string,\n  args: ReadonlyArray<string>,\n  maxAgeMs: number,\n  options?: child_process.SpawnOptions\n): child_process.ChildProcess {\n  const opts = spawnOptions(options)\n  logger().debug(\"spawn()\", { command, args, maxAgeMs })\n  return newProc(\n    child_process.spawn(command, args, opts),\n    command,\n    args,\n    maxAgeMs\n  )\n}\n\nexport type ExecFileOptions =\n  | child_process.ExecFileOptions\n  | child_process.ExecFileOptionsWithBufferEncoding\n  | child_process.ExecFileOptionsWithStringEncoding\n\nexport function execFile(\n  command: string,\n  args: ReadonlyArray<string>,\n  maxAgeMs?: number,\n  options?: ExecFileOptions\n): child_process.ChildProcess {\n  const opts = spawnOptions(options)\n  // Only log the opts (which are long: they include ENV!) if we're tracing:\n  if (isLogged(\"trace\", logger().context)) {\n    logger().debug(\"execFile()\", { command, args, maxAgeMs, opts })\n  } else {\n    logger().debug(\"execFile()\", { command, args, maxAgeMs })\n  }\n\n  return newProc(\n    child_process.execFile(command, args, opts),\n    command,\n    args,\n    maxAgeMs\n  )\n}\n\nexport type StdoutOpts = {\n  timeoutMs: number\n  quiet?: boolean\n  disconnect?: boolean\n  ignoreStderr?: boolean\n  ignoreExitCode?: boolean\n  isIgnorableError?: (err: any) => boolean\n} & child_process.ExecFileOptions\n\nexport type StdoutResult = {\n  result: string\n  pid?: number\n  code?: number\n  signal?: string\n}\n\nexport async function stdoutResult_(\n  cmd: string,\n  args: string[],\n  opts: StdoutOpts\n): Promise<StdoutResult> {\n  const quiet = opts.quiet ?? false\n  const ignoreStderr = opts.ignoreStderr ?? false\n  const ignoreExitCode = opts.ignoreExitCode ?? false\n  const proc: child_process.ChildProcess = execFile(\n    cmd,\n    args,\n    opts.timeoutMs,\n    omit(opts, \"timeout\", \"quiet\", \"ignoreStderr\", \"ignoreExitCode\")\n  )\n\n  if (opts.disconnect === true) {\n    try {\n      // disconnect may not exist!\n      proc.disconnect?.()\n    } catch {\n      //\n    }\n    return { result: \"\", pid: proc.pid! }\n  }\n\n  const pid = proc.pid\n  // don't panic if we don't have a pid yet: this happens on Windows!\n\n  const name = stringify({ pid, cmd, args })\n  const stdoutChunks: (Buffer | string)[] = []\n  const stderrChonks: (Buffer | string)[] = []\n  const errors: Error[] = []\n  const exitCode = new Deferred<number>(name)\n\n  proc.on(\"error\", err => errors.push(err))\n  proc.on(\"exit\", e => {\n    if (isNumber(e) && exitCode.isPending) void exitCode.resolve(e)\n  })\n  proc.on(\"close\", e => {\n    if (isNumber(e) && exitCode.isPending) void exitCode.resolve(e)\n  })\n\n  void endStream(proc.stdin)\n\n  const stdoutEnded = new Latch()\n\n  if (proc.stdout == null) {\n    void stdoutEnded.resolve()\n  } else {\n    proc.stdout.on(\"error\", err => errors.push(err))\n    proc.stdout.on(\"data\", data => stdoutChunks.push(data))\n    proc.stdout.on(\"end\", () => stdoutEnded.resolve())\n  }\n\n  const stderrEnded = new Latch()\n\n  if (proc.stderr == null || ignoreStderr) {\n    void stderrEnded.resolve()\n  } else {\n    proc.stderr?.on(\"error\", err => errors.push(err))\n    proc.stderr?.on(\"data\", err => stderrChonks.push(err))\n    proc.stderr?.on(\"end\", () => stderrEnded.resolve())\n  }\n\n  logger().debug(\"stdoutResult_() invoked and waiting for completion...\", {\n    name\n  })\n\n  // Wait for the process to finish...\n  await thenOrTimeoutError(exitCode.promise, opts.timeoutMs)\n\n  logger().debug(\"stdoutResult_() exitCode settled...\", {\n    name,\n    exitCode: exitCode.value,\n    stdout: stdoutEnded.state(),\n    stderr: stderrEnded.state()\n  })\n\n  // Wait for chonks (which may show up AFTER the process exits). It shouldn't\n  // take long to flush these streams.\n  await thenOrTimeoutError(stdoutEnded.promise, 2 * secondMs)\n\n  await thenOrTimeoutError(stderrEnded.promise, 2 * secondMs)\n\n  // Add stderr chunks to errors:\n  const stderr = stderrChonks.join(\"\")\n  if (notBlank(stderr)) errors.push(new Error(stderr))\n  if (!quiet && isNotEmpty(errors)) {\n    logger().warn(name + \" resulted in errors:\", errors)\n  }\n\n  // Any errors that we can't ignore?\n  const isIgnorableFunc = opts.isIgnorableError ?? isIgnorableError\n  const causes = errors.filter(ea => isIgnorableFunc(ea) !== true)\n  if (causes.length > 0) {\n    throw causes.length === 1\n      ? causes[0]\n      : new WrappedError(\"Failed to run \" + cmd + \" \" + args.join(\" \"), {\n          causes\n        })\n  }\n\n  // Was the exit code sad?\n  if (!ignoreExitCode && exitCode.value !== 0) {\n    throw new Error(name + \": exit code \" + exitCode.value)\n  }\n\n  const result = stdoutChunks.join(\"\")\n\n  return {\n    result,\n    pid,\n    code: exitCode.value\n  }\n}\n\n/**\n * @return just the stdout stream\n * @see stdoutResult_ if you need more information about the command.\n */\nexport async function stdout_(\n  cmd: string,\n  args: string[],\n  opts: StdoutOpts\n): Promise<string> {\n  const result = await stdoutResult_(cmd, args, opts)\n  return logger().tap({\n    level: \"trace\",\n    msg: \"stdout_()\",\n    result: trimLastNewline(result.result),\n    meta: { cmd, args, opts, result }\n  })\n}\n","import { pidExists, Rate } from \"batch-cluster\"\nimport { ChildProcess } from \"child_process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { denull, map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt, gt0, lt } from \"../../fe/Number\"\nimport { Obj } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport {\n  addEndable,\n  Endable,\n  EndableRank,\n  EndableRanks,\n  ending\n} from \"../async/Endable\"\nimport { Promises } from \"../async/Promises\"\nimport { isRecentMs } from \"../date/Date\"\nimport { FatalErrorFlag } from \"../error/ErrorFlags\"\nimport { onError } from \"../error/OnError\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { onDataChunked } from \"../fs/StreamChunker\"\nimport { mkLogger } from \"../Logger\"\nimport { waitForPidExit } from \"../Pid\"\nimport { Settings } from \"../settings/Settings\"\nimport { endProcess, spawn } from \"./ChildProcess\"\n\nexport interface WatchedChildOpts {\n  name: string\n  childFactory: () => ChildProcess | Promise<ChildProcess>\n  dataSep?: string | RegExp\n  maxErrorsPerMinute?: number\n  endableRank?: EndableRank\n  exitCommand?: string\n  restartOnExit?: boolean // should only be false when we test sync\n  endTimeoutMs?: number | null\n}\n\nexport interface WatchedChildListener {\n  onStdout(data: string): void\n\n  /**\n   * @return true if the error should be propagated to onError\n   */\n  onStderr?(data: string): boolean\n\n  /**\n   * @return true if the error requires the child process to be restarted\n   */\n  onError(source: string, error: any): boolean\n\n  onRestart?(): void\n\n  /**\n   * Is it OK to start if we can't shut down a prior child process?\n   */\n  ignoreStopErrors: boolean // should be true for non-PS daemons\n}\n\n// so basic\nexport function mkBasicWatchedChild(\n  args: {\n    cmd: string\n    args: string[]\n  } & Partial<WatchedChildListener>\n) {\n  const wc: WatchedChild = new WatchedChild({\n    name: compact([args.cmd, ...args.args]).join(\" \"),\n    childFactory: () => {\n      // Restart every 30 minutes to prevent memory leaks:\n      return spawn(args.cmd, args.args, 30 * minuteMs)\n    },\n    onStdout: () => undefined,\n    onError: () => true,\n    ignoreStopErrors: true,\n    ...args\n  })\n  return wc\n}\n\n/**\n * BatchCluster is for ephemeral clusters of stateless processes.\n *\n * To watch a single, long-lived process, though, we need different management\n * heuristics than what batch-cluster gives us:\n *\n * 1. Start the child on construction\n * 2. Delegate all stdout, and errors to the provided listener\n * 3. Restart the child if it crashes/ends and this process hasn't ended\n * 4. The caller may need to specifically stop(), and then arbitrarily later, start()\n * 5. Notify the listener if the error rate is too high, or restarts are\n *    \"flapping\" (more than N restarts per some period of where the child spins\n *    up and immediately fails). It's up to the listener to then do something\n *    with that state information (including potentially end the current\n *    process).\n *\n * This class is used for `gio`, `findmnt`, `diskutil`, as well as the `sync`\n * and `web` PhotoStructure daemons.\n */\nexport class WatchedChild implements Endable {\n  readonly name: string\n  readonly startTs = Date.now()\n  private _stopped = false\n  private readonly logger = lazy(() =>\n    mkLogger(\"WatchedChild(\" + compact([this.name, this.pid]).join(\":\") + \")\")\n  )\n  readonly startRate = new Rate()\n  readonly mutex = new Promises(\"child.WatchedChild.mutex\", () => 1)\n  readonly opts: Required<WatchedChildOpts> & WatchedChildListener\n  #ended = false\n  private lastError?: WrappedError\n  private cp?: ChildProcess\n\n  constructor(opts: WatchedChildOpts & WatchedChildListener) {\n    this.name = opts.name\n    this.opts = {\n      dataSep: \"\\n\",\n      maxErrorsPerMinute: Settings.fatalErrorRatePerMinute.valueOrDefault,\n      endableRank: EndableRanks.first,\n      exitCommand: \"\",\n      restartOnExit: true,\n      endTimeoutMs: null,\n      ...opts\n    }\n    // Let the web or db service take some time to close, vacuum, and back up the db.\n    addEndable(this.opts.endableRank, this)\n    void this.#restart()\n  }\n\n  get endTimeoutMs() {\n    return denull(this.opts.endTimeoutMs)\n  }\n\n  get stopped() {\n    return this._stopped\n  }\n\n  get ended() {\n    return this.#ended\n  }\n\n  async end() {\n    this.#ended = true\n    return this.#stop()\n  }\n\n  get proc(): Maybe<ChildProcess> {\n    return this.cp\n  }\n\n  get pid(): Maybe<number> {\n    return map(this.cp, ea => ea.pid)\n  }\n\n  running(): boolean {\n    return pidExists(this.pid)\n  }\n\n  notRunning(): boolean {\n    return !this.running()\n  }\n\n  /**\n   * Shuts down the current process. The process won't start again until restart() is called.\n   * @return false if stop failed\n   */\n  async stop(): Promise<boolean> {\n    this.logger().info(\"stop()\")\n    this._stopped = true\n    return this.mutex.serial(\"\", () => {\n      this._stopped = true\n      return this.#stop()\n    })\n  }\n\n  async #stop(): Promise<boolean> {\n    this.logger().info(\"#stop()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    const cp = this.cp\n    this.cp = undefined\n    if (cp == null) return true // nothing to stop\n    return this.#stopChild(cp)\n  }\n\n  async #stopChild(cp: ChildProcess) {\n    // Send the exit command, if it isn't blank, and stdin is still open:\n    if (\n      gt0(cp.pid) &&\n      notBlank(this.opts.exitCommand) &&\n      true === cp.stdin?.writable\n    ) {\n      try {\n        cp.stdin.write(this.opts.exitCommand + \"\\n\")\n        // Given the child a chance to exit gracefully before we call\n        // endProcess:\n        await waitForPidExit(cp.pid, (this.endTimeoutMs ?? secondMs) / 2)\n      } catch (error) {\n        this.logger().warn(\"stopChild: error writing to stdin\", { error })\n      }\n    }\n    return endProcess(cp, this.endTimeoutMs)\n  }\n\n  readonly onError = (src: string, cause: Buffer | string | Error | Obj) => {\n    const error = new WrappedError(src, {\n      cause\n    })\n    const ignorable = error.ignorable !== false\n    this.logger().log(ignorable ? \"warn\" : \"error\", \"onError()\", error)\n    if (this.#ended || ignorable) {\n      return\n    }\n\n    this.lastError = error\n    onError(error)\n\n    if (error.fatal === true) {\n      void this.end()\n      return\n    }\n\n    const requiresRestart = this.opts.onError(src, error)\n    if (requiresRestart) {\n      this.logger().warn(\"onError requested restart\", { src, error })\n      void this.#restart()\n    }\n    return\n  }\n\n  isErrorRateExceeded() {\n    return this.logger().tap({\n      msg: \"isErrorRateExceeded()\",\n      result: gt(this.startRate.eventsPerMinute, this.opts.maxErrorsPerMinute),\n      meta: {\n        startRatePerMin: this.startRate.eventsPerMinute,\n        maxErrorsPerMin: this.opts.maxErrorsPerMinute\n      }\n    })\n  }\n\n  async restart(force = false) {\n    this.logger().info(\"restart()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    if (this.#ended || ending()) return false\n    if (\n      !force &&\n      lt(\n        this.startRate.msSinceLastEvent,\n        Settings.minTimeBetweenServiceRestartsMs.valueOrDefault\n      )\n    ) {\n      this.logger().info(\"restart(): last restart was too recent. Ignoring.\", {\n        msSinceLastEvent: this.startRate.msSinceLastEvent,\n        minTimeBetweenServiceRestartsMs:\n          Settings.minTimeBetweenServiceRestartsMs.valueOrDefault\n      })\n      return\n    }\n    return this.mutex.serial(\"\", async () => {\n      await this.#stop()\n      this._stopped = false\n      return this.#start()\n    })\n  }\n\n  async start() {\n    this.logger().info(\"start()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    return this.mutex.serial(\"\", async () => {\n      this._stopped = false\n      return this.#start()\n    })\n  }\n\n  /**\n   * Only called by onError/onExit, and pauses restarts if error rate is too high.\n   * @return false if errors\n   */\n  async #restart() {\n    this.logger().info(\"#restart()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    return this.mutex.maybeRun(\"\", async () => {\n      await this.#stop()\n      if (this._stopped || this.#ended) return false\n      if (this.isErrorRateExceeded()) {\n        this.logger().warn(\"Cannot restart, error/restart rate is too high.\", {\n          errorsPerMinute: this.startRate.eventsPerMinute,\n          msSinceLastStart: this.startRate.msSinceLastEvent\n        })\n        // If we're just spinning up, die.\n        if (isRecentMs(this.startTs, Settings.probationMs.valueOrDefault)) {\n          onError(\n            \"Can't restart \" +\n              this.name +\n              \", failure rate is too high.\" +\n              FatalErrorFlag,\n            this.lastError\n          )\n        }\n        return false\n      }\n      this.logger().info(\"#restart()\", {\n        currentPid: this.pid,\n        startRate: this.startRate,\n        maxErrorsPerMinute: this.opts.maxErrorsPerMinute\n      })\n\n      // eslint-disable-next-line no-unused-expressions\n      this.opts.onRestart?.()\n\n      return this.#start()\n    })\n  }\n\n  // CAREFUL: this must be protected by this.mutex!\n\n  /**\n   * @return true if new pid was started\n   */\n  async #start(): Promise<boolean> {\n    this.logger().info(\"#start()\", {\n      stopped: this._stopped,\n      ended: this.#ended\n    })\n    if (this._stopped || this.#ended) return false\n    if (this.running()) return false\n    this.startRate.onEvent()\n    const cp = (this.cp = await this.opts.childFactory())\n\n    // Pick up the new PID:\n    this.logger.unset()\n    this.logger().info(\"#start(): spawned pid \" + this.pid)\n\n    const ctx = \"cp(\" + cp.pid + \")\"\n    ;[\n      { o: cp, desc: \"\" },\n      { o: cp.stdin, desc: \".stdin\" },\n      { o: cp.stdout, desc: \".stdout\" },\n      { o: cp.stderr, desc: \".stderr\" }\n    ].forEach(({ o, desc }) => {\n      map(o, ea =>\n        ea.on(\"error\", err => this.onError(ctx + desc + \".on(error)\", err))\n      )\n    })\n\n    void map(this.cp.stdout, sout =>\n      onDataChunked(sout, this.opts.dataSep, ea => {\n        this.logger().trace(\"onDataChunked()\", ea)\n        this.opts.onStdout(ea)\n      })\n    )\n\n    void map(this.cp.stderr, serr =>\n      serr.on(\"data\", s => {\n        if (toS(s).includes(\"Error: Cannot find module\")) {\n          onError(\"Failed to start \" + this.name + FatalErrorFlag, new Error(s))\n        }\n        if (this.opts.onStderr?.(s) === true) {\n          void this.onError(ctx + \".stderr.on(data)\", s)\n        }\n      })\n    )\n\n    this.cp.on(\"exit\", async (code: number | null, signal: string | null) => {\n      this.logger().info(\"onExit\", {\n        code,\n        signal,\n        stopped: this._stopped,\n        ended: this.#ended\n      })\n      if (ending()) {\n        return\n      } else if (this.opts.restartOnExit) {\n        await this.#restart()\n        this.logger().info(\"onExit(): finished setting up new child\", {\n          pid: this.pid\n        })\n      } else {\n        this.logger().info(\n          \"onExit(): this.opts.restartOnExit is false. Ending.\",\n          { pid: this.pid }\n        )\n        void this.end()\n      }\n    })\n    return true\n  }\n}\n","import * as path_posix from \"node:path/posix\"\nimport { SimpleFileOrString } from \"../core/fs/SimpleFile\"\nimport { examples } from \"./ExamplesDir\"\nimport { TestLibraryDirPrefix } from \"./TestLibraryDirPrefix\"\nimport { originalsDir } from \"./dir/LibraryDir\"\nimport { BaseFile } from \"./fs/BaseFile\"\nimport { stripCopySuffixFromName } from \"./fs/FuzzyNames\"\nimport { PosixFile } from \"./fs/PosixFile\"\n\n/**\n * Directories end with a \"/\"\n */\n\nexport function ciSafePath(nativePath: SimpleFileOrString): string {\n  const pf = PosixFile.for(nativePath)\n  const f = pf.sibling(stableBasename(pf))\n\n  if (f.isSelfOrDescendantOf(examples())) {\n    return path_posix.join(\"$examples\", f.posixPathFrom(examples()))\n  }\n\n  const origDir = originalsDir()\n\n  if (f.isSelfOrDescendantOf(origDir)) {\n    return path_posix.join(\"$library\", f.posixPathFrom(origDir!))\n  }\n\n  const anc = pf.findAncestor(ea => ea.base.startsWith(TestLibraryDirPrefix))\n  if (anc != null) {\n    return path_posix.join(\"$library\", f.posixPathFrom(anc))\n  }\n  // well crap, we don't know what to do with this path:\n  return pf.baseWithGrandparent\n}\n\nexport function stableBasename(f: BaseFile): string {\n  return stripCopySuffixFromName(f, { aggressive: false }) + f.ext\n}\n","import { Command, program } from \"commander\"\nimport { argv, exit } from \"process\"\nimport { version } from \"../../core/Version\"\nimport { mapNotBlankOr } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Obj } from \"../../fe/Object\"\nimport { ServiceName } from \"../../fe/ServiceNames\"\nimport { EditionName } from \"../EditionName\"\nimport { isTest } from \"../NodeEnv\"\nimport { setServiceName } from \"../SetServiceName\"\nimport { joinLines } from \"../fs/CRLF\"\nimport { isMainElectron } from \"../platform/Platform\"\nimport { CliDesc, addFooter } from \"./CliConstants\"\nimport { cliWrap } from \"./CliWrap\"\nimport { DescriptionFooter } from \"./DescriptionFooter\"\nimport { verifyUidGid } from \"./VerifyUidGid\"\n\nexport interface CommandPlugin {\n  beforeParse(cmd: Command): Command\n  afterParse?(opts: Obj): void\n}\n\nexport class CLI {\n  private readonly plugins: CommandPlugin[] = []\n\n  /**\n   * @param args if non-empty, passed to `Command.arguments()`\n   */\n  constructor(\n    readonly serviceName: keyof typeof CliDesc & ServiceName,\n    readonly args?: string,\n    readonly additionalDescription?: string\n  ) {\n    setServiceName(serviceName)\n    verifyUidGid()\n  }\n\n  add(...plugins: CommandPlugin[]) {\n    this.plugins.push(...plugins)\n    return this\n  }\n\n  parse() {\n    let cmd = addFooter(\n      program.description(\n        cliWrap(\n          CliDesc[this.serviceName] +\n            mapNotBlankOr(\n              this.additionalDescription,\n              ea => \"\\n\\n\" + ea,\n              () => \"\"\n            )\n        ).join(\"\\n\")\n      ) as Command\n    )\n\n    map(this.args, ea => {\n      cmd = cmd.arguments(ea)\n    })\n\n    for (const ea of this.plugins) {\n      cmd = ea.beforeParse(cmd)\n    }\n\n    cmd.option(\n      \"-V, --version\",\n      \"Output version information (spoiler: it's \" +\n        (isTest ? \"1.2.3-test\" : version) +\n        \")\"\n    )\n\n    cmd.on(\"option:version\", () => {\n      console.log(\n        joinLines(\n          ...cliWrap(EditionName() + \" v\" + version + \"\\n\" + DescriptionFooter)\n        )\n      )\n      exit(0)\n    })\n\n    cmd.parse(argv, { from: isMainElectron ? \"electron\" : \"node\" })\n\n    const opts = cmd.opts()\n\n    for (const ea of this.plugins) {\n      ea.afterParse?.(opts)\n    }\n\n    return cmd\n  }\n}\n","import { Command } from \"commander\"\nimport { joinLines } from \"../fs/CRLF\"\nimport { cliWrap } from \"./CliWrap\"\nimport { DescriptionFooter } from \"./DescriptionFooter\"\n\nexport const CliDesc = {\n  main: \"PhotoStructure's main process manager. Runs and manages web and sync services.\",\n  desktop: \"PhotoStructure for Desktops. Manages web and sync services.\",\n  info: \"Configuration, file metadata and import diagnostics tool.\",\n  list: \"List paths in a PhotoStructure Library.\",\n  logcat: \"Chronologically sort and pretty-print PhotoStructure logfiles.\",\n  logtail:\n    \"View the log messages of currently-running PhotoStructure processes as they are emitted. (Like `tail -f`).\",\n  web: \"PhotoStructure's web service. Automatically started by main.\",\n  sync: \"PhotoStructure's directory synchronization service. Automatically started by main.\"\n  // worker doesn't have a CLI.\n}\n\nexport function addFooter(c: Command): Command {\n  return c.on(\"--help\", () => {\n    console.log(joinLines(...cliWrap(DescriptionFooter)))\n  })\n}\n","import { env, stdout } from \"process\"\nimport { toInt } from \"../../fe/Number\"\nimport { wrap } from \"../../fe/String\"\n\nexport function cliWrap(\n  s: string,\n  opts?: { maxLineLen?: number; prefix?: string }\n) {\n  const maxLineLen =\n    opts?.maxLineLen ?? toInt(env.maxLineLen) ?? stdout.columns ?? 75\n  return wrap(s, { maxLineLen, prefix: opts?.prefix ?? \"\" })\n}\n","import { Command } from \"commander\"\nimport { Settings } from \"../../core/settings/Settings\"\nimport { map } from \"../../fe/Maybe\"\nimport { Obj } from \"../../fe/Object\"\nimport { isEnvTrue } from \"../env/GetEnv\"\nimport { CommandPlugin } from \"./CLI\"\n\nexport const ColorArgs: CommandPlugin = {\n  beforeParse: (cmd: Command) =>\n    cmd\n      .option(\n        \"--color\",\n        \"Enable ASCII terminal colors (this overrides NO_COLOR, if set)\"\n      )\n      .option(\n        \"--no-color\",\n        \"Disable ASCII terminal colors (see https://no-color.org/)\"\n      ),\n\n  afterParse: (opts: Obj) => {\n    // these don't need to be assigned to .envValue, but it means info\n    // --child-env will emit these changes (and avoid confusion)\n    if (isEnvTrue(\"NO_COLOR\")) Settings.logColor.envValue = false\n    // but let the env to be overridden by an arg:\n    map(opts.color, ea => (Settings.logColor.envValue = ea))\n  }\n}\n","export const DescriptionFooter = [\n  \"\",\n  `Copyright © 2017-${new Date().getFullYear()}, PhotoStructure Inc.`,\n  \"\",\n  \"BY USING THIS SOFTWARE, YOU ARE ACCEPTING ALL THE TERMS AND CONDITIONS OF THIS LICENSE: https://photostructure.com/eula/\",\n  \"\",\n  \"User guide: https://photostructure.com/user-guide/\",\n  \"\",\n  \"Questions, bug reports, and feature requests: https://forum.photostructure.com/\",\n  \"\"\n].join(\"\\n\")\n","import { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toGt0 } from \"../../fe/Number\"\nimport { groupids, userids } from \"../UserInfo\"\nimport { env } from \"../env/Env\"\nimport { isDocker } from \"../platform/isDocker\"\n\nfunction whyMismatched(\n  desc: string,\n  envKey: string,\n  actual: number[]\n): Maybe<string> {\n  const val = toGt0(env()[envKey])\n  return val != null && !actual.includes(val)\n    ? `WARNING: ${desc} is running as ${actual} but $${envKey}=${val}`\n    : undefined\n}\n\nexport function whyUidGidMismatched(): Maybe<string[]> {\n  const arr = compactBlanks([\n    whyMismatched(\"user id\", \"PUID\", userids()),\n    whyMismatched(\"group id\", \"PGID\", groupids())\n  ])\n  return arr.length === 0 ? undefined : arr\n}\n\nexport const verifyUidGid = lazy(() => {\n  if (isDocker()) {\n    map(whyUidGidMismatched(), why =>\n      console.log(\n        [\n          \"\",\n          ...why,\n          \"This may result in file permission issues!\",\n          // Angle-bracket-surrounded URLs may be included in the URL (!!) by UnRAID. BOO\n          \"See https://forum.photostructure.com/t/1597/2 for details.\",\n          \"\"\n        ].join(\"\\n\")\n      )\n    )\n  }\n})\n","import { DateObjectUnits, DateTime, Duration, Zone } from \"luxon\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { hourMs, isDate, secondMs } from \"../../fe/Date\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { closeTo as closeToNumber, gt0, round } from \"../../fe/Number\"\nimport { isObject, omit } from \"../../fe/Object\"\nimport { cmp } from \"../../fe/Primitive\"\nimport { mkLogger } from \"../Logger\"\n\nconst logger = lazy(() => mkLogger(\"date.Date\"))\n\n// WHAT THE ACTUAL FLYING F luxon 2 removed zone from DateObject.\n\n// SITS: Luxon considers 0 to be INVALID for month, day, and hour, so these\n// are all optional.\nexport interface DateObject\n  extends Pick<\n      DateObjectUnits,\n      \"year\" | \"month\" | \"day\" | \"hour\" | \"minute\" | \"second\"\n    >,\n    Pick<DateObjectUnits, \"millisecond\"> {\n  zone?: string | Zone | undefined\n  rawValue?: string\n  tzoffsetMinutes?: number | undefined\n}\n\nexport function isDateObject(a: any): a is DateObject {\n  return isObject(a) && [\"year\", \"month\", \"day\"].every(k => k in a)\n}\n\nexport function cmpDate(a?: Date, b?: Date): number {\n  const aTime = mapOr(\n    a,\n    d => d.getTime(),\n    () => 0\n  )\n  const bTime = mapOr(\n    b,\n    d => d.getTime(),\n    () => 0\n  )\n  return cmp(aTime, bTime)\n}\n\nexport function msUntil(d?: Date): number {\n  if (d == null) return 0\n  const ts = d.getTime()\n  const n = Date.now()\n  return ts <= n ? 0 : ts - n\n}\n\nexport function closeTo(a: Maybe<Date>, b: Maybe<Date>, maxMsDelta: number) {\n  return (\n    a != null && b != null && Math.abs(a.getTime() - b.getTime()) <= maxMsDelta\n  )\n}\n\nexport function nowish(d: Maybe<number | Date>, maxMsDelta = 2500): boolean {\n  return d == null\n    ? false\n    : isDate(d)\n    ? closeTo(d, new Date(), maxMsDelta)\n    : Math.abs(d - Date.now()) < maxMsDelta\n}\n\nexport function isRecentMs(timeMs: Maybe<number>, deltaMs: number): boolean {\n  return closeToNumber(Date.now(), timeMs, deltaMs)\n}\n\nexport function fmtMs(ms: number): string {\n  return Duration.fromMillis(ms).toFormat(\"m:ss.SSS\")\n}\n\nexport function durationToPaddedHMS(ms: number): string {\n  return Duration.fromMillis(ms).toFormat(\"hhhh:mm:ss.SSS\")\n}\n\nexport function durationHMS(ms: number): string {\n  return Duration.fromMillis(round(ms / secondMs) * secondMs).toFormat(\n    ms < hourMs ? \"m:ss\" : \"h:mm:ss\"\n  )\n}\n\nexport function isoNow() {\n  return new Date().toISOString()\n}\n\nexport function utcIsoToTs(iso: Maybe<string>): Maybe<number> {\n  if (blank(iso)) return\n  const dt = DateTime.fromISO(iso, { zone: \"utc\" })\n  return dt.isValid ? dt.toMillis() : undefined\n}\n\nexport function dateObjectToDateTime(obj: Maybe<DateObject>): Maybe<DateTime> {\n  if (obj == null) return\n  try {\n    const dou: DateObjectUnits = omit(\n      obj,\n      \"zone\",\n      \"rawValue\",\n      \"tzoffsetMinutes\"\n    )\n    for (const k of [\"month\", \"day\", \"hour\"] as const) {\n      if (!gt0(dou[k])) {\n        delete dou[k]\n      }\n    }\n    const d = DateTime.fromObject(dou, { zone: obj.zone })\n    if (d != null && !d.isValid) {\n      logger().debug(\"dateObjectToDateTime() invalid\", {\n        obj,\n        why: d.invalidExplanation\n      })\n    }\n    return d?.isValid ? d : undefined\n  } catch (error) {\n    logger().debug(\"dateObjectToDateTime() failed\", { obj, error })\n    return\n  }\n}\n\n// DON'T USE JS DATE TO PARSE! js date parsing erases timezones and forces\n// everything to local or UTC.\n","// See https://moment.github.io/luxon/docs/manual/parsing.html#table-of-tokens\n// and https://en.wikipedia.org/wiki/Date_format_by_country\nexport const DefaultDateTimeFormats = [\n  \"y-M-d 'at' H.m.s\", // macOS screenshots\n  \"y-M-d H-m-s\", // gnome screenshots\n  \"y-MMM-d H-m-s\", // reasonable timestamp with short month name\n  \"y-MMMM-d H-m-s\", // reasonable timestamp with full month name\n  \"y-MM-dd HHmmss\", // windows screenshots\n  \"yMMdd_HHmmss\", // smartphone camera filenames\n  \"yMMdd-HHmmss\", // smartphone camera filenames\n  // \"MM.dd.yyyy HH:mm:ss\", // old LG datestamps\n  \"F\", // short localized date and time with seconds, may have slashes\n  \"FF\" // less short localized date and time with seconds\n\n  // We don't need to add y-m-d parsers here--those are handled automatically\n  // by FuzzyDateParser.\n]\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isNumber } from \"../../fe/Number\"\nimport { FifoCache } from \"../FifoCache\"\nimport { fmtFullDuration, parseDuration } from \"./DurationFormat\"\n\nconst decCache = new FifoCache<Maybe<number>>(512)\n\n/**\n * @param s either number in milliseconds or an ISO 8601 duration string\n * @return milliseconds encoded by `s`\n */\nexport function decodeDuration(s: Maybe<string | number>): Maybe<number> {\n  return isNumber(s)\n    ? s\n    : blank(s)\n    ? undefined\n    : decCache.getOrSet(s, () => parseDuration(s))\n}\n\nconst encCache = new FifoCache<Maybe<string>>(512)\n\n/**\n * @param value either number in milliseconds or an ISO 8601 duration string\n * @return ISO 8601 duration string\n */\nexport function encodeDuration(value: Maybe<number | string>): Maybe<string> {\n  return blank(value)\n    ? undefined\n    : encCache.getOrSet(value, () =>\n        fmtFullDuration(isNumber(value) ? value : decodeDuration(value))\n      )\n}\n","import { Duration } from \"luxon\"\nimport { compact } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport {\n  dayMs,\n  hourMs,\n  minuteMs,\n  secondMs,\n  weekMs,\n  yearMs\n} from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte0, isDigits, isNumber, lt0, toFloat, toInt } from \"../../fe/Number\"\nimport { isString } from \"../../fe/String\"\nimport { captures } from \"../RegExp\"\nimport { sum } from \"../math/Vector\"\n\nexport function parseDuration(str: number | string): Maybe<number> {\n  try {\n    if (str == null || (!isString(str) && !isNumber(str))) return\n\n    // Assume milliseconds if the string is just a number.\n    if (isNumber(str)) return str\n    if (isDigits(str)) return toInt(str)\n\n    str = str.trim().toUpperCase()\n    if (str.length === 0) return\n\n    // Is it ISO formatted?\n    const d = Duration.fromISO(str)\n    if (d.isValid) return d.toMillis()\n\n    // Nope, not ISO. Maybe something like \"1d 2h 3m 4s 5ms\"?\n\n    const re =\n      /[\\s,]*?(?<value>-?(?:\\d+)?\\.?\\d+)\\s*(?<type>milliseconds?|msecs?|millis|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?[\\s,]*?/gim\n\n    const groups = captures(re, str)\n    if (groups.length === 0) return\n\n    const units = compact(\n      groups.map(ea => parseUnit(ea.groups?.value, ea.groups?.type))\n    )\n\n    // if the first value is negative, flip the sign of the remainder of the values.\n    const values = lt0(units[0])\n      ? [units[0], ...units.slice(1).map(ea => -ea)]\n      : units\n\n    return sum(values)\n  } catch {\n    return\n  }\n}\n\nfunction parseUnit(value?: string, type?: string): Maybe<number> {\n  const n = toFloat(value)\n  if (n == null) return\n  if (blank(type)) {\n    // assume milliseconds\n    return n\n  }\n  switch (type.toLowerCase()) {\n    case \"years\":\n    case \"year\":\n    case \"yrs\":\n    case \"yr\":\n    case \"y\":\n      return n * yearMs\n    case \"weeks\":\n    case \"week\":\n    case \"w\":\n      return n * weekMs\n    case \"days\":\n    case \"day\":\n    case \"d\":\n      return n * dayMs\n    case \"hours\":\n    case \"hour\":\n    case \"hrs\":\n    case \"hr\":\n    case \"h\":\n      return n * hourMs\n    case \"minutes\":\n    case \"minute\":\n    case \"mins\":\n    case \"min\":\n    case \"m\":\n      return n * minuteMs\n    case \"seconds\":\n    case \"second\":\n    case \"secs\":\n    case \"sec\":\n    case \"s\":\n      return n * secondMs\n    case \"milliseconds\":\n    case \"millisecond\":\n    case \"millis\":\n    case \"msecs\":\n    case \"msec\":\n    case \"ms\":\n      return n\n    default:\n      // This should never occur.\n      throw new Error(\n        `parseDuration(): unit ${type} was matched, but no matching case exists.`\n      )\n  }\n}\n\nconst Units = [\n  { ms: yearMs, s: \"y\" },\n  { ms: weekMs, s: \"w\" },\n  { ms: dayMs, s: \"d\" },\n  { ms: hourMs, s: \"h\" },\n  { ms: minuteMs, s: \"m\" },\n  { ms: secondMs, s: \"s\" },\n  { ms: 1, s: \"ms\" }\n]\n\nexport function fmtFullDuration(\n  ms: Maybe<number>,\n  sep: \"\" | \" \" | \",\" = \"\"\n): Maybe<string> {\n  if (!isNumber(ms)) return\n  if (ms === 0) return \"0\"\n  if (!gte0(ms)) {\n    return !isNumber(ms) ? undefined : \"-\" + fmtFullDuration(Math.abs(ms))\n  }\n  const result = []\n  for (const unit of Units.slice(Units.findIndex(ea => ea.ms <= ms!))) {\n    const i = Math.floor(ms / unit.ms)\n    ms -= i * unit.ms\n    if (i > 0) result.push(i + unit.s)\n  }\n  return result.join(sep)\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\n/**\n * @see https://sqlite.org/pragma.html#pragma_auto_vacuum\n */\nexport const AutoVacuumModes = strEnum(\"NONE\", \"FULL\", \"INCREMENTAL\")\nexport type AutoVacuumMode = StrEnumKeys<typeof AutoVacuumModes>\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const CheckpointTypes = strEnum(\n  \"AUTO\",\n  \"PASSIVE\",\n  \"FULL\",\n  \"RESTART\",\n  \"TRUNCATE\"\n)\nexport type CheckpointType = StrEnumKeys<typeof CheckpointTypes>\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const RepairModes = strEnum(\"dump\", \"recover\")\nexport type RepairMode = StrEnumKeys<typeof RepairModes>\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\nimport { BaseFile } from \"../fs/BaseFile\"\n\nexport const Schemas = strEnum(\"models\", \"stats\")\nexport type Schema = StrEnumKeys<typeof Schemas>\n\nexport const SqliteExt = \".sqlite3\"\n\nexport const SqliteBase = \"db\" + SqliteExt\n\nexport function pathToDbDir<T extends BaseFile>(dataDir: T, schema: Schema): T {\n  return dataDir.join(schema)\n}\nexport function pathToDb<T extends BaseFile>(dataDir: T, schema: Schema): T {\n  return pathToDbDir(dataDir, schema).join(SqliteBase)\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const SynchronousModes = strEnum(\"OFF\", \"NORMAL\", \"FULL\", \"EXTRA\")\nexport type SynchronousMode = StrEnumKeys<typeof SynchronousModes>\n","import _path, { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { SimpleAppName, SimpleAppNameLC } from \"../AppName\"\nimport { userid } from \"../UserInfo\"\nimport { env } from \"../env/Env\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { onError } from \"../error/OnError\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { mkNoMedia_ } from \"../fs/MkNoMedia\"\nimport { mkdirpSync_ } from \"../fs/Path\"\nimport { isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { setSettingsDefaults } from \"../settings/SettingsDefaults\"\nimport { DefaultDockerLibraryDir } from \"./DefaultDockerLibraryDir\"\nimport { FirstDirArg, filterDirs, firstDir } from \"./FirstDir\"\nimport { homeDir } from \"./HomeDir\"\n\nconst uidSuffix = lazy(() => map(userid(), ea => \"-\" + ea) ?? \"\")\n\nexport function tmpCacheDirs(): FirstDirArg[] {\n  if (isDocker()) {\n    return [\n      {\n        dir: \"/tmp/.photostructure-cache\" + uidSuffix(),\n        preexistingDir: \"/tmp\"\n      }\n    ]\n  } else {\n    // Fallback to /tmp and /var/tmp on Linux and macOS, and %TEMP% on Windows:\n    const result: FirstDirArg[] = []\n    const dirs = isWin ? [getEnv(\"TEMP\"), getEnv(\"TMP\")] : [\"/tmp\", \"/var/tmp\"]\n    for (const tmpDir of dirs) {\n      if (!blank(tmpDir)) {\n        result.push({\n          dir: join(tmpDir, \".photostructure-cache\" + uidSuffix()),\n          preexistingDir: tmpDir\n        })\n      }\n    }\n    return result\n  }\n}\n\nexport function tmpDirs(): string[] {\n  return filterDirs({ dirs: tmpCacheDirs(), desc: \"tmp\" })\n}\n\nexport function cacheDirs(): FirstDirArg[] {\n  if (isDocker()) {\n    return compact([\n      map(env().XDG_CACHE_HOME, ea => ({\n        dir: join(ea, SimpleAppNameLC),\n        preexistingDir: ea\n      })),\n      // these should be mountpoints. We shouldn't make them.\n      { dir: \"/ps/tmp\", preexistingDir: \"/ps/tmp\" },\n      { dir: \"/ps/cache\", preexistingDir: \"/ps/cache\" },\n      {\n        dir: DefaultDockerLibraryDir + \"/.photostructure/cache\" + uidSuffix(),\n        preexistingDir: DefaultDockerLibraryDir\n      },\n      ...tmpCacheDirs()\n    ])\n  }\n\n  const dirs = compactBlanks(\n    isWin\n      ? [getEnv(\"LOCALAPPDATA\"), _path.resolve(homeDir(), \"AppData\", \"Local\")]\n      : isMac\n      ? [_path.resolve(homeDir(), \"Library\", \"Caches\")]\n      : // see https://forum.photostructure.com/t/1471/6\n        [env().XDG_CACHE_HOME, join(homeDir(), \".cache\")]\n  )\n\n  // .cache directories on linux seem to be uniformly lowercase, and uniformly\n  // UpperCased on macOS and Windows.\n  const cacheSubDir = isLinux ? SimpleAppNameLC : SimpleAppName\n\n  // These directories should exist already:\n  const result: FirstDirArg[] = dirs.map(ea => ({\n    dir: join(ea, cacheSubDir),\n    preexistingDir: ea\n  }))\n  result.push(...tmpCacheDirs())\n  return result\n}\n\n/**\n * Should only be used by Settings.cacheDir.defaultValue\n */\n// lazy for tests\nexport const defaultCacheDir = lazy<string>(() => {\n  return firstDir({ dirs: cacheDirs(), desc: \"cache\" })!\n})\n\nconst addSettingsListener = lazy(() => {\n  // make sure the config dir setting has the default wired up:\n  setSettingsDefaults()\n  Settings.cacheDir.watchLater(resetCacheDir)\n})\n\nexport const cacheDir = lazy<Maybe<string>>(() => {\n  try {\n    return cacheDir_()\n  } catch (error) {\n    onError(\"cacheDir_() failed\", { error })\n    return undefined\n  }\n})\n\nexport const cacheDir_ = lazy<string>(() => {\n  addSettingsListener()\n  const nativePath = Settings.cacheDir.valueOrDefault\n  try {\n    mkdirpSync_(nativePath) // < throw if we can't mkdirp\n    void mkNoMedia_(nativePath)\n    return nativePath\n  } catch (cause) {\n    throw new WrappedError(\"Failed to set up cacheDir, \" + nativePath, {\n      path: nativePath,\n      fatal: true,\n      cause\n    })\n  }\n})\n\nexport function resetCacheDir() {\n  Settings.cacheDir.refreshEnvValue({ broadcastChange: false })\n  defaultCacheDir.unset()\n  cacheDir.unset()\n  cacheDir_.unset()\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { setSettingsDefaults } from \"../settings/SettingsDefaults\"\nimport { DefaultDockerLibraryDir } from \"./DefaultDockerLibraryDir\"\nimport { desktopConfigDir, desktopConfigDirs } from \"./DesktopConfigDir\"\nimport { envConfigDir } from \"./EnvConfigDir\"\nimport { firstDir } from \"./FirstDir\"\n\n// PhotoStructure's \"system\" config dir is not backed by a Setting, but will\n// respect customizations via env.PS_CONFIG_DIR (but not configDir, because that\n// may not be photostructure-specific)\n\nexport const configDir = lazy(() => {\n  setSettingsDefaults()\n  return envConfigDir() ?? (isDocker() ? dockerConfigDir() : desktopConfigDir())\n})\n\nconst dockerConfigDirs = [\n  {\n    dir: \"/ps/config\",\n    preexistingDir: \"/ps/config\"\n  },\n  {\n    dir: DefaultDockerLibraryDir + \"/.photostructure/docker-config\",\n    preexistingDir: DefaultDockerLibraryDir\n  }\n]\n\nfunction dockerConfigDir() {\n  return firstDir({\n    dirs: dockerConfigDirs,\n    desc: \"config\"\n  })\n}\n\nexport function resetConfigDir() {\n  configDir.unset()\n}\n\nexport function osConfigDirs() {\n  return (isDocker() ? dockerConfigDirs : desktopConfigDirs()).map(ea => ea.dir)\n}\n","export const DefaultDockerLibraryDir = \"/ps/library\"\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { isReadWriteableDirectorySync } from \"../fs/StatSync\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { DefaultDockerLibraryDir } from \"./DefaultDockerLibraryDir\"\n\n// This was extracted from LibraryDir to break a deploop with PosixFile\n\nexport function defaultLibraryDir(): Maybe<string> {\n  return isDocker() ? DefaultDockerLibraryDir : undefined\n}\n\nexport function defaultOriginalsDir(): string {\n  return isDocker() && isReadWriteableDirectorySync(\"/ps/originals\")\n    ? \"/ps/originals\"\n    : \".\" // < relative to $PS_LIBRARY\n}\n","import path from \"path\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { AppName } from \"../AppName\"\nimport { env } from \"../env/Env\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { isMac, isWin } from \"../platform/Platform\"\nimport { FirstDirArg, firstDir } from \"./FirstDir\"\nimport { homeDir } from \"./HomeDir\"\n\nexport function desktopConfigDir() {\n  return firstDir({\n    dirs: desktopConfigDirs(),\n    desc: \"config\"\n  })!\n}\n\nexport function desktopConfigDirs(): FirstDirArg[] {\n  const dirs: Maybe<string>[] = []\n\n  // Note that process.env.PS_CONFIG_DIR is examined before this method is invoked.\n\n  if (isWin) {\n    dirs.push(getEnv(\"APPDATA\"), path.resolve(homeDir(), \"AppData\", \"Roaming\"))\n  } else if (isMac) {\n    dirs.push(path.resolve(homeDir(), \"Library\", \"Application Support\"))\n  } else {\n    dirs.push(\n      env().XDG_DATA_HOME,\n      env().XDG_CONFIG_HOME,\n      path.resolve(homeDir(), \".config\")\n    )\n  }\n\n  return compactBlanks(dirs).map(ea => ({\n    dir: path.join(ea, AppName()),\n    preexistingDir: ea\n  }))\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { mkdirpSync_ } from \"../fs/Path\"\n\nexport function envConfigDir(): Maybe<string> {\n  // not \"configDir\", because that could be something else:\n  const fromEnv = getEnv(\"PS_CONFIG_DIR\")\n  if (!blank(fromEnv)) {\n    try {\n      mkdirpSync_(fromEnv)\n      return fromEnv\n    } catch (cause) {\n      console.error(\n        \"The environment variable PS_CONFIG_DIR is set to \" +\n          fromEnv +\n          \", but mkdir failed.\",\n        cause\n      )\n    }\n  }\n  return\n}\n","import { mkdirpSync } from \"fs-extra\"\nimport { compact } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isReadWriteableDirectorySync } from \"../fs/StatSync\"\n\nexport interface FirstDirArg {\n  dir: Maybe<string>\n  /**\n   * If set, and this dir does not exist, don't mkdirp `dir`.\n   */\n  preexistingDir?: Maybe<string>\n}\n\n/**\n * Return the first directory that exists (or whose required parent exists), and\n * that can be `mkdir -p`'ed with sufficient permissions.\n */\nexport function firstDir({\n  dirs,\n  desc\n}: {\n  dirs: Maybe<FirstDirArg>[]\n  desc: string\n}): Maybe<string> {\n  for (const { dir, preexistingDir } of compact(dirs)) {\n    if (blank(dir)) continue\n    if (isReadWriteableDirectorySync(dir)) return dir\n    if (blank(preexistingDir) || isReadWriteableDirectorySync(preexistingDir)) {\n      try {\n        mkdirpSync(dir)\n        return dir\n      } catch (err) {\n        console.error(\"Failed to mkdir for \" + desc, err)\n      }\n    }\n  }\n  return\n}\n\nexport function filterDirs({\n  dirs,\n  desc\n}: {\n  dirs: Maybe<FirstDirArg>[]\n  desc: string\n}): string[] {\n  return compact(dirs.map(dir => firstDir({ dirs: [dir], desc })))\n}\n","import { homedir } from \"os\"\nimport { resolve } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { isDirectorySync } from \"../fs/StatSync\"\nimport { isWin } from \"../platform/Platform\"\n\nexport const homeDir = lazy(() => {\n  const paths = []\n  if (isWin) {\n    // cygwin may mess with HOMEPATH and HOME. Only trust USERPROFILE.\n    paths.push(getEnv(\"USERPROFILE\"))\n  } else {\n    paths.push(getEnv(\"HOME\"))\n  }\n  for (const ea of compactBlanks(paths)) {\n    const d = resolve(ea)\n    if (isDirectorySync(d)) return d\n  }\n  return homedir()\n})\n","import { containedByNativePath, toPathnames } from \"../fs/Path\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { cacheDir } from \"./CacheDir\"\nimport { libraryDataDir, libraryPreviewsDir } from \"./LibraryDir\"\n\nexport function inHiddenPhotoStructureDir(child: SimpleFileOrString): boolean {\n  if (\n    toPathnames(child).some(\n      ea => ea.toLowerCase().startsWith(\".photostructure\") // < handle .photostructure-test\n    )\n  ) {\n    return true\n  }\n\n  for (const dir of [libraryDataDir, libraryPreviewsDir, cacheDir]) {\n    if (\n      containedByNativePath({\n        descendant: child,\n        ancestor: dir(),\n        acceptSelf: true\n      })\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { toNotBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { resolveMaybe } from \"../fs/Path\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { Settings } from \"../settings/Settings\"\n\nexport function libraryDir(libraryDirOverride?: Maybe<SimpleFileOrString>) {\n  return (\n    toNotBlank(toS(libraryDirOverride)) ?? Settings.libraryDir.valueOrDefault\n  )\n}\n\nexport function originalsDir(libraryDirOverride?: Maybe<SimpleFileOrString>) {\n  return resolveMaybe(\n    libraryDir(libraryDirOverride),\n    Settings.originalsDir.valueOrDefault\n  )\n}\n\nexport function libraryDataDir(libraryDirOverride?: Maybe<SimpleFileOrString>) {\n  return resolveMaybe(\n    libraryDir(libraryDirOverride),\n    // subdir is all lowercase to minimize case-(in)sensitive filesystem pain\n    // and suffering\n    \".photostructure\"\n  )\n}\n\nexport function libraryPreviewsDir(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n) {\n  return resolveMaybe(\n    libraryDir(libraryDirOverride),\n    Settings.previewsDir.valueOrDefault\n  )\n}\n","import { uniq } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { version } from \"../Version\"\nimport { Schemas, pathToDbDir } from \"../db/Schemas\"\nimport { NoLibraryErrorFlag } from \"../error/ErrorFlags\"\nimport { mkNoMedia_ } from \"../fs/MkNoMedia\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFileOrString } from \"../fs/SimpleFile\"\nimport { writeTextfile_ } from \"../fs/WriteFile\"\nimport { imageCacheDir_ } from \"../img/ImageCache\"\nimport { Settings } from \"../settings/Settings\"\nimport {\n  libraryDataDir,\n  libraryDir,\n  libraryPreviewsDir,\n  originalsDir\n} from \"./LibraryDir\"\n\nconst README = `\nHello, and thank you for using PhotoStructure!\n\nThe files in this folder support your PhotoStructure Library, including\n\n  * a database with the filepaths to your photos and movies\n  * previews and thumbnails of your photos and movies\n  * content metadata about these assets, like ratings and sharing information\n  * albums that both you and PhotoStructure Curators have assembled\n  * synchronization reports describing what directories and files were synced (and why)\n\nMoving or deleting any files here will cause problems using your library.\n\nIf you have any questions, please visit https://forum.photostructure.com .\n\nSincerely,\n\nYour Friendly Neighborhood PhotoStructure, v${version}\n`\n\nexport function libraryDirPosixFile(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return PosixFile.forMaybe(libraryDir(libraryDirOverride))\n}\n\n/**\n * libraryDataDir was pulled out of Library so settings could be written into\n * .photostructure, rather than directly into the library root.\n */\nexport function libraryDataDirPosixFile(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return PosixFile.forMaybe(libraryDataDir(libraryDirOverride))\n}\n\nexport async function setupLibraryDirs_(\n  libraryDirOverride?: SimpleFileOrString\n): Promise<PosixFile[]> {\n  const l = libraryDirPosixFile(libraryDirOverride)\n  await mkdirRW_(l, false)\n  const dataDir = await setupLibraryDataDir_(l)\n  return uniq([\n    l,\n    dataDir,\n    // this _is not_ parallel to avoid DDOS on smaller boxen\n    await setupLibraryOriginalsDir_(l),\n    await setupLibraryPreviewsDir_(l),\n    await setupLibrarySyncReportsDir_(l),\n    await setupLibraryDbDir_(l),\n    await imageCacheDir_()\n  ])\n}\n\nasync function mkdirRW_(dir: Maybe<PosixFile>, neverIndex = true) {\n  if (dir == null) return\n  await dir?.mkdirp_() // if we can't make this directory, fail.\n  await dir?.assertReadWriteExecutable()\n  // Tell macOS Spotlight to not index this directory:\n  if (neverIndex) await dir?.join(\".metadata_never_index\").touch()\n  return dir\n}\n\n/**\n * @throws if there are issues\n */\nexport async function setupLibraryDataDir_(\n  libraryDirOverride?: SimpleFileOrString\n): Promise<PosixFile> {\n  const dataDir = libraryDataDirPosixFile(libraryDirOverride)\n  if (dataDir == null) {\n    throw new Error(\"empty libraryDataDir\" + NoLibraryErrorFlag)\n  }\n  await mkdirRW_(dataDir)\n  await mkNoMedia_(dataDir) // < optional, don't fail here\n  const readmeFile = dataDir.join(\"README.txt\")\n  await writeTextfile_(readmeFile.nativePath, README)\n  return dataDir\n}\n\nexport function libraryOriginalsDirPosixFile(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return PosixFile.forMaybe(originalsDir(libraryDirOverride))\n}\n\nexport async function setupLibraryOriginalsDir_(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): PromiseMaybe<PosixFile> {\n  return mkdirRW_(libraryOriginalsDirPosixFile(libraryDirOverride))\n}\n\nexport function libraryPreviewsDirPosixFile(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return PosixFile.forMaybe(libraryPreviewsDir(libraryDirOverride))\n}\n\nexport async function setupLibraryPreviewsDir_(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): PromiseMaybe<PosixFile> {\n  return mkdirRW_(libraryPreviewsDirPosixFile(libraryDirOverride))\n}\n\nexport function librarySyncReportsDir(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): Maybe<PosixFile> {\n  return libraryDirPosixFile(libraryDirOverride)?.join(\n    // NOTE: the default is .photostructure/sync-reports, so don't add the data dir here!\n    Settings.syncReportsDir.valueOrDefault\n  )\n}\n\nexport async function setupLibrarySyncReportsDir_(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): PromiseMaybe<PosixFile> {\n  return mkdirRW_(librarySyncReportsDir(libraryDirOverride))\n}\n\nexport async function setupLibraryDbDir_(\n  libraryDirOverride?: Maybe<SimpleFileOrString>\n): PromiseMaybe<PosixFile> {\n  return mkdirRW_(\n    map(libraryDataDirPosixFile(libraryDirOverride), ea =>\n      pathToDbDir(ea, Schemas.models)\n    )\n  )\n}\n","import _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { toS } from \"../../fe/toS\"\nimport { SimpleAppName } from \"../AppName\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { isMac } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { systemSettingsFile } from \"../settings/SystemSettings\"\nimport { readTomlFileSync } from \"../settings/Toml\"\nimport { cacheDirs } from \"./CacheDir\"\nimport { DefaultDockerLibraryDir } from \"./DefaultDockerLibraryDir\"\nimport { firstDir } from \"./FirstDir\"\nimport { homeDir } from \"./HomeDir\"\n\nexport function defaultLogDirs() {\n  if (isDocker()) {\n    return [\n      {\n        dir: \"/ps/logs\",\n        preexistingDir: \"/ps/logs\"\n      },\n      {\n        dir: DefaultDockerLibraryDir + \"/.photostructure/logs\",\n        preexistingDir: \"/ps/library\"\n      },\n      {\n        dir: \"/tmp/photostructure-logs\",\n        preexistingDir: \"/tmp\" // this will certainly exist, but not be persistent. It's only here as a backstop.\n      }\n    ]\n  } else if (isMac) {\n    return [\n      {\n        dir: _path.resolve(homeDir(), \"Library\", \"Logs\", SimpleAppName),\n        preexistingDir: homeDir()\n      }\n    ]\n  } else {\n    // Windows and Linux puts logs into the cache dir:\n    return compact(cacheDirs()).map(ea => ({\n      dir: map(ea.dir, dir => _path.resolve(dir, \"logs\")),\n      preexistingDir: ea.preexistingDir\n    }))\n  }\n}\n\nexport function defaultLogDir_() {\n  return firstDir({ dirs: defaultLogDirs(), desc: \"logs\" })!\n}\n\n// this bare-bones implementation means we can set up the logger without pulling\n// in Settings, SettingsIO and all those dependencies:\n\nexport const logDir = lazy(() => {\n  try {\n    const e = getEnv(\"logDir\") // < this will check logDir and PS_LOG_DIR\n    if (notBlank(e)) return e\n\n    const s = readTomlFileSync(systemSettingsFile())\n    const ld = toS(s?.logDir)\n    if (notBlank(ld)) return ld\n\n    return defaultLogDir_()\n  } catch (error) {\n    console.error(\"defaultLogDir_() failed\", error)\n    return _path.resolve(homeDir(), \"logs\")\n  }\n})\n","import { resolve } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { env } from \"../env/Env\"\nimport { isWin } from \"../platform/Platform\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\nimport { homeDir } from \"./HomeDir\"\n\nexport async function picturesDirWindows() {\n  return isWin\n    ? (PowerShell.instance().executeJson(\n        `Get-ItemPropertyValue \"Registry::HKEY_CURRENT_USER\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\" -name \"My Pictures\"`\n      ) as Promise<string>)\n    : undefined\n}\n\nexport const picturesDir = lazy<Promise<string>>(async () => {\n  if (isWin) {\n    const result = await picturesDirWindows()\n    if (notBlank(result)) return result\n    // else fall through and return default\n  }\n  return defaultPicturesDir()\n})\n\nexport const defaultPicturesDir = lazy<string>(\n  // See https://wiki.archlinux.org/title/XDG_user_directories\n  () => env().XDG_PICTURES_DIR ?? resolve(homeDir(), \"Pictures\")\n)\n","import { isTrue } from \"../../fe/Boolean\"\nimport { StrEnumKeys } from \"../../fe/StrEnum\"\nimport { isProd } from \"../NodeEnv\"\nimport { DevEnvFlags } from \"../env/EnvKeys\"\nimport { isPacked } from \"../platform/IsPacked\"\nimport { env } from \"./Env\"\n\nexport type DevFlag = StrEnumKeys<typeof DevEnvFlags>\n\nexport function getDevEnvFlag(key: DevFlag): boolean {\n  return !isProd && !isPacked() && isTrue(env()[key])\n}\n\nexport function setDevEnvFlag(key: DevFlag, b: boolean) {\n  if (b) {\n    env()[key] = \"true\"\n  } else {\n    delete env()[key]\n  }\n}\n","import fs from \"fs\"\nimport { delimiter } from \"path\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { entries, StringValued } from \"../../fe/Object\"\nimport { debom } from \"../Buffer\"\nimport { parseEnvTokens } from \"../EnvTokens\"\nimport { ee } from \"../event/EventEmitter\"\nimport { PS_ENV_KEYS } from \"./EnvKeys\"\nimport { SensitiveEnvRE } from \"./GetEnv\"\n\nexport const env = lazy<StringValued>(() => {\n  const paths = uniq(\n    PS_ENV_KEYS.map(k => process.env[k])\n      // handle FILE and PATH values:\n      .join(delimiter)\n      .split(delimiter)\n      .filter(notBlank)\n  )\n\n  const re = SensitiveEnvRE()\n  const result = { ...process.env }\n  for (const file of paths) {\n    try {\n      const input = debom(fs.readFileSync(file))\n      const tokens = parseEnvTokens({ input, lowerCaseKeys: false })\n      for (const [k, v] of entries(tokens)) {\n        if (!re.test(k)) {\n          result[k] = v\n        }\n      }\n    } catch (error) {\n      // not logger, as we may not have the logger up and running yet.\n      console.warn(\"env(): failed to read .env file, \" + file, error)\n    }\n  }\n  return result\n})\n\nlater(() => {\n  ee().on(\"clearCache\", () => env.unset())\n})\n","import { strEnum } from \"../../fe/StrEnum\"\n\nexport const PS_ENV_KEYS = [\"PS_ENV\", \"PS_ENV_FILE\", \"PS_ENV_PATH\"]\nexport const PS_IS_CHILD_PROCESS = \"PS_IS_CHILD_PROCESS\"\nexport const PS_IS_DOCKER = \"PS_IS_DOCKER\"\nexport const ELECTRON_RUN_AS_NODE = \"ELECTRON_RUN_AS_NODE\"\n\nexport const DevEnvFlags = strEnum(\n  \"PS_KEEP_ENV\",\n  \"PS_SKIP_CLEANUP\",\n  \"PS_SKIP_ALL_TESTS\",\n  \"PS_FORCE_LITE\",\n  \"PS_FORCE_TRIAL\",\n  \"PS_NO_RANDOM_IMAGE_CACHE\",\n  \"PS_FORCE_FULLDISK\",\n  \"PS_SLOMO\",\n  \"PS_BAIL_ON_ERROR\",\n  \"PS_FAIL_VOLUMES\",\n  \"PS_FAIL_DB_HEALTH_CHECK\",\n  \"PS_FAIL_SECURITY_HEALTH_CHECK\",\n  \"PS_TEST_HEALTH_CHECK_LEVEL\",\n  \"PS_SINGLE_SPEC_TESTS\"\n)\n\nexport const DevEnvKeys = [\"PS_NO_PUID_CHOWN\", \"PS_TEST_VOLUME_UUIDS\"]\n\nexport const IgnorableEnvKeys = [\n  \"PS_CONFIG_DIR\",\n  PS_IS_DOCKER,\n  PS_IS_CHILD_PROCESS,\n  ...DevEnvKeys,\n  ...PS_ENV_KEYS,\n  ...DevEnvFlags.values\n]\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\nimport { SettingsName } from \"../settings/SettingsName\"\n\n// We don't need to check for PS_APP_DATA or PS_PATH:\n\nexport const EnvKeys = strEnum(\n  \"HOME\",\n  \"NO_COLOR\",\n  \"PATH\",\n  \"PS_CONFIG_DIR\",\n  \"TMP\",\n  \"TEMP\",\n  \"XDG_CACHE_HOME\",\n\n  // Windows ENV keys: inconsistent casing here matches windows 10 box via\n  // `node -e \"console.log(process.env)\"`:\n  \"APPDATA\",\n  \"LOCALAPPDATA\",\n  \"ProgramData\",\n  \"ProgramFiles\",\n  \"ProgramFiles(x86)\",\n  \"ProgramW6432\",\n  \"SystemDrive\",\n  \"SystemRoot\",\n  \"USERPROFILE\",\n  \"windir\" // < \"C:\\Windows\"\n)\nexport type EnvKey = StrEnumKeys<typeof EnvKeys>\n\nexport type EnvName = SettingsName | EnvKey\n","import process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { firstNotBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { CaseInsensitiveValued } from \"../CaseInsensitiveValued\"\nimport { DefaultSensitiveEnvRegexPattern } from \"../DefaultSensitiveEnvRegexPattern\"\nimport { camel2snake } from \"../StringCase\"\nimport { env } from \"./Env\"\nimport { EnvKeys, EnvName } from \"./EnvName\"\n\n// !!!!!!!!!!!!!!!!!!!\n// IMPORTANT: To avoid deploops: `Settings` can be referenced ONLY by TypeScript\n// types, BUT NOT ACTUAL FUNCTIONALITY.\n// !!!!!!!!!!!!!!!!!!!\n\nexport const SensitiveEnvRegexPattern = lazy(\n  () =>\n    firstNotBlank(\n      process.env.PS_SENSITIVE_ENV_REGEX_PATTERN,\n      process.env.sensitiveEnvRegexPattern,\n      DefaultSensitiveEnvRegexPattern\n    )!\n)\n\nexport const SensitiveEnvRE = lazy(() => {\n  try {\n    return new RegExp(SensitiveEnvRegexPattern(), \"i\")\n  } catch (err) {\n    console.error(\n      `Invalid setting for \"sensitiveEnvRegExp\": ${err}. Using default value.`\n    )\n    return new RegExp(DefaultSensitiveEnvRegexPattern, \"i\")\n  }\n})\n\nexport const caseInsensitiveEnv = lazy(() => {\n  return new CaseInsensitiveValued(env())\n})\n\nexport function onEnvChange() {\n  caseInsensitiveEnv.unset()\n  SensitiveEnvRegexPattern.unset()\n  SensitiveEnvRE.unset()\n}\n\nlater(() => {\n  env.watchLater(onEnvChange)\n})\n\n/**\n * Case-insensitive search for a given ENV key\n *\n * @param key either XDG_CACHE_HOME for non-settings, or camelCaseSettingsName\n */\nexport function getEnv(key: EnvName): Maybe<string> {\n  return (\n    caseInsensitiveEnv().get(key) ??\n    (EnvKeys.includes(key)\n      ? undefined // < no need to search for PS_windir\n      : caseInsensitiveEnv().get(\"PS_\" + camel2snake(key)))\n  )\n}\n\nexport function isEnvTrue(key: EnvName): boolean {\n  return isTrue(getEnv(key))\n}\n","import { Rate } from \"batch-cluster\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, compactBlanks, isEmpty, uniqSubstrings } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport {\n  ErrorDelimiter,\n  IgnoredErrorNames,\n  errorCode,\n  errorName,\n  shortStack\n} from \"../../fe/Error\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isBuffer } from \"../../fe/String\"\nimport { isError } from \"../../fe/isError\"\nimport { toS } from \"../../fe/toS\"\nimport { BoundedList } from \"../BoundedList\"\nimport { mkLogger } from \"../Logger\"\nimport { ellipsize, isString, stripAnsiEsc } from \"../String\"\nimport { splitCompactLines } from \"../fs/CRLF\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { getErrorDescriptions } from \"./ErrorCodes\"\nimport { ErrorFlag, sortErrorFlags } from \"./ErrorFlags\"\nimport { extractErrorFlags, stripErrorFlags } from \"./ErrorTypes\"\n\nexport const StartTs = Date.now()\n\nexport const logger = lazy(() => mkLogger(\"Error\"))\n\nexport const errorRate = new Rate()\nexport const fatalErrorRate = new Rate()\nexport const internalErrorRate = new Rate()\nexport const lastInternalErrors = new BoundedList(10)\n\nexport function mapError<T>(obj: any, f: (error: Error) => T): Maybe<T> {\n  return obj instanceof Error ? f(obj) : undefined\n}\n\nexport function errorContains(err: any, re: RegExp): boolean {\n  return re.test(errorToS(err))\n}\n\nexport function throws(f: () => any): boolean {\n  try {\n    f()\n    return false\n  } catch {\n    return true\n  }\n}\n\nexport function addMessage(error: Maybe<Error>, message: Maybe<string>) {\n  if (error == null) return new Error(message)\n\n  if (notBlank(message)) {\n    if (!error.message.toLowerCase().includes(message.toLowerCase())) {\n      error.message += \": \" + message\n    }\n  }\n  return error\n}\n\nexport function errorsToPath(\n  ...errs: Maybe<Error | SimpleFile | { path: string }>[]\n): Maybe<string> {\n  for (const ea of errs as any[]) {\n    for (const k of [\"nativePath\", \"path\"]) {\n      const s = toS(ea?.[k])\n      if (notBlank(s)) return s\n    }\n  }\n  return\n}\n\n/**\n * Errors can contain a \"name\", a \"code\", and a \"message\". Wrapped Errors may\n * contain a concatenated set of errors (\"Error: failed to import foo: missing\n * database entry\")\n */\nexport function splitErrorMessage(...errs: Maybe<Error | string>[]): string[] {\n  if (isEmpty(errs)) return []\n\n  const messages: string[] = errs.map((ea: any) =>\n    isString(ea) ? ea : isBuffer(ea) ? ea.toString() : toS(ea?.message ?? ea)\n  )\n\n  messages.push(...getErrorDescriptions(errs))\n\n  const arr = [\n    ...errs.filter(isError).map(errorName),\n    ...errs.map(errorCode),\n    // only split(\": \") on message and strings to avoid URL splitting\n    ...compactBlanks(messages)\n      .map(stripAnsiEsc)\n      .flatMap(ea => splitCompactLines(ea))\n      .flatMap(ea => ea.split(ErrorDelimiter))\n  ]\n  return uniqSubstrings(normalizeErrorMessages(flatten(arr)))\n}\n\nexport function normalizeErrorMessages(arr: Maybe<string>[]): string[] {\n  return compact(arr)\n    .filter(ea => !IgnoredErrorNames.includes(ea))\n    .map(ea =>\n      ea\n        .replace(/\\s+/gm, \" \")\n        .trim()\n        .replace(/^code ([A-Z]+)$/i, \"$1\")\n        .trim()\n    )\n    .filter(notBlank)\n}\n\nexport function joinErrorMessages(\n  arr: Maybe<string>[],\n  opts?: { maxLen?: number; trailingChars?: number; flags?: ErrorFlag[] }\n): string {\n  const trimmed = uniqSubstrings(normalizeErrorMessages(arr))\n  const maxLen = opts?.maxLen ?? 400\n  const trailingChars = opts?.trailingChars ?? 64\n  const flags = sortErrorFlags([\n    ...(opts?.flags ?? []),\n    ...extractErrorFlags(arr.join(\"\"))\n  ])\n  return (\n    ellipsize(\n      stripErrorFlags(trimmed.join(ErrorDelimiter)),\n      maxLen - flags.length,\n      trailingChars\n    ) + flags.sort().join(\"\")\n  )\n}\n\nexport function errorToS(\n  err: any,\n  opts?: { maxLen?: number; trailingChars?: number }\n): string {\n  if (blank(err)) {\n    return \"\"\n  }\n  const arr = splitErrorMessage(err)\n  return joinErrorMessages(arr, opts)\n}\n\nexport const MissingError = \"(missing error)\"\n\nexport function errorToVerbose(\n  err: any,\n  maxMsgLen = 256,\n  maxStackLines = 7\n): string {\n  if (blank(err)) err = MissingError // < if blank, at least fill in a stacktrace...\n  return (\n    errorToS(err, { maxLen: maxMsgLen }) +\n    \" at \" +\n    shortStack(err?.stack, maxStackLines).join(\"; \")\n  )\n}\n","import { uniq } from \"../../fe/Array\"\nimport { errorCode, errorErrno } from \"../../fe/Error\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { stripSuffix } from \"../String\"\n\nexport function describeError(ea: string) {\n  const key = stripSuffix(toS(ea).trim().toUpperCase(), \":\")\n  return (ErrorCodes as any)[key]?.description ?? ea\n}\n\nexport function getErrorDescriptions(...arr: (Error | any)[]) {\n  const result: Maybe<string>[] = []\n  for (const err of arr) {\n    map(errorErrno(err), ea => result.push(err2desc.get(ea)))\n    map(errorCode(err), ea => result.push((ErrorCodes as any)[ea]?.description))\n  }\n  return uniq(result)\n}\n\nconst ErrorCodes = {\n  UNKNOWN: { errno: -1, description: \"unknown error\" },\n  OK: { errno: 0, description: \"success\" },\n  EOF: { errno: 1, description: \"end of file\" },\n  EADDRINFO: { errno: 2, description: \"getaddrinfo error\" },\n  EACCES: { errno: 3, description: \"permission denied\" },\n  EAGAIN: { errno: 4, description: \"resource temporarily unavailable\" },\n  EADDRINUSE: { errno: 5, description: \"address already in use\" },\n  EADDRNOTAVAIL: { errno: 6, description: \"address not available\" },\n  EAFNOSUPPORT: { errno: 7, description: \"address family not supported\" },\n  EALREADY: { errno: 8, description: \"connection already in progress\" },\n  EBADF: { errno: 9, description: \"bad file descriptor\" },\n  EBUSY: { errno: 10, description: \"resource busy or locked\" },\n  ECONNABORTED: { errno: 11, description: \"software caused connection abort\" },\n  ECONNREFUSED: { errno: 12, description: \"connection refused\" },\n  ECONNRESET: { errno: 13, description: \"connection reset by peer\" },\n  EDESTADDRREQ: { errno: 14, description: \"destination address required\" },\n  EFAULT: { errno: 15, description: \"bad address in system call argument\" },\n  EHOSTUNREACH: { errno: 16, description: \"host is unreachable\" },\n  EINTR: { errno: 17, description: \"interrupted system call\" },\n  EINVAL: { errno: 18, description: \"invalid argument\" },\n  EISCONN: { errno: 19, description: \"socket is already connected\" },\n  EMFILE: { errno: 20, description: \"too many open files\" },\n  EMSGSIZE: { errno: 21, description: \"message too long\" },\n  ENETDOWN: { errno: 22, description: \"network is down\" },\n  ENETUNREACH: { errno: 23, description: \"network is unreachable\" },\n  ENFILE: { errno: 24, description: \"file table overflow\" },\n  ENOBUFS: { errno: 25, description: \"no buffer space available\" },\n  ENOMEM: { errno: 26, description: \"not enough memory\" },\n  ENOTDIR: { errno: 27, description: \"not a directory\" },\n  EISDIR: { errno: 28, description: \"illegal operation on a directory\" },\n  ENONET: { errno: 29, description: \"machine is not on the network\" },\n  ENOTCONN: { errno: 31, description: \"socket is not connected\" },\n  ENOTSOCK: { errno: 32, description: \"socket operation on non-socket\" },\n  ENOTSUP: { errno: 33, description: \"operation not supported on socket\" },\n  ENOENT: { errno: 34, description: \"no such file or directory\" },\n  ENOSYS: { errno: 35, description: \"function not implemented\" },\n  EPIPE: { errno: 36, description: \"broken pipe\" },\n  EPROTO: { errno: 37, description: \"protocol error\" },\n  EPROTONOSUPPORT: { errno: 38, description: \"protocol not supported\" },\n  EPROTOTYPE: { errno: 39, description: \"protocol wrong type for socket\" },\n  ETIMEDOUT: { errno: 40, description: \"connection timed out\" },\n  ECHARSET: { errno: 41, description: \"invalid Unicode character\" },\n  EAIFAMNOSUPPORT: {\n    errno: 42,\n    description: \"address family for hostname not supported\"\n  },\n  EAISERVICE: {\n    errno: 44,\n    description: \"servname not supported for ai_socktype\"\n  },\n  EAISOCKTYPE: { errno: 45, description: \"ai_socktype not supported\" },\n  ESHUTDOWN: {\n    errno: 46,\n    description: \"cannot send after transport endpoint shutdown\"\n  },\n  EEXIST: { errno: 47, description: \"file already exists\" },\n  ESRCH: { errno: 48, description: \"no such process\" },\n  ENAMETOOLONG: { errno: 49, description: \"name too long\" },\n  EPERM: { errno: 50, description: \"operation not permitted\" },\n  ELOOP: { errno: 51, description: \"too many symbolic links encountered\" },\n  EXDEV: { errno: 52, description: \"cross-device link not permitted\" },\n  ENOTEMPTY: { errno: 53, description: \"directory not empty\" },\n  ENOSPC: { errno: 54, description: \"no space left on device\" },\n  EIO: { errno: 55, description: \"i/o error\" },\n  EROFS: { errno: 56, description: \"read-only file system\" },\n  ENODEV: { errno: 57, description: \"no such device\" },\n  ESPIPE: { errno: 58, description: \"invalid seek\" },\n  ECANCELED: { errno: 59, description: \"operation canceled\" }\n} as const\n\nconst err2desc = new Map<number, string>(\n  Object.values(ErrorCodes).map(ea => [ea.errno, ea.description])\n)\n","import { uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { escapeRegExp } from \"../RegExp\"\n\nexport const ErrorFlags = strEnum(\n  \"⁰\",\n  \"¹\",\n  \"²\",\n  \"³\",\n  \"⁴\",\n  \"⁵\",\n  \"⁶\",\n  \"⁷\",\n  \"⁸\",\n  \"⁹\",\n  \"₀\",\n  \"₁\",\n  \"₂\"\n  // \"₃\",\n  // \"₄\",\n  // \"₅\",\n  // \"₆\",\n  // \"₇\",\n  // \"₈\",\n  // \"₉\"\n)\nexport type ErrorFlag = StrEnumKeys<typeof ErrorFlags>\n// I could also go with a ⚠️🛑💥 or \"🔁⏹⏏️\" ️but these seem less cutesy:\n\nexport function sortErrorFlags(arr: Maybe<ErrorFlag>[]): ErrorFlag[] {\n  return sortBy(uniq(arr), ea => ErrorFlags.indexOf(ea))\n}\n\nexport const FatalErrorFlag = ErrorFlags[\"¹\"]\nexport const NonRetriableErrorFlag = ErrorFlags[\"²\"]\nexport const IgnorableErrorFlag = ErrorFlags[\"³\"]\nexport const PleaseSendErrorFlag = ErrorFlags[\"⁴\"]\nexport const HealthCheckErrorFlag = ErrorFlags[\"⁵\"]\nexport const DoNotSendErrorFlag = ErrorFlags[\"⁶\"]\nexport const RetriableErrorFlag = ErrorFlags[\"⁷\"]\nexport const HealthCheckWarningFlag = ErrorFlags[\"⁸\"]\nexport const InternalErrorFlag = ErrorFlags[\"⁹\"]\nexport const NoLibraryErrorFlag = ErrorFlags[\"₀\"]\nexport const DbSetupErrorFlag = ErrorFlags[\"₁\"]\nexport const NonFatalErrorFlag = ErrorFlags[\"₂\"]\n\nexport const ErrorFlagsRE = new RegExp(\n  \"(\" + ErrorFlags.values.join(\"|\") + \")\",\n  \"g\"\n)\n\nexport const FailStr = JSON.stringify({ fatal: true })\n\nexport const FatalErrorPatterns = [\n  \"SQLITE_FULL\",\n  \"SQLITE_CORRUPT\",\n  \"SQLITE_IOERR\", // there are a ton with this prefix, like SQLITE_IOERR_TRUNCATE\n  \"SQLITE_NOMEM\",\n  \"SQLITE_NOTADB\",\n  \"ON CONFLICT\",\n  \"SQLITE_CONSTRAINT_NOTNULL\",\n  \"Error: Cannot find module\",\n  FatalErrorFlag,\n  FailStr\n]\n\n/**\n * Default errors that indicate serious problems\n */\nexport const FatalErrorRe = new RegExp(\n  FatalErrorPatterns.map(escapeRegExp).join(\"|\"),\n  \"i\"\n)\n\nexport const InternalErrorRe = /⁹|internal ?error/i\n","import { compact } from \"../../fe/Array\"\nimport { isFalse, isTrue } from \"../../fe/Boolean\"\nimport { errorCode } from \"../../fe/Error\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { errorToS } from \"../error/Error\"\nimport {\n  DoNotSendErrorFlag,\n  ErrorFlag,\n  ErrorFlags,\n  ErrorFlagsRE,\n  FatalErrorFlag,\n  FatalErrorRe,\n  HealthCheckErrorFlag,\n  IgnorableErrorFlag,\n  InternalErrorRe,\n  NonFatalErrorFlag,\n  NonRetriableErrorFlag,\n  PleaseSendErrorFlag,\n  RetriableErrorFlag\n} from \"./ErrorFlags\"\n\n/**\n * @param msg may contain error flags\n * @return `msg` with any included error flags, and all\n * non-null `flags`, sorted, at the end of the string.\n */\nexport function addErrorFlags(msg: string, ...flags: Maybe<ErrorFlag>[]) {\n  const s = toS(msg) + compact(flags).join(\"\")\n  return stripErrorFlags(s) + extractErrorFlags(s).join(\"\")\n}\n\nexport function stripErrorFlags(err: Maybe<string>): string {\n  return toS(err).replace(ErrorFlagsRE, \"\").trim()\n}\n\n/**\n * @return ordered and uniq'ed flags found in `err`\n */\nexport function extractErrorFlags(err: string): ErrorFlag[] {\n  return ErrorFlags.values.filter(ea => err.includes(ea))\n}\n\nexport function hasErrorFlag(err: string): boolean {\n  return ErrorFlags.values.some(ea => err.includes(ea))\n}\n\n// FUTURE ME: OMG, aren't all these errorToS calls inefficient?\n\n// NOW ME: WHY YES, future me, they are.\n\n// FUTURE ME: SWEET IMMA REFACTOR THIS\n\n// NOW ME: Dude, if error parsing is your big performance issue, you've got\n// bigger issues.\n\n// FUTURE ME: AW YOU RIGHT\n\nexport function isHealthCheckError(err: any): boolean {\n  return errorToS(err).includes(HealthCheckErrorFlag)\n}\n\nexport function isPleaseSendError(err: any): boolean {\n  return errorToS(err).includes(PleaseSendErrorFlag)\n}\n\nconst notIgnorablePatterns = [/Can't write [a-z0-9]+ files/i]\n\nconst ignorablePatterns = [\n  IgnorableErrorFlag,\n  \"0 output files created\", // From exiftool\n  \"debugger attached\", //nodeJS inspector issues\n  \"debugger listening on\", //nodeJS inspector issues\n  \"diskutil: interrupted\", // dang flaky macOS tool\n  \"ECONNRESET\", // read ECONNRESET from broken socket\n  \"EPIPE\", // meh whatev\n  \"for help\", //nodeJS inspector issues\n  \"Format error in file\", // from exiftool\n  \"https://nodejs.org/en/docs/inspector\", //nodeJS inspector issues\n  \"Missing expected status message\", // From exiftool\n  \"net::ERR_\", //See https://cs.chromium.org/codesearch/f/chromium/src/net/base/net_error_list.h  like net::ERR_TIMED_OUT\n  \"This socket has been ended by the other party\", // so rude\n  \"Unexpected error while trimming\", // From sharp\n  \"Warning\" // I mean, it's _a warning_\n].map(ea => ea.toLowerCase())\n\n/**\n * Ignorable errors are expected, and not even important enough to log.\n */\nexport function isIgnorableError(err: any): Maybe<boolean> {\n  if (err == null) return true\n\n  const b = err?.ignorable\n  if (typeof b === \"boolean\") return b\n\n  const msg = errorToS(err).toLowerCase()\n\n  return notIgnorablePatterns.some(ea => ea.test(msg))\n    ? false\n    : ignorablePatterns.some(ea => msg.includes(ea))\n    ? true\n    : undefined\n}\n\nconst BusyErrorRe = /SQLITE_BUSY|database is locked/i\n\nexport function isSqliteBusyError(err: any): boolean {\n  return err.code === \"SQLITE_BUSY\" || null != errorToS(err).match(BusyErrorRe)\n}\n\nexport function isSqliteDisconnectedError(err: any): boolean {\n  return null != errorToS(err).match(/database .+ not open/i)\n}\n\nexport function isSqliteConstraintError(err: any): boolean {\n  return null != errorToS(err).match(/SQLITE_CONSTRAINT|constraint failed/i)\n}\n\nexport function isRetriableError(err: any): Maybe<boolean> {\n  // NOTE: this certainly isn't the most efficient boolean logic.\n\n  // It's structured this way to be the easiest to read and be correct.\n\n  if (err == null) return\n\n  if (isNonRetriableError(err) === true) {\n    return false\n  }\n\n  const b = err?.retriable\n  if (typeof b === \"boolean\") {\n    return b\n  }\n\n  if (\n    errorCode(err) === \"EBUSY\" ||\n    isSqliteBusyError(err) ||\n    isSqliteDisconnectedError(err)\n  ) {\n    return true\n  }\n\n  const str = errorToS(err)\n\n  return str.includes(\"EBUSY\") || str.includes(RetriableErrorFlag)\n    ? true\n    : undefined\n}\n\nexport function isNonRetriableError(err: any): Maybe<boolean> {\n  return isFalse(err.retriable) ||\n    errorToS(err).includes(NonRetriableErrorFlag) ||\n    isSqliteConstraintError(err)\n    ? true\n    : undefined\n}\n\nconst doNotSendPatterns = [\n  // everything here isn't worth sending to Sentry\n  DoNotSendErrorFlag,\n  \"Corrupt JPEG data\", // invalid jpeg\n  \"ENOSPC\", // I can't help with that...\n  \"Invalid data found when processing input\", // from invalid ffmpeg file\n  \"premature end of data segment\", // invalid jpeg\n  \"VipsJpeg\" // invalid jpeg\n]\n\n/**\n * These may be fatal errors (like loss of library lock), and the user will care\n * about them, but we don't need to tell Sentry about them.\n */\nexport function isDoNotSendError(err: any): Maybe<boolean> {\n  const b = err?.doNotSend\n  if (typeof b === \"boolean\") return b\n\n  if (isPleaseSendError(err)) return false\n\n  const msg = errorToS(err).toLowerCase()\n  if (doNotSendPatterns.some(ea => msg.includes(ea))) return true\n  return // we don't know, AND THAT'S OK\n}\n\n/**\n * Does `err` represent a \"fatal\" error?\n */\nexport function isFatalError(err: any): boolean {\n  if (err == null) return false\n  if (isTrue(err.fatal)) return true\n  const s = errorToS(err)\n  return s.includes(FatalErrorFlag)\n    ? true\n    : s.includes(NonFatalErrorFlag)\n    ? false\n    : FatalErrorRe.test(s)\n}\n\nexport function isInternalError(err: any): boolean {\n  return err == null\n    ? false\n    : isTrue(err.internalError) || InternalErrorRe.test(errorToS(err))\n}\n","import { blank } from \"../../fe/Blank\"\nimport { lt, sigFigs } from \"../../fe/Number\"\nimport { isEmptyObj } from \"../../fe/Object\"\nimport { isTest } from \"../NodeEnv\"\nimport { isServiceThatAcceptsFatalErrors, isWebService } from \"../ServiceNames\"\nimport { exit } from \"../async/Exit\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Settings } from \"../settings/Settings\"\nimport {\n  StartTs,\n  errorRate,\n  fatalErrorRate,\n  internalErrorRate,\n  lastInternalErrors,\n  logger\n} from \"./Error\"\nimport { InternalErrorFlag } from \"./ErrorFlags\"\nimport { isInternalError } from \"./ErrorTypes\"\nimport { NewWrappedError, toWrappedError } from \"./WrappedError\"\nimport { stack } from \"./stack\"\n\n/**\n * Got an error? Give it here, please!\n *\n * @return true iff fatal\n */\n\nexport function onError(\n  err: string | Error,\n  meta?: unknown | Error | (NewWrappedError & { error?: Error | unknown })\n): boolean {\n  try {\n    if (blank(err) && isEmptyObj(meta)) {\n      logger().warn(\"onError() with no args\", stack())\n      return false\n    }\n    const error = toWrappedError(err, meta)\n\n    const internalError = isInternalError(err)\n    if (internalError) {\n      internalErrorRate.onEvent()\n      lastInternalErrors.push(err)\n    }\n    const fatal = error.fatal === true\n    const ignorable = error.ignorable === true\n\n    if (!fatal && ignorable) {\n      logger().info(\"onError(): (ignorable)\", { error: err })\n      return false\n    }\n\n    errorRate.onEvent()\n    if (fatal) {\n      fatalErrorRate.onEvent()\n      ee().emit(\"fatal\", error)\n    }\n    const event = !fatal || isFatalErrorAllowed() ? \"nonFatal\" : \"fatal\"\n    logger().log(event === \"fatal\" ? \"error\" : \"warn\", \"onError()\", {\n      event,\n      error\n    })\n    if (fatal && !isTest && !isWebService()) {\n      void exit({ reason: error.toString(), status: error.errno ?? 13 })\n    }\n    return fatal\n  } catch {\n    // woof, something's really wrong\n    console.error(\"onError() threw an error!\", { err, meta })\n    return false\n  }\n}\n/**\n * Should this error be considered fatal to this process?\n */\n\nexport function isFatalErrorAllowed(): boolean {\n  const postProbation =\n    Date.now() > StartTs + Settings.probationMs.valueOrDefault\n\n  const lowErrorRate = lt(\n    fatalErrorRate.eventsPerMinute,\n    Settings.fatalErrorRatePerMinute.valueOrDefault\n  )\n\n  const acceptsFatalErrors = isServiceThatAcceptsFatalErrors()\n\n  // The only time a fatal error should not be considered fatal is by the main\n  // service, after passing probation, and the error rate is not too high:\n  return logger().tap({\n    level: \"info\",\n    msg: \"isFatalErrorAllowed()\",\n    result: acceptsFatalErrors && postProbation && lowErrorRate,\n    meta: {\n      acceptsFatalErrors,\n      postProbation,\n      lowErrorRate,\n      fatalErrorRatePerMin: sigFigs(fatalErrorRate.eventsPerMinute, 2),\n      errorRatePerMin: sigFigs(errorRate.eventsPerMinute, 2),\n      fatalErrorRatePerMinuteSetting:\n        Settings.fatalErrorRatePerMinute.valueOrDefault\n    }\n  })\n}\n\n/**\n * These should never happen!\n */\nexport function onInternalError(\n  message: string,\n  cause?: Error | unknown,\n  context?: any\n): boolean {\n  return onError(message + InternalErrorFlag, { cause, ...context })\n}\n","import { uniqBy } from \"../../fe/Array\"\nimport { blank, firstNotBlank, toNotBlank } from \"../../fe/Blank\"\nimport { maybeAnd } from \"../../fe/Boolean\"\nimport {\n  ErrorDelimiter,\n  errorCode,\n  errorErrno,\n  errorName\n} from \"../../fe/Error\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Obj, isEmptyObj, omit } from \"../../fe/Object\"\nimport { toA } from \"../../fe/toA\"\nimport { toErrs } from \"../../fe/toErr\"\nimport { first } from \"../Array\"\nimport { dedupeNeedle, ellipsize, isString, splitUniq } from \"../String\"\nimport { joinErrorMessages, splitErrorMessage } from \"./Error\"\nimport {\n  DoNotSendErrorFlag,\n  ErrorFlag,\n  FatalErrorFlag,\n  IgnorableErrorFlag,\n  NonRetriableErrorFlag,\n  PleaseSendErrorFlag,\n  RetriableErrorFlag,\n  sortErrorFlags\n} from \"./ErrorFlags\"\nimport {\n  extractErrorFlags,\n  isDoNotSendError,\n  isFatalError,\n  isIgnorableError,\n  isRetriableError,\n  stripErrorFlags\n} from \"./ErrorTypes\"\n\nexport function toWrappedError(\n  error: string | Error | unknown,\n  meta?: unknown | Error | (NewWrappedError & { error?: Error | unknown })\n): WrappedError {\n  const args: NewWrappedError =\n    meta == null\n      ? {}\n      : meta instanceof Error\n      ? { cause: meta }\n      : { cause: (meta as any)?.error, ...meta }\n\n  if (error instanceof WrappedError) {\n    // if meta doesn't do anything, don't re-wrap.\n    if (\n      meta == null ||\n      blank(args.message) ||\n      error.message.includes(args.message)\n    ) {\n      return error\n    }\n  }\n  const message = firstNotBlank(\n    isString(error) ? error : undefined,\n    (error as any)?.message,\n    args?.message\n  )\n\n  return new WrappedError(message ?? \"(missing error message)\", args)\n}\n\nexport interface NewWrappedError {\n  name?: string\n  message?: string\n  stack?: string\n  code?: string\n  codes?: string[]\n  errno?: number\n  syscall?: string\n  path?: string // this isn't \"nativePath\" because native Node errors may include a `path` field that we want to capture.\n  cause?: any // because catch(err) is `unknown`\n  causes?: (Error | string)[]\n  retriable?: boolean\n  ignorable?: boolean\n  fatal?: boolean\n  doNotSend?: boolean\n  flags?: ErrorFlag[]\n  meta?: Obj\n}\n\nfunction mkCtx(opts?: NewWrappedError) {\n  if (opts == null) return\n\n  const ctx = omit(\n    opts as any,\n    \"name\",\n    \"message\",\n    \"stack\",\n    \"code\",\n    \"codes\",\n    \"errno\",\n    \"syscall\",\n    \"path\",\n    \"cause\",\n    \"causes\",\n    \"retriable\",\n    \"ignorable\",\n    \"fatal\",\n    \"doNotSend\",\n    \"flags\"\n  )\n  return isEmptyObj(ctx) ? undefined : stringify(ctx)\n}\n\nfunction mkMessage(message?: string, opts?: NewWrappedError) {\n  let arr = splitErrorMessage(\n    message,\n    opts?.message,\n    opts?.cause,\n    ...(opts?.causes ?? [])\n  )\n  const path = opts?.path\n  if (!blank(path)) {\n    arr = dedupeNeedle(arr, path, \"file\")\n  }\n\n  return joinErrorMessages([\n    arr[0],\n    opts?.code,\n    ...toA(opts?.codes),\n    opts?.syscall,\n    message,\n    ...arr.slice(1)\n  ])\n}\n\nexport class WrappedError extends Error {\n  readonly code?: string\n  readonly codes?: string[]\n  readonly errno?: number\n  readonly syscall?: string\n  readonly path?: string\n  readonly causes: Error[]\n  readonly retriable?: boolean\n  readonly ignorable?: boolean\n  readonly fatal?: boolean\n  readonly doNotSend?: boolean\n  readonly flags: ErrorFlag[]\n\n  /**\n   * No string ellipsis-ing. Flags are shoved to the end and uniq'ed.\n   */\n  static mkMessage(message?: string, opts?: NewWrappedError) {\n    const s = splitErrorMessage(\n      message,\n      opts?.cause,\n      ...toA(opts?.causes),\n      mkCtx(opts)\n    ).join(ErrorDelimiter)\n    return stripErrorFlags(s) + extractErrorFlags(s).join(\"\")\n  }\n\n  constructor(message: string, opts: Partial<NewWrappedError> = {}) {\n    super(message)\n\n    this.causes = uniqBy(\n      toErrs(opts.cause, ...toA(opts.causes)),\n      ea => ea.message\n    )\n\n    this.name = errorName(opts) ?? first(this.causes, errorName) ?? \"Error\"\n\n    this.codes = splitUniq(\n      [opts.code, ...this.causes.map(errorCode)],\n      ErrorDelimiter\n    )\n    this.code = this.codes[0]\n    // unset this.codes if this.code is sufficient:\n    if (this.codes.length <= 1) this.codes = undefined\n\n    this.errno = opts.errno ?? first(this.causes, ea => errorErrno(ea))\n\n    this.syscall =\n      opts.syscall ?? first(this.causes, (ea: any) => toNotBlank(ea[\"syscall\"]))\n\n    this.path =\n      opts.path ?? first(this.causes, (ea: any) => toNotBlank(ea[\"path\"]))\n\n    this.flags = opts?.flags ?? []\n    const arr = [opts, this.flags.join(\"\"), ...this.causes]\n\n    // If any are fatal, we're fatal.\n    this.fatal = opts.fatal ?? arr.some(isFatalError)\n\n    // If any are NOT retriable, we aren't retriable. If none make an assertion,\n    // we shouldn't either.\n    this.retriable = opts.retriable ?? maybeAnd(arr.map(isRetriableError))\n\n    // If any are NOT ignorable, we aren't ignorable. If none make an assertion,\n    // we shouldn't either.\n    this.ignorable = opts.ignorable ?? maybeAnd(arr.map(isIgnorableError))\n\n    // If any say we need to send, we should.\n    this.doNotSend = opts.doNotSend ?? maybeAnd(arr.map(isDoNotSendError))\n\n    this.flags = sortErrorFlags([\n      ...this.flags,\n      this.fatal ? FatalErrorFlag : undefined,\n      this.retriable === true ? RetriableErrorFlag : undefined,\n      this.retriable === false ? NonRetriableErrorFlag : undefined,\n      this.ignorable === true ? IgnorableErrorFlag : undefined,\n      this.doNotSend === false ? PleaseSendErrorFlag : undefined,\n      this.doNotSend === true ? DoNotSendErrorFlag : undefined\n    ])\n\n    // Now that we have all the flags, rebuild the message:\n    this.message =\n      stripErrorFlags(mkMessage(message, this)) + this.flags.join(\"\")\n\n    this.stack = opts.stack ?? first(this.causes, (ea: any) => ea[\"stack\"])\n    if (this.stack == null) Error.captureStackTrace(this)\n  }\n\n  toJSON() {\n    return {\n      _ctor: \"WrappedError\",\n      ...this,\n      message: this.message\n    }\n  }\n\n  static fromJSON(json: any) {\n    return new WrappedError(json.message, json)\n  }\n\n  toString() {\n    return this.message\n  }\n\n  toS(opts?: { maxLen: number; trailingChars: number }): string {\n    return opts == null\n      ? this.message\n      : ellipsize(\n          this.message, // flags are already at the end--just don't\n          opts.maxLen,\n          Math.max(opts.trailingChars, this.flags.length + 1)\n        )\n  }\n}\n","export function stack(): string[] {\n  const e: any = {}\n  Error.captureStackTrace(e, stack)\n  return e.stack.split(/\\n(?:\\s*at\\s+)?/).slice(1)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Args } from \"../Args\"\nimport { EventName, PhotoStructureEvents } from \"./PhotoStructureEvents\"\nimport { SharedState } from \"./SharedState\"\n\nexport function broadcastEvent_<E extends EventName>(\n  name: E,\n  ...args: Args<PhotoStructureEvents[E]>\n) {\n  return SharedState.instance()?.broadcastEvent_({ name, args })\n}\n\nexport function broadcastPause() {\n  return broadcastEvent_(\"pause\")\n}\n\nexport function broadcastResume() {\n  return broadcastEvent_(\"resume\")\n}\n\nexport const broadcastExit = lazy(() => broadcastEvent_(\"exit\"))\n","import { filterInPlace } from \"../../fe/Array\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { toS } from \"../../fe/toS\"\nimport { Args } from \"../Args\"\nimport { Deferred } from \"../async/Deferred\"\nimport { BoundedList } from \"../BoundedList\"\nimport { isTest } from \"../NodeEnv\"\nimport { OmniEventListener } from \"./OmniEventListener\"\nimport { TypedEventEmitter } from \"./TypedEventEmitter\"\n\nexport interface CapturedEvent<T, E extends keyof T = keyof T> {\n  name: E\n  args: Args<T[E]>\n}\n\nexport class CapturingEventEmitter<T> implements TypedEventEmitter<T> {\n  readonly priorEvents: BoundedList<CapturedEvent<T>>\n  readonly omniListeners: OmniEventListener<T>[] = []\n  readonly #eventDeferreds = new Map<keyof T, Deferred<any>>()\n  readonly #eventDebounceTimers = new Map<keyof T, NodeJS.Timeout>()\n\n  constructor(\n    readonly target: TypedEventEmitter<T>,\n    readonly eventsToRetain = isTest ? 10 : 0\n  ) {\n    this.priorEvents = new BoundedList(eventsToRetain)\n  }\n\n  once<E extends keyof T>(\n    eventName: E,\n    listener: (...args: Args<T[E]>) => void\n  ) {\n    this.target.once(eventName, listener)\n    return this\n  }\n\n  // CAUTION: an omniEventListener that logs may cause a stack overflow on errors!\n\n  addOmniListener(l: OmniEventListener<T>) {\n    this.omniListeners.push(l)\n    return this\n  }\n\n  watchEvent<E extends keyof T>(eventName: E): Deferred<Args<T[E]>> {\n    return getOrSet(\n      this.#eventDeferreds,\n      eventName,\n      () => new Deferred<any>(\"watchEvent(\" + toS(eventName) + \")\")\n    )\n  }\n\n  removeOmniListener(l: OmniEventListener<T>) {\n    return filterInPlace(this.omniListeners, ea => ea !== l)\n  }\n\n  on<E extends keyof T>(eventName: E, listener: (...args: Args<T[E]>) => void) {\n    this.target.on(eventName, listener)\n    return this\n  }\n\n  off<E extends keyof T>(\n    eventName: E,\n    listener: (...args: Args<T[E]>) => void\n  ) {\n    this.target.off(eventName, listener)\n    return this\n  }\n\n  /**\n   * @return `true` if the event had listeners, `false` otherwise.\n   */\n  emit<E extends keyof T>(eventName: E, ...args: Args<T[E]>) {\n    map(this.#eventDebounceTimers.get(eventName), clearTimeout)\n    this.#eventDebounceTimers.delete(eventName)\n    for (const ea of this.omniListeners) {\n      ea(eventName, ...args)\n    }\n    if (this.eventsToRetain > 0) {\n      this.priorEvents.push({\n        name: eventName,\n        args\n      })\n    }\n    const result = this.target.emit(eventName, ...args)\n\n    const d = this.#eventDeferreds.get(eventName)\n    if (d != null) {\n      void d.resolve(args)\n      this.#eventDeferreds.delete(eventName)\n    }\n\n    return result\n  }\n\n  emitDebounced<E extends keyof T>(eventName: E, ...args: Args<T[E]>) {\n    map(this.#eventDebounceTimers.get(eventName), clearTimeout)\n    this.#eventDebounceTimers.set(\n      eventName,\n      setTimeout(() => this.emit(eventName, ...args), 50)\n    )\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  listeners<E extends keyof T>(event: E): Function[] {\n    return this.target.listeners(event)\n  }\n\n  removeAllListeners(eventName?: keyof T): this {\n    this.target.removeAllListeners(eventName)\n    return this\n  }\n}\n","import { map } from \"../../fe/Maybe\"\nimport { cacheDir } from \"../dir/CacheDir\"\nimport { BaseFile } from \"../fs/BaseFile\"\n\nexport function DefaultSharedStateDir() {\n  return map(cacheDir(), ea => BaseFile.for(ea).join(\"shared-state\"))\n}\n","import { EventEmitter } from \"events\"\nimport { lazy } from \"../../core/Lazy\"\nimport { CapturingEventEmitter } from \"./CapturingEventEmitter\"\nimport {\n  PhotoStructureEmitter,\n  PhotoStructureEvents\n} from \"./PhotoStructureEvents\"\n\nexport function mkEE(\n  eventsToRetain?: number\n): CapturingEventEmitter<PhotoStructureEvents> {\n  const e = new EventEmitter()\n  e.setMaxListeners(70) // because of ee().on(\"clearCache\")\n  return new CapturingEventEmitter(e as PhotoStructureEmitter, eventsToRetain)\n}\n\nexport const ee = lazy(mkEE)\n","import { ee } from \"./EventEmitter\"\n\nlet syncing = false\n\nexport function isSyncing(): boolean {\n  return syncing\n}\n\nexport function setIsSyncing(val: boolean): void {\n  if (syncing !== val) {\n    // no infinite loops\n    syncing = val\n    ee().emit(\"syncing\", val)\n  }\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { keys } from \"../../fe/Object\"\nimport { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\nimport { Args } from \"../Args\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\nimport { ProgressEvt } from \"../progress/ProgressEvt\"\nimport { ForceContext } from \"../settings/ForceContext\"\nimport { isUID } from \"../UID\"\nimport { TypedEventEmitter } from \"./TypedEventEmitter\"\n\n// THIS FILE CANNOT IMPORT ANY CORE CODE (other than SimpleEventEmitter): it's\n// used everywhere!\n\nexport interface UpdateAssetArgs extends ForceContext {\n  assetId: number\n}\nexport interface UpdateAssetFileArgs extends ForceContext {\n  assetFileId: number\n}\nexport interface UpdateAssetTagsArgs extends ForceContext {\n  assetId: number\n}\n\n/*\n * Some events (like \"progress\" or \"timing\") are transient and if there isn't\n * anything to handle it immediately (like in seconds), they should be\n * discarded.\n *\n * Non-transient events need to be handled and then explicitly removed by the\n * process that can service the request.\n */\n\nconst Events = {\n  exit: () => null,\n  updateReadyToInstall: () => null,\n  clearCache: () => null,\n  clearDbCache: () => null,\n  clearToolCache: () => null,\n  error: (_msg: string, _err?: Error | unknown, _ctx?: any) => null,\n  fatal: (_error: Error) => null,\n  nonFatal: (_error: Error) => null,\n  fileChanged: (_nativePath?: Maybe<string>) => null,\n  invalidFile: (_nativePath: string) => null,\n  mountpointsChanged: () => null,\n  reloadLicenses: () => null,\n  pause: () => null,\n  resume: () => null,\n  syncing: (_isSyncing: boolean) => null,\n  progress: (_p: ProgressEvt) => null,\n  updateProgress: () => null,\n  settingsChanged: () => null,\n  showAbout: () => null /* task for Desktop */,\n  taskResult: (_result: TaskResult) => null,\n  timing: (_name: string, _elapsedMs: number) => null,\n  vacuuming: (_isVacuuming: boolean) => null,\n  volumesChanged: () => null\n}\n\nexport type PhotoStructureEvents = typeof Events\nexport const EventNames = strEnum(...keys(Events))\nexport type EventName = StrEnumKeys<typeof EventNames>\n\nconst Tasks = {\n  checkOperations: () => null, // web tells sync to check for new Operations to perform\n  repairAsset: (_arg: UpdateAssetArgs) => null,\n  repairAssetFile: (_arg: UpdateAssetFileArgs) => null,\n  runTagMaintenance: () => null,\n  syncDir: (_arg: { nativePath: string }) => null\n}\n\nexport type PhotoStructureTasks = typeof Tasks\nexport const TaskNames = strEnum(...keys(Tasks))\nexport type TaskName = StrEnumKeys<typeof TaskNames>\n\nexport interface PhotoStructureEvent<E extends EventName> {\n  name: E\n  args: Args<PhotoStructureEvents[E]>\n}\n\nexport interface StoredEvent<E extends EventName>\n  extends PhotoStructureEvent<E> {\n  uid: string\n}\n\nexport function isStoredEvent(o: any): o is StoredEvent<any> {\n  return (\n    typeof o === \"object\" &&\n    isUID(o.uid) &&\n    EventNames.includes(o.name) &&\n    Array.isArray(o.args)\n  )\n}\n\nexport interface StoredTask<T extends TaskName> {\n  uid: string\n  name: T\n  args: Args<PhotoStructureTasks[T]>\n}\n\nexport function isStoredTask(o: any): o is StoredTask<any> {\n  return (\n    typeof o === \"object\" &&\n    isUID(o.uid) &&\n    TaskNames.includes(o.name) &&\n    Array.isArray(o.args)\n  )\n}\n\nexport interface TaskSuccess {\n  uid: string\n  ts: number\n  pid: string\n  result: any\n}\n\nexport interface TaskFailure {\n  uid: string\n  ts: number\n  pid: string\n  error: string\n}\n\nexport type TaskResult = TaskSuccess | TaskFailure\n\nexport function isTaskResult(o: any): o is TaskResult {\n  return (\n    (typeof o === \"object\" && isUID(o.uid) && notBlank(o.result)) ||\n    notBlank(o.error)\n  )\n}\n\nexport type PhotoStructureEmitter = TypedEventEmitter<PhotoStructureEvents>\n\nexport const EventNameToLevel: Record<EventName, LogLevel> = Object.freeze({\n  exit: LogLevels.warn,\n  updateReadyToInstall: LogLevels.warn,\n  clearCache: LogLevels.trace,\n  clearDbCache: LogLevels.trace,\n  clearToolCache: LogLevels.trace,\n  error: LogLevels.error,\n  fatal: LogLevels.fatal,\n  fileChanged: LogLevels.trace,\n  invalidFile: LogLevels.warn,\n  mountpointsChanged: LogLevels.info,\n  nonFatal: LogLevels.warn,\n  pause: LogLevels.info,\n  progress: LogLevels.info,\n  updateProgress: LogLevels.info,\n  reloadLicenses: LogLevels.info,\n  resume: LogLevels.info,\n  settingsChanged: LogLevels.info,\n  showAbout: LogLevels.info,\n  syncing: LogLevels.info,\n  taskResult: LogLevels.info,\n  timing: LogLevels.trace,\n  vacuuming: LogLevels.info,\n  volumesChanged: LogLevels.info\n})\n\nexport const TaskNameToLevel: Record<TaskName, LogLevel> = {\n  checkOperations: LogLevels.info,\n  repairAsset: LogLevels.info,\n  repairAssetFile: LogLevels.info,\n  runTagMaintenance: LogLevels.info,\n  syncDir: LogLevels.info\n}\n","import { Event } from \"@parcel/watcher\"\nimport { pidExists } from \"batch-cluster\"\nimport { Dirent } from \"fs\"\nimport { sep } from \"path\"\nimport { pid } from \"process\"\nimport { clearInterval, setInterval } from \"timers\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compact, isEmpty, isNotEmpty, uniqByLast } from \"../../fe/Array\"\nimport { sortBy, sortUniqBy } from \"../../fe/ArraySort\"\nimport { isBoolean } from \"../../fe/Boolean\"\nimport { hourMs, minuteMs } from \"../../fe/Date\"\nimport { eql } from \"../../fe/Eql\"\nimport { shortStack } from \"../../fe/Error\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { parseJSON, stringify } from \"../../fe/JSON\"\nimport { deleteIf } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt, isNumber } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { toA } from \"../../fe/toA\"\nimport { Args } from \"../Args\"\nimport { mkLogger } from \"../Logger\"\nimport { mapGt0 } from \"../Number\"\nimport {\n  isSyncService,\n  isWebService,\n  isWorkerService,\n  processName\n} from \"../ServiceNames\"\nimport { StartTs } from \"../StartTs\"\nimport { TTLMap } from \"../TTLMap\"\nimport { TTLSet } from \"../TTLSet\"\nimport { tsFromUid, uid } from \"../UID\"\nimport { Deferred } from \"../async/Deferred\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { oneAtATime } from \"../async/OneAtATime\"\nimport { isRecentMs } from \"../date/Date\"\nimport { errorToS } from \"../error/Error\"\nimport { InternalErrorFlag } from \"../error/ErrorFlags\"\nimport { DirWatcher } from \"../fs/DirWatcher\"\nimport { isJsonExt } from \"../fs/FileExt\"\nimport { withLock_ } from \"../fs/FsLock\"\nimport { isPsLockFileOrDir } from \"../fs/FsLockDir\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { readFileMaybe } from \"../fs/ReadFile\"\nimport { SimpleFileOrString, basename, toNativePath_ } from \"../fs/SimpleFile\"\nimport { isMtimeRecent } from \"../fs/Stat\"\nimport { isWip } from \"../fs/WIP\"\nimport { Settings } from \"../settings/Settings\"\nimport { isPaused, pause, resume } from \"../work/IsPaused\"\nimport { ee } from \"./EventEmitter\"\nimport { isSyncing, setIsSyncing } from \"./IsSyncing\"\nimport {\n  EventName,\n  PhotoStructureEvents,\n  PhotoStructureTasks,\n  StoredEvent,\n  StoredTask,\n  TaskFailure,\n  TaskName,\n  TaskResult,\n  isStoredEvent,\n  isStoredTask,\n  isTaskResult\n} from \"./PhotoStructureEvents\"\nimport { TaskProcessor, taskProcessors } from \"./TaskProcessor\"\n\nconst logger = lazy(() => mkLogger(\"event.SharedState\"))\n\n// See worker/WorkRequest\n\nexport interface SharedStateJson {\n  pid: number\n  syncing?: boolean // < only set by SyncService processes\n  paused: boolean\n  // task results are stored as events. Events are only retained for a couple minutes:\n  events: StoredEvent<any>[]\n  // tasks are retained until there is a taskResult StoredEvent for it's uid, or it expires:\n  tasks: StoredTask<any>[]\n  // only set if there wasn't any shared state.\n  default?: true\n}\n\nexport function isSharedStateJson(o: any): o is SharedStateJson {\n  return (\n    o != null &&\n    typeof o === \"object\" &&\n    isNumber(o.pid) &&\n    isBoolean(o.paused) &&\n    Array.isArray(o.events) &&\n    Array.isArray(o.tasks)\n  )\n}\n\nexport const EventTimeoutMs = minuteMs\n\nfunction isStateFile(ea: SimpleFileOrString) {\n  return isJsonExt(ea) && !isWip(ea)\n}\n\nexport function isSharedStateFileOrDir(f: SimpleFileOrString | Dirent) {\n  return isPsLockFileOrDir(f) || isJsonExt(f) || isWip(f)\n}\n\nexport function isFreshEvent(evt: StoredEvent<any>): boolean {\n  const ts = tsFromUid(evt?.uid)\n  const fresh = isStoredEvent(evt) && isRecentMs(ts, EventTimeoutMs)\n  if (fresh && evt.name === \"exit\") {\n    // exit events should be disregarded if they happened before we started:\n    return gt(ts, StartTs)\n  } else {\n    return fresh\n  }\n}\n\nexport function dedupeStoredEvents(\n  arr: Maybe<StoredEvent<any>>[]\n): StoredEvent<any>[] {\n  const sorted = sortBy(compact(arr).filter(isFreshEvent), ea => ea.uid)\n\n  return uniqByLast(sorted, ea => stringify({ name: ea.name, args: ea.args }))\n}\n\n/**\n * Handles watching and broadcasting changes in shared state.\n *\n * This class replaces v1.x's RPC stuff.\n *\n * 1. Each process writes to it's own shared state file, living in $configDir/shared-state/$pid.json (no locking!)\n * 2. Each process is in charge of removing its own broadcast events after a minute.\n * 3. If a process handles a task, it should broadcast a taskResult.\n * 4. The process that submitted the task will remove the task when it sees the taskResult event.\n */\nexport class SharedState extends EndableWrapper {\n  readonly jsonFile: PosixFile\n  #pollInterval: Maybe<NodeJS.Timeout>\n  readonly #jsoncontent2event = new TTLMap<string, StoredEvent<any>>(\n    EventTimeoutMs\n  )\n  // readonly #myTasks = new TTLMap<string, StoredTask<any>>(\n  //   Settings.sharedStateTaskTimeoutMs.valueOrDefault\n  // )\n  readonly handledEventUids = new TTLSet<string>(\n    Settings.sharedStateTaskTimeoutMs.valueOrDefault\n  )\n  readonly handledTaskUids = new TTLSet<string>(\n    Settings.sharedStateTaskTimeoutMs.valueOrDefault\n  )\n  readonly #uid2pendingTasks = new TTLMap<\n    string,\n    Deferred<TaskResult, StoredTask<any>>\n  >(Settings.sharedStateTaskTimeoutMs.valueOrDefault)\n\n  static readonly instance = lazy(() => {\n    if (isWorkerService()) {\n      logger().warn(\n        \"SharedState.instance() is not supported within worker services.\",\n        shortStack()\n      )\n      return\n    }\n    const result = map(\n      Settings.sharedStateDir.valueOrDefault,\n      ea => new SharedState(PosixFile.for(ea))\n    )\n    if (result != null) {\n      Settings.sharedStateTaskTimeoutMs.watchLater(ea => {\n        // result.#myTasks.ttlMs = ea\n        result.handledEventUids.ttlMs = ea\n        result.handledTaskUids.ttlMs = ea\n        result.#uid2pendingTasks.ttlMs = ea\n      })\n    }\n    return result\n  })\n\n  constructor(\n    readonly dir: PosixFile,\n    readonly id: string = String(pid),\n    readonly eventEmitter = ee(),\n    readonly processors: TaskProcessor[] = taskProcessors\n  ) {\n    super(\n      \"event.SharedState(\" + dir + \")#\" + id,\n      () => this.#onEnd(),\n      EndableRanks.first\n    )\n    this.jsonFile = dir.join(id + \".json\")\n\n    mapGt0(\n      Settings.sharedStatePollMs.valueOrDefault,\n      ms => (this.#pollInterval = setInterval(() => this.read(), ms))\n    )\n    void this.setup()\n  }\n\n  #onDirChange(_err: Error | null, events: Event[]) {\n    const files = toA(events)\n      .filter(\n        ea =>\n          ea.type !== \"delete\" && !ea.path.endsWith(sep + this.jsonFile.base)\n      )\n      .map(ea => ea.path)\n    this.logger.debug(\"#onDirChange()\", { files, _err, events })\n    void this.read({ files })\n  }\n\n  async #onEnd() {\n    // WE DON'T UNLINK HERE--we want to leave the file around so our last\n    // events get picked up by our siblings.\n    map(this.#pollInterval, clearInterval)\n    this.#pollInterval = undefined\n  }\n\n  readonly setup = lazy(async () => {\n    this.#uid2pendingTasks.on(\"expire\", (k, v) => {\n      this.logger.warn(\n        \"failed to resolve task before timeout (see sharedStateTaskTimeoutMs)\",\n        {\n          task: v.payload,\n          sharedStateTaskTimeoutMs:\n            Settings.sharedStateTaskTimeoutMs.valueOrDefault\n        }\n      )\n      const err: TaskFailure = {\n        uid: k,\n        ts: Date.now(),\n        pid: processName(),\n        error: \"timeout\"\n      }\n      void v.resolve(err)\n    })\n    await this.read({ setup: true })\n    await DirWatcher.for(\n      this.dir,\n      (err, events) => this.#onDirChange(err, events),\n      EndableRanks.first\n    )\n  })\n\n  async read({\n    files,\n    setup\n  }: { files?: SimpleFileOrString[]; setup?: boolean } = {}) {\n    if (isEmpty(files)) {\n      files = toA(\n        await this.jsonFile.clearThisAndParent().siblings(ea => isStateFile(ea))\n      )\n    }\n    const arr = []\n\n    for (const file of files) {\n      if (\n        isStateFile(file) &&\n        basename(file) !== this.jsonFile.base &&\n        (await isMtimeRecent(toNativePath_(file), hourMs))\n      ) {\n        const bytes = await readFileMaybe(toNativePath_(file))\n        const json = parseJSON<SharedStateJson>(bytes)\n        if (json != null) arr.push(json)\n      }\n    }\n\n    if (isEmpty(arr)) {\n      this.logger.debug(\"read(): given empty array\")\n      return\n    }\n\n    if (setup === true) {\n      // bootstrap paused state:\n      pause(arr.some(ea => ea?.paused === true))\n    }\n\n    this.logger.debug(\"read()\", { arr })\n\n    let updated = false\n\n    // even if a shared state JSON only has 1 field, still parse it:\n    if (isEmpty(arr)) {\n      return\n    }\n\n    const events = dedupeStoredEvents(flatten(arr.map(ea => ea.events)))\n\n    this.logger.debug(\"read() events\", { arr, events })\n\n    for (const event of events) {\n      // don't re-do tasks that have been started or finished:\n      if (event.name === \"taskResult\" || event.name === \"taskStarted\")\n        this.handledTaskUids.add(event.uid)\n\n      // process the remote event:\n      updated ||= this.#handleRemoteEvent(event)\n    }\n\n    if (updated) await this.save()\n\n    const unfilteredTasks = flatten(arr.map(ea => ea.tasks))\n\n    const taskExpireTs = Date.now() - Settings.taskTimeoutMs.valueOrDefault\n    const tasks = sortUniqBy(\n      unfilteredTasks.filter(\n        ea =>\n          isStoredTask(ea) &&\n          !this.handledTaskUids.has(ea.uid) &&\n          gt(tsFromUid(ea?.uid), taskExpireTs)\n      ),\n      ea => ea.uid\n    )\n\n    if (isNotEmpty(tasks)) {\n      this.logger.info(\"read()\", { tasks })\n    }\n\n    // don't run these tasks again:\n    this.handledTaskUids.addAll(tasks.map(ea => ea.uid))\n\n    for (const task of tasks) {\n      // don't wait for each task: get each running ASAP. This may edit\n      // the JSON if we handle a task.\n\n      // these are possibly contested tasks, so we need an fs lock.\n      void this.#handleTask({\n        task,\n        sendEvents: true,\n        withFsLock: true\n      })\n    }\n\n    this.#updateSyncState(arr)\n\n    return\n  }\n\n  vacuum() {\n    deleteIf(this.#uid2pendingTasks, (_, v) => v.isSettled)\n  }\n\n  currentState(): SharedStateJson {\n    this.vacuum()\n    return {\n      pid: process.pid,\n      paused: isPaused(),\n      syncing: isSyncService() ? isSyncing() : undefined,\n      events: [...this.#jsoncontent2event.values()],\n      tasks: [...this.#uid2pendingTasks.values()].map(ea => ea.payload!)\n    }\n  }\n\n  async maybeSave() {\n    const state = this.currentState()\n    const prior = await this.jsonFile.readJson()\n    if (!eql(state, prior)) {\n      await this.save()\n    }\n  }\n\n  readonly save = oneAtATime({\n    fn: () => {\n      const state = this.currentState()\n      this.logger.info(\"save()\", { state })\n      return this.jsonFile.writeJson_(state)\n    }\n  })\n\n  async broadcast<E extends EventName>(\n    name: E,\n    ...args: Args<PhotoStructureEvents[E]>\n  ) {\n    return this.broadcastEvent_({ name, args })\n  }\n\n  async broadcastEvent_<E extends EventName>(evt: {\n    uid?: string\n    name: E\n    args: Args<PhotoStructureEvents[E]>\n  }): PromiseMaybe<StoredEvent<E>> {\n    const event = { ...evt, uid: evt.uid ?? uid() }\n    this.logger.info(\"addEvent_()\", { event })\n    const key = stringify(pick(event, \"name\", \"args\"))\n    // newer events should override prior:\n    this.#jsoncontent2event.set(key, event)\n    this.handledEventUids.add(event.uid)\n    this.eventEmitter.emit(event.name, ...event.args)\n    await this.save()\n    return event\n  }\n\n  #updateSyncState(arr: SharedStateJson[]) {\n    // only the webservice cares about sync state:\n    if (!isWebService()) return\n\n    const syncingPids = arr.filter(ea => ea.syncing).map(ea => ea.pid)\n\n    // we're only syncing if the process is still alive:\n    for (const syncingPid of syncingPids) {\n      if (pidExists(syncingPid)) {\n        this.logger.debug(\"#updateSyncState(): syncing\", { syncingPid })\n        setIsSyncing(true)\n        return\n      }\n    }\n\n    this.logger.debug(\"#updateSyncState(): no syncing states\", { syncingPids })\n\n    setIsSyncing(false)\n  }\n\n  /**\n   * @return true iff this should re-save\n   */\n  #handleRemoteEvent(event: StoredEvent<any>): boolean {\n    if (!isFreshEvent(event)) {\n      this.logger.warn(\"#handleRemoteEvent(): ignoring stale event\", { event })\n      return false\n    }\n\n    // don't double-process any events:\n    if (this.handledEventUids.has(event.uid)) return false\n    this.handledEventUids.add(event.uid)\n\n    this.logger.info(\"#handleRemoteEvent()\", event)\n    if (event.name === \"resume\") {\n      resume()\n    } else if (event.name === \"pause\") {\n      pause()\n    } else if (event.name === \"taskResult\") {\n      const taskResult: TaskResult = event.args[0] as any\n      if (!isTaskResult(taskResult)) {\n        this.logger.warn(\"Invalid task result\", { event })\n        return true // \"handled\"?\n      }\n      const d = this.#uid2pendingTasks.get(taskResult.uid)\n      if (d != null) {\n        this.logger.info(\"Received a task result for one of my tasks!\", {\n          event\n        })\n        void d.resolve(taskResult)\n      }\n      return true\n    } else {\n      this.eventEmitter.emit(event.name, ...event.args)\n    }\n    return false\n  }\n\n  canHandleTaskLocally(task: StoredTask<any>): boolean {\n    return this.processors.some(ea => ea.accept(task))\n  }\n\n  async #handleTask({\n    task,\n    sendEvents,\n    withFsLock\n  }: {\n    task: StoredTask<any>\n    sendEvents: boolean\n    withFsLock: boolean\n  }): PromiseMaybe<TaskResult> {\n    const processors = this.processors.filter(ea => ea.accept(task))\n    if (processors.length === 0) {\n      this.logger.info(\"#handleTask(): no local task processor\", { task })\n      return\n    }\n\n    if (withFsLock) {\n      return withLock_(\n        {\n          name: \"task-\" + task.name + \"-\" + task.uid,\n          file: this.dir.join(task.uid),\n          timeoutMs: Settings.sharedStateTaskTimeoutMs.valueOrDefault,\n          noopIfContested: true // < don't run a task multiple times\n        },\n        () => this.#handleTask({ task, sendEvents, withFsLock: false })\n      )\n    }\n\n    let result: TaskResult\n\n    if (processors.length > 1) {\n      this.logger.warn(\n        \"#handleTask(): multiple local task processors for \" + task.name,\n        { processors: processors.map(ea => ea.name) }\n      )\n      // first one will get a crack at it...\n    }\n\n    for (const ea of processors) {\n      try {\n        result = {\n          uid: task.uid,\n          ts: Date.now(),\n          pid: processName() + \"-\" + ea.name,\n          result: await thenOrTimeoutError(\n            ea.apply(task),\n            Settings.sharedStateTaskTimeoutMs.valueOrDefault\n          )\n        }\n        this.logger.info(\"#handleTask(): processor success\", {\n          processor: ea.name,\n          result,\n          task\n        })\n        break\n      } catch (error) {\n        this.logger.warn(\"#handleTask(): processor failed\", {\n          processor: ea.name,\n          error\n        })\n        result = {\n          uid: task.uid,\n          ts: Date.now(),\n          pid: processName() + \"-\" + ea.name,\n          error: errorToS(error)\n        }\n      }\n    }\n    if (result! == null) {\n      this.logger.warn(\"#handleTask(): null result\" + InternalErrorFlag, {\n        task\n      })\n      result = {\n        uid: task.uid,\n        ts: Date.now(),\n        pid: processName() + \"-error\",\n        error: \"null result\" + InternalErrorFlag\n      }\n    }\n\n    // resolve the task before broadcasting event to only save once:\n\n    void this.#uid2pendingTasks.get(task.uid)?.resolve(result)\n\n    if (sendEvents) {\n      this.logger.warn(\"#handleTask(): broadcasting result\", { task, result })\n      await this.broadcastEvent_({ name: \"taskResult\", args: [result] })\n    } else {\n      this.logger.warn(\"#handleTask(): NOT broadcasting result\", {\n        task,\n        result\n      })\n    }\n\n    return result\n  }\n\n  /**\n   * Process the given task, either locally, or request another process to\n   * handle it.\n   */\n  submitTask_<T extends TaskName>(\n    name: T,\n    ...args: Args<PhotoStructureTasks[T]>\n  ): Deferred<TaskResult, StoredTask<any>> {\n    this.logger.info(\"submitTask_()\", { name, args })\n\n    const task: StoredTask<any> = { uid: uid(), name, args }\n\n    // We always return a Deferred just to make the API consistent.\n    const d = new Deferred<TaskResult, StoredTask<any>>(name, {\n      payload: task\n    }).setTimeout(Settings.sharedStateTaskTimeoutMs.valueOrDefault)\n\n    // if we can handle the task locally, we don't need to do any bookkeeping--just run it and return.\n    if (this.canHandleTaskLocally(task)) {\n      return d.observe(\n        this.#handleTask({\n          task,\n          withFsLock: false, // we're the only one that's seen this task so far\n          sendEvents: false\n        }) as any\n      ) // we know it will be defined\n    }\n\n    // Dang. Hope there's someone out there that can do this!\n\n    // broadcast failure:\n    void d.catch(err => {\n      void this.broadcastEvent_({\n        name: \"taskResult\",\n        args: [\n          {\n            uid: task.uid,\n            ts: Date.now(),\n            pid: processName() + \"-error\",\n            error: \"uncaught rejection: \" + errorToS(err) + InternalErrorFlag\n          }\n        ]\n      })\n    })\n\n    this.#uid2pendingTasks.set(task.uid, d)\n\n    // this will add the task to our shared-state.json, which the other\n    // processes will see:\n    void this.save()\n    return d\n  }\n}\n\nexport function submitTask_<T extends TaskName>(\n  name: T,\n  ...args: Args<PhotoStructureTasks[T]>\n): Maybe<Deferred<TaskResult, StoredTask<any>>> {\n  return SharedState.instance()?.submitTask_(name, ...args)\n}\n\nexport async function clearSharedStates() {\n  const prior = SharedState.instance.clear()\n  await prior?.end()\n  const root =\n    prior?.dir ??\n    map(Settings.sharedStateDir.valueOrDefault, ea => PosixFile.for(ea))\n  await root?.visitDescendants(ea => {\n    return isSharedStateFileOrDir(ea)\n      ? ea.isDirectorySync()\n        ? ea.rmdir()\n        : ea.unlink()\n      : undefined\n  })\n}\n","import { isTest } from \"../NodeEnv\"\nimport { StoredTask } from \"./PhotoStructureEvents\"\n\nexport interface TaskProcessor {\n  name: string\n\n  /**\n   * Can this processor handle this task?\n   */\n  accept(task: StoredTask<any>): boolean\n\n  /**\n   * @return null if the task was not handled, and a non-blank string iff the\n   * listener \"handled\" the task\n   * @throw if the error task was attempted but failed\n   */\n  apply(task: StoredTask<any>): Promise<string>\n}\n\nexport const taskProcessors: TaskProcessor[] = []\n// outside of the instance, so it can be set up before we read shared state:\n\nexport function addTaskProcessor(processor: TaskProcessor) {\n  taskProcessors.push(processor)\n}\n\nexport function clearTaskProcessors() {\n  if (isTest) taskProcessors.length = 0\n}\n","import fs from \"fs\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ancestors } from \"../fs/Ancestors\"\nimport { statMaybe } from \"../fs/Stat\"\nimport { isWin } from \"../platform/Platform\"\n\nconst getUid = lazy(() => process.geteuid?.())\nconst getGids = lazy(() => process.getgroups?.())\n\nexport function isStatRWX(stat: Maybe<fs.Stats>): boolean {\n  return access({ stat, r: true, w: true, x: true })\n}\nexport function isStatRX(stat: Maybe<fs.Stats>): boolean {\n  return access({ stat, r: true, x: true })\n}\n\nexport async function canRWXFirstExistingAncestor(\n  nativePath: string\n): Promise<boolean> {\n  let foundNearest = false\n  // We need to be able to rX all the way up to the root:\n  for (const dir of [nativePath, ...ancestors(nativePath)]) {\n    const s = await statMaybe(dir)\n    if (s != null) {\n      if (!s.isDirectory()) {\n        return false\n      }\n      if (!foundNearest) {\n        foundNearest = true\n        if (!isStatRWX(s)) {\n          return false\n        }\n      } else {\n        if (!isStatRX(s)) {\n          return false\n        }\n      }\n    }\n  }\n  return true\n}\n\nexport function access({\n  stat,\n  r = false,\n  w = false,\n  x = false,\n  processUid,\n  processGid\n}: {\n  stat: Maybe<fs.Stats>\n  r?: boolean\n  w?: boolean\n  x?: boolean\n  processUid?: number\n  processGid?: number\n}): boolean {\n  if (stat == null) return false\n  const uid = processUid ?? getUid()\n  const gids = processGid != null ? [processGid] : getGids() ?? []\n\n  const isRoot = uid === 0\n  const isUser = isRoot || stat.uid === uid\n  const isGroup = isRoot || gids.includes(stat.gid)\n\n  if (r) {\n    const mask = (isUser ? 0o400 : 0) | (isGroup ? 0o040 : 0) | 0o004\n    if ((mask & stat.mode) === 0) return false\n  }\n\n  if (w) {\n    const mask = (isUser ? 0o200 : 0) | (isGroup ? 0o020 : 0) | 0o002\n    if ((mask & stat.mode) === 0) return false\n  }\n\n  // windows doesn't care about x: it happily executes files with no execute\n  // bit as long as the extension is .exe/.bat/...\n  if (x && !isWin) {\n    const mask = (isUser ? 0o100 : 0) | (isGroup ? 0o010 : 0) | 0o001\n    if ((mask & stat.mode) === 0) return false\n  }\n\n  return true\n}\n","import _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { equalsIgnoreCase } from \"../String\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { isLinux } from \"../platform/Platform\"\nimport { FileCache } from \"./FileCache\"\nimport { logger, parseNativePath, pathIsRoot, resolve } from \"./Path\"\nimport { readdir_ } from \"./Readdir\"\n\nexport async function actualPath(...nativePath: string[]): Promise<string> {\n  try {\n    return await actualPath_(...nativePath)\n  } catch (error) {\n    logger().warn(\"actualPath() failed, reverting to resolve()\", {\n      nativePath,\n      error\n    })\n    return resolve(...nativePath)\n  }\n}\nconst actualPathCache = lazy(\n  () => new FileCache<string>({ name: \"fs.Path.actualPathCache\" })\n)\n/**\n * `node:fs.resolve()`, `node:fs.normalize()`, and `node:fs.realpath()` don't\n * actually return the _actual_ correctly-cased filename for case-insensitive\n * filesystems on Windows and macOS.\n *\n * This method does that.\n */\n\nexport async function actualPath_(...nativePath: string[]): Promise<string> {\n  // our resolve() upcases drive letters:\n  const resolved = resolve(...nativePath)\n  // No need to check on Linux (filesystems are case-sensitive), or for root\n  // paths (which would cause an infinite loop)\n  if (isLinux || pathIsRoot(resolved)) {\n    return resolved\n  }\n\n  return actualPathCache().getOrSetAsync(resolved, async () => {\n    const p = parseNativePath(resolve(...nativePath))\n    const actualDir = await actualPath_(p.dir)\n    for (const ea of await readdir_(actualDir)) {\n      // equalsIgnoreCase does unicode normalization!\n      if (equalsIgnoreCase(ea.basename, p.base)) {\n        return _path.join(actualDir, ea.basename)\n      }\n    }\n    throw new WrappedError(resolved + \" not found\", {\n      code: \"ENOENT\",\n      path: resolved\n    })\n  })\n}\n","import { readdirSync } from \"fs\"\nimport { dirname } from \"path\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\n\n/**\n * @return nativePath to all ancestors of a given path, in order from nearest\n * to farthest.\n */\nexport function ancestors(path: string): string[] {\n  const arr = []\n  while (path !== dirname(path)) {\n    path = dirname(path)\n    arr.push(path)\n  }\n  return arr\n}\n\nexport function childrenSync(path: string): string[] {\n  try {\n    return readdirSync(path)\n  } catch (err) {\n    return []\n  }\n}\nexport function hasChildren(path: string, childNames: string[]): boolean {\n  const actual = childrenSync(path)\n  return childNames.every(ea => actual.includes(ea))\n}\n\nexport function ancestorWithChildren(\n  path: string,\n  childNames: string[]\n): Maybe<string> {\n  return ancestors(path).find(ea => hasChildren(ea, childNames))\n}\n","import fs, { readFileSync, watch, WatchEventType } from \"fs\"\nimport * as _fse from \"fs-extra\"\nimport { readFile } from \"fs/promises\"\nimport _path from \"path\"\nimport process from \"process\"\nimport stream from \"stream\"\nimport { pipeline } from \"stream/promises\"\nimport util from \"util\"\nimport zlib from \"zlib\"\nimport { lazy } from \"../../core/Lazy\"\nimport {\n  compact,\n  filterInPlaceAsync,\n  includesAll,\n  isEmpty,\n  isNotEmpty\n} from \"../../fe/Array\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs, unixtime } from \"../../fe/Date\"\nimport { eql } from \"../../fe/Eql\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { stringify } from \"../../fe/JSON\"\nimport { denull, map, map3, mapOr, orElse } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { closeTo, gt0, gte } from \"../../fe/Number\"\nimport { omit } from \"../../fe/Object\"\nimport { opt } from \"../../fe/Opt\"\nimport { pad2 } from \"../../fe/Pad\"\nimport { newlineRe } from \"../../fe/String\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { leastBy, leastIndex, max } from \"../Array\"\nimport { Deferred } from \"../async/Deferred\"\nimport {\n  thenDefined,\n  thenMap,\n  thenMap2Or,\n  thenMapOr,\n  thenNot\n} from \"../async/Promise\"\nimport { time, timeSync } from \"../async/PromiseTimer\"\nimport { untilTrue } from \"../async/until\"\nimport { bufferToString } from \"../Buffer\"\nimport { isRetriableError } from \"../error/ErrorTypes\"\nimport { ee } from \"../event/EventEmitter\"\nimport { parseJSON } from \"../JSON\"\nimport { LogLevel } from \"../log/LogLevel\"\nimport { mkLogger } from \"../Logger\"\nimport { min } from \"../math/Vector\"\nimport { isLinux, isWin } from \"../platform/Platform\"\nimport { Predicate } from \"../predicates/Predicates\"\nimport { SyncPredicate } from \"../predicates/SyncPredicates\"\nimport { equalsIgnoreCase, stripSuffix } from \"../String\"\nimport { diceCoeff, hamming } from \"../StringSimilarity\"\nimport { bname } from \"../tags/Bname\"\nimport { userDesc } from \"../UserInfo\"\nimport { access, isStatRWX } from \"./Access\"\nimport { actualPath } from \"./ActualPath\"\nimport { splitLines } from \"./CRLF\"\nimport { DirectoryEntry, StatDirent } from \"./DirectoryEntry\"\nimport {\n  ensureNewNativePath_,\n  ensureNewNativePathSync_,\n  EnsureNewOptions\n} from \"./EnsureNew\"\nimport { CacheableFile, FileCache } from \"./FileCache\"\nimport { fileSha_, fileShaMeta_ } from \"./Hash\"\nimport { JsonWriteOptions } from \"./JsonWriteOptions\"\nimport { LineReader } from \"./LineReader\"\nimport {\n  containedByNativePath,\n  ellipsizePath,\n  isAbsolute,\n  isHiddenBasename,\n  isUNC,\n  mkdirp_,\n  mkdirpSync_,\n  parseNativePath,\n  pathDepth,\n  pathIsRoot,\n  posixPathFrom,\n  resolve,\n  splitNativePath\n} from \"./Path\"\nimport { native2posix } from \"./PosixNative\"\nimport { ProjectPath } from \"./ProjectPath\"\nimport { readdir_ } from \"./Readdir\"\nimport { SimpleDirent } from \"./SimpleDirent\"\nimport {\n  isSimpleFile,\n  SimpleFile,\n  SimpleFileOrString,\n  toNativePath_\n} from \"./SimpleFile\"\nimport { stat_, statMaybe, statTimes } from \"./Stat\"\nimport { statSync } from \"./StatSync\"\nimport { onDataChunked } from \"./StreamChunker\"\nimport { touch_ } from \"./Touch\"\nimport { writeFile_, writeText_, writeTextSync_ } from \"./WriteFile\"\nimport { zCopyToBuffer_ } from \"./zcat\"\n\nexport function isBaseFile(object: any): object is BaseFile {\n  return isSimpleFile(object) && object instanceof BaseFile\n}\n\nexport interface FileProgress {\n  path: string\n  /**\n   * operation (like \"sha\" or \"cp\")\n   */\n  op: string\n  /**\n   * percent complete\n   */\n  pct: number\n}\nconst cache = lazy(() => new FileCache<BaseFile>({ name: \"fs.BaseFile\" }))\n\nexport type UtimesArgs = Omit<\n  Parameters<typeof touch_>[0],\n  \"file\" | \"ensureFile\"\n>\n\nexport type RefreshArgs = {\n  refresh?: boolean\n  logLevel?: LogLevel\n}\n\n/**\n * Extracted from PosixFile, this superclass is used by the FileLogger.\n *\n * It must not depend on core code that also requires a Logger.\n */\nexport class BaseFile implements SimpleFile, CacheableFile {\n  protected readonly bflog = lazy(() =>\n    mkLogger(\"fs.BaseFile(\" + this.nativePath + \")\")\n  )\n\n  protected static attrTTL = 3 * minuteMs\n  readonly posixPath: string\n  readonly nativePath: string\n\n  /** \"/home/user/dir\" of \"/home/user/dir/file.txt\" */\n  readonly dir: string\n  /** \"file.txt\" of \"/home/user/dir/file.txt\" */\n  readonly base: string\n  /** \"file\" of \"/home/user/dir/file.txt\" */\n  readonly name: string\n  /** \".txt\" of \"/home/user/dir/file.txt\" */\n  readonly ext: string\n\n  protected constructor(\n    nativePath: string,\n    private dirent?: DirectoryEntry\n  ) {\n    if (dirent != null) {\n      this.nativePath = dirent.nativePath\n      this.dir = dirent.dir\n      this.base = dirent.base\n      this.name = dirent.name\n      this.ext = dirent.ext\n    } else {\n      this.nativePath = nativePath\n      const parsed = parseNativePath(this.nativePath)\n      this.dir = parsed.dir\n      this.base = parsed.base\n      this.name = parsed.name\n      this.ext = parsed.ext\n    }\n    this.posixPath = native2posix(this.nativePath)\n  }\n\n  toJSON() {\n    return {\n      _ctor: this.constructor.name,\n      nativePath: this.nativePath\n    }\n  }\n\n  toLogJSON() {\n    return this.nativePath\n  }\n\n  [util.inspect.custom]() {\n    return this.toJSON()\n  }\n\n  static async withFastestAccess<F extends BaseFile>(\n    files: Maybe<F>[]\n  ): PromiseMaybe<F> {\n    const arr = compact(files)\n    const msArr = await Promise.all(arr.map(f => f.shaMs()))\n    return arr[leastIndex(msArr)]\n  }\n\n  static projectRoot = lazy(() => {\n    const root = ProjectPath.Root()\n    if (root == null) {\n      throw new Error(\"Cannot find project path\")\n    } else {\n      return BaseFile.for(root)\n    }\n  })\n\n  static forPosix(posixPathOrFile: string | BaseFile) {\n    return posixPathOrFile instanceof BaseFile\n      ? posixPathOrFile\n      : this.for(posixPathOrFile.split(\"/\").join(_path.sep))\n  }\n\n  static forDirectoryEntry(de: DirectoryEntry) {\n    return this.for(de.nativePath, de)\n  }\n\n  static for(nativePathOrFile: SimpleFileOrString, dirent?: DirectoryEntry) {\n    if (nativePathOrFile instanceof BaseFile) {\n      return nativePathOrFile\n    }\n\n    // resolve() is expensive! Try to avoid it...\n\n    const nativePath = isSimpleFile(nativePathOrFile)\n      ? nativePathOrFile.nativePath\n      : toS(nativePathOrFile)\n\n    if (blank(nativePath)) {\n      throw new Error(\"BaseFile.for(): empty nativePathOrFile\")\n    }\n    const prior = cache().get(nativePath)\n    if (prior != null) return prior\n\n    // no need for a mutex: we're sync!\n    const resolved = resolve(nativePath)\n    const result = new BaseFile(resolved, dirent)\n    cache().set(nativePath, result)\n    cache().set(resolved, result)\n    return result\n  }\n\n  /**\n   * Wipe the instance cache and caches of all instances.\n   *\n   * This should only be used by tests.\n   *\n   * @param fromPath if undefined, all instances will be cleared.\n   */\n  static clear(fromPath?: string) {\n    ee().emit(\"fileChanged\", fromPath)\n  }\n\n  for(path: string, dirent?: DirectoryEntry): this {\n    return BaseFile.for(path, dirent) as this\n  }\n\n  forDirectoryEntry(de: DirectoryEntry): this {\n    return BaseFile.for(de.nativePath, de) as this\n  }\n\n  forChildDirent(dirent: SimpleDirent): this {\n    return this.forDirectoryEntry(\n      DirectoryEntry.fromSimpleDirent(this.nativePath, dirent)\n    )\n  }\n\n  forSiblingDirent(dirent: SimpleDirent): this {\n    return this.forDirectoryEntry(\n      DirectoryEntry.fromSimpleDirent(this.dir, dirent)\n    )\n  }\n\n  clear({ emit }: { emit?: boolean } = {}): this {\n    if (emit === true) ee().emit(\"fileChanged\", this.nativePath)\n    this.dirent = undefined\n    this.#childDirectoryEntries.unset()\n    this.#stat = undefined\n    return this\n  }\n\n  clearThisAndParent(): this {\n    ee().emit(\"fileChanged\", this.dir)\n    // this .clear() shouldn't be necessary, but it prevents race conditions\n    // from async onFileChanged listeners.\n    return this.clear({ emit: false })\n  }\n\n  toString() {\n    return this.nativePath\n  }\n\n  valueOf() {\n    return this.pathnames\n  }\n\n  resolve() {\n    const resolved = resolve(this.nativePath)\n    return resolved === this.nativePath ? this : this.for(resolved)\n  }\n\n  eql(that: Maybe<SimpleFileOrString>): boolean {\n    if (that == null) return false\n    const thatNativePath = toNativePath_(that)\n    // These paths have already been resolve()d. We don't need to do it again\n    // here.\n    return isLinux\n      ? this.nativePath === thatNativePath\n      : // darn Windows and macOS have case-insensitive filesystems!\n        equalsIgnoreCase(this.nativePath, thatNativePath)\n  }\n\n  get isUNC() {\n    return isUNC(this.nativePath)\n  }\n\n  /**\n   * Posix path from parent\n   */\n  get baseWithParent(): string {\n    return (\n      this.isRoot\n        ? \"/\"\n        : this.parent().isRoot\n        ? \"/\" + this.base\n        : (this.parent().parent().isRoot ? \"/\" : \"\") + // <  prefixes the path with a / if grandparent is root.\n          this.parent().base +\n          \"/\" +\n          this.base\n    ).normalize() // < normalize for macOS\n  }\n\n  /**\n   * @return nativePath \"…/path/to/file.ext\" with ancestors such that the\n   * result doesn't exceed maxLength\n   */\n  ellipsize({\n    maxLength = 80\n  }: { maxLength?: number; maxDepth?: number } = {}) {\n    return ellipsizePath({ p: this, maxLength })\n  }\n\n  get baseWithParentNoExt(): string {\n    return stripSuffix(this.baseWithParent, this.ext)\n  }\n\n  /**\n   * posix path from grandparent\n   */\n  get baseWithGrandparent(): string {\n    return (\n      this.isRoot\n        ? \"/\"\n        : this.parent().isRoot\n        ? this.baseWithParent\n        : this.parent().baseWithParent + \"/\" + this.base\n    ).normalize()\n  }\n\n  posixPathFrom(from: SimpleFileOrString): string {\n    return posixPathFrom(from, this) + (this.isDirectorySync() ? \"/\" : \"\")\n  }\n\n  async directoryEntry(): PromiseMaybe<DirectoryEntry> {\n    return (this.dirent ??= await thenMap(\n      this.stat(),\n      ea => new DirectoryEntry(this.dir, new StatDirent(this.base, ea))\n    ))\n  }\n\n  directoryEntrySync(): Maybe<DirectoryEntry> {\n    return (this.dirent ??= map(\n      this.statSync(),\n      ea => new DirectoryEntry(this.dir, new StatDirent(this.base, ea))\n    ))\n  }\n\n  readonly #childDirectoryEntries = lazy(() =>\n    thenMap(this.directoryEntry(), de => de.children())\n  )\n\n  async childDirectoryEntries(f?: Predicate<DirectoryEntry>) {\n    const dirents = await this.#childDirectoryEntries()\n    if (dirents == null || f == null || isEmpty(dirents)) return dirents\n\n    // PERF: don't filterAsync here to avoid lots of Promises GC\n    const result: DirectoryEntry[] = []\n    for (const dirent of dirents) {\n      if (true === (await f(dirent))) result.push(dirent)\n    }\n    return result\n  }\n\n  _directoryEntryChild(de: DirectoryEntry) {\n    return this.for(_path.join(this.nativePath, de.base), de)\n  }\n\n  /**\n   * @return the basename of the children of `this`, locale sorted.\n   */\n  childNames(): PromiseMaybe<string[]> {\n    return thenMap(this.childDirectoryEntries(), arr => arr.map(ea => ea.base))\n  }\n\n  /**\n   * For case-insensitive filesystems, return the closest-matching existing file\n   * **with case matching whats on the filesystem**\n   */\n  async resolve_(): PromiseMaybe<this> {\n    return (\n      (await this.#resolve_()) ?? (await this.clearThisAndParent().#resolve_())\n    )\n  }\n  async #resolve_(): PromiseMaybe<this> {\n    // DON'T USE this.siblingDirectoryEntries(): that filters `this`!\n\n    // Use readdir_() directly to avoid needless DirectoryEntry creation:\n    const sibs = (await readdir_(this.dir)).filter(ea =>\n      equalsIgnoreCase(ea.basename, this.base)\n    )\n    const closest = leastBy(sibs, ea => hamming(ea.basename, this.base))\n    return this.bflog().tap({\n      msg: \"resolve()\",\n      result:\n        closest?.basename === this.base\n          ? this\n          : map(closest, ea => this.forSiblingDirent(ea)),\n      meta: { sibs }\n    })\n  }\n\n  /**\n   * @throws if `readdir` fails\n   */\n  async children_(predicate?: Predicate<SimpleDirent>): Promise<this[]> {\n    const dirents = await readdir_(this.nativePath)\n    if (predicate != null) {\n      await filterInPlaceAsync(dirents, predicate)\n    }\n    // readdir_ gives us sorted files already!\n    return dirents.map(ea => this.forChildDirent(ea))\n  }\n\n  async children(predicate?: Predicate<DirectoryEntry>): PromiseMaybe<this[]> {\n    return (await this.childDirectoryEntries(predicate))?.map(ea =>\n      this._directoryEntryChild(ea)\n    )\n  }\n\n  async childFiles(\n    predicate?: Predicate<DirectoryEntry>\n  ): PromiseMaybe<this[]> {\n    const arr = await this.childDirectoryEntries(async ea => {\n      return (\n        ea.isFile() && (predicate == null || true === (await predicate(ea)))\n      )\n    })\n    return arr == null\n      ? undefined\n      : arr.map(ea => this._directoryEntryChild(ea))\n  }\n\n  async childDirectories(\n    predicate?: Predicate<DirectoryEntry>\n  ): PromiseMaybe<this[]> {\n    const arr = await this.childDirectoryEntries(async ea => {\n      return (\n        ea.isDirectory() &&\n        (predicate == null || true === (await predicate(ea)))\n      )\n    })\n    return arr == null\n      ? undefined\n      : arr.map(ea => this._directoryEntryChild(ea))\n  }\n\n  /**\n   * ONLY FOR TESTS\n   */\n  childrenSync(): this[] {\n    return orElse(\n      this.trapSync(\"childrenSync\", () =>\n        fs.readdirSync(this.nativePath).map(ea => this.join(ea))\n      ),\n      []\n    )\n  }\n  childFilesSync(): this[] {\n    return orElse(\n      this.trapSync(\"childrenSync\", () =>\n        fs\n          .readdirSync(this.nativePath, { withFileTypes: true })\n          .filter(ea => ea.isFile())\n          .map(ea => this.join(ea.name))\n      ),\n      []\n    )\n  }\n\n  async hasChildren(childNames?: string[]) {\n    const actualChildNames = await this.childNames()\n    return isNotEmpty(childNames)\n      ? includesAll(actualChildNames, childNames)\n      : isNotEmpty(actualChildNames)\n  }\n\n  async hasNoChildren() {\n    return (await this.isFile()) || isEmpty(await this.childNames())\n  }\n\n  /**\n   * Depth-first recursion, includes child directories.\n   */\n  async visitDescendants(\n    f: (descendant: this) => any | Promise<any>\n  ): Promise<void> {\n    return thenMap(this.children(), async children => {\n      for (const child of children) {\n        await child.visitDescendants(f)\n        await f(child)\n      }\n    })\n  }\n\n  /**\n   * Breadth-first recursion\n   *\n   * @return all files (no directories) that pass the given predicate.\n   */\n  async descendants(\n    predicate: Predicate<DirectoryEntry>\n  ): PromiseMaybe<this[]> {\n    const result: this[] = []\n    result.push(...toA(await this.childFiles(predicate)))\n    const dirs = await this.childDirectories()\n    if (dirs == null) return result\n    for (const dir of dirs) {\n      result.push(...toA(await dir.descendants(predicate)))\n    }\n    return result\n  }\n\n  async someDescendant(\n    predicate: Predicate<DirectoryEntry>,\n    depth: number = 0\n  ): PromiseMaybe<this> {\n    if (!gt0(depth)) return\n    const arr = (await this.#childDirectoryEntries()) ?? []\n    for (const ea of arr) {\n      if (true === (await predicate(ea))) {\n        return this._directoryEntryChild(ea)\n      }\n    }\n    if (depth > 0) {\n      for (const ea of arr) {\n        if (ea.isDirectory()) {\n          const result = await this._directoryEntryChild(ea).someDescendant(\n            predicate,\n            depth - 1\n          )\n          if (result != null) return result\n        }\n      }\n    }\n    return\n  }\n\n  /**\n   * Lightweight breadth-first directory entry visiting\n   *\n   * @return all files (no directories) that pass the given predicate.\n   */\n  descendantsSync(predicate: SyncPredicate<DirectoryEntry>): this[] {\n    const thisDe = this.directoryEntrySync()\n    const result: this[] = []\n    thisDe?.visitDescendantsSync(ea => {\n      if (true === predicate(ea)) {\n        result.push(this.forDirectoryEntry(ea))\n      }\n    })\n    return result\n  }\n\n  async ancestorWithChildren(childNames: string[]): PromiseMaybe<this> {\n    if (await this.hasChildren(childNames)) {\n      return this\n    } else if (this.isRoot) {\n      return undefined\n    } else {\n      return this.parent().ancestorWithChildren(childNames)\n    }\n  }\n\n  async siblings(f?: Predicate<DirectoryEntry>): PromiseMaybe<this[]> {\n    const p = this.parent()\n    return (await this.siblingDirectoryEntries(f))?.map(ea =>\n      p._directoryEntryChild(ea)\n    )\n  }\n\n  async siblingDirectoryEntries(\n    f?: Predicate<DirectoryEntry>\n  ): PromiseMaybe<DirectoryEntry[]> {\n    return this.parent().childDirectoryEntries(\n      async ea => ea.base !== this.base && (f == null || true === (await f(ea)))\n    )\n  }\n\n  async selfAndSiblings() {\n    return this.parent().children()\n  }\n\n  async firstExistingSelfOrAncestor(): Promise<this> {\n    return this.isRoot || (await this.exists())\n      ? this\n      : this.parent().firstExistingSelfOrAncestor()\n  }\n\n  /**\n   * @return [\"C:\", \"Users\", \"Bob\", \"image.jpg\"] on win, [\"home\", \"bob\",\n   * \"image.jpg\"] on !win\n   */\n  get pathnames(): string[] {\n    return splitNativePath(this.nativePath)\n\n    // return this.bflog().tap({\n    //   msg: \"pathnames()\",\n    //   result: splitNativePath(this.nativePath),\n    //   meta: { nativePath: this.nativePath }\n    // })\n  }\n\n  get pathsForDateParsing(): string[] {\n    return [\n      ...(this.isRoot ? [] : this.parent().pathnamesWithoutDrive),\n      bname(this.name)\n    ]\n  }\n\n  get pathnamesWithoutDrive(): string[] {\n    return isWin ? this.pathnames.slice(1) : this.pathnames\n  }\n\n  /**\n   * @return 0 for \"/\" or \"C:\\\", 1 for \"C:\\Users\" or \"/etc\", ...\n   */\n  get depth(): number {\n    return pathDepth(this)!\n  }\n\n  get isRoot(): boolean {\n    return pathIsRoot(this)\n  }\n\n  /**\n   * @param depth The number of directories from root to include. For example,\n   * \"C:\\\" or \"/\" for 0, \"C:\\Users\" or \"/home\" for depth 1\n   */\n  root(depth: number = 0): this {\n    // \"/\".root(1) should return \"/\"\n    return this.depth <= depth ? this : this.parent().root(depth)\n  }\n\n  parent(): this {\n    // MEMLEAK: don't cache this: this.for will do that for us.\n    return this.isRoot ? this : (this.for(this.dir) as this)\n  }\n\n  isAncestorOf(\n    maybeDescendant: Maybe<string | SimpleFile>,\n    args?: { acceptSelf: boolean }\n  ): boolean {\n    return containedByNativePath({\n      ancestor: this,\n      descendant: maybeDescendant,\n      ...args\n    })\n  }\n\n  isDescendantOf(maybeAncestor: Maybe<string | SimpleFile>): boolean {\n    return containedByNativePath({ descendant: this, ancestor: maybeAncestor })\n  }\n\n  isSelfOrDescendantOf(maybeAncestor: Maybe<string | SimpleFile>): boolean {\n    return (\n      maybeAncestor != null &&\n      (this.nativePath === toNativePath_(maybeAncestor) ||\n        this.isDescendantOf(maybeAncestor))\n    )\n  }\n\n  parentsAndSelf(): this[] {\n    return [...this.parents(), this]\n  }\n\n  selfAndParents(depth: number): this[] {\n    return [\n      this,\n      ...(this.isRoot || depth <= 0\n        ? []\n        : this.parent().selfAndParents(depth - 1))\n    ]\n  }\n\n  ancestor(depth = 1): Maybe<this> {\n    // TODO: remove recursion\n    return this.isRoot && depth > 0\n      ? undefined\n      : depth === 0\n      ? this\n      : this.parent().ancestor(depth - 1)\n  }\n\n  findAncestor(predicate: (ea: this) => boolean): Maybe<this> {\n    return this.isRoot\n      ? undefined\n      : predicate(this)\n      ? this\n      : this.parent().findAncestor(predicate)\n  }\n\n  /**\n   * Root-first order of paths (so [/, /var, /var/tmp, ...]\n   */\n  parents(): this[] {\n    const p = this.parent()\n    // NOTE: ALWAYS RETURN A NEW ARRAY, because consumers may .reverse or do\n    // other nasty things to it.\n    return this.isRoot ? [] : [...p.parents(), p]\n  }\n\n  /**\n   * Paths from URIs can have differently-encoded unicode paths (which switching\n   * from macOS to linux or Windows, for example.)\n   *\n   * If `this` exists, return it.\n   *\n   * If it doesn't, walk from the root of the path and try to find elements that,\n   * when unicode-normalized, match the current filesystem.\n   *\n   * As a last-ditch effort, try a case-insensitive match.\n   */\n  async normalize(): Promise<this> {\n    // Don't need to handle UNC paths (they are always windows-only):\n    return this.isUNC ? this : this.for(await actualPath(this.nativePath))\n  }\n\n  sibling(base: string): this {\n    return this.parent().join(base)\n  }\n\n  withPrefix(prefix: string): this {\n    return this.sibling(prefix + this.base)\n  }\n\n  /**\n   * @return this.sibling(this.name + suffix + this.ext)\n   */\n  withNameSuffix(suffix: string): this {\n    return this.sibling(this.name + suffix + this.ext)\n  }\n\n  /**\n   * @return this.sibling(this.base + suffix)\n   */\n  withSuffix(suffix: string): this {\n    return this.sibling(this.base + suffix)\n  }\n\n  siblingOf(possibleSibling: BaseFile): boolean {\n    return (\n      this.nativePath !== possibleSibling.nativePath &&\n      this.dir === possibleSibling.dir\n    )\n  }\n\n  /**\n   * Allows ../... directory traversals.\n   */\n  join(...paths: string[]): this {\n    if (isEmpty(paths) || eql([\".\"], paths) || paths.every(blank)) return this\n    return isAbsolute(paths[0])\n      ? this.for(_path.join(...paths))\n      : this.for(_path.join(this.nativePath, ...paths))\n  }\n\n  joinYMD(d = new Date()): Maybe<this> {\n    return map3(\n      d?.getFullYear(),\n      d?.getMonth(),\n      d?.getDate(),\n      (year, month, day) => this.join(toS(year), pad2(month + 1), pad2(day))\n    )\n  }\n\n  /**\n   * Prevents `..` directory traversals\n   * @param paths\n   */\n  child(...paths: string[]): this {\n    if (isEmpty(paths)) return this\n    const pathElements = flatten(paths.map(ea => ea.split(_path.sep))).filter(\n      ea => ea !== \"..\"\n    )\n    // Convert to posix to prevent \"\\\\\" and \"/\" from confusing the split:\n    return this.join(...pathElements)\n  }\n\n  //  _  _    _\n  // (_)| |_ ( )___    __ _\n  // | || __||// __|  / _` |\n  // | || |_   \\__ \\ | (_| | _  _  _\n  // |_| \\__|  |___/  \\__,_|(_)(_)(_)\n  protected async trap<T>(\n    methodName: string,\n    p: () => SyncOrAsync<T>,\n    errLogLevel: LogLevel = \"warn\"\n  ): PromiseMaybe<T> {\n    try {\n      return await time(\"fs.\" + methodName, p)\n    } catch (err) {\n      this.bflog().log(errLogLevel, `trap: ${methodName}() failed: ${err}`)\n      return undefined\n    }\n  }\n\n  // Return true if p() doesn't raise an error, else return false.\n  protected async trapOr(\n    methodName: string,\n    p: () => Promise<any>,\n    errLogLevel: LogLevel = \"warn\"\n  ): Promise<boolean> {\n    try {\n      await time(\"fs.\" + methodName, p)\n      return true\n    } catch (err) {\n      this.bflog().log(errLogLevel, `trapOr: ${methodName}() failed: ${err}`)\n      return false\n    }\n  }\n\n  protected trapSync<T>(\n    methodName: string,\n    p: () => T,\n    errLogLevel: LogLevel = \"warn\"\n  ): Maybe<T> {\n    try {\n      // this.bflog().trace(`trapSync ${methodName}()`)\n      return timeSync(\"fs.\" + methodName, p)\n    } catch (err) {\n      this.bflog().log(errLogLevel, `${methodName}() failed: ${err}`)\n      return undefined\n    }\n  }\n\n  /**\n   * Never cached\n   */\n  stat_() {\n    return stat_(this.nativePath)\n  }\n\n  #stat: Maybe<fs.Stats> = undefined\n\n  async stat(opts?: RefreshArgs) {\n    if (opts?.refresh ?? false) {\n      this.#stat = undefined\n    }\n    return (this.#stat ??= await statMaybe(this.nativePath))\n  }\n\n  statSync(opts?: RefreshArgs) {\n    if (opts?.refresh ?? false) {\n      this.#stat = undefined\n    }\n    return (this.#stat ??= statSync(this.nativePath))\n  }\n\n  async exists(opts?: RefreshArgs): Promise<boolean> {\n    if (opts?.refresh ?? false) {\n      this.dirent = undefined\n    }\n    return this.dirent != null || (await thenDefined(this.stat(opts)))\n  }\n\n  existsSync(opts?: RefreshArgs): boolean {\n    if (opts?.refresh ?? true) {\n      this.dirent = undefined\n    }\n    return this.dirent != null || this.statSync(opts) != null\n  }\n\n  async notExists(opts?: RefreshArgs): Promise<boolean> {\n    return thenNot(this.exists(opts))\n  }\n\n  async isDeleted(maxDepth = 3): PromiseMaybe<boolean> {\n    if (await this.exists({ refresh: true })) {\n      return this.bflog().tap({\n        result: false,\n        msg: \"isDeleted(): file exists\"\n      })\n    }\n\n    if (this.isRoot || maxDepth <= 0) {\n      return this.bflog().tap({\n        result: undefined,\n        msg: \"isDeleted(): isRoot() and doesn't exist (volume is just unmounted)\"\n      })\n    }\n\n    const parentIsDeleted = await this.parent().isDeleted(maxDepth - 1)\n\n    if (parentIsDeleted == null) {\n      return this.bflog().tap({\n        result: undefined,\n        msg: \"isDeleted(): parent().isDeleted was undefined\",\n        meta: { parentIsDeleted }\n      })\n    } else {\n      return this.bflog().tap({\n        result: true,\n        msg: \"isDeleted(): parent was either deleted or not deleted: either way, that means I am deleted.\",\n        meta: { parentIsDeleted }\n      })\n    }\n  }\n\n  mtime(): PromiseMaybe<Date> {\n    return thenMap(this.stat(), s => s.mtime)\n  }\n\n  mtimeMs(opts?: RefreshArgs): PromiseMaybe<number> {\n    return thenMap(this.stat(opts), s => Math.floor(s.mtimeMs))\n  }\n\n  async mtimeSec(): PromiseMaybe<number> {\n    const s = await this.stat()\n    return s == null ? undefined : unixtime(s.mtimeMs)\n  }\n\n  async lastModifiedUtc(): PromiseMaybe<string> {\n    return (await this.stat())?.mtime.toUTCString()\n  }\n\n  // The mtime, rather than the birthtime, will actually be the capture\n  // time if the file is \"copied and pasted\" via the Windows explorer\n  // (rather than using `rsync --times` or `cp --preserve=all`).\n\n  // Birthtime isn't supported by default in linux, and seems to just return\n  // the ctime.\n\n  /**\n   * @return the uniq stat times, including birthtime, mtime, and ctime.\n   */\n  async statTimes(): PromiseMaybe<number[]> {\n    const s = await this.stat()\n    return s == null ? undefined : statTimes(s)\n  }\n\n  maxStatMs(): PromiseMaybe<number> {\n    return thenMap(this.statTimes(), max)\n  }\n\n  maxStatDate(): PromiseMaybe<Date> {\n    return thenMap(this.maxStatMs(), ea => new Date(ea))\n  }\n\n  minStatMs(): PromiseMaybe<number> {\n    return thenMap(this.statTimes(), min)\n  }\n\n  minStatDate(): PromiseMaybe<Date> {\n    return thenMap(this.minStatMs(), ea => new Date(ea))\n  }\n\n  async size(opts?: RefreshArgs): PromiseMaybe<number> {\n    return thenMap(this.stat(opts), s => s.size)\n  }\n\n  /**\n   * Always uncached\n   */\n  async size_(): Promise<number> {\n    return (await this.stat_()).size\n  }\n\n  /**\n   * @return Promise<true> if the file is executable (not relevant on windows)\n   */\n  async isExecutable(): Promise<boolean> {\n    return access({ stat: await this.stat(), r: true, x: true })\n  }\n\n  async isReadable(): Promise<boolean> {\n    return access({ stat: await this.stat(), r: true })\n  }\n\n  isNotReadable(): Promise<boolean> {\n    return thenNot(this.isReadable())\n  }\n\n  async isReadWritable(): Promise<boolean> {\n    return access({ stat: await this.stat(), r: true, w: true })\n  }\n\n  isNotReadWritable(): Promise<boolean> {\n    return thenNot(this.isReadWritable())\n  }\n\n  async isReadWriteExecutable(): Promise<boolean> {\n    return isStatRWX(await this.stat())\n  }\n\n  isReadWriteExecutableSync(): boolean {\n    return isStatRWX(this.statSync())\n  }\n\n  async isReadWriteExecutable_(): Promise<boolean> {\n    return isStatRWX(await this.stat_())\n  }\n\n  async isReadWriteDirectory(): Promise<boolean> {\n    const stat = await this.stat()\n    return stat?.isDirectory() === true && isStatRWX(stat)\n  }\n\n  async assertReadWriteExecutable(): Promise<void> {\n    if (!(await this.isReadWriteExecutable())) {\n      throw new Error(\n        `Please check directory permissions for ${\n          this.nativePath\n        }: it must be read/write${\n          isWin ? \"\" : \"/execute\"\n        } by ${await userDesc()}`\n      )\n    }\n  }\n\n  /**\n   * Is this a rw dir, or **is it possible** for this directory to be made rw?\n   */\n  async maybeReadWriteDirectory(): Promise<boolean> {\n    if ((await this.isFile()) === true) {\n      return false\n    } else if (await this.isDirectory()) {\n      return this.isReadWriteExecutable()\n    } else {\n      // I don't exist! ask my parent:\n      return this.parent().maybeReadWriteDirectory()\n    }\n  }\n\n  isHiddenBasename(): boolean {\n    return isHiddenBasename(this.base)\n  }\n\n  async isEmpty(bytesConsideredEmpty = 0): Promise<boolean> {\n    if (await this.isDirectory()) {\n      return isNotEmpty(await this.childNames())\n    } else {\n      const s = await this.size()\n      return s == null || s <= bytesConsideredEmpty\n    }\n  }\n\n  isNonEmpty(minSizeBytes = 1): Promise<boolean> {\n    return thenNot(this.isEmpty(minSizeBytes))\n  }\n\n  async isEmptyFile(minSizeBytes = 1): Promise<boolean> {\n    const s = await this.stat()\n    return (\n      s == null ||\n      ((await this.isFile()) && !gte(await this.size(), minSizeBytes))\n    )\n  }\n\n  async isNonEmptyFile(minSizeBytes = 1): Promise<boolean> {\n    return (await this.isFile()) && (await this.isNonEmpty(minSizeBytes))\n  }\n\n  async modifiedGTE(mtime: Date): PromiseMaybe<boolean> {\n    return thenMap(\n      this.mtime(),\n      thisMtime =>\n        // Filesystems have only second-level resolution\n        unixtime(thisMtime) >= unixtime(mtime)\n    )\n  }\n\n  async modifiedCloseTo(\n    mtimeMs: number,\n    deltaMs: number\n  ): PromiseMaybe<boolean> {\n    return thenMap(\n      this.mtimeMs(),\n      thisMtimeMs => Math.abs(thisMtimeMs - mtimeMs) <= deltaMs\n    )\n  }\n\n  async isRecent(agoMs: number): Promise<boolean> {\n    const mtime = await this.maxStatMs()\n    return mtime != null && mtime > Date.now() - agoMs\n  }\n\n  async modifiedGT(mtime: Maybe<Date>): PromiseMaybe<boolean> {\n    if (mtime == null) return\n    return thenMap(\n      this.mtime(),\n      thisMtime =>\n        // Filesystems have only second-level resolution\n        unixtime(thisMtime) > unixtime(mtime)\n    )\n  }\n\n  isDirectory(opts?: RefreshArgs): SyncOrAsync<boolean> {\n    if (this.dirent != null) return this.dirent.isDirectory()\n    return thenMapOr(\n      this.stat(opts),\n      ea => ea.isDirectory(),\n      () => false\n    )\n  }\n\n  async isNotDirectory(): Promise<boolean> {\n    return thenNot(this.isDirectory())\n  }\n\n  isDirectorySync(opts?: RefreshArgs): boolean {\n    if (this.dirent != null) return this.dirent.isDirectory()\n    return mapOr(\n      this.statSync(opts),\n      ea => ea.isDirectory(),\n      () => false\n    )\n  }\n\n  async nearestDir(): Promise<this> {\n    return (await this.isDirectory()) ? this : this.parent()\n  }\n\n  async isFile(): Promise<boolean> {\n    if (this.dirent != null) return this.dirent.isFile()\n    const s = await this.stat()\n    return s != null ? s.isFile() : false\n  }\n\n  isFileSync(): boolean {\n    if (this.dirent != null) return this.dirent.isFile()\n    return opt(this.statSync()).filter(ea => ea.isFile()).isDefined\n  }\n\n  async rmdir(errLogLevel: LogLevel = \"warn\"): Promise<boolean> {\n    this.clear()\n    return (\n      (await this.trap(\n        \"rmdir\",\n        async () => {\n          await _fse.rmdir(this.nativePath, {\n            recursive: false,\n            maxRetries: 8,\n            retryDelay: 500\n          })\n          return true\n        },\n        errLogLevel\n      )) ?? false\n    )\n  }\n\n  rmdirSync(errLogLevel: LogLevel = \"warn\"): boolean {\n    this.clear()\n    return (\n      this.trapSync(\n        \"rmdirSync\",\n        () => {\n          _fse.rmdirSync(this.nativePath, {\n            recursive: false,\n            maxRetries: 8,\n            retryDelay: 500\n          })\n          return true\n        },\n        errLogLevel\n      ) ?? false\n    )\n  }\n\n  /**\n   * @throws on error\n   */\n  async mkdirp_(): Promise<this> {\n    try {\n      await mkdirp_(this.nativePath)\n    } catch (err: any) {\n      // EEXIST is from race conditions, and can be ignored.\n      if (err?.code !== \"EEXIST\") throw err\n    }\n    if (\n      // kernel FS lag can't be longer than a second or two\n      false ===\n      (await untilTrue(() => this.clear().isDirectory(), {\n        timeoutMs: 2 * secondMs,\n        intervalMs: 200\n      }))\n    ) {\n      throw new Error(\"Failed to mkdirp \" + this)\n    } else {\n      // this and parent because parent caches children.\n      return this.clearThisAndParent()\n    }\n  }\n\n  async mkdirp(): PromiseMaybe<this> {\n    if ((await this.clear().isDirectory()) || this.isRoot) return this\n    return this.trap(\"mkdirp\", async () => this.mkdirp_())\n  }\n\n  /**\n   * @throws on error\n   */\n  mkdirpSync_(): this {\n    mkdirpSync_(this.nativePath)\n    return this.clearThisAndParent()\n  }\n\n  mkdirpSync(): Maybe<this> {\n    if (this.isRoot) return this\n    return this.trapSync(\"mkdirpSync\", () => this.mkdirpSync_())\n  }\n\n  // no need lazy() or cache: fileSha_ already has smart caching.\n  sha_(): Promise<string> {\n    return fileSha_(this.nativePath)\n  }\n\n  /**\n   * base64 encoded SHA-512/192 (ish)\n   */\n  async sha(): PromiseMaybe<string> {\n    return this.trap(\"sha\", () => this.sha_())\n  }\n\n  /**\n   * @return ms to gather the sha for this file\n   */\n  async shaMs(): PromiseMaybe<number> {\n    // we don't care if the metadata is stale!\n    return this.trap(\n      \"shaMs\",\n      async () =>\n        (await fileShaMeta_(this, { autoInvalidate: false })).elapsedMs\n    )\n  }\n\n  async readJson_<T>(): Promise<T> {\n    return parseJSON((await _fse.readFile(this.nativePath)).toString()) as any\n  }\n\n  readJson<T>(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<T> {\n    return this.trap(\"readJson\", () => this.readJson_<T>(), errLogLevel)\n  }\n\n  readJsonSync<T>(): Maybe<T> {\n    return this.trapSync(\"readJsonSync\", () =>\n      parseJSON<T>(fs.readFileSync(this.nativePath).toString())\n    )\n  }\n\n  readFileSync_() {\n    return readFileSync(this.nativePath)\n  }\n\n  readFile_(): Promise<Buffer> {\n    return readFile(this.nativePath)\n  }\n\n  readFile(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<Buffer> {\n    return this.trap(\"readFile\", () => this.readFile_(), errLogLevel)\n  }\n\n  async readTextFile_() {\n    return bufferToString(await this.readFile_())\n  }\n\n  readTextFile(errLogLevel: LogLevel = \"warn\") {\n    return this.trap(\"readTextFile\", () => this.readTextFile_(), errLogLevel)\n  }\n\n  /**\n   * `readFile`, but on-the-fly decompression for .gz and .br\n   * @throws on error\n   */\n  async zReadFile_(options?: {\n    start?: number\n    end?: number\n  }): PromiseMaybe<Buffer> {\n    return zCopyToBuffer_(this.nativePath, options)\n  }\n\n  async zcat(options?: { start?: number; end?: number }): PromiseMaybe<string> {\n    return this.trap(\"zcat\", () => thenMap(this.zReadFile_(options), toS))\n  }\n\n  readLines(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<string[]> {\n    return thenMap(this.readTextFile(errLogLevel), splitLines)\n  }\n\n  readFileSync(): Maybe<string> {\n    try {\n      return fs.readFileSync(this.nativePath).toString()\n    } catch (error) {\n      this.bflog().warn(\"readFileSync() failed\", { error })\n      return\n    }\n  }\n\n  /**\n   * @throws on error\n   */\n  async writeText_(...txt: string[]) {\n    await writeText_(this.nativePath, ...txt)\n    return this\n  }\n\n  writeTextSync_(...txt: string[]) {\n    writeTextSync_(this.nativePath, ...txt)\n    return this\n  }\n\n  /**\n   * @throws on error\n   */\n  async writeFile_(data: string | Buffer) {\n    await writeFile_(this.nativePath, data)\n    return this\n  }\n\n  async writeJson(object: any, options?: JsonWriteOptions): PromiseMaybe<this> {\n    // outputJSON is almost the same as writeJson, except that if the directory\n    // does not exist, it's created\n    return this.trap(\"writeJsonMaybe\", () => this.writeJson_(object, options))\n  }\n\n  /**\n   * @throws on error\n   */\n  async writeJson_(object: any, options?: JsonWriteOptions): Promise<this> {\n    await mkdirp_(this.dir)\n    await _fse.writeFile(\n      this.nativePath,\n      stringify(object, options?.replacer, options?.spaces),\n      omit(options, \"replacer\", \"spaces\")\n    )\n    this.clearThisAndParent()\n    return this\n  }\n\n  async matchesContent(that: this): Promise<boolean> {\n    const stats = await Promise.all([\n      this.stat({ refresh: true }),\n      that.stat({ refresh: true })\n    ])\n    if (stats[0] == null || stats[1] == null || stats[0].size !== stats[1].size)\n      return false\n    return (await this.sha()) === (await that.sha())\n  }\n\n  async touch(args: UtimesArgs = {}): PromiseMaybe<this> {\n    return this.trap(\"touch\", () => this.touch_(args))\n  }\n\n  async touch_(args: UtimesArgs = {}): Promise<this> {\n    await touch_({\n      ...args,\n      file: this,\n      ensureFile: true\n    })\n    return this.clearThisAndParent()\n  }\n\n  async utimes(args: UtimesArgs = {}): PromiseMaybe<this> {\n    return this.trap(\"utimes\", async () => {\n      await touch_({\n        ...args,\n        file: this,\n        ensureFile: false\n      })\n      this.clearThisAndParent()\n      return this\n    })\n  }\n\n  async rm(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<this> {\n    return this.unlink(errLogLevel)\n  }\n\n  /**\n   * Deletes the current file.\n   * @return Promise<this> if unlink was successful\n   */\n  async unlink(errLogLevel: LogLevel = \"warn\"): PromiseMaybe<this> {\n    return this.trap(\"unlink\", () => this.unlink_(), errLogLevel)\n  }\n\n  /**\n   * Deletes the current file.\n   */\n  unlinkSync(logLevel: LogLevel = \"info\") {\n    return this.trapSync(\n      \"unlinkSync\",\n      () => {\n        _fse.unlinkSync(this.nativePath)\n        this.clearThisAndParent()\n      },\n      logLevel\n    )\n  }\n\n  async unlink_(): Promise<this> {\n    await _fse.unlink(this.nativePath)\n    return this.clearThisAndParent()\n  }\n\n  /**\n   * Delete files or directories. Should only be needed by tests or applied to\n   * cache dirs.\n   *\n   * Note that the promise may be returned before the file op is actually\n   * complete due to a (bug?) in fs-extra.\n   */\n  async rmrf(logLevel: LogLevel = \"info\"): PromiseMaybe<this> {\n    return this.trap(\"rmrf\", () => this.rmrf_(), logLevel)\n  }\n\n  async rmrf_(): Promise<this> {\n    // retries may be required for windows\n    return retryOnReject(\n      async () => {\n        const s = await this.stat({ refresh: true })\n        if (s != null) {\n          await _fse.rm(this.nativePath, {\n            recursive: s.isDirectory(),\n            force: true\n          })\n        }\n        return this.clearThisAndParent()\n      },\n      {\n        maxRetries: 3,\n        timeoutMs: 0, // recursive deletions may take a while\n        retryDelay: secondMs,\n        errorIsRetriable: isRetriableError\n      }\n    )\n  }\n\n  /**\n   * Supports gzip/gunzip/brotli/whatever transform you've got:\n   *\n   * THIS FILE IS DELETED AFTER THE PIPELINE COMPLETES\n   */\n  async #pipeTo(base: string, transform: stream.Transform) {\n    return this.trap(\"pipeTo(\" + base + \")\", async () => {\n      const dest = await this.sibling(base).ensureNew_()\n      await pipeline([\n        fs.createReadStream(this.nativePath, { autoClose: true }),\n        transform,\n        fs.createWriteStream(dest.nativePath, { autoClose: true })\n      ])\n      await this.unlink()\n      return dest\n    })\n  }\n\n  async gunzip(): PromiseMaybe<this> {\n    return this.#pipeTo(stripSuffix(this.base, \".gz\"), zlib.createGunzip())\n  }\n\n  async gzip(): PromiseMaybe<this> {\n    return this.#pipeTo(this.base + \".gz\", zlib.createGzip())\n  }\n\n  async compressBrotli(): PromiseMaybe<this> {\n    return this.#pipeTo(this.base + \".br\", zlib.createBrotliCompress())\n  }\n\n  ensureFile_(): Promise<this> {\n    return _fse\n      .ensureFile(this.nativePath)\n      .then(() => this.clearThisAndParent())\n  }\n\n  ensureFile(): PromiseMaybe<this> {\n    return this.trap(\"ensureFile\", () => this.ensureFile_())\n  }\n\n  /**\n   * @throws on error\n   */\n  ensureFileSync_() {\n    _fse.ensureFileSync(this.nativePath)\n    return this.clearThisAndParent()\n  }\n\n  /**\n   * Returns a basename in this directory with this same .ext and prefixed with\n   * this.name which either doesn't exist or is zero length.\n   *\n   * If `options.emptyIsNew` is `true`, the file may exist, but must be\n   * zero-length. If `options.emptyIsNew` is `false`, the returned path will be\n   * nonexistent.\n   */\n  async ensureNewNativePath(\n    options: Omit<EnsureNewOptions, \"nativePath\">\n  ): Promise<string> {\n    return ensureNewNativePath_({ nativePath: this.nativePath, ...options })\n  }\n\n  /**\n   * @throws if errors\n   */\n  ensureNew_(opts: Partial<EnsureNewOptions> = {}): Promise<this> {\n    return this.ensureNewNativePath(opts).then(p => this.for(p))\n  }\n\n  /**\n   * @throws if errors\n   */\n  ensureNewSync_(opts: Partial<EnsureNewOptions> = {}): this {\n    return this.for(\n      ensureNewNativePathSync_({ nativePath: this.nativePath, ...opts })\n    )\n  }\n\n  /**\n   * Make sure you encode `mode` in octal! 0o644\n   */\n  async chmod_(mode: string | number): Promise<this> {\n    await _fse.chmod(this.nativePath, mode)\n    return this.clear()\n  }\n\n  async chmod(mode: string | number): PromiseMaybe<this> {\n    try {\n      await this.chmod_(mode)\n      return this\n    } catch (err) {\n      this.bflog().warn(\"failed to chmod to \" + mode.toString(8), err)\n      return\n    }\n  }\n\n  chmodSync(mode: string | number): Maybe<this> {\n    try {\n      fs.chmodSync(this.nativePath, mode)\n      return this\n    } catch (err) {\n      this.bflog().warn(\"failed to chmod to \" + mode.toString(8), err)\n      return\n    }\n  }\n\n  zreadline(): LineReader {\n    return fs\n      .createReadStream(this.nativePath)\n      .on(\"error\", (err: any) => {\n        throw new Error(\"Failed to read from \" + this + \": \" + err)\n      })\n      .pipe(zlib.createGunzip())\n      .on(\"error\", (err: any) => {\n        throw new Error(\"Failed to gunzip \" + this + \": \" + err)\n      })\n      .pipe(new LineReader())\n  }\n\n  async siblingWithSameContents(): PromiseMaybe<this> {\n    return this.parent().childWithSameContents(this)\n  }\n\n  async childWithSameContents(target: BaseFile): PromiseMaybe<this> {\n    return time(\"fs.childWithSameContents\", async () => {\n      if (!(await this.isDirectory())) return\n\n      const targetSize = await target.size()\n      if (targetSize == null) return\n\n      // Only look for a same-named file if the parent directories are different:\n      if (!this.eql(target.parent())) {\n        const withSameName = this.join(target.base)\n        // SWEET we don't have to this.readdir()!\n        if (await target.matchesContent(withSameName)) return withSameName\n      }\n\n      const sameSize = await this.children(\n        async ea =>\n          !ea.isNameHidden() &&\n          targetSize === (await ea.size()) &&\n          // Don't include target!\n          ea.nativePath !== target.nativePath\n        // (we're not normalizing or case-insensitive matching here: there shouldn't be a need to, and that will be wrong on non-ci filesystems.)\n      )\n\n      // Don't need to sha target if none are the same size:\n      if (isEmpty(sameSize)) return\n\n      const targetSha = await target.sha()\n      if (targetSha == null) return\n\n      // Assume similar names are more likely to be the same, so try those first.\n      // if we have to check _64_ files with the same exact size, something screwy is going on: give up.\n      for (const child of sameSize\n        .sort((a, b) => -diceCoeff(a.base, b.base))\n        .slice(0, 64)) {\n        if ((await child.sha()) === targetSha) {\n          return child\n        }\n      }\n      return\n    })\n  }\n\n  firstMatchingLine(re: RegExp): PromiseMaybe<RegExpMatchArray> {\n    const d = new Deferred<Maybe<RegExpMatchArray>>(\n      \"firstMatchingLine(\" + this + \")\"\n    )\n    const r = fs.createReadStream(this.nativePath, { flags: \"r\" })\n    r.on(\"error\", (err: any) => {\n      if (err.errno === -2 || err.code === \"ENOENT\") {\n        void d.maybeResolve(undefined)\n        r.close()\n      } else {\n        void d.maybeReject(err)\n      }\n    })\n    r.on(\"close\", () => d.maybeResolve(undefined))\n    void onDataChunked(r, newlineRe(), ea => {\n      const m = re.exec(ea)\n      if (m != null) {\n        void d.maybeResolve(m)\n        r.close()\n      }\n    })\n    return d.promise\n  }\n\n  contemporary(b: BaseFile, maxDiffMs: number): Promise<boolean> {\n    return thenMap2Or(\n      this.statTimes(),\n      b.statTimes(),\n      (arr1, arr2) => {\n        for (const i of arr1) {\n          for (const j of arr2) {\n            if (closeTo(i, j, maxDiffMs)) {\n              return true\n            }\n          }\n        }\n        return false\n      },\n      () => false\n    )\n  }\n\n  /**\n   * NOTE: recursive is only supported if Settings.useFsWatch is true.\n   */\n  watchUntil<T>(opts: {\n    f: (event?: WatchEventType, filename?: string) => PromiseMaybe<T>\n    timeoutMs: number\n    persistent: boolean\n    recursive: boolean\n    intervalMs?: number\n    accept?: (t: Maybe<T>) => boolean\n  }): Deferred<T> {\n    const accept = (opts.accept ??= (t: Maybe<T>) => t != null && t !== false)\n    const d = new Deferred<T>(\"watchUntil(\" + this.nativePath + \")\")\n    if (opts.timeoutMs > 0) {\n      void d.setTimeout(opts.timeoutMs, !opts.persistent)\n    }\n    if (_useFsWatch) {\n      try {\n        const watcher = watch(\n          this.nativePath,\n          {\n            persistent: opts.persistent,\n            recursive: opts.recursive,\n            encoding: \"utf8\"\n          },\n          async (event, filename) => {\n            try {\n              const result = await opts.f(event, denull(filename))\n              if (accept(result)) {\n                void d.resolve(result!)\n              }\n            } catch (error) {\n              void d.reject(error)\n            }\n          }\n        )\n        void d.finally(() => {\n          watcher.close()\n        })\n      } catch (error) {\n        opts.intervalMs ??= 500\n        this.bflog().warn(\"fs.watch failed, using polling\", { error, opts })\n      }\n    } else {\n      // Force polling:\n      opts.intervalMs ??= 500\n      this.bflog().warn(\"watchUntil(): fsWatch disabled, using polling\", {\n        opts\n      })\n    }\n\n    if (gt0(opts.intervalMs)) {\n      const interval = setInterval(async () => {\n        try {\n          const result = await opts.f()\n          if (accept(result)) {\n            void d.resolve(result!)\n          }\n        } catch (error) {\n          void d.reject(error)\n        }\n      }, opts.intervalMs)\n      if (!opts.persistent) {\n        interval.unref()\n      }\n      void d.finally(() => {\n        clearInterval(interval)\n      })\n    }\n\n    return d\n  }\n}\n\nexport function execDir(): BaseFile {\n  return BaseFile.for(process.execPath).parent()\n}\n\n// This is used to break a circular dependency between fs and Settings:\nlet _useFsWatch: boolean = true\n\n// This is set in SettingsDefaults to watch Settings.useFsWatch:\nexport function useFsWatch(b: boolean) {\n  _useFsWatch = b\n}\n","import { compactBlanks } from \"../../fe/Array\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { newlineRe } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { isWin } from \"../platform/Platform\"\n\nexport const Newline = isWin ? \"\\r\\n\" : \"\\n\"\n\nexport function crlf(...s: string[]): string {\n  const result = s.map(toS).join(\"\\n\")\n  return isWin ? result.replace(newlineRe(), \"\\r\\n\") : result\n}\n\nexport function splitLines(...arr: Maybe<string | Buffer>[]): string[] {\n  return flatten(\n    arr.map(ea =>\n      Array.isArray(ea) ? splitLines(...ea) : toS(ea).split(newlineRe())\n    )\n  )\n}\n\nexport function joinLines(...lines: string[]): string {\n  return splitLines(...lines).join(Newline)\n}\n\nexport function splitCompactLines(...arr: Maybe<string | Buffer>[]): string[] {\n  return compactBlanks(splitLines(...arr))\n}\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { AppNameVersion } from \"../AppName\"\nimport { mkLogger } from \"../Logger\"\nimport { joinNativePath, mkdirp_ } from \"./Path\"\nimport { readFilePart_ } from \"./ReadFilePart\"\nimport { SimpleFileOrString, basename, toNativePath_ } from \"./SimpleFile\"\nimport { isNonEmptyFile } from \"./Stat\"\nimport { writeTextfile_ } from \"./WriteFile\"\n\n// https://bford.info/cachedir/\nexport const CACHEDIR_TAG = \"CACHEDIR.TAG\"\n\nexport const CACHEDIR_TAG_CONTENT =\n  \"Signature: 8a477f597d28d172789f06886806bc55\"\n\nconst logger = lazy(() => mkLogger(\"fs.CachedirTag\"))\n\nexport async function isCachedirTagDirectory(dir: SimpleFileOrString) {\n  return isCachedirTagFile(join(toNativePath_(dir), CACHEDIR_TAG))\n}\n\nexport async function isCachedirTagFile(\n  f: SimpleFileOrString\n): Promise<boolean> {\n  if (basename(f) !== CACHEDIR_TAG) {\n    return false\n  }\n  if (!(await isNonEmptyFile(toNativePath_(f), CACHEDIR_TAG_CONTENT.length))) {\n    return false\n  }\n  try {\n    const header = (\n      await readFilePart_({\n        nativePath: toNativePath_(f),\n        position: 0,\n        length: CACHEDIR_TAG_CONTENT.length\n      })\n    )?.buffer?.toString()\n    return header === CACHEDIR_TAG_CONTENT\n  } catch (error) {\n    logger().debug(\"isCachedirTagFile(): failed to read \" + f, error)\n    return false\n  }\n}\n\nexport async function writeCachedirTag_(dir: SimpleFileOrString) {\n  const dirPath = toNativePath_(dir)\n  await mkdirp_(dirPath)\n  await writeTextfile_(\n    joinNativePath([dirPath, CACHEDIR_TAG]),\n    CACHEDIR_TAG_CONTENT,\n    \"# This file is a cache directory tag\",\n    `# created by ${AppNameVersion()}`\n  )\n}\n","import path from \"path\"\nimport process from \"process\"\nimport { lazy } from \"../../core/Lazy\"\nimport { mapNotBlankOr } from \"../../fe/Blank\"\nimport { isMac, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\n\nconst DefaultMacOSPaths = Object.freeze([\n  \"/opt/homebrew/bin\",\n  \"/opt/homebrew/sbin\",\n  \"/usr/local/bin\",\n  \"/usr/local/sbin\",\n  \"/usr/bin\",\n  \"/bin\",\n  \"/usr/sbin\",\n  \"/sbin\"\n])\n\n// exported for tests:\nexport const DefaultPosixPaths = Object.freeze([\n  // From Ubuntu's /etc/environment:\n  \"/usr/local/bin\",\n  \"/usr/local/sbin\",\n  \"/usr/lib/libraw\", // where dcraw_emu lives\n  \"/opt/local/bin\", // macports\n  \"/opt/local/sbin\", // macports\n  \"/usr/sbin\",\n  \"/usr/bin\",\n  \"/sbin\",\n  \"/bin\"\n])\n\nexport const DefaultDockerPaths = Object.freeze([\n  \"/opt/photostructure/tools/bin\",\n  ...DefaultPosixPaths\n])\n\nexport const DefaultWinPaths = lazy(() => [\n  ...mapNotBlankOr(\n    process.env.SYSTEMROOT,\n    ea => [ea, path.join(ea, \"System32\"), path.join(ea, \"System32\", \"webm\")],\n    () => []\n  ),\n  \"C:\\\\cygwin64\\\\bin\"\n])\n\n// exported for tests:\nexport const DefaultPaths = Object.freeze(\n  isDocker()\n    ? DefaultDockerPaths\n    : isWin\n    ? DefaultWinPaths()\n    : isMac\n    ? DefaultMacOSPaths\n    : DefaultPosixPaths\n)\n","import {\n  AsyncSubscription,\n  Event,\n  subscribe,\n  SubscribeCallback\n} from \"@parcel/watcher\"\nimport { Stats } from \"fs\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { EndableRank, EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { filterAsync } from \"../async/Promise\"\nimport { onError } from \"../error/OnError\"\nimport { FifoCache } from \"../FifoCache\"\nimport { mkLogger } from \"../Logger\"\nimport { mkdirp_ } from \"./Path\"\nimport { SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\nimport { statEql, statMaybe } from \"./Stat\"\nimport { WipPrefix } from \"./WIP\"\n\nexport type FsEventListener = (events: Event[]) => any\n\nconst logger = lazy(() => mkLogger(\"fs.DirWatcher\"))\n\n// TODO: ADD TESTS!\n\nexport class DirWatcher extends EndableWrapper {\n  static async for(\n    dir: SimpleFileOrString,\n    cb: SubscribeCallback,\n    rank = EndableRanks.first\n  ) {\n    const nativePath = toNativePath_(dir)\n    await mkdirp_(nativePath)\n\n    const path2stat = new FifoCache<Maybe<Stats>>(1024)\n    const sub = await subscribe(nativePath, async (err, arr) => {\n      logger().trace(\"callback\", { nativePath, err, arr })\n      if (err != null) {\n        onError(\"FsWatcher error\", { cause: err, path: nativePath })\n      }\n      if (arr != null) {\n        // don't ignore delete events: FsLock wants to know!\n\n        // ignore WIPs and unchanged files:\n        arr = await filterAsync({\n          name: this.name,\n          arr,\n          f: async ea => {\n            if (ea.path.includes(WipPrefix)) return false\n            const prior = path2stat.get(ea.path)\n            const current = await statMaybe(ea.path)\n            if (true === current?.isFile() && statEql(prior, current)) {\n              // only skip _files_ that didn't change\n              return false\n            } else {\n              path2stat.set(ea.path, current)\n              return true\n            }\n          }\n        })\n      }\n      if (err != null || isNotEmpty(arr)) cb(err, arr)\n    })\n\n    return new DirWatcher(nativePath, sub, path2stat, rank)\n  }\n\n  private constructor(\n    readonly nativePath: string,\n    readonly subscription: AsyncSubscription,\n    readonly path2stat: FifoCache<Maybe<Stats>>,\n    rank?: EndableRank\n  ) {\n    super(\"fs.DirWatcher(\" + nativePath + \")\", () => this.close(), rank)\n  }\n\n  clear() {\n    this.path2stat.clear()\n  }\n\n  readonly close = lazy(() => this.subscription.unsubscribe())\n}\n","import fs from \"fs\"\nimport * as fse from \"fs-extra\"\nimport { join, parse, sep } from \"path\"\nimport { inspect } from \"util\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { MaybeSyncOrAsync, SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { stripSuffix } from \"../String\"\nimport { thenMap } from \"../async/Promise\"\nimport { ee } from \"../event/EventEmitter\"\nimport { ParsedFile, parentBasename, parseNativePath } from \"./Path\"\nimport { readdir } from \"./Readdir\"\nimport { SimpleDirent, isSimpleDirent } from \"./SimpleDirent\"\nimport { SimpleFile, isSimpleFile } from \"./SimpleFile\"\nimport { stat_ } from \"./Stat\"\n\n// DON'T REFERENCE PosixFile HERE, you'll have circular deps.\n\nexport class StatDirent implements Partial<Pick<fs.Stats, \"size\" | \"mtimeMs\">> {\n  readonly isFile: boolean\n  readonly isDirectory: boolean\n  size: Maybe<number>\n  mtimeMs: Maybe<number>\n  // Allow the Stats instance to be GC'ed by copying what I need out of it:\n  constructor(\n    readonly base: string,\n    s: fs.Stats | fs.Dirent | SimpleDirent\n  ) {\n    if (isSimpleDirent(s)) {\n      // TODO: assert that base === s.basename\n      this.isFile = s.isFile\n      this.isDirectory = s.isDirectory\n    } else {\n      this.isFile = s.isFile()\n      this.isDirectory = s.isDirectory()\n      // isSymbolicLink is always false unless you use lstat, which we never use.\n    }\n    if (s instanceof fs.Stats) {\n      this.size = s.size\n      this.mtimeMs = s.mtimeMs\n    }\n  }\n}\n\nconst logger = lazy(() => mkLogger(\"fs.DirectoryEntry\"))\n\nexport class DirectoryEntry implements ParsedFile, SimpleFile {\n  /**\n   * Full path\n   */\n  readonly nativePath: string\n\n  /**\n   * @return extension (`.jpg` for `image.jpg`)\n   */\n  readonly ext: string\n\n  /**\n   * Should only be constructed by BaseFile\n   *\n   * @param dir The full parent directory path such as `/home/user/dir` or\n   * `c:\\\\path\\\\dir` for `/home/user/dir/file.txt` or `c:\\\\path\\\\dir\\\\file.txt`\n   */\n  constructor(\n    readonly dir: string,\n    public dirent: StatDirent\n  ) {\n    this.nativePath = join(this.dir, dirent.base)\n    this.ext = parseNativePath(dirent.base).ext\n  }\n\n  static fromSimpleDirent(dir: string, dirent: SimpleDirent) {\n    return new DirectoryEntry(dir, new StatDirent(dirent.basename, dirent))\n  }\n\n  static async for(\n    nativePathOrFile: string | SimpleFile\n  ): PromiseMaybe<DirectoryEntry> {\n    try {\n      return await this.for_(nativePathOrFile)\n    } catch {\n      return\n    }\n  }\n\n  static async for_(\n    nativePathOrFile: string | SimpleFile\n  ): Promise<DirectoryEntry> {\n    const { nativePath, dir, base } = isSimpleFile(nativePathOrFile)\n      ? nativePathOrFile\n      : { nativePath: nativePathOrFile, ...parseNativePath(nativePathOrFile) }\n\n    const s = await fse.stat(nativePath)\n    return new DirectoryEntry(dir, new StatDirent(base, s))\n  }\n\n  clear() {\n    ee().emit(\"fileChanged\", this.nativePath)\n    this.dirent.size = undefined\n    this.dirent.mtimeMs = undefined\n    return this\n  }\n\n  async join(...path: string[]) {\n    return DirectoryEntry.for(join(this.nativePath, ...path))\n  }\n\n  /**\n   * @return the full basename `image.jpg`\n   */\n  get base() {\n    return this.dirent.base\n  }\n\n  /**\n   * @return basename without the ext (`image` for `image.jpg`)\n   */\n  get name() {\n    return stripSuffix(this.base, this.ext)\n  }\n\n  get pathnames(): string[] {\n    return this.nativePath.split(sep)\n  }\n\n  get parentAndBase(): string {\n    return this.pathnames.slice(-2).join(\"/\")\n  }\n\n  get parentBasename(): string {\n    return parentBasename(this.nativePath)\n  }\n\n  toJSON() {\n    return {\n      _ctor: this.constructor.name,\n      nativePath: this.nativePath\n    }\n  }\n\n  toLogJSON() {\n    return this.nativePath\n  }\n\n  [inspect.custom]() {\n    return this.toJSON()\n  }\n\n  toString() {\n    return this.nativePath\n  }\n\n  isFile() {\n    return this.dirent.isFile\n  }\n\n  isFileSync() {\n    return this.dirent.isFile\n  }\n\n  isDirectory() {\n    return this.dirent.isDirectory\n  }\n\n  isDirectorySync() {\n    return this.dirent.isDirectory\n  }\n\n  get isRoot() {\n    return this.dir === parse(this.dir).dir\n  }\n\n  isNameHidden() {\n    return this.name.startsWith(\".\")\n  }\n\n  parent(): SyncOrAsync<Maybe<this>> {\n    const p = parseNativePath(this.dir)\n    return p.dir === this.dir\n      ? this // root\n      : (new DirectoryEntry(p.dir, {\n          base: p.base,\n          isFile: false,\n          isDirectory: true,\n          mtimeMs: undefined as any,\n          size: undefined as any\n        }) as this)\n  }\n\n  async childNames() {\n    try {\n      return !this.isDirectory()\n        ? undefined\n        : (await readdir(this.nativePath))?.map(ea => ea.basename)\n    } catch (err) {\n      logger().warn(\n        \"childNames() failed to readdir(\" + this.nativePath + \")\",\n        err\n      )\n      return\n    }\n  }\n\n  async children() {\n    try {\n      if (!this.isDirectory()) return undefined\n      const arr = await readdir(this.nativePath) // readdir is already sorted\n      return arr?.map(\n        ea => DirectoryEntry.fromSimpleDirent(this.nativePath, ea) as this\n      )\n    } catch (err) {\n      logger().warn(\n        \"children() failed to readdir(\" + this.nativePath + \")\",\n        err\n      )\n      return\n    }\n  }\n\n  childrenSync() {\n    try {\n      if (!this.isDirectory()) return undefined\n      const arr = fs.readdirSync(this.nativePath, { withFileTypes: true }) // readdir is already sorted\n      return arr?.map(\n        ea => new DirectoryEntry(this.nativePath, new StatDirent(ea.name, ea))\n      )\n    } catch (err) {\n      logger().warn(\n        \"children() failed to readdir(\" + this.nativePath + \")\",\n        err\n      )\n      return\n    }\n  }\n\n  async childDirectories() {\n    return toA(await this.children()).filter(ea => ea.isDirectory())\n  }\n\n  async childFiles() {\n    return toA(await this.children()).filter(ea => ea.isFile())\n  }\n\n  /**\n   * Depth-first\n   */\n  async visitDescendants(f: (child: this) => any): Promise<void> {\n    const children = await this.children()\n    if (children == null) return\n\n    for (const dir of children.filter(ea => ea.isDirectory())) {\n      await dir.visitDescendants(f)\n    }\n\n    for (const ea of children) {\n      if (ea.isFile()) {\n        await f(ea)\n      }\n    }\n\n    for (const ea of children) {\n      if (ea.isDirectory()) {\n        await f(ea)\n      }\n    }\n\n    return\n  }\n\n  visitDescendantsSync(f: (child: DirectoryEntry) => any): void {\n    const children = this.childrenSync()\n    if (children == null) return\n    for (const ea of children) {\n      if (ea.isFile()) f(ea)\n    }\n    for (const ea of children) {\n      if (ea.isDirectory()) {\n        ea.visitDescendantsSync(f)\n        f(ea)\n      }\n    }\n  }\n\n  async visitDescendantFiles(f: (child: this) => any): Promise<void> {\n    return this.visitDescendants(ea => (ea.isFile() ? f(ea) : undefined))\n  }\n\n  async filterDescendantFiles(\n    predicate: (child: this) => SyncOrAsync<boolean>\n  ) {\n    const arr: this[] = []\n    await this.visitDescendantFiles(async ea => {\n      if (true === (await predicate(ea))) arr.push(ea)\n    })\n    return arr\n  }\n\n  async stat() {\n    try {\n      const s = await stat_(this.nativePath)\n      this.dirent = new StatDirent(this.base, s)\n      return s\n    } catch {\n      return\n    }\n  }\n\n  size(): MaybeSyncOrAsync<number> {\n    // Try to reduce the number of promises we're making:\n    return this.dirent.size ?? thenMap(this.stat(), ea => ea.size)\n  }\n\n  mtimeMs(): MaybeSyncOrAsync<number> {\n    // Try to reduce the number of promises we're making:\n    return this.dirent.mtimeMs ?? thenMap(this.stat(), ea => ea.mtimeMs)\n  }\n\n  unlink_() {\n    ee().emit(\"fileChanged\", this.nativePath)\n    return fse.unlink(this.nativePath)\n  }\n\n  rmdir_() {\n    ee().emit(\"fileChanged\", this.nativePath)\n    return fse.rmdir(this.nativePath)\n  }\n}\n","import path from \"path\"\nimport { leftPad } from \"../../fe/Pad\"\nimport { mkdirpSync_, mkdirp_, parseNativePath } from \"./Path\"\nimport { isEmptyFile } from \"./Stat\"\nimport { isEmptyFileSync } from \"./StatSync\"\n\nexport interface EnsureNewOptions {\n  nativePath: string\n  emptyIsNew?: boolean\n  maxVersions?: number\n  requireNumber?: boolean\n  leftPad?: number\n  startIndex?: number\n}\n\nexport const DefaultEnsureNewOptions: Omit<\n  Required<EnsureNewOptions>,\n  \"nativePath\"\n> = Object.freeze({\n  emptyIsNew: true,\n  maxVersions: 512,\n  requireNumber: false,\n  leftPad: 1,\n  startIndex: 1\n})\n\nexport async function ensureNewNativePath_(\n  arg: EnsureNewOptions\n): Promise<string> {\n  const opts: Required<EnsureNewOptions> = {\n    ...DefaultEnsureNewOptions,\n    ...arg\n  }\n  const p = parseNativePath(opts.nativePath)\n  await mkdirp_(p.dir)\n  {\n    if (!opts.requireNumber && (await isEmptyFile(opts.nativePath, opts))) {\n      return opts.nativePath\n    }\n  }\n  for (let i = opts.startIndex; i <= opts.maxVersions; i++) {\n    const f = path.join(\n      p.dir,\n      `${p.name}-${leftPad(i, opts.leftPad, \"0\")}${p.ext}`\n    )\n    if (await isEmptyFile(f, opts)) return f\n  }\n  throw new Error(\n    \"There are already more than \" + opts.maxVersions + \" of \" + opts.nativePath\n  )\n}\n\nexport function ensureNewNativePathSync_(arg: EnsureNewOptions): string {\n  const opts: Required<EnsureNewOptions> = {\n    ...DefaultEnsureNewOptions,\n    ...arg\n  }\n  const p = parseNativePath(opts.nativePath)\n  mkdirpSync_(p.dir)\n  if (!opts.requireNumber && isEmptyFileSync(opts.nativePath, opts)) {\n    return opts.nativePath\n  }\n  for (let i = opts.startIndex; i <= opts.maxVersions; i++) {\n    const f = path.join(\n      p.dir,\n      `${p.name}-${leftPad(i, opts.leftPad, \"0\")}${p.ext}`\n    )\n    if (isEmptyFileSync(f, opts)) return f\n  }\n  throw new Error(\n    \"There are already more than \" + opts.maxVersions + \" of \" + opts.nativePath\n  )\n}\n","import { isNotEmpty } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { keys } from \"../../fe/Object\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { ee } from \"../event/EventEmitter\"\nimport { FifoCacheAsync, FifoCacheAsyncOpts } from \"../FifoCacheAsync\"\nimport { mkLogger } from \"../Logger\"\nimport { mapEntries } from \"../Object\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\n\n// DEPLOOP DANGER: DON'T REFERENCE BASEFILE!\n\nexport const InstanceCacheMaxSize = 256\n\nexport interface CacheableFile {\n  clear(args?: { emit?: boolean }): this\n}\n\nexport function isCacheableFile(o: any): o is CacheableFile {\n  return typeof o === \"object\" && typeof o.clear === \"function\"\n}\n\nexport class FileCache<T> extends FifoCacheAsync<T> {\n  constructor(\n    opts: Partial<FifoCacheAsyncOpts> & Pick<FifoCacheAsyncOpts, \"name\">\n  ) {\n    super({\n      maxSize: InstanceCacheMaxSize,\n      timeoutMs: ShortCommandTimeoutMs,\n      ...opts\n    })\n\n    // break circular deps:\n    later(() => {\n      ee().on(\"fileChanged\", path => this.#clearFromPath(path))\n      ee().on(\"clearCache\", () => this.clear())\n\n      new EndableWrapper(\n        opts.name + \" stats\",\n        () => {\n          const s = mapEntries(this.stats(), (_, v) => (v > 0 ? v : undefined))\n          if (isNotEmpty(keys(s))) {\n            mkLogger(opts.name).info(\"stats\", s)\n          }\n        },\n        EndableRanks.stats\n      )\n    })\n  }\n\n  async #clearFromPath(fromPath?: string) {\n    if (blank(fromPath)) {\n      // full wipe: the singleton expectation can't/shouldn't be expected.\n      await this.clear()\n    } else {\n      for (const k of this.cache.keys()) {\n        if (k.startsWith(fromPath)) {\n          const v = await this.cache.get(k) // values may be promises\n          if (isCacheableFile(v)) {\n            // NOTE: BaseFile and PosixFile instances are expected to be\n            // singletons for a given path, so if we remove the instance from\n            // here, they won't be singletons anymore: we just want to remove\n            // any cached state they currently have.\n            v.clear({ emit: false })\n          } else {\n            this.cache.delete(k)\n          }\n        }\n      }\n    }\n  }\n}\n","import { Dirent } from \"fs\"\nimport { lazy } from \"../../core/Lazy\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { values } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport { MaybeFileish } from \"../fs/MaybeFileish\"\nimport { JpegExts } from \"./JpegExts\"\nimport { isSimpleFile } from \"./SimpleFile\"\n\nconst ShortExtRe = /(?:^\\.?|.\\.)([a-z0-9]{2,4})$/i\n\n/**\n * @return the file extension, in lower case, without a \".\" prefix. File\n * extensions longer than 4 characters are not supported.\n */\nexport function normalizeExt(ext: MaybeFileish): Maybe<string> {\n  ext = isSimpleFile(ext) ? ext.ext : ext instanceof Dirent ? ext.name : ext\n  const result = map(ShortExtRe.exec(toS(ext)), m => m[1])?.toLowerCase()\n  // hack to normalize all JPEG to \"jpg\"\n  return JpegExts.includes(result as any) ? \"jpg\" : result\n}\n\nexport function isExt(ext: MaybeFileish, ...exts: string[]): boolean {\n  ext = normalizeExt(ext)\n  return exts.some(ea => normalizeExt(ea) === ext)\n}\n\nexport function isJpegExt(ext: MaybeFileish): boolean {\n  return isExt(ext, ...JpegExts)\n}\nexport function isJsonExt(ext: MaybeFileish): boolean {\n  return isExt(ext, \"json\")\n}\nexport function isCsvExt(ext: MaybeFileish): boolean {\n  return isExt(ext, \"csv\")\n}\n\nexport const SidecarFiletypes = {\n  \"application/rdf+xml\": [\"xmp\"],\n  \"application/json\": [\"json\"],\n  \"application/x-mie\": [\"mie\"],\n  \"application/x-exif\": [\"exif\"],\n  \"application/vnd.apple.photos\": [\"aae\"],\n  \"image/x-exv\": [\"exv\"] // BOO it's not an image!\n} as const\n\nexport const SidecarExts = flatten(\n  values(SidecarFiletypes)\n) as unknown as string[]\n\n/**\n * Note that JSON is considered a sidecar type\n */\nexport function isSidecarExt(ext: MaybeFileish): boolean {\n  return isExt(ext, ...SidecarExts)\n}\n\nexport const extAliases = lazy(() => {\n  const result = new Map<string, string[]>()\n  for (const arr of [\n    JpegExts,\n    [\"tif\", \"tiff\"],\n    [\"heif\", \"heic\"],\n    [\"html\", \"htm\"],\n    [\"jp2\", \"jp2k\"]\n  ] as string[][]) {\n    for (const ea of arr) {\n      result.set(ea, arr)\n    }\n  }\n  return result\n})\n\nconst regexCache = new Map<string, RegExp>()\n\n/**\n * NOTE: Assumes exts doesn't need normalization, and comes directly from getExtInfo!\n */\nexport function mkExtsRegExp(exts: string[]): RegExp {\n  return getOrSet(\n    regexCache,\n    exts.join(\",\"),\n    () => new RegExp(\"\\\\.(?:\" + exts.join(\"|\") + \")$\", \"im\")\n  )\n}\n","import fs from \"fs\"\nimport { stat } from \"fs/promises\"\nimport { pick } from \"../../fe/Object\"\nimport { SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\n\nexport type FileStats = Pick<fs.Stats, \"size\" | \"mtimeMs\">\n\nexport async function fileStats_(f: SimpleFileOrString): Promise<FileStats> {\n  return pick((await stat(toNativePath_(f)))!, \"size\", \"mtimeMs\")\n}\n","import { pidExists } from \"batch-cluster\"\nimport { Dirent } from \"fs\"\nimport fse from \"fs-extra\"\nimport { clearTimeout } from \"timers\"\nimport { compactBlanks, filterInPlace } from \"../../fe/Array\"\nimport { at } from \"../../fe/At\"\nimport { secondMs } from \"../../fe/Date\"\nimport { eql } from \"../../fe/Eql\"\nimport { fmtDuration } from \"../../fe/FmtDuration\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, round, toInt } from \"../../fe/Number\"\nimport { randomFloat } from \"../../fe/Random\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { toS } from \"../../fe/toS\"\nimport { isTest } from \"../NodeEnv\"\nimport { escapeRegExp } from \"../RegExp\"\nimport { serviceName } from \"../ServiceNames\"\nimport { EndableRank, EndableRanks, ending } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { oneAtATime } from \"../async/OneAtATime\"\nimport { InternalErrorFlag } from \"../error/ErrorFlags\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { TokenRadix } from \"../math/Radix\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { BaseFile } from \"./BaseFile\"\nimport {\n  PsLockExt,\n  fsLockDir,\n  fsLockFileBasename,\n  isPsLockFileOrDir\n} from \"./FsLockDir\"\nimport { SimpleFileOrString, basename } from \"./SimpleFile\"\n\nexport interface FsLockOptions {\n  name?: string\n  file: BaseFile\n  /**\n   * If 0, no timeout\n   */\n  timeoutMs: number\n  noopIfContested?: boolean\n  /**\n   * If true, ignore fslock\n   */\n  skipFsLock?: boolean\n\n  endableRank?: EndableRank\n\n  /**\n   * If this is lock in a cache directory, don't bother running rmdir'ing the\n   * lock dir on release.\n   */\n  dirty?: boolean\n}\n\ntype VacuumArg = { vacuum: boolean }\n\nconst LastNumberRe = new RegExp(\"-(?<pid>\\\\d+)\" + escapeRegExp(PsLockExt) + \"$\")\n\n/**\n * FsLock is a filesystem-based advisory lock for a given file, where:\n *  - lock contention is expected both inter and intra processes\n *  - fair lock acquisition (first in, first served)\n *  - locks are only held temporarily\n *  - locks are held per given instance, not per process\n *\n * The instance that holds the lock is the instance whose filename is\n * alphabetically first in the lock dir.\n */\nexport class FsLock extends EndableWrapper {\n  static #lastUidTime: number = 0\n  static internalErrors = 0\n  static #instanceCount = 0\n\n  static newUid(pid = process.pid) {\n    // Make sure lastUidTime is always increasing:\n    this.#lastUidTime = Math.max(Date.now(), this.#lastUidTime + 1)\n    // The time uid MUST BE FIRST in the UID to ensure locks are acquired in\n    // temporal order:\n    return compactBlanks([\n      TokenRadix.encode(this.#lastUidTime), // filename-safe radix\n      serviceName.prior(),\n      toS(pid)\n    ]).join(\"-\")\n  }\n\n  static pidFromLockfile(lockfile: SimpleFileOrString | Dirent): Maybe<number> {\n    return FsLock.pidFromBasename(basename(lockfile))\n  }\n\n  static pidFromBasename(base: string): Maybe<number> {\n    return toInt(LastNumberRe.exec(toS(base))?.groups?.pid)\n  }\n\n  static #instances: FsLock[] = []\n\n  /**\n   * Use `FsLock.for()` instead of the constructor to ensure the same fslock\n   * instance is used for the same file\n   */\n  static for(opts: FsLockOptions): FsLock {\n    return (\n      this.#instances.find(ea => ea.opts.file === opts.file) ?? new FsLock(opts)\n    )\n  }\n\n  readonly #instanceId = ++FsLock.#instanceCount\n  readonly lockdir: BaseFile\n  #acquired = false\n  /** only set when acquisition is requested */\n  lockfile: Maybe<BaseFile>\n  #refreshTimer: Maybe<NodeJS.Timeout>\n  #rmLockdirLater: Maybe<NodeJS.Timeout>\n  #lastVacuumTs = Date.now()\n  readonly staleMs: number\n\n  constructor(readonly opts: FsLockOptions) {\n    super(\n      opts.name ?? \"FsLock\",\n      () => this.release(),\n      opts.endableRank ?? EndableRanks.postdb,\n      commandTimeoutMs()\n    )\n    this.lockdir = fsLockDir(this.opts.file)\n\n    if (opts.name == null) {\n      this.name =\n        \"fs.FsLock(\" + opts.file.baseWithGrandparent + \")#\" + this.#instanceId\n    }\n\n    // files should be checked for being stale at least once during the\n    // timeoutMs period. We make this a random period less than timeoutMs to\n    // avoid a thundering herd of processes all trying to vacuum at the same\n    // time.\n    this.staleMs = round(this.opts.timeoutMs / randomFloat(2, 4))\n    FsLock.#instances.push(this)\n  }\n\n  get acquired() {\n    return this.#acquired\n  }\n\n  toLogJSON() {\n    return {\n      name: this.name,\n      acquired: this.acquired\n    }\n  }\n\n  async #maybeVacuum(arg?: VacuumArg) {\n    const why =\n      true === arg?.vacuum\n        ? \"arg.vacuum\"\n        : gt0(this.staleMs) && Date.now() > this.#lastVacuumTs + this.staleMs\n        ? \"lastVacuumTs was too long ago\"\n        : undefined\n\n    return this.logger.tap({\n      msg: \"#maybeVacuum()\",\n      level: why == null ? \"trace\" : \"debug\",\n      result: why == null ? undefined : await this.#vacuum(),\n      meta: { why }\n    })\n  }\n\n  async #vacuum() {\n    this.#lastVacuumTs = Date.now()\n    const survivors: string[] = []\n\n    // NOTE: we don't no-op this whole section if #staleMs is 0, because we\n    // can still determine lockfiles are stale if their pid is gone.\n\n    const names = await this.#selfAndSiblingNames_()\n\n    for (const ea of names) {\n      const child = this.lockdir.join(ea)\n      if (gt0(this.staleMs)) {\n        const staleAt =\n          Math.round((Date.now() - (this.staleMs + secondMs)) / 1000) * 1000\n        const childMtimeMs = await child.mtimeMs({ refresh: true })\n        if (childMtimeMs != null && childMtimeMs < staleAt) {\n          this.logger.warn(\n            \"#vacuum(): child \" +\n              child.base +\n              \" is stale by \" +\n              fmtDuration(staleAt - childMtimeMs),\n            { staleMs: this.staleMs, childMtimeMs, staleAt }\n          )\n          await child.unlink()\n          continue\n        }\n      }\n      const pid = FsLock.pidFromLockfile(child)\n      if (pid == null) {\n        this.logger.error(\n          \"#vacuum(): Lockfile \" +\n            child.base +\n            \" has no pid.\" +\n            InternalErrorFlag\n        )\n        FsLock.internalErrors++\n        await child.unlink()\n        continue\n      }\n      if (!pidExists(pid)) {\n        this.logger.warn(\n          \"#vacuum(): Lockfile \" + child.base + \"'s pid is gone.\",\n          { pid }\n        )\n        await child.unlink()\n        continue\n      }\n      this.logger.debug(\n        \"#vacuum(): Lockfile \" + child.base + \" is still valid.\",\n        { pid }\n      )\n      survivors.push(ea)\n    }\n    return survivors\n  }\n\n  async #selfAndSiblingNames_() {\n    const arr = await fse.readdir(this.lockdir.nativePath, {\n      withFileTypes: true\n    })\n    return arr\n      .filter(ea => ea.isFile() && isPsLockFileOrDir(ea))\n      .map(ea => ea.name)\n  }\n\n  async selfAndSiblingNames_(arg?: VacuumArg): Promise<string[]> {\n    return (await this.#maybeVacuum(arg)) ?? this.#selfAndSiblingNames_()\n  }\n\n  async siblingNames(arg?: VacuumArg): Promise<string[]> {\n    return (await this.selfAndSiblingNames_(arg)).filter(\n      ea => ea !== this.lockfile?.base\n    )\n  }\n\n  async #iAmNext_(arg?: VacuumArg): Promise<boolean> {\n    if (this.lockfile == null) {\n      this.release()\n      return false\n    }\n    const children = await this.selfAndSiblingNames_(arg)\n    // someone can sneak into .release() while I was checking sibling names:\n    if (this.lockfile == null) {\n      this.release()\n      return false\n    }\n    if (!children.includes(this.lockfile.base)) {\n      if (isTest) {\n        FsLock.internalErrors++\n        this.logger.throw(\n          \"#iAmNext_(): missing lockfile, \" + this.lockfile + InternalErrorFlag,\n          { children, lockfile: this.lockfile }\n        )\n      } else {\n        this.release()\n        return false\n      }\n    }\n\n    const result = children[0] === this.lockfile.base\n    if (result) {\n      this.#acquired = true\n    } else {\n      // If the current owner is dead, vacuum.\n      if (arg?.vacuum !== true) {\n        const ownerPid = FsLock.pidFromBasename(children[0])\n        if (gt0(ownerPid) && !pidExists(ownerPid)) {\n          this.logger.info(\"#iAmNext_(): auto-vacuuming, owner pid is gone.\")\n          return this.#iAmNext_({ vacuum: true })\n        }\n      }\n    }\n    return this.logger.tap({\n      msg: \"#iAmNext_()\",\n      result,\n      meta: {\n        lockfiles: children\n      }\n    })\n  }\n\n  async iAmLast_(arg?: VacuumArg): Promise<boolean> {\n    return (\n      this.lockfile != null &&\n      at(await this.selfAndSiblingNames_(arg), -1) === this.lockfile.base\n    )\n  }\n\n  async iAmOnly_(arg?: VacuumArg): Promise<boolean> {\n    return (\n      this.lockfile != null &&\n      eql(await this.selfAndSiblingNames_(arg), [this.lockfile.base]) === true\n    )\n  }\n\n  readonly tryAcquire_ = oneAtATime<boolean>({\n    runLaterIfBusy: false,\n    undefinedIfBusy: true,\n    fn: async () => {\n      if (this.#acquired) return true\n      await (this.lockfile ??= this.lockdir.join(\n        fsLockFileBasename(FsLock.newUid())\n      )).touch_()\n      this.startRefreshTimer_()\n      try {\n        // something may have raced us to release() before we could check if\n        // we were next:\n        if (this.lockfile == null) return false\n        if (await this.#iAmNext_()) {\n          this.logger.debug(\"tryAcquire(): acquired\")\n          return true\n        }\n        return false\n      } catch (error) {\n        this.release()\n        this.logger.error(\"tryAcquire() failed\", error)\n        return false\n      }\n    }\n  })\n\n  startRefreshTimer_() {\n    if (this.#refreshTimer == null) {\n      if (this.staleMs > 0) {\n        const lockfileRefreshMs = Math.max(\n          // Make sure we refresh more frequently than the staleMs:\n          this.staleMs / 2,\n          // But not more than once a second:\n          isTest ? 10 : secondMs\n        )\n        this.#refreshTimer = setInterval(\n          () => this.#refreshLockfile_(),\n          lockfileRefreshMs\n        )\n      }\n    }\n  }\n\n  stopRefreshTimer() {\n    if (this.#refreshTimer != null) {\n      clearInterval(this.#refreshTimer)\n      this.#refreshTimer = undefined\n    }\n  }\n\n  async #refreshLockfile_() {\n    if (\n      this.lockfile == null ||\n      (await this.lockfile.notExists({ refresh: true }))\n    ) {\n      // This _shouldn't_ happen...\n      this.logger.warn(\"#refreshLockfile_(): null or missing lockfile\", {\n        lockfile: this.lockfile,\n        notExists: await this.lockfile?.notExists()\n      })\n      // But if it does, do the bookkeeping to make sure our state is in sync\n      // with the filesystem:\n      this.release()\n    } else {\n      try {\n        await this.lockfile.touch_()\n        this.logger.debug(\"#refreshLockfile_(): Touched lockfile\", {\n          lockfile: this.lockfile,\n          selfAndSiblings: await this.#selfAndSiblingNames_()\n        })\n      } catch (err) {\n        this.logger.warn(\"#refreshLockfile_(): failed, force-releasing.\", err)\n        this.release()\n        throw err\n      }\n    }\n  }\n\n  async acquire_({\n    releaseOnFailure = true,\n    timeoutMs = this.opts.timeoutMs\n  }: {\n    releaseOnFailure?: boolean\n    timeoutMs?: number\n  } = {}): Promise<boolean> {\n    if (this.#acquired) {\n      return true\n    }\n\n    try {\n      // Feeling lucky? (if this works, we can skip the fswatch!)\n      if (await this.tryAcquire_()) return true\n\n      await this.lockdir.watchUntil({\n        f: () => this.tryAcquire_(),\n        persistent: false,\n        recursive: false,\n        timeoutMs,\n        intervalMs: Math.round(Math.min(this.staleMs, timeoutMs) / 5)\n      })\n\n      if (!this.acquired && releaseOnFailure) {\n        this.release()\n      }\n      return this.acquired\n    } catch (error) {\n      if (releaseOnFailure) this.release()\n      this.logger.warn(\"acquire_() failed\", { error })\n      throw error\n    }\n  }\n\n  #rmLockDir() {\n    this.logger.debug(\"#rmLockDir() attempting lockdir rmdir...\", {\n      // This will fail if there is other contents (we're not calling .rmrf!)\n      success: this.lockdir.rmdirSync(\"trace\")\n    })\n  }\n\n  // sync to avoid concurrent state changes:\n  release(): boolean {\n    if (this.ended) {\n      filterInPlace(\n        FsLock.#instances,\n        ea => ea.#instanceId !== this.#instanceId\n      )\n    }\n    this.stopRefreshTimer()\n\n    // we set our state first, before we change the filesystem to make sure\n    // the lockfile refresher doesn't re-touch the lockfile:\n    this.#acquired = false\n\n    map(this.#rmLockdirLater, ea => clearTimeout(ea))\n\n    try {\n      // release is sync to avoid concurrent state changes:\n      this.lockfile?.unlinkSync(LogLevels.trace)\n      this.lockfile = undefined\n      this.logger.debug(\"#release() success\")\n      return true\n    } catch (err) {\n      this.logger.warn(\"#release() failed to delete lockfile\", err)\n      return false\n    } finally {\n      if (this.opts.dirty === true) {\n        // no need to do anything else.\n      } else if (ending() || this.ended) {\n        // Don't wait, just try now (which might fail, but who cares)\n        void this.#rmLockDir()\n      } else {\n        // Try to clean up the lockdir but only after a bit, to make sure there's\n        // no subsequent lock contention:\n        this.logger.debug(\"#release() scheduling lockdir cleanup\", {\n          ms: this.staleMs * 2\n        })\n        // unref'ed timer--it doesn't need to keep the process alive:\n        this.#rmLockdirLater = setTimeout(\n          () => this.#rmLockDir(),\n          this.staleMs * 2\n        )\n        this.#rmLockdirLater.unref()\n      }\n    }\n  }\n\n  /**\n   * @return undefined if the lock couldn't be acquired, or the result of f()\n   * @throws if f() throws\n   */\n  async withLock_<T>(f: (lock: FsLock) => T | Promise<T>): Promise<Maybe<T>> {\n    if (this.opts.skipFsLock === true) {\n      this.logger.debug(\"withLock(): skipLock is true, running f()\")\n      return f(this)\n    }\n    if (this.#acquired) {\n      // nested locks (!)\n      this.logger.debug(\"withLock() already acquired\")\n      return f(this)\n    }\n    try {\n      const acquired = await (this.opts.noopIfContested === true\n        ? this.tryAcquire_()\n        : this.acquire_())\n      this.logger.debug(\"withLock()\", { acquired })\n      if (acquired) {\n        return await thenOrTimeoutError(f(this), this.opts.timeoutMs, false)\n      } else {\n        return undefined\n      }\n    } catch (err) {\n      this.logger.warn(\"withLock_() rejected\", err)\n      throw err\n    } finally {\n      this.release()\n    }\n  }\n}\n\n/**\n * Two-phase lock. Try to make the .fslock dir, then write my id into the\n * lockdir. I only have the lock once I am the least-valued UID. Once I am\n * done with the lock, I remove my id file. If I am the last one in, I delete\n * the lockdir.\n *\n * Note that this lock is unique per call, per process--if the lock is already\n * acquired by a previous stackframe, this will deadlock.\n */\nexport async function withLock_<T>(\n  opts: FsLockOptions,\n  f: (lock?: FsLock) => T | Promise<T>\n): PromiseMaybe<T> {\n  if (opts.skipFsLock === true) return f()\n  const l = new FsLock(opts)\n  try {\n    return await l.withLock_(f)\n  } finally {\n    void l.end()\n  }\n}\n","import { Dirent } from \"fs\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ensurePrefixSuffix } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { BaseFile } from \"./BaseFile\"\nimport { SimpleFileOrString, basename } from \"./SimpleFile\"\n\nexport const PsLockExt = \".pslock\"\n\nexport function fsLockDir(f: BaseFile): BaseFile {\n  return f.sibling(\n    ensurePrefixSuffix(f.base, { prefix: \".\", suffix: PsLockExt })\n  )\n}\n\nexport function fsLockFileBasename(id: string): string {\n  // The lockfiles don't need to be hidden, but it makes isPsLockFileOrDir()\n  // much simpler.\n  return ensurePrefixSuffix(id, { prefix: \".\", suffix: PsLockExt })\n}\n\nexport function uidFromFsLockfile(\n  f: Maybe<SimpleFileOrString | Dirent>\n): Maybe<string> {\n  if (f == null || blank(toS(f))) return\n  const name = basename(f)\n  return basenameIsPsLockFileOrDir(name)\n    ? name.substring(1, name.length - PsLockExt.length)\n    : undefined\n}\n\nexport function isPsLockFileOrDir(f: SimpleFileOrString | Dirent): boolean {\n  return blank(f) ? false : basenameIsPsLockFileOrDir(basename(f))\n}\n\nfunction basenameIsPsLockFileOrDir(name: string): boolean {\n  return notBlank(name) && name.startsWith(\".\") && name.endsWith(PsLockExt)\n}\n","import fs from \"fs\"\nimport fse from \"fs-extra\"\nimport { lazy } from \"../../core/Lazy\"\nimport { or } from \"../../fe/Boolean\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { eql } from \"../../fe/Eql\"\nimport { MemoizedThunk } from \"../../fe/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { pick } from \"../../fe/Object\"\nimport { thenOrTimeout, Timeout } from \"../../fe/ThenOrTimeout\"\nimport { debounce } from \"../async/Debounce\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableInterval } from \"../async/EndableInterval\"\nimport { oneAtATime } from \"../async/OneAtATime\"\nimport { ee } from \"../event/EventEmitter\"\nimport { diff } from \"../Set\"\nimport { Settings } from \"../settings/Settings\"\nimport { sortIgnoreCase } from \"../String\"\nimport { uid } from \"../UID\"\nimport { fileSha_ } from \"./Hash\"\nimport { PosixFile } from \"./PosixFile\"\nimport { SimpleFile, toNativePath_ } from \"./SimpleFile\"\nimport { statMaybe } from \"./Stat\"\nimport { statSync } from \"./StatSync\"\n\nexport const DefaultWatchedStatFields: (keyof fs.Stats)[] = [\n  \"ino\",\n  \"size\",\n  \"mtimeMs\",\n  \"birthtimeMs\"\n]\n\nclass WatchMgr extends EndableInterval {\n  static readonly instance = new WatchMgr()\n  readonly path2watcher = new Map<string, fs.FSWatcher>()\n  readonly id2watchers = new Map<string, FsWatcher>()\n\n  private constructor() {\n    super({\n      name: \"fs.WatchMgr\",\n      callback: () => this.vacuum(),\n      intervalMs: minuteMs,\n      unref: true\n    })\n    this.onEnds.push(() => {\n      for (const [k, v] of this.path2watcher) {\n        try {\n          v.close()\n        } catch (err) {\n          this.logger.warn(\"failed to close FsWatcher for \" + k, err)\n        }\n      }\n    })\n  }\n\n  vacuumEnded() {\n    for (const [id, w] of this.id2watchers) {\n      if (w.ended) this.id2watchers.delete(id)\n    }\n  }\n\n  registeredPaths() {\n    return new Set(\n      [...this.id2watchers.values()].map(ea => ea.target.nativePath)\n    )\n  }\n\n  watchedPaths() {\n    return [...this.path2watcher.keys()]\n  }\n\n  vacuum() {\n    this.vacuumEnded()\n    const oldPaths = diff(this.watchedPaths(), this.registeredPaths())\n    // remove any now-unwatched paths:\n    for (const k of oldPaths) {\n      try {\n        this.logger.warn(\"closing orphaned FsWatcher for \" + k)\n        this.path2watcher.get(k)?.close()\n        this.path2watcher.delete(k)\n      } catch (err) {\n        this.logger.warn(\"failed to close FsWatcher for \" + k, err)\n      }\n    }\n    const unwatchedPaths = diff(this.registeredPaths(), this.watchedPaths())\n    // Are there any paths we can watch now?\n    for (const np of unwatchedPaths) {\n      this.maybeWatch(np)\n    }\n\n    this.logger.debug(\"vacuum() complete\", {\n      watchedPaths: [...this.watchedPaths()],\n      registeredPaths: [...this.registeredPaths()],\n      oldPaths: [...oldPaths],\n      unwatchedPaths: [...unwatchedPaths]\n    })\n  }\n\n  maybeWatch(nativePath: string) {\n    if (this.watchersForPath(nativePath).length === 0) {\n      throw new Error(\"no registered watchers for \" + nativePath)\n    }\n    if (this.path2watcher.get(nativePath) != null) return\n\n    // only add a FSWatcher if the file or dir exists\n    if (fs.existsSync(nativePath)) {\n      const arr = this.watchersForPath(nativePath)\n      const persistent = or(arr.map(ea => ea.args.persistent))\n      this.logger.info(\"Setting up fs.watch for \" + nativePath)\n      const fsw = fs.watch(nativePath, { persistent }, () =>\n        this.onChange(nativePath)\n      )\n      this.path2watcher.set(nativePath, fsw)\n      fsw.on(\"close\", () => {\n        this.path2watcher.delete(nativePath)\n      })\n      fsw.on(\"error\", error => {\n        this.path2watcher.delete(nativePath)\n        this.logger.warn(\"fs.watch failed\", {\n          error,\n          watchers: this.watchersForPath(nativePath)\n            ?.filter(ea => !ea.ended)\n            .map(ea => ea.name)\n        })\n      })\n    }\n  }\n\n  registerWatcher(w: FsWatcher) {\n    this.id2watchers.set(w.id, w)\n    this.maybeWatch(w.target.nativePath)\n  }\n\n  watchersForPath(nativePath: string) {\n    const result: FsWatcher[] = []\n    for (const ea of this.id2watchers.values()) {\n      if (ea.target.eql(nativePath)) {\n        result.push(ea)\n      }\n    }\n    return result\n  }\n\n  onChange(nativePath: string) {\n    for (const ea of this.id2watchers.values()) {\n      if (ea.target.eql(nativePath)) {\n        ea.debouncedCheck()\n      }\n    }\n  }\n}\n\n// TODO: use https://www.npmjs.com/package/@parcel/watcher ?\n\nexport type FsWatcherArgs = ConstructorParameters<typeof FsWatcher>[0]\n\nexport class FsWatcher extends EndableInterval {\n  readonly id = uid()\n  readonly target: PosixFile\n  #partialStatPrior: Maybe<Partial<fs.Stats>>\n  #shaPrior: Maybe<string>\n  #childrenPrior: Maybe<string[]>\n\n  constructor(\n    readonly args: {\n      target: string | SimpleFile\n      onChange: () => void\n      maxPollIntervalMs: number\n      initialDelayMs?: number\n      sha?: boolean\n      watchDebounceMs?: number\n      applyOnChangeAtSetupIfExists?: boolean\n      applyOnChangeIfTargetMissing?: boolean\n      persistent?: boolean\n    }\n  ) {\n    super({\n      name: `fs.FileWatcher(${toNativePath_(args.target)})`,\n      callback: () => this.debouncedCheck(),\n      intervalMs: args.maxPollIntervalMs,\n      rank: EndableRanks.first,\n      initialDelayMs: args.initialDelayMs\n    })\n    this.target = PosixFile.for(args.target)\n\n    const watchDebounceMs =\n      args.watchDebounceMs ?? Settings.watchDebounceMs.valueOrDefault\n    const maxPollIntervalMs = args.maxPollIntervalMs\n    if (gt0(maxPollIntervalMs) && maxPollIntervalMs <= watchDebounceMs) {\n      args.maxPollIntervalMs = watchDebounceMs + 100\n      this.setIntervalMs(args.maxPollIntervalMs)\n      this.logger.error(\n        \"Bad configuration: watchDebounceMs must be less than maxPollIntervalMs. Increasing maxPollIntervalMs.\",\n        {\n          watchDebounceMs,\n          maxPollIntervalMs,\n          newMaxPollIntervalMs: args.maxPollIntervalMs\n        }\n      )\n    }\n    this.onEnds.push(() => {\n      this.reset()\n      later(() => WatchMgr.instance.vacuum())\n    })\n    this.logger.debug(\"new FsWatcher()\", {\n      watchDebounceMs,\n      maxPollIntervalMs: args.maxPollIntervalMs\n    })\n    void this.setup()\n    WatchMgr.instance.registerWatcher(this)\n  }\n\n  get nativePath() {\n    return this.target.nativePath\n  }\n\n  readonly setup: MemoizedThunk<Promise<FsWatcher>> = lazy(async () => {\n    const s = statSync(this.nativePath)\n    this.#partialStatPrior =\n      s == null ? undefined : pick(s, ...DefaultWatchedStatFields)\n    if (true === s?.isDirectory()) await this.#checkDirChanged()\n    if (true === s?.isFile()) await this.#checkFileChanged()\n    this.logger.info(\"setup()\", {\n      stat: this.#partialStatPrior,\n      sha: this.#shaPrior,\n      children: this.#childrenPrior\n    })\n    if (s != null && true === this.args.applyOnChangeAtSetupIfExists) {\n      this.args.onChange()\n    }\n    return this\n  })\n\n  // exposed for tests\n  get partialStatPrior() {\n    return this.#partialStatPrior\n  }\n\n  get debounceMs(): number {\n    return this.debouncedCheck.timeoutMs()\n  }\n\n  readonly debouncedCheck = debounce(\n    () => this.check(),\n    this.args.watchDebounceMs ?? Settings.watchDebounceMs.valueOrDefault\n  )\n\n  forcedCheck() {\n    this.debouncedCheck.reset()\n    return this.check.force()\n  }\n\n  async #checkDirChanged() {\n    const children = await thenOrTimeout(\n      fse.readdir(this.nativePath),\n      Settings.statTimeoutMs.valueOrDefault\n    )\n    if (children === Timeout) {\n      this.logger.warn(\"Failed to read directory: timeout\", {\n        timeoutMs: Settings.statTimeoutMs.valueOrDefault\n      })\n      this.#childrenPrior = undefined\n      return false\n    }\n    const now = sortIgnoreCase(children)\n    if (!eql(this.#childrenPrior, now)) {\n      this.logger.debug(\"checkDirChanged(): children changed\", {\n        now,\n        prior: this.#childrenPrior\n      })\n      this.#childrenPrior = now\n      return true\n    } else {\n      return false\n    }\n  }\n\n  async #checkFileChanged() {\n    if (true !== this.args.sha) return true\n    const sha = await fileSha_(this.nativePath).catch(() => undefined)\n    if (sha != null && sha === this.#shaPrior) {\n      return false\n    } else {\n      this.#shaPrior = sha\n      return true\n    }\n  }\n\n  // exposed for tests\n  readonly check = oneAtATime({\n    fn: async () => {\n      if (this.ended) return\n\n      this.logger.debug(\"check(): starting\", {\n        prior: this.#partialStatPrior\n      })\n\n      const partialStatPrior = this.#partialStatPrior\n      const statNow = await statMaybe(this.nativePath)\n\n      if (statNow == null) {\n        if (\n          this.#partialStatPrior != null &&\n          true === this.args.applyOnChangeIfTargetMissing\n        ) {\n          this.target.clear()\n          this.args.onChange()\n        }\n        this.logger.debug(\"check(): missing stat, closing file watcher\")\n        this.reset()\n        // file or directory onChange shouldn't care when target is deleted\n        return\n      }\n\n      later(() => WatchMgr.instance.registerWatcher(this))\n\n      const partialStatNow = pick(statNow!, ...DefaultWatchedStatFields)\n      const statEql = eql(partialStatPrior, partialStatNow)\n\n      // .stat() on directories may not change when children are added or deleted, so we always have to check:\n      const changed = statNow.isDirectory()\n        ? await this.#checkDirChanged()\n        : statEql\n        ? false\n        : statNow.isFile()\n        ? await this.#checkFileChanged()\n        : false\n\n      // this.logger.log(result ? LogLevels.debug : LogLevels.trace, \".check()\", {\n      this.logger.debug(\".check()\", {\n        changed,\n        partialStatNow,\n        partialStatPrior,\n        isDir: statNow.isDirectory(),\n        isFile: statNow.isFile()\n      })\n      if (changed) {\n        ee().emit(\"fileChanged\", this.nativePath)\n        this.#partialStatPrior = partialStatNow\n        this.args.onChange()\n      }\n    }\n  })\n\n  reset() {\n    // no infinite loops (where w.close() calls this.close()):\n    this.#partialStatPrior = undefined\n    this.#shaPrior = undefined\n    this.#childrenPrior = undefined\n  }\n}\n","import { blank, toNotBlank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { isString, stripPrefix } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { extractInt } from \"../Number\"\nimport { ParsedFile, parsePosixPath } from \"./Path\"\nimport { SimpleFile } from \"./SimpleFile\"\n\nconst CopiesRe = [\n  // macOS, when you copy-paste-paste, you get\n  // img.jpg\n  // img copy.jpg\n  // img copy 2.jpg\n  // img copy 3.jpg\n\n  // Windows, when you copy-paste-paste, you get\n  // img.jpg\n  // img - Copy.jpg\n  // img - Copy 2.jpg\n  // img - Copy 3.jpg\n  /\\s*-?\\s*copy(?:\\s*\\d{1,3}\\s*)?$/i,\n\n  // img - Copy (2).jpg\n  // img - Copy (3).jpg\n  // img - Copy (101).jpg\n  /\\s*-?\\s*copy(?:\\s*\\(\\s*\\d{1,3}\\s*\\))$/i,\n\n  // Ubuntu when you copy-paste-paste-paste, you get\n  // img.jpg\n  // img (copy).jpg\n  // img (another copy).jpg // <-- srsly wth\n  // img (3rd copy).jpg\n  // img (4th copy).jpg\n  /\\s*\\((?:another|\\d+[a-z]{2})?\\s*copy\\)$/i,\n\n  // foobar(1).jpg\n  // foobar (1).jpg\n  // foobar ( 32 ).jpg\n  // foobar-(1).jpg\n  // foobar-( 32 ).jpg\n  /\\s*-?\\(\\s*\\d{1,4}\\s*\\)$/,\n\n  // frakkin google sidecars chop the right bit off the UUID.\n  // https://forum.photostructure.com/t/574/7\n\n  // The \"38\" means we leave a - on the end of UUIDs. That dash should make all\n  // other patterns not match, so this regex will be the only one applied.\n  /(?<=[0-9a-f-]{37}-)[0-9a-f-]+$/i,\n\n  // Variations added by EnsureNew.\n  // P432781234-1.jpg\n  // P432781234-01.jpg\n  // P432781234-001.jpg\n\n  /\\s*-\\s*\\d{1,3}$/\n]\n\nconst Copies2Re = [\n  ...CopiesRe,\n  // // img edit.jpg\n  // // img-edit.jpg\n  // // img edited.jpg\n  // // img-edited.jpg\n  /\\s*-?edit(?:ed)?$/i\n]\n\nexport const ymdIsoRE = /^(?:\\d\\d){1,2}-\\d\\d-\\d\\d$/\n\nexport function ciStablePosixPath(posixPath: string): string {\n  const path = posixPath.split(\"/\")\n  const basename = path.pop()\n  if (blank(basename)) return posixPath\n  const parsed = parsePosixPath(basename)\n  const strippedName = stripCopySuffixFromName(parsed, { aggressive: false })\n  return [...path, strippedName + parsed.ext].join(\"/\").normalize()\n}\n\n/**\n * @return the file's name, stripped of any suffixes due to copies. DOES NOT LOWER CASE OR NORMALIZE.\n */\nexport function stripCopySuffixFromName(\n  f: SimpleFile | ParsedFile | string,\n  opts: { aggressive: boolean } = { aggressive: true }\n): string {\n  return _stripCopySuffixFromName(\n    toNotBlank((f as any).name) ?? toS(f),\n    opts\n  ).normalize()\n}\n\nfunction _stripCopySuffixFromName(\n  initialName: string,\n  opts: { aggressive: boolean }\n): string {\n  // Don't touch yyyy-mm-dd:\n  if (ymdIsoRE.test(initialName)) return initialName\n  let name = initialName\n  for (const re of opts.aggressive ? Copies2Re : CopiesRe) {\n    const m = name.match(re)\n    if (gt0(m?.index)) {\n      const s = name.slice(0, m!.index).trim()\n      if (s.length > 0) name = s\n    }\n  }\n  // If you make a copy of a copy, you'll get \"image - Copy 2 - copy\". We\n  // don't want to hit the exported function, because then the file ext may be\n  // stripped multiple times.\n  return initialName === name\n    ? initialName\n    : _stripCopySuffixFromName(name, opts)\n}\n\nexport function copySuffixCountFromName(\n  f: string | SimpleFile | ParsedFile\n): Maybe<number> {\n  const name = (isString(f) ? f : f.name).toLowerCase().normalize()\n  const strip = stripCopySuffixFromName(name)\n  const stripped = stripPrefix(name.toLowerCase().normalize(), strip)\n  return map(extractInt(stripped), Math.abs)\n}\n\nconst burstRe = /(?:burst)\\s*([\\w-]{8,})\\s*$/i\n\nconst coverRe = /(?<=.{6})_cover$/i\n\n// https://en.wikipedia.org/wiki/Design_rule_for_Camera_File_system\n// IMG_E0001.JPG is an edited version of IMG_0001.JPG\nconst dscPrefixRe =\n  /^(?:(?:dsc|dscf|img|gpfr|gopro?|gf|gh|gp|mov|mvi|mvimg|p|vid)(?:[-_ ]{0,2}e?))(\\d.+)$/i\nexport function stripDSC(f: SimpleFile | string): string {\n  let name = (isString(f) ? f : f.name).trim().replace(coverRe, \"\").trim()\n  map(burstRe.exec(name), m => (name = m[1].trim()))\n  map(dscPrefixRe.exec(name), m => (name = m[1].trim()))\n  return name\n}\n","import _fs from \"fs\"\nimport _fse from \"fs-extra\"\nimport { pipeline } from \"stream/promises\"\nimport _zlib from \"zlib\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { escapeRegExp } from \"../RegExp\"\n\nexport async function gzip_(nativePath: string): Promise<string> {\n  if (nativePath.endsWith(\".gz\")) return nativePath\n  const out = nativePath + \".gz\"\n  await pipeline(\n    _fs.createReadStream(nativePath, { autoClose: true }),\n    _zlib.createGzip(),\n    _fs.createWriteStream(out, { autoClose: true })\n  )\n  await _fse.unlink(nativePath)\n  return out\n}\n\nexport function isExtOrCompressedExt(\n  actualExt: string,\n  expectedExt: string\n): boolean {\n  return matcherForExtOrCompressedExt(expectedExt)(actualExt)\n}\n\nconst extMatchers = new Map<string, (actualExt: string) => boolean>()\n\nexport function matcherForExtOrCompressedExt(\n  ext: string\n): (actualExt: string) => boolean {\n  return getOrSet(extMatchers, ext, () => {\n    const re = new RegExp(\"^\" + escapeRegExp(ext) + \"(?:\\\\.(gz|br))?$\", \"i\")\n    return (actualExt: string) => re.exec(actualExt) != null\n  })\n}\n","import crypto from \"crypto\"\nimport fs from \"fs\"\nimport { pipeline } from \"stream/promises\"\nimport { lazy } from \"../../core/Lazy\"\nimport { eql } from \"../../fe/Eql\"\nimport { stringify } from \"../../fe/JSON\"\nimport { pick } from \"../../fe/Object\"\nimport { FifoCacheAsync } from \"../FifoCacheAsync\"\nimport { HashBits } from \"../HashBits\"\nimport { mkLogger } from \"../Logger\"\nimport { shim1 } from \"../Shim1\"\nimport { stringShaToBuffer } from \"../StringHash\"\nimport { FileStats, fileStats_ } from \"./FileStats\"\nimport { SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\nimport { stat_ } from \"./Stat\"\n\nconst logger = lazy(() => mkLogger(\"fs.Hash\"))\n\nexport interface ShaMeta {\n  sha: string\n  stats: FileStats\n  elapsedMs: number\n}\n\nconst cache = lazy(\n  () =>\n    // we're not using a FileCache here, because SHAs are so expensive we want\n    // to manage cache invalidation ourselves.\n    new FifoCacheAsync<ShaMeta>({\n      name: \"fs.fileSha\",\n      maxSize: 512,\n      timeoutMs: 0, // TODO: we should be able to read any file in under a minute? What about videos?\n      clearEveryMs: 0 // no periodic clearing--no need, we're bounded to 512\n    })\n)\n\n/**\n * Consumers should not directly call this: use {@link fileSha_()} instead.\n * @return a Buffer with the first 192 bits of a SHA512 digest.\n * @throws on read error\n */\nexport const shimmedFileSha_ = shim1({\n  name: \"fs.Hash\",\n  cache,\n  impl: uncachedFileSha_\n})\n\n/**\n * Automatically invalidates SHAs whose stats have changed.\n */\nexport async function fileShaMeta_(\n  f: SimpleFileOrString,\n  { autoInvalidate = true }: { autoInvalidate?: boolean } = {}\n): Promise<ShaMeta> {\n  const nativePath = toNativePath_(f)\n  if (autoInvalidate) {\n    const prior = cache().get(nativePath)\n    if (prior != null) {\n      if (eql(prior.stats, await fileStats_(f))) {\n        logger().debug(\"fileSha_() cache matches current Stats\", {\n          nativePath,\n          prior\n        })\n        return prior\n      } else {\n        logger().debug(\"fileSha_() prior cache is invalid, re-reading SHA\", {\n          nativePath,\n          prior\n        })\n        cache().delete(nativePath) // prior sha is invalid!\n      }\n    }\n  }\n  return shimmedFileSha_(f)\n}\n\n/**\n * Automatically invalidates SHAs whose stats have changed.\n */\nexport async function fileSha_(f: SimpleFileOrString): Promise<string> {\n  return (await fileShaMeta_(f)).sha\n}\n\n/**\n * Uncached file SHA. Throws on error.\n */\nexport async function uncachedFileSha_(f: SimpleFileOrString) {\n  const start = Date.now()\n  const nativePath = toNativePath_(f)\n  return {\n    sha: await streamSha_(fs.createReadStream(nativePath)),\n    stats: pick(await stat_(nativePath), \"size\", \"mtimeMs\"),\n    elapsedMs: Date.now() - start\n  }\n}\n\nexport async function streamSha_(\n  source: NodeJS.ReadableStream,\n  transforms: NodeJS.ReadWriteStream[] = [],\n  hashAlgorithm: string = \"sha512\"\n): Promise<string> {\n  const hash = crypto.createHash(hashAlgorithm)\n  await pipeline([source, ...transforms, hash])\n  return hash\n    .digest()\n    .subarray(0, HashBits / 8)\n    .toString(\"base64\")\n}\n\n// /**\n//  * Take the SHA of a readable\n//  */\n// export async function readableShaB64(reader: Readable): Promise<string> {\n//   const hash = crypto.createHash(\"sha512\")\n//   await  pipelinePromise([reader, hash])\n//   return sliced(hash.digest()).toString(\"base64\")\n// }\n\nexport function numericSha(obj: any, msbits = 48): number {\n  return parseInt(stringShaToBuffer(stringify(obj), msbits).toString(\"hex\"), 16)\n}\n\nexport function randomSha() {\n  return crypto.randomBytes(HashBits / 8).toString(\"base64\")\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { secondMs } from \"../../fe/Date\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { toInt } from \"../../fe/Number\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { ee } from \"../event/EventEmitter\"\nimport { isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { PowerShell, pwshQuote } from \"../pwsh/PowerShell\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { BaseFile } from \"./BaseFile\"\nimport { FileCache } from \"./FileCache\"\nimport {\n  SimpleFile,\n  SimpleFileOrString,\n  isSimpleFile,\n  toNativePath_\n} from \"./SimpleFile\"\nimport { exists } from \"./Stat\"\n\nexport async function hide_(file: SimpleFile | string) {\n  if (!isWin && !isMac) return\n  const nativePath = toNativePath_(file)\n  if (!(await exists(nativePath))) return\n  if (isWin) {\n    await PowerShell.instance().execute(\n      `(Get-Item ${pwshQuote(nativePath)}).Attributes += 'Hidden'`,\n      () => undefined\n    )\n  } else if (isMac) {\n    await stdout_(\"chflags\", [\"hidden\", nativePath], {\n      timeoutMs: 10 * secondMs\n    })\n  }\n  ee().emit(\"fileChanged\", nativePath)\n  return\n}\n\nasync function isHiddenWin(file: SimpleFile) {\n  const json = await PowerShell.instance().executeJsonToA(\n    [\n      \"Get-Item -Force -LiteralPath\",\n      pwshQuote(file.nativePath),\n      \"-ErrorAction SilentlyContinue\",\n      \"| Select-Object -Property Name, Mode\"\n    ].join(\" \")\n  )\n  // See https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-5.1#examples\n  return mapOr(\n    json?.[0]?.Mode,\n    mode => [\"s\", \"h\"].some(ea => mode.includes(ea)),\n    () => false\n  )\n}\n\nasync function isHiddenMac(file: SimpleFile) {\n  try {\n    const out = await stdout_(\"stat\", [\"-f\", \"%f\", file.nativePath], {\n      timeoutMs: 10 * secondMs\n    })\n    const flags = toInt(out)\n    if (flags != null) {\n      return (flags & 0x8000) > 0 // from /usr/include/sys/stat.h\n    } else {\n      return false\n    }\n  } catch (err) {\n    return false\n  }\n}\n\nconst cache = lazy(\n  () =>\n    new FileCache<boolean>({\n      name: \"fs.hidden\",\n      maxSize: 512,\n      timeoutMs: commandTimeoutMs()\n    })\n)\n\n/**\n * Doesn't match posix-hidden (\".\"-prefixed) files--only looks for windows or\n * mac hidden metadata flags.\n */\nexport function isHidden(f: SimpleFileOrString): SyncOrAsync<boolean> {\n  // Don't check for posixHidden here-that's handled by a glob (that the user\n  // can omit!)\n  if (isLinux) return false // no way to hide on linux except with \".\"\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n  return isWin\n    ? cache().getOrSetAsync(sf.nativePath, () => isHiddenWin(sf))\n    : isMac\n    ? cache().getOrSetAsync(sf.nativePath, () => isHiddenMac(sf))\n    : false\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { isTest } from \"../NodeEnv\"\nimport { isMac } from \"../platform/Platform\"\nimport { isExcludedMountpoint } from \"../volumes/PosixVolumes\"\n\nconst DevMounts = /^\\/dev(\\/|$)/i\n\n// Mojave mounts to /private/var/vm.\n// BigSur mounts to /System/Volumes/VM, /System/Volumes/Preboot, /System/Volumes/xarts, ...\n\n// mrm@mini ~ % mount | sed -e \"s/map auto/map_auto/\" | cut -d\\  -f3\n// /\n// /dev\n// /System/Volumes/Data\n// /private/var/vm\n// /Volumes/Mojave\n// /System/Volumes/Data/home\n// /System/Volumes/Hardware\n// /Volumes/Update\n// /Volumes/Install\n// /Volumes/SSD\n// /Volumes/Big\n// /Volumes/Update\n// /Volumes/Mojave\n// /Volumes/Recovery\n// mrm@mini ~ % uname -a\n// Darwin mini 19.6.0 Darwin Kernel Version 19.6.0: Sun Nov 14 19:58:51 PST 2021; root:xnu-6153.141.50~1/RELEASE_X86_64 x86_64\n\nconst MacSystemVolumes =\n  isMac || isTest\n    ? [\n        \"/dev\",\n        \"/System/Volumes/Hardware\",\n        \"/System/Volumes/iSCPreboot\",\n        \"/System/Volumes/Preboot\",\n        \"/System/Volumes/Update\",\n        \"/System/Volumes/VM\",\n        \"/System/Volumes/xarts\",\n        \"/Volumes/Install\",\n        \"/Volumes/Recovery\"\n      ].map(ea => ea.toLowerCase())\n    : undefined\n\nconst MacPrivate = isMac || isTest ? /^\\/private\\//i : undefined\n\n// macOS installation media\nconst MacOsInstall =\n  isMac || isTest ? /^\\/Volumes\\/install macos\\b/i : undefined\n\nconst MacNotDmg =\n  isMac || isTest // support \"v1.2\", \"v1.2.3\", \"v1.2.3-beta.4\", \"v1.2.3-beta.4-pre\", ...\n    ? /^\\/Volumes\\/PhotoStructure v?[\\d\\.]{3,}/i\n    : undefined\n\nexport function isPhotoStructureDmg(mountpoint: string): boolean {\n  return MacNotDmg?.exec(toS(mountpoint)) != null\n}\n\nexport function isIgnorableMountpoint(mountpoint: string): boolean {\n  return whyIgnorableMountpoint(mountpoint) != null\n}\n\nexport function whyIgnorableMountpoint(mountpoint: string): Maybe<string> {\n  return blank(mountpoint)\n    ? \"blank\"\n    : isExcludedMountpoint(mountpoint)\n    ? \"excluded\"\n    : DevMounts.test(mountpoint)\n    ? \"/dev\"\n    : MacSystemVolumes?.includes(mountpoint.toLowerCase()) === true\n    ? \"macOS system volume\"\n    : MacOsInstall?.test(mountpoint) === true\n    ? \"macOS installer volume\"\n    : MacPrivate?.test(mountpoint) === true\n    ? \"macOS private volume\"\n    : isPhotoStructureDmg(mountpoint)\n    ? \"PhotoStructure dmg\"\n    : undefined\n}\n","export const JpegExts = [\"jpg\", \"jpeg\", \"jpe\"] as const\n","import { Transform, TransformCallback } from \"stream\"\nimport { newlineRe } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\n\nexport class LineReader extends Transform {\n  private _prior: string = \"\"\n\n  constructor() {\n    super({ objectMode: false, autoDestroy: true })\n  }\n\n  _transform(chunk: any, _encoding: BufferEncoding, done: TransformCallback) {\n    const lines = (this._prior + toS(chunk)).split(newlineRe())\n    const last = lines.pop()\n    // if the last line is \"\", we ended with a newline, and we don't have a prior.\n    this._prior = last ?? \"\"\n    let delay = false\n    for (const ea of lines) {\n      // .push returns true if additional chunks of data may continue to be pushed; false otherwise\n      delay ||= !this.push(ea)\n    }\n    if (delay) setTimeout(done, 1)\n    else done()\n  }\n\n  _flush(done: TransformCallback): void {\n    if (this._prior !== \"\") this.push(this._prior)\n    this._prior = \"\"\n    done()\n  }\n}\n","import _path from \"path\"\nimport { SimpleFile, toNativePath_ } from \"./SimpleFile\"\nimport { writeTextfile_ } from \"./WriteFile\"\n\nexport function mkNoMedia_(dir: SimpleFile | string) {\n  return writeTextfile_(\n    _path.join(toNativePath_(dir), \".NoMedia\"),\n    `This directory's contents are excluded from PhotoStructure libraries.`,\n    ``,\n    `See https://photostructure.com/nomedia/ for details.`\n  )\n}\n","import _path, { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { Halt } from \"../Halt\"\nimport { mkLogger } from \"../Logger\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { BaseFile } from \"./BaseFile\"\nimport {\n  CACHEDIR_TAG,\n  isCachedirTagDirectory,\n  isCachedirTagFile\n} from \"./CachedirTag\"\nimport { FileCache } from \"./FileCache\"\nimport { readdir, readdirCached } from \"./Readdir\"\nimport { SimpleDirent } from \"./SimpleDirent\"\nimport {\n  SimpleFileOrString,\n  isSimpleFile,\n  someSelfOrAncestor\n} from \"./SimpleFile\"\nimport { exists } from \"./Stat\"\n\nconst logger = lazy(() => mkLogger(\"fs.hasNoMedia()\"))\n\n// We're making the dot optional (although that isn't part of the spec)\nconst nomediaRe = /^\\.?NoMedia$/i\n\nconst NoMedia = \"NoMedia\"\n\nfunction variants(s: string) {\n  return [s, s.toLowerCase(), s.toUpperCase()]\n}\n\nconst NoMediaNames = Object.freeze([\n  ...variants(\".\" + NoMedia),\n  ...variants(NoMedia)\n])\n\nexport function isNoMediaName(basename: string): boolean {\n  return nomediaRe.exec(basename) != null\n}\n\nconst noMediaDirsCache = lazy(\n  () => new FileCache<boolean>({ name: \"fs.noMediaDirsCache\" })\n)\n\nexport async function hasNoMediaRecursive(\n  f: Maybe<SimpleFileOrString>\n): PromiseMaybe<boolean> {\n  if (f == null) return false\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n  return someSelfOrAncestor(sf, hasNoMedia)\n}\n\nexport async function isNoMedia(f: SimpleFileOrString): Promise<boolean> {\n  if (f == null) return false\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n  return isNoMediaName(sf.base) || (await isCachedirTagFile(sf))\n}\n\nexport async function hasNoMedia(f: SimpleFileOrString): Promise<boolean> {\n  if (f == null) return false\n  const sf = isSimpleFile(f) ? f : BaseFile.for(f)\n\n  if (sf.base === CACHEDIR_TAG) {\n    return logger().tap({\n      msg: sf.nativePath + \" is a CACHEDIR.TAG file\",\n      // return FALSE if the header doesn't exist?\n      result: await isCachedirTagFile(sf)\n    })\n  }\n\n  // Are we an actual NoMedia file?\n\n  if (isNoMediaName(sf.base)) {\n    // this doesn't need to be cached, it's almost a no-op:\n    return logger().tap({ msg: sf + \" basename is NoMedia\", result: true })\n  }\n\n  if (await sf.isDirectory()) {\n    return noMediaDirsCache().getOrSetAsync(sf.nativePath, () =>\n      dirHasNoMediaChild(sf.nativePath)\n    )\n  } else {\n    return false\n  }\n}\n\nasync function dirHasNoMediaChild(nativePath: string): Promise<boolean> {\n  const halt = new Halt()\n\n  // If we can only hit the readdir cache, that'd be great:\n  const cached: Maybe<SimpleDirent[]> = readdirCached(nativePath)\n  if (cached != null) {\n    return someIsNoMedia(nativePath, cached, halt)\n  }\n\n  // Otherwise, race:\n  const result: boolean = await Promise.race([\n    _dirHasNoMediaChild(nativePath, halt),\n    _readdirHasNoMediaChild(nativePath, halt)\n  ])\n  halt.halt() // < stop the loser\n  return result\n}\n\nasync function _dirHasNoMediaChild(\n  nativePath: string,\n  halt?: Halt\n): Promise<boolean> {\n  for (const ea of NoMediaNames) {\n    if (halt?.halted === true) {\n      return null as any\n    }\n    if (await exists(_path.join(nativePath, ea), LogLevels.trace)) {\n      return logger().tap({\n        msg: nativePath + \" is a directory and has a noMedia child, \" + ea,\n        result: true\n      })\n    }\n  }\n  if (halt?.halted === true) return null as any\n  return isCachedirTagDirectory(nativePath)\n}\n\nasync function someIsNoMedia(\n  dir: string,\n  arr: SimpleDirent[],\n  halt?: Halt\n): Promise<boolean> {\n  for (const ea of arr) {\n    if (halt?.halted === true) return null as any\n    if (isNoMediaName(ea.basename)) {\n      return logger().tap({\n        msg: dir + \" has a noMedia child, \" + ea.basename,\n        result: true\n      })\n    }\n    if (ea.basename === CACHEDIR_TAG) {\n      if (await isCachedirTagFile(join(dir, ea.basename))) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nasync function _readdirHasNoMediaChild(\n  nativePath: string,\n  halt?: Halt\n): Promise<boolean> {\n  const arr = await readdir(nativePath)\n  return arr == null ? false : someIsNoMedia(nativePath, arr, halt)\n}\n","import _fse from \"fs-extra\"\nimport _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ensurePrefix, splitLast } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { greatestBy } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport {\n  ensureSuffix,\n  equalsIgnoreCase,\n  spliceCapture,\n  stripPrefix\n} from \"../String\"\nimport { isRetriableError } from \"../error/ErrorTypes\"\nimport { isPosix, isWin } from \"../platform/Platform\"\nimport { native2posix, posix2native } from \"./PosixNative\"\nimport {\n  SimpleFile,\n  SimpleFileOrString,\n  isSimpleFile,\n  toNativePath_\n} from \"./SimpleFile\"\nimport { isReadableDirectory } from \"./Stat\"\nimport { isReadWriteableDirectorySync } from \"./StatSync\"\n\nexport const logger = lazy(() => mkLogger(\"fs.Path\"))\n\nexport function isHiddenBasename(f: SimpleFileOrString): boolean {\n  const base = isSimpleFile(f) ? f.base : _path.basename(_path.resolve(f))\n  return base.startsWith(\".\")\n}\n\nexport function containsHiddenPathname(f: SimpleFileOrString): boolean {\n  return toPathnames(f).some(isHiddenBasename)\n}\n\nexport function isNotHiddenPosixPath(f: SimpleFileOrString): boolean {\n  return toPathnames(f).every(ea => !isHiddenBasename(ea))\n}\n\nconst driveRe = /^(?<drive>[A-Z]:)(?<path>[\\\\/].*)?$/i\n\nfunction upcaseDriveLetters(nativePath: string): string {\n  const g = driveRe.exec(nativePath)?.groups\n  return g == null\n    ? nativePath\n    : g.drive.toUpperCase() + toS(g.path ?? _path.sep)\n}\n\nexport function resolveSimpleFile(f: SimpleFileOrString) {\n  return isSimpleFile(f) ? f.nativePath : resolve(f.toString())\n}\n\nexport function resolve(...paths: string[]): string {\n  if (blank(paths.join(\"\"))) {\n    throw new Error(\"resolve(): empty paths\")\n  }\n  return _path.resolve(upcaseDriveLetters(paths[0]), ...paths.slice(1))\n}\n\n/**\n * Reject if any of the paths are blank\n */\nexport function resolveMaybe(...paths: Maybe<string>[]): Maybe<string> {\n  return paths.some(blank) ? undefined : resolve(...(paths as string[]))\n}\n\nexport interface ParsedFile {\n  /** \"/home/user/dir\" of \"/home/user/dir/file.txt\" */\n  readonly dir: string\n  /** \"file.txt\" of \"/home/user/dir/file.txt\" */\n  readonly base: string\n  /** \"file\" of \"/home/user/dir/file.txt\" */\n  readonly name: string\n  /** \".txt\" or \".log.gz\" of \"/home/user/dir/file.txt\" */\n  readonly ext: string\n}\n\nexport function parsePosixPath(posixPath: string): ParsedFile {\n  return parseNativePath(posix2native(posixPath))\n}\n\n/** @return \".txt\" or \".log.gz\" of \"/home/user/dir/file.txt\" */\nexport function extname(nativePath: string): string {\n  return parseNativePath(nativePath).ext\n}\n\n/**\n * @return parent directory of `fileish`\n */\nexport function dirname(fileish: SimpleFileOrString): string {\n  return _path.dirname(toNativePath_(fileish))\n}\n\nexport function extMatches(pathlike1: Maybe<string>, pathlike2: Maybe<string>) {\n  if (blank(pathlike1) || blank(pathlike2)) return false\n  return equalsIgnoreCase(\n    _path.parse(pathlike1).ext,\n    _path.parse(pathlike2).ext\n  )\n}\n\nconst CompressedExtRE = /(\\.(?:gz|z|7z|xz|bz2))$/i\n\n/**\n * Supports hidden files and extracting \".log.gz\" as the `ext` for \"file.log.gz\"\n */\nexport function parseNativePath(nativePath: string): ParsedFile {\n  const r = spliceCapture(nativePath, CompressedExtRE)\n  const p = _path.parse(r?.uncaptured ?? nativePath)\n  return {\n    ...p,\n    ...(r == null\n      ? {}\n      : {\n          ext: p.ext + r.captured,\n          base: p.base + r.captured\n        })\n  }\n}\n\n// BEWARE!\n\n// > require(\"path\").parse(\"C:\")\n// { root: 'C:', dir: 'C:', base: '', ext: '', name: '' }\n\n/**\n * Return the name (NOT the path!) of the parent directory\n */\nexport function parentBasename(nativePath: SimpleFileOrString) {\n  const p = _path.parse(toNativePath_(nativePath))\n  return p.root === p.dir ? p.root : splitLast(p.dir, _path.sep)\n}\n\nexport function grandParentBasename(nativePath: SimpleFileOrString) {\n  return parentBasename(_path.parse(toNativePath_(nativePath)).dir)\n}\n\nexport function containedByNativePath(args: {\n  ancestor: Maybe<SimpleFileOrString>\n  descendant: Maybe<SimpleFileOrString>\n  acceptSelf?: boolean // false\n}): boolean {\n  try {\n    if (args.descendant == null || args.ancestor == null) return false\n    const ancestor = toNativePath_(args.ancestor)\n    const descendant = toNativePath_(args.descendant)\n    if (blank(ancestor) || blank(descendant)) return false\n    const acceptSelf = args.acceptSelf ?? false\n    if (ancestor === descendant) return acceptSelf\n    return descendant.startsWith(ensureSuffix(ancestor, _path.sep))\n  } catch (error) {\n    logger().warn(\"containedByNativePath() failed (returning false)\", {\n      args,\n      error\n    })\n    return false\n  }\n}\n\nexport function toPathnames(nativePath: SimpleFileOrString): string[] {\n  return isSimpleFile(nativePath)\n    ? nativePath.pathnames\n    : nativePath.split(_path.sep).filter(ea => ea != null && ea !== \"\")\n}\n\nexport function pathIsRoot(f: Maybe<SimpleFileOrString>): boolean {\n  return notBlank(f) && toPathnames(f).length === (isWin ? 1 : 0)\n}\n\nexport function pathDepth(f: Maybe<SimpleFileOrString>): Maybe<number> {\n  return blank(f) ? undefined : toPathnames(f).length - (isWin ? 1 : 0)\n}\n\nexport type NativePathed = Pick<SimpleFile, \"nativePath\">\n\nexport function posixPathFrom(\n  parent: string | NativePathed,\n  child: string | NativePathed\n): string {\n  const p = toNativePath_(parent)\n  const c = toNativePath_(child)\n  if (blank(p) || blank(c))\n    throw new Error(\"posixPathFrom empty args \" + stringify({ parent, child }))\n\n  return p === c\n    ? \"\"\n    : // The ensureSuffix handles windows drive letters properly:\n      stripPrefix(\n        native2posix(c).normalize(),\n        ensureSuffix(native2posix(p), \"/\").normalize()\n      ).normalize() // < macOS requires us to normalize\n}\n\n/**\n * @return the native path of `p`. If the full path is longer than\n * `maxLength`, only include the root and parent directory names until the\n * path is at most `maxLength` characters long.\n */\nexport function ellipsizePath({\n  p,\n  maxLength\n}: {\n  p: SimpleFileOrString\n  maxLength: number\n}) {\n  const np = toNativePath_(p)\n  if (np.length <= maxLength) return np\n  const pathnames = toPathnames(p)\n  const base = pathnames.pop()!\n  const lhs = []\n  const rhs = [base]\n  while (pathnames.length > 0) {\n    if (lhs.length < rhs.length) {\n      // pop off something for lhs:\n      lhs.push(pathnames.shift()!)\n      if (joinNativePath([...lhs, ...rhs]).length >= maxLength) {\n        pathnames.unshift(lhs.pop()!)\n        break\n      }\n    } else {\n      rhs.unshift(pathnames.pop()!)\n      if (joinNativePath([...lhs, ...rhs]).length >= maxLength) {\n        pathnames.push(rhs.shift()!)\n        break\n      }\n    }\n  }\n\n  if (pathnames.length > 0) {\n    lhs.push(\"…\")\n  }\n  return joinNativePath([...lhs, ...rhs])\n}\n\nexport function posixPathFromParent(nativePath: string): string {\n  return toPathnames(nativePath).slice(-2).join(\"/\")\n}\n\nexport function posixPathFromGrandparent(nativePath: string): string {\n  return toPathnames(nativePath).slice(-3).join(\"/\")\n}\n\nexport function addNameSuffix(basename_: string, suffix: string): string {\n  const p = parseNativePath(basename_)\n  return `${p.base}${suffix}${p.ext}`\n}\n\nexport function isUNC(nativePath: string) {\n  return nativePath.startsWith(\"\\\\\\\\\")\n}\n\nexport function isAbsolute(nativePath: string) {\n  return (\n    (isPosix && nativePath.startsWith(\"/\")) ||\n    (isWin && (isUNC(nativePath) || nativePath.match(driveRe) != null))\n  )\n}\n\nexport async function mkdirp_(nativePath: string) {\n  try {\n    // Don't try to make the mountpoint (or, say, \"c:\")\n    if (await isReadableDirectory(nativePath)) return\n    await _fse.mkdirp(nativePath)\n  } catch (err) {\n    // concurrent mkdirp() calls spuriously throw EACCES or EEXIST\n    if (await isReadableDirectory(nativePath)) return\n    else throw err\n  }\n}\n\nexport function mkdirpSync_(\n  nativePath: string,\n  options?: _fse.EnsureDirOptions\n) {\n  try {\n    // Don't try to make the mountpoint (or, say, \"c:\")\n    if (isReadWriteableDirectorySync(nativePath)) return\n    _fse.mkdirpSync(nativePath, options)\n  } catch (err) {\n    // concurrent mkdirp() calls spuriously throw EACCES\n    if (isReadWriteableDirectorySync(nativePath)) return\n    else throw err\n  }\n}\n\nexport async function move_(srcNativePath: string, destNativePath: string) {\n  return retryOnReject(\n    () => _fse.move(srcNativePath, destNativePath, { overwrite: true }),\n    {\n      errorIsRetriable: isRetriableError,\n      maxRetries: 5, // windows may throw EBUSY\n      retryDelay: 250\n    }\n  )\n}\n\nexport function splitNativePath(nativePath: SimpleFileOrString): string[] {\n  const result = toNativePath_(nativePath)\n  // DON'T USE compactBlanks: (correct) tests will fail, because a path can\n  // validly be \" \"\n  return result.split(_path.sep).filter(ea => ea != null && ea !== \"\")\n}\n\nexport function joinNativePath(filePaths: string[]): string {\n  return ensurePrefix(\n    compactBlanks(filePaths).join(_path.sep),\n    isWin ? \"\" : _path.sep\n  )\n}\n\nexport function joinNativePathMaybe(...paths: Maybe<string>[]): Maybe<string> {\n  return paths.some(blank) ? undefined : joinNativePath(paths as string[])\n}\n\nexport function bestMountpointForDir(\n  dir: SimpleFileOrString,\n  mountpoints: SimpleFileOrString[]\n): Maybe<SimpleFileOrString> {\n  return greatestBy(mountpoints, ea =>\n    // containedByNativePath handles blank and null properly:\n    containedByNativePath({\n      ancestor: ea,\n      descendant: dir,\n      acceptSelf: true\n    })\n      ? [toNativePath_(ea).length]\n      : undefined\n  )\n}\n\nexport function posixPathIncludesPathElement(\n  posixPath: string,\n  name: string\n): boolean {\n  return posixPath.split(\"/\").includes(name)\n}\n","import _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks, uniq } from \"../../fe/Array\"\nimport { toNotBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gte } from \"../../fe/Number\"\nimport { ensureSuffix } from \"../../fe/String\"\nimport { KiB } from \"../../fe/Units\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { env } from \"../env/Env\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { isLinux, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { isStatRX } from \"./Access\"\nimport { actualPath } from \"./ActualPath\"\nimport { BaseFile } from \"./BaseFile\"\nimport { statMaybe } from \"./Stat\"\n\nconst logger = lazy(() => mkLogger(\"fs.PathTo\"))\n\n// This file is instead of depending on the \"which\" npm package, which doesn't\n// have fallbacks, nor min filesize, nor access validation\n\n// dcraw_emu.exe is the smallest binary, and it's 26K.\nconst MinBinarySize = KiB\n\nexport async function isRXFile(\n  nativePath: string,\n  minSize = MinBinarySize\n): Promise<boolean> {\n  const stat = await statMaybe(nativePath, \"trace\")\n  return (\n    stat != null && stat.isFile() && gte(stat.size, minSize) && isStatRX(stat)\n  )\n}\n\nfunction fallbackPathDirectories() {\n  if (isWin) {\n    const systemRoot = toNotBlank(getEnv(\"SystemRoot\")) ?? \"C:\\\\Windows\"\n    return [\n      systemRoot,\n      _path.join(systemRoot, \"System32\"),\n      _path.join(systemRoot, \"System32\", \"Wbem\") // < wmic is hiding in Wbem\n    ]\n  } else {\n    return [\n      ...(isDocker()\n        ? [\"/opt/photostructure/bin\", \"/opt/photostructure/tools/bin\"]\n        : []),\n      \"/usr/local/bin\",\n      \"/usr/bin\",\n      \"/bin\",\n      \"/usr/sbin\",\n      \"/sbin\"\n    ]\n  }\n}\n\nfunction pathDirectories() {\n  const paths = toS(env().PATH).split(_path.delimiter)\n  return uniq(compactBlanks([...paths, ...fallbackPathDirectories()]))\n}\n\nexport async function pathTo({\n  tool,\n  alternativePath,\n  paths\n}: {\n  tool: string\n  alternativePath?: string\n  paths?: string[]\n}): PromiseMaybe<string> {\n  const dirs = uniq(compactBlanks([...pathDirectories(), ...toA(paths)]))\n  for (const ea of uniq(compactBlanks([tool, alternativePath]))) {\n    const base = isWin ? ensureSuffix(ea, \".exe\") : ea\n\n    for (const dir of dirs) {\n      const nativePath = _path.join(dir, base)\n      if (await isRXFile(nativePath)) {\n        // only run actualPath for case-insensitive OSes:\n        return isLinux ? nativePath : actualPath(nativePath)\n      }\n    }\n  }\n  logger().warn(\"Failed to find tool\", { tool, dirs })\n  return\n}\n\nexport async function pathIfExists(f: Maybe<BaseFile>) {\n  const s = await f?.stat({ logLevel: \"debug\" })\n  return s != null && s.isFile() && s.size > MinBinarySize && isStatRX(s)\n    ? f!.nativePath\n    : undefined\n}\n\nexport const wmic = () => \"wmic\"\nexport const fsutil = () => \"fsutil\"\nexport const nslookupWin = () => \"nslookup\"\nexport const pingWin = () => \"ping\"\nexport const arpWin = () => \"arp\"\n\n// export const wmic = lazy(() => pathTo(\"wmic\", [\"OS\", \"GET\", \"localdatetime\"], [\"System32\", \"wbem\"]) )\n// export const fsutil = lazy(() => pathTo(\"fsutil\", []))\n// export const nslookupWin = lazy(() => pathTo(\"nslookup\", [\"127.0.0.1\"]))\n// export const pingWin = lazy(() => pathTo(\"ping\", [\"-n\", \"1\", \"localhost\"]))\n// export const arpWin = lazy(() => pathTo(\"arp\", [\"-a\"]))\n","import fs from \"fs\"\nimport * as _fse from \"fs-extra\"\nimport fsp from \"fs/promises\"\nimport _path from \"path\"\nimport stream from \"stream\"\nimport { pipeline } from \"stream/promises\"\nimport util from \"util\"\nimport { MemoizedThunk, lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { blank, notBlank, notBlankOr } from \"../../fe/Blank\"\nimport { fmtYMDHMS, minuteMs, secondMs } from \"../../fe/Date\"\nimport { errorCode } from \"../../fe/Error\"\nimport { fmtDuration } from \"../../fe/FmtDuration\"\nimport { map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe, MaybePromiseMaybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { approximates, clamp, gte } from \"../../fe/Number\"\nimport { StringValued, omit } from \"../../fe/Object\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport {\n  PS_LIBRARY_SCHEME,\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n} from \"../../fe/URI\"\nimport { MiB } from \"../../fe/Units\"\nimport { toS } from \"../../fe/toS\"\nimport { contextFilter, max } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport {\n  countChars,\n  ensurePrefix,\n  equalsIgnoreCase,\n  isString,\n  stripPrefix\n} from \"../String\"\nimport { thenMap, thenMapOr } from \"../async/Promise\"\nimport { time } from \"../async/PromiseTimer\"\nimport { untilTrue } from \"../async/until\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { libraryDir, originalsDir } from \"../dir/LibraryDir\"\nimport { DoNotSendErrorFlag, NonRetriableErrorFlag } from \"../error/ErrorFlags\"\nimport { isNonRetriableError } from \"../error/ErrorTypes\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\nimport { Radix58 } from \"../math/Radix\"\nimport { isMac, isWin } from \"../platform/Platform\"\nimport { PullProgressObserver } from \"../progress/PullProgressObserver\"\nimport { PowerShell, pwshQuote } from \"../pwsh/PowerShell\"\nimport { Settings } from \"../settings/Settings\"\nimport { defaultSidecarExt, existingSidecars } from \"../tags/Sidecars\"\nimport { nativePath2uri, uri2nativePath } from \"../uri/FileURI\"\nimport { URI, toURI } from \"../uri/URI\"\nimport { uriIsEquivalent } from \"../uri/UriNormalization\"\nimport { mountpoints } from \"../volumes/Mountpoints\"\nimport { MinIoRate, commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { bestMountpoint } from \"../volumes/Volumes\"\nimport { BaseFile, RefreshArgs } from \"./BaseFile\"\nimport { DirectoryEntry } from \"./DirectoryEntry\"\nimport { FileCache } from \"./FileCache\"\nimport { isJsonExt, isSidecarExt } from \"./FileExt\"\nimport { withLock_ } from \"./FsLock\"\nimport { hide_, isHidden } from \"./Hidden\"\nimport { mkNoMedia_ } from \"./MkNoMedia\"\nimport { hasNoMedia, hasNoMediaRecursive } from \"./NoMedia\"\nimport { containedByNativePath, move_ } from \"./Path\"\nimport { SimpleFile, SimpleFileOrString, toNativePath_ } from \"./SimpleFile\"\nimport { ByteCounter } from \"./Streams\"\nimport { touch_ } from \"./Touch\"\nimport { WipPrefix, WipTimeoutMs } from \"./WIP\"\nimport { WriteOptions } from \"./WriteOptions\"\nimport { zpipe_ } from \"./zcat\"\n\nconst cache = lazy(() => new FileCache<PosixFile>({ name: \"fs.PosixFile\" }))\n\nfunction sortFiles(paths: PosixFile[]) {\n  return sortBy(paths, ea => ea.nativePath)\n}\n\nexport function uniquePrefixes(paths: PosixFile[]) {\n  return contextFilter(\n    sortFiles(paths),\n    // This also does a uniq():\n    (ea, _idx, last) => last == null || !ea.isDescendantOf(last)\n  )\n}\n\nexport const NoOp = Symbol(\"no-op\")\n\n/**\n * Ensures a given path is only \"posix-ized\" once, and holds promises for more\n * expensive information about the file, like inode stats, SHA1, and EXIF tags.\n */\nexport class PosixFile extends BaseFile implements SimpleFile {\n  protected readonly pflog = lazy(() =>\n    mkLogger(\"fs.PosixFile(\" + this.nativePath + \")\")\n  )\n\n  protected constructor(\n    readonly nativePath: string,\n    dirent?: DirectoryEntry\n  ) {\n    super(nativePath, dirent)\n  }\n\n  [util.inspect.custom]() {\n    return this.toJSON()\n  }\n\n  static forDirectoryEntry(de: DirectoryEntry) {\n    return PosixFile.for(de.nativePath, de)\n  }\n\n  static forMaybe(nativePathOrFile: Maybe<SimpleFileOrString>) {\n    return notBlank(nativePathOrFile)\n      ? PosixFile.for(nativePathOrFile)\n      : undefined\n  }\n\n  static for(\n    nativePathOrFile: SimpleFileOrString,\n    dirent?: DirectoryEntry\n  ): PosixFile {\n    if (nativePathOrFile instanceof PosixFile) {\n      return nativePathOrFile\n    }\n\n    if (blank(nativePathOrFile)) {\n      throw new Error(\"PosixFile.for(): empty nativePathOrFile\")\n    }\n\n    if (isString(nativePathOrFile)) {\n      // avoid expensive resolve() call:\n      const prior = cache().get(nativePathOrFile)\n      if (prior != null) return prior\n    }\n    const resolved = toNativePath_(nativePathOrFile)\n    const result = new PosixFile(resolved, dirent)\n    if (isString(nativePathOrFile)) {\n      cache().set(nativePathOrFile, result)\n    }\n    cache().set(resolved, result)\n    return result\n  }\n\n  static forPosix(posixPath: string): PosixFile {\n    return PosixFile.for(posixPath.replace(/\\//g, _path.sep))\n  }\n\n  static forUri(uri: string, mountpoint?: string): PromiseMaybe<PosixFile> {\n    return thenMap(uri2nativePath(uri, mountpoint), nativePath =>\n      PosixFile.for(nativePath)\n    )\n  }\n\n  for(nativePath: string, dirent?: DirectoryEntry): this {\n    return PosixFile.for(nativePath, dirent) as this\n  }\n\n  forDirectoryEntry(de: DirectoryEntry): this {\n    return PosixFile.for(de.nativePath, de) as this\n  }\n\n  clear({ emit } = { emit: true }): this {\n    super.clear({ emit })\n    this.uriObject_.unset()\n    this.uri_.unset()\n    this.normalizedPathUri_.unset()\n    this.fileuri.unset()\n    this.etag.unset()\n    this.existingSidecars.unset()\n    this.unlock.unset()\n    return this\n  }\n\n  readonly uriObject_ = lazy(() => nativePath2uri(this.nativePath))\n  readonly uri_ = lazy(async () => (await this.uriObject_()).toString())\n  uri(): PromiseMaybe<string> {\n    return this.trap(\"uri\", () => this.uri_())\n  }\n  readonly fileuri = lazy(() => URI.file(this.nativePath).toString())\n\n  readonly normalizedPathUri_: MemoizedThunk<PromiseMaybe<string>> = lazy(\n    async () => (await this.normalize()).uri_()\n  )\n\n  async mountpoint(): PromiseMaybe<PosixFile> {\n    if (\n      containedByNativePath({\n        // HEY FUTURE ME: referencing libraryDirPosixFile creates a deploop _don't do that_\n        ancestor: libraryDir(),\n        descendant: this,\n        acceptSelf: true\n      }) ||\n      containedByNativePath({\n        ancestor: originalsDir(),\n        descendant: this,\n        acceptSelf: true\n      })\n    ) {\n      return\n    }\n    if (isWin && this.nativePath.startsWith(\"\\\\\\\\\")) {\n      return PosixFile.for(this.nativePath.split(\"\\\\\").slice(0, 4).join(\"\\\\\"))\n    }\n    return map(bestMountpoint(this.nativePath, await mountpoints()), ea =>\n      PosixFile.for(ea)\n    )\n  }\n\n  /**\n   * @return true iff this file or directory doesn't exist, and the mountpoint\n   * is currently mounted, or some parent directory exists.\n   */\n  async isDeletedUri(_uri?: URI | string): PromiseMaybe<boolean> {\n    if (await this.exists({ refresh: true })) return false // NOT deleted\n\n    if (this.isUNC) {\n      return this.pflog().tap({\n        result: await this.isDeleted(),\n        msg: \"isDeletedUri(): is UNC, delegating to isDeleted()\"\n      })\n    }\n\n    const uri = map(\n      notBlankOr(_uri, () => this.uri_() as any),\n      toURI\n    )\n\n    if (uri == null) {\n      return this.pflog().tap({\n        result: await this.isDeleted(),\n        level: \"warn\",\n        msg: \"isDeletedUri(): missing URI, delegating to isDeleted()\"\n      })\n    }\n\n    if (uri.isRootPath()) {\n      // don't descend any farther, we're at (least a prior) mountpoint\n      return this.pflog().tap({\n        result: await this.notExists(),\n        msg: \"isDeletedUri(): uri isRootPath\",\n        meta: { uri }\n      })\n    }\n\n    // Is the uri relevant to this path?\n\n    if (toS(uri.pathBase).normalize() !== this.base.normalize()) {\n      return this.pflog().tap({\n        level: \"warn\",\n        result: await this.notExists(),\n        msg: \"isDeleted(): uri isn't correct, returning notExists()\",\n        meta: { uri, expectedBase: this.base, uriBase: uri.pathBase }\n      })\n    }\n\n    // C:\\goo\\bar\\file.jpg\n    // /opt/library/file.jpg\n\n    // NOTE: we're counting slashes in the _URI_, not the native path, because\n    // that goes to the mountpoint.\n\n    // pslib:/dir/file.jpg\n    // psfile:/UUID/dir/file.jpg\n    // psnet:/server/share/dir/file.jpg\n\n    const schemeDiscount =\n      uri.scheme === PS_LIBRARY_SCHEME\n        ? 1\n        : uri.scheme === PS_LOCAL_FILE_SCHEME\n        ? 2\n        : uri.scheme === PS_NETWORK_FILESYSTEM_SCHEME\n        ? 3\n        : 1\n\n    const maxDepth = countChars(uri.path, \"/\") - schemeDiscount\n\n    // we don't need to log.tap this result: BaseFile will already log it.\n    return this.isDeleted(maxDepth)\n  }\n\n  readonly etag = lazy(() =>\n    thenMap(this.stat(), s =>\n      [s.size, s.mtime.getTime()].map(n => Radix58.encode(n)).join(\"-\")\n    )\n  )\n\n  async httpHeaders(): Promise<StringValued> {\n    return {\n      ETag: await this.etag(),\n      \"Last-Modified\": await this.lastModifiedUtc()\n    }\n  }\n\n  hide(): MaybePromiseMaybe<this> {\n    if (!isWin && !isMac) return\n    return this.trap(\"hide\", async () => {\n      await hide_(this)\n      return this\n    })\n  }\n\n  /**\n   * @throws on error\n   */\n  async mkNoMedia_() {\n    return mkNoMedia_(this)\n  }\n\n  /**\n   * @return this, not the .NoMedia file, so the method can be chained.\n   */\n\n  async mkNoMedia(): PromiseMaybe<this> {\n    try {\n      await this.mkNoMedia_()\n      return this\n    } catch (err) {\n      this.pflog().warn(\"Could not add .NoMedia file to \" + this, err)\n      return undefined\n    }\n  }\n\n  hasNoMedia(): PromiseMaybe<boolean> {\n    return hasNoMedia(this)\n  }\n\n  hasNoMediaRecursive(): PromiseMaybe<boolean> {\n    return hasNoMediaRecursive(this)\n  }\n\n  async hidden() {\n    return isHidden(this)\n  }\n\n  readonly isMountpoint = lazy(\n    async () =>\n      (await this.isDirectory()) &&\n      (await thenMapOr(\n        mountpoints(),\n        arr => arr.includes(this.nativePath),\n        () => false\n      ))\n  )\n\n  isSidecar() {\n    return isSidecarExt(this.ext)\n  }\n\n  /**\n   * @return all JSON and non-JSON sidecars\n   */\n  readonly existingSidecars = lazy(() => existingSidecars(this))\n\n  /**\n   * Returns non-JSON sidecars that ExifTool can read (.xmp, .mie, ...)\n   *\n   * @return oldest sidecars first (so newest sidecar metadata wins, as they are\n   * layered on top of eachother)\n   */\n  async existingExifSidecars() {\n    return (await this.existingSidecars()).filter(ea => !isJsonExt(ea))\n  }\n\n  /**\n   * Should only be used for writes\n   */\n  async sidecar() {\n    const existing = await this.existingExifSidecars()\n    return (\n      existing.find(ea => equalsIgnoreCase(ea.ext, defaultSidecarExt())) ??\n      this.defaultSidecar()\n    )\n  }\n\n  defaultSidecar() {\n    return this.sibling(this.base + defaultSidecarExt())\n  }\n\n  async jsonSidecars() {\n    return (await this.existingSidecars()).filter(ea => isJsonExt(ea))\n  }\n\n  async sidecareStats(opts?: RefreshArgs): Promise<fs.Stats[]> {\n    const refresh = opts?.refresh ?? false\n    if (refresh) this.existingSidecars.unset()\n    return compact(\n      await Promise.all(\n        [this, ...(await this.existingSidecars())].map(ea => ea.stat(opts))\n      )\n    )\n  }\n\n  async thisOrSidecareMaxMtimeMs(opts?: RefreshArgs) {\n    const ss = await this.sidecareStats(opts)\n    return max(ss.map(ea => ea.mtimeMs))\n  }\n\n  /**\n   * @throws so when readables encounter errors in the midst of reading, they\n   * can propagate the error to the caller\n   */\n  async writeStream_(\n    readable: stream.Readable,\n    options?: WriteOptions & { onProgress?: (bytes: number) => any }\n  ): PromiseMaybe<this> {\n    await pipeline(\n      compact([\n        readable,\n        map(options?.onProgress, f => new ByteCounter(f)),\n        _fse.createWriteStream(this.nativePath, {\n          autoClose: true,\n          ...omit(options, \"onProgress\")\n        })\n      ])\n    )\n    readable.destroy()\n    return this.clearThisAndParent()\n  }\n\n  /**\n   * @param f_ must throw an error on failure, or we'll wait for a minute for\n   * the command to finish (!!)\n   */\n  async applyIfEmpty_({\n    fn_,\n    minSizeBytes = 0,\n    returnUndefinedIfNotEmpty = false,\n    timeoutMs = 2 * minuteMs,\n    skipWip = false,\n    skipFsLock = false,\n    retries = 2,\n    dirty = false\n  }: {\n    fn_: (destination: PosixFile) => Promise<any>\n    minSizeBytes?: number\n    returnUndefinedIfNotEmpty?: boolean\n    timeoutMs?: number\n    skipWip?: boolean\n    skipFsLock?: boolean\n    retries?: number\n    dirty?: boolean\n  }): PromiseMaybe<this> {\n    return retryOnReject(\n      async () => {\n        const initiallyNotEmpty =\n          await this.clear().isNonEmptyFile(minSizeBytes)\n\n        if (!initiallyNotEmpty) {\n          if (skipWip && skipFsLock) {\n            return fn_(this)\n          } else {\n            await this.applyWip_({\n              fn_: async dest => {\n                if (await this.clear().isNonEmptyFile(minSizeBytes)) {\n                  // someone got a file lock before us and did the work!\n                  return NoOp\n                } else {\n                  return fn_(dest)\n                }\n              },\n              skipFsLock,\n              minSizeBytes,\n              timeoutMs,\n              dirty\n            })\n          }\n        }\n\n        return initiallyNotEmpty && returnUndefinedIfNotEmpty\n          ? undefined\n          : this.utimes()\n      },\n      {\n        maxRetries: retries,\n        timeoutMs: timeoutMs * 2,\n        retryDelay: 3 * secondMs,\n        errorIsRetriable: e => errorCode(e) === \"EBUSY\"\n      }\n    )\n  }\n\n  /**\n   * @returns a hidden file .wip file\n   */\n  wip(): this {\n    return this.sibling(ensurePrefix(this.base, WipPrefix))\n  }\n\n  isWip(): boolean {\n    return this.name.startsWith(WipPrefix)\n  }\n\n  async wipIsRecent(staleMs = WipTimeoutMs): Promise<boolean> {\n    return (\n      (await this.wip().isFile()) &&\n      gte(await this.wip().clear().maxStatMs(), Date.now() - staleMs)\n    )\n  }\n\n  unwipBase() {\n    return stripPrefix(this.base, WipPrefix)\n  }\n\n  /**\n   * If this is a WIP, rename to the \"source\" file (by removing the WipToken\n   * (\".WIP-\") prefix\n   */\n  unwip_(): Promise<this> {\n    return this.mv_(this.sibling(this.unwipBase()))\n  }\n\n  async applyWip_<T>({\n    fn_,\n    minSizeBytes = 0,\n    skipFsLock = false,\n    timeoutMs,\n    dirty = false\n  }: {\n    fn_: (destination: PosixFile) => Promise<T>\n    timeoutMs: number\n    skipFsLock: boolean\n    minSizeBytes?: number\n    dirty?: boolean\n  }): PromiseMaybe<T> {\n    await this.parent().mkdirp_()\n    return withLock_(\n      {\n        file: this,\n        skipFsLock,\n        timeoutMs,\n        dirty\n      },\n      async () => {\n        const wip = this.wip()\n        try {\n          // NOTE: don't touch() WIP file, ExifTool's no-clobber policy will be\n          // grumpy!\n          await wip.unlink(\"trace\") // < should be a no-op\n\n          const result = await thenOrTimeoutError(fn_(wip), timeoutMs)\n\n          if ((result as any) === NoOp) return result\n\n          const isNonEmpty = await untilTrue(\n            () => wip.clear().isNonEmptyFile(minSizeBytes),\n            {\n              timeoutMs: ShortCommandTimeoutMs,\n              intervalMs: 250 // short interval because it's just a stat()\n            }\n          )\n\n          if (isNonEmpty) {\n            await wip.mv_(this) // throws errors if issues\n            return result\n          } else {\n            throw new Error(\n              this +\n                \"applyWip(): still empty after waiting \" +\n                fmtDuration(ShortCommandTimeoutMs)\n            )\n          }\n        } catch (err) {\n          this.pflog().warn(\"applyWip() threw error\", err)\n          await wip.unlink(\"trace\")\n          await this.unlink(\"trace\")\n          throw err\n        }\n      }\n    )\n  }\n\n  /**\n   * Atomically overwrite `destOrDestDir.join(paths)` with the contents of\n   * `this`. Use `.ensureNew` on destOrDestDir if you want to prevent\n   * overwriting.\n   *\n   * If the result of joining `destOrDestDir` and `paths` results in an\n   * extensionless name, the path will be assumed to be a containing directory,\n   * and this name will be appended to the result.\n   *\n   * @throws if there are any errors\n   */\n  copyFile_(destFileOrDir: this): Promise<this> {\n    return time(\"fs.copyFile\", async () => {\n      const dest = this.dest(destFileOrDir)\n      if (this.nativePath === dest.nativePath) {\n        return this\n      }\n\n      if (Settings.onlyNativeFileCopy.valueOrDefault !== true)\n        try {\n          return await this.#copyFile_(dest)\n        } catch (error) {\n          if (isNonRetriableError(error) === true) {\n            return this.pflog().throw(\n              \"_copyFile failed, but error wasn't retriable\",\n              {\n                error,\n                dest: dest.nativePath,\n                src: this.nativePath\n              }\n            )\n          }\n\n          this.pflog().warn(\"_copyFile failed, trying _nativeCopyFile\", {\n            dest: dest.nativePath,\n            src: this.nativePath,\n            error\n          })\n        }\n\n      return await this.#nativeCopyFile_(dest)\n    })\n  }\n\n  async maybeVerifySameOrThrow_(dest: this) {\n    const start = Date.now()\n    if (Settings.verifyFileCopies.valueOrDefault) {\n      // we don't need to refresh this.sha().\n      if (\n        await untilTrue(() => this.matchesContent(dest), {\n          timeoutMs: commandTimeoutMs(),\n          intervalMs: secondMs\n        })\n      ) {\n        // YAY COPY WORKED\n      } else {\n        this.pflog().throw(\n          \"copyFile_() failed (contents did not match after copy)\",\n          { dest, elapsedMs: Date.now() - start }\n        )\n      }\n    }\n  }\n\n  async #copyFile_(dest: this): Promise<this> {\n    let obs: Maybe<PullProgressObserver>\n    let result = dest\n    const copyDest = dest.wip()\n    try {\n      const s = await this.stat_()\n      if (s == null) {\n        return this.pflog().throw(\n          \"Can't copy missing files\" + NonRetriableErrorFlag\n        )\n      }\n      if (s.size > 0) {\n        // skip copy for empty files\n        if (Settings.verifyFileCopies.valueOrDefault) {\n          if ((await this.sha()) == null) {\n            return this.pflog().throw(\n              \"Can't copy file without SHA\" + NonRetriableErrorFlag\n            )\n          }\n        }\n        const mkdir = await copyDest.parent().mkdirp()\n        if (mkdir == null)\n          return this.pflog().throw(\"Cannot mkdirp \" + dest.dir)\n\n        await fsp.copyFile(\n          this.nativePath,\n          copyDest.nativePath,\n          // COPYFILE_FICLONE: copy operation will attempt to create a\n          // copy-on-write reflink. If the underlying platform does not\n          // support copy-on-write, then a fallback copy mechanism is used.\n          fs.constants.COPYFILE_FICLONE\n        )\n        if (s.size > 5 * MiB) {\n          obs = new PullProgressObserver(\n            {\n              op: \"Copying\",\n              path: this.nativePath,\n              dest: dest.nativePath\n            } as any,\n            s.size,\n            () => copyDest.size({ refresh: true })\n          )\n        }\n        const sizeMatches = await untilTrue(\n          async () =>\n            approximates(s.size, await copyDest.size({ refresh: true })),\n          // it was already supposed to be done, so waiting a minute is really\n          // just to wait for sync (which might take ages!):\n          { intervalMs: secondMs, timeoutMs: minuteMs }\n        )\n        if (!sizeMatches) {\n          return this.pflog().throw(\"copyFile_() failed\", {\n            expectedSize: s.size,\n            actualSize: await copyDest.size({ refresh: true })\n          })\n        }\n\n        await this.maybeVerifySameOrThrow_(copyDest)\n\n        result = dest.eql(copyDest)\n          ? dest\n          : await copyDest.mv_(dest, LogLevels.trace)\n      }\n      try {\n        // this doesn't need to fail the whole operation:\n        await touch_({\n          file: result,\n          btimeMs: s.birthtimeMs,\n          mtimeMs: s.mtimeMs,\n          ensureFile: false\n        })\n      } catch (err) {\n        this.pflog().warn(\n          `copyFile_(${result.nativePath}): couldn't set utimes to match source: ${err}`\n        )\n      }\n      try {\n        // this doesn't need to fail the whole operation:\n        await _fse.chmod(result.nativePath, s.mode)\n      } catch (err) {\n        this.pflog().warn(\n          `copyFile_(${result.nativePath}): couldn't chmod to ${s.mode}: ${err}`\n        )\n      }\n      this.pflog().debug(`copyFile_(${result.nativePath}): success`)\n      return result\n    } catch (err) {\n      this.pflog().warn(`copyFile_(${copyDest?.nativePath}) failed: ${err}`)\n      await copyDest.unlink()\n      if (!copyDest.eql(dest)) {\n        await dest.unlink()\n      }\n      throw err\n    } finally {\n      result?.clearThisAndParent()\n      void map(obs, ea => ea.end())\n    }\n  }\n\n  async zCopyFile_(dest: this, options?: { start?: number; end?: number }) {\n    await dest.parent().mkdirp_()\n    await zpipe_(\n      this.nativePath,\n      fs.createWriteStream(dest.nativePath, { autoClose: true }),\n      options\n    )\n    return dest.clear()\n  }\n\n  async copyTimeoutMs(): Promise<number> {\n    return clamp(\n      ShortCommandTimeoutMs, // don't go shorter than this!\n      10 * minuteMs,\n      ((await this.size()) ?? 0) * MinIoRate\n    )\n  }\n\n  async #nativeCopyFile_(dest: this): Promise<this> {\n    let obs: Maybe<PullProgressObserver>\n    const wipDest = dest.wip()\n\n    try {\n      if (null == (await dest.parent().mkdirp())) {\n        return this.pflog().throw(\"Can't mkdir destination directory\", {\n          src: this.nativePath,\n          dest: dest.nativePath\n        })\n      }\n      const s = await this.stat_()\n      const size = s?.size\n      if (s == null || size == null) {\n        return this.pflog().throw(\"Can't copy missing files\")\n      }\n      if (size > 5 * MiB) {\n        obs = new PullProgressObserver(\n          {\n            op: \"Copying\",\n            path: this.nativePath,\n            dest: wipDest.nativePath\n          } as any,\n          size,\n          () => dest.clear().size()\n        )\n      }\n\n      if (isWin) {\n        await PowerShell.instance().execute(\n          `Copy-Item -LiteralPath ${pwshQuote(\n            this.nativePath\n          )} -Destination ${pwshQuote(wipDest.nativePath)}`,\n          ea => ea\n        )\n      } else if (isMac) {\n        await stdout_(\"ditto\", [this.nativePath, wipDest.nativePath], {\n          timeoutMs: await this.copyTimeoutMs()\n        })\n      } else {\n        // -a means archive, or -pPR on macOS or -dR --preserve=all on debian\n        // -f means force. If existing dest cannot be opened, remove it and try again.\n        await stdout_(\"cp\", [\"-a\", \"-f\", this.nativePath, wipDest.nativePath], {\n          timeoutMs: await this.copyTimeoutMs()\n        })\n      }\n      await this.maybeVerifySameOrThrow_(wipDest)\n      await wipDest.mv_(dest, LogLevels.trace)\n      await touch_({ file: dest, reference: this, ensureFile: false })\n      return dest.clearThisAndParent()\n    } catch (error) {\n      await wipDest.unlink()\n      return this.pflog().throw(\n        \"_nativeCopyFile(\" + dest + \") failed\" + DoNotSendErrorFlag,\n        { error }\n      )\n    } finally {\n      void map(obs, ea => ea.end())\n    }\n  }\n\n  dest(destOrDestDir: this): this {\n    const destOrDir = destOrDestDir.clear() // < bust cache\n    return (notBlank(this.ext) && blank(destOrDir.ext)) ||\n      destOrDir.isDirectorySync()\n      ? destOrDir.join(this.base)\n      : destOrDir\n  }\n\n  /**\n   * @throws if errors\n   */\n  async renameYMDHMS_(\n    args: { subdir?: string; ts?: number } = {}\n  ): Promise<this> {\n    if (await this.clear().notExists()) {\n      throw new Error(\"Cannot rename: \" + this + \" doesn't exist.\")\n    }\n    const ts = fmtYMDHMS(args.ts ?? (await this.mtime()) ?? Date.now())\n    const destDir = mapOr(\n      args.subdir,\n      ea => this.parent().join(ea),\n      () => this.parent()\n    )\n    return this.mv_(destDir.join(this.name + \"-\" + ts + this.ext))\n  }\n\n  /**\n   * @throws on error\n   */\n  async renameWithNameSuffix_(nameSuffix: string): PromiseMaybe<this> {\n    return thenMap(\n      this.withNameSuffix(nameSuffix).ensureNew_({ emptyIsNew: true }),\n      dest => dest.unlink(\"debug\").then(() => this.mv_(dest))\n    )\n  }\n\n  /**\n   * If `this` exists and has new contents for this current directory, rename it\n   * to a new file with the given base (and possibly a count, to ensure new\n   * overwriting).\n   *\n   * If `this` is empty, or already has the same contents as another file in\n   * this directory, return that file and unlink this file.\n   */\n  async saveIfNewOrDelete(base: string): PromiseMaybe<this> {\n    if (await this.clear().isEmpty()) {\n      // don't complain about removing a missing file:\n      await this.unlink(\"trace\")\n      return\n    }\n    const prior = await this.siblingWithSameContents()\n    if (prior != null) {\n      await this.unlink()\n      return prior\n    }\n    const dest = await this.sibling(base).ensureNew_()\n    return this.mv_(dest)\n  }\n\n  /**\n   * SITS: Mac sometimes locks files when they've been copied. No, I couldn't\n   * find out why, but if I own the file, I can chflags the file back to being\n   * unlocked.\n   *\n   * This should only be applied to newly-copied files, and not for files that\n   * PhotoStructure didn't create.\n   */\n  readonly unlock = lazy(() =>\n    !isMac\n      ? undefined\n      : stdout_(\"chflags\", [\"nouchg\", this.nativePath], {\n          quiet: true,\n          timeoutMs: ShortCommandTimeoutMs\n        })\n  )\n\n  /**\n   * Move this to `destFileOrDir`. If dest exists, it will be overwritten.\n   *\n   * @return the file that was copied into\n   * @throws error if there are issues\n   */\n  async mv_(\n    destFileOrDir: this | string,\n    level: LogLevel = LogLevels.debug\n  ): Promise<this> {\n    const dest = isString(destFileOrDir)\n      ? this.parent().join(destFileOrDir)\n      : this.dest(destFileOrDir)\n    if (this.nativePath === dest.nativePath) {\n      this.pflog().warn(\"mv(): no-op\", new Error(\"internal error\"))\n      return this\n    }\n    if (this.dir !== dest.dir) {\n      await dest.parent().mkdirp_()\n    }\n    this.pflog().log(level, \"mv_()\", { dest })\n    try {\n      // windows can throw EBUSY:\n      await move_(this.nativePath, dest.nativePath)\n    } catch (err) {\n      this.pflog().warn(\"mv() failed. Calling unlock() and retrying...\", err)\n      await Promise.all([this.unlock(), dest.unlock()])\n      await move_(this.nativePath, dest.nativePath)\n    }\n    if (this.dir !== dest.dir) this.clearThisAndParent()\n    return dest.clearThisAndParent()\n  }\n\n  /**\n   * @return true if the provided URI is equivalent to this\n   */\n  async equalsUri_(uri: string | URI): Promise<boolean> {\n    return uriIsEquivalent(await this.uriObject_(), uri)\n  }\n}\n","import _path from \"path\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { equalsIgnoreCase } from \"../String\"\n\nexport function posix2native(posixPath: string, hostname?: string): string {\n  if (blank(posixPath)) return posixPath\n  if (_path.sep === _path.posix.sep) return posixPath\n  const prefix = notBlank(hostname)\n    ? _path.sep + _path.sep + hostname + _path.sep\n    : \"\"\n  const split = posixPath.split(_path.posix.sep)\n  if (equalsIgnoreCase(split[0], hostname)) split.unshift()\n  return prefix + split.join(_path.sep)\n}\n\nexport function native2posix(nativePath: string): string {\n  if (blank(nativePath)) return nativePath\n  if (_path.sep === _path.posix.sep) return nativePath\n  return _path.posix.sep === _path.sep\n    ? nativePath\n    : nativePath.split(_path.sep).join(_path.posix.sep)\n}\n","import _path from \"path\"\nimport process from \"process\"\nimport { lazy, MemoizedThunk } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { uniqInPlace } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { isElectron, isMac } from \"../platform/Platform\"\nimport { ancestors, hasChildren } from \"./Ancestors\"\nimport { isPhotoStructureDmg } from \"./IgnorableMountpoint\"\n\nexport const execDir = lazy(() => _path.dirname(process.execPath))\n\nfunction pathTo(...child: string[]): MemoizedThunk<string> {\n  return lazy<string>(() => _path.join(ProjectPath.Root() as string, ...child))\n}\n\nexport const ProjectPath = {\n  Root: lazy(() => {\n    const projectDirs = [\"data\", \"public\", \"views\"]\n    const dirs: string[] = []\n    if (isDocker()) {\n      dirs.push(\"/opt/photostructure\")\n    }\n    if (isElectron) {\n      dirs.push(\n        _path.join(execDir(), \"resources\"), // win electron\n        _path.join(execDir(), \"..\", \"Resources\") // mac electron\n      )\n    }\n    dirs.push(...compactBlanks([execDir(), process.cwd(), __dirname]))\n    uniqInPlace(dirs)\n    for (const dir of dirs) {\n      if (hasChildren(dir, projectDirs)) return dir\n      // don't go too far up:\n      for (const parent of ancestors(dir).slice(0, 4)) {\n        if (hasChildren(parent, projectDirs)) return parent\n        const npx = _path.join(dir, \"node_modules\", \"photostructure\")\n        if (hasChildren(npx, projectDirs)) return npx\n      }\n    }\n    return mkLogger(\"fs.ProjectPath\").throw(\n      \"Failed to find project root. Looked in \" + dirs\n    )\n  }),\n  Bin: pathTo(\"bin\"), // only present in docker and node\n  Data: pathTo(\"data\"),\n  ICC: pathTo(\"data\", \"icc\"),\n  Migrations: pathTo(\"data\", \"migrations\"),\n  Public: pathTo(\"public\"),\n  Tools: pathTo(\"tools\"),\n  Views: pathTo(\"views\"),\n  isInDMG: function (projectPathRoot?: string) {\n    if (!isMac) return false\n\n    // If PhotoStructure.app has a sibling called .background with a\n    // nobg-background.tiff, we're still in the DMG, but that will break if we\n    // change the DMG background. We could also check to see that we live in an\n    // Applications directory, but that's also not guaranteed.\n    return isPhotoStructureDmg(projectPathRoot ?? ProjectPath.Root())\n  }\n}\n","import * as fs from \"fs\"\nimport { readFile } from \"fs-extra\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { mkLogger } from \"../Logger\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\n\nconst logger = lazy(() => mkLogger(\"fs.ReadFile\"))\n\nexport async function readFileMaybe(\n  nativePath: string,\n  errLogLevel: LogLevel = LogLevels.info\n): PromiseMaybe<Buffer> {\n  try {\n    return await readFile(nativePath)\n  } catch (err) {\n    logger().log(errLogLevel, \".readFileMaybe(\" + nativePath + \")\", err)\n    return\n  }\n}\n\nexport function readFileSync(nativePath: string): Maybe<Buffer> {\n  try {\n    return fs.readFileSync(nativePath)\n  } catch {\n    //\n  }\n  return\n}\n\nexport function intFromFileSync(nativePath: string): Maybe<number> {\n  return logger().tap({\n    msg: \"intFromFileSync()\",\n    result: toInt(readFileSync(nativePath)?.toString(), {\n      defaultValue: undefined\n    }),\n    meta: { nativePath }\n  })\n}\n","import { close, open, read, stat } from \"fs-extra\"\nimport { mapGte0 } from \"../Number\"\n\n/**\n * @param position where to begin reading from in the file\n * @param length the number of bytes to read\n * @throws if fs.open or fs.read throws\n */\nexport async function readFilePart_({\n  nativePath,\n  position = 0,\n  length\n}: {\n  nativePath: string\n  position?: number\n  length?: number\n}) {\n  let fd = -1\n  try {\n    // only stat() if the length is not provided:\n    const bufLen = length ?? (await stat(nativePath)).size - position\n    const b = Buffer.alloc(bufLen)\n    fd = await open(nativePath, \"r\")\n    return await read(fd, b, 0, bufLen, position)\n  } finally {\n    mapGte0(fd, close)\n  }\n}\n","import { readFile } from \"fs-extra\"\nimport { splitCompactLines } from \"./CRLF\"\n\nexport async function readLines_(nativePath: string): Promise<string[]> {\n  return splitCompactLines(await readFile(nativePath))\n}\n","import { Readable } from \"stream\"\n\nexport class ReadableBuffer extends Readable {\n  constructor(buffer: Buffer | string) {\n    super()\n    this.push(buffer)\n    this.push(null)\n  }\n}\n","import fsp from \"fs/promises\"\nimport { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toGt0 } from \"../../fe/Number\"\nimport {\n  Timeout,\n  thenOrTimeout,\n  thenOrTimeoutAt,\n  toNotTimeout\n} from \"../../fe/ThenOrTimeout\"\nimport { FifoSet } from \"../FifoSet\"\nimport { mkLogger } from \"../Logger\"\nimport { onTimeout } from \"../async/TimeoutHandler\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Settings } from \"../settings/Settings\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\nimport { FileCache } from \"./FileCache\"\nimport { SimpleDirent } from \"./SimpleDirent\"\nimport { statTimeoutMs } from \"./StatTimeout\"\n\nexport interface CachedReaddir {\n  ts: number\n  path: string\n  result: SimpleDirent[]\n}\n\nexport const ReadDirCacheName = \"readdircache\"\n\nexport const readdirCacheDir = lazy(() =>\n  join(Settings.cacheDir.valueOrDefault, ReadDirCacheName)\n)\n\nconst logger = lazy(() => mkLogger(\"fs.Readdir\"))\n\nexport async function clearReaddirCaches() {\n  try {\n    await fsp.rm(readdirCacheDir(), { force: true, recursive: true })\n  } catch (error) {\n    logger().warn(\"clearReaddirCaches(): failed\", { error })\n  }\n}\n\nconst path2cache = lazy(\n  () =>\n    new FileCache<SimpleDirent[]>({\n      name: \"fs.readdir\",\n      maxSize: 256,\n      timeoutMs: commandTimeoutMs(),\n      clearEveryMs: minuteMs\n    })\n)\n\nexport function clearCachedReaddir(nativePath: string) {\n  if (!blank(nativePath)) {\n    path2cache.prior()?.delete(nativePath)\n  }\n}\n\nlater(() => {\n  Settings.cacheDir.watchLater(() => {\n    readdirCacheDir.clear()\n    void path2cache.prior()?.clear()\n    slowDirs.prior()?.clear()\n  })\n  ee().on(\"clearCache\", () => {\n    slowDirs.prior()?.clear()\n    // path2cache is a FileCache--they're already watching for \"clearCache\" and fileChanged.\n    return clearReaddirCaches()\n  })\n  ee().on(\"fileChanged\", nativePath =>\n    blank(nativePath) ? clearReaddirCaches() : clearCachedReaddir(nativePath)\n  )\n})\n\n// Only exposed for tests\nexport const slowDirs = lazy(() => new FifoSet<string>(256))\n\nexport async function isSlowDir(nativePath: string) {\n  if (blank(nativePath)) return false\n  if (slowDirs().has(nativePath)) return true\n  if (path2cache().has(nativePath)) {\n    slowDirs().add(nativePath)\n    return true\n  }\n  return false\n}\n\nexport function setSlowDir(nativePath: string) {\n  clearCachedReaddir(nativePath)\n  slowDirs().add(nativePath)\n}\n\nexport async function isCachedDir(nativePath: string) {\n  return path2cache().get(nativePath) != null\n}\n\nexport async function childDirectories_(nativePath: string): Promise<string[]> {\n  return (await readdir_(nativePath))\n    .filter(ea => ea.isDirectory)\n    .map(ea => join(nativePath, ea.basename))\n}\n\nexport async function readdir(\n  nativePath: string\n): PromiseMaybe<SimpleDirent[]> {\n  try {\n    return await (gt0(Settings.readdirCacheMs.valueOrDefault)\n      ? readdir_(nativePath)\n      : readdirUncached_(nativePath))\n  } catch (err) {\n    logger().warn(\"readdir() failed for \" + nativePath, err)\n    return\n  }\n}\n\n/**\n * @throws if readdir() fails.\n */\nexport async function readdir_(nativePath: string): Promise<SimpleDirent[]> {\n  return logger().tap({\n    level: \"trace\",\n    msg: \"readdir_(\" + nativePath + \")\",\n    result: await path2cache().getOrSetAsync(nativePath, () =>\n      _readdir_(nativePath)\n    )\n  })\n}\n\nexport function readdirCached(nativePath: string): Maybe<SimpleDirent[]> {\n  return path2cache().get(nativePath)\n}\n\nasync function _readdir_(nativePath: string): Promise<SimpleDirent[]> {\n  const ts = Date.now()\n  const timeoutAt = ts + statTimeoutMs() * 2\n\n  const p = readdirUncached_(nativePath)\n\n  // If readdir() completes quickly, don't bother with .json caching (which is\n  // expensive and generates a bunch of GC)\n\n  const quickResult = await thenOrTimeout(\n    p,\n    toGt0(Settings.fsCacheSlowMs.valueOrDefault) ?? statTimeoutMs()\n  )\n\n  if (quickResult === Timeout) {\n    onTimeout({ soft: false })\n  }\n\n  if (\n    quickResult !== Timeout &&\n    quickResult.length < Settings.readdirSizeCacheThresh.valueOrDefault\n  ) {\n    return quickResult\n  }\n\n  // Dang, we're dealing with a slow or very large directory.\n  logger().info(\"readdir(): slow or large dir\", { nativePath })\n  slowDirs().add(nativePath)\n\n  const result =\n    toNotTimeout(quickResult) ?? (await thenOrTimeoutAt(p, timeoutAt))\n\n  if (result === Timeout) {\n    return logger().throw(\"readdir() timeout\", { nativePath, doNotSend: true })\n  }\n\n  return result\n}\n\n/**\n * NOTE: CALLER SHOULD WRAP WITH A TIMEOUT!\n */\nexport async function readdirUncached_(\n  nativePath: string\n): Promise<SimpleDirent[]> {\n  const r = await fsp.readdir(nativePath, { withFileTypes: true })\n  return sortBy(\n    // this strips off the node 20 added \"path\" field:\n    r.map(ea => ({\n      basename: ea.name,\n      isFile: ea.isFile(),\n      isDirectory: ea.isDirectory()\n    })),\n    ea => [\n      ea.isFile, // < order files last\n      ea.basename.toLowerCase(), // < case insensitive sort (ish, but good enough here)\n      ea.basename // < for determinism with colliding FILE.txt and file.txt\n    ]\n  )\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { isBoolean } from \"../../fe/Boolean\"\n\nexport interface SimpleDirent {\n  /**  isFile */\n  isFile: boolean\n  /**  isDirectory */\n  isDirectory: boolean\n  /** full base name */\n  basename: string\n}\nexport function isSimpleDirent(d: any): d is SimpleDirent {\n  return (\n    d != null &&\n    notBlank(d.basename) &&\n    isBoolean(d.isFile) &&\n    isBoolean(d.isDirectory)\n  )\n}\n","import _fs from \"fs\"\nimport _path from \"path\"\nimport { blank } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe, MaybePromiseMaybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { equalsIgnoreCase, isString, stripPrefix } from \"../String\"\nimport { isWin } from \"../platform/Platform\"\nimport { NativePathed, resolve } from \"./Path\"\nimport { isSimpleDirent } from \"./SimpleDirent\"\n\n// BEST TYPE NAME EVAR\nexport type SimpleFileOrString = SimpleFile | string\n\nexport interface SimpleFile {\n  /**\n   * Absolute path\n   */\n  readonly nativePath: string\n  /**\n   * Absolute path elements\n   */\n  readonly pathnames: string[]\n  /**\n   * The file name including extension (if any) such as 'index.html'\n   */\n  readonly base: string\n  /**\n   * The file extension (if any) such as '.html'\n   */\n  readonly ext: string\n  /**\n   * The file name without extension (if any) such as 'index'\n   */\n  readonly name: string\n  /**\n   * The nativePath of the parent directory\n   */\n  readonly dir: string\n\n  /**\n   * True iff this directory has no parent\n   */\n  readonly isRoot: boolean\n\n  isFile(): SyncOrAsync<boolean>\n  isDirectory(): SyncOrAsync<boolean>\n  isFileSync(): boolean\n  isDirectorySync(): boolean\n\n  // No isSymbolicLink, as this method is only valid when using fs.lstat():\n  // https://nodejs.org/dist/latest-v14.x/docs/api/fs.html#fs_stats_issymboliclink\n\n  children(): MaybePromiseMaybe<this[]>\n  childNames(): MaybePromiseMaybe<string[]>\n  parent(): SyncOrAsync<Maybe<this>>\n\n  size(): SyncOrAsync<Maybe<number>>\n  mtimeMs(): SyncOrAsync<Maybe<number>>\n}\n\nexport function isSimpleFile(object: any): object is SimpleFile {\n  return (\n    object != null &&\n    // HEY FUTURE ME! Don't `instanceof DirectoryEntry` or BaseFile here: that\n    // causes a deploop\n    typeof object === \"object\" &&\n    !Array.isArray(object) &&\n    typeof object.nativePath === \"string\" &&\n    typeof object.base === \"string\" &&\n    typeof object.ext === \"string\" &&\n    typeof object.base === \"string\" &&\n    typeof object.dir === \"string\" &&\n    typeof object.isFile === \"function\"\n  ) // meh good enough\n}\n\nexport function toNativePath_(s: string | NativePathed) {\n  if (s == null) {\n    throw new Error(\"toNativePath(null)\")\n  }\n  if (blank(s)) {\n    throw new Error(\"toNativePath(blank)\")\n  }\n  if (isString(s)) {\n    // only resolve strings--if it has a nativePath, it's already resolved:\n    return resolve(s)\n  }\n  if (blank(s.nativePath)) {\n    throw new Error(`toNativePath(${stringify(s)})`)\n  }\n  return s.nativePath\n}\n\nexport function basename(s: SimpleFileOrString | _fs.Dirent) {\n  return s instanceof _fs.Dirent\n    ? s.name\n    : isSimpleFile(s)\n    ? s.base\n    : _path.basename(toNativePath_(s))\n}\n\nexport function dirname(s: SimpleFileOrString) {\n  return isSimpleFile(s) ? s.dir : _path.dirname(toNativePath_(s))\n}\n\nconst winDriveRE = /^[a-z]:$/i\n\nexport function rootDir(s: SimpleFileOrString): Maybe<string> {\n  // TODO: handle UNC paths\n  if (isSimpleFile(s)) {\n    const arr = s.pathnames\n    return isWin && arr[0].match(winDriveRE) != null ? arr[1] : arr[0]\n  } else {\n    const str = stripPrefix(s, \"/\") // ignore the initial \"/\"\n    const i = str.indexOf(_path.sep)\n    return i > 0 ? str.slice(1, i) : undefined\n  }\n}\n\nexport function findFileIndex(\n  needle: SimpleFile,\n  haystack: SimpleFile[]\n): number {\n  for (let i = 0; i < haystack.length; i++) {\n    if (haystack[i].nativePath === needle.nativePath) return i\n  }\n  for (let i = 0; i < haystack.length; i++) {\n    if (equalsIgnoreCase(haystack[i].nativePath, needle.nativePath)) return i\n  }\n  return -1\n}\n\nexport function isFileSync(s: SimpleFileOrString) {\n  if (blank(s)) return false\n\n  if (s instanceof _fs.Dirent) return s.isFile()\n\n  for (const ea of [s, (s as any)[\"dirent\"]]) {\n    if (isSimpleDirent(ea)) return ea.isFile // < not a method.\n  }\n\n  try {\n    const stat = _fs.statSync(toNativePath_(s))\n    return stat.isFile()\n  } catch {\n    return false\n  }\n}\n\nexport async function someSelfOrAncestor<T extends SimpleFile>(\n  sf: Maybe<T>,\n  predicate: (t: T) => SyncOrAsync<boolean>\n): Promise<boolean> {\n  if (sf == null) return false\n  const result = await predicate(sf)\n  return result === true || sf.isRoot\n    ? result\n    : someSelfOrAncestor(await sf.parent(), predicate)\n}\n\nexport async function firstSelfOrAncestor<T extends SimpleFile, R>(\n  sf: Maybe<T>,\n  predicate: (t: T) => SyncOrAsync<R>\n): PromiseMaybe<R> {\n  if (sf == null) return\n  const result = await predicate(sf)\n  return result != null || sf.isRoot\n    ? result\n    : firstSelfOrAncestor(await sf.parent(), predicate)\n}\n","import { Stats } from \"fs\"\nimport _fse from \"fs-extra\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { isDate, unixtime } from \"../../fe/Date\"\nimport { Maybe, MaybePromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { diff, isNumber } from \"../../fe/Number\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { onTimeout } from \"../async/TimeoutHandler\"\nimport { isRecentMs } from \"../date/Date\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\nimport { access, isStatRWX } from \"./Access\"\nimport { isEmptyStats } from \"./StatSync\"\nimport { statTimeoutMs } from \"./StatTimeout\"\n\nconst logger = lazy(() => mkLogger(\"fs.Stat\"))\n\nexport async function stat_(nativePath: Maybe<string>): Promise<Stats> {\n  if (blank(nativePath)) {\n    return logger().throw(\"stat_() for blank path\", {\n      nativePath,\n      retriable: false,\n      fatal: false\n    })\n  }\n  const start = Date.now()\n  try {\n    return await thenOrTimeoutError(\n      _fse.stat(nativePath), // < no throwIfNoEntry option for async stat()\n      statTimeoutMs(),\n      true\n    )\n  } finally {\n    const elapsedMs = Date.now() - start\n    if (elapsedMs > statTimeoutMs() / 2) {\n      logger().warn(\"soft timeout for \" + nativePath, { elapsedMs })\n      onTimeout({ soft: true })\n    }\n  }\n}\n\nexport function statMaybe(\n  nativePath: Maybe<string>,\n  logLevel: LogLevel = LogLevels.debug\n): MaybePromiseMaybe<Stats> {\n  return blank(nativePath)\n    ? undefined\n    : stat_(nativePath).catch(error => {\n        logger().log(logLevel, \"stat() failed\", { error, nativePath })\n        return undefined\n      })\n}\n\nexport function statToType(a: Stats) {\n  return a.isDirectory() ? \"directory\" : a.isFile() ? \"file\" : \"special\"\n}\n\nfunction statFieldToComparable(ea: Maybe<number | Date>): Maybe<number> {\n  return isDate(ea) ? unixtime(ea) : isNumber(ea) ? ea : undefined\n}\n\n/**\n * Given `Stats` objects from the same path, is it likely that the file has\n * changed?\n */\nexport function whyStatNotEql(a: Maybe<Stats>, b: Maybe<Stats>) {\n  if (a == null || b == null) {\n    return (\n      \"both must be defined: \" +\n      (a == null ? \"null\" : \"stat\") +\n      \" ≠ \" +\n      (b == null ? \"null\" : \"stat\")\n    )\n  }\n  const aType = statToType(a)\n  const bType = statToType(b)\n  if (aType !== bType) {\n    return \"inconsistent file type: \" + aType + \" ≠ \" + bType\n  }\n  // no atime, and birthtime isn't settable on linux--we're assuming we're\n  // comparing the same path.\n  for (const field of [\"size\", \"mtime\"] as const) {\n    const aVal = a[field]\n    const bVal = b[field]\n    const delta = diff(statFieldToComparable(aVal), statFieldToComparable(bVal))\n    // mtime and birthtime may be fractional milliseconds off.\n    if (delta == null || delta > 1) {\n      return \"unmatched \" + field + \": \" + aVal + \" ≠ \" + bVal\n    }\n  }\n  return\n}\n\nexport function statEql(a: Maybe<Stats>, b: Maybe<Stats>) {\n  return whyStatNotEql(a, b) == null\n}\n\nexport async function exists(\n  nativePath: string,\n  logLevel: LogLevel = LogLevels.info\n) {\n  return null != (await statMaybe(nativePath, logLevel))\n}\n\n/**\n * @return if the file is missing or empty\n */\nexport async function isEmptyFile(\n  nativePath: string,\n  opts?: { emptyIsNew?: boolean; logLevel?: LogLevel }\n) {\n  const s = await statMaybe(nativePath, opts?.logLevel ?? LogLevels.trace)\n  return s == null || (opts?.emptyIsNew ?? true) ? isEmptyStats(s) : false\n}\n\nexport async function isNonEmptyFile(nativePath: string, minFileSize = 0) {\n  const s = await statMaybe(nativePath)\n  return s != null && s.isFile() && s.size >= minFileSize\n}\n\nexport async function nativePathIsFile(\n  nativePath: Maybe<string>,\n  logLevel = LogLevels.info\n): Promise<boolean> {\n  return true === (await statMaybe(nativePath, logLevel))?.isFile()\n}\n\nexport async function isDirectory(nativePath: Maybe<string>): Promise<boolean> {\n  return true === (await statMaybe(nativePath))?.isDirectory()\n}\n\nexport async function isReadableDirectory(\n  nativePath: Maybe<string>,\n  logLevel: LogLevel = LogLevels.trace\n): Promise<boolean> {\n  const stat = await statMaybe(nativePath, logLevel)\n  return (\n    stat != null && stat.isDirectory() && access({ stat, r: true, x: true })\n  )\n}\n\nexport async function isReadWriteableDirectory(\n  nativePath: Maybe<string>,\n  logLevel: LogLevel = LogLevels.trace\n): Promise<boolean> {\n  const stat = await statMaybe(nativePath, logLevel)\n  return stat != null && stat.isDirectory() && isStatRWX(stat)\n}\n\nexport async function isMtimeRecent(\n  nativePath: Maybe<string>,\n  staleMs: number\n): Promise<boolean> {\n  return isRecentMs((await statMaybe(nativePath))?.mtimeMs, staleMs)\n}\n\n/**\n * @return the uniq stat times, including birthtime and mtime (not atime or\n * ctime!)\n */\nexport function statTimes(s: Stats): number[] {\n  return uniq(\n    // birthtimeMs will be 0 on OSes that don't support it. remember that\n    // ctime is last-status-change-time, (directory-change-time), _not_\n    // create-time. We don't want ctime!\n    [s.birthtimeMs, s.mtimeMs].filter(ea => ea != null && ea !== 0)\n  )\n}\n","import fs from \"fs\"\nimport { resolve } from \"path\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isRecentMs } from \"../date/Date\"\nimport { access } from \"./Access\"\nimport { posix2native } from \"./PosixNative\"\n\nexport function statSync(nativePath: Maybe<string>) {\n  if (blank(nativePath)) return\n  try {\n    return fs.statSync(nativePath, { throwIfNoEntry: false })\n  } catch {\n    // only will throw on older node.js versions:\n    return\n  }\n}\n\nexport function nativePathExistsSync(nativePath: Maybe<string>) {\n  if (blank(nativePath)) return false\n  try {\n    return fs.existsSync(nativePath)\n  } catch {\n    return false\n  }\n}\n\nexport function nativePathSizeSync(nativePath: Maybe<string>): Maybe<number> {\n  return statSync(nativePath)?.size\n}\n\nexport function isFileSync(nativePath: string, minSize = 0): boolean {\n  const s = statSync(nativePath)\n  return s != null && s.isFile() && s.size >= minSize\n}\n\nexport function isEmptyFileSync(\n  nativePath: string,\n  opts: { emptyIsNew: boolean } = { emptyIsNew: true }\n) {\n  const s = statSync(nativePath)\n  return opts.emptyIsNew ? s == null : isEmptyStats(s)\n}\n\nexport function isMtimeRecentSync(\n  nativePath: Maybe<string>,\n  staleMs: number\n): boolean {\n  return isRecentMs(statSync(nativePath)?.mtimeMs, staleMs)\n}\n\nexport function isEmptyStats(s: Maybe<fs.Stats>) {\n  return s == null || (s.isFile() && s.size === 0)\n}\n\nexport function isDirectorySync(nativePath: Maybe<string>): boolean {\n  return statSync(nativePath)?.isDirectory() === true\n}\n\nexport function isReadableDirectorySync(nativePath: Maybe<string>): boolean {\n  const stat = statSync(nativePath)\n  return (\n    stat != null && stat.isDirectory() && access({ stat, r: true, x: true })\n  )\n}\n\nexport function isReadWriteableDirectorySync(\n  nativePath: Maybe<string>\n): boolean {\n  if (blank(nativePath)) return false\n  const stat = statSync(nativePath)\n  return (\n    stat != null &&\n    stat.isDirectory() &&\n    access({ stat, r: true, w: true, x: true })\n  )\n}\n\nexport function firstExistingDirectory(paths: Maybe<string>[]): Maybe<string> {\n  for (const ea of paths) {\n    if (notBlank(ea)) {\n      const d = resolve(ea)\n      if (isDirectorySync(d)) return d\n    }\n  }\n  return undefined\n}\n\nexport function posixPathExistsSync(posixPath: Maybe<string>) {\n  return blank(posixPath)\n    ? false\n    : nativePathExistsSync(posix2native(posixPath))\n}\n","import { Settings } from \"../settings/Settings\"\n\nexport function statTimeoutMs() {\n  return Settings.statTimeoutMs.valueOrDefault\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { Latch } from \"../../fe/Latch\"\n\nexport function onDataChunked(\n  r: NodeJS.ReadableStream,\n  sep: string | RegExp,\n  onData: (data: string) => any\n): Latch {\n  const c = new Chunker(sep, onData, true)\n  c.read(r)\n  return c.done\n}\n\n/**\n * Handles data streams that may come in with disjoint chunks (like `[\"hel\",\n * \"lo\\n\"]`)\n */\nexport class Chunker {\n  private incompleteChunk = \"\"\n  readonly done = new Latch()\n\n  constructor(\n    readonly sep: string | RegExp,\n    readonly onData: (data: string) => any,\n    readonly filterBlanks = true\n  ) {}\n\n  onChunk(chunk: string | Buffer) {\n    if (chunk == null) return\n    const s = this.incompleteChunk + chunk.toString()\n    const split = s.split(this.sep)\n    // If s is not terminated by a separator, the last element in the array will\n    // be non-blank. If the string ends in a separator, an empty string will be\n    // the last element of the array, and this \"clears out\" incompleteChunk (as\n    // we'd want), so both cases are handled appropriately here:\n    this.incompleteChunk = split.pop()!\n    split.forEach(ea => {\n      if (!this.filterBlanks || notBlank(ea)) {\n        this.onData(ea)\n      }\n    })\n  }\n\n  clear() {\n    this.onChunk(\"\")\n    if (notBlank(this.incompleteChunk)) this.onData(this.incompleteChunk)\n    this.incompleteChunk = \"\"\n  }\n\n  read(r: NodeJS.ReadableStream) {\n    r.on(\"data\", ea => this.onChunk(ea))\n    r.on(\"end\", () => {\n      this.clear()\n      void this.done.resolve()\n    })\n    return this\n  }\n}\n","import { WriteStream } from \"tty\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\n\nexport function streamEnded(s: Maybe<WriteStream>): boolean {\n  return (\n    s == null ||\n    !s.writable ||\n    s.destroyed ||\n    s.writableEnded ||\n    s.writableFinished\n  )\n}\n","import { ChildProcess } from \"child_process\"\nimport _n from \"net\"\nimport _s from \"stream\"\nimport { delay } from \"../../fe/Delay\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, MaybeNull } from \"../../fe/MaybeTypes\"\nimport { maybeCall } from \"../../fe/Object\"\nimport { NoOp } from \"../../fe/Thunk\"\nimport { Try } from \"../Object\"\nimport { ending } from \"../async/Endable\"\nimport { isIgnorableError } from \"../error/ErrorTypes\"\n\nexport class PassthroughStream extends _s.Duplex {\n  _write(chunk: any, encoding: BufferEncoding) {\n    this.push(chunk, encoding)\n  }\n}\n\n/**\n * Handles backpressure by optionally waiting for the drain event\n */\nexport async function writeAsync(\n  stream: _s.Writable,\n  data: string | Buffer\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    if (\n      false ===\n      stream.write(data, err => {\n        if (err) reject(err)\n      })\n    ) {\n      stream.once(\"drain\", resolve)\n    } else {\n      resolve()\n    }\n  })\n}\n\n// I don't want to just Pick<Writable, \"end\"> because I don't want to require\n// all the overloaded signatures as well.\nexport interface EndableStream {\n  end(chunk: any, cb?: () => void): void\n}\n\nexport async function endStream(\n  endable: MaybeNull<EndableStream>\n): Promise<void> {\n  if (endable == null) return\n  // Make sure we don't hang waiting for this stream:\n  Try(() => maybeCall(endable, \"unref\"))\n  if (ending()) {\n    // no need to wait for the end callback:\n    endable.end(null)\n  } else {\n    // Half-closes the socket (!!)\n    await new Promise<void>(resolve => endable.end(null, resolve))\n  }\n  await delay(50)\n\n  // Ensures that no more I/O activity happens on this socket\n  Try(() => maybeCall(endable, \"destroy\"))\n  return\n}\n\nexport interface ClosableStream {\n  close(callback: () => void): void\n}\n\nexport async function closeStream(\n  closable: Maybe<ClosableStream>\n): Promise<void> {\n  if (closable == null) return\n  Try(() => maybeCall(closable, \"unref\"))\n  if (ending()) {\n    closable.close(NoOp)\n  } else {\n    await new Promise<void>(resolve => closable.close(resolve))\n  }\n  // I don't think this is necessary (and caused errors with electron last year):\n  // await delay(50)\n  // Try(() => maybeCall(closable, \"destroy\"))\n  return\n}\n\nexport function onChildError(\n  cp: ChildProcess,\n  f: (src: \"cp\" | \"stdin\" | \"stdout\" | \"stderr\", err: Error) => void\n): void {\n  ;[\n    { name: \"cp\", ea: cp },\n    { name: \"stdin\", ea: cp.stdin },\n    { name: \"stdout\", ea: cp.stdout },\n    { name: \"stderr\", ea: cp.stderr }\n  ].forEach(({ name, ea }) =>\n    map(ea, ea2 =>\n      ea2.on(\"error\", err => {\n        if (isIgnorableError(err) === false) f(name as any, err)\n      })\n    )\n  )\n}\n\nexport function closeStreams(cp: ChildProcess) {\n  for (const ea of [cp?.stdin, cp?.stdout, cp?.stderr]) {\n    try {\n      ea?.destroy()\n    } catch {\n      //\n    }\n  }\n}\n\nexport type Pipeline = [\n  NodeJS.ReadableStream,\n  ...(NodeJS.ReadWriteStream | NodeJS.WritableStream)[]\n]\n\nexport function remoteDesc(s: _n.Socket): string {\n  return s.destroyed\n    ? \"destroyed\"\n    : `${s.remoteFamily}:${s.remoteAddress}:${s.remotePort}`\n}\n\nexport class ByteCounter extends _s.Transform {\n  private bytes = 0\n  constructor(readonly onProgress: (bytes: number) => any) {\n    super({\n      transform: (\n        chunk: any,\n        _encoding: BufferEncoding,\n        callback: _s.TransformCallback\n      ) => {\n        this.onProgress((this.bytes += chunk.length))\n        callback(chunk)\n      }\n    })\n  }\n}\n","import fse from \"fs-extra\"\nimport { utimes } from \"utimes\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { isDate } from \"../../fe/Date\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0 } from \"../../fe/Number\"\nimport { compactValues, keys } from \"../../fe/Object\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { Settings } from \"../settings/Settings\"\nimport { mkdirp_ } from \"./Path\"\nimport {\n  SimpleFile,\n  SimpleFileOrString,\n  dirname,\n  toNativePath_\n} from \"./SimpleFile\"\nimport { statMaybe } from \"./Stat\"\nimport { statTimeoutMs } from \"./StatTimeout\"\n\n// const logger = lazy(() => mkLogger(\"fs.Touch\"))\n\nfunction toMs(d: number | Date | undefined): Maybe<number> {\n  return d == null\n    ? undefined\n    : isDate(d)\n    ? d.getTime()\n    : gt0(d)\n    ? d\n    : undefined\n}\n\nexport async function touch_(args: {\n  file: SimpleFileOrString\n  ensureFile?: boolean\n  atimeMs?: number | Date\n  mtimeMs?: number | Date\n  btimeMs?: number | Date\n  reference?: SimpleFile\n}): Promise<void> {\n  const ensureFile = args.ensureFile ?? true\n  if (args.file == null || blank(args.file))\n    throw new Error(\"can't touch blank path\")\n  const nativePath = toNativePath_(args.file)\n  if (ensureFile) {\n    await mkdirp_(dirname(args.file))\n  }\n  const rStat = lazy(() => statMaybe(args.reference?.nativePath))\n  const mtimeMs = Math.round(\n    toMs(args.mtimeMs) ?? (await rStat())?.mtimeMs ?? Date.now()\n  )\n  const atimeMs = Math.round(\n    toMs(args.atimeMs) ?? (await rStat())?.atimeMs ?? mtimeMs\n  )\n  const btimeMs = map(toMs(args.btimeMs) ?? (await rStat())?.birthtimeMs, ea =>\n    Math.round(ea)\n  )\n  // logger().debug(\"touch_(): utime()\", { args, mtimeMs, atimeMs, btimeMs })\n  try {\n    await thenOrTimeoutError(\n      btimeMs != null && Settings.retainFileBirthtimes.valueOrDefault\n        ? utimes(\n            nativePath,\n            compactValues({\n              atime: atimeMs,\n              mtime: mtimeMs,\n              btime: btimeMs\n            })\n          )\n        : fse.utimes(nativePath, new Date(atimeMs), new Date(mtimeMs)),\n      statTimeoutMs()\n    )\n  } catch (error: any) {\n    if (ensureFile && error.code === \"ENOENT\") {\n      // fsp.ensureFile() has issues: the file may not exist when the returned\n      // promise is resolved.\n      await thenOrTimeoutError(fse.ensureFile(nativePath), statTimeoutMs())\n      if (keys(args).length > 1) {\n        // args has more than just \"file\":\n        await touch_({ ...args, ensureFile: false })\n      }\n    } else {\n      throw error\n    }\n  }\n}\n","import { Dirent } from \"fs\"\nimport { blank } from \"../../fe/Blank\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { basename, SimpleFile } from \"./SimpleFile\"\n\nexport const WipTimeoutMs = ShortCommandTimeoutMs\nexport const WipPrefix = \".WIP-\"\n\nexport function isWip(p: SimpleFile | string | Dirent): boolean {\n  return !blank(p) && basename(p).startsWith(WipPrefix)\n}\n","import { Writable, WritableOptions } from \"stream\"\nimport { Deferred } from \"../async/Deferred\"\n\n/**\n * Concats the result of a stream's data into a `Buffer`\n */\nexport class WritableToBuffer extends Writable {\n  private readonly deferred = new Deferred<Buffer>(\"WritableToBuffer\")\n  private readonly _buf: Buffer[] = []\n\n  constructor(opts?: WritableOptions) {\n    super(opts)\n    this.on(\"finish\", () => {\n      void this.deferred.resolve(this.data)\n    })\n    this.on(\"error\", err => {\n      void this.deferred.reject(err)\n    })\n  }\n\n  get data(): Buffer {\n    return Buffer.concat(this._buf)\n  }\n\n  /**\n   * Final result. Will only be resolved on finish.\n   */\n  get buffer(): Promise<Buffer> {\n    return this.deferred.promise\n  }\n\n  _write(chunk: any, encoding: BufferEncoding, next: () => void) {\n    this._buf.push(\n      Buffer.isBuffer(chunk) ? chunk : Buffer.from(chunk, encoding)\n    )\n    next()\n  }\n}\n","import _fse from \"fs-extra\"\nimport _path from \"path\"\nimport { ensureSuffix, wrap } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { ee } from \"../event/EventEmitter\"\nimport { crlf } from \"./CRLF\"\nimport { mkdirpSync_, mkdirp_ } from \"./Path\"\n\nexport async function writeFile_(nativePath: string, data: string | Buffer) {\n  const dir = _path.dirname(nativePath)\n  await mkdirp_(dir)\n  await _fse.writeFile(nativePath, data)\n  ee().emit(\"fileChanged\", dir) // because the parent directory has a new child!\n}\n\nexport async function writeText_(nativePath: string, ...txt: string[]) {\n  return writeFile_(\n    nativePath,\n    crlf(ensureSuffix(txt.map(toS).join(\"\\n\"), \"\\n\"))\n  )\n}\n\nexport async function writeTextfile_(nativePath: string, ...txt: string[]) {\n  const data = crlf(...wrap(txt))\n  await writeFile_(nativePath, data)\n}\n\nexport function writeFileSync_(nativePath: string, data: string | Buffer) {\n  const dir = _path.dirname(nativePath)\n  mkdirpSync_(dir)\n  _fse.writeFileSync(nativePath, data)\n  ee().emit(\"fileChanged\", dir) // because the parent directory has a new child!\n}\n\nexport function writeTextSync_(nativePath: string, ...txt: string[]) {\n  return writeFileSync_(\n    nativePath,\n    crlf(ensureSuffix(txt.map(toS).join(\"\\n\"), \"\\n\"))\n  )\n}\n","import _fs from \"fs\"\nimport { parse } from \"path\"\nimport _s from \"stream\"\nimport { pipeline } from \"stream/promises\"\nimport { createBrotliDecompress, createGunzip, createGzip } from \"zlib\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isNotEmpty } from \"../../fe/Array\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { parseJSON } from \"../JSON\"\nimport { mkLogger } from \"../Logger\"\nimport { WrappedError } from \"../error/WrappedError\"\nimport { mkdirp_ } from \"../fs/Path\"\nimport { LogLevel, LogLevels } from \"../log/LogLevel\"\nimport { ReadableBuffer } from \"./ReadableBuffer\"\nimport { Pipeline } from \"./Streams\"\nimport { WritableToBuffer } from \"./WritableToBuffer\"\n\nconst logger = lazy(() => mkLogger(\"fs.zcat\"))\n\n/**\n * @throw if the file is missing or unreadable\n */\nexport async function zcat_(\n  nativePath: string,\n  options?: { start?: number; end?: number }\n): Promise<string> {\n  return (await zCopyToBuffer_(nativePath, options)).toString()\n}\n\nexport async function zcat(\n  nativePath: string,\n  options?: { start?: number; end?: number }\n): PromiseMaybe<string> {\n  try {\n    return zcat_(nativePath, options)\n  } catch (err) {\n    logger().warn(\"zcat failed to read \" + nativePath, err)\n    return undefined\n  }\n}\n\nexport async function zpipe_(\n  nativePath: string,\n  outputStream: _s.Writable,\n  options?: { start?: number; end?: number }\n) {\n  const causes: Error[] = []\n  const p: Pipeline = [\n    _fs\n      .createReadStream(nativePath, { autoClose: true, ...options })\n      .on(\"error\", err => causes.push(err))\n  ]\n  if (nativePath.toLowerCase().endsWith(\".gz\")) {\n    p.push(createGunzip().on(\"error\", err => causes.push(err)))\n  } else if (nativePath.toLowerCase().endsWith(\".br\")) {\n    p.push(createBrotliDecompress().on(\"error\", err => causes.push(err)))\n  }\n  p.push(outputStream)\n  await pipeline(p)\n  if (isNotEmpty(causes)) {\n    throw new WrappedError(\"zPipe(\" + nativePath + \") failed\", {\n      causes,\n      path: nativePath\n    })\n  }\n}\n\n/**\n * `readFile`, but on-the-fly decompression for .gz and .br\n * @throws on error\n */\nexport async function zCopyToBuffer_(\n  nativePath: string,\n  options?: { start?: number; end?: number }\n): Promise<Buffer> {\n  const w = new WritableToBuffer()\n  await zpipe_(nativePath, w, options)\n  return await w.buffer\n}\n\nexport async function readJsonGz_<T = any>(nativePath: string) {\n  return parseJSON(await zCopyToBuffer_(nativePath)) as Maybe<T>\n}\n\nexport async function readJsonGz<T = any>(\n  nativePath: string,\n  level: LogLevel = LogLevels.warn\n) {\n  try {\n    return await readJsonGz_<T>(nativePath)\n  } catch (err) {\n    logger().log(level, \"readJsonGz(\" + nativePath + \"): failed\", err)\n    return\n  }\n}\n\nexport async function outputJsonGz_<T = any>(nativePath: string, obj: T) {\n  const json = stringify(obj)\n  await mkdirp_(parse(nativePath).dir)\n  await pipeline(\n    new ReadableBuffer(json),\n    createGzip(),\n    _fs.createWriteStream(nativePath, { autoClose: true })\n  )\n}\n\nexport async function outputJsonGz<T = any>(\n  nativePath: string,\n  obj: T,\n  level: LogLevel = LogLevels.warn\n) {\n  try {\n    await outputJsonGz_(nativePath, obj)\n  } catch (err) {\n    logger().log(level, \"outputJsonGz(\" + nativePath + \"): failed\", err)\n  }\n}\n","import { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\n\nexport const HealthCheckIds = strEnum(\n  \"library-db\",\n  \"library-directories\",\n  \"library-free-space\",\n  \"library-nothing-to-sync\",\n  \"media-directories\",\n  \"nodejs-version\",\n  \"proc-memory-use\",\n  \"proc-not-in-dmg\",\n  \"proc-not-superuser\",\n  \"settings-env\",\n  \"settings-library\",\n  \"settings-system\",\n  \"sync-paused\",\n  \"system-load\",\n  \"system-volumes\",\n  \"tools-exiftool\",\n  \"tools-heif\",\n  \"tools-powershell\",\n  \"tools-sqlite-version\",\n  \"tools-video\",\n  \"volume-uuids\"\n)\nexport type HealthCheckId =\n  | StrEnumKeys<typeof HealthCheckIds>\n  | \"summary\"\n  | \"test-health-check\"\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const CropStrategies = strEnum(\"center\", \"entropy\", \"attention\")\nexport type CropStrategy = StrEnumKeys<typeof CropStrategies>\n","import { rm } from \"fs/promises\"\nimport { lazy } from \"../../core/Lazy\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { isProd, isTest } from \"../NodeEnv\"\nimport { ensurePrefix, splitEvery } from \"../String\"\nimport { shortFsStringSha } from \"../StringHash\"\nimport { ciSafePath } from \"../ciSafePath\"\nimport { cacheDir_ } from \"../dir/CacheDir\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { ee } from \"../event/EventEmitter\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile, basename } from \"../fs/SimpleFile\"\nimport { TokenRadix } from \"../math/Radix\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"img.ImgCache\"))\n\nexport const ImageCacheName = \"image-cache\"\n// NOTE: sync service is in charge of cleaning cacheDir. See `setup()`.\n\n/**\n * @throws if imgCacheDir cannot be created.\n */\nexport const imageCacheDir_ = lazy(() => {\n  watchCacheDir()\n  return PosixFile.for(cacheDir_()).join(ImageCacheName).mkdirp_()\n})\n\nconst watchCacheDir = lazy(() => {\n  cacheDir_.watchLater(() => imageCacheDir_.unset())\n})\n\nexport async function rmImageCacheDir() {\n  if (isProd) throw new Error(\"rmImgCacheDir is for tests\")\n  for (const ea of toA(await (await imageCacheDir_()).clear().children())) {\n    await rm(ea.nativePath, {\n      recursive: ea.isDirectorySync(),\n      maxRetries: 32,\n      retryDelay: 250,\n      force: true\n    })\n  }\n  ee().emit(\"fileChanged\")\n  ee().emit(\"clearCache\")\n}\n\nfunction imgCacheSubdir(src: PosixFile): string[] {\n  // Ideally, we'd use the file SHA, but that's expensive, so use a less stable but cheaper hash that includes filesize and mtime:\n  const s = src.statSync({ refresh: true })\n\n  // We're SHA'ing the JSON to avoid name collisions with files that end with\n  // a file size (! highly unlikely)\n  const sha = shortFsStringSha(\n    JSON.stringify({\n      // we have to use baseWithGrandparent for tests (as SharpReadable.spec\n      // uses these paths!)\n      np: isTest ? ciSafePath(src) : src.nativePath,\n      size: s?.size,\n      mtime: isTest ? 0 : s?.mtime // < make tests deterministic\n    }),\n    24\n  )\n\n  // Truncated to 24 to hopefully avoid max path issues on windows: (linux\n  // kernel has to truncate to 15 chars (64 bits) to avoid collisions, so 24\n  // at base32 (120 bits) should be fine). we could probably get away with\n  // dropping all the files directly into the imgtmp dir because they have to\n  // be cleaned up, but having 2-deep directories (1024 * 1024) should cover\n  // at least an hour of processing:\n\n  return splitEvery(sha.slice(0, 24), 2, 3)\n}\n\n/**\n * Random tempfile for easy-to-produce image caching.\n *\n * DON'T USE FOR RAW! use cachedImgFile_() instead!\n */\nexport async function tmpImageFile_(args: {\n  src: SimpleFile\n  tag: string\n  ext: string\n}): Promise<PosixFile> {\n  const dir = await imageCacheDir_()\n  const result = getDevEnvFlag(\"PS_NO_RANDOM_IMAGE_CACHE\")\n    ? // path needs to be predictable for tests\n      dir.join(\n        \"tmp\",\n        basename(args.src.dir).normalize(),\n        args.src.name.normalize(),\n        args.tag + args.ext\n      )\n    : dir.join(\n        \"tmp-\" + TokenRadix.randomChars(2),\n        TokenRadix.randomChars(16) + toS(args.ext)\n      )\n  await result.parent().mkdirp_()\n  return result\n}\n\n/**\n * @throws on error\n */\nexport async function cachedImageFile_(\n  src: PosixFile,\n  desc?: string,\n  ext?: string\n): Promise<PosixFile> {\n  const dir = await imageCacheDir_()\n\n  desc ??= src.name\n  ext = ensurePrefix(ext ?? src.ext, \".\")\n\n  const parent = dir.join(...imgCacheSubdir(src))\n  await parent.mkdirp_()\n  // make sure we don't prematurely delete the parent cache dir.\n\n  // note: we don't need to touch the whole directory ancestry: we just need to\n  // touch the parent (grandparents will then not be empty)\n\n  // we're using utimes() here instead of touch() to avoid the extra call to\n  // ensureExists():\n  await parent.utimes()\n\n  const result = parent.join(desc + ext)\n\n  logger().debug(\"cachedImgFile(\" + src.baseWithGrandparent + \")\", {\n    desc,\n    ext,\n    result\n  })\n  return result\n}\n\n/**\n * Only applies the readable thunk if the tmpfile doesn't already exist.\n *\n * @throws if f() has issues generating a readable, or the readable has errors\n * during stream.\n */\nexport async function readableToFile_({\n  src,\n  desc,\n  suffix,\n  f\n}: {\n  src: PosixFile\n  desc: string\n  suffix: string\n  f: (destination: PosixFile) => Promise<void>\n}): PromiseMaybe<PosixFile> {\n  const dest = await cachedImageFile_(src, desc, suffix)\n  return dest.applyIfEmpty_({ fn_: f })\n}\n\n/** Only applies the thunk if the tmpfile doesn't already exist */\nexport async function withImageCache_(\n  src: PosixFile,\n  desc: string,\n  ext: string,\n  applyIfEmpty_: (dest: PosixFile) => Promise<any>\n): Promise<PosixFile> {\n  try {\n    const dest = await cachedImageFile_(src, desc, ext)\n    await dest.applyIfEmpty_({\n      fn_: applyIfEmpty_,\n      skipFsLock: false,\n      skipWip: false,\n      timeoutMs: commandTimeoutMs(),\n      minSizeBytes: 256,\n      dirty: true // It's ok to leave the fslock directories. They'll get cleaned up later. Speedy finishes SharpReadable.spec in 40s with dirty, 55s with !dirty.\n    })\n    return dest\n  } catch (error) {\n    return logger().throw(\"withImgCache_() failed\", {\n      error,\n      src: src.nativePath,\n      desc,\n      ext\n    })\n  }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const SharpFailOns = strEnum(\"none\", \"truncated\", \"error\", \"warning\")\nexport type SharpFailOn = StrEnumKeys<typeof SharpFailOns>\n","import { inspect } from \"util\"\nimport { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport {\n  bgBlack,\n  bgRedBright,\n  black,\n  blue,\n  blueBright,\n  cyan,\n  darkGrey,\n  green,\n  magenta,\n  redBright,\n  yellow,\n  yellowBright\n} from \"../Chalk\"\nimport { isTest } from \"../NodeEnv\"\nimport { processName } from \"../ServiceNames\"\nimport { Settings } from \"../settings/Settings\"\nimport { LogEntry } from \"./LogEntry\"\nimport { logFilter } from \"./LogFilter\"\nimport { FormatterOptions, LogFormatter } from \"./LogFormatter\"\nimport { LogLevel } from \"./LogLevel\"\nimport { prepMeta } from \"./LogMeta\"\n\nconst procColors = lazy(() => [\n  { re: /billing|worker/, f: cyan },\n  { re: /sync/, f: blue },\n  { re: /web/, f: green },\n  { re: /main/, f: yellow },\n  { re: /info/, f: blueBright },\n  { re: /test|log/, f: magenta }\n])\n\nexport function colorProcessName(s: string): string {\n  if (blank(s)) return \"\"\n  const pc = procColors().find(ea => s.match(ea.re))\n  return pc != null ? bgBlack(pc.f(s)) : s\n}\n\nexport class ColoredLogFormatter implements LogFormatter {\n  private readonly logLevels: Record<LogLevel, string> = {\n    trace: \"trace\",\n    debug: darkGrey(\"debug\"),\n    // the underscores support grepping by log level:\n    info: cyan(\"info_\"),\n    warn: yellowBright(\"warn_\"),\n    error: redBright(\"error_\"),\n    fatal: bgRedBright(black(\"fatal\"))\n  }\n\n  readonly inspectOptions: FormatterOptions\n\n  defaultProcessName!: string\n\n  constructor(readonly _inspectOptions: Partial<FormatterOptions> = {}) {\n    this.inspectOptions = {\n      showHidden: false,\n      depth: 5,\n      colors: true,\n      compact: true,\n      customInspect: true,\n      maxArrayLength: Settings.logContextLimit.valueOrDefault + 3, // +3 so inspect doesn't do any array trimming\n      processName: processName,\n      ...this._inspectOptions\n    }\n    if (isTest) {\n      this.inspectOptions.breakLength = 255\n    }\n    // This assumes we'll only make one of these! DON'T LEAK!\n    Settings.logContextLimit.watchLater(curr => {\n      this.inspectOptions.maxArrayLength = curr + 1\n    })\n    this.inspectOptions.processName.watch(\n      ea => (this.defaultProcessName = colorProcessName(ea))\n    )\n  }\n\n  formatMeta(meta?: Maybe<any[]>) {\n    if (meta == null) return undefined\n    const m = prepMeta(meta)\n    return m == null ? undefined : inspect(m, this.inspectOptions)\n  }\n\n  formatLogEntry(le: LogEntry): string {\n    const contextColor = logFilter().highlight(le.ctx) ? yellow : blue\n    return compactBlanks([\n      darkGrey(new Date(le.ts).toISOString()),\n      le.from == null ? this.defaultProcessName : colorProcessName(le.from),\n      this.logLevels[le.l],\n      contextColor(le.ctx),\n      le.msg,\n      this.formatMeta(le.meta)\n    ])\n      .map(ea => toS(ea))\n      .join(\" \")\n  }\n\n  format(\n    level: LogLevel,\n    context: string,\n    message: string,\n    meta?: any\n  ): string {\n    return this.formatLogEntry({\n      ts: Date.now(),\n      l: level,\n      from: processName(),\n      ctx: context,\n      msg: message,\n      meta\n    })\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { processName } from \"../ServiceNames\"\nimport { logFilter } from \"./LogFilter\"\nimport { SimpleLogger } from \"./Logger\"\nimport { LogLevel } from \"./LogLevel\"\nimport { pushLogEntries } from \"./LogTailEntries\"\n\n/**\n * Works in concert with LogTail so both local and remote log messages are\n * emitted in chronological order.\n */\nexport class ConsoleLogger implements SimpleLogger {\n  static readonly instance = lazy(() => new ConsoleLogger())\n\n  log(level: LogLevel, context: string, msg: string, meta?: any) {\n    if (this.enabled(level, context)) {\n      pushLogEntries({\n        ts: Date.now(),\n        l: level,\n        from: processName(),\n        ctx: context,\n        msg,\n        meta\n      })\n    }\n  }\n\n  enabled(level: LogLevel, context: string): boolean {\n    return logFilter().enabled(level, context)\n  }\n\n  async flush() {\n    // no op\n  }\n\n  end() {\n    // no op\n  }\n\n  toJSON() {\n    // if we add an object that contains a logger to LogEntry.meta...\n    return {\n      _ctor: \"ConsoleLogger\"\n    }\n  }\n}\n","import { Logger } from \"batch-cluster\"\nimport { toNotBlank } from \"../../fe/Blank\"\nimport { shortStack } from \"../../fe/Error\"\nimport { Later } from \"../../fe/Later\"\nimport { map } from \"../../fe/Maybe\"\nimport { Obj } from \"../../fe/Object\"\nimport { Thunk } from \"../../fe/Thunk\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { rootLoggers } from \"../Logger\"\nimport { mapGt0 } from \"../Number\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { AbortError } from \"../async/AbortError\"\nimport { NewWrappedError, toWrappedError } from \"../error/WrappedError\"\nimport { LogLevel, LogLevels, msTolevel } from \"./LogLevel\"\nimport { SimpleLogger } from \"./Logger\"\n\n/**\n * Delegates to a SimpleLogger, applying filters, and exposing level-specific\n * log methods.\n */\nexport class ContextualLogger implements SimpleLogger, Logger {\n  readonly context: string\n  constructor(\n    context: string,\n    readonly loggers = rootLoggers\n  ) {\n    // shite goes real south if context is blank, so let's make sure it's not:\n    this.context =\n      toNotBlank(context) ??\n      // We have to skip over lazy(), mkLogger(), and this constructor:\n      shortStack().find(ea => !ea.includes(\"Logger\")) ??\n      \"\"\n  }\n\n  toLogJSON() {\n    return \"CtxLogger(\" + this.context + \")\"\n  }\n\n  /**\n   * @return `this.context + s`\n   */\n  addContext(s: string) {\n    return new ContextualLogger(this.context + s, this.loggers)\n  }\n\n  addParameterContext(param: string) {\n    return new ContextualLogger(this.context + \"(\" + param + \")\", this.loggers)\n  }\n\n  throwIfAborted(signal?: AbortSignal) {\n    if (signal?.aborted === true) {\n      const reason = signal.reason ?? \"(no reason given)\"\n      this.warn(\"process aborted: \" + (signal.reason ?? \"(no reason given)\"))\n      throw new AbortError(reason)\n    }\n  }\n\n  throw(\n    e: string | Error,\n    meta?: (NewWrappedError & { error: Error }) | Obj\n  ): never {\n    const result = toWrappedError(e, { ...meta, message: this.context })\n    this.log(\n      result.ignorable === true ? \"warn\" : \"error\",\n      \".throw() \" + result.message,\n      { stack: result.stack, ...meta }\n    )\n    throw result\n  }\n\n  tap<T>(o: { level?: LogLevel; msg: string; result: T; meta?: any }): T {\n    const level =\n      o.level ?? mapGt0(o.meta?.elapsedMs, msTolevel) ?? LogLevels.debug\n    this.log(level, o.msg, { result: o.result, ...o.meta })\n    return o.result\n  }\n\n  tapThunk<T>(o: {\n    level?: LogLevel\n    msg: string\n    result: Thunk<T>\n    meta?: any\n  }): T {\n    const start = Date.now()\n    let slowTimer\n    try {\n      slowTimer = setTimeout(\n        () => this.log(\"warn\", \"slow: \" + o.msg),\n        ShortCommandTimeoutMs\n      )\n      const result = o.result()\n      const elapsedMs = Date.now() - start\n      return this.tap({\n        level: o.level,\n        msg: o.msg,\n        result,\n        meta: { ...o.meta, elapsedMs }\n      })\n    } catch (error) {\n      this.log(\"error\", \"error: \" + o.msg, { error, ...o.meta })\n      throw error\n    } finally {\n      map(slowTimer, clearTimeout)\n    }\n  }\n\n  async tapAsync<T>(o: {\n    level?: LogLevel\n    errorLevel?: LogLevel\n    msg: string\n    errorMsg?: string\n    result: Later<T> | Promise<T>\n    meta?: any\n  }): Promise<T> {\n    const level =\n      o.level ?? mapGt0(o.meta?.elapsedMs, msTolevel) ?? LogLevels.debug\n    try {\n      const result = await (isFunction(o.result) ? o.result() : o.result)\n      this.log(level, o.msg, { result, ...o.meta })\n      return result\n    } catch (error) {\n      this.log(o.errorLevel ?? \"warn\", o.errorMsg ?? o.msg + \" failed\", {\n        error,\n        ...o.meta\n      })\n      throw error\n    }\n  }\n\n  /**\n   * Is _any_ logger enabled?\n   */\n  enabled(level: LogLevel, context?: string): boolean {\n    // PERF: avoid closure allocation:\n    for (const ea of this.loggers()) {\n      if (ea.enabled(level, context ?? this.context)) return true\n    }\n    return false\n  }\n\n  log(level: LogLevel, message: string, meta?: any): void {\n    for (const ea of this.loggers()) {\n      ea.log(level, this.context, message, meta)\n    }\n  }\n\n  elapsed(message: string, elapsedMs: number, meta?: any) {\n    this.log(msTolevel(elapsedMs), message, { elapsedMs, ...meta })\n  }\n\n  async flush() {\n    for (const ea of this.loggers()) {\n      await ea.flush()\n    }\n  }\n\n  async end() {\n    for (const ea of this.loggers()) {\n      await ea.end()\n    }\n  }\n\n  // Using fat arrows force the methods to stay bound to this instance:\n  readonly error = (msg: string, args?: any) => {\n    this.log(\"error\", msg, args)\n  }\n\n  readonly warn = (msg: string, args?: any) => {\n    this.log(\"warn\", msg, args)\n  }\n\n  readonly info = (msg: string, args?: any) => {\n    this.log(\"info\", msg, args)\n  }\n\n  readonly debug = (msg: string, args?: any) => {\n    this.log(\"debug\", msg, args)\n  }\n\n  readonly trace = (msg: string, args?: any) => {\n    this.log(\"trace\", msg, args)\n  }\n}\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { rootLoggers } from \"../Logger\"\nimport { LogWriter } from \"./LogWriter\"\n\nexport function currentFileLogger(): Maybe<LogWriter> {\n  return rootLoggers().find(ea => ea instanceof LogWriter) as LogWriter\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { LogFormatter } from \"./LogFormatter\"\nimport { PlaintextLogFormatter } from \"./PlaintextLogFormatter\"\n\nexport const DefaultLogFormatter = lazy<LogFormatter>(\n  () => new PlaintextLogFormatter()\n)\n","import { UnwrapLazy, lazy } from \"../../core/Lazy\"\nimport { compactBlanks, uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { entries, fromEntries } from \"../../fe/Object\"\nimport { SimpleAppName } from \"../AppName\"\nimport { serviceName } from \"../ServiceNames\"\nimport { stripAnsiEsc } from \"../String\"\nimport { errorToVerbose } from \"../error/Error\"\nimport { LogEntry } from \"./LogEntry\"\nimport { LogFormatter } from \"./LogFormatter\"\nimport { level2syslog } from \"./LogLevel\"\nimport { prepMeta } from \"./LogMeta\"\n\n// https://docs.greylog.org/v1/docs/gelf#gelf-payload-specification\ninterface Payload {\n  version: \"1.1\"\n  host: string\n  short_message: string\n  full_message?: string\n  timestamp: number\n  // https://en.wikipedia.org/wiki/Syslog#Severity_level\n  level: number\n}\n\nconst defaultFrom = lazy<{ _service: string; _pid?: number }>(() => ({\n  _service: serviceName(),\n  _pid: process.pid\n}))\n\nlater(() => serviceName.watchLater(() => defaultFrom.unset()))\n\nfunction extractFrom(from?: Maybe<string>): UnwrapLazy<typeof defaultFrom> {\n  if (from == null) {\n    return defaultFrom()\n  } else {\n    const [_service, pidStr] = from.split(\"-\", 2)\n\n    return blank(_service) ? defaultFrom() : { _service, _pid: toInt(pidStr) }\n  }\n}\n\n/**\n * @see https://docs.greylog.org/v1/docs/gelf\n */\nexport class GelfLogFormatter implements LogFormatter {\n  formatLogEntry(logEntry: LogEntry): string {\n    const payload: Payload = {\n      version: \"1.1\",\n      level: level2syslog(logEntry.l) ?? 7,\n      host: SimpleAppName,\n      timestamp: logEntry.ts / 1000,\n      short_message: stripAnsiEsc(\n        uniq(compactBlanks([logEntry.ctx, logEntry.msg])).join(\" \")\n      ),\n      full_message: map(logEntry.meta?.error, errorToVerbose)\n    }\n\n    return stringify({\n      ...payload,\n      ...extractFrom(logEntry.from),\n      ...fromEntries(\n        entries(prepMeta(logEntry.meta, 3) ?? {}).map(([k, v]) =>\n          k === \"id\" ? undefined : [\"_\" + k, stringify(v)]\n        )\n      )\n    })\n  }\n\n  format(\n    level: \"fatal\" | \"error\" | \"warn\" | \"info\" | \"debug\" | \"trace\",\n    ctx: string,\n    msg: string,\n    meta?: any\n  ): string {\n    return this.formatLogEntry({\n      ts: Date.now(),\n      l: level,\n      ctx,\n      msg,\n      meta\n    })\n  }\n}\n","import { createConnection, Socket } from \"net\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Latch } from \"../../fe/Latch\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, toInt } from \"../../fe/Number\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { mkConsoleLogger } from \"../Logger\"\nimport { rateLimited } from \"../RateLimited\"\nimport { Settings } from \"../settings/Settings\"\nimport { GelfLogFormatter } from \"./GelfLogFormatter\"\nimport { LogFilterImpl } from \"./LogFilterImpl\"\nimport { SimpleLogger } from \"./Logger\"\nimport { LogLevel } from \"./LogLevel\"\n\nconst consoleLogger = lazy(() => mkConsoleLogger(\"log.LogBroadcaster\"))\n\nconst nul = String.fromCharCode(0)\n\nfunction parseLogServerSetting() {\n  const [host, portStr] = (Settings.logServer.valueOrDefault ?? \"\").split(\":\")\n  const port = toInt(portStr)\n  return blank(host) || !gt0(port) ? undefined : { host, port }\n}\n\nexport const logBroadcaster = lazy(() => {\n  const server = parseLogServerSetting()\n  if (server == null) {\n    if (Settings.logServer.hasValue()) {\n      consoleLogger().info(\n        `setup(): no-op: invalid PS_LOG_SERVER setting (expecting \"host:port\", got ${stringify(\n          Settings.logServer.valueOrDefault\n        )})`\n      )\n    }\n    return\n  } else {\n    return new LogBroadcaster(server.host, server.port)\n  }\n})\n\nclass LogBroadcaster extends EndableWrapper implements SimpleLogger {\n  readonly logFormatter = new GelfLogFormatter()\n  readonly logFilter = new LogFilterImpl(Settings.logServerLevel)\n  socket: Maybe<Socket>\n\n  constructor(\n    readonly host: string,\n    readonly port: number\n  ) {\n    super(\n      \"log.LogBroadcaster(\" + host + \":\" + port + \")\",\n      () => this.socket?.end(),\n      EndableRanks.logtail\n    )\n    void this.#mkSocket()\n  }\n\n  enabled(level: LogLevel, context?: string | undefined): boolean {\n    return this.logFilter.enabled(level, context)\n  }\n\n  log(level: LogLevel, context: string, msg: string, meta?: any) {\n    if (this.enabled(level, context)) {\n      try {\n        const s = this.socket\n        if (s == null) {\n          void this.#mkSocket()\n        } else {\n          s.write(this.logFormatter.format(level, context, msg, meta) + nul)\n        }\n      } catch (error) {\n        consoleLogger().warn(\"Failed to write log entry to socket\", {\n          level,\n          context,\n          msg,\n          meta,\n          error\n        })\n      }\n    }\n  }\n\n  flush() {\n    const l = new Latch()\n    this.socket?.write(\"\", () => l.resolve())\n    return l.promise\n  }\n\n  readonly #mkSocket = rateLimited({\n    f: async () => {\n      try {\n        const s = (this.socket = createConnection({\n          host: this.host,\n          port: this.port\n        }))\n        s.on(\"close\", () => {\n          this.socket = undefined\n        })\n        s.on(\"error\", (error: any) => {\n          consoleLogger().warn(\"Error from logging server\", error)\n          try {\n            s.end()\n          } catch {\n            //\n          }\n        })\n      } catch (error) {\n        consoleLogger().warn(\"Failed to connect to the log server\", error)\n      }\n    },\n    minCallDelayMs: minuteMs,\n    name: \"#mkSocket\"\n  })\n}\n","export const DefaultLogFlushMs = 250\n","import { join } from \"path\"\nimport { fmtIsoDate } from \"../../fe/Date\"\nimport { Settings } from \"../settings/Settings\"\n\nexport function datedLogDir(logDir?: string, date?: Date): string {\n  return join(\n    logDir ?? Settings.logDir.valueOrDefault,\n    fmtIsoDate(date ?? new Date())\n  )\n}\n","import { sortByInPlace } from \"../../fe/ArraySort\"\nimport { isNumber } from \"../../fe/Number\"\nimport { isString } from \"../../fe/String\"\nimport { LogLevel, LogLevels } from \"./LogLevel\"\n\n/**\n * field names are abbreviated as they are encoded in JSON on disk.\n */\nexport interface LogEntry {\n  /**\n   * timestamp\n   */\n  ts: number\n  /**\n   * log level\n   */\n  l: LogLevel\n  /**\n   * context\n   */\n  ctx: string\n  /** message */\n  msg: string\n  meta?: any\n  from?: string\n}\n\nexport function isLogEntry(ea: any): ea is LogEntry {\n  return (\n    ea != null &&\n    isNumber(ea?.ts) &&\n    isString(ea?.msg) &&\n    LogLevels.includes(ea.l)\n  )\n}\n\nexport function logEntrySorter(ea: LogEntry) {\n  return ea?.ts\n}\n\nexport function sortLogEntriesInPlace(arr: LogEntry[]) {\n  sortByInPlace(arr, ea => ea.ts)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { levelIndex, LogLevel, LogLevels } from \"./LogLevel\"\n\nexport interface LogFilter {\n  highlight(context: string): boolean\n\n  /**\n   * @return true iff the given level and context are not configured to be\n   * squelched/omitted from downstream log writers.\n   */\n  enabled(level: LogLevel, context?: string): boolean\n  /**\n   * The level index that is enabled by default (ignoring context-specific overrides)\n   */\n  readonly defaultLevelIndex: number\n  silent: boolean\n}\n\nexport class SimpleLogFilter implements LogFilter {\n  readonly defaultLevelIndex\n  constructor(readonly minLogLevel: LogLevel) {\n    this.defaultLevelIndex = levelIndex(minLogLevel)\n  }\n  highlight() {\n    return false\n  }\n  enabled(level: LogLevel) {\n    // fatal < error < info < debug < trace\n    return levelIndex(level) <= this.defaultLevelIndex\n  }\n  silent = false\n}\n\nexport const LogLevelRe = /^(?:(.+?):)?(fatal|error|warn|info|debug|trace)$/i\n\nexport interface LogLevelContext {\n  prefix: string\n  levelIndex: number\n}\n\n// Replaced with a LogFilterImpl at log setup time (to avoid a dependency loop)\nexport const logFilter = lazy<LogFilter>(\n  () => new SimpleLogFilter(LogLevels.warn)\n)\n\n// set to watch Settings.logLevel by SetupLogger:\nexport const defaultLogLevel = lazy(\n  () => LogLevels.values[logFilter().defaultLevelIndex]\n)\n\nexport function isDefaultLogLevelAtLeast(logLevel: LogLevel) {\n  return logFilter().defaultLevelIndex >= levelIndex(logLevel)\n}\n\nexport function silently<T>(f: () => T): T {\n  try {\n    logFilter().silent = true\n    return f()\n  } finally {\n    logFilter().silent = false\n  }\n}\n\nexport async function silentlyAsync<T>(f: () => PromiseLike<T>): Promise<T> {\n  try {\n    logFilter().silent = true\n    return await f()\n  } finally {\n    logFilter().silent = false\n  }\n}\n\n/**\n * Apply `f()` if the given logLevel is enabled.\n */\nexport function ifLog<T>(logLevel: LogLevel, f: () => T): Maybe<T> {\n  return logFilter().enabled(logLevel) ? f() : undefined\n}\n\nexport function isLogged(logLevel: LogLevel, context?: string) {\n  return logFilter().enabled(logLevel, context)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { Settings } from \"../settings/Settings\"\nimport { StringSetting } from \"../settings/StringSetting\"\nimport { LogFilter, LogLevelContext, LogLevelRe } from \"./LogFilter\"\nimport { LogLevel, LogLevels, levelIndex } from \"./LogLevel\"\n\nexport class LogFilterImpl implements LogFilter {\n  silent = false\n  defaultLevelIndex!: number\n  private readonly contexts: LogLevelContext[] = []\n\n  /**\n   * Parse out directives like LOG=ExifTag:debug,FileIterator:info,warn\n   */\n  constructor(readonly setting: StringSetting = Settings.logLevel) {\n    setting.watch(() => this.#setup.refresh())\n  }\n\n  readonly #setup = lazy(() => {\n    this.contexts.length = 0\n    const logLevel = this.setting.valueOrDefault\n    this.defaultLevelIndex =\n      LogLevels.indexOf(logLevel) ??\n      LogLevels.indexOf(this.setting.defaultValue) ??\n      LogLevels.indexOf(LogLevels.warn)!\n    const arr = compactBlanks(logLevel.split(/[,;]/))\n    for (const ea of arr) {\n      const match = LogLevelRe.exec(ea.trim())\n      if (match == null) {\n        console.error(\"LogFilterImpl: Ignoring '\" + ea + \"' from \" + logLevel)\n      } else {\n        const prefix = toS(match[1]).toLowerCase()\n        const idx = levelIndex(match[2])\n        if (blank(prefix)) {\n          this.defaultLevelIndex = idx\n        } else {\n          this.contexts.push({ prefix, levelIndex: idx })\n        }\n      }\n    }\n  })\n\n  private contextOverride(context?: string): Maybe<LogLevelContext> {\n    if (context == null || this.contexts.length === 0 || blank(context)) return\n    const s = toS(context).toLowerCase()\n    return this.contexts.find(ea => s.startsWith(ea.prefix))\n  }\n\n  enabled(level: LogLevel, context?: string): boolean {\n    if (this.silent) return false\n    const li = levelIndex(level)\n\n    // PERF: unrolled from Opt\n    if (context != null) {\n      const co = this.contextOverride(context)\n      if (co != null) {\n        return li <= co.levelIndex\n      }\n    }\n    return li <= this.defaultLevelIndex\n  }\n\n  highlight(context: string): boolean {\n    // PERF: unrolled from Opt\n    const co = this.contextOverride(context)\n    return co != null && co.levelIndex >= this.defaultLevelIndex\n  }\n}\n","import { secondMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte } from \"../../fe/Number\"\nimport { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\n/**\n * These are driven by the `console` API\n */\nexport const LogLevels = strEnum(\n  \"fatal\",\n  \"error\",\n  \"warn\",\n  \"info\",\n  \"debug\",\n  \"trace\"\n)\nexport type LogLevel = StrEnumKeys<typeof LogLevels>\n\nconst TraceLevelIndex = LogLevels.indexOf(\"trace\")!\n\nexport function levelIndex(logLevel: string): number {\n  return (\n    LogLevels.indexOf(logLevel) ??\n    LogLevels.indexOf(logLevel.trim().toLowerCase()) ??\n    TraceLevelIndex\n  )\n}\n\nexport function levelGte(lhs: LogLevel | string, rhs: LogLevel | string) {\n  return gte(LogLevels.indexOf(lhs), LogLevels.indexOf(rhs))\n}\n\n// https://en.wikipedia.org/wiki/Syslog#Severity_level\nconst LogLevel2SyslogLevel = new Map<LogLevel, number>([\n  [LogLevels.fatal, 1],\n  [LogLevels.error, 3],\n  [LogLevels.warn, 4],\n  [LogLevels.info, 6],\n  [LogLevels.debug, 7]\n])\n\nexport function level2syslog(logLevel: string): Maybe<number> {\n  return LogLevel2SyslogLevel.get(logLevel as any)\n}\n\nexport function msTolevel(\n  elapsedMs: number,\n  errorMs: number = 7 * secondMs\n): LogLevel {\n  return elapsedMs >= errorMs\n    ? \"error\"\n    : elapsedMs >= errorMs / 2\n    ? \"warn\"\n    : elapsedMs >= errorMs / 4\n    ? \"info\"\n    : \"debug\"\n}\n","import { isNotEmpty } from \"../../fe/Array\"\nimport { keys } from \"../../fe/Object\"\nimport { isPromiseLike } from \"../../fe/Promise\"\nimport { ellipsize, isString } from \"../../fe/String\"\nimport { isError } from \"../../fe/isError\"\nimport { diff } from \"../Array\"\nimport { mapNullEntries } from \"../Object\"\nimport { errorToVerbose } from \"../error/Error\"\nimport { Settings } from \"../settings/Settings\"\nexport const PromisePlaceholder = \"(promise)\"\n\n/**\n * Prepare a log entry's `meta` for serialization\n */\nexport function prepMeta(meta: any, levels = 4): any {\n  if (meta == null) {\n    return null // <- util.inspect removes `undefined` object key/value pairs\n  }\n  if (levels < 0) return \"…\"\n  // If it's a primitive, we're done:\n  if (isString(meta) || Buffer.isBuffer(meta)) {\n    return ellipsize(meta.toString(), 256, 32)\n  }\n  if (isError(meta)) {\n    return errorToVerbose(meta)\n  }\n  if (Array.isArray(meta)) {\n    const limit = Settings.logContextLimit.valueOrDefault\n    const len = Math.floor(limit / 2)\n    return meta.length <= limit\n      ? meta\n      : [\n          ...meta.slice(0, len).map(ea => prepMeta(ea, levels - 1)),\n          `… (${meta.length} total entries)`,\n          ...meta.slice(-len).map(ea => prepMeta(ea, levels - 1))\n        ]\n  }\n  // lazy() returns a function!\n  if (typeof meta === \"object\" || typeof meta === \"function\") {\n    for (const meth of [\"toLogJSON\", \"toJSON\"]) {\n      if (typeof meta[meth] === \"function\") {\n        return prepMeta(meta[meth](), levels - 1)\n      }\n    }\n    if (isPromiseLike(meta)) {\n      // Deferred and Latch already have a toLogJSON, so meta must not be\n      // something from us.\n      return PromisePlaceholder\n    }\n\n    // Have we already truncated this object?\n    if (\"…\" in meta) return meta\n\n    const result = mapNullEntries(\n      meta,\n      (_, v) => prepMeta(v, levels - 1),\n      Settings.logContextLimit.valueOrDefault\n    )\n\n    const omittedKeys = diff(keys(meta), keys(result))\n    if (isNotEmpty(omittedKeys)) {\n      result[\"…\"] = \"omitted: \" + ellipsize(omittedKeys.join(\", \"), 128, 32)\n    }\n    return result\n  }\n\n  // Otherwise give up:\n  return meta\n}\n","import { createReadStream, ReadStream } from \"fs\"\nimport { createBrotliDecompress, createGunzip } from \"zlib\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { stripCopySuffixFromName } from \"../fs/FuzzyNames\"\nimport { isExtOrCompressedExt } from \"../fs/Gzip\"\nimport { LineReader } from \"../fs/LineReader\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { SortedSet } from \"../SortedSet\"\nimport { LogEntry, logEntrySorter } from \"./LogEntry\"\nimport { chunkToLogEntry } from \"./ReadLogEntries\"\n\n// Lines were out of order on speedy with 128, and seemed OK at 512.\nconst LowWatermark = 1024\nconst HighWatermark = LowWatermark * 10\n\nexport class LogReader {\n  readonly start = Date.now()\n  readonly lines = new SortedSet<LogEntry>(logEntrySorter)\n  private readonly fileStream: ReadStream\n  private readonly stream: LineReader\n  private readonly from: string\n  #ended = false\n  #paused = false\n  #hasErrors = false\n\n  constructor(\n    readonly f: SimpleFile,\n    errorHandler: (error: Error) => any\n  ) {\n    this.from = stripCopySuffixFromName(f.name)\n    this.fileStream = createReadStream(f.nativePath, { autoClose: true })\n    if (!isExtOrCompressedExt(f.ext, \".log\")) {\n      throw new Error(f + \" is not a logfile\")\n    }\n    this.stream = (\n      f.ext.toLowerCase().endsWith(\".gz\")\n        ? this.fileStream.pipe(createGunzip())\n        : f.ext.toLowerCase().endsWith(\".br\")\n        ? this.fileStream.pipe(createBrotliDecompress())\n        : this.fileStream\n    )\n      .pipe(new LineReader())\n      .on(\"error\", err => {\n        errorHandler(err)\n        this.#hasErrors = true\n      })\n    this.stream.on(\"data\", this.#onData.bind(this))\n    this.stream.on(\"close\", () => {\n      this.fileStream.resume()\n      this.#ended = true\n    })\n    this.stream.on(\"end\", () => {\n      this.#ended = true\n    })\n  }\n\n  #onData(chunk: string) {\n    if (chunk === null) {\n      this.#ended = true\n    } else {\n      const le = chunkToLogEntry(chunk)\n      if (le != null) {\n        this.lines.add({ ...le, from: this.from } as LogEntry)\n      }\n      if (this.lines.length > HighWatermark && !this.#paused) {\n        this.fileStream.pause()\n        this.#paused = true\n      }\n    }\n  }\n\n  toString() {\n    return \"LogReader(\" + this.f.nativePath + \")\"\n  }\n\n  status() {\n    return {\n      hasErrors: this.#hasErrors,\n      ended: this.#ended,\n      destroyed: this.stream.destroyed,\n      lines: this.lines.length,\n      paused: this.#paused\n    }\n  }\n\n  hasErrors() {\n    return this.#hasErrors\n  }\n\n  get ended() {\n    return this.#ended\n  }\n\n  ready() {\n    return this.ended || this.lines.length > 32\n  }\n\n  complete() {\n    return this.ended && this.lines.length === 0\n  }\n\n  peek(): Maybe<LogEntry> {\n    return this.ready() ? this.lines.store[0] : undefined\n  }\n\n  shift() {\n    const result = this.lines.store.shift()\n    if (result != null) this.#onShift()\n    return result\n  }\n\n  shiftLte(ts: number) {\n    const result = this.lines.shiftLte(ts)\n    if (result.length > 0) this.#onShift()\n    return result\n  }\n\n  #onShift() {\n    if (this.lines.length < LowWatermark && this.#paused) {\n      this.fileStream.resume()\n      this.#paused = false\n    }\n  }\n}\n","import { FSWatcher, watch } from \"fs\"\nimport { join, sep } from \"path\"\nimport { pid, stdout } from \"process\"\nimport { clearInterval, setInterval } from \"timers\"\nimport { lazy } from \"../../core/Lazy\"\nimport { notBlank, notBlankOr } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { getOrSet } from \"../../fe/Map\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte } from \"../../fe/Primitive\"\nimport { thenMap } from \"../../fe/Promise\"\nimport { isTest } from \"../NodeEnv\"\nimport { serviceName } from \"../ServiceNames\"\nimport { consoleError, consoleLog } from \"../Stdout\"\nimport { stdoutEnded } from \"../StdoutEnded\"\nimport { TTLSet } from \"../TTLSet\"\nimport { EndableRanks, ending } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { Promises } from \"../async/Promises\"\nimport { nowish } from \"../date/Date\"\nimport { errorToS } from \"../error/Error\"\nimport { DirectoryEntry } from \"../fs/DirectoryEntry\"\nimport { mkdirp_ } from \"../fs/Path\"\nimport { Settings } from \"../settings/Settings\"\nimport { readSystemSettings } from \"../settings/SettingsIO\"\nimport { DefaultLogFormatter } from \"./DefaultLogFormatter\"\nimport { DefaultLogFlushMs } from \"./LogCommon\"\nimport { datedLogDir } from \"./LogDir\"\nimport { LogEntry } from \"./LogEntry\"\nimport { ifLog } from \"./LogFilter\"\nimport { LogLevels } from \"./LogLevel\"\nimport {\n  popExpiredLogEntries,\n  pushLogEntries,\n  setLogTailEnabled\n} from \"./LogTailEntries\"\nimport { readLogEntries } from \"./ReadLogEntries\"\n\nexport function DefaultLogEntryWriter(arr: LogEntry[]) {\n  const f = DefaultLogFormatter()\n  for (const ea of arr) {\n    consoleLog(f.formatLogEntry(ea))\n  }\n}\n\n/**\n * Tail all PhotoStructure✱/log/✱✱/✱.log files.\n */\nexport class LogTail extends EndableWrapper {\n  static readonly instance = lazy(() => {\n    return stdoutEnded() ? undefined : new LogTail()\n  })\n  private root!: DirectoryEntry\n  private watchers: Map<string, FSWatcher> = new Map()\n  private flushTimeout?: NodeJS.Timeout\n  private scanTimeout?: NodeJS.Timeout\n  private ignorableFilename: string\n  private readonly filenameMutexes = new Promises(\"log.LogTail\", () => 8)\n\n  private readonly file2pos = new Map<string, number>()\n  private readonly lastReadFiles = new TTLSet<string>(5 * secondMs)\n\n  constructor(\n    readonly rootNativePath: Maybe<string> = undefined,\n    readonly writer = DefaultLogEntryWriter\n  ) {\n    super(\"LogTail\", () => this.close(), EndableRanks.logtail)\n    this.ignorableFilename = sep + serviceName() + \"-\" + pid + \"-\"\n    if (stdout.writableFinished) return\n\n    setLogTailEnabled(true)\n    // Not an unref'ed interval, so logtail doesn't exit:\n    this.flushTimeout = setInterval(() => this.flush(), DefaultLogFlushMs / 2)\n    this.scanTimeout = setInterval(() => this.scan(), minuteMs)\n    stdout.on(\"end\", () => this.end())\n    void this.setup()\n  }\n\n  readonly setup = lazy(async () => {\n    await readSystemSettings()\n    const logdir = notBlankOr(\n      this.rootNativePath,\n      Settings.logDir.valueOrDefault\n    )\n    if (isTest) consoleLog(\"tailing \" + logdir + \"...\")\n    await mkdirp_(logdir)\n    this.root = (await DirectoryEntry.for(logdir))!\n    await this.scan(true)\n  })\n\n  async flush() {\n    this.writer(popExpiredLogEntries())\n  }\n\n  private readable(nativePath: string) {\n    return (\n      // Don't tail .gz files: they're never updated.\n      nativePath.endsWith(\".log\") &&\n      !nativePath.includes(this.ignorableFilename)\n    )\n  }\n\n  private watchDir(dir: string) {\n    if (ending() || this.ended) return\n    getOrSet(this.watchers, dir, () => {\n      ifLog(LogLevels.debug, () => consoleLog(\"LogTail(): watching \" + dir))\n      try {\n        return watch(dir, (event: string, filename: string | null) => {\n          if (notBlank(filename)) {\n            void this.watchListener(event, join(dir, filename))\n          }\n        })\n      } catch (err) {\n        ifLog(LogLevels.warn, () =>\n          consoleError(\"LogTail(): failed to read \" + dir, err)\n        )\n        return\n      }\n    })\n  }\n\n  async scan(firstTime = false) {\n    if (ending() || this.ended) return\n    // scan through logs and set the position for all current entries:\n    await this.root.visitDescendants(async ea => {\n      if (!this.readable(ea.nativePath)) return\n      if (firstTime) {\n        await thenMap(ea.size(), size => this.file2pos.set(ea.nativePath, size))\n      }\n      if (nowish(await ea.mtimeMs(), 5 * minuteMs)) {\n        this.watchDir(ea.dir)\n      }\n    })\n    if (ending() || this.ended) return\n    const currentLogDir = datedLogDir(this.root.nativePath)\n    try {\n      // if they start logtail before anything else, we want to see those new\n      // files:\n      await mkdirp_(currentLogDir)\n      this.watchDir(currentLogDir)\n    } catch (err) {\n      ifLog(LogLevels.warn, () =>\n        consoleError(\n          \"LogTail(): Failed to list or mkdir -p \" +\n            currentLogDir +\n            \": there may be permission issues.\",\n          err\n        )\n      )\n    }\n    if (ending() || this.ended) return\n    if (firstTime) {\n      consoleLog(\"LogTail(): Tailing \" + this.root + \"/**/*.log...\")\n    }\n  }\n\n  private async close() {\n    setLogTailEnabled(false)\n    map(this.flushTimeout, clearInterval)\n    this.flushTimeout = undefined\n    map(this.scanTimeout, clearInterval)\n    this.scanTimeout = undefined\n    for (const ea of this.watchers.values()) {\n      ea.close()\n    }\n    this.watchers.clear()\n    for (const ea of this.lastReadFiles) {\n      await this.watchListener(\"onEnd\", ea)\n    }\n    try {\n      this.writer(popExpiredLogEntries(-1))\n    } catch (error) {\n      console.warn(\"failed to flush last log entries\", error)\n    }\n  }\n\n  private async watchListener(event: string, filename: string) {\n    if (!this.readable(filename) || event === \"rename\") {\n      return\n    }\n    await this.filenameMutexes.serial(filename, async () => {\n      try {\n        const f = await DirectoryEntry.for(filename)\n        if (f == null) {\n          // file was deleted or compressed. DON'T FREAK OUT.\n          return\n        }\n        // if (!nowish(await f.mtimeMs(), 10 * minuteMs)) return // old file\n        const currentSize = await f.size()\n        if (currentSize == null || currentSize <= 0) {\n          // consoleError(\"watchListener: empty file\", { event, filename })\n          return\n        }\n        const priorSize = this.file2pos.get(f.nativePath) ?? 0\n        if (gte(priorSize, currentSize)) return\n        await thenMap(\n          readLogEntries(f, { start: priorSize, end: currentSize }),\n          arr => pushLogEntries(...arr)\n        )\n        this.lastReadFiles.add(f.nativePath)\n        // If gzip reading fails, don't update current size:\n        this.file2pos.set(f.nativePath, currentSize)\n      } catch (err) {\n        ifLog(LogLevels.warn, () =>\n          consoleError(\"Failed to read \" + filename + \": \" + errorToS(err))\n        )\n      }\n    })\n    return\n  }\n}\n","import { SortedSet } from \"../SortedSet\"\nimport { stdoutEnded } from \"../StdoutEnded\"\nimport { DefaultLogFormatter } from \"./DefaultLogFormatter\"\nimport { DefaultLogFlushMs } from \"./LogCommon\"\nimport { LogEntry, logEntrySorter } from \"./LogEntry\"\n\n// Separated from LogTail to break dependency loops\n\nlet _logTailEnabled = false\n\nexport function logTailEnabled() {\n  return _logTailEnabled\n}\n\nexport function setLogTailEnabled(b: boolean) {\n  _logTailEnabled = b\n}\n\nexport const logEntries = new SortedSet<LogEntry>(logEntrySorter)\n\n// WTH, AMIRITE? ConsoleLogger calls this method. If we're not tailing logs,\n// we don't need to order our log entries correctly, and can just console.log\n// immediately.\n\nexport function pushLogEntries(...arr: LogEntry[]) {\n  // PERF: for loop instead of .forEach\n  for (const ea of arr) {\n    // don't use Settings.logTail:\n    if (_logTailEnabled) {\n      logEntries.add(ea)\n    } else {\n      // if stdout is closed, don't try to write to it!\n      if (!stdoutEnded()) {\n        console.log(DefaultLogFormatter().formatLogEntry(ea))\n      }\n    }\n  }\n}\n\n/**\n * @param ttl if zero, pop everything (we're shutting down)\n */\nexport function popExpiredLogEntries(ttl = DefaultLogFlushMs * 2) {\n  return logEntries.shiftLte(Date.now() - ttl)\n}\n","import _fs from \"fs\"\nimport { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { nextMidnightTs, secondMs } from \"../../fe/Date\"\nimport { delay } from \"../../fe/Delay\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { Thunk } from \"../../fe/Thunk\"\nimport { RateLimited, rateLimited } from \"../RateLimited\"\nimport { processName } from \"../ServiceNames\"\nimport { stripAnsiEsc } from \"../String\"\nimport { EndableRanks } from \"../async/Endable\"\nimport { EndableInterval } from \"../async/EndableInterval\"\nimport { ensureNewNativePath_ } from \"../fs/EnsureNew\"\nimport { gzip_ } from \"../fs/Gzip\"\nimport { endStream } from \"../fs/Streams\"\nimport { Settings } from \"../settings/Settings\"\nimport { ConsoleLogger } from \"./ConsoleLogger\"\nimport { DefaultLogFlushMs } from \"./LogCommon\"\nimport { datedLogDir } from \"./LogDir\"\nimport { LogEntry } from \"./LogEntry\"\nimport { LogFilter, logFilter } from \"./LogFilter\"\nimport { ContextProvider } from \"./LogFormatter\"\nimport { LogLevel } from \"./LogLevel\"\nimport { prepMeta } from \"./LogMeta\"\nimport { SimpleLogger } from \"./Logger\"\nimport { clearRecentLogEntries, recentLogEntries } from \"./RecentLogs\"\n\nexport class CaptureLogger implements SimpleLogger {\n  readonly logEntries: LogEntry[] = []\n  log(level: LogLevel, context: string, message: string, meta?: any) {\n    this.logEntries.push({\n      ts: Date.now(),\n      l: level,\n      ctx: context,\n      msg: message,\n      meta\n    })\n  }\n\n  enabled() {\n    return true\n  }\n\n  end() {\n    // no-op\n  }\n\n  async flush() {\n    // no-op\n  }\n}\n\nexport interface LogWriterOptions extends ContextProvider {\n  maxLinesPerFile: number\n  errorLogger: SimpleLogger\n  flushEveryMs: number\n  logFilter?: Thunk<LogFilter>\n}\n\ninterface Logfile {\n  stream: NodeJS.WritableStream\n  nativePath: string\n}\n\nfunction defaultLogWriterOptions(): Required<LogWriterOptions> {\n  return {\n    maxLinesPerFile: 250000, // ~ 10-20 Mb\n    errorLogger: ConsoleLogger.instance(),\n    flushEveryMs: DefaultLogFlushMs,\n    processName: processName,\n    logFilter: logFilter\n  }\n}\n\n/**\n * Writes to logDir/YYYY-MM-DD/name-00N.log\n */\nexport class LogWriter extends EndableInterval implements SimpleLogger {\n  private readonly logOpts: Required<LogWriterOptions>\n  private readonly pendingWrites: LogEntry[] = []\n  private _linesSinceRotate: number = 0\n  private _nextForcedRotateTs = nextMidnightTs()\n  private _logfile: Maybe<Logfile>\n\n  readonly flush: RateLimited<void>\n\n  private _startIndex = 0\n\n  // gzipping the logfiles should not take longer than 10 seconds (assuming logs\n  // are on fast local disk)\n  readonly endTimeoutMs = 15 * secondMs\n\n  constructor(\n    readonly logDir: string,\n    options: Partial<LogWriterOptions> = {}\n  ) {\n    super({\n      name: \"LogWriter(\" + logDir + \")\",\n      callback: () => this.flush(),\n      intervalMs: Math.round(options.flushEveryMs ?? DefaultLogFlushMs * 1.25),\n      rank: EndableRanks.logger\n    })\n    this.logOpts = {\n      ...defaultLogWriterOptions(),\n      ...options\n    }\n    this.onEnds.push(() => this.#end())\n    this.setIntervalMs(this.logOpts.flushEveryMs)\n\n    this.flush = rateLimited({\n      name: \"LogWriter.flush()\",\n      minCallDelayMs: this.logOpts.flushEveryMs,\n      f: () => this.#flush()\n    })\n  }\n\n  toJSON() {\n    return {\n      _ctor: \"LogWriter\",\n      logDir: this.logDir\n    }\n  }\n\n  enabled(level: LogLevel, context?: string): boolean {\n    return this.logOpts.logFilter().enabled(level, context)\n  }\n\n  log(level: LogLevel, context: string, msg: string, meta?: any) {\n    if (this.enabled(level, context)) {\n      if (this.ended && level === \"error\") {\n        // If it's bad, send the message someplace, at least.\n        this.logOpts.errorLogger.log(level, context, msg, meta)\n      } else {\n        const entry: LogEntry = { ts: Date.now(), l: level, ctx: context, msg }\n        if (meta != null) entry.meta = prepMeta(meta)\n        if (level === \"error\") {\n          // If we push entry before this, the recentLogEntries show out of order:\n          this.writeRecentLogEntries()\n        }\n        this.pendingWrites.push(entry)\n      }\n    }\n  }\n\n  // must not be async (so this.log can stay sync)\n  writeRecentLogEntries() {\n    this.pendingWrites.push(...recentLogEntries())\n    // we don't want to write these entries more than once:\n    clearRecentLogEntries()\n  }\n\n  readonly #end = lazy(async () => {\n    await this.flush.force()\n    return this.#closeCurrent()\n  })\n\n  shouldRotate() {\n    return (\n      this._logfile == null ||\n      this._linesSinceRotate >= this.logOpts.maxLinesPerFile ||\n      Date.now() >= this._nextForcedRotateTs\n    )\n  }\n\n  async #flush() {\n    const toFlush = [...this.pendingWrites]\n    this.pendingWrites.length = 0\n    while (toFlush.length > 0) {\n      if (this.shouldRotate()) await this.#rotate()\n      const stream = this._logfile?.stream\n      if (stream == null) {\n        this.logOpts.errorLogger.log(\n          \"error\",\n          \"LogWriter.flush()\",\n          \"this._rotate() returned an empty stream\"\n        )\n        return\n      }\n      const remainingCapacity = clamp(\n        0,\n        toFlush.length,\n        this.logOpts.maxLinesPerFile - this._linesSinceRotate\n      )\n\n      const lines = toFlush.splice(0, remainingCapacity)\n\n      this._linesSinceRotate += lines.length\n      stream.write(lines.map(ea => stringify(ea) + \"\\n\").join(\"\"))\n    }\n    return\n  }\n\n  #onError(source: string, error: any) {\n    this.logOpts.errorLogger.log(\"error\", \"Caught error from \" + source, error)\n  }\n\n  #errback(source: string) {\n    return (error: any) => {\n      this.#onError(source, error)\n      return this.#closeCurrent()\n    }\n  }\n\n  // Must only be called by this._flush()\n  async #rotate(): Promise<void> {\n    await this.#closeCurrent()\n    const name = stripAnsiEsc(this.logOpts.processName())\n    const nativePath = await ensureNewNativePath_({\n      nativePath: join(datedLogDir(this.logDir), name + \".log\"),\n      emptyIsNew: true,\n      startIndex: ++this._startIndex,\n      requireNumber: true,\n      leftPad: 3 // we're in trouble if we're writing more than 100 log files a day.\n    })\n    const stream = _fs\n      .createWriteStream(nativePath)\n      .on(\"error\", this.#errback(\"file write stream\"))\n    this._logfile = { stream, nativePath }\n    this._nextForcedRotateTs = nextMidnightTs()\n  }\n\n  async #closeCurrent() {\n    // not this.end(), because we don't want to flush:\n    const prior = this._logfile\n    this._logfile = undefined\n    this._linesSinceRotate = 0\n\n    if (prior != null) {\n      try {\n        await endStream(prior.stream)\n        if (Settings.logCompression.valueOrDefault) {\n          // let logtail see the result of the file:\n          await delay(this.logOpts.flushEveryMs)\n          await gzip_(prior.nativePath)\n        }\n      } catch (err) {\n        this.#onError(\"_closeCurrent()\", err)\n      }\n    }\n  }\n}\n","import { inspect, InspectOptions } from \"util\"\nimport { compactBlanks } from \"../../fe/Array\"\nimport { map } from \"../../fe/Maybe\"\nimport { fromEntries } from \"../../fe/Object\"\nimport { toS } from \"../../fe/toS\"\nimport { processName } from \"../ServiceNames\"\nimport { rightPad, stripAnsiEsc } from \"../String\"\nimport { LogEntry } from \"./LogEntry\"\nimport { LogFormatter } from \"./LogFormatter\"\nimport { LogLevel, LogLevels } from \"./LogLevel\"\n\nexport class PlaintextLogFormatter implements LogFormatter {\n  constructor(\n    readonly inspectOptions: InspectOptions = {\n      colors: false,\n      depth: 4,\n      compact: true,\n      customInspect: true\n    }\n  ) {}\n\n  readonly paddedLogLevels = fromEntries(\n    LogLevels.values.map(ea => [ea, rightPad(ea, 5, \" \")])\n  )\n\n  formatLogEntry(le: LogEntry): string {\n    return compactBlanks([\n      new Date(le.ts).toISOString(),\n      le.from ?? processName(),\n      this.paddedLogLevels[le.l],\n      stripAnsiEsc(le.ctx),\n      stripAnsiEsc(le.msg),\n      map(le.meta, ea => inspect(ea, this.inspectOptions))\n    ])\n      .map(ea => toS(ea))\n      .join(\" \")\n  }\n\n  format(\n    level: LogLevel,\n    context: string,\n    message: string,\n    meta?: any\n  ): string {\n    return this.formatLogEntry({\n      ts: Date.now(),\n      l: level,\n      from: processName(),\n      ctx: context,\n      msg: message,\n      meta\n    })\n  }\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { stripCopySuffixFromName } from \"../fs/FuzzyNames\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { zcat } from \"../fs/zcat\"\nimport { LogEntry, isLogEntry } from \"./LogEntry\"\n\nexport async function readLogEntries(\n  f: SimpleFile,\n  options?: { start?: number; end?: number }\n): PromiseMaybe<LogEntry[]> {\n  const from = stripCopySuffixFromName(f.name)\n  const result: LogEntry[] = []\n  const buf = await zcat(f.nativePath, options)\n  if (buf != null) {\n    for (const line of splitLines(buf)) {\n      const le = chunkToLogEntry(line)\n      if (le != null) result.push({ ...le, from })\n    }\n  }\n  return result\n}\n\nexport function chunkToLogEntry(chunk: any): Maybe<LogEntry> {\n  if (blank(chunk)) return\n  try {\n    const le = JSON.parse(chunk)\n    return isLogEntry(le) ? le : undefined\n  } catch (error) {\n    return\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { fromEntries, values } from \"../../fe/Object\"\nimport { BoundedList } from \"../BoundedList\"\nimport { LogEntry } from \"./LogEntry\"\nimport { LogLevel, LogLevels } from \"./LogLevel\"\n\nexport const SentLogLevels = lazy(() =>\n  LogLevels.values.filter(ea => ea !== LogLevels.trace)\n)\n\nconst MaxPerLevel = 48\n\n// https://github.com/Microsoft/TypeScript/issues/24220#issuecomment-449325451\ntype Level2Recent = { [l in LogLevel]: BoundedList<LogEntry> }\n\n/**\n * These are log entries that were *not* written to the log file (but will be\n * interesting if we want to \"send recent logs\".\n *\n * They are flushed to the logfile by log.error or by calling\n * writeRecentLogEntries()\n */\nconst recentLogEntriesByLevel = lazy<Level2Recent>(() =>\n  fromEntries(\n    SentLogLevels().map(ea => [ea, new BoundedList<LogEntry>(MaxPerLevel)])\n  )\n)\n\nexport function clearRecentLogEntries() {\n  values(recentLogEntriesByLevel()).forEach(ea => ea.clear())\n}\n\nexport function addRecentLogEntry(le: LogEntry) {\n  recentLogEntriesByLevel()[le.l]?.push(le)\n}\n\nexport function recentLogEntries() {\n  const arr: LogEntry[] = []\n  for (const bl of values(recentLogEntriesByLevel())) {\n    arr.push(...bl.toA())\n  }\n  return sortBy(arr, ea => ea.ts)\n}\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { map } from \"../../fe/Maybe\"\nimport { setColorEnabled } from \"../Chalk\"\nimport { rootLoggers } from \"../Logger\"\nimport { end } from \"../async/Endable\"\nimport { cacheDir } from \"../dir/CacheDir\"\nimport { logDir } from \"../dir/LogDir\"\nimport { env } from \"../env/Env\"\nimport { isEnvTrue } from \"../env/GetEnv\"\nimport { writeTextfile_ } from \"../fs/WriteFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { ColoredLogFormatter } from \"./ColoredLogFormatter\"\nimport { ConsoleLogger } from \"./ConsoleLogger\"\nimport { currentFileLogger } from \"./CurrentFileLogger\"\nimport { DefaultLogFormatter } from \"./DefaultLogFormatter\"\nimport { logBroadcaster } from \"./LogBroadcaster\"\nimport { defaultLogLevel, logFilter } from \"./LogFilter\"\nimport { LogFilterImpl } from \"./LogFilterImpl\"\nimport { LogTail } from \"./LogTail\"\nimport { LogWriter } from \"./LogWriter\"\nimport { SimpleLogger } from \"./Logger\"\nimport { PlaintextLogFormatter } from \"./PlaintextLogFormatter\"\n\nconst readme = `PhotoStructure writes logfiles to this directory.\n\nAlthough you _can_ directly read these .json files, you don't need to!\n\nUse PhotoStructure's \"logcat\" and \"logtail\" tools to merge and pretty-print these files.\n\nSee https://photostructure.com/server/tools/#logging for details.\n`\n\nexport const setupLogger = lazy(() => {\n  if (!(logFilter() instanceof LogFilterImpl)) {\n    logFilter.set(new LogFilterImpl())\n  }\n  setupLogFormatter()\n\n  const dir = logDir()\n  let fl = currentFileLogger()\n  if (fl == null || fl.logDir !== dir) {\n    void end(fl)\n    void writeTextfile_(join(dir, \"README.txt\"), readme).catch(() => null)\n    fl = new LogWriter(dir)\n  }\n  const loggers: SimpleLogger[] = [fl]\n  const pushConsoleLogger =\n    isEnvTrue(\"logStdout\") ||\n    Settings.logStdout.valueOrDefault ||\n    Settings.tailLogs.valueOrDefault\n\n  if (pushConsoleLogger) {\n    loggers.push(ConsoleLogger.instance())\n  }\n  map(logBroadcaster(), ea => loggers.push(ea))\n\n  rootLoggers.set(loggers)\n\n  if (Settings.tailLogs.valueOrDefault) {\n    LogTail.instance()\n  }\n\n  Settings.logLevel.watchLater(() => defaultLogLevel.unset())\n\n  setColorEnabled(Settings.logColor.valueOrDefault)\n\n  // make sure cacheDir() is set up for FileCache():\n  cacheDir()\n\n  // After we're done, then watch for later changes:\n  watchSettings()\n})\n\nexport const setupLogFormatter = lazy(() => {\n  const current = DefaultLogFormatter()\n  const currentIsColored = current instanceof ColoredLogFormatter\n  const settingIsColored =\n    env().NO_COLOR == null && Settings.logColor.valueOrDefault\n  if (currentIsColored !== settingIsColored) {\n    DefaultLogFormatter.set(\n      settingIsColored ? new ColoredLogFormatter() : new PlaintextLogFormatter()\n    )\n  }\n})\n\nconst watchSettings = lazy(() => {\n  // watch later, because this is called by setupLogger() already...\n  Settings.logStdout.watchLater(() => setupLogger.refresh())\n  Settings.logDir.watchLater(() => setupLogger.refresh())\n  Settings.tailLogs.watchLater(() => setupLogger.refresh())\n  Settings.logColor.watchLater(() => setupLogFormatter.refresh())\n})\n","// try {\n//   require(\"source-map-support\").install()\n// } catch {\n//   //\n// }\nimport { Command } from \"commander\"\nimport process from \"process\"\nimport { promises, Transform } from \"stream\"\nimport { filterInPlace, isEmpty, isNotEmpty, uniq } from \"../fe/Array\"\nimport { sortBy } from \"../fe/ArraySort\"\nimport { dayMs, minuteMs } from \"../fe/Date\"\nimport { delay } from \"../fe/Delay\"\nimport { flatten } from \"../fe/Flatten\"\nimport { map } from \"../fe/Maybe\"\nimport { Maybe } from \"../fe/MaybeTypes\"\nimport { gt0 } from \"../fe/Number\"\nimport { Obj } from \"../fe/Object\"\nimport { gt } from \"../fe/Primitive\"\nimport { ServiceNames } from \"../fe/ServiceNames\"\nimport { exit } from \"./async/Exit\"\nimport { mapAsync, thenCompact } from \"./async/Promise\"\nimport { CLI, CommandPlugin } from \"./cli/CLI\"\nimport { ColorArgs } from \"./cli/ColorArgs\"\nimport { decodeDuration } from \"./date/DurationCodec\"\nimport { BaseFile } from \"./fs/BaseFile\"\nimport { Newline } from \"./fs/CRLF\"\nimport { DirectoryEntry } from \"./fs/DirectoryEntry\"\nimport { matcherForExtOrCompressedExt } from \"./fs/Gzip\"\nimport { LineReader } from \"./fs/LineReader\"\nimport { DefaultLogFormatter } from \"./log/DefaultLogFormatter\"\nimport { LogEntry, logEntrySorter } from \"./log/LogEntry\"\nimport { LogReader } from \"./log/LogReader\"\nimport { chunkToLogEntry } from \"./log/ReadLogEntries\"\nimport { mapGt0 } from \"./Number\"\nimport { Settings } from \"./settings/Settings\"\nimport { readSystemSettings } from \"./settings/SettingsIO\"\n\nlet recentMs: number\n\nexport const Recent: CommandPlugin = {\n  beforeParse: (cmd: Command) =>\n    cmd.option(\n      `--recent [duration]`,\n      `Automatically cat recent logs. The optional \"duration\" argument can either be a number, which will be interpreted in minutes, or an ISO 8601 duration string, like \"P1D\" for 1 day, or \"PT20M\" for 20 minutes. Defaults to 1 day.`\n    ),\n  afterParse: (opts: Obj) => {\n    if (opts.recent != null) {\n      if (opts.recent === true) recentMs = dayMs\n      else\n        mapGt0(opts.recent, ea => (recentMs = ea * minuteMs)) ??\n          decodeDuration(opts.recent)\n    }\n  }\n}\n\nfunction consolelog(s: string) {\n  process.stdout.write(s + Newline)\n}\n\nasync function fileOrDir(path: string) {\n  const f = BaseFile.for(path)\n  if (await f.isFile()) {\n    return [f.nativePath]\n  } else if (await f.isDirectory()) {\n    const arr = await f.descendants(ea => ea.ext.startsWith(\".log\"))\n    return arr?.map(ea => ea.nativePath)\n  }\n  return\n}\n\nasync function run() {\n  const c = new CLI(\n    ServiceNames.logcat,\n    \"[FILE_OR_DIR...]\",\n    \"FILE_OR_DIR may be either a logfile or a directory that will be scanned for .log, .log.gz, and .log.bz files.\"\n  )\n    .add(Recent, ColorArgs)\n    .parse()\n  process.on(\"SIGINT\", () => exit({ reason: \"SIGINT\", status: 0 }))\n  process.on(\"SIGTERM\", () => exit({ reason: \"SIGTERM\", status: 0 }))\n\n  const files: string[] = uniq(\n    flatten(await mapAsync({ name: \"parseArgs\", arr: c.args, f: fileOrDir }))\n  )\n\n  if (gt0(recentMs)) {\n    const matcher = matcherForExtOrCompressedExt(\".log\")\n    await readSystemSettings()\n    const minStatMs = Date.now() - recentMs\n    await BaseFile.for(Settings.logDir.valueOrDefault).visitDescendants(\n      async ea => {\n        const maxStat = await ea.maxStatMs()\n        if (matcher(ea.ext) && (await ea.isFile()) && gt(maxStat, minStatMs))\n          files.push(ea.nativePath)\n      }\n    )\n  }\n\n  const lf = DefaultLogFormatter()\n\n  if (isEmpty(files)) {\n    if (isNotEmpty(c.args)) {\n      console.error(\n        lf.format(\"error\", \"logcat\", \"No valid logfiles were provided.\")\n      )\n      c.help()\n    }\n    consolelog(\n      lf.format(\"info\", \"logcat\", \"No log files provided: reading from stdin.\")\n    )\n    consolelog(\n      lf.format(\n        \"warn\",\n        \"logcat\",\n        \"The output will not be sorted chronologically.\"\n      )\n    )\n\n    await promises.pipeline(\n      process.stdin,\n      new LineReader(),\n      new Transform({\n        transform(chunk, _encoding, done) {\n          map(chunkToLogEntry(chunk), le =>\n            consolelog(lf.formatLogEntry({ from: \"\", ...le }))\n          )\n          done()\n        }\n      }) as any\n    )\n\n    return\n  }\n\n  const readers = await thenCompact(\n    files.map(async ea => {\n      const de = await DirectoryEntry.for(ea)\n      return de != null && gt0(await de.size())\n        ? new LogReader(de, console.error)\n        : undefined\n    })\n  )\n\n  consolelog(\n    lf.format(\n      \"debug\",\n      \"logcat\",\n      \"Reading from \",\n      readers.map(ea => ea.f.nativePath)\n    )\n  )\n\n  function vacuum() {\n    filterInPlace(readers, ea => !ea.complete())\n  }\n\n  function oldestLogEntries() {\n    let ts: Maybe<number>\n    vacuum()\n    for (const reader of readers) {\n      if (!reader.ready()) {\n        return // wait for I/O\n      }\n      const le = reader.peek()\n      if (le?.ts != null && (ts == null || le.ts < ts)) {\n        ts = le.ts\n      }\n    }\n\n    if (ts == null) return\n\n    const arr: LogEntry[] = []\n    for (const reader of readers) {\n      arr.push(...reader.shiftLte(ts))\n    }\n    return sortBy(arr, logEntrySorter)\n  }\n\n  while (readers.length > 0) {\n    try {\n      const arr = oldestLogEntries()\n      if (arr != null) {\n        for (const ea of arr) {\n          consolelog(lf.formatLogEntry(ea))\n        }\n      } else {\n        await delay(10, false)\n      }\n    } catch (err) {\n      console.error(\"caught error\", err)\n    }\n  }\n\n  // Don't exit until we've flushed the last line!\n\n  process.stdout.write(Newline, () => exit({ reason: \"\", status: 0 }))\n}\n\nvoid run()\n","import { inspect } from \"util\"\nimport { mapNotEmpty } from \"../../fe/Array\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isNumber, sigFigs } from \"../../fe/Number\"\nimport { tap } from \"../../fe/Object\"\nimport { toA } from \"../../fe/toA\"\nimport { zip } from \"../Array\"\nimport { BoundedList } from \"../BoundedList\"\nimport { CountingSet } from \"../CountingSet\"\nimport { mapGte0f } from \"../Number\"\nimport {\n  MaybeNumericList,\n  avg,\n  max,\n  min,\n  slope,\n  stdDev,\n  variance,\n  weightedAvg\n} from \"./Vector\"\n\nexport interface AverageStats {\n  k: number\n  mean?: number\n  mode?: number\n  sd?: number\n  max?: number\n  min?: number\n  sum?: number\n}\n\nexport function averageStats(vec: number[]) {\n  return new Average().pushAll(vec).stats()\n}\n\nexport class Average {\n  static merge(a: Average, b: Average): Average {\n    if (a.n === 0 && b.n === 0) {\n      return new Average(Math.max(a.maxSamples, b.maxSamples))\n    } else if (a.n === 0) {\n      return b.clone()\n    } else if (b.n === 0) {\n      return a.clone()\n    } else if (a.n <= a.maxSamples) {\n      const r = b.clone()\n      r.pushAll(a.samples)\n      return r\n    } else if (b.n <= b.maxSamples) {\n      const r = a.clone()\n      r.pushAll(b.samples)\n      return r\n    } else {\n      const r = new Average(Math.max(a.maxSamples, b.maxSamples))\n      r._n = a.n + b.n\n      r._min = Math.min(a._min!, b._min!)\n      r._max = Math.max(a._max!, b._max!)\n      r._m = (a._m! * a.n) / r.n + (b._m! * b.n) / r.n\n      r._s = (a._s! * a.n) / r.n + (b._s! * b.n) / r.n\n      const samples = flatten(zip(a.samples, b.samples))\n      r._samples.push(...samples)\n      r._weightedTotalAvg = weightedAvg([r._m, ...samples])\n      return r\n    }\n  }\n\n  protected _n: number\n  protected _min?: number\n  protected _max?: number\n  protected _m?: number\n  protected _s?: number\n  protected _weightedTotalAvg?: number\n  protected readonly _samples: BoundedList<number>\n\n  constructor(readonly maxSamples: number = 20) {\n    this._n = 0\n    this._samples = new BoundedList(maxSamples)\n  }\n\n  [inspect.custom]() {\n    return this.stats()\n  }\n\n  toJSON() {\n    return {\n      _ctor: \"Average\",\n      n: this._n,\n      _m: this._m,\n      _s: this._s,\n      min: this._min,\n      max: this._max,\n      samples: this._samples.toA()\n    }\n  }\n\n  static fromJSON(obj: ReturnType<Average[\"toJSON\"]>) {\n    return new Average().with(obj)\n  }\n\n  with(obj: ReturnType<Average[\"toJSON\"]>) {\n    this._n = obj.n\n    this._min = obj.min\n    this._max = obj.max\n    this._m = obj._m\n    this._s = obj._s\n    this._samples.push(...toA(obj.samples))\n  }\n\n  merge(b: Maybe<Average>) {\n    if (b == null || b.n === 0) return this\n    if (this.n === 0) return this.with(b.toJSON())\n    this._min = min([this._min, b.min])\n    this._max = max([this._max, b.max])\n    const n = this.n + b.n\n    this._m = (this._m! * this.n) / n + (b._m! * b.n) / n\n    this._s = (this._s! * this.n) / n + (b._s! * b.n) / n\n    this._n += b._n\n    this._samples.push(...toA(b.samples))\n    return this\n  }\n\n  push(x: number): number {\n    if (!isFinite(x)) throw new Error(\"Average.push(\" + x + \"): not a number\")\n    this._n++\n    this._samples.push(x)\n    this._min = this._min == null ? x : Math.min(x, this._min)\n    this._max = this._max == null ? x : Math.max(x, this._max)\n\n    // https://math.stackexchange.com/a/116344\n    // https://www.johndcook.com/blog/standard_deviation/\n    if (\n      this._n === 1 ||\n      this._m == null ||\n      this._s == null ||\n      this._weightedTotalAvg == null\n    ) {\n      this._m = x\n      this._s = 0\n      this._weightedTotalAvg = x\n    } else {\n      const priorM = this._m\n      this._m += (x - priorM) / this._n\n      // CAUTION: this isn't correct variation: it's a streaming estimation.\n      this._s += ((x - this._m) * (x - this._m) - this._s!) / this._n\n      this._weightedTotalAvg = (this._weightedTotalAvg + x) / 2\n    }\n    return x\n  }\n\n  clone(): Average {\n    return tap(new Average(this.maxSamples), ea => {\n      ea._n = this._n\n      ea._m = this._m\n      ea._s = this._s\n      ea._min = this._min\n      ea._max = this._max\n      ea._weightedTotalAvg = this._weightedTotalAvg\n      ea._samples.push(...this._samples)\n    })\n  }\n\n  pushAll(arr: MaybeNumericList): this {\n    if (arr != null) {\n      for (const ea of arr) {\n        if (isNumber(ea)) this.push(ea)\n      }\n    }\n    return this\n  }\n\n  stats(sigfigs = 2): AverageStats {\n    const sf = (i?: number) =>\n      map(i, (ea: number) => (ea > 100 ? Math.round(ea) : sigFigs(ea, sigfigs)))\n    const o: AverageStats = {} as any\n    o.k = sf(this.n)!\n    if (!this.empty) {\n      o.mean = sf(this.avg)\n      o.sum = sf(this.sum)\n      // o.mode = sf(this.sampleMode)\n      o.sd = sf(this.stdDev)\n      o.max = sf(this.max)\n      o.min = sf(this.min)\n    }\n    return o\n  }\n\n  get empty(): boolean {\n    return this._n === 0\n  }\n\n  /**\n   * @return the total number of samples provided to `push()`\n   */\n  get n(): number {\n    return this._n\n  }\n\n  get avg(): Maybe<number> {\n    return this.empty ? undefined : sigFigs(this._m!, 4)\n  }\n\n  get sum(): number {\n    return this._n > 0 ? this._m! * this._n : 0\n  }\n\n  get max(): Maybe<number> {\n    return this._max\n  }\n\n  get min(): Maybe<number> {\n    return this._min\n  }\n\n  get last(): Maybe<number> {\n    return this._samples.last\n  }\n\n  #p(sigmasFromMean: number) {\n    return mapGte0f(this.avg, mu =>\n      mapGte0f(this.stdDev, sigma => sigFigs(mu + sigma * sigmasFromMean, 4))\n    )\n  }\n\n  // https://www.desmos.com/calculator/s2ybihaqjup\n\n  /**\n   * @return mean - 1 SD\n   */\n  get p16(): Maybe<number> {\n    return this.#p(-1)\n  }\n\n  get p29(): Maybe<number> {\n    return this.#p(-0.5)\n  }\n\n  get p38(): Maybe<number> {\n    return this.#p(-0.25)\n  }\n\n  /**\n   * @return mean + 1 SD\n   * @see https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule\n   */\n  get p84(): Maybe<number> {\n    return this.#p(1)\n  }\n\n  /**\n   * 97.5% = 50% + (95% / 2)\n   * @return mean + 1 SD\n   * @see https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule\n   */\n  get p98(): Maybe<number> {\n    return this.#p(2)\n  }\n\n  /**\n   * 99.86% = 50% + (99.73% / 2)\n   * @return mean + 1 SD\n   * @see https://en.wikipedia.org/wiki/68%E2%80%9395%E2%80%9399.7_rule\n   */\n  get p99(): Maybe<number> {\n    return this.#p(3)\n  }\n\n  /**\n   * @return streaming estimation of variance\n   */\n  get variance(): Maybe<number> {\n    return this._s\n  }\n\n  /**\n   * @return streaming estimation of stdev\n   */\n  get stdDev(): Maybe<number> {\n    const v = this.variance\n    return v == null ? undefined : Math.sqrt(v)\n  }\n\n  get sampleMode(): Maybe<number> {\n    return this.sampleModes(1)?.[0]\n  }\n\n  sampleModes(n: number): Maybe<number[]> {\n    if (this.empty) return\n    const c = new CountingSet<number>()\n    this._samples.forEach(ea => c.incr(ea))\n    return c.topKeys(n)\n  }\n\n  get sampleVariance(): Maybe<number> {\n    return mapNotEmpty(this._samples, variance)\n  }\n\n  get sampleStdDev(): Maybe<number> {\n    return mapNotEmpty(this._samples, stdDev)\n  }\n\n  get sampleAvg(): Maybe<number> {\n    return mapNotEmpty(this._samples, avg)\n  }\n\n  get sampleSlope(): number {\n    return orElse(mapNotEmpty(this._samples, slope), 0)\n  }\n\n  get samples(): number[] {\n    return [...this._samples]\n  }\n\n  /**\n   * weighted average of the last `sampleCount` values\n   */\n  get weightedSampleAvg(): Maybe<number> {\n    return map(weightedAvg(this._samples), ea => sigFigs(ea, 4))\n  }\n\n  /**\n   * weighted average of all values\n   */\n  get weightedTotalAvg(): Maybe<number> {\n    return this._weightedTotalAvg\n  }\n\n  clear(): void {\n    this._n = 0\n    this._m = undefined\n    this._s = undefined\n    this._weightedTotalAvg = 0\n    this._samples.length = 0\n  }\n}\n","import { sum } from \"../../fe/Array\"\nimport { map2 } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { absdiff, clamp, times, toInt } from \"../../fe/Number\"\nimport { randomInt } from \"../../fe/Random\"\nimport { zip } from \"../Array\"\nimport { BitZipDimension } from \"./BitZipDimension\"\nimport { avg } from \"./Vector\"\n\nexport interface Dimension {\n  min: number\n  max: number\n}\nexport interface ValuedDimension extends Dimension {\n  value: number\n}\n\nexport interface BitMixArgs {\n  dims: ValuedDimension[]\n  bitDepth: number\n}\n\nexport function concatBits(arr: number[], bitsPerValue: number): number {\n  const max = Math.pow(2, bitsPerValue)\n  return arr.reduce(\n    (acc, i) => acc * max + clamp(0, max, toInt(i, { defaultValue: 0 })!),\n    0\n  )\n}\n\nexport function splitBits(n: number, bitsPerValue: number): number[] {\n  const max = Math.pow(2, bitsPerValue)\n  const result: number[] = []\n  while (n > 0) {\n    result.unshift(n % max)\n    n = Math.floor(n / max)\n  }\n  return result\n}\n\nexport function diffConcattedBits(\n  a: Maybe<number>,\n  b: Maybe<number>,\n  bitsPerValue: number\n): Maybe<number> {\n  return map2(a, b, (ea1, ea2) =>\n    sum(\n      zip(splitBits(ea1, bitsPerValue), splitBits(ea2, bitsPerValue)),\n      ([i, j]) => absdiff(i, j)!\n    )\n  )\n}\n\nexport class BitZip {\n  constructor(readonly dims: BitZipDimension[]) {}\n\n  clampValue(arr: number[]): number[] {\n    return arr.map((ea, i) => clamp(this.dims[i].min, this.dims[i].max, ea))\n  }\n\n  randomValue() {\n    return this.dims.map(dim => randomInt(dim.min, dim.max))\n  }\n\n  zipMin(bitDepth: number): number {\n    return this.zip(\n      this.dims.map(ea => ea.min),\n      bitDepth\n    )\n  }\n\n  zipMax(bitDepth: number): number {\n    return this.zip(\n      this.dims.map(ea => ea.max),\n      bitDepth\n    )\n  }\n\n  zip(value: number[], bitDepth: number) {\n    // We clone these because we change them as we process bits.\n    const min = this.dims.map(d => d.min)\n    const max = this.dims.map(d => d.max)\n    const clamped = this.clampValue(value)\n\n    let result = 0\n\n    for (let bit = 0; bit < bitDepth; bit++) {\n      // shift left, but this may be > 32 bits, so we can't use << operator,\n      // YAY JAVASCRIPT\n      result *= 2\n\n      const dimIndex = bit % min.length\n      const mid = (min[dimIndex] + max[dimIndex]) / 2\n      if (clamped[dimIndex] > mid) {\n        result += 1 // < no bit twiddling, we may be > 32 bits!\n        min[dimIndex] = mid\n      } else {\n        max[dimIndex] = mid\n      }\n    }\n    return result\n  }\n\n  unzip(n: number, bitDepth: number) {\n    const min = this.dims.map(d => d.min)\n    const max = this.dims.map(d => d.max)\n    for (let bit = 0; bit < bitDepth; bit++) {\n      const dIdx = bit % min.length\n      const mid = (min[dIdx] + max[dIdx]) / 2\n      if (isBitSet(n, bitDepth - bit - 1)) min[dIdx] = mid\n      else max[dIdx] = mid\n    }\n    return times(min.length, i => (min[i] + max[i]) / 2)\n  }\n}\n\nconst BitShiftMax = Math.pow(2, 32) - 1\n\nexport function isBitSet(n: number, bit: number, disableBitshifting?: boolean) {\n  if (disableBitshifting !== true && n < BitShiftMax && bit < 32) {\n    return ((n >> bit) & 1) === 1\n  } else {\n    return 1 === Math.floor(n / Math.pow(2, bit)) % 2\n  }\n}\n\nexport function bitZip(a: BitMixArgs): number {\n  a.dims.forEach(dim => (dim.value = clamp(dim.min, dim.max, dim.value)))\n\n  let result = 0\n\n  for (let bit = 0; bit < a.bitDepth; bit++) {\n    result *= 2 // < no bit twiddling, we may be > 32 bits!\n    const dIdx = bit % a.dims.length\n    const d = a.dims[dIdx]\n    const mid = avg([d.min, d.max])!\n    if (d.value > mid) {\n      result += 1 // < no bit twiddling, we may be > 32 bits!\n      d.min = mid\n    } else {\n      d.max = mid\n    }\n  }\n  return result\n}\n\nexport interface BitUnmixArgs {\n  dims: Dimension[]\n  bitDepth: number\n}\n\nexport function bitUnzip(n: number, a: BitUnmixArgs): Maybe<number[]> {\n  if (a.bitDepth > 52 || a.bitDepth < 0) return\n  const setBits = bitsSetBig(n)\n  for (let bit = 0; bit < a.bitDepth; bit++) {\n    const dIdx = bit % a.dims.length\n    const d = a.dims[dIdx]\n    const mid = avg([d.min, d.max])!\n    if (setBits.includes(a.bitDepth - bit - 1)) {\n      d.min = mid\n    } else {\n      d.max = mid\n    }\n  }\n  return a.dims.map(d => avg([d.min, d.max])!)\n}\n\n// Supports > 32 bit numbers\nexport function bitsSetBig(n: number): number[] {\n  return [...n.toString(2)]\n    .reverse()\n    .map((ea, idx) => (ea === \"1\" ? idx : -1))\n    .filter(ea => ea !== -1)\n}\n\n/**\n * Number of set bits in `x`\n * @see https://stackoverflow.com/questions/109023/how-to-count-the-number-of-set-bits-in-a-32-bit-integer#109117\n */\nexport function pop(x: number): number {\n  x = x - ((x >> 1) & 0x55555555)\n  x = (x & 0x33333333) + ((x >> 2) & 0x33333333)\n  x = (x + (x >> 4)) & 0x0f0f0f0f\n  x = x + (x >> 8)\n  x = x + (x >> 16)\n  return x & 0x0000003f\n}\n\nexport function bits<T>(arr: T[], f: (t: T, index: number) => boolean): number {\n  return sum(arr, (ea, index) =>\n    f(ea, index) ? Math.pow(2, arr.length - index - 1) : 0\n  )\n}\n","import { sortBy } from \"../../fe/ArraySort\"\n\nexport function lerp(v0: number, v1: number, t = 0.5): number {\n  // See https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\n  return (1 - t) * v0 + t * v1\n}\n\nexport interface Point {\n  x: number\n  y: number\n}\n\n/**\n * @return y for the given x, given the line defined p0 and p1\n */\nexport function lerp2d(x: number, ...arr: Point[]): number {\n  const nearest2 = sortBy(arr, ea => Math.abs(x - ea.x)).slice(0, 2)\n  const [p0, p1] = sortBy(nearest2, ea => ea.x)\n\n  const dx = p1.x - p0.x\n  const xdx = x - p0.x\n  const t = xdx / dx\n  return lerp(p0.y, p1.y, t)\n}\n\nexport function lerp2d_(x: number, p0: Point, p1: Point): number {\n  // https://en.wikipedia.org/wiki/Linear_interpolation\n  return (p0.y * (p1.x - x) + p1.y * (x - p0.x)) / (p1.x - p0.x)\n}\n","import { randomBytes } from \"crypto\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { isFunction } from \"../../fe/isFunction\"\nimport { identity } from \"../Object\"\nimport { splitEvery } from \"../String\"\n\nconst zero: any = BigInt(0)\n\nexport function encodeDigits(base: number, i: number, minLength = 0): number[] {\n  if (!isFinite(i) || base <= 1) return []\n\n  const digits: number[] = []\n  if (i === 0) {\n    digits.unshift(0)\n  } else {\n    while (i > 0) {\n      digits.unshift(i % base)\n      i = Math.floor(i / base)\n    }\n  }\n  while (digits.length < minLength) digits.unshift(0)\n  return digits\n}\n\nexport class Radix {\n  readonly base: number\n  constructor(\n    readonly name: string,\n    readonly numerals: string,\n    readonly decodePreparser: (s: string) => string = identity\n  ) {\n    this.base = numerals.length\n  }\n\n  private digitsToNumerals(digits: number[]): string {\n    return digits.map(d => this.numerals[d]).join(\"\")\n  }\n\n  encode(num: number, minLength: number = 0): string {\n    if (!isFinite(num)) return \"\"\n    // r is a reversed array of chars:\n    const negate = num < 0\n    if (negate) {\n      num = Math.abs(num)\n      minLength-- // accommodate the sign\n    }\n    return (\n      (negate ? \"-\" : \"\") +\n      this.digitsToNumerals(encodeDigits(this.base, num, minLength))\n    )\n  }\n\n  encodeBigInt(bi: bigint): string {\n    if (typeof bi !== \"bigint\") throw new Error(\"bad input\")\n    if (bi === zero) return this.numerals[0]\n\n    const digits: number[] = []\n    const b = BigInt(this.base)\n    let i: any = bi\n\n    while (i > zero) {\n      digits.push(Number(i % b))\n      i = i / b\n    }\n    return this.digitsToNumerals(digits.reverse())\n  }\n\n  encodeBuffer(buf: Buffer): string {\n    if (buf == null || buf.length === 0) return \"\"\n    const digits = [0]\n    for (let b of buf) {\n      digits.forEach((d, i) => {\n        // const b0 = b\n        b += d << 8\n        digits[i] = b % this.base\n        b = Math.floor(b / this.base)\n        // console.dir({ i, b0, b, d0: d, d: digits[i], digits })\n      })\n\n      while (b > 0) {\n        digits.push(b % this.base)\n        b = Math.floor(b / this.base)\n        // console.dir({ b, digits })\n      }\n    }\n    return this.digitsToNumerals(digits.reverse())\n  }\n\n  decode(s: Maybe<string>): Maybe<number> {\n    return map(this.decodeBigInt(s), ea => {\n      if (ea > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\"decode(\" + s + \") is > 2^53\")\n      } else {\n        return Number(ea)\n      }\n    })\n  }\n\n  normalize(s: string): string {\n    return this.decodePreparser(s)\n  }\n\n  decodeBigInt(s: Maybe<string>): Maybe<bigint> {\n    if (s == null || blank(s)) return\n    s = isFunction(this.decodePreparser) ? this.decodePreparser(s) : s\n    const negate = s[0] === \"-\"\n    if (negate) {\n      s = s.slice(1)\n    }\n    const b = BigInt(this.base)\n    let acc = BigInt(0)\n    for (const ch of s) {\n      const idx = this.numerals.indexOf(ch)\n      if (idx < 0) {\n        return undefined\n      }\n      acc = acc * b + BigInt(idx)\n    }\n    return negate ? BigInt(-1) * acc : acc\n  }\n\n  randomChars(length: number): string {\n    // bits per char is Math.log2(this.base).\n    // we need bpc * length / 8 = random bytes.\n    const s = this.encodeBuffer(\n      randomBytes(Math.ceil((Math.log2(this.base) * (length + 4)) / 8))\n    )\n    return s.slice(2, 2 + length)\n  }\n\n  /**\n   * UIDs are easier to parse or read if dashes break up the string.\n   *\n   * Reading 4-char groups is comfortable, 5 chars \"won-aye-six-gee-why\" is\n   * doable, I think, so split every 5?\n   *\n   * For GeoRadix, each char encodes 5 bits, so 20 chars is only 100 bits of\n   * entropy. 24 chars is 120. We need 32 chars for 160 bits, that's a lot.\n   */\n  randomUid(chars = 20, splitEveryN = 5, sepChar = \"-\"): string {\n    return splitEvery(this.randomChars(chars), splitEveryN).join(sepChar)\n  }\n\n  tokenEql(a: string, b: string, minLen: number): boolean {\n    const an = this.normalizeToken(a)\n    const bn = this.normalizeToken(b)\n    return an.length >= minLen && an === bn\n  }\n\n  normalizeToken(a: string) {\n    return [...this.decodePreparser(a.trim())]\n      .filter(ea => this.numerals.includes(ea))\n      .join(\"\")\n  }\n}\n\nexport const Hex = new Radix(\"hex\", \"0123456789abcdef\", s => s.toLowerCase())\n\n/**\n * URL-safe charset used for bitcoin and IPFS hashes\n * @see https://en.wikipedia.org/wiki/Base58\n */\nexport const Radix58 = new Radix(\n  \"Radix58\",\n  \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n)\n\n/**\n * CAUTION! This doesn't do standard base64 padding!\n * @see b64.ts\n */\nexport const Base64 = new Radix(\n  \"Radix64\",\n  \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n)\n\n/**\n * Used by StringSimilarity.radixDiff\n */\nexport const RadixAlphaNum = new Radix(\n  \"RadixAlphaNum\",\n  \"0123456789abcdefghijklmnopqrstuvwxyz\",\n  s => s.toLowerCase()\n)\n\n/**\n * Base 32 charset for case-insensitive filesystems and human consumption\n * @see https://en.wikipedia.org/wiki/Geohash\n */\nexport const GeoRadix = new Radix(\n  \"GeoRadix\",\n  \"0123456789bcdefghjkmnpqrstuvwxyz\", // y no a?\n  s => s.toLowerCase()\n)\n\n/**\n * Base 32 charset for case-insensitive filesystems and human consumption.\n *\n * Similar glyphs include 0O, 1lI, 2z, 5S, 9g\n */\nexport const TokenRadix = new Radix(\n  \"TokenRadix\",\n  \"0123456789abcdefhjkmnpqrtuvwxy\",\n  s =>\n    s\n      .toLowerCase()\n      .replace(/o/g, \"0\")\n      .replace(/[il]/g, \"1\")\n      .replace(/z/g, \"2\")\n      .replace(/s/g, \"5\")\n      .replace(/g/g, \"9\")\n)\n\nexport const AlphaRadix = new Radix(\n  \"AlphaRadix\",\n  \"abcdefghjkmnopqrtuvwxyz\",\n  s =>\n    s\n      .toLowerCase()\n      .replace(/0/g, \"o\")\n      .replace(/2/g, \"z\")\n      .replace(/5/g, \"s\")\n      .replace(/9/g, \"g\")\n)\n\nexport const NumericRadix = new Radix(\"NumericRadix\", \"0123456789\", s =>\n  s\n    .toLowerCase()\n    .replace(/o/g, \"0\")\n    .replace(/[il]/g, \"1\")\n    .replace(/z/g, \"2\")\n    .replace(/s/g, \"5\")\n    .replace(/g/g, \"9\")\n)\n","import { Rate } from \"batch-cluster\"\n\nexport function rateStats(r: Rate) {\n  return {\n    eventCount: r?.eventCount,\n    eventsPerSecond: r?.eventsPerSecond,\n    msSinceLastEvent: r?.msSinceLastEvent\n  }\n}\n","import { randomBytes } from \"crypto\"\nimport { decuss } from \"../words/Cuss\"\n\n/**\n * Type-4 UUID\n *\n * @see https://en.wikipedia.org/wiki/Universally_unique_identifier\n */\nexport function uuid() {\n  const b = randomBytes(16)\n\n  // Set the version bits:\n  b[6] = (b[6] & 0x0f) | 0x40\n\n  // RFC 4122 Section 3 requires that the characters be generated in lower case\n  const s = b.toString(\"hex\")\n\n  // canonical 8-4-4-4-12 format string:\n  return [\n    s.slice(0, 8),\n    s.slice(8, 12),\n    s.slice(12, 16),\n    s.slice(16, 20),\n    s.slice(20)\n  ].join(\"-\")\n}\n\n/**\n * Type-4 UUID without naughty words\n */\nexport function safeUUID(): string {\n  return decuss(uuid)\n}\n\n// only useful for tests:\nexport const UUIDRegExp = /^\\w{8}-\\w{4}-\\w{4}-\\w{4}-\\w{12}$/\n","import { isEmpty } from \"../../fe/Array\"\nimport { List } from \"../../fe/List\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, finiteOrElse, isNumber } from \"../../fe/Number\"\nimport { toA } from \"../../fe/toA\"\nimport { CountingSet } from \"../CountingSet\"\nimport { intersection, union } from \"../Set\"\nimport { Average } from \"./Average\"\n\nexport type NumericList =\n  | List<number>\n  | Iterable<number>\n  | number[]\n  | Float32Array\n  | Uint32Array\n  | Int32Array\n\nexport type MaybeNumericList =\n  | List<Maybe<number>>\n  | Iterable<Maybe<number>>\n  | Maybe<number>[]\n  | Float32Array\n  | Uint32Array\n  | Int32Array\n\nexport function min<T>(vec: List<Maybe<T>>): Maybe<T> {\n  let result\n  for (const ea of vec) {\n    if (ea != null) {\n      if (result == null || ea < result) {\n        result = ea\n      }\n    }\n  }\n  return result\n}\n\nexport function max<T>(vec: List<Maybe<T>>) {\n  let result\n  for (const ea of vec) {\n    if (ea != null) {\n      if (result == null || ea > result) {\n        result = ea\n      }\n    }\n  }\n  return result\n}\n\n/**\n * @return `[arr[1] - arr[0], arr[2] - arr[1], ...]`\n */\nexport function deltas(vec: NumericList): number[] {\n  const l = toA(vec)\n  if (vec == null || l.length <= 1) return []\n  return l.slice(1).map((ea, idx) => ea - l[idx])\n}\n\nexport function modes(vec: MaybeNumericList, topN: number): number[] {\n  const cs = new CountingSet<number>()\n  for (const ea of vec) {\n    if (isNumber(ea)) {\n      cs.incr(ea)\n    }\n  }\n  return cs.topKeys(topN)\n}\n\nexport function mode(vec: MaybeNumericList): Maybe<number> {\n  return modes(vec, 1)[0]\n}\n\nexport function sum(vec: MaybeNumericList | Iterable<Maybe<number>>): number {\n  let acc = 0\n  for (const ea of vec) {\n    if (isNumber(ea)) {\n      acc += ea\n    }\n  }\n  return acc\n}\n\nexport function sumf<T>(\n  iter: Iterable<Maybe<T>>,\n  f: (t: T, index: number) => Maybe<number>\n): number {\n  let index = 0\n  let acc = 0\n  for (const ea of iter) {\n    if (ea != null) {\n      const i = f(ea, index)\n      if (isNumber(i)) {\n        acc += i\n      }\n    }\n    index++\n  }\n  return acc\n}\n\nexport class Mean {\n  #idx = 0\n  #mean: Maybe<number>\n\n  push(i: Maybe<number>) {\n    if (isNumber(i)) {\n      // prevent overflow:\n      // https://math.stackexchange.com/a/116344\n      // https://www.johndcook.com/blog/standard_deviation/\n      this.#mean =\n        this.#mean == null\n          ? i\n          : (this.#mean * this.#idx) / (this.#idx + 1) + i / (this.#idx + 1)\n      this.#idx++\n    }\n  }\n\n  get mean() {\n    return this.#mean\n  }\n}\n\nexport function avg(vec: MaybeNumericList): Maybe<number> {\n  const m = new Mean()\n  for (const ea of vec) {\n    m.push(ea)\n  }\n  return m.mean\n}\n\n// export function covariance(args: {\n//   a: number[]\n//   b: number[]\n//   aMean?: number\n//   bMean?: number\n// }): Maybe<number> {\n//   if (isEmpty(args.a) || isEmpty(args.b) || args.a.length !== args.b.length)\n//     return\n//   const a_mean = args.aMean ?? avg(args.a)!\n//   const b_mean = args.bMean ?? avg(args.b)!\n//   const cov = new Mean()\n//   for (let i = 0; i < args.a.length; i++) {\n//     cov.push((args.a[i] - a_mean) * (args.b[i] - b_mean))\n//   }\n//   return cov.mean\n// }\n\n/**\n * @param strength how strong should the normalization be applied. [0,1]\n */\nexport function normalize({\n  x,\n  strength = 1,\n  normMin,\n  normMax\n}: {\n  x: number[]\n  strength?: number\n  normMin: number\n  normMax: number\n}): number[] {\n  const xMin = min(x)!\n  const xRange = max(x)! - xMin\n  const normRange = normMax - normMin\n  return x.map(\n    ea =>\n      (1 - strength) * ea +\n      strength * (normMin + (normRange * (ea - xMin)) / xRange)\n  )\n}\n\nexport function slope(vec: MaybeNumericList): Maybe<number> {\n  const l = toA(vec).filter(isNumber)\n  const x_mean = avg(l)\n  if (x_mean != null) {\n    const y_mean = (l.length - 1) / 2\n    const num = sumf(l, (x, y) => (x - x_mean) * (y - y_mean))\n    const denom = sumf(l, x => (x - x_mean) ** 2)\n    return denom === 0 ? 0 : num / denom\n  } else {\n    return\n  }\n}\n\nexport function variance(arr: MaybeNumericList): Maybe<number> {\n  const mean = avg(arr)\n  if (mean == null) return undefined\n  let acc = 0\n  let len = 0\n  for (const i of arr) {\n    if (isNumber(i)) {\n      len++\n      acc += (i - mean) * (i - mean)\n    }\n  }\n  return acc / len\n}\n\nexport function stdDev(arr: MaybeNumericList): Maybe<number> {\n  return map(variance(arr), Math.sqrt)\n}\n\nexport function p84(arr: MaybeNumericList): Maybe<number> {\n  return new Average().pushAll(arr).p84\n}\n\n/**\n * @param carryForward ratio of prior means to average with subsequent values\n */\nexport function weightedAvg(\n  arr: List<number> | Iterable<number>,\n  carryForward = 0.5\n): Maybe<number> {\n  let acc\n  carryForward = clamp(0, 1, carryForward)\n  for (const ea of arr) {\n    acc = acc == null ? ea : acc * carryForward + ea * (1 - carryForward)\n  }\n  return acc\n}\n\n// export function euclidean<T extends NumericList>(x: T, y: T): number {\n//   return Math.sqrt(\n//     toA(x).reduce((sum_, ea, idx) => sum_ + Math.pow(ea - y[idx], 2), 0)\n//   )\n// }\n\nexport function centroid(vectors: number[][]): Maybe<number>[] {\n  const len = vectors[0].length\n  const arr: Maybe<number>[] = []\n  for (let i = 0; i < len; i++) {\n    arr.push(avg(vectors.map(ea => ea[i])))\n  }\n  return arr\n}\n\n/**\n * Euclidean norm, or L2 norm, of a given vector\n * @see https://en.wikipedia.org/wiki/Norm_(mathematics)\n */\nexport function l2norm(vec: List<number>): number {\n  // PERF: no closures\n  let acc = 0\n  for (const ea of vec) {\n    acc += ea * ea\n  }\n  return Math.sqrt(acc)\n}\n\n/**\n * @see https://en.wikipedia.org/wiki/Euclidean_vector#Dot_product\n */\nexport function dot(x: number[], y: number[]): number {\n  // PERF: no closures\n  let acc = 0\n  for (let i = 0; i < x.length; i++) {\n    acc += x[i] * y[i]\n  }\n  return acc\n}\n\n/**\n * Ranges between -1 (anticorrelation) to 1 (correlation)\n * @see https://en.wikipedia.org/wiki/Cosine_similarity\n */\nexport function cosineSimilarity(x: number[], y: number[]): Maybe<number> {\n  return finiteOrElse(dot(x, y) / (l2norm(x) * l2norm(y)), undefined)\n}\n\n/**\n * Ranges between 0 (no overlap) to 1 (complete overlap)\n */\nexport function jaccard(x: number[], y: number[]): Maybe<number> {\n  return isEmpty(x) && isEmpty(y)\n    ? 0\n    : finiteOrElse(intersection(x, y).size / union(x, y).size, undefined)\n}\n","import _os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { stripDiacritics } from \"../String\"\nimport { Settings } from \"../settings/Settings\"\n\nexport const hostname = lazy(() => Settings.hostname.value ?? _os.hostname())\n\nlater(() => Settings.hostname.watchLater(() => hostname.unset()))\n\nexport function cleanHostname(_hostname?: Maybe<string>) {\n  if (blank(_hostname)) {\n    if (!blank(Settings.hostname.value)) return Settings.hostname.value\n  }\n  return (_hostname ?? _os.hostname())\n    .replace(/\\.local$/, \"\")\n    .replace(/-?\\d+$/, \"\")\n}\n\nexport function fsSafeHostname(_hostname = hostname()) {\n  return stripDiacritics(_hostname)\n    .replace(/[^a-z0-9-\\s]/gi, \"\")\n    .trim()\n    .replace(/\\s+/g, \"-\")\n    .toLowerCase()\n}\n","import { promises as dns } from \"dns\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { Timeout, thenOrTimeout } from \"../../fe/ThenOrTimeout\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { within } from \"../Number\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { equalsIgnoreCase } from \"../String\"\nimport { memoizeAsync } from \"../async/MemoizedAsyncFunc\"\nimport { thenMap2Or } from \"../async/Promise\"\nimport { ee } from \"../event/EventEmitter\"\nimport { ipv4Re } from \"./ping\"\n\nconst octetRE = new RegExp(\"^\" + ipv4Re.source + \"$\")\n\n/**\n * Try to return the \"canonical\" name for the given `ipOrName`.\n */\nexport const friendlyname = memoizeAsync(\n  async (ipOrName: string) => {\n    const result =\n      octetRE.exec(ipOrName) == null ? ipOrName : await nslookup(ipOrName)\n    return toS(result).toLowerCase().normalize()\n  },\n  {\n    name: \"net.nslookup.friendlyname\",\n    maxSize: 128,\n    timeoutMs: ShortCommandTimeoutMs\n  }\n)\n\nconst loopbackRE =\n  /^(?:(?:localhost(?:\\.?(?:localdomain\\.?)?))|(?:127(?:\\.\\d{1,3}){3}))$/i\n\nexport function isLoopback(name: string): boolean {\n  return loopbackRE.exec(name) != null\n}\n\nexport function octets(nameOrIp: string): Maybe<number[]> {\n  const result: number[] = nameOrIp\n    .split(\".\")\n    .map(ea => toInt(ea))\n    .filter(ea => within(0, 255, ea)) as number[]\n  return result.length === 4 ? result : undefined\n}\n\n/**\n * @return 1 or more IPv4 addresses for the given name or IP address\n */\nexport const resolve4 = memoizeAsync(\n  async (nameOrIp: string): PromiseMaybe<string[]> => {\n    if (blank(nameOrIp)) return\n    if (octets(nameOrIp) != null) return [nameOrIp]\n    try {\n      return await dns.resolve4(nameOrIp)\n    } catch (err) {\n      logger().warn(\"No name found for \" + nameOrIp)\n      return\n    }\n  },\n  {\n    name: \"net.nslookup.resolve4\",\n    maxSize: 256,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n\nconst logger = lazy(() => mkLogger(\"net.nslookup\"))\n\nlater(() => ee().on(\"clearCache\", () => nslookup.clear()))\n\n/**\n * @return the name or IP address\n */\nexport const nslookup = memoizeAsync(\n  async (nameOrIp: string) => {\n    try {\n      const names = await thenOrTimeout(\n        isLoopback(nameOrIp)\n          ? nameOrIp.startsWith(\"127.\")\n            ? [\"localhost\"]\n            : [\"127.0.0.1\"]\n          : octets(nameOrIp) != null\n          ? dns.reverse(nameOrIp)\n          : dns.resolve4(nameOrIp),\n        5 * secondMs // < DNS resolution should be milliseconds.\n      )\n      if (names === Timeout) {\n        logger().info(\"nslookup(\" + nameOrIp + \"): timeout\")\n        return nameOrIp\n      }\n      const firstNonBlank = names.find(notBlank)\n      if (firstNonBlank == null) {\n        logger().warn(\"No name found for \" + nameOrIp)\n        return nameOrIp\n      } else {\n        return firstNonBlank\n      }\n    } catch (err) {\n      logger().warn(\"Failed to look up \" + nameOrIp + \", using name.\", err)\n      return nameOrIp\n    }\n  },\n  {\n    name: \"net.nslookup\",\n    maxSize: 256,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n\nexport async function isEquivalentHost(\n  a: Maybe<string>,\n  b: Maybe<string>\n): Promise<boolean> {\n  if (blank(a) || blank(b)) return false\n  if (equalsIgnoreCase(a, b)) return true\n  if (isLoopback(a) && isLoopback(b)) return true\n  return thenMap2Or(\n    resolve4(a),\n    resolve4(b),\n    (aAddrs, bAddrs) => aAddrs.some(ea => bAddrs.includes(ea)),\n    () => false\n  )\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { times } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { toS } from \"../../fe/toS\"\nimport { memoizeAsync } from \"../async/MemoizedAsyncFunc\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { pingWin } from \"../fs/PathTo\"\nimport { isWin } from \"../platform/Platform\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\n\nexport const ping = memoizeAsync(\n  async (target: string) => {\n    const cmd = isWin ? pingWin() : \"ping\"\n    return stdout_(cmd, [isWin ? \"-n\" : \"-c\", \"1\", target], {\n      timeoutMs: 5 * secondMs\n    })\n  },\n  {\n    name: \"net.ping\",\n    maxSize: 255,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n\nexport const ipv4Re = new RegExp(\n  \"\\\\b\" + times(4, () => \"[0-9]{1,3}\").join(\"\\\\.\") + \"\\\\b\"\n)\n\nexport const ipAddrFromPing = memoizeAsync(\n  async (target: string) => {\n    return opt(\n      await ping(target).catch(err => {\n        console.warn(\"failed to ping: \" + err)\n        return undefined\n      })\n    )\n      .filter(notBlank)\n      .flatMap(result => ipv4Re.exec(toS(result)))\n      .map(match => match[0])\n      .get()\n  },\n  {\n    name: \"net.ipAddrFromPing\",\n    maxSize: 255,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { toS } from \"../../fe/toS\"\n\n// Expect __filename to be something like\n// '/home/mrm/src/photostructure/src/core/dist/core/platform/IsPacked.js' if\n// we're not web-packed.\n\nexport const isPacked = lazy(\n  () => !toS(__filename).includes(join(\"core\", \"platform\", \"IsPacked\"))\n)\n","import os from \"os\"\nimport process from \"process\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { ELECTRON_RUN_AS_NODE } from \"../env/EnvKeys\"\n\n// THIS IS USED BY EVERYONE IN CORE, so only rely on fe code!\n\nconst _platform = os.platform()\n\nexport const inspectFlag =\n  process.argv.includes(\"--inspect\") || isTrue(process.env.NODE_INSPECT)\n\nexport const isCI = isTrue(process.env[\"CI\"])\n\nexport const isWin = _platform === \"win32\" || _platform === \"cygwin\"\nexport const isWinPortable =\n  isWin && notBlank(process.env.PORTABLE_EXECUTABLE_DIR)\n\nexport const isMac = _platform === \"darwin\"\n\nexport const isLinux = _platform === \"linux\"\nexport const isLinux_x64 = isLinux && os.arch() === \"x64\"\nexport const isArm = null != /^arm\\b/i.exec(os.arch()) // \"arm\" on RPi, \"arm64\" on M1\nexport const isLinux_arm = isLinux && isArm\nexport const isLinuxAppImage =\n  isLinux && (notBlank(process.env.APPIMAGE) || notBlank(process.env.APPDIR))\nexport const isLinuxSnap = isLinux && notBlank(process.env.SNAP_USER_DATA)\n\nexport const isPosix = isMac || isLinux\n\nexport const isMainElectron = process.versions[\"electron\"] != null\n\nexport const isElectron =\n  isMainElectron || isTrue(process.env[ELECTRON_RUN_AS_NODE])\n\n/**\n * Compatible with electron-builder:\n */\nexport type Platform = \"win\" | \"mac\" | \"linux\"\n\nexport const platformName: Platform = isWin\n  ? \"win\"\n  : isMac\n  ? \"mac\"\n  : isLinux\n  ? \"linux\"\n  : (_platform as any) // < punt\n","import { lazy } from \"../../core/Lazy\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { PS_IS_DOCKER } from \"../env/EnvKeys\"\nimport { isLinux } from \"../platform/Platform\"\n\n// HEY FUTURE ME: no need to get clever here with checking for Alpine Linux or\n// /.dockerenv. KISS.\n\n// NOTE TO THE FUTURE: we used to parse out the owner from /proc/1/cgroup but\n// that was missing from UnRAID docker containers.\n\nexport const isDocker = lazy(() => isLinux && isTrue(process.env[PS_IS_DOCKER]))\n","import fs from \"fs\"\nimport { lazy } from \"../../core/Lazy\"\nimport { isLinux, isLinux_arm, isMac, isWin } from \"../platform/Platform\"\n\n// this works in and out of docker containers:\nexport function containsRpiModel(cpuinfoPath = \"/proc/cpuinfo\") {\n  if (isWin || isMac) return false\n  try {\n    const contents = fs.readFileSync(cpuinfoPath).toString()\n    return null != contents.match(/^\\s*model\\s*:\\s*Raspberry Pi/im)\n  } catch {\n    return false\n  }\n}\n\nexport const isRaspberryPi = lazy(() => isLinux_arm && containsRpiModel())\n\n/**\n * This seems to only be set on Raspberry PIs:\n */\nexport const procDeviceModel = lazy(() => {\n  try {\n    return isLinux\n      ? // \"Raspberry Pi 4 Model B Rev 1.1\" on pi4\n        fs.readFileSync(\"/proc/device-tree/model\").toString()\n      : undefined\n  } catch {\n    return\n  }\n})\n","import { compactBlanks } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { fmtPct } from \"../../fe/Number\"\nimport { ellipsizePath } from \"../fs/Path\"\nimport { within } from \"../Number\"\n\n// \"ProgressEvent\" is part of lib.dom. Let's not collide.\n\nexport interface ProgressEvt {\n  path?: string\n  op: string\n  pct: number\n  elapsedMs?: number\n  done?: boolean\n}\n\nexport function progressEvtToS(pe: ProgressEvt): string {\n  const path = blank(pe.path)\n    ? null\n    : ellipsizePath({ p: pe.path, maxLength: 80 })\n  return compactBlanks([\n    path,\n    pe.op,\n    pe.done === true ? \"done\" : fmtPct(pe.pct)\n  ]).join(\": \")\n}\n\nexport type ProgressEvtWithPath = ProgressEvt &\n  Required<Pick<ProgressEvt, \"path\">>\n\nexport type ProgressEvtWithoutPct = Pick<ProgressEvt, \"path\" | \"op\">\n\nexport function isProgressEvt(o: any): o is ProgressEvt {\n  return o != null && notBlank(o.op) && within(0, 100, o.pct)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte } from \"../../fe/Number\"\nimport { shim1 } from \"../Shim1\"\nimport { TTLMap } from \"../TTLMap\"\nimport { ee } from \"../event/EventEmitter\"\nimport { ProgressEvt, ProgressEvtWithPath, isProgressEvt } from \"./ProgressEvt\"\n\nexport const DefaultThrottleMs = 500\n\nexport const recentProgress = lazy(\n  () => new TTLMap<string, ProgressEvtWithPath>(15 * secondMs)\n)\n\nexport const recentDone = lazy(\n  () => new TTLMap<string, ProgressEvtWithPath>(2 * minuteMs)\n)\n\nexport function emitProgressEvt(pe: Maybe<ProgressEvt>) {\n  if (isProgressEvt(pe)) {\n    const done = true === pe.done\n    if (done) {\n      if (pe.path != null) recentDone().set(pe.path, pe as any)\n    }\n    // Throttle progress for any given file, unless it's done.\n    // Don't throttle progress without a file.\n    if (\n      done ||\n      pe.path == null ||\n      !gte(\n        recentProgress().lastSetOrGetTs(pe.path),\n        Date.now() - DefaultThrottleMs\n      )\n    ) {\n      void onProgressEvt(pe)\n      if (pe.path != null) recentProgress().set(pe.path, pe as any)\n    }\n  }\n}\n\nexport const onProgressEvt = shim1({\n  name: \"onProgressEvt\",\n  impl: async (pe: ProgressEvt) => {\n    ee().emit(\"progress\", pe)\n  }\n})\n","import { stringify } from \"../../fe/JSON\"\nimport { Maybe, MaybePromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { gt0, pct } from \"../../fe/Number\"\nimport { rateLimited } from \"../RateLimited\"\nimport { EndableRanks, ending } from \"../async/Endable\"\nimport { EndableInterval } from \"../async/EndableInterval\"\nimport { thenMap } from \"../async/Promise\"\nimport { errorToS } from \"../error/Error\"\nimport { ProgressEvt } from \"./ProgressEvt\"\nimport { DefaultThrottleMs, emitProgressEvt } from \"./ProgressObserver\"\n\nexport class PullProgressObserver extends EndableInterval {\n  private readonly start = Date.now()\n  private done?: boolean\n\n  constructor(\n    readonly ctx: Pick<ProgressEvt, \"path\" | \"op\">,\n    readonly total: number,\n    readonly progress: () => Maybe<number> | MaybePromiseMaybe<number>,\n    readonly throttleMs: number = DefaultThrottleMs\n  ) {\n    super({\n      name: \"PullProgressObserver(\" + stringify(ctx) + \")\",\n      callback: () => this.onInterval(),\n      intervalMs: throttleMs,\n      rank: EndableRanks.first\n    })\n  }\n\n  readonly onInterval = rateLimited({\n    name: \"PullProgressObserver.onInterval\",\n    f: () =>\n      ending() ? this.end() : thenMap(this.progress(), ea => this.emit(ea)),\n    minCallDelayMs: this.throttleMs\n  })\n\n  observe<T>(p: Promise<T>): Promise<T> {\n    // we throw this promise chain away:\n    p.then(\n      () => this.completed(),\n      err => {\n        this.logger.warn(\"failed: \", err)\n        this.ctx.op += \" (failed: \" + errorToS(err, { maxLen: 128 }) + \")\"\n        void this.end()\n      }\n    )\n    return p\n  }\n\n  private emit(current: Maybe<number>) {\n    if (gt0(current)) {\n      emitProgressEvt({\n        ...this.ctx,\n        pct: pct(current, this.total),\n        elapsedMs: Date.now() - this.start,\n        done: this.done\n      })\n    }\n  }\n\n  completed() {\n    this.done = true\n    if (this.ended) return\n    this.emit(this.total)\n    void this.end()\n  }\n}\n","import { BatchCluster, Parser, Task } from \"batch-cluster\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank, mapNotBlankOr, notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { Obj } from \"../../fe/Object\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { BatchClusterObserver } from \"../BatchClusterObserver\"\nimport { thenElapsed } from \"../Elapsed\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { ellipsize, ensureSuffix, stripPrefix } from \"../String\"\nimport { EndableRanks, ending } from \"../async/Endable\"\nimport { EndableWrapper } from \"../async/EndableWrapper\"\nimport { thenMap } from \"../async/Promise\"\nimport { until } from \"../async/until\"\nimport { execFile } from \"../child/ChildProcess\"\nimport { ee } from \"../event/EventEmitter\"\nimport { isWin } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\nimport { commandTimeoutMs } from \"../volumes/VolumeTtls\"\n\nconst Done = \"{ready}\"\n\nconst ConvertToCompressedJson = \" | ConvertTo-Json -Compress\"\n\nexport type Result = { stdout: string; stderr?: string; passed: boolean }\n\nexport interface PowerShellVersion {\n  Major: number\n  Minor: number\n  Build: number\n  Revision: number\n  MajorRevision: number\n  MinorRevision: number\n}\n\nexport function pwshQuote(s: string): string {\n  const s2 = s\n    .replace(/['`\"“”#]/g, ea => \"`\" + ea)\n    .replace(/\\0/g, \"`0\")\n    .replace(/\\n/g, \"`n\")\n    .replace(/\\r/g, \"`r\")\n    .replace(/\\t/g, \"`t\")\n    .replace(/\\v/g, \"`v\")\n  return '\"' + s2 + '\"'\n}\n\nfunction versionCommand() {\n  return [\n    `function prompt {\"${Done}\"}`,\n    ...mapNotBlankOr(\n      Settings.powerShellCulture.valueOrDefault,\n      ea => [\n        `[System.Threading.Thread]::CurrentThread.CurrentCulture = '${ea}'`,\n        `[System.Threading.Thread]::CurrentThread.CurrentUICulture = '${ea}'`\n      ],\n      []\n    )\n  ].join(\";\")\n}\n\nlater(() =>\n  ee().on(\"clearCache\", () => PowerShell.instance.prior()?.clearMockResults())\n)\n\nexport class PowerShell extends EndableWrapper {\n  static ensureInstance() {\n    const prior = this.instance()\n    return prior.ended ? this.instance.refresh() : prior\n  }\n  static readonly instance = lazy(() => {\n    if (!isWin) throw new Error(\"PowerShell isn't available on this platform\")\n    return new PowerShell()\n  })\n  private readonly bco: BatchClusterObserver<BatchCluster>\n  private readonly pwsh: BatchCluster\n  private readonly mockResults = new Map<string, Result>()\n\n  // always access through PowerShell.instance():\n  private constructor() {\n    super(\"PowerShell\", () => this.bco.end(), EndableRanks.postdb)\n    this.bco = new BatchClusterObserver(\n      \"PowerShell\",\n      new BatchCluster({\n        processFactory: () =>\n          execFile(\"powershell\", Settings.powerShellArgs.values),\n        logger: () => mkLogger(\"PowerShell\"),\n        versionCommand: versionCommand(),\n        pass: Done,\n        fail: \"Error\",\n        exitCommand: \"exit\",\n        maxProcs: Settings.powerShellProcs.valueOrDefault,\n        taskTimeoutMillis: commandTimeoutMs(),\n\n        maxIdleMsPerProcess: minuteMs,\n        cleanupChildProcs: false // we do this with the Pids class.\n      }),\n      EndableRanks.postdb // last to shut down.\n    )\n    Settings.powerShellProcs.watch(() =>\n      this.bco.t.setMaxProcs(Settings.powerShellProcs.valueOrDefault)\n    )\n    this.pwsh = this.bco.t\n  }\n\n  get lastStartError() {\n    return this.bco.lastStartError\n  }\n\n  get lastTaskError() {\n    return this.bco.lastTaskError\n  }\n\n  get ended() {\n    return this.pwsh.ended\n  }\n\n  versionPojo(): PromiseMaybe<PowerShellVersion> {\n    return this.executeJson(\"$PSVersionTable.PSVersion\")\n  }\n\n  version(): PromiseMaybe<string> {\n    return thenMap(\n      this.executeJson(\"$PSVersionTable.PSVersion\"),\n      ea => `${ea.Major}.${ea.Minor}.${ea.Build}`\n    )\n  }\n\n  get spawnedProcCount() {\n    return this.pwsh.spawnedProcCount\n  }\n\n  pushMockJsonResult(cmd: string, result: Result) {\n    this.pushMockResult(ensureSuffix(cmd, ConvertToCompressedJson), result)\n  }\n\n  pushMockResult(cmd: string, result: Result) {\n    this.mockResults.set(cmd, result)\n  }\n\n  clearMockResults() {\n    this.mockResults.clear()\n  }\n\n  async execute<T>(cmd: string, parser: Parser<T>): PromiseMaybe<T> {\n    if (this.pwsh.ended || ending()) {\n      this.logger.warn(\"execute() failed (ended)\", { cmd })\n      return\n    }\n\n    if (isTest && this.mockResults.has(cmd)) {\n      const f = this.mockResults.get(cmd)!\n      return parser(f.stdout, f.stderr, f.passed)\n    }\n\n    try {\n      const r = await thenElapsed(\n        this.pwsh.enqueueTask(\n          new Task(\n            cmd,\n            (stdout: string, stderr: string | undefined, passed: boolean) =>\n              parser(map(stdout, ea => stripPrefix(ea, cmd))!, stderr, passed)\n          )\n        )\n      )\n      return this.logger.tap({\n        msg: \"execute()\",\n        result: r.result,\n        meta: {\n          elapsedMs: r.elapsedMs,\n          cmd\n        }\n      })\n    } catch (err) {\n      this.logger.warn(\"execute() failed: \" + err, { cmd })\n      return\n    }\n  }\n\n  async executeJson(cmd: string): PromiseMaybe<any> {\n    const r = await this.execute(\n      ensureSuffix(cmd, ConvertToCompressedJson),\n      (stdout, stderr, passed) => ({ stdout, stderr, passed })\n    )\n    if (r == null) {\n      this.logger.warn(\"executeJson(): null result\", { cmd })\n      return\n    }\n    if (blank(r.stdout) || notBlank(r.stderr) || !r.passed) {\n      this.logger.warn(\"executeJson(): failed result\", { cmd, ...r })\n      return\n    }\n    try {\n      return JSON.parse(r.stdout)\n    } catch (err) {\n      const fixed = r.stdout.replace(/\\\\/g, \"\\\\\\\\\")\n      this.logger.info(\n        \"executeJson(): parsing failed, trying dub-whack fix...\",\n        { before: ellipsize(r.stdout), after: ellipsize(fixed) }\n      )\n      return JSON.parse(fixed)\n    }\n  }\n\n  async executeJsonToA(cmd: string): PromiseMaybe<Obj[]> {\n    return thenMap(this.executeJson(cmd), json =>\n      Array.isArray(json) ? json : [json]\n    )\n  }\n\n  /**\n   * @return the path to the command, if it's available on the PATH\n   */\n  async which(cmd: string): PromiseMaybe<string> {\n    // Note to Future Me: `where` (Windows' version of `which`) doesn't seem to\n    // find binaries reliably, and this prevents spawning a binary (double win!)\n    const json = await this.executeJson(\n      \"Get-Command -ErrorAction SilentlyContinue \" +\n        pwshQuote(cmd) +\n        \" | Select-Object -Property Source\"\n    )\n    return Array.isArray(json) ? json[0]?.Source : json?.Source\n  }\n}\n\n/**\n * @return the PowerShell version, or undefined on unsupported platforms.\n * @throws if PowerShell times out or has issues\n */\nexport async function checkPowerShell_() {\n  if (!isWin) return\n  const ps = PowerShell.instance()\n  if (ps.ended || ending()) return\n  const version = await thenOrTimeoutError(\n    () => ps.version(),\n    commandTimeoutMs()\n  )\n  if (blank(version)) {\n    const err = await until(() => orElse(ps.lastStartError, ps.lastTaskError), {\n      timeoutMs: ShortCommandTimeoutMs,\n      intervalMs: 250\n    })\n    if (err != null) throw err\n    else throw new Error(\"(unknown error)\")\n  }\n  return version\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const AggregateTypes = strEnum(\"union\", \"intersection\")\nexport type AggregateType = StrEnumKeys<typeof AggregateTypes>\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\n// order here is the default sort order!\nexport const AssetFileSortCriteria = strEnum(\n  // more pixels are always better (this is quantized using variantSortCriteriaPower):\n  \"resolution\",\n  // prefer files in the library:\n  \"schemeIdx\",\n\n  // prefer files with a more accurate date:\n  \"capturedAtPrecision\",\n  // prefer files with more fields with metadata we care about:\n  \"metadataCoverage\",\n  // prefer files we can directly throw at the browser:\n  \"isBrowserSupported\",\n\n  // if they edit a file, we should prefer that newly edited version:\n  \"mtime\",\n\n  // If we have a burst files, prefer the \"burst cover\"\n  \"isCover\",\n\n  // If there are many copies of a file (image.jpg, image (1).jpg, image\n  // (2).jpg), prefer the one with the highest number (assuming that's the\n  // latest copy):\n  \"count\",\n\n  // help make things deterministic:\n  \"fileSize\",\n  // help make things deterministic:\n  \"basename\",\n  // help make things deterministic:\n  \"parentBasename\",\n  // just to make things deterministic:\n  \"uri\"\n)\n\nexport type AssetFileSortCriterion = StrEnumKeys<typeof AssetFileSortCriteria>\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { toBoolean } from \"../../fe/Boolean\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class BooleanSetting extends Setting<boolean> {\n  constructor(opts: SettingOpts<boolean>) {\n    super({\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toBoolean\n    })\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class BoundedFloatSetting extends Setting<number> {\n  constructor(\n    readonly options: SettingOpts<number> & { min: number; max: number }\n  ) {\n    super({\n      ...options,\n      toEnv: notBlankToS,\n      fromEnv: (value: Maybe<string>) =>\n        opt(value)\n          .flatMap(parseFloat)\n          .map(ea => clamp(options.min, options.max, ea))\n          .get()\n    })\n  }\n  addToJSON() {\n    return {\n      \"minimum value\": this.options.min,\n      \"maximum value\": this.options.max\n    }\n  }\n}\n","import { notBlank, notBlankToS } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { clamp, toInt } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class BoundedIntegerSetting extends Setting<number> {\n  constructor(\n    readonly options: SettingOpts<number> & { min: number; max: number }\n  ) {\n    super({\n      ...options,\n      toEnv: notBlankToS,\n      fromEnv: (value: Maybe<string>) =>\n        opt(value)\n          .filter(notBlank)\n          .flatMap(toInt)\n          .map(ea => clamp(options.min, options.max, ea))\n          .get()\n    })\n  }\n\n  get min(): number {\n    return this.options.min\n  }\n\n  get max(): number {\n    return this.options.max\n  }\n\n  clamp(value: Maybe<number>) {\n    return clamp(this.min, this.max, value ?? this.min)\n  }\n\n  addToJSON() {\n    return {\n      \"minimum value\": this.options.min,\n      \"maximum value\": this.options.max\n    }\n  }\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const ColorDistanceFunctions = strEnum(\"cie76\", \"cie94\", \"ciede2000\")\nexport type ColorDistanceFunction = StrEnumKeys<typeof ColorDistanceFunctions>\n","export const DominantColorKmeansRunsDefault = 7\n\n// Results from running ImageHash.spec.ts with different values:\n\n// with 32 runs: (mean: 108ms, sum: 5810ms)\n// dominantColorScore { k: 60, mean: 8.1, sum: 485, sd: 1.9, max: 15, min: 4.8 }\n\n// with 16 runs: (mean: 62ms, sum: 3327ms),\n// dominantColorScore { k: 60, mean: 8.2, sum: 494, sd: 2, max: 16, min: 5 }\n\n// with 8 runs: (mean: 36ms, sum: 1958ms)\n// dominantColorScore { k: 60, mean: 8.5, sum: 510, sd: 2.1, max: 17, min: 5 }\n\n// with 7 runs: (mean: 31ms, sum: 1636ms)\n// dominantColorScore { k: 60, mean: 8.5, sum: 511, sd: 2.1, max: 16, min: 4.8 }\n\n// with 5 runs: (mean: 24ms, sum: 1165ms )\n// dominantColorScore { k: 60, mean: 8.7, sum: 519, sd: 2.2, max: 17, min: 5.1 }\n\n// with 4 runs: (mean: 23ms, sum: 1067ms)\n// dominantColorScore { k: 60, mean: 8.7, sum: 523, sd: 2.2, max: 17, min: 5.2 }\n\n// with 3 runs: (mean: 19ms, sum: 611ms)\n// dominantColorScore { k: 60, mean: 8.8, sum: 528, sd: 2.3, max: 17, min: 5.2 }\n","export const DominantColorPixelsDefault = 1024\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport { decodeDuration, encodeDuration } from \"../date/DurationCodec\"\nimport { fmtFullDuration } from \"../date/DurationFormat\"\nimport { BaseSettingOpts, Setting, SettingOpts } from \"./Setting\"\n\nexport class DurationSetting extends Setting<number> {\n  constructor(opts: SettingOpts<string | number>) {\n    super({\n      ...(opts as any),\n      toEnv: encodeDuration,\n      fromEnv: decodeDuration\n    })\n  }\n\n  get valueOrDefault() {\n    // code is expecting this to be in millis.\n    return decodeDuration(super.valueOrDefault) as any\n  }\n\n  get value() {\n    // code is expecting this to be in millis.\n    return decodeDuration(super.value) as any\n  }\n\n  set value(o: any) {\n    super.userValue = decodeDuration(o)\n  }\n\n  get humanValue() {\n    return fmtFullDuration(this.value)\n  }\n\n  // the file value is the only one 8601-encoded:\n  get fileValue() {\n    return encodeDuration(super.fileValue) as any\n  }\n\n  set fileValue(o: any) {\n    super.fileValue = decodeDuration(o)\n  }\n}\n\nexport class OptionalDurationSetting extends Setting<Maybe<number>> {\n  constructor(opts: BaseSettingOpts<Maybe<string | number>>) {\n    super({\n      ...(opts as any),\n      toEnv: encodeDuration,\n      fromEnv: decodeDuration,\n      defaultValue: undefined\n    })\n  }\n\n  get valueOrDefault() {\n    return this.value ?? decodeDuration(this.defaultValue as any)!\n  }\n\n  get fileValue() {\n    return encodeDuration(super.fileValue) as any\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { toFloat } from \"../../fe/Number\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class FloatSetting extends Setting<number> {\n  constructor(opts: SettingOpts<number>) {\n    super({\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toFloat\n    })\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { toInt } from \"../../fe/Number\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class IntegerSetting extends Setting<number> {\n  constructor(opts: SettingOpts<number>) {\n    super({\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toInt\n    })\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { hourMs, minuteMs } from \"../../fe/Date\"\nimport { gt0 } from \"../../fe/Number\"\nimport { entries } from \"../../fe/Object\"\nimport { ensureSuffix } from \"../../fe/String\"\nimport { mkLogger } from \"../Logger\"\nimport { mapGt0 } from \"../Number\"\nimport { picturesDir } from \"../dir/PicturesDir\"\nimport { ColorDistanceFunctions } from \"./ColorDistanceFunctions\"\nimport { DominantColorKmeansRunsDefault } from \"./DominantColorKmeansRunsDefault\"\nimport { DominantColorPixelsDefault } from \"./DominantColorPixelsDefault\"\nimport { Setting } from \"./Setting\"\nimport { Settings } from \"./Settings\"\nimport { TagInferenceSettingValues } from \"./TagInferenceSettingValues\"\n\nconst logger = lazy(() => mkLogger(\"settings.MetaSettings\"))\n\nfunction getSettingValue<T extends keyof typeof Settings>(\n  name: T,\n  arr: Setting<any>[]\n): (typeof Settings)[T][\"valueOrDefault\"] {\n  return (Settings[name].value ??\n    arr.find(ea => ea.name === name)?.value ??\n    Settings[name].defaultValue) as T\n}\n\nexport function handleMetaSettings(imported: Setting<any>[]) {\n  // Yes, we actually want valueOrDefault (so if we're rpi, we're true if\n  // unset), and we don't need getSettingValue here.\n  setQuickSyncMode(Settings.quickSyncMode.valueOrDefault)\n\n  if (getSettingValue(\"disableAllFilters\", imported)) {\n    disableAllFilters()\n  }\n\n  if (getSettingValue(\"strictDeduping\", imported)) {\n    setStrictDeduping()\n  }\n\n  if (getSettingValue(\"allowFilesystemSleep\", imported)) {\n    allowFilesystemSleep()\n  }\n}\n\nexport async function handleDeprecatedSettings() {\n  {\n    //\n    // scanMyPictures\n    //\n    if (isTrue(Settings.scanMyPictures.value)) {\n      Settings.scanMyPictures.unset()\n      const newPath = await picturesDir()\n      logger().info(\"Upgrading setting scanMyPictures to scanPaths\", {\n        priorValues: Settings.scanPaths.values,\n        newPath\n      })\n      Settings.scanPaths.push(newPath)\n    }\n  }\n\n  {\n    //\n    // assetSubdirectoryDatestampFormat\n    //\n    const prior = Settings.assetSubdirectoryDatestampFormat.value\n    Settings.assetSubdirectoryDatestampFormat.unset()\n    if (blank(Settings.assetPathnameFormat.value) && notBlank(prior)) {\n      const newValue = ensureSuffix(prior, \"/\") + \"BASE\"\n      logger().info(\n        \"Upgrading setting assetSubdirectoryDatestampFormat to assetPathnameFormat\",\n        { prior, newValue }\n      )\n      Settings.assetPathnameFormat.value = newValue\n    }\n  }\n\n  {\n    //\n    // syncIntervalHours\n    //\n    const prior = Settings.syncIntervalHours.value\n    Settings.syncIntervalHours.unset()\n    const newValue = mapGt0(prior, ea => ea * hourMs)\n\n    if (!Settings.syncNewIntervalMs.hasValue() && gt0(newValue)) {\n      logger().info(\n        \"Upgrading setting syncIntervalHours to syncNewIntervalMs\",\n        { prior, newValue }\n      )\n      Settings.syncNewIntervalMs.value = newValue\n    }\n\n    if (!Settings.syncChangedIntervalMs.hasValue() && gt0(newValue)) {\n      logger().info(\n        \"Upgrading setting syncIntervalHours to syncChangedIntervalMs\",\n        { prior, newValue }\n      )\n      Settings.syncChangedIntervalMs.value = newValue\n    }\n  }\n\n  {\n    //\n    // dbBackupIntervalMinutes\n    //\n    if (\n      Settings.dbBackupIntervalMinutes.hasValue() &&\n      !Settings.dbBackupIntervalMs.hasValue()\n    ) {\n      const newValue =\n        Settings.dbBackupIntervalMinutes.valueOrDefault * minuteMs\n      logger().info(\n        \"Upgrading setting dbBackupIntervalMinutes to dbBackupIntervalMs\",\n        { newValue }\n      )\n\n      Settings.dbBackupIntervalMs.value = newValue\n    }\n  }\n\n  {\n    //\n    // enableSiblingInference\n    //\n    if (\n      Settings.enableSiblingInference.hasValue() &&\n      !Settings.siblingInference.hasValue()\n    ) {\n      const newValue = Settings.enableSiblingInference.valueOrDefault\n        ? Settings.siblingInference.valueOrDefault\n        : TagInferenceSettingValues.never\n      logger().info(\n        \"Upgrading setting enableSiblingInference to siblingInference\",\n        { newValue }\n      )\n\n      Settings.siblingInference.value = newValue\n    }\n  }\n}\n\n// We use envValue here (rather than tmpValue) to forcefully ignore any env or\n// file overrides.\n\nexport function disableAllFilters() {\n  Settings.disableAllFilters.envValue = true\n\n  Settings.disableIgnorableFilters.envValue = true\n\n  Settings.respectFileExtensions.envValue = false\n\n  Settings.requireMakeModel.envValue = false\n  Settings.rejectRatingsLessThan.envValue = -100\n\n  Settings.minImageDimension.envValue = 0\n  Settings.minVideoDimension.envValue = 0\n\n  Settings.minVideoDurationSec.envValue = 0\n  Settings.maxVideoDurationSec.envValue = 0\n\n  Settings.minAssetFileSizeBytes.envValue = 0\n  Settings.maxAssetFileSizeBytes.envValue = 0\n\n  Settings.validateJpegImages.envValue = false\n  Settings.validateRawImages.envValue = false\n  Settings.validateVideos.envValue = false\n}\n\nexport function setStrictDeduping() {\n  Settings.strictDeduping.envValue = true\n  Settings.useImageHashes.envValue = true\n  Settings.minExposureSettingsCoeffPct.envValue = 98\n  Settings.minImageCoeffPct.envValue = 95\n  Settings.imageHashFuzzyDateDelta.envValue = 1\n  Settings.imageHashDifferentMimetypesDelta.envValue = -10\n  Settings.imageHashGreyscaleDelta.envValue = 1\n}\n\nexport function allowFilesystemSleep() {\n  Settings.sharedStatePollMs.envValue = 0\n}\n\nconst quickSyncSettings = [\n  Settings.validateJpegImages,\n  Settings.validateRawImages,\n  Settings.validateVideos,\n  Settings.transcodeVideos,\n  Settings.previewMinimized,\n  Settings.previewProgressive,\n  Settings.previewSharpen,\n  Settings.useImageHashes,\n  Settings.enableSiblingInference\n]\n\nconst argonDefaults = {\n  argon2TimeCost: 8,\n  argon2MemoryCostMB: 64,\n  argon2Parallelism: 1\n} as const\nconst argonQuick = {\n  argon2TimeCost: 4,\n  argon2MemoryCostMB: 32,\n  argon2Parallelism: 1\n} as const\n\nexport function setQuickSyncMode(quick: boolean) {\n  for (const s of quickSyncSettings) {\n    if (quick) {\n      s.tmpValueIfUnset = false\n    } else {\n      s.tmpValue = undefined\n    }\n  }\n  const argon = quick ? argonQuick : argonDefaults\n  for (const [k, v] of entries(argon)) {\n    Settings[k].defaultValue = v\n  }\n  Settings.dominantColorPixels.defaultValue = quick\n    ? 256\n    : DominantColorPixelsDefault\n  Settings.dominantColorKmeansRuns.defaultValue = quick\n    ? 0\n    : DominantColorKmeansRunsDefault\n\n  Settings.dominantColorDeltaE.defaultValue = quick\n    ? ColorDistanceFunctions.cie76\n    : ColorDistanceFunctions.ciede2000\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { resolve } from \"../fs/Path\"\nimport { OptionalStringSetting } from \"./OptionalStringSetting\"\nimport { BaseSettingOpts, SettingOpts } from \"./Setting\"\n\nexport class OptionalFileSetting extends OptionalStringSetting {\n  constructor(\n    opts: BaseSettingOpts<Maybe<string>> & Partial<SettingOpts<Maybe<string>>>\n  ) {\n    super({\n      toEnv: ea => ea?.trim(),\n      fromEnv: ea => (blank(ea) ? undefined : resolve(ea)),\n      defaultValue: undefined,\n      ...opts\n    })\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toFloat } from \"../../fe/Number\"\nimport { BaseSettingOpts, DefaultValued, Setting } from \"./Setting\"\n\nexport class OptionalFloatSetting extends Setting<Maybe<number>> {\n  constructor(\n    opts: BaseSettingOpts<Maybe<number>> & Partial<DefaultValued<Maybe<number>>>\n  ) {\n    super({\n      defaultValue: undefined,\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toFloat\n    })\n  }\n}\n","import { notBlankToS } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { BaseSettingOpts, Setting } from \"./Setting\"\n\nexport class OptionalIntegerSetting extends Setting<Maybe<number>> {\n  constructor(opts: BaseSettingOpts<Maybe<number>>) {\n    super({\n      ...opts,\n      toEnv: notBlankToS,\n      fromEnv: toInt,\n      defaultValue: undefined\n    })\n  }\n}\n","import { Maybe } from \"../../fe/MaybeTypes\"\nimport {\n  BaseSettingOpts,\n  Setting,\n  SettingConverters,\n  SettingOpts\n} from \"./Setting\"\n\nexport class OptionalStringSetting extends Setting<Maybe<string>> {\n  constructor(\n    opts: BaseSettingOpts<Maybe<string>> &\n      Partial<SettingOpts<Maybe<string>>> &\n      Partial<SettingConverters<string>>\n  ) {\n    super({\n      toEnv: ea => ea?.trim(),\n      fromEnv: ea => ea,\n      defaultValue: undefined,\n      ...opts\n    })\n  }\n\n  hasValue() {\n    return this.value != null\n  }\n}\n","import { ensurePrefix } from \"../../fe/String\"\nimport { camel2snake, snake2camel } from \"../StringCase\"\nimport { SettingsName } from \"./SettingsName\"\n\nexport function nameFromEnv(name: string): string {\n  return snake2camel(name.replace(/^PS_/, \"\").toLowerCase())\n}\n\nexport function envFromName(name: SettingsName | string): string {\n  return ensurePrefix(camel2snake(name).toUpperCase(), \"PS_\")\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { filterInPlace, isEmpty, uniq } from \"../../fe/Array\"\nimport { ChangeListener } from \"../../fe/ChangeListener\"\nimport { shallowClone } from \"../../fe/Clone\"\nimport { eql } from \"../../fe/Eql\"\nimport { orList } from \"../../fe/FmtList\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Defined, map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe, MaybeNull } from \"../../fe/MaybeTypes\"\nimport { Obj, StringValued, entries } from \"../../fe/Object\"\nimport { padding } from \"../../fe/Pad\"\nimport { pluralize } from \"../../fe/Pluralize\"\nimport { StrEnumKeys, strEnum } from \"../../fe/StrEnum\"\nimport { Thunk, tot } from \"../../fe/Thunk\"\nimport { toA } from \"../../fe/toA\"\nimport { CaseInsensitiveValued } from \"../CaseInsensitiveValued\"\nimport { wrap } from \"../String\"\nimport { env } from \"../env/Env\"\nimport { caseInsensitiveEnv } from \"../env/GetEnv\"\nimport { ee } from \"../event/EventEmitter\"\nimport { envFromName } from \"./PsEnvNames\"\nimport { wrapTomlToLines } from \"./TomlStringify\"\nimport { WrapComments } from \"./WrapComments\"\n\n// LIMIT DEPS TO FE AND BASE CLASSES! #NODEPLOOPS NO DE PLOOPS!\n\nexport const SettingCategories = strEnum(\n  // System settings:\n  \"Paths\",\n  \"Desktops\",\n  \"Filesystem\",\n  \"Cache\",\n  \"Logging\",\n  \"Networking\",\n  \"Processes\",\n  \"Security\",\n  \"Tools\",\n  \"Updates\",\n  // Library settings:\n  \"Auth\",\n  \"Color\",\n  \"Db\",\n  \"Deduping\",\n  \"Events\",\n  \"Filters\",\n  \"HealthChecks\",\n  \"Parsing\",\n  \"Previews\",\n  \"Reporting\",\n  \"Sidecars\",\n  \"Subscriptions\",\n  \"Sync\",\n  \"Tagging\",\n  \"Video\",\n  \"Volumes\",\n  \"Web\"\n)\nexport type SettingCategory = StrEnumKeys<typeof SettingCategories>\n\nexport const LibraryCategories: ReadonlyArray<SettingCategory> = Object.freeze([\n  // we include reporting in the library because their email won't change\n  SettingCategories.Auth,\n  SettingCategories.Color,\n  SettingCategories.Db,\n  SettingCategories.Deduping,\n  SettingCategories.Events,\n  SettingCategories.Filters,\n  SettingCategories.HealthChecks,\n  SettingCategories.Parsing,\n  SettingCategories.Previews,\n  SettingCategories.Reporting,\n  SettingCategories.Sidecars,\n  SettingCategories.Subscriptions,\n  SettingCategories.Sync,\n  SettingCategories.Tagging,\n  SettingCategories.Video,\n  SettingCategories.Volumes,\n  SettingCategories.Web\n])\n\n// System is everything not library:\nexport const SystemCategories: ReadonlyArray<SettingCategory> = Object.freeze(\n  SettingCategories.values.filter(ea => !LibraryCategories.includes(ea))\n)\n\nexport interface BaseSettingOpts<T> {\n  aliases?: string[]\n  envAliases?: string[]\n  category: SettingCategory\n  description: string\n  exampleValue?: Thunk<Maybe<T>>\n  transient?: boolean // defaults to false\n  advanced?: Thunk<boolean>\n  deprecated?: boolean // be sure to add a migrator to MetaSettings!\n  sensitive?: boolean\n}\n\nexport interface SettingConverters<T> {\n  readonly toEnv: (value: Maybe<T>) => Maybe<string>\n  readonly fromEnv: (value: Maybe<string>) => Maybe<T>\n}\n\nexport interface DefaultValued<T> {\n  defaultValue: T | Thunk<T>\n}\n\nexport type SettingOpts<T> = BaseSettingOpts<T> & DefaultValued<T>\n\nexport interface SavedSetting {\n  key: string\n  value: any\n}\n\nexport function settingsToObj(arr: Setting[]): Obj {\n  const obj: Obj = {}\n  for (const ea of arr) {\n    if (ea.hasValue()) obj[ea.name] = ea.value\n  }\n  return obj\n}\n\nexport interface SettingState<T> {\n  user: Maybe<T>\n  env: Maybe<T>\n  file: Maybe<T>\n  tmp: Maybe<T>\n}\n\n/**\n * Supports env-overridden preferences that can be persisted to a file.\n *\n * 1. Setting an environment variable or command-line argument must not be\n *    persisted to the settings file, as that would become the default value.\n * 2. Settings file values should not override the command-line or environment's\n *    values, as that would cause the env or CLI value to be ignored.\n *\n * SO: we have to be able to distinguish between env or cli values and persisted\n * values.\n */\nexport class Setting<T = any> {\n  protected _name!: string\n  protected _names!: string[]\n  protected _key!: string\n  protected _keys!: string[]\n  protected _userValue: Maybe<T>\n  // This lets us only parse values out of the env when we actually need the\n  // value. We get circular dependency errors if we do this on construction\n  // time:\n  _envValue = lazy(() => this.readFromEnv())\n  protected _fileValue: Maybe<T>\n  protected _tmpValue: Maybe<T>\n  protected readonly watchers: ChangeListener<T>[] = []\n  protected optsOverrides: Partial<SettingOpts<T> & SettingConverters<T>> = {}\n\n  constructor(readonly opts: SettingOpts<T> & SettingConverters<T>) {}\n\n  getState(): SettingState<T> {\n    return {\n      user: this._userValue,\n      env: this.envValue,\n      file: this._fileValue,\n      tmp: this._tmpValue\n    }\n  }\n\n  dump() {\n    return {\n      name: this.name,\n      key: this.key,\n      ...this.getState(),\n      hasValue: this.hasValue(),\n      isUnset: this.isUnset(),\n      defaultValue: this.defaultValue\n    }\n  }\n\n  /**\n   * Used for testing: supports changing and restoring state without firing\n   * change observers.\n   */\n  setState(s: Partial<SettingState<T>>) {\n    if (s != null) {\n      this._userValue = s.user\n      this.envValue = s.env\n      this._fileValue = s.file\n      this._tmpValue = s.tmp\n    }\n  }\n\n  // TODO: Doesn't work. I don't know why it doesn't.\n  // runAndRestore<L>(newValue: T, l: () => L): L {\n  //   const priorState = this.getState()\n  //   try {\n  //     this.value = newValue\n  //     return l()\n  //   } finally {\n  //     this.setState(priorState)\n  //   }\n  // }\n\n  normalizeValue(v: Maybe<T>): Maybe<T> {\n    return v == null ? undefined : this.opts.fromEnv(this.opts.toEnv(v))\n  }\n\n  /**\n   * @return the value that should be persisted in a settings.toml. Ignores env\n   * and tmp values.\n   */\n  get fileValue(): Maybe<T> {\n    return this._userValue ?? this._fileValue\n  }\n\n  set fileValue(value: Maybe<T>) {\n    this.onChange(value, ea => (this._fileValue = ea))\n  }\n\n  get envValue(): Maybe<T> {\n    return this._userValue ?? this._envValue()\n  }\n\n  /**\n   * - Set the value for the current process and child processes.\n   * - Don't persist this value in the settings.toml.\n   */\n  set envValue(value: Maybe<T>) {\n    this.onChange(value, ea => {\n      this._envValue.set(ea)\n      this.addToEnv()\n    })\n  }\n\n  refreshEnvValue(args: { broadcastChange?: boolean } = {}) {\n    // if the env value doesn't change valueOrDefault, don't bother the watchers:\n    const prior = shallowClone(this.valueOrDefault)\n    this._envValue.unset()\n    if (true === args?.broadcastChange) this.maybeBroadcastChange(prior)\n  }\n\n  get tmpValue(): Maybe<T> {\n    return this._userValue ?? this._tmpValue\n  }\n\n  /**\n   * - Set the value for the current process (not child processes).\n   * - Don't persist this value in the settings.toml.\n   */\n  set tmpValue(value: Maybe<T>) {\n    this.onChange(value, ea => (this._tmpValue = ea))\n  }\n\n  /**\n   * @return the first set value from user, env, file, or tmp.\n   */\n  get value(): Maybe<T> {\n    return (\n      this._userValue ?? this._envValue() ?? this._fileValue ?? this._tmpValue\n    )\n  }\n\n  set value(value: MaybeNull<T>) {\n    this.userValue = value == null ? undefined : value\n  }\n\n  /**\n   * If there is a \"human-friendly\" version of the value, return that.\n   */\n  get humanValue(): Maybe<T | string> {\n    return this.value\n  }\n\n  set userValue(value: Maybe<T>) {\n    this.onChange(value, ea => (this._userValue = ea))\n  }\n\n  get valueOrThrow(): Defined<T> {\n    const v = this.value\n    if (v == null) {\n      throw new Error(\"Missing value for setting \" + this.name)\n    } else {\n      return v as any\n    }\n  }\n\n  hasValue() {\n    return this.value != null\n  }\n\n  isUnset() {\n    return this.value == null\n  }\n\n  /**\n   * Read the value from the given `Obj` or the ENV.\n   *\n   * THIS DOESN'T CHANGE ANY STATE. If you want to import from the env, use\n   * `importFromEnv`.\n   */\n  readFromEnv(obj?: StringValued): Maybe<T> {\n    const civ =\n      obj == null ? caseInsensitiveEnv() : new CaseInsensitiveValued(obj)\n    // Support PS_LOG_LEVEL and logLevel:\n    for (const k of [...this.keys, ...this.names]) {\n      const v = map(civ.get(k), ea => this.opts.fromEnv(ea))\n      if (v != null) return v\n    }\n    return\n  }\n\n  /**\n   * Should only be used directly by tests, as env shouldn't be wiggling around\n   * after a process starts.\n   */\n  setFromEnv(environment: StringValued = env()): Maybe<T> {\n    return (this.envValue = this.readFromEnv(environment))\n  }\n\n  setValueIfDefined(value: Maybe<T>) {\n    if (value != null) this.value = value\n  }\n\n  watchLater(l: ChangeListener<T>) {\n    this.watchers.push(l)\n  }\n\n  watch(l: ChangeListener<T>) {\n    this.watchLater(l)\n    // setImmediate allows the call to addListener() reference classes or\n    // instances that haven't been parsed yet:\n    setImmediate(() => this.broadcastChange())\n  }\n\n  unWatch(l: ChangeListener<T>) {\n    filterInPlace(this.watchers, ea => ea === l)\n  }\n\n  broadcastChange() {\n    const curr = this.valueOrDefault\n    for (const ea of this.watchers) {\n      ea(curr)\n    }\n    ee().emitDebounced(\"settingsChanged\")\n  }\n\n  /**\n   * @param mutateFunc may change this.value via one of the delegates\n   */\n  protected onChange(v: Maybe<T>, mutateFunc: (ea: Maybe<T>) => any) {\n    // We have to shallow clone prior if it's an array or object, because\n    // mutateFunc may modify prior directly, and then eql() will false-positive.\n    const prior = shallowClone(this.valueOrDefault)\n    mutateFunc(this.normalizeValue(v))\n    this.maybeBroadcastChange(prior)\n  }\n\n  protected maybeBroadcastChange(prior: T) {\n    if (!eql(this.valueOrDefault, prior)) this.broadcastChange()\n  }\n\n  /**\n   * This is the camelCasedVersionOfTheSettingName\n   */\n  get name(): string {\n    return this._name\n  }\n\n  get names(): string[] {\n    return this._names\n  }\n\n  // this is public so Settings can push field names down to instances\n  _setName(name: string) {\n    if (this._name != null) throw new Error(\"cannot set name twice\")\n    this._name = name\n    this._names = uniq([name, ...toA(this.opts.aliases)])\n    this._key = envFromName(name)\n    this._keys = uniq([\n      ...this._names.map(envFromName),\n      this._key,\n      ...toA(this.opts.envAliases)\n    ])\n  }\n\n  /**\n   * This is the environment variable name for this setting:\n   */\n  get key(): string {\n    return this._key\n  }\n\n  /**\n   * This is a list of all environment keys for this setting. It will always\n   * include `this.key`.\n   */\n  get keys(): string[] {\n    return this._keys\n  }\n\n  get altKeys(): string[] {\n    return this._keys.filter(ea => ea !== this._key)\n  }\n\n  get category(): SettingCategory {\n    return this.opts.category\n  }\n\n  get categoryType(): \"system\" | \"library\" {\n    return LibraryCategories.includes(this.category) ? \"library\" : \"system\"\n  }\n\n  get transient(): boolean {\n    return this.opts.transient === true\n  }\n\n  /**\n   * Is this setting an \"advanced\" option (and can be initially hidden)?\n   */\n  get advanced(): boolean {\n    return mapOr(\n      this.opts.advanced,\n      ea => ea(),\n      () => true\n    )\n  }\n\n  /**\n   * @return the env value encoding `this.valueOrDefault`\n   */\n  get envValueOrDefault(): Maybe<string> {\n    return this.opts.toEnv(this.valueOrDefault)\n  }\n\n  set tmpValueIfUnset(t: Maybe<T>) {\n    if (this.isUnset()) this.tmpValue = t\n  }\n\n  get defaultValue(): T {\n    return tot(this.optsOverrides.defaultValue ?? this.opts.defaultValue)\n  }\n\n  set defaultValue(t: T | Thunk<T>) {\n    const prior = shallowClone(this.valueOrDefault)\n    this.optsOverrides.defaultValue = t\n    this.maybeBroadcastChange(prior)\n  }\n\n  resetDefaultValue() {\n    this.optsOverrides.defaultValue = undefined\n  }\n\n  get exampleValue(): Maybe<T> {\n    return tot(this.optsOverrides.exampleValue ?? this.opts.exampleValue)\n  }\n\n  set exampleValue(t: Maybe<T>) {\n    this.optsOverrides.exampleValue = t as any\n  }\n\n  get valueOrDefault(): T {\n    return this.value ?? this.defaultValue\n  }\n\n  /**\n   * no-op if unset\n   */\n  addToEnvMaybe<SV extends StringValued>(obj?: SV, overrideValue?: T): SV {\n    const e: any = obj ?? env()\n    // If we don't have a value, let the child take the default, or the\n    // persisted value. This fixes\n    // https://gitlab.com/photostructure/photostructure/issues/202\n    const v = this.envValue ?? overrideValue\n    if (v != null) {\n      e[this.key] = this.opts.toEnv(v)\n    }\n    if (obj == null) {\n      caseInsensitiveEnv.unset()\n    }\n    return e as SV\n  }\n\n  toEnvValue(overrideValue?: T): Maybe<string> {\n    return this.opts.toEnv(overrideValue ?? this.valueOrDefault)\n  }\n\n  addToEnv<SV extends StringValued>(obj?: SV, overrideValue?: T): SV {\n    const e: any = obj ?? env()\n    const value = this.toEnvValue(overrideValue)\n    if (value != null) {\n      e[this.key] = value\n      if (obj == null) {\n        caseInsensitiveEnv.unset()\n      }\n    }\n    return e as SV\n  }\n\n  deleteFromEnv<SV extends StringValued>(obj?: SV): SV {\n    const cie =\n      map(obj, ea => new CaseInsensitiveValued(ea)) ?? caseInsensitiveEnv()\n    for (const ea of [...this.names, ...this.keys]) {\n      cie.delete(ea)\n    }\n    return cie.obj as SV\n  }\n\n  /**\n   * Removes tmp, env, and user-set values\n   */\n  unset() {\n    this.onChange(undefined, () => {\n      this._userValue = undefined\n      this._envValue.unset()\n      this._fileValue = undefined\n      this._tmpValue = undefined\n      this.optsOverrides = {}\n      this.deleteFromEnv()\n    })\n    return this\n  }\n\n  addToJSON(): Obj {\n    return {}\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      value: this.value,\n      defaultValue: this.opts.defaultValue\n    }\n  }\n\n  toCommentedLines() {\n    const title = this.name + \" or \" + this.key\n    const lines = wrap(\n      [\n        padding(\"-\", title.length),\n        title,\n        padding(\"-\", title.length),\n        \"\",\n        ...(this.opts.deprecated === true\n          ? [\n              \"NOTE: this setting has been deprecated and will be removed in a future version of PhotoStructure.\",\n              \"\"\n            ]\n          : []),\n        // make all newlines double-spaced:\n        `${this.opts.description.replace(/\\n+/g, \"\\n\\n\")}`\n      ],\n      WrapComments\n    )\n\n    function maybeAddList(key: string, arr: Maybe<string[]>) {\n      if (!isEmpty(arr)) {\n        lines.push(\n          ...wrap(\n            [\n              \"\",\n              (arr.length === 1 ? key : pluralize(key)) +\n                \": \" +\n                orList(arr.map(ea => stringify(ea)))\n            ],\n            WrapComments\n          )\n        )\n      }\n    }\n    maybeAddList(\"alias\", this.opts.aliases)\n    maybeAddList(\"environment alias\", this.altKeys)\n\n    for (const [key, value] of entries(this.addToJSON())) {\n      const v = Array.isArray(value)\n        ? orList(value.map(ea => stringify(ea)))\n        : stringify(value)\n      lines.push(...wrap([\"\", key + \": \" + v], WrapComments))\n    }\n\n    return lines\n  }\n\n  toEnvLine(value?: T): string {\n    return (\n      this.key +\n      \"=\" +\n      (map(value, ea => this.opts.toEnv(ea)) ?? this.envValueOrDefault)\n    )\n  }\n\n  toTomlLines(): string[] {\n    const lines: string[] = this.toCommentedLines()\n\n    wrapTomlToLines({\n      lines,\n      wrap: WrapComments,\n      key: \"example value\",\n      value: tot(this.exampleValue)\n    })\n\n    wrapTomlToLines({\n      lines,\n      wrap: WrapComments,\n      prepend: [\"Default value:\"],\n      key: this.name,\n      value: tot(this.defaultValue)\n    })\n\n    wrapTomlToLines({\n      lines,\n      key: this.name,\n      value: tot(this.fileValue)\n    })\n\n    return lines\n  }\n}\n","import { BatchClusterOptions } from \"batch-cluster\"\nimport { delimiter } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { diff, uniq } from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { FitSizes } from \"../../fe/ImageSizes\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { entries, values } from \"../../fe/Object\"\nimport { GB, KB, fmtBytes } from \"../../fe/Units\"\nimport { toS } from \"../../fe/toS\"\nimport { CaseInsensitiveMap } from \"../CaseInsensitiveMap\"\nimport { CaseInsensitiveValued } from \"../CaseInsensitiveValued\"\nimport { DefaultSensitiveEnvRegexPattern } from \"../DefaultSensitiveEnvRegexPattern\"\nimport { noColor } from \"../NoColor\"\nimport { isProd as _isProd } from \"../NodeEnv\"\nimport { channel } from \"../PhotoStructureVersion\"\nimport { PriorityClasses } from \"../PriorityClass\"\nimport { DefaultDateTimeFormats } from \"../date/DefaultDateTimeFormats\"\nimport { encodeDuration } from \"../date/DurationCodec\"\nimport { AutoVacuumModes } from \"../db/AutoVacuumModes\"\nimport { CheckpointTypes } from \"../db/CheckpointTypes\"\nimport { RepairModes } from \"../db/RepairModes\"\nimport { SynchronousModes } from \"../db/SynchronousModes\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { HealthCheckIds } from \"../health/HealthCheckIds\"\nimport { CropStrategies } from \"../img/CropStrategies\"\nimport { SharpFailOns } from \"../img/SharpFailOn\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isElectron, isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { isRaspberryPi } from \"../platform/isRaspberryPi\"\nimport { DateTagFormats } from \"../tags/DateTagFormats\"\nimport {\n  DefaultCapturedAtTagsConst,\n  ProblematicCapturedAtTags\n} from \"../tags/DefaultCapturedAtTags\"\nimport { DefaultIncludedPreviewTags } from \"../tags/DefaultIncludedPreviewTags\"\nimport { DefaultLensMakes } from \"../tags/DefaultLensMakes\"\nimport { KeywordReparentingStrategies } from \"../tags/KeywordReparentingStrategies\"\nimport { NameTagFormats } from \"../tags/NameTagFormats\"\nimport { NameTagOrders } from \"../tags/NameTagOrders\"\nimport {\n  DefaultExcludedLinuxMountpointNames as DefaultExcludedLinuxMountpointBasenames,\n  DefaultExcludedLinuxMountpointPaths,\n  DefaultExcludedLinuxRoots\n} from \"../volumes/DefaultExcludedLinuxRoots\"\nimport { DefaultExcludedFilesystemTypes } from \"../volumes/DefaultIgnorableFilesystemTypes\"\nimport { HelmetPlugins } from \"../web/HelmetPlugins\"\nimport { cpuCount } from \"../work/CpuInfo\"\nimport { AggregateTypes } from \"./AggregateTypes\"\nimport { AssetFileSortCriteria } from \"./AssetFileSortCriteria\"\nimport { BooleanSetting } from \"./BooleanSetting\"\nimport { BoundedFloatSetting } from \"./BoundedFloatSetting\"\nimport { BoundedIntegerSetting } from \"./BoundedIntegerSetting\"\nimport { ColorDistanceFunctions } from \"./ColorDistanceFunctions\"\nimport { DominantColorKmeansRunsDefault } from \"./DominantColorKmeansRunsDefault\"\nimport { DominantColorPixelsDefault } from \"./DominantColorPixelsDefault\"\nimport { DurationSetting } from \"./DurationSetting\"\nimport { FloatSetting } from \"./FloatSetting\"\nimport { IntegerSetting } from \"./IntegerSetting\"\nimport { OptionalFileSetting } from \"./OptionalFileSetting\"\nimport { OptionalFloatSetting } from \"./OptionalFloatSetting\"\nimport { OptionalIntegerSetting } from \"./OptionalIntegerSetting\"\nimport { OptionalStringSetting } from \"./OptionalStringSetting\"\nimport {\n  LibraryCategories,\n  Setting,\n  SettingCategories,\n  SystemCategories\n} from \"./Setting\"\nimport { StringArraySetting } from \"./StringArraySetting\"\nimport { StringEnumSetting } from \"./StringEnumSetting\"\nimport { StringEnumsSetting } from \"./StringEnumsSetting\"\nimport { StringSetting } from \"./StringSetting\"\nimport { TagInferenceSettingValues } from \"./TagInferenceSettingValues\"\nimport { UpgradeChannels } from \"./UpgradeChannels\"\n\n// lazy so tests can isProd.set() us into production:\nexport const isProd = lazy(() => _isProd)\nconst isTest = () => !isProd()\n\n// WTH, amirite? This lets TypeScript not swoon over the Settings typings.\nfunction exposeNetworkWithoutAuth(): boolean {\n  return Settings.exposeNetworkWithoutAuth.valueOrDefault\n}\n\nexport const DefaultMaxEmbeddedBuffer = 250000\n\n// Most all Setting instances have keys that are prefixed with `PS_`, which let\n// them be used in environment variables without colliding with other\n// environment variables. The `PS_` prefix isn't needed otherwise.\n\n// Only Setting instances should be included in this namespace:\nexport const Settings = {\n  configDir: new OptionalStringSetting({\n    category: SettingCategories.Paths,\n    description: [\n      \"This is the system configuration directory. This can't be overridden in the system settings.toml, as it's used to _find_ the system settings.toml! This setting is here for documentation, and to allow the PS_CONFIG_DIR environment variable to override the default setting.\",\n      \"PhotoStructure's system configuration directory defaults to:\",\n      \"- Windows: %APPDATA%\\\\PhotoStructure (%APPDATA% is normally set to %HOME%/AppData/Roaming)\",\n      \"- macOS: ~/Library/Application Support/PhotoStructure\",\n      \"- Linux: ${XDG_CONFIG_DIR:$HOME/.config}/PhotoStructure.\"\n    ].join(\"\\n\"),\n    defaultValue: () => \"\", // < set by setSettingsDefaults()\n    advanced: () => false,\n    transient: true\n  }),\n\n  libraryDir: new OptionalFileSetting({\n    aliases: [\"libraryPath\", \"library\"],\n    category: SettingCategories.Paths,\n    description:\n      \"This is the absolute path to your PhotoStructure library. If missing, or set to an empty string, the welcome page will be shown when PhotoStructure launches. Use native file separators (so on windows, use back-slashes).\",\n    defaultValue: () => \"\", // < set by setSettingsDefaults()\n    advanced: () => false\n  }),\n\n  copyAssetsToLibrary: new BooleanSetting({\n    category: SettingCategories.Paths,\n    description: `Should PhotoStructure copy photos and videos to your PhotoStructure Library? This setting holds the value for the welcome page's \"May PhotoStructure organize your photos and videos?\" section, and is called \"automatic organization\" on the website.\\nRead more about this setting here: https://photostructure.com/getting-started/automatic-library-organization/ .`,\n    defaultValue: true,\n    advanced: () => false\n  }),\n\n  // todo: add new \"organize\" StringEnumSetting that is \"copy\", \"move\", \"softlink\", \"hardlink\"\n\n  previewsDir: new StringSetting({\n    category: SettingCategories.Paths,\n    description: `This is the directory that PhotoStructure uses to store preview images. This defaults to the \".photostructure/previews\" directory inside your PhotoStructure library. Absolute paths here are supported, but if you keep your library and previews directory separated, take care when you open your library on different computers, as this setting needs to be adjusted for those computers as well.\\nNOTE: \"originalDirs\" is recommended instead of this setting; If you get \"previewsDir\" wrong, your library won't work. If you get \"originalsDir\" wrong, you just break full-screen asset zooming and playback for non-transcoded videos.\\nSee https://forum.photostructure.com/t/hybrid-photostructure-libraries/775 .`,\n    defaultValue: () => \".photostructure/previews\"\n  }),\n\n  originalsDir: new StringSetting({\n    aliases: [\"originalDir\"],\n    category: SettingCategories.Paths,\n    description: `This is the directory that PhotoStructure uses to store original images when \"copyAssetsToLibrary\" is enabled. Absolute paths are supported. Relative paths are evaluated from your libraryDir. This setting defaults to \".\", which is the same as your PhotoStructure library directory, unless you are on docker, and a /ps/originals directory exists.\\nIf you open your PhotoStructure library on a different computer, and that computer doesn't have access to your originals volume, full-screen zoom won't work, and non-transcoded videos will not play.\\nThis system setting needs to be set appropriately on different computers (it won't be set automatically!)\\nIf you have a large library and want to use an SSD, we recommend you set your libraryDir to your SSD, and use this setting to store your originals on a larger volume, rather than using the \"previewsDir\" setting.\\nSee https://forum.photostructure.com/t/hybrid-photostructure-libraries/775 and https://forum.photostructure.com/t/new-easy-mode-for-docker-coming-in-v2-1/1278/6?u=mrm .`,\n    defaultValue: \"\" // < set by setSettingsDefaults()\n  }),\n\n  scanAllDrives: new BooleanSetting({\n    category: SettingCategories.Paths,\n    description:\n      \"Should PhotoStructure scan all folders on all drives available to this computer for photos and videos?\",\n    defaultValue: true,\n    advanced: () => false\n  }),\n\n  /**\n   * @deprecated\n   */\n  scanMyPictures: new BooleanSetting({\n    category: SettingCategories.Paths,\n    description: `If set, PhotoStructure will automatically add your pictures directory to your \"scanPaths\" setting and then flip this setting back to false. Add your Pictures directory directly to your scanPaths setting instead.`,\n    defaultValue: false,\n    deprecated: true\n  }),\n\n  scanPaths: new StringArraySetting({\n    aliases: [\"scanPath\"],\n    category: SettingCategories.Paths,\n    description: `This holds an array of absolute paths to scan for assets. If you are setting this via an environment variable, you may use either standard PATH formatting, like \\`PS_SCAN_PATHS=\"/path/one:/path/two\"\\`, or use JSON encoding, like \\`PS_SCAN_PATHS='[\"/path/one\",\"/path/two\"]'\\`.`,\n    advanced: () => false\n  }),\n\n  argvScanPaths: new StringArraySetting({\n    category: SettingCategories.Paths,\n    description: `This holds an array of absolute paths provided on the command line to import. This overrides \"scanPaths\", and should always be scanned for changes. See https://forum.photostructure.com/t/1597/4 . For internal use only.`,\n    transient: true,\n    advanced: () => true\n  }),\n\n  // TODO:\n\n  // watchPaths: new StringArraySetting({\n  //   aliases: [\"watchPath\"],\n  //   category: SettingCategories.Paths,\n  //   description: `This holds an array of absolute paths to directories that should be watched for changes recursively. Files added, deleted, or updated will be synchronized immediately.`,\n  //   advanced: () => true\n  // }),\n\n  pidFile: new OptionalStringSetting({\n    category: SettingCategories.Paths,\n    envAliases: [\"PIDFILE\"],\n    description:\n      \"This is the absolute path to the PID file for the main process. This is optional and only used by PhotoStructure for Servers. Make sure the UID/GID that PhotoStructure runs as can read and write to this file.\",\n    exampleValue: () => \"/var/run/photostructure.pid\"\n  }),\n\n  cacheDir: new StringSetting({\n    category: SettingCategories.Paths,\n    description:\n      \"Where would you like PhotoStructure's scratch file directory? This must be a fast, local disk with several gigabytes free.\\nNote that if PS_FORCE_LOCAL_DB_REPLICA is enabled, the local DB replica will be stored in this directory while PhotoStructure is running: don't delete it!\\nIf this is set to /tmp PhotoStructure will write to a user-specific /tmp/.photostructure-cache-$UID directory.\",\n    defaultValue: () => \"\" // < set by setSettingsDefaults()\n  }),\n\n  //\n  // Cache\n  //\n\n  fsCacheSlowMs: new DurationSetting({\n    category: SettingCategories.Cache,\n    description: `If a cache entry takes longer than this value to compute, cache results for later reuse to the filesystem.\\nThe default is very short, under the assumption that cache filesystem read/writes are <10ms.\\nSet this to 0 to never cache to the filesystem.`,\n    defaultValue: () => (isTest() ? \"1\" : \"25\")\n  }),\n\n  imageCacheMs: new DurationSetting({\n    category: SettingCategories.Cache,\n    description:\n      \"Assets requiring conversion may need intermediary file storage as they are imported. These intermediary files only need to live as long as the import process for that asset. Too short of a time will result in this conversion work being re-done during import. Too long of a time will result in additional diskspace in your cache directory being consumed.\",\n    defaultValue: \"15m\"\n  }),\n\n  readdirCacheMs: new DurationSetting({\n    category: SettingCategories.Cache,\n    description:\n      \"readdir() can take a long time over slow network shares and when directories are very large. This setting controls how long to cache readdir results that are slow (which take >= .5 seconds). Too short of a time will result in low cache hit rates, and very slow imports for these problematic directories. Too long of a time will result in PhotoStructure not seeing changes made to these directories.\\nSet to 0 to disable readdir() caching.\",\n    defaultValue: \"5m\"\n  }),\n\n  readdirSizeCacheThresh: new IntegerSetting({\n    category: SettingCategories.Cache,\n    description: `If readdir() has more than this number of child elements, always cache it.\\nSet to 0 to disable readdir() caching.`,\n    defaultValue: () => (isTest() ? 32 : 1024)\n  }),\n\n  //\n  // LOGGING\n  //\n\n  quiet: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"If true, the main service won't emit lifecycle messages to stdout. Note that logStdout=true or logTail=true will override quiet=true.\",\n    defaultValue: false\n  }),\n\n  logLevel: new StringSetting({\n    envAliases: [\"PS_LOG\", \"LOG\", \"LOG_LEVEL\"],\n    category: SettingCategories.Logging,\n    description: `Determines which level of log messages are emitted to log files. May be \"debug\", \"info\", \"warn\", \"error\", \"fatal\", or several log level directives followed by a context (like \"debug:web\").`,\n    defaultValue: () => (isProd() ? \"warn\" : \"info\")\n  }),\n\n  logDir: new StringSetting({\n    category: SettingCategories.Logging,\n    description: \"Determines the directory that log files will be written to.\",\n    defaultValue: () => \"\" // < set by setSettingsDefaults()\n  }),\n\n  logCompression: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description: \"Should log files be compressed as they are rotated?\",\n    defaultValue: () => isProd() // don't compress in test or dev so logtail is happy\n  }),\n\n  logWebRequests: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description: \"Write an access log for all web requests?\",\n    defaultValue: false\n  }),\n\n  logWebDir: new OptionalStringSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"Determines the directory that log files will be written to. If unset, will use logDir.\"\n  }),\n\n  logStdout: new BooleanSetting({\n    envAliases: [\"LOG_STDOUT\", \"PS_STDOUT\"],\n    category: SettingCategories.Logging,\n    description:\n      \"Log to stdout? This should be false unless you're running a service by hand.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  tailLogs: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"Output all logs from currently running PhotoStructure processes? This should be false unless you're running a service by hand.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  logColor: new BooleanSetting({\n    // we can't alias NO_COLOR, because according to no-color.org, it's true if\n    // it has _any_ value\n    category: SettingCategories.Logging,\n    description:\n      \"Output all logs with terminal escape codes to colorize output. If NO_COLOR=1 or TERM=dumb or TERM=unknown, this defaults to false. See https://no-color.org/ .\",\n    defaultValue: () => !noColor()\n  }),\n\n  logContextLimit: new IntegerSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"PhotoStructure will only log, at most, this number of elements or key/value pairs.\",\n    defaultValue: () => 64\n  }),\n\n  logSql: new BooleanSetting({\n    category: SettingCategories.Logging,\n    description:\n      \"Log SQL queries to the default log level. **Enabling this negatively impacts performance.**.\\nThis defaults to false.\",\n    defaultValue: () => false\n  }),\n\n  logServer: new OptionalStringSetting({\n    category: SettingCategories.Logging,\n    description: `Format as hostname:port or ip_address:port.\\nIf set, processes will emit log entries, formatted as GELF and separated by null bytes, via TCP.\\nIf this is set, the default PS_LOG_LEVEL drops from \"error\" to \"info\".\\nSee https://docs.greylog.org/v1/docs/gelf .`,\n    exampleValue: () => \"localhost:12201\"\n  }),\n\n  logServerLevel: new StringSetting({\n    category: SettingCategories.Logging,\n    description: `If set, this will be the log level used to filter logs before sending them to \"logServer\".`,\n    defaultValue: () => LogLevels.info\n  }),\n\n  //\n  // Filesystem\n  //\n\n  useFsWatch: new BooleanSetting({\n    category: SettingCategories.Filesystem,\n    description: `If true, PhotoStructure will use the native filesystem watch APIs to detect file changes. This is the default and recommended setting. If false, PhotoStructure will poll the filesystem for changes instead. This is not recommended, but may be useful if you're running PhotoStructure on an OS or filesystem that doesn't support change notifications, like some network filesystems.\\nSee https://nodejs.org/api/fs.html#availability for more information.`,\n    defaultValue: () => true\n  }),\n\n  allowFilesystemSleep: new BooleanSetting({\n    category: SettingCategories.Filesystem,\n    description: `If true, PhotoStructure will set disable a handful of other settings which will allow the OS to put the filesystem to sleep when it's idle. This can save power, but can also cause PhotoStructure to miss file changes.\\nThis sets sharedStatePollMs=0 and dbFsLockStaleMs=0.`,\n    defaultValue: () => false\n  }),\n\n  statTimeoutMs: new DurationSetting({\n    category: SettingCategories.Filesystem,\n    description: `Filesystem traversal can be dangerous business with scratched CDROMs and old busted hard drives. To prevent PhotoStructure from getting \"stuck\" when trying to read these devices, it will timeout directory iteration if stat() or readdir() exceeds this value. The default of 30 seconds should cover most issues with spun-down hard drives and NAS/WAN latency.`,\n    defaultValue: () => \"30s\"\n  }),\n\n  watchDebounceMs: new DurationSetting({\n    category: SettingCategories.Filesystem,\n    description: `How long to wait for a file to \"settle down\" and stop changing before the file watcher notifies listeners that the file changed. Some applications (like PhotoStructure) use work-in-progress \"atomic\" writes, but many applications overwrite in-place, which can cause the file watcher to see incomplete results until the write process is complete.\\nThe default is 500ms (½ second) to handle slow remote NASes and slow-writing applications.\\nSet to 0 to disable.`,\n    defaultValue: () => \"500ms\"\n  }),\n\n  excludedFilesystemTypes: new StringArraySetting({\n    aliases: [\"ignoredFilesystemTypes\"],\n    category: SettingCategories.Filesystem,\n    description:\n      \"Volumes with these filesystem types will never be scanned or imported.\\nThese are only relevant to Linux and macOS systems.\",\n    defaultValue: () => DefaultExcludedFilesystemTypes\n  }),\n\n  excludedRootDirectories: new StringArraySetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"PhotoStructure won't descend into these root directories looking for assets.\",\n    defaultValue: () => DefaultExcludedLinuxRoots\n  }),\n\n  excludedMountpointPaths: new StringArraySetting({\n    aliases: [\"ignoredMountpoints\"],\n    category: SettingCategories.Filesystem,\n    description:\n      \"PhotoStructure won't descend into mountpoints that match these paths.\",\n    defaultValue: () => DefaultExcludedLinuxMountpointPaths\n  }),\n\n  excludedMountpointBasenames: new StringArraySetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"PhotoStructure won't descend into mountpoints that match these names.\",\n    defaultValue: () => DefaultExcludedLinuxMountpointBasenames\n  }),\n\n  validateMountpoints: new BooleanSetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"When true, PhotoStructure ignores volumes whose mountpoints do not exist. If any volumes are unhealthy, though, this may wedge volume handlers.\",\n    defaultValue: true\n  }),\n\n  mountpoints: new StringArraySetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"If set, this value will be used instead of the cross-platform mountpoints() method. Normally only for internal use.\"\n  }),\n\n  mountpointsTtlMs: new DurationSetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"How frequently should PhotoStructure scan for new volumes (so PhotoStructure can detect when drives are inserted or ejected)? Shorter than 10-15 seconds may cause issues on Windows. A value of 0 will cache indefinitely. This defaults to 15 minutes on Windows, which relies on polling. On Linux and macOS this is set to 0 because findmnt/gio and diskutil notify mountpoint changes without polling.\",\n    defaultValue: () => (isWin ? \"15m\" : \"0\") // docker should definitely be 0\n  }),\n\n  remoteFilesystemTypes: new StringArraySetting<string>({\n    category: SettingCategories.Filesystem,\n    description: `Filesystems with these types should always be considered \"remote\".`,\n    defaultValue: [\"sshfs\", \"s3fs\"]\n  }),\n\n  retainFileBirthtimes: new BooleanSetting({\n    category: SettingCategories.Filesystem,\n    description: `Should PhotoStructure try to retain file \"birth\" times (also known as \"creation\" times) when it copies files? If enabled, note that this is a best-effort approach--Linux and some remote filesystems (like SMB) do not support this feature.`,\n    defaultValue: () => true\n  }),\n\n  //\n  // Volumes\n  //\n\n  volumeUuidFilePaths: new StringArraySetting({\n    category: SettingCategories.Volumes,\n    description:\n      'PhotoStructure will append these paths to all mountpoints to look for previously-set volume universally unique identifiers (UUIDs). The first item in this list that exists will be used, and if \"writeVolumeUuidFiles\" is true, the first item in this list will be used to write the volume UUID (which will be the partition UUID, if available, or a random UUID if not available). Windows users should use a forward slash as a path separator.',\n    defaultValue: () => [\".uuid\", \"System Volume Information/IndexerVolumeGuid\"]\n  }),\n\n  readVolumeUuidFiles: new BooleanSetting({\n    category: SettingCategories.Volumes,\n    description: `When true, PhotoStructure uses \".uuid\" files found in the root directory of volumes as the volume universally unique identifier (UUID), which supports cross-host and cross-OS library portability. Set this to false if you don't want PhotoStructure to read these \".uuid\" files.\\nNote that \"globally unique identifier,\" or \"GUID,\" is synonymous with \"UUID\" in this case. Microsoft tends to use the term \"GUID\" instead of \"UUID.\"\\nSee https://photostructure.com/faq/what-is-a-volume for more information.`,\n    defaultValue: true\n  }),\n\n  writeVolumeUuidFiles: new BooleanSetting({\n    category: SettingCategories.Volumes,\n    description: `When true, PhotoStructure (tries to) write files with universally unique identifiers into the root directory of volumes, which enables cross-host library portability. Set this to false if you don't want PhotoStructure to try to write these \".uuid\" files. See https://photostructure.com/faq/what-is-a-volume for more information.`,\n    defaultValue: true\n  }),\n\n  writeVolumeUuidMountpointBlocklist: new StringArraySetting<string>({\n    category: SettingCategories.Volumes,\n    description: `Never try to write a volume UUID file to these directories.`,\n    defaultValue: [\"sshfs\", \"s3fs\"]\n  }),\n\n  volumeMetadataTtlMs: new DurationSetting({\n    category: SettingCategories.Filesystem,\n    description:\n      \"How frequently should PhotoStructure reload volume metadata (like bytes-free, which is used in a health check)? Values less than a minute are not necessary. A value of 0 will cache indefinitely.\",\n    defaultValue: \"15m\"\n  }),\n\n  //\n  // Networking\n  //\n\n  hostname: new OptionalStringSetting({\n    category: SettingCategories.Networking,\n    description:\n      \"If set, this overrides the local hostname. Useful under docker and when OSes change hostnames due to networking bugs (see macOS).\"\n  }),\n\n  localhost: new StringSetting({\n    category: SettingCategories.Networking,\n    description: `If \"exposeNetworkWithoutAuth\" is false, what value should PhotoStructure use for localhost? (Some firewalls are OK with \"127.0.0.1\", some require \"localhost\"). See https://letsencrypt.org/docs/certificates-for-localhost/ and https://photostructure.com/faq/troubleshooting/#windows-firewall-issues .`,\n    // See https://letsencrypt.org/docs/certificates-for-localhost/\n    // and https://tools.ietf.org/html/draft-ietf-dnsop-let-localhost-be-localhost-02\n    defaultValue: () => \"127.0.0.1\"\n  }),\n\n  httpPort: new IntegerSetting({\n    category: SettingCategories.Networking,\n    description: \"Network port for HTTP access to your PhotoStructure library.\",\n    defaultValue: 1787\n  }),\n\n  // TODO\n  // syncRpcPort: new IntegerSetting({\n  //   category: SettingCategories.Networking,\n  //   description: \"Localhost-bound port for sync to report status to web.\",\n  //   defaultValue: 1789\n  // }),\n\n  //\n  // Security\n  //\n\n  trustProxy: new StringSetting({\n    category: SettingCategories.Security,\n    description: `What reverse proxies should PhotoStructure \"trust\"? See <http://expressjs.com/en/guide/behind-proxies.html>.\\nThis setting should either be \"false\" (don't trust any proxies), \"loopback\", (only trust loopback/localhost), a single subnet (like \"192.168.1.0/24\"), or a comma-delimited set of subnets.`,\n    defaultValue: \"loopback\"\n  }),\n\n  exposeNetworkWithoutAuth: new BooleanSetting({\n    category: SettingCategories.Security,\n    description:\n      \"Normally the web service is only accessible to the computer running PhotoStructure. Setting this to true will expose your library to all computers on your network. You should own or trust all systems on that network, as there is no auth in PhotoStructure currently. Future versions of PhotoStructure will add authorization mechanisms, at which point this setting will be deleted.\\n**Don't enable this unless you know what you are doing**.\",\n    defaultValue: () => isDocker()\n  }),\n\n  cspReportOnly: new BooleanSetting({\n    category: SettingCategories.Security,\n    description:\n      \"DANGEROUS: do not enforce, and only report CSP violations. This should only be set to true temporarily to assist in debugging. See https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP .\",\n    defaultValue: () => false\n  }),\n\n  upgradeInsecureRequests: new BooleanSetting({\n    category: SettingCategories.Security,\n    description: `May PhotoStructure send the Upgrade-Insecure-Requests header? PhotoStructure will set the default to true automatically if it sees _any_ request is via https.\\nSet this explicitly to false if you access PhotoStructure via both http (inside your LAN) and https (outside your LAN).`,\n    defaultValue: () => false\n  }),\n\n  cspDirective: new OptionalStringSetting({\n    category: SettingCategories.Security,\n    description:\n      \"If you're seeing CSP errors with older browsers, add your externally-available base URL to this setting, and it will be appended to the CSP directives. See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src .\",\n    exampleValue: () => \"https://myphotos.example.com\"\n  }),\n\n  disabledHelmetMiddleware: new StringEnumsSetting({\n    category: SettingCategories.Security,\n    description: `What Helmet middleware should PhotoStructure disable?\\nBy default, PhotoStructure enables all middleware, but if your reverse proxy is handling HTTP headers, you may want to remove some of Helmet's functionality.\\nDisable all middleware by using the value \"all\", but know that CSP management is handled by the \"cspDirective\" and \"cspReportOnly\" settings.\\nSee https://github.com/helmetjs/helmet#reference .`,\n    defaultValue: [],\n    strEnum: HelmetPlugins\n  }),\n\n  //\n  // Process management\n  //\n\n  // TODO:\n  // webProcs: new BoundedIntegerSetting({\n  //   category: SettingCategories.Processes,\n  //   description:\n  //     \"How many webservers should PhotoStructure spin up?\",\n  //   min: 1,\n  //   max: 8,\n  //   defaultValue: () => isTest() ? 2 : cpuInfo().length < 4 ? 1 : 2\n  // }),\n\n  shortProcessNames: new BooleanSetting({\n    category: SettingCategories.Processes,\n    description: `Should PhotoStructure name its own processes \"PhotoStructure\" + the name of the sub-process, or abbreviated \"phstr\"? This defaults to false on PhotoStructure for Desktops and true everywhere else.`,\n    defaultValue: () => !isElectron\n  }),\n\n  commandTimeoutMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"How long should PhotoStructure wait for a command that touches the filesystem (and doesn't do anything computationally expensive)? Note that external hard drives can take 10-15 seconds to spin up, and antivirus apps can hang for tens of seconds on slow machines, so values less than the default may result in undesired timeouts.\",\n    // There were filesystem timeout errors with 25 seconds:\n    defaultValue: () => \"24s\"\n  }),\n\n  minDelayBetweenSpawnMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"minDelayBetweenSpawnMillis\"],\n    description:\n      \"The shorter this time is, the faster PhotoStructure will ramp up parallelism at the start of a sync. Having a larger value here mitigates initial system load from forking. See https://photostructure.github.io/batch-cluster.js/classes/BatchClusterOptions.html#minDelayBetweenSpawnMillis .\",\n    defaultValue: () =>\n      encodeDuration(new BatchClusterOptions().minDelayBetweenSpawnMillis)!\n  }),\n\n  minDelayBetweenRetriesMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"minDelayBetweenSpawnMillis\"],\n    description:\n      \"If a task has an error, should we wait a bit before retrying? This may help temper error cascades.\",\n    defaultValue: () => \"250ms\"\n  }),\n\n  maxRetries: new IntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"If a task has an error, how many times should we retry before giving up?\\nIf you have a flaky network, this can help ensure imports are comprehensive.\\nSet this to 0 to disable retries.\",\n    defaultValue: () => 1\n  }),\n\n  streamFlushMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"streamFlushMillis\"],\n    description:\n      \"See https://photostructure.github.io/batch-cluster.js/classes/BatchClusterOptions.html#streamFlushMillis .\",\n    defaultValue: () => (isMac ? \"100ms\" : isWin ? \"200ms\" : \"30ms\")\n  }),\n\n  exiftoolProcsPerChild: new OptionalIntegerSetting({\n    category: SettingCategories.Processes,\n    description: `Each PhotoStructure process spins up an ExifTool when needed. Note that the \"web\" and \"sync\" services use exiftool, so the total number of exiftool processes will be several times larger than this value. If this is unset, this will default to roughly 50% of the number of supported concurrent imports.`\n  }),\n\n  sensitiveEnvRegExp: new StringSetting({\n    category: SettingCategories.Processes,\n    description: `PhotoStructure spawns several external processes, including \"exiftool\" and \"ffmpeg\".\\nPhotoStructure filters out environment keys  that are likely to contain sensitive information (like API access tokens or passwords) from these child processes so they aren't accidentally logged or accessible by external tools.\\nThis regex is applied case-insensitively.`,\n    defaultValue: () => DefaultSensitiveEnvRegexPattern\n  }),\n\n  syncExitTimeoutMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    description: `Wait at most this time for sync to shut down cleanly. This needs to be long enough to possibly copy the library database back to the remote filesystem if your library is stored on a network drive. Set to 0 to disable this timeout.`,\n    defaultValue: \"2m\"\n  }),\n\n  // TODO: delete this #smpfy\n  probationMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"Normally when subsystems crash, PhotoStructure restarts them after a delay. Unfortunately, if there is a persistent error, this means PhotoStructure keeps trying something that won't ever work; it looks busy, but it's just busy failing. To prevent this situation, PhotoStructure will shut down if there are high error rates within 2 minutes of starting. (2 minutes should be long enough to spin up the web process, sync process, and import at least one pending file). Setting this to 0 will prevent PhotoStructure from exiting due to high error rates.\",\n    defaultValue: \"2m\"\n  }),\n\n  minTimeBetweenServiceRestartsMs: new DurationSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"If a service (like web or sync) is restarted due to an error, how many milliseconds must elapse before another restart is allowed? This helps prevent system load due to service flapping.\",\n    defaultValue: \"7s\"\n  }),\n\n  fatalErrorRatePerMinute: new IntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"If PhotoStructure sees errors at a higher rate per minute than this setting, PhotoStructure will shut down. If this value is too high, PhotoStructure may look busy, but it's just busy failing. If this value is set too low, temporary errors (due to network flakiness or USB hiccups) might shut down PhotoStructure needlessly.\",\n    defaultValue: 20\n  }),\n\n  minDiskFreeGb: new IntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"PhotoStructure will pause processing if the GB free on the disk that your library is stored on drops below this value. The value provided here will be multiplied by 1000^3. Note that many OSes will corrupt themselves when disks fill up, and SSDs can fail as they approach full capacity. A value of less than 8 may be unsafe (due to hibernation and OS update files).\\nSet this value to 0 to disable free disk space health checks.\",\n    defaultValue: 16\n  }),\n\n  cpuLoadPercent: new BoundedIntegerSetting({\n    category: SettingCategories.Processes,\n    description: `This setting is a rough goal for PhotoStructure to load the system during library synchronization. A higher value here will allow PhotoStructure to run more tasks in parallel, but may impact your system's responsiveness. Setting this value to 0 will still allow 1 import to run.\\nThis setting is ignored if \"maxConcurrentImports\" and \"sharpThreadsPerProcess\" are set.`,\n    defaultValue: 75,\n    min: 0,\n    max: 200\n  }),\n\n  timeoutThrottleCoeff: new FloatSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"When timeouts are detected, PhotoStructure throttles back concurrency automatically, with the assumption that some system is currently being overwhelmed and that less load should result in fewer failures due to timeouts.\\nSpecifically, concurrency will be set to 1 / current rate of timeouts per minute over the past several minutes.\\nThrottling will be more aggressive as this value approaches 0. For example a value of 0.1 will be very aggressive throttling. A value of 8 will only slow down sync after many soft timeouts.\\nDisable throttling by setting to 0.\",\n    defaultValue: 1\n  }),\n\n  maxConcurrentImports: new OptionalIntegerSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"maxSyncFileJobs\"],\n    advanced: () => true,\n    description: `How many imports can PhotoStructure schedule concurrently? This will be clamped between 1 and 32.\\nIf not set, a sensible value will be computed based on \"cpuLoadPercent\".\\nIf set explicitly, this and \"sharpThreadsPerProcess\" will override \"cpuLoadPercent\" and \"maxConcurrentImportsWhenRemote\" settings.`\n  }),\n\n  maxConcurrentImportsWhenRemote: new IntegerSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"maxSyncFileJobsWhenRemote\"],\n    description: `How many concurrent files can be imported if the library is on a remote volume? This defaults to 2 to try to avoid overwhelming HDD I/O on the remote NAS. If this is larger than (cpus.length * cpuLoadPercent) or max child processes given available memory, this value will be ignored.`,\n    defaultValue: 2\n  }),\n\n  sharpThreadsPerProcess: new BoundedIntegerSetting({\n    category: SettingCategories.Processes,\n    aliases: [\"sharpThreadsPerJob\"],\n    advanced: () => true,\n    description: `How many image processing threads can be spun per process?\\nIf set to 0 (the default), PhotoStructure will pick an optimal value based on available memory and CPU cores.`,\n    min: 0,\n    max: 8, // we don't get faster throughput with > 8 gfx threads\n    defaultValue: 0\n  }),\n\n  processPriority: new StringEnumSetting({\n    category: SettingCategories.Processes,\n    description: `By default, PhotoStructure runs child processes with a \"below normal\" priority, so your system remains usable while imports run. Changing this value to \"normal\" or \"above normal\" may speed up imports but cause your system to be unresponsive. Changing this value to \"idle\" may prevent imports from running at all.\\nFor Linux and macOS systems, see https://en.wikipedia.org/wiki/Nice_%28Unix%29 .\\nFor Windows, see https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.processpriorityclass?view=netframework-4.8 .`,\n    defaultValue: () => PriorityClasses.BelowNormal,\n    strEnum: PriorityClasses\n  }),\n\n  maxMemoryMb: new IntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"PhotoStructure will restart services if they use more than this value (measured in megabytes, or 1,000,000 bytes). Note that this is not the allocated memory. See maxRssMemoryMb for total allocated.\\nSet to 0 to deactivate this check.\",\n    defaultValue: () => 2048\n  }),\n\n  maxTasksPerProcess: new BoundedIntegerSetting({\n    category: SettingCategories.Processes,\n    description:\n      \"PhotoStructure will recycle threads and worker processes after they handle this number of requests. Smaller values may reduce overall memory pressure. Larger values amortize startup costs over fewer restarts.\",\n    defaultValue: () => (isTest() ? 50 : 500),\n    min: 1,\n    max: 5000\n  }),\n\n  //\n  // Auth\n  //\n\n  enableArchive: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Archive\" button in Asset views will be visible and enabled for all visitors.`,\n    defaultValue: () => true\n  }),\n\n  enableDelete: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Delete\" button in Asset views will be visible and enabled for all visitors.\\nThis is a temporary setting until PhotoStructure enforces authentication/authorization.`,\n    defaultValue: () => true\n  }),\n\n  enableEmptyTrash: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Empty Trash\" button will be enabled for all visitors.\\nUntil PhotoStructure has visitor user levels, if you don't trust all your users, disable this!\\nThis setting is disabled by default if exposeNetworkWithoutAuth is true.\\nThis is a temporary setting until PhotoStructure enforces authentication/authorization.`,\n    defaultValue: () => !exposeNetworkWithoutAuth()\n  }),\n\n  enableRemove: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Remove asset\" button in Asset views will be visible and enabled for all visitors.\\nThis is a temporary setting until PhotoStructure enforces authentication/authorization.`,\n    defaultValue: () => true\n  }),\n\n  enableRemoveAssets: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, the \"Remove Assets\" buttons will be visible and enabled for all visitors.\\nUntil PhotoStructure has visitor user levels, if you don't trust all your users, disable this!\\nThis setting is disabled by default if exposeNetworkWithoutAuth is true.\\nThis is a temporary setting until PhotoStructure enforces authentication/authorization.`,\n    defaultValue: () => !exposeNetworkWithoutAuth()\n  }),\n\n  argon2TimeCost: new IntegerSetting({\n    category: SettingCategories.Auth,\n    description: `PhotoStructure encrypts user passwords with Argon2. This value sets the Argon2 \"time\" cost parameter.`,\n    // NOTE! Keep in sync with MetaSettings.setQuickSyncMode:\n    defaultValue: 8\n  }),\n\n  argon2MemoryCostMB: new IntegerSetting({\n    category: SettingCategories.Auth,\n    description: `PhotoStructure encrypts user passwords with Argon2. This value sets the Argon2 \"memory\" cost parameter, and is specified in megabytes. Each parallel thread will consume this amount of RAM: don't exceed your system memory.`,\n    // NOTE! Keep in sync with MetaSettings.setQuickSyncMode:\n    defaultValue: 64\n  }),\n\n  argon2Parallelism: new IntegerSetting({\n    category: SettingCategories.Auth,\n    description: `PhotoStructure encrypts user passwords with Argon2. This value sets the Argon2 \"parallelism\" parameter. RAM consumption will be ((this value) × argon2MemoryCost) KB of RAM: don't exceed your system memory.`,\n    // NOTE! Keep in sync with MetaSettings.setQuickSyncMode:\n    defaultValue: 1\n  }),\n\n  //\n  // DB\n  //\n\n  // Use primary/replica terminology:\n\n  forceLocalDbReplica: new BooleanSetting({\n    category: SettingCategories.Paths, // NOT .Db! The location may be local or remote depending on configuration.\n    description:\n      \"Libraries on remote filesystems can suffer from bad performance and inconsistent transactions due to slow file I/O and missing file locking mechanics. When opening libraries on remote filesystems, or if this setting is `true`, PhotoStructure will copy the library database to the `cacheDir` and perform I/O against this local replica. Changes made to the local db replica are then periodically copied back to the remote library.\\nIf you've overridden this value in the past, know that v23.5 and after should automatically set this to the correct value for you.\\nFor more details, see https://forum.photostructure.com/t/whats-force-local-db-replica/837 and https://photostructure.com/about/2023-release-notes/#-sqlite-improvements .\",\n    defaultValue: () => false\n  }),\n  dbRetries: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"If SQLITE_BUSY is encountered, how many times should an operation be retried before giving up?\",\n    advanced: () => true,\n    defaultValue: 20\n  }),\n\n  // From https://sqlite.org/pragma.html#pragma_optimize\n\n  // \"Long-running applications might also benefit from setting a timer to run\n  // \"PRAGMA optimize\" every few hours.\"\n\n  dbBackupRetentionCount: new BoundedIntegerSetting({\n    aliases: [\"dbBackupsCount\"],\n    category: SettingCategories.Db,\n    description:\n      \"How many prior backups should PhotoStructure retain? These will typically be 10-500 MB, depending on the size of your library.\\nWe don't retain that many backups by default because they get stale pretty quickly, as they fall out of sync with your filesystem and previews directory contents.\",\n    advanced: () => true,\n    defaultValue: 3,\n    max: 128,\n    min: 1\n  }),\n\n  dbAutoVacuumMode: new StringEnumSetting({\n    category: SettingCategories.Db,\n    description:\n      \"SQLite can auto-vacuum your library database, which ensures the database stays performant. If this is set to NONE, PhotoStructure will periodically run vacuum and optimizations from the sync process. For details, https://sqlite.org/pragma.html#pragma_auto_vacuum .\",\n    advanced: () => true,\n    strEnum: AutoVacuumModes,\n    defaultValue: AutoVacuumModes.INCREMENTAL\n  }),\n\n  dbWalCheckpointType: new StringEnumSetting({\n    category: SettingCategories.Db,\n    description:\n      \"The write-ahead log of your PhotoStructure library database is checkpointed periodically.\\n- Choosing 0 will disable SQLite's built-in automatic PASSIVE checkpointing.\\n- PASSIVE, FULL, RESTART, and TRUNCATE values will enable.\\nSee https://sqlite.org/pragma.html#pragma_wal_checkpoint .\",\n    strEnum: CheckpointTypes,\n    defaultValue: CheckpointTypes.TRUNCATE\n  }),\n\n  dbWalAutoCheckpoint: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"The write-ahead log of your PhotoStructure library database is checkpointed periodically by the sync subprocess.\\n- Choosing 0 will disable SQLite's built-in automatic PASSIVE checkpointing.\\nSee https://sqlite.org/pragma.html#pragma_wal_autocheckpoint .\",\n    defaultValue: 1000\n  }),\n\n  dbInvalidFKThreshold: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"When PhotoStructure runs a database recovery, it will check for foreign key violations. If there are fewer than this number of invalid rows, PhotoStructure will drop those rows, with the hope that the next sync will finish the recovery.\\nSet this to 0 to disable this recovery step, which will make any foreign key violation fatal.\",\n    defaultValue: 64\n  }),\n\n  dbSynchronousMode: new StringEnumSetting({\n    category: SettingCategories.Db,\n    description: `Change SQLite's synchronous mode.\\n\"OFF\" will cause data corruption. \"FULL\" and \"EXTRA\" may be required if you're seeing dataloss.\\nSee https://sqlite.org/pragma.html#pragma_synchronous .`,\n    strEnum: SynchronousModes,\n    defaultValue: SynchronousModes.NORMAL\n  }),\n\n  dbRepairMode: new StringEnumSetting({\n    category: SettingCategories.Db,\n    description: `PhotoStructure will automatically attempt to repair library databases that don't pass validation tests. SQLite has two repair strategies:\\n- \"dump\", which will recover from minor errors and normally retains the current schema\\n- \"recover\", which will recover as much data as possible from corrupt db. Unfortunately, this can result in an invalid and unusable schema, which is why PhotoStructure defaults to \"dump\".\\nNote that PhotoStructure validates the schema after a repair, and will report via logs and the health check system if there are any issues.`,\n    strEnum: RepairModes,\n    defaultValue: RepairModes.dump\n  }),\n\n  maxBusyDbMs: new DurationSetting({\n    category: SettingCategories.Db,\n    description:\n      \"SQLite supports concurrent readers but concurrent writers may collide, causing a LOCKED or BUSY error. PhotoStructure will retry the db operation for maxBusyDbMs milliseconds. This defaults to 45 seconds to accommodate slow hard drive spinups and VACUUM write locks.\",\n    advanced: () => true,\n    defaultValue: () => \"45s\"\n  }),\n\n  dbBusyTimeoutMs: new DurationSetting({\n    category: SettingCategories.Db,\n    description:\n      \"SQLite can time out requests if the db file is unavailable. PhotoStructure will retry those requests (up to `maxBusyDbMs`). A shorter time may help overall throughput, but may require more work done in retry logic. A longer time may be better for slower machines and slower disks. Note that setting this value to be lower than disk I/O latency (~1ms-100ms) will cause all database queries to fail.\",\n    advanced: () => true,\n    defaultValue: () => \"2s\"\n  }),\n\n  dbBackupIntervalMs: new DurationSetting({\n    category: SettingCategories.Db,\n    description:\n      \"How frequently should PhotoStructure backup your library database?\",\n    advanced: () => true,\n    defaultValue: () => (isTest() ? \"15s\" : \"30m\")\n  }),\n\n  // We're using a bounded float so we can get fractional minutes for test, and\n  // users don't have to think in milliseconds.\n  dbBackupIntervalMinutes: new BoundedFloatSetting({\n    category: SettingCategories.Db,\n    description: `This setting was replaced by \"dbBackupIntervalMs\".`,\n    min: isTest() ? 0.5 : 1, // < force a backup in the middle of the SyncService and ModelDbUpdater tests to exercise pause-for-vacuum\n    max: 60 * 24,\n    advanced: () => true,\n    defaultValue: () => (isTest() ? 0.5 : 30)\n  }),\n\n  dbPageSizeBytes: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"This value will be used for SQLite's page_size PRAGMA. A default of 4k should be OK. This must be a power of 2. See https://sqlite.org/pragma.html#pragma_page_size for more information.\",\n    advanced: () => true,\n    defaultValue: 4096\n  }),\n\n  dbCacheSizeMb: new IntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"This value will be used for SQLite's cache_size PRAGMA. The cache_size pragma should ideally be set such that the whole DB can be in memory. Note that PhotoStructure automatically increases this value to accommodate your library as it gets larger, if there is sufficient memory, so this setting is only a lower bound. See https://sqlite.org/pragma.html#pragma_cache_size for more information.\",\n    advanced: () => true,\n    defaultValue: 128\n  }),\n\n  dbBatchSelectSize: new BoundedIntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"How many objects can be selected at at time? The default should be fine. (Exposed for performance tests).\",\n    advanced: () => true,\n    defaultValue: 128,\n    min: 1,\n    max: 900\n  }),\n\n  dbBatchUpsertSize: new BoundedIntegerSetting({\n    category: SettingCategories.Db,\n    description:\n      \"How many objects can be upserted at at time? The default should be fine. (Exposed for performance tests).\",\n    advanced: () => true,\n    defaultValue: 16,\n    min: 1,\n    max: 500\n  }),\n\n  dbForceRecover: new BooleanSetting({\n    category: SettingCategories.Db,\n    aliases: [\"dbForceRebuild\"],\n    transient: true,\n    description:\n      \"SQLite databases can sometimes be repaired with SQLite's .recover tooling. Set this to true to have PhotoStructure attempt a .recover on startup.\\nThis can take a while to perform, especially on large libraries or slow computers: don't set this value to true normally.\\nSee https://sqlite.org/recovery.html .\",\n    defaultValue: () => false\n  }),\n\n  dbBackupRemoteOnSuspend: new BooleanSetting({\n    aliases: [\"backupRemoteDbOnSuspend\"],\n    category: SettingCategories.Db,\n    description:\n      \"Run a database backup when system suspend is requested and the database is on a remote volume.\",\n    defaultValue: () => true\n  }),\n\n  // dbFtsTokenizer: new StringSetting({\n  //   category: SettingCategories.Db,\n  //   description: `PhotoStructure uses SQLite's full-text search index to support queries. The value provided here will be fed to the \"tokenize\" option. You may want to try the new \"trigram\" tokenizer, if you want substring tag path matches. Restart PhotoStructure to make this take affect.`,\n  //   defaultValue: \"unicode61\"\n  // }),\n\n  //\n  // Files\n  //\n\n  trySoftDeletes: new BooleanSetting({\n    category: SettingCategories.Auth,\n    description: `If true, \"Empty Trash\" will _try_ to move files into the \"Trash can\" or \"Recycle bin\", when possible. If moving a file into the trash can fails (due to permissions or filesystem functionality), the file will be \"hard\" deleted (or \"unlinked\"). This setting defaults to false on docker.`,\n    defaultValue: () => (isTest() ? true : !isDocker())\n  }),\n\n  //\n  // Health checks\n  //\n\n  skipHealthCheckIds: new StringEnumsSetting({\n    category: SettingCategories.HealthChecks,\n    description:\n      \"List of health check IDs to skip. Note that windows skips the 'proc-not-superuser' check by default, as most people on Windows run as an admin user.\",\n    defaultValue: isWin ? [\"proc-not-superuser\"] : [],\n    strEnum: HealthCheckIds\n  }),\n\n  //\n  // Video\n  //\n\n  ffmpegHwaccel: new StringSetting({\n    category: SettingCategories.Video,\n    description: `FFmpeg supports both software and hardware encoders. Valid values include \"auto\" which should work for everyone, \"cuda\" for NVIDIA GPUs, or use \"disable\", \"no\", \"false\", or \"\" to disable. Run \"ffmpeg -hwaccels\" to see supported acceleration methods. See https://forum.photostructure.com/t/hardware-accelerated-encoding-transcoding/166>, https://trac.ffmpeg.org/wiki/HWAccelIntro , and <https://github.com/NVIDIA/nvidia-docker for more details.`,\n    defaultValue: \"disable\"\n  }),\n\n  ffmpegThreads: new OptionalIntegerSetting({\n    category: SettingCategories.Video,\n    advanced: () => true,\n    description: `When transcoding videos, what value should we give to \"ffmpeg -threads\"?\\nThis defaults to min(1, <# of cpus> * cpuLoadPercent / 4).\\nNote that \"ffmpeg -threads\" _most likely doesn't do what you expect_: a value of 0 will consume all CPUs (which is why it isn't allowed). A value of N will actually mean > N CPUs are used (due to demux threading and other details). See https://stackoverflow.com/a/41010102 .`\n  }),\n\n  ffmpegAvcTranscodeArgs: new StringArraySetting({\n    category: SettingCategories.Video,\n    aliases: [\"ffmpegTranscodeArgs\"],\n    description: `The following are the default arguments added to transcode requests made to ffmpeg, when ffmpeg is available. The following arguments will follow \"ffmpeg -loglevel error -threads T -i INPUT_FILE_PATH\" (where T is replaced by ~half the available CPU threads, and INPUT_FILE_PATH is the full native pathname to the source video).\\nIf your videos are in high colorspace like bt2020, you may want to remove the \"-vf\" and \"colorspace=all=bt2020:iall=bt601-6-625:fast=1\" options, but this may cause rendering issues on SDR displays. See https://forum.photostructure.com/t/1003/3 for more details.\\nCAUTION: this is an advanced setting. Invalid values may cause videos that require transcoding to not be imported, or not be viewable on some browsers.`,\n    defaultValue: [\n      \"-c:a\",\n      \"aac\",\n      \"-c:v\",\n      \"libx264\",\n      // pix_fmt and profile are required by firefox (!!)\n      \"-pix_fmt\",\n      \"yuv420p\",\n      \"-vf\",\n      \"colorspace=all=bt709:iall=bt601-6-625:fast=1\",\n      \"-colorspace\",\n      \"bt709\",\n      // See\n      // https://forum.photostructure.com/t/trouble-transcoding-iphone8-video-possibly-stalling-progress-of-library-import/1003/3?u=mrm\n      // and\n      // https://medium.com/invideo-io/talking-about-colorspaces-and-ffmpeg-f6d0b037cc2f\n      // \"-color_trc\", \"smpte2084\", \"-color_primaries\", \"bt2020\",\n      // https://ffmpeg.org/ffmpeg-filters.html#colorspace\n      // https://ffmpeg.org/ffmpeg-formats.html#Options-11\n\n      // https://discord.com/channels/818905168107012097/818907922767544340/872836920948961381\n      // Zirro — 08/05/2021 A suggestion in case you haven't heard of it - you\n      // might want to look into using -movflags +faststart as part of the\n      // default ffmpeg transcoding arguments. It places the moov atom which\n      // contains essential metadata for streaming the video at the start rather\n      // than the end of the MP4 file. Otherwise browsers (and other streaming\n      // clients) have to download the whole file before they can start playing\n      // it, sometimes delaying playback significantly. The option is widely\n      // used and recommended, so I don't believe there are any concerns with\n      // regards to compatibility from using it. ( for the curious, looks like\n      // there's been some movement on supporting more pixel formats in Firefox\n      // within recent months:\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=1459526 )\n      \"-movflags\",\n      \"+faststart\"\n      // \"-profile:v\",\n      // \"high\"\n    ]\n  }),\n\n  transcodeMaxResolution: new IntegerSetting({\n    category: SettingCategories.Video,\n    description: `If a video that needs transcoding exceeds this total pixel resolution, the transcoded version will be downsampled to be at most this resolution, preserving the original aspect ratio.\\nVideos that are smaller than this resolution will not be downsampled.\\nThis setting does not work with VLC (use ffmpeg instead--it's faster!).\\nUse 2073600 for \"Full HD\", or 1080P.\\nUse 921600 for 720P (1280 × 720).\\nNote that in any case, videos that don't need transcoding will not be downsampled.\\nSet this to 0 to disable this setting.`,\n    defaultValue: 0\n  }),\n\n  transcodeVideos: new BooleanSetting({\n    category: SettingCategories.Video,\n    description: `Should videos that are not in a browser-supported format be transcoded during import? Note that this is a plus-only feature. FFmpeg or VLC must be installed. Note that this *dramatically* slows down imports, and *dramatically* increases the disk space your library will need to use, but allows you to see videos that aren't directly supported by your browser. If this is set to false, your browser will only render videos directly supported by your OS.`,\n    defaultValue: true\n  }),\n\n  transcodeBitrateQVGA: new IntegerSetting({\n    category: SettingCategories.Video,\n    description:\n      \"What max bitrate should PhotoStructure encode QVGA (320 × 240) videos? Videos with resolutions between QVGA and UHD will use an interpolated value between these two settings, and will not exceed the encoded bitrate of the original video. This value is in kilobytes per second.\",\n    defaultValue: 800\n  }),\n\n  transcodeBitrateUHD: new IntegerSetting({\n    category: SettingCategories.Video,\n    description:\n      \"What max bitrate should PhotoStructure encode UHD (3840 × 2160) videos? Videos with resolutions between QVGA and UHD will use an interpolated value between these two settings, and will not exceed the encoded bitrate of the original video. This value is in kilobytes per second.\",\n    defaultValue: 18_000\n  }),\n\n  doNotTranscodeMimeTypes: new StringArraySetting({\n    category: SettingCategories.Video,\n    description: `Videos are transcoded when the \"transcodeVideos\" is set to true and is not one of the following MIME types.\\nSee https://www.iana.org/assignments/media-types/media-types.xhtml#video for a complete list.\\nIf you are setting this via an environment variable, you can separate the values either like a PATH (like \"video/quicktime:video/mp4\") or use JSON encoding (like \"['video/quicktime','video/mp4']\").`,\n    defaultValue: () => [\n      \"video/quicktime\",\n      \"video/mp4\",\n      \"video/mpv\",\n      \"video/mp2t\"\n    ]\n  }),\n\n  doNotTranscodeVideoCodecs: new StringArraySetting({\n    category: SettingCategories.Video,\n    description: `Videos are transcoded when the \"transcodeVideos\" is set to true and is not one of the following video codecs. The video codec may be stored in the \"VideoCodec\", \"CompressorID\", or \"CompressorName\" tags.`,\n    defaultValue: () => [\"avc1\"] // CompressorID: \"hvc1\" is HEVC.\n  }),\n\n  doNotTranscodeAudioCodecs: new StringArraySetting({\n    category: SettingCategories.Video,\n    description: `Videos are transcoded when the \"transcodeVideos\" is set to true and is not one of the following audio codecs. The audio codec is stored in the \"AudioCodec\" tag.`,\n    defaultValue: () => [\"mp4a\", \"sowt\"]\n  }),\n\n  //\n  // TOOLS\n  //\n\n  enableSIMD: new BooleanSetting({\n    category: SettingCategories.Tools,\n    description: `Should PhotoStructure enable SIMD extensions when running image operations? This defaults to false on macOS and Raspberry Pis due to instability on those platforms.`,\n    // isTest() to make the result consistent across CI:\n    defaultValue: () => (isRaspberryPi() ? false : true)\n  }),\n\n  enableVipsCache: new BooleanSetting({\n    category: SettingCategories.Tools,\n    description: `Should PhotoStructure enable VIPS caching, which may help speed up image operations? Note that this increases memory usage, and cache hit rates are low.`,\n    defaultValue: () => false\n  }),\n\n  showFileInFolderUsesThunar: new BooleanSetting({\n    category: SettingCategories.Tools,\n    description: `If we're on Linux, should we use Thunar (via dbus) to \"show file in folder\"?`,\n    defaultValue: false\n  }),\n\n  showFileInFolderUsesFileUri: new BooleanSetting({\n    category: SettingCategories.Tools,\n    description: `Does the showFileInFolderCommand expect a file: URI to the file? If this is false, the native path will be appended instead.`,\n    exampleValue: () => true,\n    defaultValue: () => isLinux\n  }),\n\n  showFileInFolderCommand: new StringArraySetting({\n    category: SettingCategories.Tools,\n    description: `If set, the first argument will be used as a command (or path to command), and the subsequent arguments (if present) will be used as arguments. The native path to the file or the file: URI will be appended, based on the value given to the \"showFileInFolderUsesFileUri\" setting. If this is set to an empty array, the default tool for your platform will be used instead: \"nautilus -s\" on linux, \"open -R\" on mac, and \"explorer /select\" on Windows.\\nThis is provided to support Linux desktops that don't use Gnome.`,\n    defaultValue: []\n  }),\n\n  dcraw_emuPath: new StringSetting({\n    category: SettingCategories.Tools,\n    description: `This should be the absolute, native path to the \"dcraw_emu\" binary on this system. If this is set to \"dcraw_emu\", PhotoStructure will search your $PATH. See https://www.libraw.org/docs/Samples-LibRaw.html .`,\n    defaultValue: \"dcraw_emu\"\n  }),\n\n  ffmpegPath: new StringSetting({\n    category: SettingCategories.Tools,\n    description: `This should be the absolute, native path to the \"ffmpeg\" binary on this system. If this is set to \"ffmpeg\", PhotoStructure will search your $PATH. PhotoStructure prefers using ffmpeg to vlc. See https://photostructure.com/getting-started/video-support/ .`,\n    defaultValue: \"ffmpeg\"\n  }),\n\n  heifConvertPath: new StringSetting({\n    category: SettingCategories.Tools,\n    description: `This should be the absolute, native path to the \"heif-convert\" binary on this system. If this is set to \"heif-convert\", PhotoStructure will search your $PATH. See https://photostructure.com/getting-started/heif-support/ .`,\n    defaultValue: \"heif-convert\"\n  }),\n\n  powerShellArgs: new StringArraySetting({\n    category: SettingCategories.Tools,\n    description: `The following are the default arguments added to spin up PowerShell on Windows devices.\\nSee https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_powershell_exe?view=powershell-5.1 for all arguments that PowerShell.exe accepts.\\nSee https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_execution_policies?view=powershell-5.1 for a description of Bypass.\\nSee https://forum.photostructure.com/t/eliminate-powershell-profile-and-execution-policy-related-errors/184 for more details about why this needs to be configurable.\\n(Versions prior to v1.0.0 only specified \"-NoLogo\").`,\n    defaultValue: [\"-NoLogo\", \"-NoProfile\", \"-ExecutionPolicy\", \"Bypass\"]\n  }),\n\n  powerShellCulture: new StringSetting({\n    category: SettingCategories.Tools,\n    description:\n      \"If set to a non-blank value, PhotoStructure on Windows machines will set PowerShell's `[System.Threading.Thread]::CurrentThread.CurrentCulture` to this value. This allows PhotoStructure to parse PowerShell output reliably.\",\n    defaultValue: () => \"en-US\"\n  }),\n\n  powerShellProcs: new IntegerSetting({\n    category: SettingCategories.Tools,\n    description:\n      \"How many PowerShell child processes may each PhotoStructure process run? Defaults to max(2, (maxCpus() / 4)).\",\n    defaultValue: () => 2\n  }),\n\n  toolPaths: new StringArraySetting({\n    category: SettingCategories.Tools,\n    description: `These paths are appended to the PATH to ensure PhotoStructure can find and run external tools like ffmpeg. Use your operating system's separator to separate paths (\":\" for mac and linux, \";\" for windows).`,\n    defaultValue: () => [] as string[] // < set by setSettingsDefaults()\n  }),\n\n  vlcPath: new StringSetting({\n    category: SettingCategories.Tools,\n    description: `This should be the absolute, native path to the \"vlc\" binary on this system. If this is set to \"vlc\", PhotoStructure will search your $PATH.`,\n    defaultValue: \"vlc\"\n  }),\n\n  //\n  // Electron\n  //\n\n  updateChannel: new StringEnumSetting({\n    category: SettingCategories.Desktops,\n    description:\n      'TL:DR; keep this on \"stable.\" This setting only applies to PhotoStructure for Desktops, and controls which builds of PhotoStructure you are eligible to automatically update to. Please note that \"prealpha\" and \"alpha\" builds may not even launch, and \"beta\" builds have not been thoroughly tested. See https://forum.photostructure.com/t/alpha-beta-stable-and-latest-what-should-you-use/274 .',\n    defaultValue: () => (isTest() ? \"stable\" : channel()),\n    strEnum: UpgradeChannels\n  }),\n\n  updateOnLaunch: new BooleanSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"If true, PhotoStructure will check for updates automatically on launch.\",\n    defaultValue: true\n  }),\n\n  updateCheckMinutes: new IntegerSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"While running, PhotoStructure will check periodically for updates. The default is daily.\\nSet this to 0 to disable automatic updates.\",\n    defaultValue: 60 * 24\n  }),\n\n  autoHideMenuBar: new BooleanSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"If true, PhotoStructure for Desktops on Windows and Linux will auto hide the menu bar unless the Alt key is pressed.\",\n    defaultValue: false\n  }),\n\n  hideOnLaunch: new BooleanSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"If true, PhotoStructure for Desktops will not open the main window when launched. The tray icon will still be visible.\\nThis setting is ignored by PhotoStructure for Server editions.\",\n    defaultValue: false\n  }),\n\n  pauseSyncOnBattery: new BooleanSetting({\n    category: SettingCategories.Desktops,\n    description:\n      \"If true, PhotoStructure for Desktops will pause sync when the system is on battery power.\\nThis setting is ignored by PhotoStructure for Server editions.\",\n    defaultValue: false\n  }),\n\n  //\n  // Reporting\n  //\n\n  email: new OptionalStringSetting({\n    category: SettingCategories.Reporting,\n    description:\n      \"If set, this email will be used for license subscriptions and added to error reports, so we can contact you to help debug the issue. It is not required. Setting a value here does not subscribe you to any marketing emails.\",\n    exampleValue: () => \"email@example.com\",\n    advanced: () => false\n  }),\n\n  reportErrors: new BooleanSetting({\n    category: SettingCategories.Reporting,\n    description:\n      \"If true, PhotoStructure will send crash reports when it encounters errors. Crash reports may include the path to the file that caused an error, system metadata, and recent log messages.\",\n    defaultValue: true,\n    advanced: () => false\n  }),\n\n  maxErrorsPerDay: new IntegerSetting({\n    category: SettingCategories.Reporting,\n    description:\n      \"Set this to zero to remove all bugs in PhotoStructure.\\nHUR HUR #DADJOKE\\nIf your system generates more than this number of errors in the course of a day, the subsequent error reports will not be reported.\",\n    defaultValue: 3\n  }),\n\n  //\n  // WEB\n  //\n\n  minStreamCorrPct: new BoundedIntegerSetting({\n    category: SettingCategories.Web,\n    description: `Streams (shown on the asset page) are coalesced when the dice coefficient of their contents are greater than this value. A value of 100 requires streams to match exactly. A value of ~50 allows streams with a couple differences to be considered the \"same\" stream.`,\n    defaultValue: () => 50,\n    max: 100,\n    min: 1\n  }),\n\n  lazyLoadExtraVh: new IntegerSetting({\n    category: SettingCategories.Web,\n    description: `PhotoStructure only loads photos as they come close to the viewport. This setting determines what \"close to the viewport\" means, and is measured in \"vh\" units, or percentage points of your visitor's browsers view height.\\nThe default is 50, so approximately the next 50% of the screen will be pre-loaded before the user scrolls.\\nIf you have fast hardware and fast network, you could try bumping this up to 200.\\nIf you have very slow network, you might want to set this to 0.`,\n    defaultValue: 50\n  }),\n\n  hiddenHomeTags: new StringArraySetting({\n    category: SettingCategories.Web,\n    description: `The given root tags will be omitted from the home page. (Valid values include \"When\", \"Camera\", \"Lens\", \"Type\", \"Fs\", and \"Keyword\").`,\n    defaultValue: () => [\"Type\"]\n  }),\n\n  placeholderThumbs: new BooleanSetting({\n    category: SettingCategories.Web,\n    description:\n      \"Render missing asset previews as placeholder images (only useful for customer support).\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  fastForwardEmptyTags: new BooleanSetting({\n    category: SettingCategories.Web,\n    description: `When browsing tags in the UI, should tags that only have one child tag and no direct assets be skipped, or \"fast-forwarded,\" over? See https://forum.photostructure.com/t/volume-id-shows-as-a-tag/754/5 for context.`,\n    defaultValue: true\n  }),\n\n  // TODO:\n\n  // sessionTimeoutHours: new BoundedIntegerSetting({\n  //   category: SettingCategories.Web,\n  //   description:\n  //     \"How long should unused HTTP sessions exist before requiring visitors to log back in? This defaults to 180 days, just to maximize convenience.\",\n  //   defaultValue: 24 * 30 * 6,\n  //   max: 24 * 365,\n  //   min: 1\n  // }),\n\n  //\n  // Sync\n  //\n\n  syncReportsDir: new StringSetting({\n    category: SettingCategories.Sync,\n    description: `Detailed reports for every sync are stored in this directory, which defaults to \".photostructure/sync-reports\" within your PhotoStructure library. Absolute paths here are supported.`,\n    defaultValue: () => \".photostructure/sync-reports\"\n  }),\n\n  syncReportMaxRows: new IntegerSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"Some software can't open large CSVs, so PhotoStructure will start a new sync report if the rows exceed this value. Excel and LibreOffice can open million-row CSVs, so that's our default.\",\n    defaultValue: () => 1_000_000\n  }),\n\n  quickSyncMode: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should PhotoStructure disable a bunch of features to make imports faster? Note that this disables image validation, video transcoding, image hashing (required for good deduplication), metadata inference, and more efficient preview encoding. It is true by default on Raspberry Pis and false everywhere else.`,\n    defaultValue: () => isRaspberryPi()\n  }),\n\n  taskTimeoutMs: new DurationSetting({\n    category: SettingCategories.Sync,\n    aliases: [\"taskTimeoutMillis\"],\n    description:\n      \"What's the longest time it can validly take to fetch a file SHA, generate image previews for an asset, compute an image hash, or extract tags for a file?\\nOn a reasonable server and disk, these tasks should take a handful of seconds, but the default allows for a (busy!) RPi on a slow, remote disk to not timeout.\",\n    defaultValue: () => \"2m\"\n  }),\n\n  // it's \"scanPaths\", so \"scan\" should match here (rather than the \"sync\" prefix):\n  scanLibraryFirst: new BooleanSetting({\n    aliases: [\"syncLibraryFirst\"],\n    category: SettingCategories.Sync,\n    description:\n      \"Should PhotoStructure scan your library before all other paths are synchronized?\\nThis defaults to true if you are using automatic organization, to make sure existing files in your library are in sync with your library database. This prevents additional copies of the same SHA being copied into your library directory if you have automatic organization enabled.\",\n    defaultValue: true\n  }),\n\n  scanLibraryLast: new BooleanSetting({\n    aliases: [\"syncLibraryLast\"],\n    category: SettingCategories.Sync,\n    description:\n      \"Should PhotoStructure scan your library after all other paths are synchronized?\",\n    defaultValue: false\n  }),\n\n  progressRetentionDays: new IntegerSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"How many days of sync progress should we keep around in the database before it's removed?\",\n    defaultValue: 180\n  }),\n\n  progressStaleDays: new IntegerSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When sync starts, it tries to pick up where it was previously, but this doesn't make sense if the prior work was done a while ago, as it is more likely that the filesystem has changed since.\",\n    defaultValue: 6\n  }),\n\n  copyToLibraryMimeTypes: new StringArraySetting({\n    category: SettingCategories.Sync,\n    description: `When \"automatic organization\" is enabled, files whose mimetypes are included in this list will be copied into your originals directory.\\nNote that MIME types can include an asterisk to do glob-matching.\\nSee the related system setting \"copyAssetsToLibrary\".\\nA list of MIME types are here: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types .`,\n    defaultValue: () => [\"image/*\", \"video/*\"]\n  }),\n\n  onlyNativeFileCopy: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should PhotoStructure skip the built-in file copy code, and only use the \"OS native\" file copy mechanism?\\nPhotoStructure is typically faster than native file copies by 2x or more.\\nIf true, PhotoStructure will use \"cp\" on macOS and Linux, and PowerShell \"Copy-Item\" on Windows.`,\n    defaultValue: false\n  }),\n\n  verifyFileCopies: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should PhotoStructure verify all file copies by comparing SHAs of the source and destination? This shouldn't be necessary on most OSes and filesystems, and slows down library imports.`,\n    defaultValue: true\n  }),\n\n  assetPathnameFormat: new StringSetting({\n    category: SettingCategories.Sync,\n    description: `If you opt into \"automatic organization\" (see the setting \"copyAssetsToLibrary\"), they will be copied into <originals directory>/<result of assetPathnameFormat>.\\n- See the originalsDir system setting for what your <originals directory> is (it defaults to your library root directory).\\n- Please encode this path with forward-slashes, even if you're on Windows.\\n- If any patterns resolve to including forward-slashes, know that will be interpreted as subdirectories.\\n- If you want to add a static path, escape the pathname with single quotes (like \"'photos'/y/MM/dd\").\\n- The result of this will always be interpreted as a relative path from your PhotoStructure originals directory.\\n- Use token \"BASE\" as a shorthand for the original basename (\"photo.jpg\" for \"/path/to/photo.jpg\").\\n- Use token \"NAME\" as a shorthand for the original filename, without the file extension (\"photo\" for \"/path/to/photo.jpg\").\\n- Use token \"PARENT\" as a shorthand for the original file's parent directory name (\"to\" for \"/path/to/photo.jpg\").\\n- Use token \"GRANDPARENT\" as a shorthand for the original file's grandparent directory name (\"path\" for \"/path/to/photo.jpg\").\\n- Use token \"EXT\" for the filename's extension without the \".\" prefix (like \"jpg\" for \"/path/to/photo.jpg\").\\n- Use token \"ISO\" as a shorthand for \"yyyy-MM-dd'T'HH:mm:ss.SSSZZ\".\\n- You can escape other static text by wrapping with single quotes.\\n- For other tokens, see https://moment.github.io/luxon/#/formatting?id=table-of-tokens .\\n- See https://forum.photostructure.com/t/how-to-change-the-naming-structure/1184/2?u=mrm for more details.`,\n    defaultValue: \"y/y-MM-dd/BASE\"\n  }),\n\n  writeSourceTagToLibraryCopies: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should PhotoStructure write to the \"Source\" tag add metadata to assets copied into your library that includes the path where the file was originally found? This defaults to false to prevent adding sidecars to every file in your library.`,\n    defaultValue: false\n  }),\n\n  /**\n   * @deprecated\n   */\n  assetSubdirectoryDatestampFormat: new StringSetting({\n    category: SettingCategories.Sync,\n    envAliases: [\"PS_ASSET_SUBDIR_FORMAT\"],\n    description: `This setting has been replaced by \"assetPathnameFormat\".\\nIf this setting is provided, and assetPathnameFormat is _not_ provided, we will give assetPathnameFormat the value of this setting + \"/BASE\".`,\n    defaultValue: \"\",\n    deprecated: true\n  }),\n\n  startPaused: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"Should processing be paused by default when PhotoStructure starts? You'll have to manually resume processing via the system tray or nav menu.\",\n    defaultValue: false\n  }),\n\n  /**\n   * @deprecated\n   */\n  syncIntervalHours: new OptionalIntegerSetting({\n    category: SettingCategories.Sync,\n    description: `This setting has been replaced by \"syncNewIntervalMs\" and \"syncChangedIntervalMs\".`,\n    deprecated: true\n  }),\n\n  syncNewIntervalMs: new DurationSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"This value controls both how often the sync process discovers new files for any given volume.\\nNote that this value is the duration between the last completion time and when the next sync should be scheduled.\\nWARNING: Setting this value to a small value will mean PhotoStructure is constantly scanning your disks, which will add wear and tear and possibly reduce the lifespan of your storage media.\",\n    defaultValue: \"1d\"\n  }),\n\n  syncChangedIntervalMs: new DurationSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"This value controls both how often the sync process discovers new or changed files for any given volume.\\nNote that this value is the duration between the last completion time and when the next sync should be scheduled.\\nWARNING: Setting this value to a small value will mean PhotoStructure is constantly scanning your disks, which will add wear and tear and possibly reduce the lifespan of your storage media.\",\n    defaultValue: \"7d\"\n  }),\n\n  retryEnqueued: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `After finishing a directory sync, should PhotoStructure look at recent sync-reports and retry files that are \"stuck\" in \"enqueued\" state?\\nThis shouldn't be necessary, but it's a backstop to ensure syncs are comprehensive.`,\n    defaultValue: true\n  }),\n\n  forceRebuildLibrary: new BooleanSetting({\n    category: SettingCategories.Sync,\n    aliases: [\"rebuild\"],\n    description:\n      \"When set, all files in your library will be re-imported (caution: slow!).\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  dropWorkQueues: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, all files will be visited, even if the asset seems in sync with the filesystem.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  forceSync: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, all files will be visited, even if the asset seems in sync with the filesystem.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  forceRebuildPreviews: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, previews and transcoded videos will always be rebuilt.\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  noModelUpdates: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, skip any pending library database updates (only used for tests).\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  exitWhenDone: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"When set, the sync process will exit after jobs are completed (used internally and for tests).\",\n    defaultValue: false,\n    transient: true\n  }),\n\n  overwriteOriginal: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should changes made through the UI, like rotations, captions, and keywords, overwrite the original file? This is potentially dangerous, as your original may be lost if the disk has errors, or there are issues in rewriting the file contents. If this is set to false, the original file will be retained in the same directory. \"image.jpg\" will be stored as \"image_original.jpg\".`,\n    defaultValue: false\n  }),\n\n  maxDuplicatePathElements: new IntegerSetting({\n    category: SettingCategories.Sync,\n    description:\n      \"How many times can a given path element exist in a directory before it is considered within an infinite filesystem loop, and should be skipped from import?\",\n    defaultValue: 7\n  }),\n\n  noAssetFileUpdates: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should outdated AssetFiles be ignored on startup? (Only used for tests).`,\n    defaultValue: false,\n    transient: true\n  }),\n\n  noAssetUpdates: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should outdated Assets be ignored on startup? (Only used for tests).`,\n    defaultValue: false,\n    transient: true\n  }),\n\n  resyncAssetOnVisit: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should Assets be automatically re-synchronized whenever their info panel is viewed? This can make sure Assets are in-sync with the filesystem, but this can slow down current imports, and add load to slower computers. This defaults to true only if the current machine has >= 8 CPUs.`,\n    defaultValue: () => (isTest() ? true : cpuCount() >= 8)\n  }),\n\n  excludeNoMediaAssetsOnRebuild: new BooleanSetting({\n    category: SettingCategories.Sync,\n    description: `Should previously-imported assets that are found to have *any* files in NoMedia directories be excluded from your library?`,\n    defaultValue: () => true\n  }),\n\n  //\n  // Sidecars\n  //\n\n  matchSidecarsCaseInsensitively: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will look for sidecar files that match file basenames (with or without the file extension), regardless of case (for example: \"IMAGE.XMP\" will be a sidecar for \"image.jpg\").\\nIf set to false, sidecars must match case (so only \"image.jpg.xmp\" and \"image.xmp\" will match for \"image.jpg\").`,\n    defaultValue: true\n  }),\n\n  matchSidecarsFuzzily: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will look for sidecar files that match the basename of the asset, plus some common suffixes (like \"-edit\", \"-edited\", or variant copies, like \"-2\").\\nThis setting only impacts .XMP, .MIE, and .EXIF sidecars.\\nNote that PhotoStructure always matches .JSON files fuzzily, as that is required to handle Google Takeouts properly.`,\n    defaultValue: false\n  }),\n\n  defaultSidecarType: new StringSetting({\n    category: SettingCategories.Sidecars,\n    description: `What type of sidecar file do you want to generate for non-destructive edits?\\n- \"XMP\" is a popular and well-adopted format.\\n-\"MIE\" is defined at https://exiftool.org/TagNames/MIE.html .\\n- \"EXIF\" and \"EXV\" should only be used if required, as they have substantial limitations.\\nCase is preserved.`,\n    defaultValue: \"xmp\"\n  }),\n\n  writeMetadataToSidecarsIfImage: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will write metadata changes made to images into sidecars. If set to false, PhotoStructure will overwrite original images with metadata changes.`,\n    defaultValue: true\n  }),\n\n  sidecarTagBlocklist: new StringArraySetting<string>({\n    category: SettingCategories.Sidecars,\n    description: `Many applications don't read metadata from sidecars, which can make some tags, like Orientation or Rating, not seem to work properly in other applications. This setting is ignored if writeMetadataToSidecarsIfImage, writeMetadataToSidecarsIfVideo, and writeMetadataToSidecarsIfSidecarExists are all set to false.`,\n    defaultValue: () => [\"Orientation\"]\n  }),\n\n  writeMetadataToSidecarsIfVideo: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will write metadata changes made to videos into sidecars. If set to false, PhotoStructure will overwrite original videos with metadata changes. This defaults to false, as most software does not use sidecars except for images.`,\n    defaultValue: false\n  }),\n\n  writeMetadataToSidecarsIfSidecarExists: new BooleanSetting({\n    category: SettingCategories.Sidecars,\n    description: `If set to true, PhotoStructure will write metadata changes into sidecars if the file already has a sidecar and the tag is not in the sidecarTagBlocklist.`,\n    defaultValue: true\n  }),\n\n  // mergeLibrarySidecars: new BooleanSetting({\n  //   category: SettingCategories.Sidecars,\n  //   description: `If this and \"copyAssetsToLibrary\" are set to true, PhotoStructure will merge tag values found in variations into a single sidecar per asset. `,\n  //   defaultValue: true\n  // }),\n\n  // TODO: noMediaAssetAction (hide in library, exclude from library, trash from filesystem)\n\n  //\n  // Deduping\n  //\n\n  strictDeduping: new BooleanSetting({\n    category: SettingCategories.Deduping,\n    description: `How strict should PhotoStructure de-duplicate files? If this is false, we consider files to be equivalent if sufficient metadata matches (even if the image hash is different). If this is true, we will always compare image hashes. NOTE: This will most likely cause RAW and JPEG pairs to not always merge to the same asset, especially if your camera uses extensive computational imagery. ALSO NOTE: If this is true, \"useImageHashes\" will be forced to true, and the \"*corr*\" and \"*coeffPct\" settings will be set to 95.`,\n    defaultValue: false\n  }),\n\n  assetAggregation: new StringEnumSetting({\n    category: SettingCategories.Deduping,\n    description: `How should assets be aggregated?\\n- \"union\" will allow asset file variants to join an asset if they match *any* existing variant.\\n- \"intersection\" will only allow asset file variants to join an asset if they match *all* existing variants.\\nVersions prior to 2.1 defaulted to \"union\" behavior.`,\n    defaultValue: AggregateTypes.intersection,\n    strEnum: AggregateTypes\n  }),\n\n  useImageHashes: new BooleanSetting({\n    category: SettingCategories.Deduping,\n    description: `Building image hashes slows down imports, but supports more robust asset merging heuristics, and allows for dominant color tagging and browsing. If you set this from false to true, and you'd previously imported new assets, you may want to rebuild your library to re-aggregate your assets.`,\n    defaultValue: true\n  }),\n\n  allowFuzzyDateImageHashMatches: new BooleanSetting({\n    category: SettingCategories.Deduping,\n    description: `For images that don't have a reliable precise captured-at time (say, from \"stat\" or datestamp from pathname), can we aggregate assets purely by exact image hash matches?\\nSee https://forum.photostructure.com/t/deduplicate-shenanigans/1732/11 for more details.`,\n    defaultValue: false\n  }),\n\n  minMatchesWithoutImageHashes: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `If \"useImageHashes\" is true, this is ignored. This is a \"backstop\" that allows files to be aggregated together if their metadata is equal \"enough.\" As of Sept 2022, there are 5 metadata classes to match: \"cameraId\", \"lensId\", \"imageId\", \"exposureSettings\", and \"geohash\". All of these \"classes\" pull from several individual tags. Note that if any of these classes _don't_ match, the files will always be considered to be from different assets.`,\n    defaultValue: 3\n  }),\n\n  maxContemporaryAdoptionAssets: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `To handle photos and videos with \"fuzzy\" captured-at times (those that are missing second, minute, hour, or even day resolution), how many previously-imported assets with nearby captured-at times should PhotoStructure look for in your library to find an adoption candidate?\\nMonitor the \"sync.AssetFileFinder.assetByCapturedAtOrImageHash\" timer to see how long adoption is taking on your machine.\\nHigher values will slow down imports, but may result in more accurate de-duplication results.`,\n    defaultValue: 512\n  }),\n\n  // UUIDTags: new StringArraySetting({\n  //   category: SettingCategories.Deduping,\n  //   description: `What tags should be used to extract a \"UUID\" that PhotoStructure can trust for asset aggregation?\\nSee https://forum.photostructure.com/t/support-for-iphone-live-photos/87/6 for details.`,\n  //   defaultValue: () => [\"ContentIdentifier\", \"MediaGroupUUID\"]\n  // }),\n\n  datesBeforeAreEstimated: new StringSetting({\n    category: SettingCategories.Deduping,\n    description: `PhotoStructure automatically interprets captured-at timestamps before this ISO-formatted datestamp as \"estimated.\" PhotoStructure also considers timestamps whose minutes, seconds, and milliseconds are all 0 as \"estimated.\"\\nWhen assets have an estimated captured-at time, tighter image correlation is required to prevent different images as being incorrectly aggregated into the same asset.\\nThe default value is the release date for the Nikon Coolpix 950, which was one of the first prosumer digital cameras with ~2MP resolution.`,\n    defaultValue: \"1999-02-15\"\n  }),\n\n  // Note for future me: \"coefficient\" versus \"correlation\":\n\n  // Correlation relates to how well a set of points fit a line.\n  // https://en.wikipedia.org/wiki/Correlation\n\n  // \"Similarity coefficient\" is referenced in Jaccard Similarity, which is\n  // why I went with \"coefficient\" here.\n  // https://en.wikipedia.org/wiki/Jaccard_index\n\n  minExposureSettingsCoeffPct: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description:\n      \"This is the minimum similarity coefficient between exposure setting values two images must be to be considered equivalent. Many cameras actually report different exposure setting values between JPG and RAW: values within 90% of each other should avoid false-positives.\",\n    defaultValue: () => 90,\n    max: 100,\n    min: 0\n  }),\n\n  minImageCoeffPct: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `This setting controls how aggressively images are merged with each other, and is the minimum image hash similarity coefficient for images to be considered equivalent when their date is accurate, their mimetypes match, and are in color.\\nThis value is applied when the captured-at date has a non-zero minute, second, or millisecond, and was captured after \"datesBeforeAreEstimated,\" so the timestamp is considered to have high precision.\\n100 (or 100%) requires exact image correlation is not recommended due to causing false negative matches.\\nA value of less than 50% is fairly low image correlation, and can lead to false positive matches.`,\n    defaultValue: () => 70,\n    max: 100,\n    min: 0\n  }),\n\n  imageHashFuzzyDateDelta: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `This setting's value is added to \"minImageCoeffPct\" and \"minColorCoeffPct\" when captured-at dates have low precision. It defaults to a positive value so we are more strict about merging images with inaccurate dates. Set to 0 to disable this delta.`,\n    defaultValue: () => 12,\n    max: 100,\n    min: -100\n  }),\n\n  imageHashDifferentMimetypesDelta: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `This setting's value is added to \"minImageCoeffPct\" and \"minColorCoeffPct\" when file mimetypes don't match. It defaults to a negative value because RAW and JPEG formats frequently raster slightly different image hashes, requiring a more lax threshold to match JPG+RAW pairs. Set to 0 to disable this delta.`,\n    defaultValue: () => -15, // this is pretty high, but RAW+JPG pairs are often quite different\n    max: 100,\n    min: -100\n  }),\n\n  imageHashGreyscaleDelta: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `This setting's value is added to \"minImageCoeffPct\" when either image is essentially greyscale. It defaults to a positive value so we are more strict about merging greyscale images. We also don't have color correlation to help us, so a more strict threshold is warranted.`,\n    defaultValue: () => 10,\n    max: 100,\n    min: -100\n  }),\n\n  // imageHashBlur: new BooleanSetting({\n  //   category: SettingCategories.Deduping,\n  //   description: `PhotoStructure can apply a light blur between the dominant color pixel resample and the final image hash downsample, which can improve image hash matching of noisy or high frequency images. This adds 5-100ms to building image hashes.\\nSet to 0 to disable this blurring step.`,\n  //   defaultValue: true\n  // }),\n\n  minColorCoeffPct: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description:\n      \"Given two sets of dominant colors, this is the average percent that those sets correlate with eachother. A higher number requires stronger dominant color correlation. 100 (or 100%) requires exact dominant color correlation. A value of less than 50% indicates fairly low correlation of dominant colors, and can lead to false positives.\",\n    defaultValue: () => 73,\n    max: 100,\n    min: 0\n  }),\n\n  greyscaleColorThreshold: new BoundedIntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `Many \"black and white\" images, which scanned, actually include color information, especially if the source has yellowed with age. PhotoStructure determines if an image is \"greyscale\" if the standard deviation of a* plus the standard deviation of b* values is less than this value. By only looking at standard deviation, we can categorize sepia photos as \"greyscale.\" Smaller values are stricter.`,\n    defaultValue: 3,\n    max: 128,\n    min: 0\n  }),\n\n  gpsErrorMeters: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `What's the maximum number of meters between GPS fixpoints that should be considered equivalent locations? Note that JPG+RAW pairs from smartphones frequently have different GPS locations due to one being recorded from a rough WiFi fix, and another from aGPS.\\nGPS position error is ~10-100m. Cellular position error is ~500-750m.`,\n    defaultValue: 500\n  }),\n\n  minCapturedAtPrecisionDifferentMimetypes: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `Some cameras store JPEG+RAW pairs with slightly different captured-at times (!!). To ensure these are merged properly, we need to allow for these discrepancies. This setting controls how many milliseconds of difference we allow between captured-at times for different mimetypes. Set to 0 to disable this feature.`,\n    defaultValue: () => 1500\n  }),\n\n  minCapturedAtPrecisionStat: new IntegerSetting({\n    category: SettingCategories.Deduping,\n    description: `If a captured-at time is low quality (using the mtime or birthtime of the file), what should PhotoStructure use as the \"minimum\" precision for that time? This is used to determine how much \"fuzziness\" to allow when comparing captured-at times during assert aggregation. Set to 0 to disable this feature.`,\n    defaultValue: () => minuteMs\n  }),\n\n  fuzzyDatePrecisionCoeff: new FloatSetting({\n    category: SettingCategories.Deduping,\n    description: `When comparing \"captured-at\" dates that aren't from reliable metadata tags, what coefficient should be applied to the inferred precision of those dates? Larger values will mean PhotoStructure will consider these \"fuzzy\" dates to be less precise, and expand the date range when searching for matching assets. Set to 1 to disable this feature.`,\n    defaultValue: 2\n  }),\n\n  // TODO: FINISH! See core/img/ImageDataHash.ts\n\n  // useImageDataHashes: new BooleanSetting({\n  //   category: SettingCategories.Deduping,\n  //   description: `Should PhotoStructure match files using a cryptographic hash of the image data (without metadata)? This will allow files with the same image content to match after metadata changes, but takes longer to compute.`,\n  //   defaultValue: true\n  // }),\n\n  // imageDataHashTags: new StringArraySetting({\n  //   category: SettingCategories.Deduping,\n  //   description: `Should PhotoStructure save image data cryptographic hashes into files copied into your library? These values must be valid tag names. When writing, PhotoStructure will write into the first tag that doesn't already have a value (to avoid clobbering prior values).\\nSet to an empty array to disable this feature.`,\n  //   defaultValue: [\n  //     \"DocumentId\",\n  //     \"OriginalDocumentID\",\n  //     \"BurstUUID\",\n  //     \"BurstId\",\n  //     \"CameraBurstID\",\n  //     \"MediaGroupUUID\",\n  //     \"InstanceId\"\n  //   ]\n  // }),\n\n  //\n  // Color\n  //\n\n  dominantColorPixels: new BoundedIntegerSetting({\n    category: SettingCategories.Color,\n    aliases: [\"modePixels\"],\n    description: `PhotoStructure downsamples images to contain this number of pixels, converts each pixel into CIELAB space, and then runs k-means clustering to extract dominant colors. Larger values will be slower to process, but will result in more accurate dominant colors. Smaller values will be faster, but may result in inaccurate dominant colors.`,\n    defaultValue: DominantColorPixelsDefault,\n    max: 4096,\n    min: 256\n  }),\n\n  dominantColorDeltaE: new StringEnumSetting({\n    aliases: [\"delta_e\"],\n    category: SettingCategories.Color,\n    description: `What delta_e algorithm should PhotoStructure use to determine color differences? cie76 is quick but inaccurate. cie94 is more accurate than cie76 but 6x more computationally expensive than cie76. ciede2000 is best, but 4-6x more expensive than cie94.`,\n    defaultValue: ColorDistanceFunctions.ciede2000,\n    strEnum: ColorDistanceFunctions\n  }),\n\n  dominantColorKmeansRuns: new BoundedIntegerSetting({\n    category: SettingCategories.Color,\n    aliases: [\"modeRuns\"],\n    description: `PhotoStructure uses k-means clustering to extract dominant colors from your images.\\nLarger values will allow PhotoStructure to run k-means with more random seeds and different pre-merged k values, which should result in higher quality results.\\nUsing 0 will revert to posterizing the image and using the top-n colors, which is fast and deterministic, but has lower quality results.\\nChanging this value will subtly change many image's dominant color lists.\\nThis defaults to 0 run when \"quickSyncMode\" is enabled.`,\n    defaultValue: DominantColorKmeansRunsDefault,\n    max: 64,\n    min: 0\n  }),\n\n  dominantColorMergeThreshold: new BoundedIntegerSetting({\n    category: SettingCategories.Color,\n    description: `The best dominant color cluster centroids may be quite similar. PhotoStructure will merge centroids if their Δe is less than this value. Larger values will result in more different dominant colors, but those may not be as accurate.`,\n    defaultValue: 10,\n    max: 32,\n    min: 0\n  }),\n\n  dominantColorGreyThreshold: new BoundedIntegerSetting({\n    category: SettingCategories.Color,\n    aliases: [\"modeGrey\"],\n    description: `May PhotoStructure ignore pixels that are greyscale, or \"desaturated,\" when looking for dominant colors? Larger values will result in only saturated colors being considered for dominant colors. A pixel color will be removed if its absolute a* and b* values in CIELAB space sum to less than this value.\\nSet this to 0 to include greys in dominant colors, but note that this tends to reduce image deduplication effectiveness, as most natural-tone images contain a good deal of greyscales, which results in false matches.`,\n    defaultValue: 11,\n    max: 80,\n    min: 0\n  }),\n\n  //\n  // Shared-state events\n  //\n\n  sharedStateDir: new OptionalStringSetting({\n    category: SettingCategories.Events,\n    description:\n      \"PhotoStructure uses a set of JSON files to relay messages between processes (rather than an RPC mesh, socket, or named pipe, whose device types isn't supported on some filesystem types). This directory must be readable and writable.\",\n    defaultValue: () => \"\" // < set by setSettingsDefaults()\n  }),\n\n  sharedStatePollMs: new DurationSetting({\n    category: SettingCategories.Events,\n    description: `The \"sharedStateFile\" is watched for changes using your OS'es filesystem watch functionality: for most setups, this will result in almost instantaneous event propagation. Some filesystems don't support filesystem watching, or miss file edits, so we _also_ manually check for file changes every \"sharedStatePollMs\" milliseconds. This defaults to 7 seconds, but know that this will prevent the \"PS_CONFIG_DIR\" hard drive from spinning down and going to sleep.\\nSee the \"allowFilesystemSleep\" for other related settings.\\nSet this setting to 0 to disable state polling.`,\n    defaultValue: () => \"7s\"\n  }),\n\n  sharedStateTaskTimeoutMs: new DurationSetting({\n    category: SettingCategories.Events,\n    description: `How long should PhotoStructure wait for shared-state tasks to be completed before timing out and giving up?`,\n    defaultValue: () => \"5m\"\n  }),\n\n  //\n  // Previews\n  //\n\n  previewQuality: new BoundedIntegerSetting({\n    aliases: [\"jpegQuality\"],\n    category: SettingCategories.Previews,\n    description:\n      \"JPEG output quality for previews. Smaller values produce smaller images with lower quality. The default value of 80 strikes a balance that has almost no noticeable compression artifacts, yet still compresses images reasonably well. Depending on image content, values less than 50-70 can produce noticeable artifacts.\",\n    defaultValue: () => 80,\n    max: 100,\n    min: 10\n  }),\n\n  previewProgressive: new BooleanSetting({\n    category: SettingCategories.Previews,\n    aliases: [\"progressive\", \"jpegProgressive\"],\n    description: `Should preview JPEGs be progressively encoded? If set, thumbnails will take ~15% longer to generate, but FHD/QHD/UHD previews will be smaller.`,\n    defaultValue: true\n  }),\n\n  previewMinimized: new BooleanSetting({\n    aliases: [\"jpegMinimized\"],\n    category: SettingCategories.Previews,\n    description: `Should preview JPEGs be optimized? If set, preview generation can take 50% longer, but can result in up to ~30% smaller images. This saves disk space and network transport time.\\nThis setting controls the \"mozjpeg\" option: see https://sharp.pixelplumbing.com/api-output#jpeg for details.\\nThis automatically defaults to true if at least 4 CPU cores are present.`,\n    defaultValue: () => (isTest() ? true : cpuCount() >= 4)\n  }),\n\n  dcrawEmuArgs: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `What options do you want to pass to dcraw_emu? Note that \"-T -o 1 -j -Z -\" will always be added (as we need TIFF, sRGB, raw pixels send to stdout). The \"-h\" arg will be added if the preview image needed is less than half the resolution of the original.\\nRun \"dcraw_emu\" with no arguments to get usage help.\\n\"-q 1\" sets interpolation quality to \"0\".\\n\"-H 2\" turns on highlight blending.\\n\"-w\" uses the camera-set white balance.\\nNote: changing these values can dramatically (> 10x!) increase the time it takes to render RAW images.`,\n    defaultValue: [\"-q\", \"0\", \"-w\"]\n  }),\n\n  iccProfileMappings: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `Maps an original image profile to a filename stored in the \"icc\" directory. See that directory's _info.md for more information about this settings.`,\n    defaultValue: [\n      \"Display P3:DisplayP3Compat-v2-magic.icc\",\n      \"Adobe RGB:AdobeCompat-v2.icc\"\n    ]\n  }),\n\n  squareThumbStrategy: new StringEnumSetting({\n    category: SettingCategories.Previews,\n    description:\n      'When PhotoStructure crops images and videos to square thumbnails, it needs to crop non-square images to a square. The default, \"attention,\" focuses on faces and higher image energy, but is more expensive than simply cropping to the center of the image (which is faster, but will mean less-nice cropping, where faces are chopped in half). More details are available here: https://sharp.pixelplumbing.com/api-resize .',\n    defaultValue: CropStrategies.attention,\n    strEnum: CropStrategies\n  }),\n\n  videoFrameAtSec: new FloatSetting({\n    category: SettingCategories.Previews,\n    description: `When capturing a frame from videos for thumbnails, how many seconds should be passed over before capturing a frame? A value of 0 means capture from the start of the video. Frequently, though, videos start out of focus, so we default to 1.5 for better frame clarity.\\nNote that if a video is shorter than this value, the frame will be captured from the middle of the video.`,\n    defaultValue: 1.5\n  }),\n\n  // TODO: add this to the settings page:\n  previewSharpen: new BooleanSetting({\n    aliases: [\"sharpen\"],\n    category: SettingCategories.Previews,\n    description: `Should previews be sharpened? This can make the images \"pop\" a bit more, but almost doubles the time it takes to make the thumbnails.`,\n    defaultValue: false\n  }),\n\n  // TODO: add this to the settings page:\n  previewResolutions: new StringEnumsSetting({\n    category: SettingCategories.Previews,\n    description:\n      \"This controls the resolutions that PhotoStructure creates for every asset. Note that resolutions will be skipped if there already is a preview value with <= 2.5x pixel count, so even though there are a lot of sizes here, you'll only see 3-4 images on your disk per asset.\\nSee https://en.wikipedia.org/wiki/Graphics_display_resolution for a description of these resolution codes.\",\n    defaultValue: diff(FitSizes.values, [\"uhd8k\", \"uhd5k\"]),\n    strEnum: FitSizes\n  }),\n\n  embeddedPreviews: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `For larger source images that are greater than 15MP, what embedded image preview tags should be used when present? Using these embedded images speeds up image preview generation, but if the embedded image doesn't match the full-sized image, the image preview will be incorrect.\\nSet this to an empty array to disable using embedded previews.`,\n    defaultValue: [\"PreviewImage\", \"PreviewTIFF\", \"JpgFromRaw\"]\n  }),\n\n  embeddedThumbnails: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `Should embedded image thumbnails be used when available? This speeds up image hashing, but if the embedded image thumbnail doesn't match the full-sized image, the image hash will be incorrect.\\nSet this to an empty array to disable using embedded previews.`,\n    defaultValue: [\"ThumbnailImage\", \"ThumbnailTIFF\"]\n  }),\n\n  maxEmbeddedBuffer: new IntegerSetting({\n    category: SettingCategories.Previews,\n    description: `PhotoStructure tries to use embedded images for preview generation to minimize work. For smaller images, we can directly pipe the buffer from the embedded image into our image pipeline, but for larger images, it can be faster to use an intermediary file stored on the cache drive. Larger values will reduce disk I/O but increase memory and CPU consumption. Set this to 0 to force all previews to be written to the cache dir.\\nThis defaults to ${fmtBytes(\n      DefaultMaxEmbeddedBuffer * 4\n    )} on Windows due to slow disk I/O on that platform.`,\n    defaultValue: () => (isWin ? 4 : 1) * DefaultMaxEmbeddedBuffer\n  }),\n\n  skipPreviews: new BooleanSetting({\n    category: SettingCategories.Previews,\n    description: `Only used for tests.`,\n    advanced: () => true,\n    defaultValue: false\n  }),\n\n  variantSortCriteria: new StringEnumsSetting({\n    category: SettingCategories.Previews,\n    aliases: [\"assetFileSortCriteria\"],\n    description: `How should PhotoStructure pick the \"best\" asset file variant for a given asset? You may reorder the default fields. Only \"resolution\", \"fileSize\", \"mtime\", \"schemeIdx\", \"isCover\", \"count\", and \"isBrowserSupported\" are understood: other field names will be ignored. Details about these fields are here: https://photostructure.com/faq/what-do-you-mean-by-dedupe/#how-does-photostructure-pick-which-file-to-show .`,\n    strEnum: AssetFileSortCriteria\n  }),\n\n  variantSortCriteriaPower: new BoundedFloatSetting({\n    category: SettingCategories.Previews,\n    description: `Variant sort criteria \"resolution\" and \"fileSize\" are scaled down to ignore irrelevant differences. Scalars are raised to this power to reduce them, so a value of 1 means the criterion is unchanged from the \"raw\" value. Smaller values for this setting let _larger_ differences be ignored.`,\n    defaultValue: () => 1 / 6,\n    max: 1,\n    min: 1e-6\n  }),\n\n  includePreviewTags: new BooleanSetting({\n    category: SettingCategories.Previews,\n    description: `By default, PhotoStructure strips all metadata from preview images. This both saves space, and reduces disk I/O during preview generation. If this setting is enabled, all \"includedPreviewTags\" will be restored in preview images that are more than 1 megapixel. If this setting is enabled, each preview image will be written to twice (once for the image and once for the metadata), so imports will be slower.`,\n    defaultValue: false\n  }),\n\n  includedPreviewTags: new StringArraySetting({\n    category: SettingCategories.Previews,\n    description: `If \"includePreviewTags\" is true, what tags should PhotoStructure retain when building preview images? A partial list of tags is here: https://photostructure.github.io/exiftool-vendored.js/interfaces/Tags.html . Note that not all files contain all (or even some!) of those tags.\\n- \"capturedAt\" is a special meta-tag which will retain whatever tag contains the \"best\" time that PhotoStructure could find that encoded the date and time when the image was captured, and will store that value in DateTimeOriginal.\\n- \"exposureSettings\" is a special meta-tag that will retain shutter time (ExposureTime), aperture (FNumber), and ISO (ISOSpeed) metadata (but may be encoded with different values).\\n- including \"GPSLatitude\" and \"GPSLongitude\" will mean previews will contain location metadata if the source image had location metadata.`,\n    defaultValue: () => DefaultIncludedPreviewTags\n  }),\n\n  //\n  // Filters\n  //\n\n  disableAllFilters: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"Setting this to true will force all other filter settings to their most permissive value. Note that this also disables file validation tests and the file SHA blocklist, so corrupt files and previously removed files will be attempted to be imported as well.\",\n    defaultValue: false\n  }),\n\n  excludeGlobsAdd: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `This setting adds glob patterns for files and directories that should be excluded from your library.\\nThese patterns will be added to PhotoStructure's default set of (several hundred!) exclusion globs.\\nSee https://forum.photostructure.com/t/1458 for details.`,\n    exampleValue: () => [\"**/tmp\"],\n    defaultValue: () => []\n  }),\n\n  excludeGlobsOmit: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `PhotoStructure has several hundred default \"exclusion globs\" to avoid scanning system and application directories and otherwise irrelevant files.\\nThe patterns provided here are removed from that default set.\\nSee https://forum.photostructure.com/t/1458 for details.`,\n    defaultValue: () => []\n  }),\n\n  globsCaseInsensitive: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Should \"globs\" match case-insensitively?`,\n    defaultValue: true\n  }),\n\n  respectFileExtensions: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Normally PhotoStructure uses file extensions (like .JPEG or .MP4) to perform initial file filtering, rather than examining the content of the file to determine the file format (or \"mimetype\"). If you have files that don't use valid file extensions, you can set this to false, but know that file imports will be much slower.`,\n    defaultValue: true\n  }),\n\n  disableIgnorableFilters: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"PhotoStructure has a (ton) of patterns used to avoid scanning system, cache, and application directory hierarchies. See the 'excludeGlobs*' settings for more precise editing of exclusion patters.\",\n    defaultValue: false\n  }),\n\n  requireMakeModel: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"PhotoStructure can require images to have EXIF tags for Make and Model. This prevents unwanted preview images from other photo apps and screenshots from being imported. If you have images you want in your library that don't have these tags, set this to false. Note that this is ignored for video files, as those files seldom have Make and Model set (and would prevent most video files from being imported).\",\n    defaultValue: false\n  }),\n\n  rejectRatingsLessThan: new IntegerSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"Files with a metadata rating that is less than this value will not be imported into your library. Set to -100 to disable this filter.\",\n    defaultValue: 0\n  }),\n\n  keywordBlocklist: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `Any asset that contains any of these keywords will be excluded from your library. Set this to an empty array to disable this feature.`,\n    defaultValue: [\"private\"]\n  }),\n\n  minImageDimension: new IntegerSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum number of pixels an image's dimensions must meet or exceed to be imported? Note that this value is applied to both the height and width of the image. The default comes from the VGA standard of 640x480. If this is set to 0, no minimum resolution filter will be applied to photos.\",\n    defaultValue: 480\n  }),\n\n  minVideoDimension: new IntegerSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum number of pixels a video's dimensions must meet or exceed to be imported? Note that this value is applied to both the height and width of the video. The default comes from the QVGA standard of 320x240. If this is set to 0, no minimum resolution filter will be applied to videos.\",\n    defaultValue: 240\n  }),\n\n  minVideoDurationSec: new OptionalFloatSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum number of seconds for a video to be imported? If this is set to 0 or unset, no minimum duration limit will be applied.\",\n    defaultValue: 2\n  }),\n\n  maxVideoDurationSec: new OptionalIntegerSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the maximum length a video can be and still be imported? If this is set to 0 or unset, no maximum duration limit will be applied.\"\n  }),\n\n  minAssetFileSizeBytes: new IntegerSetting({\n    aliases: [\"minAssetSizeBytes\", \"minAssetSize\", \"minFileSizeBytes\"],\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum photo or video size you want imported into your library?\\nThis setting can prevent small GIFs and screenshots from being imported.\\nValues less than 1000 will be ignored.\\nA 20-year-old 1600x1200 JPEG at 50% quality is more than 150k, so 50k is a very conservative default.\",\n    defaultValue: 50 * KB\n  }),\n\n  maxAssetFileSizeBytes: new IntegerSetting({\n    aliases: [\"maxAssetSizeBytes\", \"maxAssetSize\", \"maxFileSizeBytes\"],\n    category: SettingCategories.Filters,\n    description:\n      \"What's the maximum photo or video size you want imported into your library? (This can prevent movies from being pulled into and filling up your library). A value of 0 will disable this filter.\",\n    defaultValue: 0.5 * GB\n  }),\n\n  // TODO: add this to the settings page:\n  validateJpegImages: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Should JPEG photos be validated before importing? If a JPEG has any decoding errors, and this setting is true, that file will not be imported into your library. Enabling this feature slows down imports.`,\n    defaultValue: true\n  }),\n\n  imageFailOn: new StringEnumSetting({\n    category: SettingCategories.Filters,\n    description: `How sensitive should PhotoStructure be with warnings or errors when loading images?\\nUse \"none\" to try loading images with best efforts, even if the file may be corrupt.\\nUse \"warning\" to be conservative--any defects in the image will prevent it from being imported. \\nThe default, \"truncated,\" will allow images with minor encoding defects to be imported.`,\n    defaultValue: SharpFailOns.truncated,\n    strEnum: SharpFailOns\n  }),\n\n  // TODO: add this to the settings page:\n  validateRawImages: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Should raw-format images (like NEF, CR2, ARW, and ORF) be validated before importing? If an image has any decoding errors, and this setting is true, that file will not be imported into your library. Enabling this feature slows down imports.`,\n    defaultValue: true\n  }),\n\n  // TODO: add this to the settings page:\n  validateVideos: new BooleanSetting({\n    category: SettingCategories.Filters,\n    description: `Should videos be validated before importing? If a video has any decoding errors, and this setting is true, that file will not be imported into your library. Enabling this feature slows down imports, as videos must be fully decoded (or \"played\") to be validated. Only ffmpeg currently supports video validation; if you use VLC, this setting is ignored.`,\n    defaultValue: () => false\n  }),\n\n  validationErrorBlocklist: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `If any of the following patterns match a validation error found in a photo or video, and *doesn't* match any of the patterns in the validationErrorAllowlist, the file will be considered corrupt and not be imported into your library.\\nNote the patterns are case-insensitive, will be converted into a regular expression, and only need to partially match the error message, so, for example, a value of \"caution\" will ignore any error message that contains the string (not the word!) \"caution\".\\nAlso see \"validationErrorAllowlist\".`,\n    defaultValue: () => [\n      \"cannot decode\",\n      \"cannot determine format of input stream\",\n      \"corrupt\", // matches \"data corrupted\"\n      \"error while decoding\", // ffmpeg from truncations\n      // \"error\", maybe too lax?\n      \"failed\", // not specific enough?\n      \"invalid\",\n      \"not a jpeg file\", // Not a JPEG file\n      \"not raw file\",\n      \"nothing was written into output file\",\n      \"partial file\",\n      \"premature end of .+ file\", // Premature end of JPEG file\n      \"unsupported file format\" // corrupt or invalid RAW files\n    ]\n  }),\n\n  validationErrorAllowlist: new StringArraySetting({\n    category: SettingCategories.Filters,\n    description: `All validation errors that match any of these values they will be ignored, EVEN IF they match a \"validationErrorBlocklist\" pattern, so all of these patterns should be specific enough to not cause false-negatives.\\nNote the patterns are case-insensitive, will be converted into a regular expression, and only need to partially match the error message.\\nAlso see \"validationErrorBlocklist\".`,\n    defaultValue: () => [\n      \"invalid SOS parameters for sequential jpeg\",\n      \"referenced qt chapter track not found\",\n      \"non monotonically increasing dts\" // don't care about timestamps\n    ]\n  }),\n\n  //\n  // Parsing\n  //\n\n  capturedAtTags: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `The following tags are examined to determine when a file was captured at.\\nThe tag with the oldest valid value is returned: order here doesn't matter.\\nIf none of these tags have a valid datetime stamp, PhotoStructure will fall back to \"capturedAtTagsFallback\" tags.\\nSee https://photostructure.com/faq/captured-at/ for details.`,\n    defaultValue: DefaultCapturedAtTagsConst as any as string[]\n  }),\n\n  capturedAtTagsFallback: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `If none of the \"capturedAtTags\" have a valid value, PhotoStructure will fallback to look at these tags. These tags are only \"fallbacks\" as they sometimes contain spurious values.\\nSee https://photostructure.com/faq/captured-at/ for details.`,\n    defaultValue: ProblematicCapturedAtTags as any as string[]\n  }),\n\n  badDates: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `The following ISO values will be ignored when extracting a file's captured-at time. See https://forum.photostructure.com/t/photostructure-ignored-the-date-metadata-of-some-photos-marked-them-as-taken-in-2002/340/8 and https://forum.photostructure.com/t/incorrect-date-assigned-to-photo/419 .`,\n    defaultValue: () => [\"2002-12-08T12:00:00\"]\n  }),\n\n  defaultVideosToUTC: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `Should video created-at times be assumed to be in UTC? Most cameras use UTC (even if the timezone is set in the camera!). Set this to false to revert to pre-v2.1 behavior.`,\n    defaultValue: () => true\n  }),\n\n  defaultCopyright: new OptionalStringSetting({\n    category: SettingCategories.Parsing,\n    description: `If PhotoStructure doesn't find a value for Copyright in a source image or source video, it will apply the given string as the copyright holder.\\nThis has no default.`\n  }),\n\n  likeRating: new IntegerSetting({\n    category: SettingCategories.Parsing,\n    description: `What's the minimum \"rating\" for an asset to be considered \"liked\"?\\nKnow that metadata \"ratings\" are stored in both EXIF and XMP \"Rating\" and \"RatingPercent\" tags. Ratings are typically encoded as a value between -1 and 5 (where -1 is used by some DAMs to mark \"rejected\").\\nPhotoStructure will prefer the XMP Rating tag.\\nIf the only tag with a rating is a \"RatingPercent\", it will be converted to a 5-point scale.\\nIf you want only ratings of 5 to be considered a \"liked\" asset, set this to 5.\\nThis value will be used when assets are liked via the PhotoStructure UI.\\nNote that PhotoStructure doesn't import assets with a negative Rating (to respect the \"rejected\" rating).`,\n    defaultValue: () => 3\n  }),\n\n  lensMakes: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `Used to extract and parse lens metadata (useful when Google Takeout has stripped metadata).`,\n    defaultValue: () => DefaultLensMakes\n  }),\n\n  extraDateTimeFormats: new StringArraySetting({\n    category: SettingCategories.Parsing,\n    description: `These formats are used to parse datetime strings in EXIF metadata and in file pathnames. See https://moment.github.io/luxon/#/formatting?id=table-of-tokens for a description of these tokens.`,\n    defaultValue: () => DefaultDateTimeFormats\n  }),\n\n  fuzzyDateParsing: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, PhotoStructure will first attempt to parse datetime strings with strict ISO-compliant parsers, and then use additional, \"fuzzy\" datetime parsers. When disabled, only ISO-compliant parsers are used.`,\n    defaultValue: true\n  }),\n\n  fuzzyYearParsing: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, PhotoStructure will use directories starting with a number that looks year-like (four digits, 1826-the present) to infer the captured-at time, if all other date parsers have failed. Note that setting this to true \"forces\" the \"fuzzyDateParsing\" setting to be true.\\nTo elaborate: PhotoStructure first looks for metadata with a date, then looks for an ISO-compliant YMD timestamp in the filename or path, and then, if \"fuzzyDateParsing\" or this setting is enabled, a YMD or YM datestamp, and then finally, if this setting is enabled, it looks for a directory that begins with a number that is between 1826-2020.`,\n    defaultValue: false\n  }),\n\n  twoDigitCutoffYear: new IntegerSetting({\n    category: SettingCategories.Parsing,\n    description: `If \"yy\" is used in extraDateTimeFormats, and a year is only 2 digits, what threshold value should be used to consider the date to be in the 1900s vs 2000s?\\nAs an example, a value of \"50\" would make \"49\" be interpreted as 1949, and \"50\" as 2050.\\nSee https://moment.github.io/luxon/api-docs/index.html#settingstwodigitcutoffyear for details.\\nThis defaults to 3 years in the future (modulus 100) and is updated automatically.`,\n    defaultValue: () => (new Date().getFullYear() + 3) % 100\n  }),\n\n  minValidYear: new IntegerSetting({\n    category: SettingCategories.Parsing,\n    description: `If PhotoStructure encounters a year that is less than this value, it will consider it invalid and look elsewhere for dates. The default value, 1826, is the first year a photograph was captured, as per https://en.wikipedia.org/wiki/History_of_photography . If you have paintings or other imagery from before this time, you'll want to make this value less than the earliest image in your library.`,\n    defaultValue: 1826\n  }),\n\n  useStatToInferDates: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, and the \"captured-at\" time isn't found in metadata, PhotoStructure will also look for the captured-at datetime encoded in the file \"birthtime\" (on Windows), or the lesser value of \"mtime\" and \"ctime\" (on macOS and Linux). Note that these values are not very reliable, as file transfers and backups frequently don't retain these values correctly.`,\n    defaultValue: true\n  }),\n\n  usePathsToInferDates: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, and the \"captured-at\" time isn't found in metadata, PhotoStructure will also look for the captured-at datetime encoded in file paths.`,\n    defaultValue: true\n  }),\n\n  useLibraryDirsToInferDates: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, and the \"captured-at\" time isn't found in metadata, PhotoStructure will also look for the captured-at datetime encoded in file paths *for files that are in your PhotoStructure library. This defaults to false, as prior versions of PhotoStructure may have placed files into incorrect datestamped directories.`,\n    defaultValue: false\n  }),\n\n  /**\n   * @deprecated\n   */\n  enableSiblingInference: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `This setting has been replaced by the \"siblingInference\" setting. \"true\" is equivalent to \"auto\", and \"false\" is equivalent to \"never\".`,\n    defaultValue: true,\n    deprecated: true\n  }),\n\n  siblingInference: new StringEnumSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, and the \"captured-at\" time, Make, or Model isn't found in metadata, PhotoStructure will try to use nearby files to \"fill in the blanks.\" If this is set to \"auto\", this is disabled automatically for slow directories. If this is set to \"always\", even files in slow directories will have tag inference, when necessary. Set to \"never\" to disable.`,\n    strEnum: TagInferenceSettingValues,\n    defaultValue: TagInferenceSettingValues.auto\n  }),\n\n  siblingInferenceBasenameCoeff: new FloatSetting({\n    category: SettingCategories.Filters,\n    description:\n      \"What's the minimum case-insensitive Sørensen–Dice similarity index between file basenames, without the extension, to be used for sibling inference?\\n0 will accept all siblings, 1 will only accept exact matches.\",\n    defaultValue: 0.6 // tests fail with 0.65\n  }),\n\n  writeInferredTagsToLibraryCopies: new BooleanSetting({\n    category: SettingCategories.Parsing,\n    description: `When enabled, inferred metadata will be stored as _actual_ metadata in the library copy.`,\n    defaultValue: true\n  }),\n\n  //\n  // Tagging\n  //\n\n  recountAllTags: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should all tags be recounted? PhotoStructure normally only recounts tags that have had assets recently added or removed, unless there are more than 20 changed tags.`,\n    defaultValue: false,\n    transient: true\n  }),\n\n  tagCamera: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with cameras' make and model?`,\n    defaultValue: true\n  }),\n\n  tagLens: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with lens' make and model?`,\n    defaultValue: true\n  }),\n\n  tagFullLensModel: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should PhotoStructure tag assets with the full lens model (like \"Canon EF-M 15-45mm f/3.5-6.3 IS STM\") or a just the lens information (\"15-45mm f/3.5-6.3\")? (If you change this value, you'll need to \"Rebuild\" your library to make the setting take effect).`,\n    defaultValue: true\n  }),\n\n  tagYMD: new StringEnumSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with \"When > Year\" (the \"y\" option), or \"When > Year > Month\" (the \"ym\" option), or \"When > Year > Month > Day\" (the \"ymd\" option)? Setting this to \"\" will disable date tagging.`,\n    defaultValue: DateTagFormats.ym,\n    strEnum: DateTagFormats\n  }),\n\n  tagDateFromStat: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should PhotoStructure tag assets with a date if the captured at time was only found in filesystem metadata? Filesystem metadata is not as reliable as EXIF metadata, as it can be changed arbitrarily when files are backed up.`,\n    defaultValue: () => (isTest() ? false : true)\n  }),\n\n  tagKeywordsFromPath: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with keywords extracted from file pathnames?`,\n    defaultValue: true\n  }),\n\n  tagKeywordsFromMetadata: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should assets be tagged with keywords extracted from file metadata, as well as sidecar metadata?`,\n    defaultValue: true\n  }),\n\n  keywordTags: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure should look in the following tags for keywords. Note that these values are case-sensitive.`,\n    defaultValue: () => [\n      \"CatalogSets\",\n      \"Categories\",\n      \"HierarchicalSubject\",\n      \"Keywords\",\n      \"LastKeywordXMP\",\n      \"Subject\",\n      \"TagsList\",\n      \"XPKeywords\"\n    ]\n  }),\n\n  keywordReparenting: new StringEnumSetting({\n    category: SettingCategories.Tagging,\n    description: `How should PhotoStructure handle hierarchical keywords?\\nIf this is set to \"move\", PhotoStructure will try to put hierarchical keywords into their \"correct\" root tag, like \"Who,\" \"Album,\" or \"Where.\"\\nIf this is set to \"retain,\" PhotoStructure will always place hierarchical keywords under the \"Keyword\" root tag.\\nIf this is set to \"copy,\" PhotoStructure will add both the \"correct\" root tag _and_ the \"Keyword\" tag. For example, \"Person|Doe|Jane\" will be tagged as \"Who|Doe|Jane\" as well as \"Keyword|Person|Doe|Jane\".\\nSee https://forum.photostructure.com/t/prefix-for-keywords-tag/499 for details.`,\n    defaultValue: KeywordReparentingStrategies.move,\n    strEnum: KeywordReparentingStrategies\n  }),\n\n  rootTagAlbumsAliases: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List hierarchical tag roots that PhotoStructure should interpret to be album names. This is matched case-insensitively.`,\n    defaultValue: () => [\"Album\", \"Albums\"]\n  }),\n\n  rootTagKeywordsAliases: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List hierarchical tag roots that PhotoStructure should interpret to be keywords. This is matched case-insensitively.`,\n    defaultValue: () => [\"Keyword\", \"Keywords\", \"Tag\", \"Tags\"]\n  }),\n\n  rootTagWhoAliases: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    aliases: [\"tagWhoSynonyms\"],\n    description: `When hierarchical tag values are found with any of these root names PhotoStructure will replace the root with \"Who\".\\nFor example, using default values, \"People/Jane Doe\" will be replaced with \"Who/Jane Doe\" (or \"Who/Doe/Jane\", if tagNamesFormatter=\"family/given\").\\nDigicam uses \"People\". This is matched case-insensitively.`,\n    defaultValue: () => [\"Person\", \"People\", \"Face\", \"Faces\"]\n  }),\n\n  keywordDelimiters: new OptionalStringSetting({\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure splits apart keywords, by default, when they are delimited by a comma or semicolon. For example, \"car, blue, tree\" will be interpreted as having the keywords \"car\", \"blue\", and \"tree\".\\nNote that some software doesn't encode lists of keywords properly, so we have to include the comma and semicolon by default to handle these cases: but this makes keywords that contain a comma be split incorrectly. If the files in your library don't have this encoding issue, you can replace this setting with just an empty string to disable splitting.\\nSee https://forum.photostructure.com/t/incorrect-handling-of-keywords-with-comma/992 for more discussion.\\nAfter changing this value, you must force-resync your library for the changes to take affect.`,\n    defaultValue: \",;\"\n  }),\n\n  keywordPathSeparators: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure interprets keywords as hierarchical if a path separator character is found in a keyword. This allows for tags like \"Family/Einstein/Albert\", \"Flora|Fruit|Orange\", \"Objects⊃Tools⊃Hammer\", or \"Fauna>Oceanic>Pelican\". By default, these separators are the forward-slash, vertical-bar, and greater-than characters. If you don't want to interpret keywords as hierarchical, change this value to an empty string (\"\"). After changing this value, you must force-resync your entire library for the changes to take affect.`,\n    defaultValue: \"/|>⊃\" // 20200307: thought about and discarded the idea of including \"›\" and \"»\". \"⸧\" isn't in iOS. 20201201: Also deleted \"≻\".\n  }),\n\n  tagFileType: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    aliases: [\"tagType\"],\n    description: `Should assets be tagged with their file type (like \"Type/Image/JPEG\")?`,\n    defaultValue: true\n  }),\n\n  tagJsonFaces: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Google Takeout provides .json sidecars that may contain the names of the people (or pets) found in the image. Should PhotoStructure import these tags under \"Who\"?.`,\n    defaultValue: true\n  }),\n\n  tagFaceRegions: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Picasa and other software supports embedding face names within \"RegionInfo.RegionList.Name\" metadata. If this setting is enabled, and \"RegionInfo.RegionList.Type\" is \"Face\", PhotoStructure will import these tags under \"Who\".`,\n    defaultValue: true\n  }),\n\n  whoTags: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    aliases: [\"tagWhoNames\"],\n    description: `This is a list of tags that will be examined for strings or string arrays. All values associated to these fields will be interpreted as names. Note that \"dotted notation\" is supported.`,\n    defaultValue: [\n      \"People\",\n      \"PersonInImage\",\n      \"PersonInImageWDetails.PersonName\",\n      \"PersonInImageName\",\n      \"RegionInfoMP.Regions.PersonDisplayName\"\n    ]\n  }),\n\n  tagNamesFormatter: new StringEnumSetting({\n    category: SettingCategories.Tagging,\n    description: `How should PhotoStructure format the \"Who\" tags for assets whose files are tagged with \"people\" strings?\\n- \"as-is\" will tag names directly to \"Who\", so, \"Who/Albert Einstein\".\\n- \"family/given\" will tag \"Who/Einstein/Albert\" (for regions that provide given names first).\\n- \"family/fullname\" will tag \"Who/Einstein/Albert Einstein\".\\nThe default is \"as-is,\" because discerning given and family names aren't reliably inferable.\\nSee https://en.wikipedia.org/wiki/Personal_name#Name_order .`,\n    defaultValue: NameTagFormats[\"as-is\"],\n    strEnum: NameTagFormats\n  }),\n\n  tagNamesDefaultFamily: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `If a name is missing a family name, if this value is not blank, it will be provided as a default. If this value is blank, the name tag will be Who/given. Note that this setting is only used if \"tagNamesFormatter\" is set to \"family/given\".`,\n    defaultValue: \"-\"\n  }),\n\n  tagNamesCapitalizedAsFamily: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Assume uppercased names are family names (this is common practice in geneology).`,\n    defaultValue: true\n  }),\n\n  tagNamesOrder: new StringEnumSetting({\n    category: SettingCategories.Tagging,\n    description: `How should PhotoStructure parse people's names? Note that this setting is only used if \"tagNamesFormatter\" is set to \"family/given\". See https://en.wikipedia.org/wiki/Personal_name#Name_order .`,\n    defaultValue: \"western\",\n    strEnum: NameTagOrders\n  }),\n\n  tagNamesSurnamePrefixes: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List all family name prefixes to be considered part of the family name. These are matched case-insensitively. This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: () => [\n      \"A\",\n      \"D’\",\n      \"Da\",\n      \"De la\",\n      \"De las\",\n      \"De\",\n      \"Del\",\n      \"Della\",\n      \"Den\",\n      \"Des\",\n      \"Di\",\n      \"Du\",\n      \"La\",\n      \"Las\",\n      \"Le\",\n      \"Li\",\n      \"Lo\",\n      \"Mc\",\n      \"Mac\",\n      \"op de\",\n      \"ten\",\n      \"ter\",\n      \"Van ‘t\",\n      \"van de\",\n      \"van der\",\n      \"van\",\n      \"von der\",\n      \"von\",\n      \"z\",\n      \"zu\"\n    ]\n  }),\n\n  tagNamesSurnames: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List all family names you expect in tags that are not single words that are found at the end of a tagged name. Hyphenated family names (like \"Ocasio-Cortez\") do not need to be listed here: only compound family names, and if your language doesn't separate family names with whitespace. In the latter case, either include all family names, or include all givenNames (whatever's easier for you). This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: () => []\n  }),\n\n  tagNamesGiven: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `List all given names you expect in tags that are not single words. Hyphenated given names (like \"Rose-Ann\") do not need to be listed here. If your language doesn't separate family names and given names with whitespace, either include all given names, or include all familyNames (whatever's easier for you). This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: () => []\n  }),\n\n  // TODO:\n\n  // tagNamesGivenIgnored: new StringArraySetting({\n  //   category: SettingCategories.Tagging,\n  //   description: `These given names will always be ignored. This setting is case-insensitive.`,\n  //   defaultValue: () => []\n  // }),\n\n  // tagNamesFamilyIgnoredPrefixes: new StringArraySetting({\n  //   category: SettingCategories.Tagging,\n  //   description: `These strings will be stripped from family names, so \"Michelle LaVaughn Obama (née Robinson)\" doesn't get interpreted as having a maiden name of \"née Robinson\". This setting is case-insensitive.`,\n  //   defaultValue: () => [\"née\", \"nee\"]\n  // }),\n\n  tagNamesFamilySurrounds: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `This setting contains pairs of characters. When name portions are surrounded by these pairs, the contents will be added as a family name. As an example, if you use the default \"()\", then \"Michelle LaVaughn (Robinson) Obama\" will be name tagged with both \"Who/Robinson/Michelle LaVaughn\" and \"Who/Obama/Michell LaVaugn\". This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: [\"()\"]\n  }),\n\n  tagNamesGivenSurrounds: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `This setting contains pairs of characters. When name portions are surrounded by these pairs, the contents will be added to the end of the given name with the surrounds retained. As an example, if you use the defaults of \"[]\" and double-quotes, then \"Joe \"Joey\" Smith\" will be name tagged with Who/Smith/Joe \"Joey\". This setting is used by the \"tagNamesFormatter\" if it is set to \"family/given\".`,\n    defaultValue: [\"[]\", '\"\"']\n  }),\n\n  tagNamesLexical: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Assume any name with a comma is in \"lexical name order\", which is always \"lastname, given name(s)\". If the given name is found to be \"sr.\", \"senior\", \"jr.\", or \"junior\", the name will be considered to be in western order ($givenNames $familyName, $modifier), and the $modifier will be added to the $givenNames. If this is set to false, commas are ignored.`,\n    defaultValue: true\n  }),\n\n  excludedRootTags: new StringArraySetting<string>({\n    category: SettingCategories.Tagging,\n    description: `Keywords starting with the given roots will be omitted from your PhotoStructure library. Changing this value requires a library rebuild.`,\n    defaultValue: () => [\"http:\", \"https:\", \"file:\"]\n  }),\n\n  tagDisplayNameFS: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `What should PhotoStructure call the \"root\" tag for browsing by filesystem paths? Note that this value is only for the UI, and will update the \"_displayName\" of the /fs/ tag: this value won't change the URL path from be \"/tag/fs/.../\". Reasonable options that have been suggested include \"Folder\", \"Directory\", \"Drive\", \"File\", \"Path\", \"Volume\", or \"Computer\".`,\n    defaultValue: \"Folder\"\n  }),\n\n  tagDisplayNameFSRoot: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `On POSIX systems, how should PhotoStructure reference the \"root\" directory (/)? \"/\" is a bit confusing, so \"root\" may be less confusing? Also see \"tagDisplayNameFSRootWithHostname\".`,\n    defaultValue: \"root\"\n  }),\n\n  tagDisplayNameFSRootWithHostname: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `On non-docker hosts (which typically don't have reliable hostnames), should the root directory tag have the hostname appended?`,\n    defaultValue: () => (isTest() ? true : !isDocker())\n  }),\n\n  tagDisplayNameFSLabels: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `Should PhotoStructure use volume labels, if available, as display names for filesystem tags? As an example, instead of showing \"Folder / D:\", you'd see \"Folder / Photo backup #3\" (or whatever the label D: has).`,\n    defaultValue: true\n  }),\n\n  tagAlbumFilenames: new StringArraySetting({\n    aliases: [\"tagAlbumJsonFilenames\"],\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure will look for files in the same directory with these names for album metadata. This can be JSON, XMP, MIE, or EXIF encoded, and is case-sensitive.\\nSet this to an empty array (\"[]\") to disable this feature.`,\n    defaultValue: [\"metadata.json\"] as string[]\n  }),\n\n  tagAlbumTitle: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `If you have enabled \"tagAlbumFromJson\", what's the name of the field encoded in the album file? Object hierarchies are separated with a \".\".`,\n    defaultValue: \"albumData.title\"\n  }),\n\n  tagAlbumTitleHierarchies: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `If true, album titles will be split as hierarchical keywords. If false, album titles will not be split, and all albums will be under the \"Albums\" root tag.`,\n    defaultValue: false\n  }),\n\n  tagAlbumDescription: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `If you have enabled \"tagAlbumFromJson\", what's the name of the field encoded in the album file? Object hierarchies are separated with a \".\".`,\n    defaultValue: \"albumData.description\"\n  }),\n\n  tagAlbumDate: new StringSetting({\n    category: SettingCategories.Tagging,\n    description: `If you have enabled \"tagAlbumFromJson\", what's the name of the field encoded in the album file? Object hierarchies are separated with a \".\".`,\n    defaultValue: \"albumData.date\"\n  }),\n\n  tagAlbumsExcluded: new StringArraySetting({\n    category: SettingCategories.Tagging,\n    description: `For \"metadata.json\" albums, some are automatically generated. If the title or description includes any given string, it will be ignored.`,\n    defaultValue: [\"Album for automatically uploaded content\"]\n  }),\n\n  omitAncestorTags: new BooleanSetting({\n    category: SettingCategories.Tagging,\n    description: `PhotoStructure's hierarchical tags assume implicit inheritance: that is, if you tag an asset with \"nature/sky\", \"nature\" is implicitly assumed.\\nIf this setting is true, PhotoStructure will omit tags that are already inferred from deeper descendant tags--that is, if an asset is tagged with \"nature/sky\" and \"nature\", and this setting is true, the \"nature\" tag will be omitted.`,\n    defaultValue: true\n  }),\n\n  // TODO:\n  // tagColor: new BooleanSetting({\n  //   name: \"tagColor\",\n  //   key: \"PS_TAG_COLOR\",\n  //   category: SettingCategories.Tagging,\n  //   description: `Should assets be tagged with their dominant color (like \"Color/Yellow\")?`,\n  //   defaultValue: true,\n  //   persisted: true\n  // }),\n\n  //\n  // Subscriptions\n  //\n\n  subscriptionTimeoutMs: new DurationSetting({\n    category: SettingCategories.Subscriptions,\n    description: `How long can PhotoStructure spend trying to gather system metadata and validating subscription licenses? This is fairly short, as the user is presumably waiting for PhotoStructure to spin up. If you have a slow system, you may want to increase this value.`,\n    defaultValue: () => \"7s\"\n  }),\n\n  pickPlanOnWelcome: new BooleanSetting({\n    category: SettingCategories.Subscriptions,\n    description: `If set to true, the welcome page flow will redirect to https://account.photostructure.com/plans to have you pick between a \"PLUS\" and \"LITE\" plan. If set to false, the welcome page will continue directly to the settings page with a \"LITE\" plan. You can still upgrade to a paid plan later from the main menu or the about page, even if this is false.`,\n    defaultValue: true\n  }),\n\n  coupon: new OptionalStringSetting({\n    category: SettingCategories.Subscriptions,\n    description: `Coupon to automatically apply during subscription setup. This value will be ignored if you've already gone through the subscription setup flow.\\nThe example value is a valid coupon code: thanks for reading!)\\nNote that you can apply a coupon after your free trial starts by visiting https://account.photostructure.com .`,\n    exampleValue: () => \"RTFM15\"\n  }),\n\n  autoRefreshLicense: new BooleanSetting({\n    category: SettingCategories.Subscriptions,\n    description: `PhotoStructure uses cryptographically signed licenses to locally store your current plan subscription status. These licenses are only valid for the current subscription period, and must be refreshed when your subscription renews or converts from a free trial to a paid subscription. To minimize the hassle of license renewals, PhotoStructure can automatically renew expired licenses in the background.\\nIf the current license has expired and this value is true, PhotoStructure will make one secure POST request to https://account.photostructure.com/ that contains several lossy one-way hashes of current system metadata. We hash all identifying metadata to only 15 characters to alleviate any privacy concerns. If your plan subscription is active, a new license will be added to your library.\\nSet this to false and set the \"reportErrors\" setting to false if you don't want PhotoStructure \"phoning home\" for any reason.\\nNote that if this is disabled, license renewals will require manual intervention: click \"Upgrade\" from the main menu, pick your plan, authenticate, and the license will automatically refresh.`,\n    defaultValue: true\n  }),\n\n  license: new OptionalStringSetting({\n    category: SettingCategories.Subscriptions,\n    sensitive: true,\n    description: `Subscription licenses are normally saved automatically into both your library and system configuration directories. This setting just provides users with an alternative way to provide a license, if it's more convenient. Any value provided to this setting will be considered in addition to existing license files when PhotoStructure is trying to find the \"best\" license available.`\n  })\n}\n\n// First set everyone's name:\nfor (const [k, v] of entries(Settings)) {\n  v._setName(k)\n}\n\n/**\n * Force the given path-separated paths to be the suggested values on the\n * welcome page.\n */\nexport const SuggestedDirsEnvKey = \"SUGGESTED_DIRS\"\n\n// Only exported for testing:\nexport function withDefaultPaths(paths: Maybe<string>): string {\n  const arr = (blank(paths) ? \"\" : paths).split(delimiter)\n  if (isDocker()) {\n    arr.unshift(\"/opt/photostructure/tools/bin\")\n  }\n  arr.push(...Settings.toolPaths.valueOrDefault)\n  return uniq(arr).filter(notBlank).join(delimiter)\n}\n\n// use getEnv(), not env().PATH, because Windows can use \"Path\"\nexport const pathWithDefaults = lazy(() => withDefaultPaths(getEnv(\"PATH\")))\n\nexport const allSettings = lazy(() => {\n  return sortBy(values(Settings), settingsSorter)\n})\n\nexport const persistedSettings = lazy(() => {\n  return allSettings().filter(ea => !ea.transient)\n})\n\nexport const transientSettings = lazy(() => {\n  return allSettings().filter(ea => ea.transient)\n})\n\nexport const persistedSystemSettings = lazy(() => {\n  return persistedSettings().filter(ea =>\n    SystemCategories.includes(ea.category)\n  )\n})\n\nexport const persistedLibrarySettings = lazy(() => {\n  return persistedSettings().filter(ea =>\n    LibraryCategories.includes(ea.category)\n  )\n})\n\nfunction settingsSorter(s: Setting<any>) {\n  return [\n    s.categoryType === \"system\" ? 0 : 1,\n    SettingCategories.indexOf(s.category) ?? SettingCategories.length + 1,\n    s.advanced,\n    s.name\n  ]\n}\n\nconst SettingsByNameOrKey = lazy(() => {\n  const settings = new CaseInsensitiveMap<Setting>()\n  for (const s of persistedSettings()) {\n    // Support both logLevel, log_level, and PS_LOG_LEVEL:\n    for (const ea of s.names) {\n      settings.set(ea, s)\n    }\n    for (const ea of s.keys) {\n      settings.set(ea, s)\n    }\n  }\n  return settings\n})\n\nexport function getSettingByNameOrKey(s: string) {\n  return SettingsByNameOrKey().get(toS(s).toLowerCase())\n}\n\nexport const ciSettings = lazy(\n  () => new CaseInsensitiveValued(Settings, (_, s) => [...s.names, ...s.keys])\n)\n\n// later(() => {\n//   if (isTest) {\n//   caseInsensitiveEnv.watchLater(() =>\n//     values(Settings).forEach(ea => ea.refreshEnvValue())\n//   )\n// })\n","import { lazy } from \"../../core/Lazy\"\nimport { isProd, isTest } from \"../NodeEnv\"\nimport { defaultCacheDir } from \"../dir/CacheDir\"\nimport { configDir } from \"../dir/ConfigDir\"\nimport { DefaultDockerLibraryDir } from \"../dir/DefaultDockerLibraryDir\"\nimport {\n  defaultLibraryDir,\n  defaultOriginalsDir\n} from \"../dir/DefaultLibraryDir\"\nimport { defaultLogDir_ } from \"../dir/LogDir\"\nimport { defaultPicturesDir } from \"../dir/PicturesDir\"\nimport { isEnvTrue } from \"../env/GetEnv\"\nimport { DefaultSharedStateDir } from \"../event/DefaultSharedStateDir\"\nimport { useFsWatch } from \"../fs/BaseFile\"\nimport { DefaultPaths, DefaultPosixPaths } from \"../fs/DefaultPaths\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { maxCpus } from \"../work/MaxCpus\"\nimport { Settings } from \"./Settings\"\n\n// This file was extracted to prevent Settings-related dependency loops.\n\n// Note that we're actually changing .opts.defaultValue here--it's the \"real\"\n// default.\n\nexport const setSettingsDefaults = lazy(() => {\n  Settings.configDir.opts.defaultValue = configDir\n\n  Settings.logDir.opts.defaultValue = defaultLogDir_\n\n  Settings.cacheDir.opts.defaultValue = defaultCacheDir\n\n  Settings.sharedStateDir.opts.defaultValue = () =>\n    DefaultSharedStateDir()?.nativePath\n\n  Settings.toolPaths.opts.defaultValue = () =>\n    (isEnvTrue(\"SETTINGS_IO_TEST\" as any)\n      ? DefaultPosixPaths\n      : DefaultPaths) as string[]\n\n  Settings.libraryDir.opts.exampleValue = () =>\n    isProd && isDocker()\n      ? DefaultDockerLibraryDir\n      : isTest\n      ? \"/home/test/Pictures\"\n      : defaultPicturesDir()\n\n  Settings.libraryDir.opts.defaultValue = defaultLibraryDir\n\n  Settings.originalsDir.opts.defaultValue = defaultOriginalsDir\n\n  Settings.scanPaths.opts.exampleValue = () => [defaultPicturesDir()]\n\n  Settings.powerShellProcs.opts.defaultValue = () =>\n    Math.max(2, Math.round(maxCpus() / 4))\n\n  // This breaks a deploop between Settings and BaseFile:\n  Settings.useFsWatch.watch(useFsWatch)\n})\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, isNotEmpty, mapNotEmpty, toNotEmpty } from \"../../fe/Array\"\nimport { sort } from \"../../fe/ArraySort\"\nimport { blank, firstNotBlank, toNotBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { eql } from \"../../fe/Eql\"\nimport { shortStack } from \"../../fe/Error\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { orList } from \"../../fe/FmtList\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map, mapOr } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { entries, values } from \"../../fe/Object\"\nimport { padding } from \"../../fe/Pad\"\nimport { trimRight } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { baseVersion } from \"../PhotoStructureVersion\"\nimport { capitalize, wrap } from \"../String\"\nimport { camel2snake } from \"../StringCase\"\nimport { version } from \"../Version\"\nimport {\n  libraryDataDirPosixFile,\n  setupLibraryDataDir_\n} from \"../dir/LibraryDirs\"\nimport { errorToS } from \"../error/Error\"\nimport { ee } from \"../event/EventEmitter\"\nimport { BaseFile } from \"../fs/BaseFile\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { handleDeprecatedSettings, handleMetaSettings } from \"./MetaSettings\"\nimport {\n  LibraryCategories,\n  Setting,\n  SystemCategories,\n  settingsToObj\n} from \"./Setting\"\nimport {\n  Settings,\n  ciSettings,\n  getSettingByNameOrKey,\n  persistedLibrarySettings,\n  persistedSettings,\n  persistedSystemSettings\n} from \"./Settings\"\nimport { setSettingsDefaults } from \"./SettingsDefaults\"\nimport { SettingsToml } from \"./SettingsToml\"\nimport { systemSettingsFile } from \"./SystemSettings\"\nimport { readTomlFile_ } from \"./Toml\"\nimport { valueToS } from \"./ValueToS\"\nimport { WrapComments } from \"./WrapComments\"\n\nconst logger = lazy(() => mkLogger(\"settings.SettingsIO\"))\n\nexport function librarySettingsFile(\n  libraryDir?: Maybe<string | PosixFile>\n): Maybe<PosixFile> {\n  return libraryDataDirPosixFile(libraryDir)?.join(SettingsToml)\n}\n\nexport const readSettings = lazy(async () => {\n  await readSystemSettings()\n  if (libraryHasSettings()) {\n    await readLibrarySettings()\n  }\n}, minuteMs)\n\n// Called by Service.setup:\nexport async function readSystemSettings(\n  settingsFile: Maybe<string | SimpleFile> = systemSettingsFile()\n) {\n  if (settingsFile == null) return\n  return _readSettings(BaseFile.for(settingsFile))\n}\n\nexport async function envOrSavedLibraryDir() {\n  return Settings.libraryDir.valueOrDefault ?? savedLibraryDir()\n}\n\nexport async function savedLibraryDir(): PromiseMaybe<string> {\n  try {\n    return toNotBlank(\n      (await readTomlFile_(systemSettingsFile()))?.[Settings.libraryDir.name]\n    )\n  } catch {\n    return\n  }\n}\n\nexport async function systemSettingsVersion(): PromiseMaybe<string> {\n  return readSettingsVersion(systemSettingsFile())\n}\n\nexport async function librarySettingsVersion(\n  libraryDir?: Maybe<string>\n): PromiseMaybe<string> {\n  return map(librarySettingsFile(libraryDir), ea => readSettingsVersion(ea))\n}\n\n// MUST BE CALLED AFTER SYSTEM SETTINGS HAVE BEEN READ\nexport async function maybeUpgradeSystemSettings() {\n  // write system settings if they are missing or outdated.\n  if (version !== (await systemSettingsVersion())) {\n    await writeSystemSettings_()\n  }\n}\n\nexport async function maybeUpgradeLibrarySettings() {\n  if (libraryHasSettings() && version !== (await librarySettingsVersion())) {\n    await writeLibrarySettings_()\n  }\n}\n\nexport const libraryHasSettings = lazy(() => _libraryHasSettings())\n\n// we don't want to unset this, as it is watched by HealthCheck--and .unset()\n// will set it to null, and then immediately set it to true as soon as someone\n// calls it again.\nlibraryHasSettings.unset = () => {\n  logger().error(\"libraryHasSettings.unset() is invalid\", shortStack())\n}\n\nfunction onSettingsChange() {\n  // we don't want to unset this, as it is watched by HealthCheck--and\n  // .unset() will set it to null, and then immediately set it to true\n  // again.\n  libraryHasSettings.refresh()\n}\n\nlater(() => {\n  ee().on(\"clearCache\", onSettingsChange)\n  ee().on(\"settingsChanged\", onSettingsChange)\n  Settings.libraryDir.watchLater(onSettingsChange)\n})\n\n// This needs to be sync for WebService and MenuItems:\nexport function _libraryHasSettings(libraryDir?: string): boolean {\n  const lsf = librarySettingsFile(libraryDir)\n  return logger().tap({\n    msg: \"_libraryHasSettings\",\n    result: lsf?.clear().existsSync() ?? false,\n    level: \"info\",\n    meta: {\n      libraryDir,\n      settings: Settings.libraryDir.valueOrDefault,\n      librarySettingsFile: lsf?.nativePath\n    }\n  })\n}\n\nconst VersionRE = /^# PhotoStructure v(?<version>\\d+\\.\\d+\\.\\d+(?:-\\S+)?)$/i\n\nasync function readSettingsVersion(\n  file: Maybe<string | SimpleFile>\n): PromiseMaybe<string> {\n  if (blank(file)) return\n  const match = await BaseFile.for(file).firstMatchingLine(VersionRE)\n  return match?.groups?.version\n}\n\nasync function writeToml_(file: PosixFile, settings: Setting<any>[]) {\n  if (file == null) {\n    logger().warn(\"writeToml(): null file, failed to write settings\", {\n      file,\n      settings\n    })\n    return\n  }\n  const wip = await file.clear().isNonEmpty()\n  const dest = wip ? file.wip() : file\n  await _writeToml_(dest, settings)\n  logger().info(\"writeToml(): wrote settings\", {\n    dest,\n    file,\n    nonDefaults: settingsToObj(settings),\n    wip\n  })\n\n  if (wip) {\n    const a = await readTomlFile_(dest)\n    const b = await readTomlFile_(file)\n    if (!eql(a, b)) {\n      logger().info(\"Archiving prior, different contents\", { dest, file })\n      await file.renameYMDHMS_({ subdir: \"old\" })\n      await dest.unwip_()\n    } else {\n      logger().info(\"Equivalent contents\", { dest, file, a, b })\n      await dest.unlink()\n    }\n  }\n}\n\n// This is lazy so that SettingIO.spec can force version to an expected value:\nexport const versionForSettings = lazy(() => version)\n\nasync function _writeToml_(\n  file: BaseFile,\n  settings: Setting<any>[]\n): Promise<void> {\n  // const priorValues: JsonMap = {}\n  // for (const ea of priors) {\n  //   const prior = await readTomlFile(ea)\n  //   logger().info(\"writeToml(): importing \" + ea, prior)\n  //   assignFields(priorValues, prior)\n  // }\n  // logger().info(\"writeToml(): final prior values:\", priorValues)\n\n  const lines: string[] = [padding(\"#\", 80)]\n  lines.push(\n    ...wrapComments(\n      \"\",\n      \"Howdy!\",\n      \"\",\n      `These are ${settings[0].categoryType} settings for PhotoStructure.`,\n      \"\",\n      \" - Please shut down PhotoStructure before editing this file.\",\n      \"\",\n      \" - PhotoStructure has TWO settings files! See\",\n      \"   https://photostructure.com/getting-started/advanced-settings/#omg-why-2\",\n      \"   to see why.\",\n      \"\",\n      ` - NOTE: lines starting with a \"#\" are commented out.`,\n      \"\",\n      ` - To override a setting, uncomment the line by removing the \"# \" from`,\n      `   the beginning of the line, and change the value.`,\n      \"\",\n      ` - All duration settings end with \"Duration\" or \"Ms\" (for milliseconds).`,\n      `   See https://photostructure.com/getting-started/advanced-settings#duration`,\n      `   for details.`,\n      \"\",\n      ` - See https://photostructure.com/settings/ for more documentation.`,\n\n      \"Thanks for using PhotoStructure! Visit https://forum.photostructure.com/ if you find any bugs or have any questions, ideas, or feedback. We'd love to hear from you.\",\n      \"\",\n      \"-- \", // old email signature!\n      \"\",\n      // DON'T EDIT THIS! WE USE IT TO CHECK THE VERSION! See `VersionRE` above\n      \"PhotoStructure v\" + versionForSettings()\n    )\n  )\n\n  lines.push(\"\", \"\")\n\n  let priorCat = \"\"\n  for (const setting of settings) {\n    const cat = `${capitalize(\n      setting.categoryType\n    )}.${setting.category.toLowerCase()}`\n\n    if (cat !== priorCat) {\n      priorCat = cat\n      lines.push(\n        \"\",\n        padding(\"#\", 78),\n        \"#\",\n        \"# Settings for \" + cat + \":\",\n        \"#\",\n        \"\",\n        \"\"\n      )\n    }\n    lines.push(...setting.toTomlLines())\n    lines.push(\"\", \"\")\n  }\n\n  await file.writeText_(\"\\n\" + lines.map(trimRight).join(\"\\n\") + \"\\n\\n\")\n  ee().emitDebounced(\"settingsChanged\")\n}\n\nexport async function writeSystemSettings_(\n  dest: Maybe<string | SimpleFile> = systemSettingsFile()\n): PromiseMaybe<PosixFile> {\n  const pf = PosixFile.forMaybe(dest)\n  if (pf != null) await writeToml_(pf, persistedSystemSettings())\n  return pf\n}\n\nexport function writeAllSettings_(dest: string | SimpleFile) {\n  return writeToml_(PosixFile.for(dest), persistedSettings())\n}\n\nexport function readLibrarySettings(libraryDir?: string) {\n  return _readSettings(librarySettingsFile(libraryDir))\n}\n\n/**\n * @throws if there are errors\n */\nexport async function writeLibrarySettings_(\n  libraryDir?: string\n): PromiseMaybe<PosixFile> {\n  await setupLibraryDataDir_(\n    firstNotBlank(libraryDir, Settings.libraryDir.value)!\n  )\n  const file = librarySettingsFile(libraryDir)\n  logger().info(\"writeLibrarySettings()\", { file })\n  if (file != null) {\n    await writeToml_(file, persistedLibrarySettings())\n    libraryHasSettings.refresh()\n  }\n  return file\n}\n\nexport async function _readSettings(\n  f: Maybe<BaseFile>\n): Promise<Setting<any>[]> {\n  if (f == null) return []\n  const log = logger().addContext(\".importFileSettings(\" + f?.nativePath + \")\")\n  try {\n    const result = await importFileSettings_(f)\n    if (isNotEmpty(result.warnings)) {\n      log.warn(\"Problems during import\", result.warnings)\n    }\n    return result.settings\n  } catch (err) {\n    log.error(\"Cannot read: \" + errorToS(err))\n    return []\n  }\n}\n\nexport async function importFileSettings_(\n  f: BaseFile\n): Promise<{ settings: Setting<any>[]; warnings?: string[] }> {\n  const log = logger().addContext(\".importFileSettings_(\" + f.nativePath + \")\")\n  const st = await f.stat()\n  if (st == null) {\n    return { settings: [], warnings: [\"Cannot read\"] }\n  }\n  if (st.size === 0) {\n    // empty file is OK?\n    return { settings: [], warnings: [\"Cannot read empty file\"] }\n  }\n  const tomlMap = await readTomlFile_(f)\n  if (tomlMap == null) {\n    return { settings: [], warnings: [\"No settings found\"] }\n  }\n\n  const warnings: string[] = []\n\n  const settings = compact(\n    entries(tomlMap).map(([key, value]) => {\n      const s = getSettingByNameOrKey(key)\n      if (s == null) {\n        warnings.push(\n          `Failed to import \"${key}\"${mapOr(\n            ciSettings().lookupNearest(key),\n            ea => `: did you mean \"${ea.key}\"?`,\n            \"\"\n          )}`\n        )\n      } else {\n        if (null == s.normalizeValue(value)) {\n          warnings.push(`Invalid value for \"${key}\": ${stringify(value)}`)\n        } else {\n          s.fileValue = value\n          return s\n        }\n      }\n      return undefined\n    })\n  )\n  log.info(\"loaded\", {\n    settings: settingsToObj(settings),\n    warnings: toNotEmpty(warnings)\n  })\n  handleMetaSettings(settings)\n  await handleDeprecatedSettings()\n  return { settings, warnings }\n}\n\nconst UnclearableSettings = lazy(\n  () =>\n    new Set(\n      [\n        Settings.httpPort,\n        Settings.license,\n        Settings.logStdout,\n        Settings.logLevel\n      ].map(ea => ea.key)\n    )\n)\n\nexport async function clearLibraryDirSetting() {\n  await readSystemSettings()\n  Settings.libraryDir.unset()\n  await writeSystemSettings_()\n}\n\n/**\n * Force all in-memory settings to default values.\n */\nexport function clearSettings() {\n  values(Settings)\n    // don't reset LOG, NODE_ENV, or random ports!\n    .filter(ea => !UnclearableSettings().has(ea.key))\n    .forEach(ea => ea.unset())\n  ee().emit(\"settingsChanged\")\n  // we're not emitting clearCache here--use nukeSettings() if you need that.\n  // (see PathToLibraryAsset for an example why)\n}\n\n/**\n * Force all in-memory Settings to default values, and delete both system and\n * library settings.\n *\n * Only useful for tests.\n */\nexport async function nukeSettings() {\n  await map(systemSettingsFile(), ea => BaseFile.for(ea))?.unlink(\"trace\")\n  await map(librarySettingsFile(), ea => ea.unlink(\"trace\"))\n  clearSettings()\n  ee().emit(\"clearCache\")\n  setSettingsDefaults.refresh()\n  return\n}\n\nfunction wrapComments(...lines: string[]): string[] {\n  return flatten(lines.map(ea => wrap(ea, WrapComments)))\n}\n\nexport async function writeEnv(\n  file: BaseFile,\n  settings: Setting<any>[]\n): Promise<void> {\n  const lines: string[] = []\n  lines.push(\n    ...wrapComments(\n      \"\",\n      `Welcome to PhotoStructure! These are the settings for version ${baseVersion()}.`,\n      \"\",\n      \"Please see https://photostructure.com/environment-variables for more information about using environment variables with PhotoStructure.\",\n      \"\",\n      `As of version 2.1, \".env\" files (like this one) can be imported by PhotoStructure, but requires extra configuration. See https://photostructure.com/faq/environment-variables/#PS_ENV_FILE for details.`\n    )\n  )\n  lines.push(\"\", \"\")\n  lines.push(\n    ...wrapComments(\n      \"\",\n      \"The following settings categories are stored in the system settings.toml:\",\n      \"\",\n      ...sort([...SystemCategories]).map(ea => \"* System.\" + ea),\n      \"\",\n      `The following settings categories are stored in the library settings.toml:`,\n      \"\",\n      ...sort([...LibraryCategories]).map(ea => \"* Library.\" + ea),\n      \"\",\n      \"Please visit https://forum.photostructure.com if you find anything that may be a bug or have any questions, ideas, or feedback. We'd love to hear from you!\"\n    )\n  )\n  lines.push(\"\", \"\")\n  lines.push(\n    ...wrapComments(\n      `-------------`,\n      `PS_CONFIG_DIR`,\n      `-------------`,\n      \"\",\n      `If the environment variable PS_CONFIG_DIR is set, PhotoStructure will use that value as your system configuration directory.`,\n      \"\",\n      `This is an advanced setting--we recommend using the default value, if possible.`,\n      \"\",\n      `If the PS_CONFIG_DIR environment variable is not set, the default is specific to your operating system:`,\n      \"\",\n      `- On Docker: \"/ps/config\" if that bind-mount exists, otherwise \"/ps/library/.photostructure/docker-config\".`,\n      \"\",\n      `- On Linux: firstNonBlank([$XDG_DATA_HOME, $XDG_CONFIG_HOME, \"$HOME/.config\"]) + \"/PhotoStructure\"`,\n      \"\",\n      `- On macOS: \"$HOME/Library/Application Support/PhotoStructure\"`,\n      \"\",\n      `- On Windows: \"$APPDATA/PhotoStructure\" ($APPDATA is normally set to $HOME/AppData/Roaming)`\n    )\n  )\n  lines.push(\"\", \"\")\n  lines.push(\n    ...wrapComments(\n      `-----------`,\n      `PS_ENV_FILE`,\n      `-----------`,\n      \"\",\n      \"If set, PhotoStructure will attempt to read the .env file specified by this environment variable.\",\n      \"\",\n      \"This must be a full pathname.\",\n      \"\",\n      \"Any value set by this file will override values in settings.toml files.\",\n      \"\",\n      \"See https://photostructure.com/faq/environment-variables/#alternative-coming-in-v21-support-for-env-files for details.\"\n    )\n  )\n  lines.push(\"\", \"\")\n\n  let priorCat = \"\"\n  settings.forEach(setting => {\n    const cat = `${capitalize(\n      setting.categoryType\n    )}.${setting.category.toLowerCase()}`\n\n    if (cat !== priorCat) {\n      priorCat = cat\n      lines.push(\n        \"\",\n        padding(\"#\", 78),\n        \"#\",\n        \"# Settings for \" + cat + \":\",\n        \"#\",\n        \"\"\n      )\n    }\n\n    const name = `${setting.key} or ${setting.name}`\n\n    const extra: any = { ...setting.addToJSON() }\n    mapNotEmpty(setting.altKeys, arr => (extra.aliases = orList(arr)))\n\n    const extraLines = entries(extra).map(\n      ([k, v]) =>\n        `${capitalize(camel2snake(k)).replace(/_+/g, \" \")}: ${valueToS(v)}`\n    )\n\n    if (isNotEmpty(extraLines)) extraLines.push(\"\")\n\n    lines.push(\n      ...wrapComments(\n        padding(\"-\", name.length),\n        name,\n        padding(\"-\", name.length),\n        \"\",\n        ...(setting.opts.deprecated === true\n          ? [\n              \"NOTE: this setting has been deprecated and will be removed in a future version of PhotoStructure.\",\n              \"\"\n            ]\n          : []),\n        setting.opts.description.replace(/\\n+/g, \"\\n\\n\"),\n        \"\",\n        ...(setting.transient\n          ? [\n              `This setting is transient and only set via environment variables.`,\n              \"\\n\"\n            ]\n          : []),\n        ...extraLines,\n        `${setting.key}=${stringify(\n          toS(setting.opts.toEnv(setting.fileValue ?? setting.defaultValue))\n        )}`\n      )\n    )\n    lines.push(\"\", \"\")\n  })\n\n  await file.writeText_(lines.map(ea => trimRight(ea)).join(\"\\n\"))\n}\n","export const SettingsToml = \"settings.toml\"\n","import { delimiter } from \"path\"\nimport {\n  compact,\n  compactBlankish,\n  isEmpty,\n  isNotEmpty,\n  uniq\n} from \"../../fe/Array\"\nimport { notBlankToS } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toA } from \"../../fe/toA\"\nimport {\n  BaseSettingOpts,\n  DefaultValued,\n  Setting,\n  SettingConverters\n} from \"./Setting\"\n\nexport function _join(arr: Maybe<string[]>): Maybe<string> {\n  return arr == null ? undefined : stringify(arr)\n}\n\nfunction _split(s: Maybe<string>): Maybe<string[]> {\n  const str = notBlankToS(s)\n  if (str == null) return\n  if (str.startsWith(\"[\") && str.endsWith(\"]\")) {\n    try {\n      return compact(toA(JSON.parse(str)).map(notBlankToS))\n    } catch {\n      //\n    }\n  }\n  // broken pipe kept for backward compatibility:\n  for (const ea of [\"¦\", delimiter]) {\n    if (str.includes(ea)) {\n      return compactBlankish(str.split(ea))\n    }\n  }\n  return [str]\n}\n\nexport function splitStringArray(s: Maybe<string>): Maybe<string[]> {\n  return map(_split(s), compactBlankish)\n}\n\nexport class StringArraySetting<T extends string = string> extends Setting<\n  T[]\n> {\n  constructor(\n    opts: BaseSettingOpts<T[]> &\n      Partial<DefaultValued<T[]>> &\n      Partial<SettingConverters<T[]>>\n  ) {\n    super({\n      defaultValue: [],\n      fromEnv: splitStringArray as any,\n      toEnv: _join,\n      ...opts\n    })\n  }\n\n  protected toValidValue(s: Maybe<string>): Maybe<T> {\n    return notBlankToS(s) as T\n  }\n\n  protected toValidValues(arr: Maybe<string[]>): Maybe<T[]> {\n    return arr == null ? undefined : uniq(arr.map(ea => this.toValidValue(ea)))\n  }\n\n  push(...values: string[]) {\n    if (isEmpty(values)) return\n    this.value = this.toValidValues([...toA(this.value), ...toA(values)])\n  }\n\n  has(value: string) {\n    return toA(this.values).includes(value as any)\n  }\n\n  /**\n   * valueOrDefault for arrays\n   *\n   * @todo replace callers with valueOrDefault? This method as it stands isn't\n   * safe, as it could be modified by a caller.\n   */\n  get values(): T[] {\n    return this.value ?? this.defaultValue\n  }\n\n  set values(arr: Maybe<string[]>) {\n    this.userValue = this.toValidValues(arr)\n  }\n\n  /**\n   * @return if `this.values` is an empty array. Note that this.values delegates to this.defaultValue if this.value is nullish.\n   */\n  isEmpty() {\n    return isEmpty(this.values)\n  }\n\n  isNotEmpty() {\n    return isNotEmpty(this.values)\n  }\n}\n","import { StrEnum } from \"../../fe/StrEnum\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class StringEnumSetting<T extends string> extends Setting<T> {\n  readonly strEnum: StrEnum<T>\n  constructor(opts: SettingOpts<T> & { strEnum: StrEnum<T> }) {\n    super({\n      toEnv: s => opts.strEnum.getCI(s),\n      fromEnv: s => opts.strEnum.getCI(s),\n      ...opts\n    })\n    this.strEnum = opts.strEnum\n    // NOTE: do not compactBlanks! A blank may be a valid value!\n    const dv = this.defaultValue\n    // Allow defaultValue to be undefined:\n    if (!this.strEnum.has(dv)) {\n      throw new Error(\n        `${this.strEnum.values}, doesn't include defaultValue, ${opts.defaultValue}`\n      )\n    }\n  }\n  addToJSON() {\n    return { \"valid values\": this.strEnum.values }\n  }\n}\n","import { compact, uniq } from \"../../fe/Array\"\nimport { stringify } from \"../../fe/JSON\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { StrEnum } from \"../../fe/StrEnum\"\nimport { BaseSettingOpts } from \"./Setting\"\nimport { StringArraySetting, splitStringArray } from \"./StringArraySetting\"\n\nfunction parseStringEnum<T extends string>(\n  str: Maybe<string>,\n  strEnum: StrEnum<T>\n): Maybe<T[]> {\n  return compact(splitStringArray(str)?.map(ea => strEnum.getCI(ea)))\n}\n\nexport class StringEnumsSetting<T extends string> extends StringArraySetting {\n  readonly strEnum: StrEnum<T>\n  constructor(\n    opts: BaseSettingOpts<string[]> & {\n      defaultValue?: T[]\n      strEnum: StrEnum<T>\n    }\n  ) {\n    super({\n      toEnv: arr => map(arr, ea => stringify(uniq(ea))),\n      fromEnv: s => parseStringEnum(s, opts.strEnum),\n      defaultValue: opts.defaultValue ?? opts.strEnum.values,\n      ...opts\n    })\n    this.strEnum = opts.strEnum\n  }\n\n  protected override toValidValue(s: string): Maybe<T> {\n    return this.strEnum.getCI(s)\n  }\n\n  override addToJSON() {\n    return { \"valid values\": this.strEnum.values }\n  }\n}\n","import { notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { Setting, SettingOpts } from \"./Setting\"\n\nexport class StringSetting extends Setting<string> {\n  constructor(opts: SettingOpts<string>) {\n    super({\n      toEnv: trim,\n      fromEnv: trim,\n      ...opts\n    })\n  }\n\n  hasValue() {\n    return notBlank(this.value)\n  }\n}\nfunction trim(s: Maybe<string>) {\n  return s == null ? undefined : s.trim()\n}\n","import { join } from \"path\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { configDir } from \"../dir/ConfigDir\"\nimport { SettingsToml } from \"./SettingsToml\"\n\nexport function systemSettingsFile(): Maybe<string> {\n  return map(configDir(), ea => join(ea, SettingsToml))\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const TagInferenceSettingValues = strEnum(\"never\", \"always\", \"auto\")\nexport type TagInferenceSettingValue = StrEnumKeys<\n  typeof TagInferenceSettingValues\n>\n","import { JsonMap, parse } from \"@iarna/toml\"\nimport { readFile, readFileSync, writeFile } from \"fs-extra\"\nimport { blank, mapNotBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { Obj } from \"../../fe/Object\"\nimport { debom } from \"../Buffer\"\nimport { mkLogger } from \"../Logger\"\nimport { dumbquote } from \"../String\"\nimport { joinLines } from \"../fs/CRLF\"\nimport { SimpleFileOrString, toNativePath_ } from \"../fs/SimpleFile\"\nimport { isFileSync } from \"../fs/StatSync\"\nimport { stringifyToml } from \"./TomlStringify\"\n\nfunction parseToml(s: Maybe<string>) {\n  return blank(s) ? undefined : parse(dumbquote(s))\n}\n\nfunction parseTomlBuffer(buf: Buffer) {\n  return parseToml(debom(buf))\n}\n\nexport function readTomlFileSync(\n  file: Maybe<SimpleFileOrString>\n): Maybe<JsonMap> {\n  const nativePath = mapNotBlank(file, toNativePath_)\n  if (nativePath == null) return\n  try {\n    return isFileSync(nativePath)\n      ? parseTomlBuffer(readFileSync(nativePath))\n      : undefined\n  } catch (error) {\n    mkLogger(\"settings.Toml\").warn(\"readTomlFileSync() failed\", {\n      nativePath,\n      error\n    })\n    return\n  }\n}\n\nexport async function readTomlFile_(\n  file: Maybe<SimpleFileOrString>\n): PromiseMaybe<JsonMap> {\n  return mapNotBlank(file, async ea =>\n    parseTomlBuffer(await readFile(toNativePath_(ea)))\n  )\n}\n\nexport function writeTomlFile_(file: SimpleFileOrString, data: Obj) {\n  return writeFile(toNativePath_(file), joinLines(...stringifyToml(data)))\n}\n","import { blank } from \"../../fe/Blank\"\nimport { stringify } from \"../../fe/JSON\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { Obj, entries } from \"../../fe/Object\"\nimport { wrap } from \"../../fe/String\"\nimport { toA } from \"../../fe/toA\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { WrapComments } from \"./WrapComments\"\n\nexport function stringifyToml(obj: Obj) {\n  return splitLines(...entries(obj).map(([k, v]) => kvToToml(k, v)))\n}\n\nfunction kvToToml(k: string, v: any) {\n  // We add 2 spaces here to make long array values wrap:\n  return k + \" = \" + stringify(v, undefined, 2)\n}\n\nexport function wrapTomlToLines(args: {\n  lines: string[]\n  wrap?: typeof WrapComments\n  key: Maybe<string>\n  value: any\n  prepend?: string[]\n}) {\n  if (blank(args.key) || args.value == null) return args.lines\n  const lines = [...toA(args.prepend), kvToToml(args.key, args.value)]\n  if (args.lines.length > 0) lines.unshift(\"\")\n  args.lines.push(...wrap(lines, args.wrap))\n  return args.lines\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const UpgradeChannels = strEnum(\"prealpha\", \"alpha\", \"beta\", \"stable\")\nexport type UpgradeChannel = StrEnumKeys<typeof UpgradeChannels>\n","import { orList } from \"../../fe/FmtList\"\nimport { stringify } from \"../../fe/JSON\"\n\nexport function valueToS(v: any): string {\n  return 1 < 2\n    ? stringify(v, undefined, 2) //  just use stringify, it's valid TOML.\n    : Array.isArray(v)\n    ? orList(v.map(ea => stringify(ea)))\n    : stringify(v)\n}\n","export const WrapComments = { maxLineLen: 78, prefix: \"# \" }\n","import { stripCopySuffixFromName, stripDSC } from \"../fs/FuzzyNames\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { isString, trimLeftPadding } from \"../String\"\n\n/**\n * Pull out the basename, remove prefixes like \"IMG_\", \"VID_\", and \"MOV_\",\n * strip any count suffixes, then downcase.\n */\nexport function bname(f: SimpleFile | string, stripCounts = true): string {\n  let name = isString(f) ? f : f.name\n  if (stripCounts) {\n    name = stripCopySuffixFromName(name)\n  }\n  name = trimLeftPadding(stripDSC(name))\n  return name.toLowerCase().normalize()\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const DateTagFormats = strEnum(\"y\", \"ym\", \"ymd\", \"\")\nexport type DateTagFormat = StrEnumKeys<typeof DateTagFormats>\n","import { Tags } from \"exiftool-vendored\"\n\ntype TagKeys = keyof Tags | \"creationTime\" | \"photoTakenTime\" | \"HistoryWhen\"\n\nexport const IgnoredCapturedAtTags = [\n  \"creationTime\", // Google Photos upload time\n  \"HistoryWhen\", // is when history records happen, NOT when the file was captured!\n  \"MediaModifyDate\", // is the last media edit time\n  \"MetadataDate\", // is the last time the _metadata was edited_. See https://forum.photostructure.com/t/combining-images/524/8 for details\n  \"SubSecTime\", // is fractional seconds (not the full date and time) for ModifyDate\n  \"TrackModifyDate\"\n] as const satisfies readonly TagKeys[]\n\n/**\n * These tags should only be used if \"standard\" captured-at tags have no valid\n * values. The first valid ExifDateTime value will be used.\n */\nexport const ProblematicCapturedAtTags = [\n  // (called DateTimeDigitized by the EXIF spec)\n  // https://forum.photostructure.com/t/incorrect-date-assigned-to-photo/419\n  // and\n  // https://forum.photostructure.com/t/photostructure-ignored-the-date-metadata-of-some-photos-marked-them-as-taken-in-2002/340\n  // Note that this tag may have an incorrect zone offset (it may incorrectly\n  // be UTC or local system time), so it's \"problematic\".\n  \"SubSecCreateDate\",\n  \"SubSecMediaCreateDate\",\n  \"SubSecModifyDate\",\n\n  \"CreateDate\",\n  \"MediaCreateDate\", // < may have incorrect timezone like CreateDate\n  \"ModifyDate\", // is called DateTime by the EXIF spec, and may be the last edit time, or the actual captured-at (see the QuickTake DC50 example)\n  \"DateTime\",\n  \"DateTimeCreated\", // composite tag, sometimes has wrong timezone.\n\n  \"photoTakenTime\", // < Google Takeout (not really reliable, though)\n\n  \"TrackCreateDate\", // < may not have correct timezone\n\n  \"CreationTime\" // < set by some screenshot software, and _MAY INCLUDE DATETIME!_ . May be rendered as \"Wed 16 Jun 2021 03:34:46 PM PDT\"\n] as const satisfies readonly Exclude<\n  TagKeys,\n  (typeof IgnoredCapturedAtTags)[number] // < prevents duplicate keys\n>[]\n\nexport const DefaultCapturedAtTagsConst = [\n  // By the specification, DateTimeOriginal should be the time of the\n  // shutter actuation, and CreateDate should be the time that the file\n  // was written to the memory card (but not all mfrs follow the spec)\n  // http://u88.n24.queensu.ca/exiftool/forum/index.php?topic=2568.0\n\n  // https://exiftool.org/TagNames/EXIF.html\n\n  \"CreationDate\", // only found on iPhone movies, but they include timezone offsets, which we really want. See https://exiftool.org/forum/index.php?topic=12837.msg69410#msg69410\n\n  \"DateTimeOriginal\", // date/time when original image was taken. Quicktime:DateTimeOriginal will also include the timezone offset.\n  \"SubSecDateTimeOriginal\", // (fractional seconds for DateTimeOriginal)\n\n  \"DateTimeDigitized\",\n\n  \"OriginalCreateDateTime\",\n\n  \"DigitalCreationDateTime\" // composite tag\n] as const satisfies readonly Exclude<\n  TagKeys,\n  | (typeof IgnoredCapturedAtTags)[number] // < prevents duplicate keys\n  | (typeof ProblematicCapturedAtTags)[number] // < prevents duplicate keys\n>[]\n","import { ExifTags } from \"./ExifTags\"\n\nexport const DefaultIncludedPreviewTags: (keyof ExifTags)[] = [\n  \"AttributionName\",\n  \"AttributionURL\",\n  \"capturedAt\",\n  \"Copyright\",\n  \"exposureSettings\",\n  \"GPSLatitude\",\n  \"GPSLongitude\",\n  \"License\",\n  \"Make\",\n  \"Model\",\n  // NO: \"Orientation\", because we always raster correctly-rotated images\n  \"Permits\",\n  \"Prohibits\",\n  \"Rating\",\n  \"Requires\",\n  // NO: \"Rotation\", because we always raster correctly-rotated images.\n  \"Source\"\n]\n\n// OriginalDirectory and OriginalFilename are obscure GettyImagesGIFT XMP tags\n","// https://en.wikipedia.org/wiki/List_of_photographic_equipment_makers#Manufacturers_of_cameras_or_lenses_and_filters\n// Don't use this directly! Use Settings.lensMakes!\nexport const DefaultLensMakes = [\n  \"7artisans\",\n  \"Bower\",\n  \"Canon\",\n  \"Carl Zeiss\",\n  \"Cosina\",\n  \"Fuji\",\n  \"Fujifilm\",\n  \"Goerz\",\n  \"Hasselblad\",\n  \"Hirox\",\n  \"Hoya\",\n  \"Kodak\",\n  \"Konica\",\n  \"Leica\",\n  \"Leidolf\",\n  \"Lensbaby\",\n  \"Lumix\",\n  \"Meike\",\n  \"Meopta\",\n  \"Minolta\",\n  \"Neewer\",\n  \"Nikon\",\n  \"Olympus\",\n  \"Opteka\",\n  \"Panasonic\",\n  \"Pentacon\",\n  \"Pentax\",\n  \"Ricoh\",\n  \"Rodenstock\",\n  \"Rokinon\",\n  \"Ross\",\n  \"Samsung\",\n  \"Samyang\",\n  \"Seiko\",\n  \"Sigma\",\n  \"Silor\",\n  \"Soligor\",\n  \"Sony\",\n  \"Sunpak\",\n  \"Tamron\",\n  \"Tiffen\",\n  \"Tokina\",\n  \"Topcon\",\n  \"Venus\",\n  \"Voigtländer\",\n  \"Wray\",\n  \"Yongnuo\",\n  \"Zeiss\",\n  \"Zhong Yi\",\n  \"Zuiko\"\n]\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const ExtTypes = strEnum(\n  \"Sharp\",\n  \"HEIF\",\n  \"RawImage\",\n  \"Video\",\n  \"Sidecar\",\n  \"AssetFile\",\n  \"Exif\",\n  \"SupportedByCurrentBrowser\",\n  \"SupportedByOldBrowser\"\n)\n\nexport type ExtType = StrEnumKeys<typeof ExtTypes>\n","import * as _sharp from \"sharp\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { entries, values } from \"../../fe/Object\"\nimport { splitLast, stripPrefix } from \"../../fe/String\"\nimport { toS } from \"../../fe/toS\"\nimport { SidecarFiletypes, normalizeExt } from \"../fs/FileExt\"\nimport { JpegExts } from \"../fs/JpegExts\"\nimport { MaybeFileish } from \"../fs/MaybeFileish\"\nimport { ExtType, ExtTypes } from \"./ExtType\"\n\nexport const BrowserFiletypes = {\n  // \"audio/mpeg\": [\"mp2\", \"mp3\", \"mpga\"],\n\n  \"application/javascript\": [\"js\"],\n  \"application/toml\": [\"toml\"],\n  \"application/manifest+json\": [\"webmanifest\"],\n  \"application/xml\": [\"xml\"],\n\n  \"image/vnd.microsoft.icon\": [\"ico\"],\n\n  \"font/ttf\": [\"ttf\"],\n  \"font/woff2\": [\"woff2\"],\n\n  \"text/css\": [\"css\"],\n  \"text/html\": [\"html\", \"htm\"],\n  \"text/plain\": [\"txt\"],\n  \"text/x-scss\": [\"scss\"]\n}\n\nfunction sharpImageFiletypes() {\n  // We're going to use sharp.format to see if it's been compiled to support\n  // the following image formats:\n  const unfiltered = {\n    \"image/jpeg\": JpegExts,\n    \"image/avif\": [\"avif\"],\n    \"image/gif\": [\"gif\"],\n    \"image/jp2\": [\"jp2\", \"jp2k\"], // JPEG 2000\n\n    // HEY HEY WOAH WHERE IS HEIF/HEIC?\n\n    // Calm down, future me. Only certain HEIC encoding formats are handled\n    // gracefully by sharp/libvips, so we still need to use external\n    // conversion tools. SADNESS.\n\n    // \"image/x-jng\": [\"jng\"],\n    // \"image/jpm\": [\"jpm\"],\n    // \"image/jpx\": [\"jpf\", \"jpx\"],\n    // \"image/jxr\": [\"jxr\"],\n\n    \"image/jxl\": [\"jxl\"], // Google Chrome killed JPEG XL support in late 2022\n\n    \"image/png\": [\"png\"],\n    \"image/svg+xml\": [\"svg\"],\n    \"image/tiff\": [\"tif\", \"tiff\"],\n\n    // \"image/vnd.ms-photo\": [\"wdp\"],\n    \"image/webp\": [\"webp\"]\n\n    // \"image/x-portable-bitmap\": [\"pbm\"],\n    // \"image/x-portable-graymap\": [\"pgm\"],\n    // \"image/x-portable-pixmap\": [\"ppm\"]\n  } as const\n  const f = _sharp.format\n  for (const [mimetype, exts] of entries(unfiltered)) {\n    const s =\n      (f as any)[stripPrefix(mimetype, \"image/\")] ??\n      values(f).find(\n        ea =>\n          ea.input.file &&\n          exts.some(ext => ea.input.fileSuffix?.includes(\".\" + ext))\n      )\n    if (s?.input?.file !== true) {\n      delete (unfiltered as any)[mimetype]\n    }\n  }\n  return unfiltered\n}\n\nexport const SharpImageFiletypes = sharpImageFiletypes()\n\n/**\n * @see https://en.wikipedia.org/wiki/High_Efficiency_Image_File_Format\n */\nexport const HeifFiletypes = {\n  \"image/avif\": [\"avif\"],\n  \"image/heic\": [\"heic\"],\n  \"image/heif\": [\"heif\"]\n}\n\nexport const RawImageFiletypes = {\n  // TODO:\n\n  // \"arq\",\n  // \"gpr\", gopro raw\n  // \"mef\", mamiya raw\n\n  \"image/x-adobe-dng\": [\"dng\"],\n\n  \"image/x-canon-cr2\": [\"cr2\"],\n  \"image/x-canon-cr3\": [\"cr3\"],\n  \"image/x-canon-crw\": [\"crw\"],\n\n  \"image/x-epson-erf\": [\"erf\"],\n\n  \"image/x-fuji-raf\": [\"raf\"],\n  \"image/x-fujifilm-raf\": [\"raf\"],\n\n  \"image/x-kodak-dcr\": [\"dcr\"],\n  \"image/x-kodak-k25\": [\"k25\"],\n  \"image/x-kodak-kdc\": [\"kdc\"],\n\n  \"image/x-hasselblad-3fr\": [\"3fr\"],\n\n  \"image/x-mamiya-mef\": [\"mef\"],\n\n  \"image/x-minolta-mrw\": [\"mrw\"],\n\n  \"image/x-nikon-nef\": [\"nef\"],\n  \"image/x-nikon-nrw\": [\"nrw\"],\n\n  \"image/x-olympus-orf\": [\"orf\"],\n\n  \"image/x-panasonic-raw\": [\"rwl\"],\n  \"image/x-panasonic-rw2\": [\"rw2\"],\n\n  \"image/x-pentax-pef\": [\"pef\", \"dng\"],\n\n  // used by LEICA and Panasonic:\n  \"image/x-raw\": [\"raw\"],\n\n  \"image/x-samsung-srw\": [\"srw\"],\n\n  // \"image/x-sigma-x3f\": [\"x3f\"], // not supported by libraw as of 2022-01-16\n\n  \"image/x-sony-arw\": [\"arw\"],\n  \"image/x-sony-sr2\": [\"sr2\"],\n  \"image/x-sony-srf\": [\"srf\"]\n} as const\n\nexport const VideoFiletypes = {\n  \"video/3gpp\": [\"3gp\", \"3gpp\"],\n  \"video/3gpp2\": [\"3g2\"],\n  \"video/mp2t\": [\"mts\", \"ts\"],\n  \"video/mp4\": [\"mp4\"],\n  \"video/mpeg\": [\"m2v\", \"mpeg\", \"mpg\"],\n  \"video/quicktime\": [\"mov\", \"qt\"],\n  \"video/vnd.avi\": [\"avi\"],\n  \"video/webm\": [\"webm\"],\n  \"video/x-m4v\": [\"m4v\"],\n  \"video/x-mng\": [\"mng\"],\n  \"video/x-ms-asf\": [\"asf\"],\n  \"video/x-ms-wmv\": [\"wmv\"]\n} as const\n\nexport const AllFiletypes = {\n  ...BrowserFiletypes,\n  ...SidecarFiletypes,\n  ...SharpImageFiletypes,\n  ...RawImageFiletypes,\n  ...VideoFiletypes\n} as const\n\nexport const AssetFiletypes = {\n  ...SharpImageFiletypes,\n  ...HeifFiletypes,\n  ...RawImageFiletypes,\n  ...VideoFiletypes\n} as const\n\nexport const ExifFiletypes = {\n  ...AssetFiletypes,\n  ...SidecarFiletypes\n} as const\n\nconst Ext2mime = lazy(() => {\n  const result = {} as Record<string, string>\n  for (const [mime, exts] of Object.entries(AllFiletypes)) {\n    for (const ext of exts) {\n      result[ext] = mime\n    }\n  }\n  return result\n})\n\nconst ExtAliases = lazy(() => {\n  const result = {} as Record<string, string[]>\n  for (const exts of Object.values(AllFiletypes)) {\n    for (const ext of exts) {\n      result[ext] = exts as string[]\n    }\n  }\n  return result\n})\n\nexport const AllFileExts = lazy(() =>\n  uniq(flatten(Object.values(AllFiletypes as any)))\n)\n\nexport const AssetFileExts = lazy(() =>\n  uniq(flatten(Object.values(AssetFiletypes as any)))\n)\n\nexport function extMimetype(ext: MaybeFileish): Maybe<string> {\n  return Ext2mime()[normalizeExt(ext) ?? \"\"]\n}\n\nexport function mimetypeExt(mime: Maybe<string>): Maybe<string> {\n  return (AllFiletypes as any)[toS(mime).trim().toLowerCase()]?.[0]\n}\n\nexport function getExtAliases(ext: MaybeFileish): Maybe<string[]> {\n  return ExtAliases()[normalizeExt(ext) ?? \"\"]\n}\n\nexport const OldBrowserMimetypes = [\n  \"image/gif\",\n  \"image/jpeg\",\n  \"image/png\"\n] as const\n\nexport const CurrentBrowserMimetypes = [\n  ...OldBrowserMimetypes,\n  \"image/svg+xml\",\n  \"image/webp\",\n  \"video/mp4\",\n  \"video/webm\"\n] as const\n\nconst ext2types = lazy(() => {\n  const m = new MultiMap<string, ExtType>()\n\n  for (const { exts, type } of [\n    { exts: SharpImageFiletypes, type: ExtTypes.Sharp },\n    { exts: HeifFiletypes, type: ExtTypes.HEIF },\n    { exts: RawImageFiletypes, type: ExtTypes.RawImage },\n    { exts: VideoFiletypes, type: ExtTypes.Video },\n    { exts: SidecarFiletypes, type: ExtTypes.Sidecar },\n    { exts: AssetFiletypes, type: ExtTypes.AssetFile },\n    { exts: ExifFiletypes, type: ExtTypes.Exif }\n  ]) {\n    for (const ext of flatten(Object.values(exts))) {\n      m.add(ext as any, type)\n    }\n  }\n\n  for (const mimetype of OldBrowserMimetypes) {\n    for (const ext of AllFiletypes[mimetype] ?? []) {\n      m.add(ext, ExtTypes.SupportedByOldBrowser)\n    }\n  }\n\n  for (const mimetype of CurrentBrowserMimetypes) {\n    for (const ext of AllFiletypes[mimetype] ?? []) {\n      m.add(ext, ExtTypes.SupportedByCurrentBrowser)\n    }\n  }\n\n  return m\n})\n\nexport function equivalentExts(\n  pathlike1: MaybeFileish,\n  pathlike2: MaybeFileish\n) {\n  const ext1 = normalizeExt(pathlike1)\n  const ext2 = normalizeExt(pathlike2)\n  if (ext1 == null || ext2 == null) return false\n  if (ext1 === ext2) return true\n  return getExtAliases(ext1)?.includes(ext2) ?? false\n}\n\nexport function extTypes(ext: MaybeFileish): Maybe<ExtType[]> {\n  const e = normalizeExt(ext)\n  return e == null ? undefined : ext2types().get(e)\n}\n\nexport function isExtType(ext: MaybeFileish, extType: ExtType): boolean {\n  return extTypes(ext)?.includes(extType) ?? false\n}\n\nexport function mimeRootType(ext: MaybeFileish): Maybe<\"image\" | \"video\"> {\n  const arr = extTypes(ext)\n  return arr == null\n    ? undefined\n    : arr.includes(ExtTypes.Sharp) || arr.includes(ExtTypes.RawImage)\n    ? \"image\"\n    : arr.includes(ExtTypes.Video)\n    ? \"video\"\n    : undefined\n}\n\nexport function isRawImageExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.RawImage)\n}\nexport function isSharpExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.Sharp)\n}\nexport function isVideoExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.Video)\n}\nexport function isAssetFileExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.AssetFile)\n}\nexport function isExifExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.Exif)\n}\nexport function isSupportedByCurrentBrowserExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.SupportedByCurrentBrowser)\n}\nexport function isSupportedByOldBrowserExt(ext: MaybeFileish): boolean {\n  return isExtType(ext, ExtTypes.SupportedByOldBrowser)\n}\n\nexport function stripExt(\n  base: string,\n  extType: ExtType = ExtTypes.AssetFile\n): string {\n  const ext = splitLast(base, \".\")\n  return isExtType(ext, extType) ? base.slice(0, -(ext.length + 1)) : base\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const KeywordReparentingStrategies = strEnum(\"move\", \"copy\", \"retain\")\nexport type KeywordReparentingStrategy = StrEnumKeys<\n  typeof KeywordReparentingStrategies\n>\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const NameTagFormats = strEnum(\n  \"as-is\",\n  \"family/given\",\n  \"family/fullname\"\n)\nexport type NameTagFormat = StrEnumKeys<typeof NameTagFormats>\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const NameTagOrders = strEnum(\"western\", \"eastern\")\nexport type NameTagOrder = StrEnumKeys<typeof NameTagOrders>\n","import { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { map } from \"../../fe/Maybe\"\nimport {\n  commonPrefixIgnoreCase,\n  ensurePrefix,\n  equalsIgnoreCase\n} from \"../String\"\nimport { sortByAsync } from \"../async/Promise\"\nimport { inHiddenPhotoStructureDir } from \"../dir/InHiddenPhotoStructureDir\"\nimport { BaseFile } from \"../fs/BaseFile\"\nimport {\n  extAliases,\n  isExt,\n  isSidecarExt,\n  mkExtsRegExp,\n  normalizeExt\n} from \"../fs/FileExt\"\nimport { stripCopySuffixFromName } from \"../fs/FuzzyNames\"\nimport { SimpleFile } from \"../fs/SimpleFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { stripExt } from \"./FileTypes\"\n\nfunction strEql(a: string, b: string, { ignoreCase }: { ignoreCase: boolean }) {\n  return ignoreCase\n    ? equalsIgnoreCase(a, b, { normalize: true /* we did it already */ })\n    : a === b\n}\n\nexport function isSidecarOf(src: SimpleFile, sidecar: SimpleFile) {\n  // Must have a sidecar extension and not be hidden:\n  if (!isSidecarExt(sidecar.ext) || sidecar.base.startsWith(\".\")) {\n    return false\n  }\n  const isJson = isExt(sidecar.ext, \"json\")\n  const ignoreCase =\n    isJson || Settings.matchSidecarsCaseInsensitively.valueOrDefault\n\n  let srcName = src.base\n  let sidecarName = sidecar.name\n\n  if (strEql(srcName, sidecarName, { ignoreCase })) {\n    // Simplest case: \"image.jpg.xmp\" is a sidecar of \"image.jpg\"\n    return true\n  }\n\n  // OK, so, maybe the sidecar doesn't have the extension?\n  if (strEql(src.name, sidecarName, { ignoreCase })) {\n    // \"image.xmp\" is a sidecar of \"image.jpg\":\n    return true\n  }\n\n  // match image.JPG with image.jpeg.xmp (different spelling of the same file extension type)\n  const aliases = map(normalizeExt(src.ext), ea => extAliases().get(ea))\n  // we really _should_ be able to find an extension here:\n  if (aliases != null) {\n    const re = mkExtsRegExp(aliases)\n    srcName = srcName.replace(re, \"\")\n    sidecarName = sidecarName.replace(re, \"\")\n\n    if (strEql(srcName, sidecarName, { ignoreCase })) {\n      return true\n    }\n  }\n\n  const fuzzy = isJson || Settings.matchSidecarsFuzzily.valueOrDefault\n\n  if (fuzzy) {\n    for (const srcEa of uniq([\n      srcName,\n      src.name,\n      stripExt(srcName),\n      stripExt(src.name)\n    ])) {\n      for (const sidecarEa of uniq([\n        sidecarName,\n        sidecar.name,\n        stripExt(sidecarName),\n        stripExt(sidecar.name)\n      ])) {\n        if (\n          strEql(\n            stripCopySuffixFromName(srcEa),\n            stripCopySuffixFromName(sidecarEa),\n            { ignoreCase: fuzzy }\n          )\n        )\n          return true\n      }\n    }\n  }\n\n  return isJson && isJsonFuzzyMatch(srcName, sidecarName)\n}\n\nexport const AllowedUncommonSuffixRe =\n  /^((-edit(ed)?)|(-?\\w{1,2})|(-?\\(\\d{1,2}\\)))$/i\n\nfunction isJsonFuzzyMatch(srcName: string, sidecarName: string): boolean {\n  // guh, we have to do some b&115h!t for Google.\n  // https://forum.photostructure.com/t/creation-time-formatted-time-total-confusion-or-google-takeout-sidecar-files-are-misnamed/574/16?u=mrm\n  // https://forum.photostructure.com/t/incorrect-tags-assigned/842\n\n  const commonIdx = commonPrefixIgnoreCase(srcName, sidecarName)\n  if (commonIdx.length < 8) return false\n  function suffixOK(suffix: string) {\n    return blank(suffix) || suffix.match(AllowedUncommonSuffixRe) != null\n  }\n  const aSuffix = srcName.slice(commonIdx.length)\n  const aSuffixOK = suffixOK(aSuffix)\n\n  const bSuffix = sidecarName.slice(commonIdx.length)\n  const bSuffixOK = suffixOK(bSuffix)\n\n  return aSuffixOK && bSuffixOK\n}\n\nfunction cannotHaveSidecars(f: BaseFile) {\n  return (\n    // sidecars don't have sidecars:\n    isSidecarExt(f.ext) || inHiddenPhotoStructureDir(f)\n  )\n}\n\n/**\n *  @return oldest sidecars first (so newest sidecar metadata wins, as they are\n * layered on top of eachother)\n */\nexport async function existingSidecars<T extends BaseFile>(\n  src: T\n): Promise<T[]> {\n  if (cannotHaveSidecars(src)) return []\n  return sortByAsync({\n    name: \"_existingSidecars\",\n    arr: src.siblings(ea => isSidecarOf(src, ea)),\n    f: ea => ea.mtimeMs() // older first, see jsdoc ^^\n  })\n}\n\nexport function defaultSidecarExt() {\n  return ensurePrefix(Settings.defaultSidecarType.valueOrDefault, \".\")\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport {\n  PS_LIBRARY_SCHEME,\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n} from \"../../fe/URI\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { thenCompact, thenMap } from \"../async/Promise\"\nimport { exists } from \"../fs/Stat\"\nimport { Volume } from \"../volumes/Volume\"\nimport { bestVolumeForPath } from \"../volumes/Volumes\"\nimport { URI } from \"./URI\"\nimport { uriEncodingVariants } from \"./UriNormalization\"\nimport { nativePath2psfile, psfile2nativePath } from \"./psfile\"\nimport { nativePath2pslib, pslib2nativePath } from \"./pslib\"\nimport { nativePath2psnet, psnet2nativePath } from \"./psnet\"\n\nconst logger = lazy(() => mkLogger(\"uri.FileURI\"))\n\nexport async function nativePath2uri(\n  nativePath: string,\n  volume?: Volume\n): Promise<URI> {\n  if (nativePath == null || blank(nativePath)) {\n    return logger().throw(\"empty nativePath passed to nativePath2uri()\", {\n      retriable: false\n    })\n  }\n\n  return (\n    nativePath2pslib(nativePath) ??\n    (await nativePath2psfile(nativePath, volume)) ??\n    (await nativePath2psnet(nativePath, volume)) ??\n    URI.file(nativePath)\n  )\n}\n\nexport async function nativePath2uris(nativePath: string): Promise<URI[]> {\n  const vol = await bestVolumeForPath(nativePath)\n  return thenCompact([\n    nativePath2pslib(nativePath),\n    nativePath2psfile(nativePath, vol),\n    nativePath2psnet(nativePath, vol),\n    URI.file(nativePath)\n  ])\n}\n\nexport async function nativePath2uriVariants(\n  nativePath: string\n): Promise<string[]> {\n  const arr = await nativePath2uris(nativePath)\n  return uniq(flatten(arr.map(uriEncodingVariants)))\n}\n\nexport async function uriVariants(\n  uri: string,\n  mountpoint?: string\n): Promise<string[]> {\n  const result = uriEncodingVariants(uri)\n  result.push(\n    ...toA(\n      await thenMap(uri2nativePath(uri, mountpoint), nativePath2uriVariants)\n    )\n  )\n  return uniq(result)\n}\n\nfunction toURI(uri: string | URI): Maybe<URI> {\n  try {\n    if (URI.isUri(uri)) return uri\n    return URI.parse(uri, true)\n  } catch (err) {\n    logger().warn(\"bad URI\", { uri, err })\n    return\n  }\n}\n\nexport async function uri2nativePath(\n  uri: string | URI,\n  mountpoint?: string\n): PromiseMaybe<string> {\n  if (blank(uri)) return\n  const u = toURI(uri)\n  if (u == null) return\n\n  switch (u.scheme) {\n    case \"file\":\n      return u.fsPath\n    case PS_LOCAL_FILE_SCHEME:\n      return psfile2nativePath(u, mountpoint)\n    case PS_NETWORK_FILESYSTEM_SCHEME:\n      return psnet2nativePath(u, mountpoint)\n    case PS_LIBRARY_SCHEME:\n      return pslib2nativePath(u)\n    default:\n      throw new Error(\"unsupported URI: \" + uri)\n  }\n}\n\nexport async function uriExists(uri: string | URI, mountpoint?: string) {\n  const np = await uri2nativePath(uri, mountpoint)\n  return np != null && (await exists(np))\n}\n","// see https://github.com/microsoft/vscode/blob/master/src/vs/base/common/uri.ts\nimport { posix, win32 } from \"path\"\nimport { toUnicode } from \"punycode\"\nimport { inspect } from \"util\"\nimport { mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ensureSuffix } from \"../../fe/String\"\nimport { URLSearchParamable, toURLSearchParams } from \"../../fe/URLSearchParams\"\nimport { findLast } from \"../Array\"\nimport { CharCode } from \"../CharCode\"\nimport { isWin, isWinPortable } from \"../platform/Platform\"\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/\nconst _singleSlashStart = /^\\//\nconst _doubleSlashStart = /^\\/\\//\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n  // scheme, must be set\n  if (!ret.scheme && _strict === true) {\n    throw new Error(\n      `[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`\n    )\n  }\n\n  // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n  // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n  if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n    throw new Error(\"[UriError]: Scheme contains illegal characters.\")\n  }\n\n  // path, http://tools.ietf.org/html/rfc3986#section-3.3\n  // If a URI contains an authority component, then the path component\n  // must either be empty or begin with a slash (\"/\") character.  If a URI\n  // does not contain an authority component, then the path cannot begin\n  // with two slash characters (\"//\").\n  if (ret.path) {\n    if (ret.authority) {\n      if (!_singleSlashStart.test(ret.path)) {\n        throw new Error(\n          '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character'\n        )\n      }\n    } else {\n      if (_doubleSlashStart.test(ret.path)) {\n        throw new Error(\n          '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")'\n        )\n      }\n    }\n  }\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n  if (!scheme && !_strict) {\n    return \"file\"\n  }\n  return scheme\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n  // the slash-character is our 'default base' as we don't\n  // support constructing URIs relative to other URIs. This\n  // also means that we alter and potentially break paths.\n  // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n  switch (scheme) {\n    case \"https\":\n    case \"http\":\n    case \"file\":\n      if (!path) {\n        path = _slash\n      } else if (path[0] !== _slash) {\n        path = _slash + path\n      }\n      break\n  }\n  return path\n}\n\nconst _empty = \"\"\nconst _slash = \"/\"\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n  static isUri(thing: any): thing is URI {\n    if (thing instanceof URI) {\n      return true\n    }\n    if (thing == null) {\n      return false\n    }\n    return (\n      typeof (<URI>thing).authority === \"string\" &&\n      typeof (<URI>thing).fragment === \"string\" &&\n      typeof (<URI>thing).path === \"string\" &&\n      typeof (<URI>thing).query === \"string\" &&\n      typeof (<URI>thing).scheme === \"string\" &&\n      typeof (<URI>thing).fsPath === \"function\" &&\n      typeof (<URI>thing).with === \"function\" &&\n      typeof (<URI>thing).toString === \"function\"\n    )\n  }\n\n  /**\n   * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n   * The part before the first colon.\n   */\n  readonly scheme: string\n\n  /**\n   * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n   * The part between the first double slashes and the next slash.\n   */\n  readonly authority: string\n\n  /**\n   * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n   */\n  readonly path: string\n\n  /**\n   * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n   */\n  readonly query: URLSearchParams\n\n  /**\n   * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n   */\n  readonly fragment: string\n\n  /**\n   * @internal\n   */\n  protected constructor(\n    scheme: string,\n    authority?: string,\n    path?: string,\n    query?: URLSearchParamable,\n    fragment?: string,\n    _strict?: boolean\n  )\n\n  /**\n   * @internal\n   */\n  protected constructor(components: UriComponents)\n\n  /**\n   * @internal\n   */\n  protected constructor(\n    schemeOrData: string | UriComponents,\n    authority?: string,\n    path?: string,\n    query?: string | URLSearchParams,\n    fragment?: string,\n    _strict: boolean = false\n  ) {\n    if (typeof schemeOrData === \"object\") {\n      this.scheme = schemeOrData.scheme || _empty\n      this.authority = schemeOrData.authority || _empty\n      this.path = schemeOrData.path || _empty\n      this.query = toURLSearchParams(schemeOrData.query ?? \"\")!\n      this.fragment = schemeOrData.fragment || _empty\n      // no validation because it's this URI\n      // that creates uri components.\n      // _validateUri(this);\n    } else {\n      this.scheme = _schemeFix(schemeOrData, _strict)\n      this.authority = orElse(authority, _empty)\n      this.path = _referenceResolution(this.scheme, orElse(path, _empty))\n      this.query = toURLSearchParams(query ?? \"\")!\n      this.fragment = orElse(fragment, _empty)\n\n      _validateUri(this, _strict)\n    }\n  }\n\n  // ---- filesystem path -----------------------\n\n  /**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n  get fsPath(): string {\n    // if (this.scheme !== 'file') {\n    // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n    // }\n    return uriToFsPath(this, false)\n  }\n\n  // ---- modify to new -------------------------\n\n  with(change: {\n    scheme?: string\n    authority?: string | null\n    path?: string | null\n    query?: URLSearchParamable | null\n    fragment?: string | null\n  }): URI {\n    if (change == null) {\n      return this\n    }\n\n    let { scheme, authority, path, query, fragment } = change\n    if (scheme === undefined) {\n      scheme = this.scheme\n    } else if (scheme === null) {\n      scheme = _empty\n    }\n    if (authority === undefined) {\n      authority = this.authority\n    } else if (authority === null) {\n      authority = _empty\n    }\n    if (path === undefined) {\n      path = this.path\n    } else if (path === null) {\n      path = _empty\n    }\n    if (query === undefined) {\n      query = this.query\n    } else if (query === null) {\n      query = _empty\n    }\n    if (fragment === undefined) {\n      fragment = this.fragment\n    } else if (fragment === null) {\n      fragment = _empty\n    }\n\n    if (\n      scheme === this.scheme &&\n      authority === this.authority &&\n      path === this.path &&\n      query === this.query &&\n      fragment === this.fragment\n    ) {\n      return this\n    }\n\n    return new Uri(scheme, authority, path, query, fragment)\n  }\n\n  // ---- parse & validate ------------------------\n\n  /**\n   * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n   * `file:///usr/home`, or `scheme:with/path`.\n   *\n   * @param value A string which represents an URI (see `URI#toString`).\n   */\n  static parse(value: string, _strict: boolean = false): URI {\n    const match = _regexp.exec(value)\n    if (!match) {\n      return new Uri(_empty, _empty, _empty, _empty, _empty)\n    }\n    const scheme = match[2] || _empty\n    const authority = percentDecode(match[4] || _empty)\n    const path = (match[5] || _empty).split(\"/\").map(percentDecode).join(\"/\")\n    const fixedPath =\n      scheme === \"psfile\" && path.startsWith(\"//\") ? path.slice(1) : path // TODO SITS\n    const query = toURLSearchParams(match[7])\n    const fragment = percentDecode(match[9] || _empty)\n    return new Uri(scheme, authority, fixedPath, query, fragment, _strict)\n  }\n\n  /**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n  static file(path: string): URI {\n    let authority = _empty\n\n    // normalize to fwd-slashes on windows,\n    // on other systems bwd-slashes are valid\n    // filename character, eg /f\\oo/ba\\r.txt\n    if (isWin) {\n      path = path.replace(/\\\\/g, _slash)\n    }\n\n    // check for authority as used in UNC shares\n    // or use the path as given\n    if (path[0] === _slash && path[1] === _slash) {\n      const idx = path.indexOf(_slash, 2)\n      if (idx === -1) {\n        authority = path.substring(2)\n        path = _slash\n      } else {\n        authority = path.substring(2, idx)\n        path = path.substring(idx) || _slash\n      }\n    }\n\n    return new Uri(\"file\", authority, path, _empty, _empty)\n  }\n\n  static from(components: {\n    scheme: string\n    authority?: string\n    path?: string\n    query?: string | URLSearchParams\n    fragment?: string\n  }): URI {\n    return new Uri(\n      components.scheme,\n      components.authority,\n      components.path,\n      components.query,\n      components.fragment\n    )\n  }\n\n  /**\n   * Join a URI path with path fragments and normalizes the resulting path.\n   *\n   * @param uri The input URI.\n   * @param pathFragment The path fragment to add to the URI path.\n   * @returns The resulting URI.\n   */\n  static joinPath(uri: URI, ...pathFragment: string[]): URI {\n    if (!uri.path) {\n      throw new Error(`[UriError]: cannot call joinPaths on URI without path`)\n    }\n    let newPath: string\n    if (isWin && uri.scheme === \"file\") {\n      newPath = URI.file(\n        win32.join(uriToFsPath(uri, true), ...pathFragment)\n      ).path\n    } else {\n      newPath = posix.join(uri.path, ...pathFragment)\n    }\n    return uri.with({ path: newPath })\n  }\n\n  isRootPath(): boolean {\n    return this.path == null || this.path === _slash\n  }\n\n  get pathBase(): Maybe<string> {\n    return this.isRootPath()\n      ? \"\"\n      : map(this.path, path => findLast(path.split(_slash), notBlank))\n  }\n\n  parent(): URI {\n    if (this.isRootPath()) return this\n    return this.with({\n      path: this.path.slice(0, this.path.lastIndexOf(_slash))\n    })\n  }\n\n  join(...path: string[]): URI {\n    return this.with({\n      path: ensureSuffix(this.path, _slash) + path.join(_slash)\n    })\n  }\n\n  // ---- printing/externalize ---------------------------\n\n  /**\n   * Creates a string representation for this URI. It's guaranteed that calling\n   * `URI.parse` with the result of this function creates an URI which is equal\n   * to this URI.\n   *\n   * * The result shall *not* be used for display purposes but for externalization or transport.\n   * * The result will be encoded using the percentage encoding and encoding happens mostly\n   * ignore the scheme-specific encoding rules.\n   *\n   * @param skipEncoding Do not encode the result, default is `false`\n   */\n  toString(skipEncoding: boolean = false): string {\n    return _asFormatted(this, skipEncoding)\n  }\n\n  toJSON(): UriComponents {\n    return this\n  }\n\n  [inspect.custom]() {\n    return this.toString()\n  }\n}\n\nexport interface UriComponents {\n  scheme: string\n  authority: string\n  path: string\n  query?: URLSearchParams | string\n  fragment: string\n}\n\ninterface UriState extends UriComponents {\n  $mid: number\n  external: string\n  fsPath: string\n  _sep: 1 | undefined\n}\n\nconst _pathSepMarker = isWinPortable ? 1 : undefined\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n  _formatted: string | null = null\n  _fsPath: string | null = null\n\n  get fsPath(): string {\n    if (this._fsPath == null) {\n      this._fsPath = uriToFsPath(this, false)\n    }\n    return this._fsPath\n  }\n\n  toString(skipEncoding: boolean = false): string {\n    if (!skipEncoding) {\n      if (this._formatted == null) {\n        this._formatted = _asFormatted(this, false)\n      }\n      return this._formatted\n    } else {\n      // we don't cache that\n      return _asFormatted(this, true)\n    }\n  }\n\n  toJSON(): UriComponents {\n    const res = <UriState>{\n      $mid: 1\n    }\n    // cached state\n    if (this._fsPath != null) {\n      res.fsPath = this._fsPath\n      res._sep = _pathSepMarker\n    }\n    if (this._formatted != null) {\n      res.external = this._formatted\n    }\n    // uri components\n    if (this.path) {\n      res.path = this.path\n    }\n    if (this.scheme) {\n      res.scheme = this.scheme\n    }\n    if (this.authority) {\n      res.authority = this.authority\n    }\n    mapNotBlank(this.query, ea => (res.query = ea))\n    if (this.fragment) {\n      res.fragment = this.fragment\n    }\n    return res\n  }\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n  [CharCode.Colon]: \"%3A\", // gen-delims\n  [CharCode.Slash]: \"%2F\",\n  [CharCode.QuestionMark]: \"%3F\",\n  [CharCode.Hash]: \"%23\",\n  [CharCode.OpenSquareBracket]: \"%5B\",\n  [CharCode.CloseSquareBracket]: \"%5D\",\n  [CharCode.AtSign]: \"%40\",\n\n  [CharCode.ExclamationMark]: \"%21\", // sub-delims\n  [CharCode.DollarSign]: \"%24\",\n  [CharCode.Ampersand]: \"%26\",\n  [CharCode.SingleQuote]: \"%27\",\n  [CharCode.OpenParen]: \"%28\",\n  [CharCode.CloseParen]: \"%29\",\n  [CharCode.Asterisk]: \"%2A\",\n  [CharCode.Plus]: \"%2B\",\n  [CharCode.Comma]: \"%2C\",\n  [CharCode.Semicolon]: \"%3B\",\n  [CharCode.Equals]: \"%3D\",\n\n  [CharCode.Space]: \"%20\"\n}\n\nexport function encodeURIComponentFast(\n  uriComponent: string,\n  allowSlash: boolean\n): string {\n  let res: string | undefined\n  let nativeEncodePos = -1\n\n  for (let pos = 0; pos < uriComponent.length; pos++) {\n    const code = uriComponent.charCodeAt(pos)\n\n    // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n    if (\n      (code >= CharCode.a && code <= CharCode.z) ||\n      (code >= CharCode.A && code <= CharCode.Z) ||\n      (code >= CharCode.Digit0 && code <= CharCode.Digit9) ||\n      code === CharCode.Dash ||\n      code === CharCode.Period ||\n      code === CharCode.Underline ||\n      code === CharCode.Tilde ||\n      (allowSlash && code === CharCode.Slash)\n    ) {\n      // check if we are delaying native encode\n      if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos))\n        nativeEncodePos = -1\n      }\n      // check if we write into a new string (by default we try to return the param)\n      if (res !== undefined) {\n        res += uriComponent.charAt(pos)\n      }\n    } else {\n      // encoding needed, we need to allocate a new string\n      if (res === undefined) {\n        res = uriComponent.substr(0, pos)\n      }\n\n      // check with default table first\n      const escaped = encodeTable[code]\n      if (escaped !== undefined) {\n        // check if we are delaying native encode\n        if (nativeEncodePos !== -1) {\n          res += encodeURIComponent(\n            uriComponent.substring(nativeEncodePos, pos)\n          )\n          nativeEncodePos = -1\n        }\n\n        // append escaped variant to result\n        res += escaped\n      } else if (nativeEncodePos === -1) {\n        // use native encode only when needed\n        nativeEncodePos = pos\n      }\n    }\n  }\n\n  if (nativeEncodePos !== -1) {\n    res += encodeURIComponent(uriComponent.substring(nativeEncodePos))\n  }\n\n  return res !== undefined ? res : uriComponent\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n  let res: string | undefined\n  for (let pos = 0; pos < path.length; pos++) {\n    const code = path.charCodeAt(pos)\n    if (code === CharCode.Hash || code === CharCode.QuestionMark) {\n      if (res === undefined) {\n        res = path.substr(0, pos)\n      }\n      res += encodeTable[code]\n    } else {\n      if (res !== undefined) {\n        res += path[pos]\n      }\n    }\n  }\n  return res !== undefined ? res : path\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n  let value: string\n  if (uri.authority && uri.path.length > 1 && uri.scheme === \"file\") {\n    // unc path: file://shares/c$/far/boo\n    value = `//${uri.authority}${uri.path}`\n  } else if (\n    uri.path.charCodeAt(0) === CharCode.Slash &&\n    ((uri.path.charCodeAt(1) >= CharCode.A &&\n      uri.path.charCodeAt(1) <= CharCode.Z) ||\n      (uri.path.charCodeAt(1) >= CharCode.a &&\n        uri.path.charCodeAt(1) <= CharCode.z)) &&\n    uri.path.charCodeAt(2) === CharCode.Colon\n  ) {\n    if (!keepDriveLetterCasing) {\n      // windows drive letter: file:///c:/far/boo\n      value = uri.path[1].toLowerCase() + uri.path.substr(2)\n    } else {\n      value = uri.path.substr(1)\n    }\n  } else {\n    // other path\n    value = uri.path\n  }\n  if (isWin) {\n    value = value.replace(/\\//g, \"\\\\\")\n  }\n  return value\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n  const encoder = !skipEncoding\n    ? encodeURIComponentFast\n    : encodeURIComponentMinimal\n\n  let res = \"\"\n  const { scheme, query, fragment } = uri\n  let { authority, path } = uri\n  if (scheme) {\n    res += scheme\n    res += \":\"\n  }\n  if (authority || scheme === \"file\") {\n    res += _slash\n    res += _slash\n  }\n  if (authority) {\n    let idx = authority.indexOf(\"@\")\n    if (idx !== -1) {\n      // <user>@<auth>\n      const userinfo = authority.substr(0, idx)\n      authority = authority.substr(idx + 1)\n      idx = userinfo.indexOf(\":\")\n      if (idx === -1) {\n        res += encoder(userinfo, false)\n      } else {\n        // <user>:<pass>@<auth>\n        res += encoder(userinfo.substr(0, idx), false)\n        res += \":\"\n        res += encoder(userinfo.substr(idx + 1), false)\n      }\n      res += \"@\"\n    }\n    // MRM 20200815: DON'T DOWNCASE:\n    // authority = authority.toLowerCase()\n    idx = authority.indexOf(\":\")\n    if (idx === -1) {\n      res += encoder(authority, false)\n    } else {\n      // <auth>:<port>\n      res += encoder(authority.substr(0, idx), false)\n      res += authority.substr(idx)\n    }\n  }\n  if (path) {\n    // lower-case windows drive letters in /C:/fff or C:/fff\n    if (\n      path.length >= 3 &&\n      path.charCodeAt(0) === CharCode.Slash &&\n      path.charCodeAt(2) === CharCode.Colon\n    ) {\n      const code = path.charCodeAt(1)\n      if (code >= CharCode.A && code <= CharCode.Z) {\n        path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}` // \"/c:\".length === 3\n      }\n    } else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n      const code = path.charCodeAt(0)\n      if (code >= CharCode.A && code <= CharCode.Z) {\n        path = `${String.fromCharCode(code + 32)}:${path.substr(2)}` // \"/c:\".length === 3\n      }\n    }\n    // encode the rest of the path\n    res += encoder(path, true)\n  }\n\n  mapNotBlank(query, q => (res += \"?\" + q))\n\n  if (fragment) {\n    res += \"#\"\n    res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment\n  }\n  return res\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n  try {\n    return decodeURIComponent(str)\n  } catch {\n    if (str.length > 3) {\n      return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3))\n    } else {\n      return str\n    }\n  }\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g\n\nexport function percentDecode(str: string): string {\n  if (str.startsWith(\"xn--\")) return toUnicode(str)\n  if (!str.match(_rEncodedAsHex)) {\n    return str\n  }\n  return str.replace(_rEncodedAsHex, match => decodeURIComponentGraceful(match))\n}\n\nexport function toURI(u: string | URI): URI {\n  return URI.isUri(u) ? u : URI.parse(u)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { eql } from \"../../fe/Eql\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport {\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n} from \"../../fe/URI\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { uri2nativePath } from \"./FileURI\"\nimport { URI, toURI } from \"./URI\"\n\nconst uriPrefixes = [\n  \"http:\",\n  \"https:\",\n  \"file:\",\n  PS_LOCAL_FILE_SCHEME,\n  PS_NETWORK_FILESYSTEM_SCHEME\n].map(ea => ea + \"//\")\n\nexport function isUri(s: string): boolean {\n  const l = toS(s).toLowerCase()\n  return uriPrefixes.some(ea => l.startsWith(ea))\n}\n\nconst logger = lazy(() => mkLogger(\"uri.UriNormalization\"))\n\nexport function normalizeURI(uri: string): string {\n  try {\n    return URI.parse(uri).toString()\n  } catch (err) {\n    logger().warn(\"Failed to normalize invalid URI\", { uri, err })\n    return uri\n  }\n}\n\n/**\n * NOT FOR GENERAL USE (I don't think?)\n * @return true iff a and b are defined and are either equal or have the same\n * normalized content\n */\nfunction strEql(a: Maybe<string>, b: Maybe<string>) {\n  return a == null || b == null\n    ? false\n    : // normalize() is expensive, so we only do it if the paths are different\n      a === b || a.normalize() === b.normalize()\n}\n\n//\n// URI UNICODE NORMALIZATION\n//\n\n// We don't store normalized unicode URIs, as this allows us to store the actual\n// filename characters.\n\n// We *do* compare URIs by normalizing them, so macOS (using NFD) and other\n// filesystems (using NFC) can be considered equivalent.\n\nexport function uriEqlSync(a: Maybe<string | URI>, b: Maybe<string | URI>) {\n  try {\n    if (a == null || b == null) return false\n    const au = toURI(a)\n    const bu = toURI(b)\n    return (\n      au.scheme === bu.scheme &&\n      au.authority === bu.authority &&\n      strEql(au.path, bu.path)\n    )\n  } catch {\n    return false\n  }\n}\n\nexport async function uriIsEquivalent(\n  a: Maybe<string | URI>,\n  b: Maybe<string | URI>\n): Promise<boolean> {\n  try {\n    if (a == null || b == null) return false\n    return (\n      eql(a, b) ||\n      uriEqlSync(a, b) ||\n      strEql(await uri2nativePath(a), await uri2nativePath(b))\n    )\n  } catch {\n    return false\n  }\n}\n\nexport function uriEncodingVariants(uri: string | URI): string[] {\n  const u = toURI(uri)\n  return uniq([\n    u.toString(),\n    u.with({ path: u.path.normalize(\"NFC\") }).toString(),\n    u.with({ path: u.path.normalize(\"NFD\") }).toString()\n  ])\n}\n","import { join, posix, win32 } from \"path\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { ensurePrefix } from \"../../fe/String\"\nimport { PS_LOCAL_FILE_SCHEME } from \"../../fe/URI\"\nimport { containedByNativePath } from \"../fs/Path\"\nimport { native2posix } from \"../fs/PosixNative\"\nimport { isPosix } from \"../platform/Platform\"\nimport { Volume } from \"../volumes/Volume\"\nimport { bestVolumeForPath, bestVolumeForVolsha } from \"../volumes/Volumes\"\nimport { URI } from \"./URI\"\nimport { volsha } from \"./volsha\"\n\nexport async function nativePath2psfile(\n  nativePath: string,\n  vol?: Maybe<Volume>\n) {\n  if (blank(nativePath)) return\n  vol =\n    vol != null &&\n    containedByNativePath({\n      ancestor: vol.mountpoint,\n      descendant: nativePath,\n      acceptSelf: true // we shouldn't normally need to accept self--the volume mountpoint shouldn't be an asset native path!\n    })\n      ? vol\n      : await bestVolumeForPath(nativePath)\n  if (vol == null || blank(vol.uuid)) return\n\n  const fullPath = native2posix(nativePath)\n  const volPath = native2posix(vol.mountpoint)\n  if (!fullPath.normalize().startsWith(volPath.normalize())) return\n  const path = ensurePrefix(fullPath.slice(volPath.length), \"/\")\n\n  return URI.from({\n    scheme: PS_LOCAL_FILE_SCHEME,\n    authority: volsha(vol.uuid),\n    path\n  })\n}\n\nexport function joinMountpoint(mountpoint: string, posixPath: string) {\n  return join(mountpoint, ...posixPath.split(\"/\").slice(1))\n}\n\nexport async function psfile2nativePath(\n  uri: URI,\n  mountpoint?: string\n): PromiseMaybe<string> {\n  if (uri.scheme !== PS_LOCAL_FILE_SCHEME) {\n    throw new Error(\"invalid URI: \" + uri + \" (bad scheme)\")\n  }\n  if (blank(uri.authority)) {\n    throw new Error(\"invalid URI: \" + uri + \" (missing authority)\")\n  }\n\n  // Best-case, the volsha matches the mountpoint:\n\n  // Don't look at the mountpoint if it includes a separator character for the\n  // \"other\" platform (windows vs posix):\n\n  const notMySep = isPosix ? win32.sep : posix.sep\n\n  const mountpointMatchesPlatform =\n    notBlank(mountpoint) && !mountpoint.includes(notMySep)\n\n  if (mountpointMatchesPlatform && !blank(mountpoint)) {\n    const vol = await bestVolumeForPath(mountpoint)\n    if (vol?.uuid != null) {\n      const authority = volsha(vol.uuid)\n      if (authority === uri.authority) {\n        // Best case: everything still matches!\n        // We trust the volume mountpoint more that the given one, though:\n        return joinMountpoint(vol.mountpoint!, uri.path)\n      }\n    }\n  }\n\n  // Dang, the mountpoint's volsha doesn't match.\n\n  // See if we can resolve the volsha from current volumes:\n\n  const volshaVolume = await bestVolumeForVolsha(uri.authority)\n\n  if (volshaVolume != null) {\n    return joinMountpoint(volshaVolume.mountpoint, uri.path)\n  }\n\n  // last-ditch hope that the mountpoint actually works:\n\n  if (mountpointMatchesPlatform && notBlank(mountpoint)) {\n    return joinMountpoint(mountpoint, uri.path)\n  }\n\n  return undefined\n}\n","import { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { ensurePrefix, stripPrefix } from \"../../fe/String\"\nimport { PS_LIBRARY_SCHEME } from \"../../fe/URI\"\nimport { libraryOriginalsDirPosixFile } from \"../dir/LibraryDirs\"\nimport { containedByNativePath, posixPathFrom } from \"../fs/Path\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { Settings } from \"../settings/Settings\"\nimport { URI } from \"./URI\"\n\nexport const PSLIB_ROOT_URI = URI.from({\n  scheme: PS_LIBRARY_SCHEME,\n  path: \"\"\n})\n\nexport function nativePath2pslib(nativePath: string) {\n  if (blank(nativePath)) return\n\n  const libDir = Settings.libraryDir.valueOrDefault // < valueOrDefault for Docker\n  if (blank(libDir)) return\n\n  const parent = uniq([libDir, libraryOriginalsDirPosixFile()]).find(dir =>\n    containedByNativePath({\n      ancestor: dir,\n      descendant: nativePath,\n      acceptSelf: true\n    })\n  )\n\n  if (parent == null) return\n\n  // We can't just `\"/\" + ` because that breaks for the root library dir :(\n\n  const path = ensurePrefix(posixPathFrom(parent, nativePath), \"/\")\n\n  return URI.from({\n    scheme: PS_LIBRARY_SCHEME,\n    path\n  })\n}\n\nexport function pslib2nativePath(uri: URI): Maybe<string> {\n  if (uri.scheme !== PS_LIBRARY_SCHEME) {\n    throw new Error(\"invalid URI: \" + uri + \" (bad scheme)\")\n  }\n  const origDir = libraryOriginalsDirPosixFile()\n  if (origDir == null) {\n    throw new Error(\"invalid URI: \" + uri + \" (no library set)\")\n  }\n  // strip initial \"/\" because we want a relative path\n  const relativePath = stripPrefix(uri.path, \"/\")\n  const orig = origDir.join(relativePath)\n\n  // there may be two directories to look in: $PS_LIBRARY and $PS_ORIGINALS.\n  // Return the originals dir if it exists, else the library dir if it exists,\n  // else the originals dir path.\n\n  if (orig.isFileSync()) return orig.nativePath\n\n  if (!origDir.eql(Settings.libraryDir.valueOrDefault)) {\n    const lib = PosixFile.for(Settings.libraryDir.valueOrDefault!).join(\n      relativePath\n    )\n    if (lib.isFileSync()) return lib.nativePath\n  }\n\n  // give up\n  return orig.nativePath\n}\n","import * as _path from \"path\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { PS_NETWORK_FILESYSTEM_SCHEME } from \"../../fe/URI\"\nimport { toA } from \"../../fe/toA\"\nimport { equalsIgnoreCase, stripPrefix } from \"../String\"\nimport { native2posix } from \"../fs/PosixNative\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { isEquivalentHost } from \"../net/nslookup\"\nimport { isWin } from \"../platform/Platform\"\nimport { Volume } from \"../volumes/Volume\"\nimport { bestVolumeForPath, volumes } from \"../volumes/Volumes\"\nimport { URI } from \"./URI\"\n\nexport async function nativePath2psnet(\n  nativePath: string,\n  vol?: Maybe<Volume>\n): PromiseMaybe<URI> {\n  if (blank(nativePath)) return\n\n  vol ??= await bestVolumeForPath(nativePath)\n\n  // Prefer the volume, if available:\n  if (\n    vol != null &&\n    vol.remote === true &&\n    notBlank(vol.remoteHost) &&\n    notBlank(vol.remoteShare)\n  ) {\n    return URI.from({\n      scheme: PS_NETWORK_FILESYSTEM_SCHEME,\n      authority: vol.remoteHost,\n      path: _path.posix.join(\n        \"/\" + vol.remoteShare,\n        stripPrefix(native2posix(nativePath), native2posix(vol.mountpoint))\n      )\n    })\n  }\n\n  // If it's a UNC path, URI knows how to handle it:\n  if (nativePath.startsWith(\"\\\\\\\\\")) {\n    return URI.file(nativePath).with({ scheme: PS_NETWORK_FILESYSTEM_SCHEME })\n  }\n\n  // Give up:\n  return\n}\n\nexport async function psnet2nativePath(\n  uri: URI,\n  mountpoint?: string\n): PromiseMaybe<string> {\n  if (uri.scheme !== PS_NETWORK_FILESYSTEM_SCHEME) {\n    throw new Error(\"invalid URI: \" + uri + \" (bad scheme)\")\n  }\n\n  if (blank(uri.authority)) {\n    throw new Error(\"invalid URI: \" + uri + \" (missing authority)\")\n  }\n\n  const arr = uri.path.split(\"/\").slice(1) // < slice(1) to skip over the '' due to the absolute path\n  const share = arr[0]\n\n  if (blank(share)) {\n    throw new Error(\"invalid URI: \" + uri + \" (missing share)\")\n  }\n\n  if (isWin) {\n    return `\\\\\\\\${uri.authority}\\\\${arr.join(_path.sep)}`\n  }\n\n  const path = arr.slice(1)\n\n  // If there's a mounted drive with this share, use that:\n  const vols = await volumes()\n\n  for (const vol of toA(vols)) {\n    if (vol.remote !== true) continue\n    if (\n      equalsIgnoreCase(vol.remoteShare, share) &&\n      (await isEquivalentHost(uri.authority, vol.remoteHost))\n    ) {\n      return _path.join(vol.mountpoint, ...path)\n    }\n  }\n\n  if (await isReadableDirectory(mountpoint)) {\n    return _path.join(mountpoint!, ...path)\n  }\n\n  return\n}\n","import { mapNotBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { memoize } from \"../MemoizedFunc\"\nimport { shortStringSha } from \"../StringHash\"\n\nexport const volsha = memoize(\n  (uuid: Maybe<string>) => mapNotBlank(uuid, shortStringSha),\n  { maxSize: 128, ttlMs: minuteMs }\n)\n","import { compactBlanks } from \"../../fe/Array\"\nimport { libraryOriginalsDirPosixFile } from \"../dir/LibraryDirs\"\nimport { containedByNativePath, pathIsRoot } from \"../fs/Path\"\nimport { isPosix } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\n\nexport function mightBeAssetMountpoint(nativePath: string) {\n  for (const dir of compactBlanks([\n    Settings.libraryDir.valueOrDefault,\n    libraryOriginalsDirPosixFile(),\n    ...Settings.scanPaths.values\n  ])) {\n    // Don't let a \"/\" in scanPaths make everything not ignorable\n    if (isPosix && pathIsRoot(dir)) continue\n    if (\n      containedByNativePath({\n        ancestor: dir,\n        descendant: nativePath,\n        acceptSelf: true\n      })\n    )\n      return true\n  }\n  return false\n}\n","import { isDocker } from \"../platform/isDocker\"\n\nexport const DefaultExcludedLinuxRoots = [\n  \"boot\",\n  \"efi\",\n  \"etc\",\n  \"lib\", // don't exclude /net, that's used for nfs mounts!\n  \"proc\",\n  \"snap\",\n  \"sys\",\n  \"tmp\"\n]\n\nexport const DefaultExcludedLinuxMountpointPaths = [\n  ...(isDocker() ? [\"/\"] : []), // < don't scan or examine the root volume\n  \"/dev/shm\",\n  \"/run\",\n  \"/run/lock\",\n  \"/run/qemu\",\n  \"/run/snapd/ns\",\n  \"/tmp\",\n  \"/var/tmp\"\n]\n\nexport const DefaultExcludedLinuxMountpointNames = [\"#snapshot\"]\n","export const DefaultExcludedFilesystemTypes = [\n  \"cgmfs\",\n  \"cgroup\",\n  \"debugfs\",\n  \"devfs\",\n  \"devtmpfs\",\n  \"sunrpc\",\n  \"sysfs\",\n  \"tracefs\",\n  \"udev\"\n]\n","import { lazy } from \"../../core/Lazy\"\nimport { notBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { assignMissingPrimitives } from \"../Object\"\nimport { isReadableDirectorySync } from \"../fs/StatSync\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { mightBeAssetMountpoint } from \"./AssetMountpoint\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { gioVolumes, isGioSupported } from \"./Gio\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { isExcludedFilesystem, isExcludedMountpoint } from \"./PosixVolumes\"\nimport { DfVolume } from \"./Volume\"\n\nconst logger = lazy(() => mkLogger(\"volumes.DfPosix\"))\n\nconst localMountpoints = lazyFsAsync(\n  \"localMountpoints\",\n  // We'll assume gio mountpoints are always remote, so we can ignore gio stuff\n  // here:\n  async () =>\n    (await dfPosixRaw({ localsOnly: true, paths: await mountpoints() }))?.map(\n      vol => vol.mountpoint\n    )\n)\n\nfunction isRemoteFilesystem(fs: Maybe<string>) {\n  return notBlank(fs) && Settings.remoteFilesystemTypes.values.includes(fs)\n}\n\nexport function acceptPosixVolume(vol: DfVolume): boolean {\n  const notAssetMountpoint = !mightBeAssetMountpoint(vol.mountpoint)\n  const excludedFS =\n    vol.filesystem == null ? false : isExcludedFilesystem(vol.filesystem)\n  const excludedMP = isExcludedMountpoint(vol.mountpoint)\n  const excludedDir = Settings.validateMountpoints.valueOrDefault\n    ? !isReadableDirectorySync(vol.mountpoint)\n    : false\n\n  const excluded =\n    notAssetMountpoint && (excludedFS || excludedMP || excludedDir)\n\n  return logger().tap({\n    msg: \"acceptPosixVolume()\",\n    result: !excluded,\n    meta: {\n      volume: vol,\n      notAssetMountpoint,\n      excludedFS,\n      excludedMP,\n      excludedDir\n    }\n  })\n}\n\n// This doesn't need to be cached: it's cached already by _volumesImpl\nexport async function dfPosix() {\n  // df on docker doesn't return all mountpoints (!!) unless we tell `df` which paths we want:\n  const paths = isDocker() ? await mountpoints() : undefined\n  const vols = await dfPosixRaw({ paths })\n\n  if (vols == null) return\n  const locals = toA(await localMountpoints())\n  vols.forEach(vol => {\n    vol.remote =\n      !locals.includes(vol.mountpoint) || isRemoteFilesystem(vol.filesystem)\n  })\n  if (await isGioSupported()) {\n    for (const vol of toA(await gioVolumes())) {\n      // only push unique mountpoints\n      const prior = vols.find(ea => ea.mountpoint === vol.mountpoint)\n      if (prior == null) {\n        vols.push(vol)\n      } else {\n        logger().info(\"Merging GIO and df volume\", {\n          dfVol: prior,\n          gioVol: vol\n        })\n        // We don't trust gio as much as we trust df, so only assign missing fields (like remote host):\n        assignMissingPrimitives(prior, vol)\n      }\n    }\n  }\n  return vols.filter(acceptPosixVolume)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, compactBlanks } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toInt } from \"../../fe/Number\"\nimport { KiB } from \"../../fe/Units\"\nimport { parseFixed } from \"../Fixed\"\nimport { mkLogger } from \"../Logger\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { isMac } from \"../platform/Platform\"\nimport { DfVolume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"volumes.DfPosixRaw\"))\n\n// KiB: https://en.wikipedia.org/wiki/Byte#Units_based_on_powers_of_2\nfunction kibToBytes(s: string): number {\n  return toInt(s, { defaultValue: 0 })! * KiB\n}\n\nexport async function dfPosixRawLocal_() {\n  return stdout_(\"df\", [\"-l\", \"-k\", \"-P\"], {\n    timeoutMs: commandTimeoutMs(),\n    ignoreStderr: false,\n    ignoreExitCode: false\n  })\n}\n\nexport async function dfPosixRaw({\n  localsOnly,\n  paths,\n  output\n}: {\n  localsOnly?: boolean\n  paths?: string[]\n  output?: string\n} = {}): Promise<DfVolume[]> {\n  // HEY FUTURE ME: Make sure you run `coreutils` version of `df` on Alpine!\n  const args = [\"-k\", \"-P\"]\n  if (localsOnly === true) args.push(\"-l\")\n  args.push(...compactBlanks(paths))\n  output ??= await stdout_(\"df\", args, {\n    timeoutMs: commandTimeoutMs(),\n    // https://askubuntu.com/questions/1227667/df-command-throws-error-on-run-user-1000-doc-folder\n    ignoreStderr: true,\n    ignoreExitCode: true\n  })\n  if (blank(output)) {\n    logger().warn(\"empty output\", { localsOnly, paths })\n    return []\n  }\n\n  logger().debug(\"output\", { localsOnly, paths, output })\n\n  const arr = parseDfVolumes(output)\n  if (localsOnly === true) {\n    arr.forEach(ea => (ea.remote = false))\n  }\n  return arr\n}\n\ninterface ParsedVolume {\n  Filesystem: string\n  \"1024-blocks\": string\n  Used: string\n  Available: string\n  \"Mounted on\": string\n}\n\nexport function parseDfVolumes(output: string) {\n  const parsed = parseFixed(\n    [\n      \"Filesystem\",\n      \"1024-blocks\",\n      \"Used\",\n      \"Available\",\n      \"Capacity\",\n      \"Mounted on\"\n    ],\n    output\n  )\n  return compact(parsed.map(ea => parseDfVolume(ea as any)))\n}\n\nexport function parseDfVolume(vol: ParsedVolume): Maybe<DfVolume> {\n  // HEY FUTURE ME: Don't filter \"ignorable\" volumes here. `mountpoints()` and\n  // `volumes()` does that for us.\n\n  const filesystem = vol[\"Filesystem\"]\n  const mountpoint = vol[\"Mounted on\"]\n  const size = kibToBytes(vol[\"1024-blocks\"]) ?? 0\n  if (size === 0) {\n    logger().info(\"parseDfVolume(): skipping (size is 0)\", { vol })\n    return\n  }\n\n  const used = kibToBytes(vol[\"Used\"]) ?? 0\n  const available = kibToBytes(vol[\"Available\"]) ?? 0\n\n  if (used === 0 && available === 0) {\n    logger().info(\"parseDfVolume(): skipping (used and available is 0)\", {\n      vol,\n      size,\n      used,\n      available\n    })\n    return\n  }\n\n  return {\n    filesystem,\n    mountpoint,\n    // 20220530: macOS MIS-REPORTS VOLUME SIZES, YAY\n    size: isMac ? used + available : size,\n    used,\n    available\n  }\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { compact, uniq } from \"../../fe/Array\"\nimport { sort } from \"../../fe/ArraySort\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gt0, gte0 } from \"../../fe/Number\"\nimport { Obj, compactBlankValues } from \"../../fe/Object\"\nimport { ensureSuffix } from \"../../fe/String\"\nimport { toA } from \"../../fe/toA\"\nimport { toS } from \"../../fe/toS\"\nimport { mkLogger } from \"../Logger\"\nimport { equalsIgnoreCase } from \"../String\"\nimport { mapAsync } from \"../async/Promise\"\nimport { onError } from \"../error/OnError\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\nimport { Settings } from \"../settings/Settings\"\nimport { mountpointsWin } from \"./MountpointsWin\"\nimport { parseRemoteName } from \"./RemoteVolumesWin\"\nimport { Volume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"volumes.DfWin\"))\n\n// This is already cached by _volumesImpl()\nexport async function dfWin() {\n  const disks = await volumeInfoWin()\n  return disks.filter(d => d.ok !== false && gt0(d.size))\n}\n\nconst DriveLetterRE = /([a-z]+)(?::\\\\)?/i\n\nfunction cleanDriveLetter(driveLetter?: Maybe<string>) {\n  return driveLetter?.match(DriveLetterRE)?.[1]?.toUpperCase()\n}\n\nexport function normalizeDriveLetter(driveLetter: Maybe<string>) {\n  return map(cleanDriveLetter(driveLetter), ea => ea + \":\\\\\")\n}\n\n// Returns network-mapped drives, but doesn't get operational status or UUIDs:\nexport function getPsDriveCommand(driveLetter?: Maybe<string>) {\n  return `Get-PSDrive -PSProvider FileSystem ${toS(\n    cleanDriveLetter(driveLetter)\n  )} | Select-Object -Property Root,DisplayRoot,Description,Used,Free`\n}\n\nfunction parseGetPsDriveRow(ea: Obj): Maybe<Volume> {\n  return ea == null || blank(ea.Root) || !gte0(ea.Free) || !gte0(ea.Used)\n    ? undefined\n    : (compactBlankValues({\n        mountpoint: ensureSuffix(ea.Root, \":\\\\\").toUpperCase(),\n        label: ea.Description,\n        size: ea.Used + ea.Free,\n        used: ea.Used,\n        available: ea.Free,\n        remote: notBlank(ea.DisplayRoot),\n        ...map(parseRemoteName(ea.DisplayRoot), remote => ({\n          remoteHost: remote.host,\n          remoteShare: remote.share\n        }))\n      }) as Volume)\n}\n\n// Note: Get-Disk and Get-Partition return physical (not logical) disk info.\n\n// No remote drives, but we get UUIDs:\nexport function getVolumeCommand(driveLetter?: Maybe<string>) {\n  return `Get-Volume ${toS(\n    cleanDriveLetter(driveLetter)\n  )} | Select-Object -Property DriveLetter,FileSystem,FileSystemLabel,Size,SizeRemaining,HealthStatus,OperationalStatus,UniqueId`\n}\n\nexport function getLocalVolumesWin_() {\n  return PowerShell.instance().executeJsonToA(getVolumeCommand())\n}\n\nconst uuidRE = /\\{([-a-z0-9]{7,})\\}/i\n\n/**\n * @param s \"\\\\?\\Volume{717926df-0000-0000-0000-50e01f000000}\\\"\n */\nfunction uniqueId2uuid(s: Maybe<string>) {\n  return logger().tap({\n    msg: \"uniqueId2uuid\",\n    result: map(uuidRE.exec(toS(s)), m => m[1]),\n    meta: { s }\n  })\n}\n\nfunction toDefinedAndNotEql(s: Maybe<string>, v: string) {\n  s = s?.trim()\n  return !blank(s) && !equalsIgnoreCase(s, v) ? s : undefined\n}\n\nexport function parseGetVolumeRow(o: Obj): Maybe<Volume> {\n  // We don't care about system recovery volumes:\n  if (\n    o.DriveLetter == null ||\n    o.DriveLetter === \"null\" ||\n    o.FileSystemLabel === \"System Reserved\"\n  ) {\n    logger().debug(\"parseGetVolumeRow(): skipping system recovery volume\", {\n      o\n    })\n    return\n  }\n  const mountpoint = normalizeDriveLetter(o.DriveLetter)\n  if (mountpoint == null) {\n    logger().debug(\n      \"parseGetVolumeRow(): skipping volume: invalid DriveLetter\",\n      { o }\n    )\n    return\n  }\n  const notOkStatus = compact([\n    toDefinedAndNotEql(o.HealthStatus, \"healthy\"),\n    toDefinedAndNotEql(o.OperationalStatus, \"OK\")\n  ]).join(\"; \")\n  const ok =\n    o.Size != null &&\n    o.SizeRemaining != null &&\n    notBlank(o.DriveLetter) &&\n    blank(notOkStatus)\n  return logger().tap({\n    msg: \"parseGetVolumeRow()\",\n    result: {\n      mountpoint,\n      filesystem: o.FileSystem,\n      label: o.FileSystemLabel,\n      uuid: uniqueId2uuid(o.UniqueId),\n      size: o.Size,\n      used: o.Size - o.SizeRemaining,\n      available: o.SizeRemaining,\n      remote: false, // Get-Volume only returns local drives.\n      ok,\n      status: notOkStatus\n    },\n    meta: { input: o }\n  })\n}\n\nexport async function volumeInfoWin(): Promise<Volume[]> {\n  // Windows can sometimes get confused and map the same network drive to both\n  // f:\\ and F:\\\n  const driveLetters = uniq(\n    toA(await mountpointsWin()).map(normalizeDriveLetter)\n  )\n\n  // We ask for each drive letter separately to parallelize the requests.\n  const psDrivesJson = await mapAsync({\n    name: \"volumeInfoWin.psDrivesJson\",\n    arr: driveLetters,\n    f: drive =>\n      PowerShell.instance()\n        .executeJsonToA(getPsDriveCommand(drive))\n        .catch(error => {\n          onError(\"volumeInfoWin(): Get-PSDrive failed for drive \" + drive, {\n            error\n          })\n          return []\n        }),\n    maxConcurrent: Settings.powerShellProcs.valueOrDefault,\n    timeoutMs: commandTimeoutMs()\n  })\n\n  const psDriveVols = compact(flatten(psDrivesJson).map(parseGetPsDriveRow))\n\n  // NOTE: Get-Volume doesn't return network drives or virtual drives\n\n  const getVolumesJson = await mapAsync({\n    name: \"volumeInfoWin.volumesJson\",\n    arr: driveLetters,\n    f: drive =>\n      PowerShell.instance()\n        .executeJsonToA(getVolumeCommand(drive))\n        .catch(err => {\n          logger().debug(\n            \"volumeInfoWin(): Get-Volume failed for drive \" + drive,\n            err\n          )\n          return []\n        }),\n    maxConcurrent: Settings.powerShellProcs.valueOrDefault,\n    timeoutMs: commandTimeoutMs()\n  })\n\n  const getVolumesVols = compact(flatten(getVolumesJson).map(parseGetVolumeRow))\n\n  // Don't include any mountpoints that are unhealthy:\n  const unhealthy = uniq(\n    [...psDriveVols, ...getVolumesVols]\n      .filter(ea => ea.ok === false)\n      .map(ea => ea.mountpoint)\n  )\n\n  const healthyMountpoints = sort(\n    uniq([...psDriveVols, ...getVolumesVols].map(ea => ea.mountpoint)).filter(\n      ea => !unhealthy.includes(ea)\n    )\n  )\n\n  logger().info(\"volumeInfoWin()\", {\n    psDriveVols,\n    getVolumesVols,\n    healthyMountpoints,\n    unhealthy\n  })\n\n  const vols = healthyMountpoints.map(mountpoint => ({\n    ...psDriveVols.find(ea => mountpoint === ea.mountpoint)!,\n    ...getVolumesVols.find(ea => mountpoint === ea.mountpoint)!\n  })) as Volume[]\n\n  vols.forEach(vol => {\n    const sad = unhealthy.includes(vol.mountpoint)\n    if (sad) vol.ok = false\n    vol.ignorable = vol.ignorable === true || vol.ok === false\n  })\n\n  return vols\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isEmpty } from \"../../fe/Array\"\nimport { mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { map } from \"../../fe/Maybe\"\nimport { opt } from \"../../fe/Opt\"\nimport { mkLogger } from \"../Logger\"\nimport { isBillingService } from \"../ServiceNames\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { stripPrefix, stripSuffix } from \"../String\"\nimport { memoizeAsync } from \"../async/MemoizedAsyncFunc\"\nimport { mapAsyncSerial, thenFlatten, thenMap } from \"../async/Promise\"\nimport { thenOrTimeout } from \"../async/ThenOrTimeout\"\nimport { stdoutResult_, stdout_ } from \"../child/ChildProcess\"\nimport { BaseFile } from \"../fs/BaseFile\"\nimport { pathTo } from \"../fs/PathTo\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { isLinux } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { setupVolumeTTL } from \"./LazyFsAsync\"\nimport { readProcMounts } from \"./MountpointsPosix\"\nimport { commandTimeoutMs, mountpointsTtlMs } from \"./VolumeTtls\"\n\nexport const isGioSupported = lazy(async () => {\n  if (\n    !isLinux ||\n    isDocker() ||\n    isBillingService() ||\n    null == (await pathTo({ tool: GioCommand }))\n  ) {\n    return false\n  }\n\n  try {\n    const result = await stdoutResult_(GioCommand, [\"version\"], {\n      timeoutMs: commandTimeoutMs(),\n      ignoreStderr: true\n    })\n    return result.code === 0\n  } catch (err) {\n    return false\n  }\n})\n\nexport const GioCommand = \"gio\"\nexport const GioMountMonitorArgs = [\"mount\", \"--monitor\", \"--anonymous\"]\n\nconst logger = lazy(() => mkLogger(\"volumes.Gio\"))\n\n/**\n * The `gio` subsystem may not be installed, in which case, we have to poll\n * the results of `df`.\n *\n * These volumes won't be in a `df` list.\n */\n// DO NOT USE lazyFsAsync here, as mountpoints() uses this function!\nexport const gioVolumes = lazy(async () =>\n  thenOrTimeout(\n    async () => {\n      if (!(await isGioSupported())) return\n      // We need to find the FUSE mountpoints that gvfs is using:\n      const fuseDirs = await gvfsFuseDirectories()\n      if (isEmpty(fuseDirs)) return []\n      logger().info(\"gioVolumes()\", { fuseDirs })\n      return mapAsyncSerial({\n        arr: fuseDirs,\n        name: \"gioVolumes\",\n        timeoutMs: mountpointsTtlMs(),\n        f: async dir => {\n          // df doesn't return the correct mountpoint, at least on Ubuntu:\n\n          // $ df -kP '/run/user/1000/gvfs/smb-share:server=mini.local,share=shared%20folder'\n          // Filesystem     1024-blocks     Used Available Capacity Mounted on\n          // gvfsd-fuse       195296444 67824088 127472356      35% /run/user/1000/gvfs\n\n          const vols = await dfPosixRaw({\n            paths: [dir.nativePath]\n          })\n\n          const vol = vols?.[0]\n\n          if (vol == null || !dir.nativePath.startsWith(vol.mountpoint)) {\n            logger().warn(\"df failed to find \" + dir, { vols })\n            return\n          }\n          // fix the mountpoint to be the correct full path:\n          vol.mountpoint = dir.nativePath\n          const remoteInfo = await getRemoteInfo(vol.mountpoint)\n          return remoteInfo == null\n            ? vol\n            : { remote: true, ...vol, ...remoteInfo }\n        }\n      })\n    },\n    mountpointsTtlMs(),\n    () =>\n      logger().warn(\"gioVolumes(): timed out after \" + mountpointsTtlMs + \"ms\"),\n    result =>\n      logger().log(isEmpty(result) ? \"debug\" : \"info\", \"gioVolumes()\", {\n        result\n      })\n  )\n)\n\nlater(() => setupVolumeTTL(gioVolumes))\n\nconst getRemoteInfo = memoizeAsync(\n  async (mountpoint: string) => {\n    try {\n      const lines = (\n        await stdout_(GioCommand, [\"info\", mountpoint], {\n          timeoutMs: commandTimeoutMs()\n        })\n      ).split(/[\\r\\n]+/)\n      const uri = mapNotBlank(\n        lines.find(ea => ea.startsWith(\"uri: \")),\n        ea => new URL(stripPrefix(ea, \"uri: \"))\n      )\n      return {\n        displayName: map(\n          lines.find(ea => ea.startsWith(\"display name: \")),\n          ea => stripPrefix(ea, \"display name: \")\n        ),\n        remoteHost: map(uri, ea => ea.hostname),\n        remoteShare: opt(uri)\n          .flatMap(ea => ea.pathname)\n          .flatMap(ea => stripPrefix(ea, \"/\"))\n          .flatMap(ea => stripSuffix(ea, \"/\"))\n          .flatMap(decodeURIComponent)\n          .filter(notBlank)\n          .get()\n      }\n    } catch (err) {\n      logger().warn(\"getRemoteInfo(): info failed\", { mountpoint, err })\n      return\n    }\n  },\n  {\n    name: \"gio.getRemoteInfo\",\n    maxSize: 255,\n    timeoutMs: ShortCommandTimeoutMs,\n    clearEveryMs: 10 * minuteMs\n  }\n)\n\n// $ grep gvfs /etc/mtab\n// gvfsd-fuse /run/user/1000/gvfs fuse.gvfsd-fuse rw,nosuid,nodev,relatime,user_id=1000,group_id=1000 0 0\n\nasync function gvfsFuseDirectories(): Promise<BaseFile[]> {\n  if (!(await isGioSupported())) {\n    return logger().tap({\n      msg: \"gvfsFuseDirectories(): gio is not supported\",\n      result: []\n    })\n  }\n\n  return logger().tap({\n    msg: \"gvfsFuseDirectories()\",\n    result: await thenFlatten(\n      await thenMap(\n        readProcMounts(\n          undefined,\n          fs => fs === \"gvfsd-fuse\",\n          isReadableDirectory // we want all readable gvfsd-fuse mountpoints\n        ),\n        arr => arr.map(ea => BaseFile.for(ea).clear().childDirectories())\n      )\n    )\n  })\n}\n","import { lazy, MemoizedThunk } from \"../../core/Lazy\"\nimport { retryOnReject } from \"../../fe/AsyncRetry\"\nimport { later } from \"../../fe/Delay\"\nimport { Later } from \"../../fe/Later\"\nimport { time } from \"../async/PromiseTimer\"\nimport { isIgnorableError, isRetriableError } from \"../error/ErrorTypes\"\nimport { ee } from \"../event/EventEmitter\"\nimport { Settings } from \"../settings/Settings\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\n/**\n * lazy-ify `l` with retries\n */\nexport function lazyFsAsync<T>(\n  name: string,\n  l: Later<T>,\n  ttlMs?: number\n): MemoizedThunk<Promise<T>> {\n  const result = lazy(\n    () =>\n      time(\"volumes.\" + name, () =>\n        retryOnReject(l, {\n          maxRetries: 2,\n          timeoutMs: commandTimeoutMs(),\n          errorIsRetriable: err =>\n            isRetriableError(err) !== false && isIgnorableError(err) !== false\n        })\n      ),\n    ttlMs\n  )\n  later(() => {\n    mountpoints.watchLater(() => result.unset())\n    ee().on(\"clearCache\", () => result.unset())\n    if (ttlMs == null) setupVolumeTTL(result)\n  })\n  return result\n}\n\nexport function setupVolumeTTL<T>(l: MemoizedThunk<T>) {\n  l.setTTL(Settings.volumeMetadataTtlMs.valueOrDefault)\n  Settings.volumeMetadataTtlMs.watchLater(ea => l.setTTL(ea))\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { blank, toNotBlank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { gte, toInt } from \"../../fe/Number\"\nimport { parseEnvTokens } from \"../EnvTokens\"\nimport { mkLogger } from \"../Logger\"\nimport { assignMissingPrimitives } from \"../Object\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { sortIgnoreCase } from \"../String\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { isDirectorySync } from \"../fs/StatSync\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { DfVolume, Volume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\n// this is LocalVolumes**Linux** because lsblk and blkid are both from the\n// util-linux package.\n\n/*\n * lsblk --json! I LOVE YOU but I can't have you\n$ lsblk --json --output mountpoint,uuid\n{\n   \"blockdevices\": [\n      {\"mountpoint\": \"/snap/vlc/190\", \"uuid\": null},\n      {\"mountpoint\": null, \"uuid\": null},\n      {\"mountpoint\": \"/home/archive\", \"uuid\": \"5bcd3874-036b-4c80-ad00-258d34f5a097\"},\n      {\"mountpoint\": null, \"uuid\": null},\n      {\"mountpoint\": \"/boot/efi\", \"uuid\": \"32BA-03AC\"},\n      {\"mountpoint\": \"/\", \"uuid\": \"45e94248-490a-4224-b067-3ea48bb062e5\"},\n      {\"mountpoint\": \"[SWAP]\", \"uuid\": \"f8fbf87c-3ba3-4618-b733-74dab6f67cf2\"},\n      {\"mountpoint\": \"/home\", \"uuid\": \"bf676327-0a04-42ff-8088-313fad5082f7\"}\n   ]\n}\n\nbecause --json is fairly new (requires 2.27+). SO SAD.\n\nThis works with debian jessie:\n\n$ lsblk -P --output mountpoint,uuid\nMOUNTPOINT=\"/snap/kde-frameworks-5/26\" UUID=\"\"\nMOUNTPOINT=\"/snap/spotify/16\" UUID=\"\"\nMOUNTPOINT=\"/snap/core/4650\" UUID=\"\"\nMOUNTPOINT=\"/snap/inkscape/4019\" UUID=\"\"\nMOUNTPOINT=\"/snap/spotify/13\" UUID=\"\"\nMOUNTPOINT=\"/snap/vlc/365\" UUID=\"\"\nMOUNTPOINT=\"/snap/core/4917\" UUID=\"\"\nMOUNTPOINT=\"/snap/ffmpeg/13\" UUID=\"\"\nMOUNTPOINT=\"/snap/core/4830\" UUID=\"\"\nMOUNTPOINT=\"/snap/vlc/190\" UUID=\"\"\nMOUNTPOINT=\"/snap/docker/179\" UUID=\"\"\nMOUNTPOINT=\"\" UUID=\"\"\nMOUNTPOINT=\"\" UUID=\"fRFzBv-zld2-4ZJR-zbYw-C3sX-K9pI-KjnP1v\"\nMOUNTPOINT=\"/\" LABEL=\"root\" UUID=\"a7713a75-f1d9-4aba-8cdf-028a9339faee\"\n\n */\n\nconst logger = lazy(() => mkLogger(\"volumes.LocalVolumesLinux\"))\n\nexport async function addLocalVolumeInfoLinux(vols: DfVolume[]) {\n  // this doesn't work on docker (UUID is always blank!)\n  if (isDocker()) return\n  const lsblk = await localVolumes_lsblk_().catch(error =>\n    logger().warn(\"lsblk failed\", { error })\n  )\n  const blkid = await localVolumes_blkid_().catch(error =>\n    logger().warn(\"blkid failed\", { error })\n  )\n  if (lsblk == null && blkid == null) return\n  const mountpoints = sortIgnoreCase(\n    uniq([\n      ...(lsblk ?? []).filter(ea => !ea.ignorable).map(ea => ea.mountpoint),\n      ...vols.map(ea => ea.mountpoint)\n    ])\n  )\n  const result: Volume[] = []\n  for (const mountpoint of mountpoints) {\n    const vol = vols.find(ea => ea.mountpoint === mountpoint)\n    const info = lsblk?.find(ea => ea.mountpoint === mountpoint)\n    const merged = { ...vol, ...info } as Volume\n    const uuid = blkid?.find(ea => ea.filesystem === merged.filesystem)\n    if (uuid != null) assignMissingPrimitives(merged, uuid)\n    if (merged.size == null || merged.available == null) {\n      // this may only be needed within Docker...\n      const df = (\n        await dfPosixRaw({ localsOnly: false, paths: [mountpoint] })\n      )?.[0]\n      logger().info(\"backfilling mountpoint\", { info, vol, df })\n      if (df != null) assignMissingPrimitives(merged, df)\n    }\n    result.push(merged)\n  }\n  return result\n}\n\nconst VersionRe = /lsblk from util-linux ([\\d\\.]+)$/i\n\nconst lsblkVersion = lazy(async () => {\n  const s = await stdout_(\"lsblk\", [\"--version\"], {\n    timeoutMs: ShortCommandTimeoutMs\n  })\n  return VersionRe.exec(s)?.[1]\n    ?.split(\".\")\n    .map(ea => toInt(ea))\n})\n\n// lsblk from ubuntu 18 (bionic), 2.31, doesn't know about fsused and fsavail.\nconst lsblkOutput = lazy(async () => {\n  const cols = [\"mountpoint\", \"label\", \"uuid\"]\n  const v = await lsblkVersion()\n  if (v != null && gte(v[0], 2) && gte(v[1], 34)) {\n    cols.push(\"fsused\", \"fsavail\")\n  }\n  return cols.join(\",\")\n})\n\nexport const localVolumes_lsblk_ = lazyFsAsync(\n  \"localVolumes_lsblk\",\n  async () => {\n    const sout = await stdout_(\n      \"lsblk\",\n      [\"-P\", \"-b\", \"--output\", await lsblkOutput()],\n      {\n        timeoutMs: commandTimeoutMs() // we may need to wait for spinning rust to spin up.\n      }\n    )\n    const result = splitLines(sout)\n      .map(input => parseEnvTokens({ input, lowerCaseKeys: true }))\n      .filter(ea => ea != null)\n      .map(ea => {\n        const ignorable =\n          blank(ea.mountpoint) ||\n          ea.mountpoint.startsWith(\"/snap/\") ||\n          ea.mountpoint === \"/boot\" ||\n          ea.mountpoint.startsWith(\"/boot/\") ||\n          !isDirectorySync(ea.mountpoint) // < docker can bind-mount files. Ignore those.\n\n        const used = toInt(ea.fsused)\n        const available = toInt(ea.fsavail)\n        return {\n          mountpoint: ea.mountpoint,\n          label: ea.label as Maybe<string>,\n          uuid: ea.uuid,\n          ignorable,\n          ...(used != null && available != null\n            ? { used, available, size: used + available }\n            : undefined),\n          // if we're docker, we don't know:\n          ...(!isDocker() ? { remote: false } : undefined)\n        }\n      })\n\n    return logger().tap({\n      msg: \"localVolumes_lsblk\",\n      level: LogLevels.trace,\n      result\n    })\n  },\n  0\n)\n\n/*\n\nfedora HAS TO BE DIFFERENT\n\n$ blkid -o export\n\nDEVNAME=/dev/nvme0n1p5\nUUID=97becbab-9977-45f2-9d8a-8176fda49860\nBLOCK_SIZE=4096\nTYPE=ext4\nPARTUUID=4ed70ef1-bfe5-4049-bec9-e0a73dc764d0\n\nDEVNAME=/dev/nvme0n1p3\nLABEL=Acer\nBLOCK_SIZE=512\nUUID=CC70EE7F70EE6F9E\nTYPE=ntfs\nPARTLABEL=Basic\\ data\\ partition\nPARTUUID=e6666cf5-03dc-440b-b6a0-acc3c909bb93\n\n*/\n\nexport const localVolumes_blkid_ = lazyFsAsync(\n  \"localVolumes_blkid\",\n  async () => {\n    const sout = await stdout_(\"blkid\", [\"-o\", \"export\"], {\n      timeoutMs: commandTimeoutMs() // we may need to wait for spinning rust to spin up.\n    })\n    // these are separated by multiple blank lines:\n    return (\n      sout\n        .split(/\\n\\n+/)\n        .map(input => parseEnvTokens({ input, lowerCaseKeys: false }))\n        // we're going to join on device-name AKA filesystem, so that needs to be a path:\n        .filter(ea => true === ea?.DEVNAME?.includes(\"/\"))\n        .map(ea => ({\n          filesystem: ea.DEVNAME,\n          label: toNotBlank(ea.PARTLABEL) ?? toNotBlank(ea.LABEL),\n          uuid: toNotBlank(ea.PARTUUID) ?? toNotBlank(ea.UUID)\n        }))\n    )\n  },\n  0\n)\n","import { parse } from \"plist\"\nimport { lazy } from \"../../core/Lazy\"\nimport { uniq } from \"../../fe/Array\"\nimport { blank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { mapOr } from \"../../fe/Maybe\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { thenMap } from \"../../fe/Promise\"\nimport { toA } from \"../../fe/toA\"\nimport { mkLogger } from \"../Logger\"\nimport { mapAsyncSerial } from \"../async/Promise\"\nimport { thenOrTimeout } from \"../async/ThenOrTimeout\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { DfVolume, Volume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"volumes.LocalVolumesMac\"))\n\nexport async function addLocalVolumeInfoMac(\n  vols: DfVolume[]\n): PromiseMaybe<Volume[]> {\n  return thenMap(mnt2uuidMac(), uuids =>\n    vols.map(vol =>\n      mapOr(\n        uuids.get(vol.mountpoint),\n        info => ({ ...vol, ...info }),\n        () => vol\n      )\n    )\n  )\n}\n\nexport const mnt2uuidMac = lazyFsAsync(\"mnt2uuidMac\", _mnt2uuidMac, 0)\n\nconst diskRE = /^(\\/dev\\/disk\\d+)/\n\nasync function _mnt2uuidMac() {\n  const l = await dfPosixRaw({ localsOnly: true })\n  const diskDevices = uniq(l.map(ea => ea.filesystem?.match(diskRE)?.[1]))\n  const timeoutMs = Math.round(commandTimeoutMs() / 3)\n\n  const stdouts = await mapAsyncSerial({\n    name: \"_mnt2uuidMac()\",\n    arr: diskDevices,\n    f: async dev =>\n      thenOrTimeout(\n        stdout_(\"diskutil\", [\"list\", \"-plist\", dev], {\n          timeoutMs\n        }),\n        timeoutMs,\n        () => logger().warn(\"Timeout: failed to get disk metadata for \" + dev)\n      )\n  })\n\n  const result = new Map<string, Partial<Volume>>()\n\n  for (const out of stdouts) {\n    try {\n      const p = parse(out) as any\n      for (const vols of toA(p.AllDisksAndPartitions)) {\n        for (const vol of toA(vols.APFSVolumes)) {\n          if (!blank(vol.MountPoint) && !isTrue(vol.OSInternal)) {\n            result.set(vol.MountPoint, {\n              filesystem: \"/dev/\" + vol.DeviceIdentifier,\n              label: vol.VolumeName,\n              size: vol.Size,\n              uuid: vol.VolumeUUID\n            })\n          } else {\n            logger().debug(\"skipping\", vol)\n          }\n        }\n      }\n    } catch (err) {\n      logger().warn(\"Failed to parse diskutil output\", { err, out })\n    }\n  }\n  return result\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { isEmpty, isNotEmpty } from \"../../fe/Array\"\nimport { sort } from \"../../fe/ArraySort\"\nimport { minuteMs, secondMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { rateLimited } from \"../RateLimited\"\nimport { isSyncService } from \"../ServiceNames\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { includesIgnoreCase } from \"../String\"\nimport { end } from \"../async/Endable\"\nimport { awaitAll, filterAsync } from \"../async/Promise\"\nimport { time } from \"../async/PromiseTimer\"\nimport { stdoutResult_ } from \"../child/ChildProcess\"\nimport { mkBasicWatchedChild } from \"../child/WatchedChild\"\nimport { onError } from \"../error/OnError\"\nimport { broadcastEvent_ } from \"../event/BroadcastEvent\"\nimport { ee } from \"../event/EventEmitter\"\nimport { SimpleFileOrString, toNativePath_ } from \"../fs/SimpleFile\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { isLinux, isMac, isWin } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\nimport { mightBeAssetMountpoint } from \"./AssetMountpoint\"\nimport {\n  GioCommand,\n  GioMountMonitorArgs,\n  gioVolumes,\n  isGioSupported\n} from \"./Gio\"\nimport { maybeWatchProcMounts, mountpointsPosix } from \"./MountpointsPosix\"\nimport { mountpointsWin } from \"./MountpointsWin\"\nimport { isExcludedMountpoint } from \"./PosixVolumes\"\nimport {\n  commandTimeoutMs,\n  mountpointsTtlMs,\n  volumeMetadataTtlMs\n} from \"./VolumeTtls\"\n\nconst logger = lazy(() => mkLogger(\"volumes.Mountpoints\"))\n\nfunction unsetMountpoints() {\n  mountpoints.unset()\n  mountpoints_.unset()\n}\n\nfunction setMountpointsTTL(ttl: number = mountpointsTtlMs()) {\n  mountpoints.setTTL(ttl)\n  mountpoints_.setTTL(ttl)\n}\n\nexport const localMountpointSetup = lazy(async () => {\n  // These may be excluded paths:\n  Settings.libraryDir.watchLater(unsetMountpoints)\n  Settings.scanPaths.watchLater(unsetMountpoints)\n\n  // Only do mountpoint monitoring by sync (which cares)\n  if (isSyncService()) {\n    later(async () => {\n      const log = mkLogger(\"Mountpoints.localMountpointSetup()\")\n      if (isMac) {\n        log.info(\"Setting up Mac diskutil activity watcher\")\n        setMountpointsTTL(volumeMetadataTtlMs())\n        diskUtilActivity()\n      }\n      if (isLinux) {\n        await maybeWatchProcMounts()\n        if (await isGioSupported()) {\n          log.info(\"Setting up Linux gio mount monitor\")\n          setMountpointsTTL(volumeMetadataTtlMs())\n          gioMountMonitor()\n        }\n        if (await isFindmntSupported()) {\n          log.info(\"Setting up Linux findmnt mount monitor\")\n          setMountpointsTTL(volumeMetadataTtlMs())\n          findmntPoll()\n        }\n      }\n    }, 30 * secondMs) // let startup go faster. Mountpoint monitoring can wait.\n  } else {\n    await awaitAll([\n      end(diskUtilActivity.clear()),\n      end(gioMountMonitor.clear()),\n      end(findmntPoll.clear())\n    ])\n  }\n})\n\nasync function onMountpointsChanged() {\n  unsetMountpoints()\n  if (isSyncService()) {\n    await broadcastEvent_(\"mountpointsChanged\")\n  }\n}\n\n// Stores the last successful mountpoints() call. No TTL needed.\nconst priorMountpoints = lazy<Maybe<string[]>>(() => undefined)\n\nfunction mountpointsImpl() {\n  return time(\"volumes.Mountpoints\", isWin ? mountpointsWin : mountpointsPosix)\n}\n\nexport const mountpoints_ = lazy(async () => {\n  {\n    const arr = Settings.mountpoints.values\n    if (isNotEmpty(arr)) {\n      return arr\n    }\n  }\n  const arr = await thenOrTimeoutError(mountpointsImpl(), ShortCommandTimeoutMs)\n  if (isEmpty(arr)) {\n    return logger().throw(\"mountpointsImpl() returned empty.\", { fatal: false })\n  } else {\n    const result = sort(\n      await filterAsync({\n        arr,\n        name: \"mountpointFilter\",\n        timeoutMs: commandTimeoutMs(),\n        f: async ea => {\n          if (!mightBeAssetMountpoint(ea) && isExcludedMountpoint(ea))\n            return false\n          if (Settings.validateMountpoints.valueOrDefault) {\n            if (!(await isReadableDirectory(ea))) {\n              logger().warn(`mountpoint ${ea} is not readable`)\n              return false\n            }\n          }\n          return true\n        }\n      })\n    )\n    priorMountpoints.set(result)\n    return result\n  }\n})\n\nexport const mountpoints = lazy(async () => {\n  try {\n    return await mountpoints_()\n  } catch (cause) {\n    onError(\"mountpoints() failed\", { cause })\n    return priorMountpoints()\n  }\n})\n\nexport async function isPosixMountpoint(\n  d: SimpleFileOrString\n): Promise<boolean> {\n  if (isWin) return false\n  const arr = (await mountpoints()) ?? []\n  const np = toNativePath_(d)\n  return isMac // case insensitive, YAY\n    ? includesIgnoreCase(arr, np)\n    : arr.includes(np)\n}\n\n// we don't delete the priorMountpoints because that's a safety backstop\nlater(\n  () => {\n    ee().on(\"clearCache\", () => {\n      gioVolumes.unset()\n      unsetMountpoints()\n    })\n    Settings.mountpointsTtlMs.watch(setMountpointsTTL)\n  },\n  isTest ? 1 : minuteMs // < wait until settings have been read\n)\n\n/**\n * Provides near-real-time updates when volumes change on macs:\n */\nexport const diskUtilActivity = lazy(() =>\n  mkBasicWatchedChild({\n    cmd: \"diskutil\",\n    args: [\"activity\"],\n    onStdout: rateLimited({\n      name: \"diskUtilActivity\",\n      f: () => onMountpointsChanged(),\n      minCallDelayMs: 1.5 * secondMs\n    })\n  })\n)\n\nexport const gioMountMonitor = lazy(() =>\n  mkBasicWatchedChild({\n    cmd: GioCommand,\n    args: GioMountMonitorArgs,\n    onStdout: rateLimited({\n      name: \"gioMountMonitor\",\n      f: () => {\n        gioVolumes.unset()\n        return onMountpointsChanged()\n      },\n      minCallDelayMs: ShortCommandTimeoutMs\n    })\n  })\n)\n\nconst isFindmntSupported = lazy(async () => {\n  if (!isLinux) return false\n  try {\n    const result = await stdoutResult_(\"findmnt\", [\"--version\"], {\n      timeoutMs: commandTimeoutMs(),\n      ignoreStderr: true\n    })\n    return result.code === 0\n  } catch (err) {\n    return false\n  }\n})\n\nexport const findmntPoll = lazy(() =>\n  mkBasicWatchedChild({\n    cmd: \"findmnt\",\n    args: [\"--poll\"],\n    onStdout: rateLimited({\n      name: \"findmntPoll\",\n      f: () => onMountpointsChanged(),\n      minCallDelayMs: ShortCommandTimeoutMs\n    })\n  })\n)\n","import { lazy } from \"../../core/Lazy\"\nimport { compact } from \"../../fe/Array\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { SyncOrAsync } from \"../../fe/SyncOrAsync\"\nimport { allNotBlank } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { isSyncService } from \"../ServiceNames\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { unoctal } from \"../String\"\nimport { filterAsync, thenMap } from \"../async/Promise\"\nimport { FsWatcher } from \"../fs/FsWatcher\"\nimport { readLines_ } from \"../fs/ReadLines\"\nimport { isEmptyFile, isReadableDirectory } from \"../fs/Stat\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { isLinux } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\nimport { dfPosixRaw } from \"./DfPosixRaw\"\nimport { gioVolumes, isGioSupported } from \"./Gio\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { isExcludedMountpoint } from \"./PosixVolumes\"\n\nconst logger = lazy(() => mkLogger(\"volumes.MountpointsPosix\"))\n\nexport async function mountpointsPosix() {\n  const result =\n    (await readProcMounts()) ??\n    (await thenMap(dfPosixRaw({ localsOnly: false }), vols =>\n      vols.map(vol => vol.mountpoint)\n    ))\n  if (result != null && (await isGioSupported())) {\n    try {\n      await thenMap(gioVolumes(), gioVols =>\n        result.push(...gioVols.map(ea => ea.mountpoint))\n      )\n    } catch (err) {\n      // may fail due to timeouts. It's better to have *some* volumes than crash:\n      logger().warn(\"Failed to fetch gio volumes\", err)\n    }\n  }\n  // HEY FUTURE ME: mountpoints() does filtering for us.\n  return result\n}\n\nconst ProcMounts = \"/proc/mounts\"\n\nexport function defaultFilesystemTypePredicate(fsType: string) {\n  return !Settings.excludedFilesystemTypes.has(fsType)\n}\n\nfunction defaultMountpointPredicate(mountpoint: string): SyncOrAsync<boolean> {\n  return (\n    !isExcludedMountpoint(mountpoint) &&\n    (Settings.validateMountpoints.valueOrDefault\n      ? isReadableDirectory(mountpoint)\n      : true)\n  )\n}\n\nexport async function readProcMounts(\n  procMounts = ProcMounts,\n  filesystemTypePredicate = defaultFilesystemTypePredicate,\n  mountpointPredicate = defaultMountpointPredicate\n): PromiseMaybe<string[]> {\n  if (!isLinux) return\n  try {\n    const lines = await readLines_(procMounts)\n    const tokens = compact(\n      lines.map(line => {\n        // this whitespace split is safe because linux will escape whitespace with octals:\n        const [fs, mp] = line.split(/\\s+/)\n        return allNotBlank(fs, mp)\n          ? ([fs, unoctal(mp)] as [string, string])\n          : undefined\n      })\n    )\n    const result = await filterAsync({\n      name: \"mountpoints filter\",\n      arr: tokens,\n      f: async ([fs, mp]) => {\n        const fsOK = filesystemTypePredicate(fs)\n        const mpOK = await mountpointPredicate(mp)\n        return logger().tap({\n          level: LogLevels.trace,\n          msg: \"readProcMounts().predicate filters\",\n          result: fsOK && mpOK,\n          meta: { fs, mp, fsOK, mpOK }\n        })\n      }\n    })\n\n    return logger().tap({\n      msg: \"readProcMounts()\",\n      result: result.map(([, ea]) => ea),\n      meta: {\n        procMounts\n      }\n    })\n  } catch (error) {\n    logger().info(\"Failed to read /proc/mount\", error)\n    return\n  }\n}\n\nexport const maybeWatchProcMounts = lazy(async () =>\n  !isLinux || !isSyncService() || (await isEmptyFile(ProcMounts))\n    ? undefined\n    : new FsWatcher({\n        target: ProcMounts,\n        maxPollIntervalMs: minuteMs,\n        onChange: () => {\n          logger().info(\"detected change in \" + ProcMounts)\n          mountpoints.unset()\n        },\n        initialDelayMs: ShortCommandTimeoutMs,\n        sha: true\n      })\n)\n","import { lazy } from \"../../core/Lazy\"\nimport { secondMs } from \"../../fe/Date\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { mkLogger } from \"../Logger\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { sortIgnoreCase } from \"../String\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { fsutil } from \"../fs/PathTo\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\n\nconst logger = lazy(() => mkLogger(\"volumes.MountpointsWin\"))\n\n// we really do want to lazy() this: it's used both by mountpoints() and dfWin()\nexport const mountpointsWin = lazy(async () => {\n  try {\n    // powershell should be easier on the system, as it doesn't involve a fork\n    return await thenOrTimeoutError(mountpointsWinPwsh(), ShortCommandTimeoutMs)\n  } catch (error) {\n    logger().warn(\"mountpointsWinPwsh()\", { error })\n    return mountpointsWinFsutil()\n  }\n})\n\nexport async function mountpointsWinPwsh() {\n  // Note that Get-PSDrive can be quite slow if you don't specificy just the\n  // Root -Property, but seems to be quick (~10ms) when asking just for Root.\n  const arr = await PowerShell.instance().executeJsonToA(\n    \"Get-PSDrive -PSProvider FileSystem | Select-Object -Property Root\"\n  )\n  // [{\"Root\":\"C:\\\\\"},{\"Root\":\"D:\\\\\"},{\"Root\":\"Q:\\\\\"},{\"Root\":\"R:\\\\\"}]\n  return arr == null\n    ? undefined\n    : sortIgnoreCase(arr.map(ea => ea.Root as string))\n}\n\nconst driveletterRe = /\\s([A-Z]:\\\\)/g\n\n/**\n * fsutil-based list of all currently active drive letters\n *\n * @return [\"C:\\\", \"D:\\\", ...]\n */\nexport async function mountpointsWinFsutil() {\n  // Note that `fsutil fsinfo drives` seems to be about an order of magnitude\n  // faster than ` wmic logicaldisk get caption`.\n\n  // Example output: Drives: C:\\ H:\\ I:\\\"\"\n  const sout = await stdout_(fsutil(), [\"fsinfo\", \"drives\"], {\n    timeoutMs: 10 * secondMs\n  })\n  const result: string[] = []\n  let match: RegExpExecArray | null\n  while ((match = driveletterRe.exec(sout)) !== null) {\n    result.push(match[1])\n  }\n  return sortIgnoreCase(result)\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { mkLogger } from \"../Logger\"\nimport { memoize } from \"../MemoizedFunc\"\nimport { isTest } from \"../NodeEnv\"\nimport { toPathnames } from \"../fs/Path\"\nimport { isLinux, isPosix, isWin } from \"../platform/Platform\"\nimport { Settings } from \"../settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"volumes.PosixVolumes\"))\n\n// https://www.pathname.com/fhs/pub/fhs-2.3.html\n\n// NOTE: DO NOT EXCLUDE \"/dev/mapper/ubuntu--vg-root\", that may be the root (and\n// only!) filesystem\n\n// rootfs             8064632   738996    7325636      10% /\n// devtmpfs           8064644        0    8064644       0% /dev\n// tmpfs              8139340        0    8139340       0% /dev/shm\n// cgroup_root           8192        0       8192       0% /sys/fs/cgroup\n// tmpfs               131072      236     130836       1% /var/log\n// /dev/sda1         15000224   257824   14742400       2% /boot\n// overlay            8064632   738996    7325636      10% /lib/modules\n// overlay            8064632   738996    7325636      10% /lib/firmware\n// tmpfs                 1024        0       1024       0% /mnt/disks\n// tmpfs                 1024        0       1024       0% /mnt/remotes\n// /dev/md1        9764349900 68111704 9696238196       1% /mnt/disk1\n// /dev/sdc1        244197560 22023600  222164096      10% /mnt/cache\n// shfs            9764349900 68111704 9696238196       1% /mnt/user0\n// shfs            9764349900 68111704 9696238196       1% /mnt/user\n// /dev/loop2        20971520     3960   20429576       1% /var/lib/docker\n// /dev/loop3         1048576     3852     926164       1% /etc/libvirt\n\n// Filesystem              1024-blocks       Used  Available Capacity Mounted on\n// udev                       32857360          0   32857360       0% /dev\n// tmpfs                       6584180       4908    6579272       1% /run\n// /dev/nvme0n1p2            479152840  321307948  133435500      71% /\n// tmpfs                      32920884     212868   32708016       1% /dev/shm\n// tmpfs                          5120          4       5116       1% /run/lock\n// tmpfs                      32920884          0   32920884       0% /sys/fs/cgroup\n// /dev/loop1                    56832      56832          0     100% /snap/core18/2066\n// /dev/loop2                    56832      56832          0     100% /snap/core18/2074\n// /dev/loop3                   101760     101760          0     100% /snap/core/11316\n// /dev/loop4                    66688      66688          0     100% /snap/gtk-common-themes/1515\n// /dev/nvme1n1              960381672  786958628  124568532      87% /mnt/c24fdf53-fc92-43ae-a1a5-9342d067b4a5\n// /dev/loop5                    52352      52352          0     100% /snap/snap-store/518\n// /dev/loop0                   101760     101760          0     100% /snap/core/11187\n// /dev/loop6                    66432      66432          0     100% /snap/gtk-common-themes/1514\n// /dev/loop8                   166784     166784          0     100% /snap/gnome-3-28-1804/145\n// /dev/loop9                   183936     183936          0     100% /snap/spotify/46\n// /dev/loop10                  259200     259200          0     100% /snap/dbeaver-ce/136\n// /dev/loop11                  224256     224256          0     100% /snap/gnome-3-34-1804/72\n// /dev/loop12                   89344      89344          0     100% /snap/sqlitebrowser/3233\n// /dev/loop13                   33152      33152          0     100% /snap/snapd/12159\n// /dev/loop14                   52224      52224          0     100% /snap/snap-store/547\n// /dev/loop15                  224256     224256          0     100% /snap/gnome-3-34-1804/66\n// /dev/loop16                  183808     183808          0     100% /snap/spotify/45\n// /dev/loop17                   33152      33152          0     100% /snap/snapd/12398\n// /dev/nvme0n1p1               523248       8036     515212       2% /boot/efi\n// 10.1.1.9:/volume1/homes  7496824320 4121892736 3374931584      55% /rusty2-homes-nfs\n// //10.1.1.9/homes         7496824260 4121892788 3374931472      55% /media/mrm/rusty2-home\n// //10.1.1.7/homes         5809423160 4979412148  830011012      86% /media/mrm/rusty-home\n// tmpfs                       6584176          8    6584168       1% /run/user/1002\n// tmpfs                       6584176         20    6584156       1% /run/user/125\n// tmpfs                       6584176       1528    6582648       1% /run/user/1000\n// /dev/loop18                  168832     168832          0     100% /snap/gnome-3-28-1804/161\n// /dev/loop19                  259200     259200          0     100% /snap/dbeaver-ce/137\n\nexport function isExcludedFilesystem(filesystem: string) {\n  if (blank(filesystem)) return false\n  return isPosix && Settings.excludedFilesystemTypes.values.includes(filesystem)\n}\n\nconst LinuxDevMapperRE =\n  isLinux || isTest ? /^\\/dev(?!\\/mapper)(?:\\/|\\/?$)/i : undefined\n\nconst LinuxVarSnapRE = isLinux || isTest ? /^\\/var\\/snap(?:$|\\/)/ : undefined\n\nconst LinuxRunUserGVFSRE =\n  isLinux || isTest ? /^\\/run\\/user\\/\\d+\\/gvfs\\/.+?$/i : undefined\n\nconst LinuxDockerRE = isLinux || isTest ? /^\\/var\\/lib\\// : undefined\n\n// Avoid stuff like\n\n// mrm@m1 % mount | grep /System\n// /dev/disk3s6 on /System/Volumes/VM (apfs, local, noexec, journaled, noatime, nobrowse)\n// /dev/disk3s2 on /System/Volumes/Preboot (apfs, local, journaled, nobrowse)\n// /dev/disk3s4 on /System/Volumes/Update (apfs, local, journaled, nobrowse)\n// /dev/disk1s2 on /System/Volumes/xarts (apfs, local, noexec, journaled, noatime, nobrowse)\n// /dev/disk1s1 on /System/Volumes/iSCPreboot (apfs, local, journaled, nobrowse)\n// /dev/disk1s3 on /System/Volumes/Hardware (apfs, local, journaled, nobrowse)\n// /dev/disk3s1 on /System/Volumes/Data (apfs, local, journaled, nobrowse, protect)\n// map auto_home on /System/Volumes/Data/home (autofs, automounted, nobrowse)\n\n// mrm@mini ~ % mount | grep System\n// /dev/disk6s4 on /System/Volumes/VM (apfs, local, noexec, journaled, noatime, nobrowse)\n// /dev/disk6s2 on /System/Volumes/Preboot (apfs, local, journaled, nobrowse)\n// /dev/disk6s6 on /System/Volumes/Update (apfs, local, journaled, nobrowse)\n// /dev/disk6s1 on /System/Volumes/Data (apfs, local, journaled, nobrowse)\n// map auto_home on /System/Volumes/Data/home (autofs, automounted, nobrowse)\n\n// DO NOT AVOID \"/System/Volumes/Data\": that's where people's home dir is!\n\n// (memoized mostly to avoid all the duplicate log messages)\nexport const isExcludedMountpoint = memoize(\n  (mountpoint: Maybe<string>) => {\n    if (isWin) return false // no excluded drive letters\n    const why = whyExcludedMountpoint(mountpoint)\n    return logger().tap({\n      msg: \"isExcludedMountpoint\",\n      result: why != null,\n      meta: { mountpoint, why }\n    })\n  },\n  { maxSize: 512 }\n)\n\nexport function whyExcludedMountpoint(\n  mountpoint: Maybe<string>\n): Maybe<string> {\n  if (blank(mountpoint)) {\n    return \"blank\"\n  }\n  const arr = toPathnames(mountpoint)\n  const root = arr[0]\n  const basename = arr[arr.length - 1]\n  if (Settings.excludedRootDirectories.has(root)) {\n    return \"ExcludedRootDirectory\"\n  }\n  if (Settings.excludedMountpointPaths.has(mountpoint)) {\n    return \"excludedMountpointPaths\"\n  }\n  if (Settings.excludedMountpointBasenames.has(basename)) {\n    return \"excludedMountpointBasenames\"\n  }\n  if (LinuxDevMapperRE?.test(mountpoint) === true) {\n    return \"LinuxDevMapperRE\"\n  }\n  if (LinuxVarSnapRE?.test(mountpoint) === true) {\n    return \"LinuxVarSnapRE\"\n  }\n  if (root === \"run\" && LinuxRunUserGVFSRE?.test(mountpoint) === false) {\n    return \"LinuxRunRE\"\n  }\n  if (LinuxDockerRE?.test(mountpoint) === true) {\n    return \"LinuxDockerRE\"\n  }\n  return\n}\n","import { blank } from \"../../fe/Blank\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { toS } from \"../../fe/toS\"\nimport { RemoteVolume, Volume } from \"./Volume\"\n\n/* \n\non mac el capitan for SMB/CIFS:\n\n//mrm@rusty2._afpovertcp._tcp.local/home  7496824260 4120551220 3376273040    55%    /Volumes/home\n//GUEST:@unraid._smb._tcp.local/system    9764349900   68111664 9696238236     1%    /Volumes/system\n\n//mrm@rusty._smb._tcp.local/homes ...\n//mrm@rusty.local/photos ...\n//mrm@rusty/web ...\n\non ubuntu 18:\n\n//10.1.1.7/homes ...\n\nWith NFS:\n\n10.1.1.9:/volume1/homes\n\n192.168.1.10:/opt/Media ...\n\n*/\n\nconst smbRe =\n  /^\\/\\/(?:.+@)?(.+?)(?:\\._(?:smb|afs|nfs|tcp|afpovertcp)){0,2}(\\.local)?\\/(.+)$/i\n\n// should also handle sshfs:\nexport const nfsRe = /^([^:\\s]+):(\\/.*)$/\n\nexport function addRemoteVolumeInfoPosix(volumes: Volume[]): Volume[] {\n  for (const vol of volumes) {\n    if (vol.remote === true) {\n      const result = parseRemote(vol.filesystem)\n      if (result != null) {\n        vol.remoteHost = result.remoteHost\n        vol.remoteShare = result.remoteShare\n      }\n    }\n  }\n  return volumes\n}\n\nexport function parseRemote(filesystem: Maybe<string>): Maybe<RemoteVolume> {\n  if (blank(filesystem)) return\n  const smb = smbRe.exec(filesystem)\n  if (smb != null) {\n    const remoteHost = smb[1] + toS(smb[2])\n    const remoteShare = smb[3]\n    if (!blank(remoteHost) && !blank(remoteShare)) {\n      return {\n        remoteHost,\n        remoteShare\n      }\n    }\n  }\n  const nfs = nfsRe.exec(filesystem)\n  if (nfs != null) {\n    const remoteHost = nfs[1]\n    const remoteShare = nfs[2]\n    if (!blank(remoteHost) && !blank(remoteShare)) {\n      return {\n        remoteHost,\n        remoteShare\n      }\n    }\n  }\n  return\n}\n","import { compact } from \"../../fe/Array\"\nimport { blank, notBlank } from \"../../fe/Blank\"\nimport { secondMs } from \"../../fe/Date\"\nimport { map, orElse } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { opt } from \"../../fe/Opt\"\nimport { toS } from \"../../fe/toS\"\nimport { thenMap } from \"../async/Promise\"\nimport { stdout_ } from \"../child/ChildProcess\"\nimport { parseFixed } from \"../Fixed\"\nimport { wmic } from \"../fs/PathTo\"\nimport { toMap } from \"../Map\"\nimport { Try } from \"../Object\"\nimport { isWin } from \"../platform/Platform\"\nimport { PowerShell } from \"../pwsh/PowerShell\"\nimport { ensureSuffix } from \"../String\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { Volume } from \"./Volume\"\n\n/*\n$ wmic netuse get LocalName, RemoteName, COnnectionState, Status\nConnectionState  LocalName  RemoteName        Status\nConnected        H:         \\\\10.1.1.7\\homes  OK\nDisconnected     I:         \\\\10.1.1.3\\mrm    Unavailable\n*/\n\nexport async function addRemoteVolumeInfoWin(\n  volumes: Volume[],\n  netInfos?: NetInfo[]\n): Promise<Volume[]> {\n  if (!isWin) throw new Error(\"wtf\")\n  await thenMap(\n    orElse<NetInfo[] | PromiseMaybe<NetInfo[]>>(netInfos, () => netInfoWin()),\n    arr => {\n      const m = toMap(arr, ea => [ea.mountpoint, ea])\n      volumes.forEach(vol => {\n        map(m.get(vol.mountpoint), netInfo => {\n          vol.remote = true\n          vol.remoteHost = netInfo.host\n          vol.remoteShare = netInfo.share\n          vol.ok = netInfo.ok\n        })\n      })\n    }\n  )\n  return volumes\n}\n\nconst columns = [\"LocalName\", \"RemoteName\", \"Status\"]\nconst netuseCmd = [\"NETUSE\", \"get\", columns.join(\",\")]\n\nexport interface NetInfo {\n  /** \"H:\\\" */\n  mountpoint: string\n  /** probably the IP address of the remote share */\n  host: string\n  /** the name of the share */\n  share: string\n  /** true if the Status of the share is \"OK\" */\n  ok: boolean\n}\n\nconst UNC_RE = /^\\\\\\\\(.+?)\\\\(.+)$/\nconst driveLetterRE = /^[a-z]:\\\\?$/i\n\nexport const NetInfoCmd = `Get-WmiObject Win32_NetworkConnection | Select-Object -Property LocalName,RemoteName,ConnectionState,Status`\n\nasync function _netInfoWin(): Promise<NetInfo[]> {\n  const result = await PowerShell.instance().executeJsonToA(NetInfoCmd)\n  return result == null\n    ? _netInfoWinWmic()\n    : compact(\n        result\n          .filter((ea: any) => notBlank(ea.LocalName)) // can't do anything if we don't have a localname.\n          .map((ea: any) =>\n            map(parseRemoteName(ea.RemoteName), ({ host, share }) =>\n              map(driveLetterRE.exec(toS(ea.LocalName)), driveLetter => ({\n                mountpoint: ensureSuffix(driveLetter[0], \"\\\\\"),\n                host,\n                share,\n                ok: ea.Status === \"OK\" && ea.ConnectionState === \"Connected\"\n              }))\n            )\n          )\n      )\n}\n\nexport function parseRemoteName(\n  remoteName: string\n): Maybe<{ host: string; share: string }> {\n  if (blank(remoteName)) return\n\n  return opt(remoteName)\n    .flatMap(ea => UNC_RE.exec(ea))\n    .map(ea => ({\n      host: ea[1],\n      share: ea[2]\n    }))\n    .orElse(() =>\n      opt(remoteName)\n        .flatMap(url => Try(() => new URL(url)))\n        .filter(url => notBlank(url.hostname))\n        .map(url => ({\n          host: url.hostname,\n          share: opt(url.pathname)\n            .filter(notBlank)\n            .getOrElse(() => \"/\")\n        }))\n    )\n    .get()\n}\n\nexport async function _netInfoWinWmic(): Promise<NetInfo[]> {\n  const cmd = wmic()\n  const sout = await stdout_(cmd, netuseCmd, { timeoutMs: 15 * secondMs })\n  const parsed = parseFixed(columns, sout)\n  return compact(\n    parsed.map((ea: any) =>\n      map(UNC_RE.exec(toS(ea.RemoteName)), remoteName =>\n        map(driveLetterRE.exec(toS(ea.LocalName)), driveLetter => ({\n          mountpoint: ensureSuffix(driveLetter[0], \"\\\\\"),\n          host: remoteName[1],\n          share: remoteName[2],\n          ok: ea.Status === \"OK\"\n        }))\n      )\n    )\n  )\n}\n\nconst cacheForever = 0\nconst netInfoWin = lazyFsAsync(\"netInfoWin\", _netInfoWin, cacheForever)\n","import { secondMs } from \"../../fe/Date\"\nimport { MiB } from \"../../fe/Units\"\nimport { Settings } from \"../settings/Settings\"\n\n/**\n * This needs to be short enough to pick up when drives are inserted or\n * ejected in reasonable-ish time, but not so often it breaks the OS\n */\nexport function mountpointsTtlMs() {\n  return Settings.mountpointsTtlMs.valueOrDefault\n}\n\n/**\n * Update frequently enough to detect substantive changes in available bytes\n */\nexport function volumeMetadataTtlMs() {\n  return Settings.volumeMetadataTtlMs.valueOrDefault\n}\n\n// TODO: MOVE to .. (this isn't a volume-specific thing!)\n/**\n * How long the `df` or `wmic` should be allowed to run before timing out.\n * Note that external hard drives can take longer than 10 seconds to spin\n * up...\n */\nexport function commandTimeoutMs() {\n  return Settings.commandTimeoutMs.valueOrDefault\n}\n\n/**\n * The worst-expected transfer rate for file I/O:\n */\nexport const MinIoRate = MiB / secondMs\n","import { basename } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { isFalse, isTrue } from \"../../fe/Boolean\"\nimport { later } from \"../../fe/Delay\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { thenOrOnTimeout, thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { FifoCacheAsync } from \"../FifoCacheAsync\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { stripComments } from \"../String\"\nimport { withBoundedConcurrency } from \"../async/Promises\"\nimport { ee } from \"../event/EventEmitter\"\nimport { splitLines } from \"../fs/CRLF\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { Volume } from \"./Volume\"\nimport { commandTimeoutMs } from \"./VolumeTtls\"\nimport { writeVolumeUuid } from \"./WriteVolumeUuid\"\n\nconst logger = lazy(() => mkLogger(\"volumes.VolumeUUID\"))\n\n// This isn't a TTLMap because we don't expect to have bajillions of\n// mountpoints, they don't expire, and we force-clear it whenever mountpoints\n// change.\nconst cache = lazy(\n  () =>\n    new FifoCacheAsync<Maybe<string>>({\n      name: \"volumes.VolumeUUID\",\n      maxSize: 500,\n      timeoutMs: commandTimeoutMs()\n    })\n)\n\nlater(() => {\n  ee().on(\"clearCache\", () => cache.clear())\n  mountpoints.watchLater(() => cache.clear())\n})\n\nexport async function addVolumeUUIDs(vols: Volume[]): Promise<void> {\n  await withBoundedConcurrency({\n    name: \"addVolumeUUIDs\",\n    laters: vols.map(\n      ea => () =>\n        thenOrOnTimeout(addVolumeUUID(ea), commandTimeoutMs(), () =>\n          logger().warn(\"addVolumeUUIDs(\" + ea.mountpoint + \") timed out\", {\n            timeoutMs: commandTimeoutMs()\n          })\n        )\n    )\n  })\n}\n\nexport function volumeUuidNotExpected(v: Volume) {\n  return (\n    isTrue(v.ignorable) ||\n    (isDocker() && v.mountpoint === \"/\") ||\n    (isTest && basename(v.mountpoint) === \"node_modules\")\n  )\n}\n\n/**\n * Prefer the UUID stored on the mountpoint/.uuid.\n *\n * If that cannot be read, use the UUID already on the volume.\n *\n * If that is missing/timesout, use the last-set UUID for that volume, stored in\n * APP_DATA/mountpoint-uuids.json\n */\nasync function addVolumeUUID(v: Volume): Promise<void> {\n  if (volumeUuidNotExpected(v)) {\n    // Don't bother reading the .uuid.\n    return\n  }\n\n  if (isFalse(v.ok)) {\n    // We don't want to touch this filesystem, it may hang!\n    return\n  }\n\n  const uuid = await cache().getOrSetAsync(v.mountpoint, async () =>\n    readVolumeUUID(v)\n  )\n  if (uuid != null) v.uuid = uuid\n}\n\nexport function toVolumeUUID(s: Maybe<string>): Maybe<string> {\n  if (blank(s)) return\n  const clean = stripComments(s)\n    .replace(/[^0-9a-z-]+/gi, \"\")\n    .trim()\n    .replace(/^-|-$/g, \"\")\n  // reject 000-00000-00000\n  return clean.length <= 8 || /^[0-]*$/i.test(clean) || /^[F-]*$/i.test(clean)\n    ? undefined\n    : clean\n}\n\nexport async function readUuidFile_(file: PosixFile) {\n  const buf = await thenOrTimeoutError(file.readTextFile_(), commandTimeoutMs())\n  // return the first line, stripped of comments, that contains something uuid-esque:\n  for (const line of splitLines(buf)) {\n    const result = toVolumeUUID(line)\n    if (result != null) return result\n  }\n  throw new Error(\"No UUID found in \" + file)\n}\n\n/**\n * If the vol UUID file exists, use that instead of the device UUID.\n */\nexport async function readVolumeUUID(v: Volume): PromiseMaybe<string> {\n  // TODO: if we can't find a .uuid in the mountpoint, should we look at a, then\n  // b, then c for a .uuid for `mountpoint/a/b/c/file.jpg`?\n\n  if (Settings.readVolumeUuidFiles.valueOrDefault) {\n    for (const subpath of Settings.volumeUuidFilePaths.values) {\n      const volUuidFile = PosixFile.for(v.mountpoint).join(subpath)\n\n      const savedUUID = await readUuidFile_(volUuidFile).catch(error =>\n        logger().info(\"Failed to read \" + volUuidFile, { error })\n      )\n      if (savedUUID != null) {\n        return logger().tap({\n          msg: \"Serving UUID from \" + subpath,\n          result: savedUUID,\n          meta: {\n            mountpoint: v.mountpoint\n          }\n        })\n      }\n    }\n  }\n\n  // Don't try to write to the root directory:\n  if (v.mountpoint === \"/\") return v.uuid\n\n  if (Settings.writeVolumeUuidFiles.valueOrDefault) {\n    const uuid = await writeVolumeUuid(v)\n    if (uuid != null) return uuid\n  }\n\n  // Only return the hardware uuid if we couldn't persist the safeUUID for later\n  return v.uuid\n}\n","import _os from \"os\"\nimport _path from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport {\n  commonPrefixLength,\n  compact,\n  compactBlanks,\n  eqlPrimitiveUnordered,\n  isEmpty,\n  isNotEmpty,\n  uniqBy\n} from \"../../fe/Array\"\nimport { sortBy } from \"../../fe/ArraySort\"\nimport { blank, mapNotBlank, notBlank } from \"../../fe/Blank\"\nimport { isTrue } from \"../../fe/Boolean\"\nimport { dayMs, minuteMs, secondMs } from \"../../fe/Date\"\nimport { delay, later } from \"../../fe/Delay\"\nimport { eql } from \"../../fe/Eql\"\nimport { Latch } from \"../../fe/Latch\"\nimport { map } from \"../../fe/Maybe\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { clamp, gt, gt0, toInt } from \"../../fe/Number\"\nimport { opt } from \"../../fe/Opt\"\nimport { thenOrTimeoutError } from \"../../fe/ThenOrTimeout\"\nimport { tol } from \"../../fe/Thunk\"\nimport { toA } from \"../../fe/toA\"\nimport { greatestBy } from \"../Array\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { isSyncService, isWorkerService } from \"../ServiceNames\"\nimport { shim0 } from \"../Shim0\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport {\n  ensureSuffix,\n  equalsIgnoreCase,\n  sortByCaseInsensitive\n} from \"../String\"\nimport { asyncFind, mapAsync, thenFlatten, thenMap } from \"../async/Promise\"\nimport { thenOrTimeout } from \"../async/ThenOrTimeout\"\nimport { cacheDir } from \"../dir/CacheDir\"\nimport { libraryDataDir } from \"../dir/LibraryDir\"\nimport { getDevEnvFlag } from \"../env/DevEnvFlags\"\nimport { env } from \"../env/Env\"\nimport { getEnv } from \"../env/GetEnv\"\nimport { onError } from \"../error/OnError\"\nimport { toWrappedError } from \"../error/WrappedError\"\nimport { ee } from \"../event/EventEmitter\"\nimport { actualPath } from \"../fs/ActualPath\"\nimport { withLock_ } from \"../fs/FsLock\"\nimport { bestMountpointForDir, containedByNativePath } from \"../fs/Path\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { SimpleFile, toNativePath_ } from \"../fs/SimpleFile\"\nimport { isReadableDirectory } from \"../fs/Stat\"\nimport { cleanHostname } from \"../net/Hostname\"\nimport { friendlyname } from \"../net/nslookup\"\nimport { isMac, isWin } from \"../platform/Platform\"\nimport { isDocker } from \"../platform/isDocker\"\nimport { Settings } from \"../settings/Settings\"\nimport { volsha } from \"../uri/volsha\"\nimport { dfPosix } from \"./DfPosix\"\nimport { dfWin } from \"./DfWin\"\nimport { lazyFsAsync } from \"./LazyFsAsync\"\nimport { addLocalVolumeInfoLinux } from \"./LocalVolumesLinux\"\nimport { addLocalVolumeInfoMac } from \"./LocalVolumesMac\"\nimport { mountpoints } from \"./Mountpoints\"\nimport { addRemoteVolumeInfoPosix } from \"./RemoteVolumesPosix\"\nimport { addRemoteVolumeInfoWin } from \"./RemoteVolumesWin\"\nimport { Volume } from \"./Volume\"\nimport { commandTimeoutMs, mountpointsTtlMs } from \"./VolumeTtls\"\nimport { addVolumeUUIDs } from \"./VolumeUUID\"\n\nconst logger = lazy(() => mkLogger(\"volumes.Volumes\"))\n\n// volumes() is the public method, which does caching and timeouts via lazyFsAsync\n\n// volumesImpl is the BiImpl which may delegate to _volumesImpl or an RPC call.\n\nconst os: string = _os.platform()\n\nexport interface CachedVolume extends Volume {\n  os: string\n  /**\n   * If cached, what hostname extracted this volume?\n   */\n  fromHost?: string\n}\n\nconst mount2vol = new Map<string, Volume>()\nconst mount2volsha = new Map<string, string>()\nconst volsha2vol = new Map<string, Volume>()\n\nexport const mountpointToVolsha = lazyFsAsync(\n  \"mountpointToVolsha\",\n  async () => {\n    await loadCachedVolumes()\n    return mount2volsha\n  }\n)\n\nfunction replaceIfNewer(\n  key: Maybe<string>,\n  vol: Volume,\n  cache: Map<string, Volume>\n) {\n  if (blank(key)) return\n  const prior = cache.get(key)\n  if (prior == null || !gt(prior.updatedAt, vol.updatedAt)) {\n    cache.set(key, vol)\n    map(volsha(vol.uuid), ea => mount2volsha.set(vol.mountpoint, ea))\n  }\n}\n\nfunction cacheVolume<T extends Volume>(vol: Maybe<T>) {\n  if (vol == null) return\n  replaceIfNewer(vol.mountpoint, vol, mount2vol)\n  replaceIfNewer(volsha(vol.uuid), vol, volsha2vol)\n  return vol\n}\n\nfunction systemVolumeCacheDir() {\n  return PosixFile.forMaybe(cacheDir())?.join(\"volumes\")\n}\n\nfunction libraryVolumeCacheDir() {\n  return PosixFile.forMaybe(libraryDataDir())?.join(\"volumes\")\n}\n\nfunction volumeCacheDirs() {\n  return compact([systemVolumeCacheDir(), libraryVolumeCacheDir()])\n}\n\nasync function readCachedVolumes() {\n  const arr = await mapAsync({\n    name: \"readCachedVolumes\",\n    arr: thenFlatten(\n      volumeCacheDirs().map(dir =>\n        dir.childFiles(ea => ea.ext === \".json\" && !ea.base.startsWith(\".\"))\n      )\n    ),\n    f: file => file.readJson<CachedVolume>()\n  })\n  const sorted = sortBy(arr, ea => [ea.mountpoint, -ea.updatedAt!])\n  ;[...sorted.reverse()].forEach(cacheVolume)\n\n  const uniq = uniqBy(sorted, ea => ea.mountpoint).map(ea => ({\n    ...ea,\n    fromCache: true\n  }))\n\n  return sortByCaseInsensitive(uniq, ea => ea.mountpoint)\n}\n\nexport async function clearVolumesCache({\n  deleteFileCache = false\n}: { deleteFileCache?: boolean } = {}) {\n  logger().warn(\"clearVolumesCache()\", { deleteFileCache })\n  volumes.unset()\n  mount2vol.clear()\n  volsha2vol.clear()\n  loadCachedVolumes.unset()\n  cachedVolumes.unset()\n  if (deleteFileCache) {\n    await Promise.all(volumeCacheDirs().map(ea => ea.rmrf()))\n  }\n}\n\nconst loadCachedVolumes = lazyFsAsync(\"loadCachedVolumes\", async () => {\n  const vols = await readCachedVolumes()\n  vols?.forEach(cacheVolume)\n  return vols\n})\n\nexport const canWriteVolumesToCache = lazy(() => isSyncService() || isTest)\n\n// only exposed for tests:\nexport const priorWriteVolumesToCacheLatch = lazy<Maybe<Latch>>(() => undefined)\n\nexport async function writeVolumesToCache(arr: Maybe<Volume[]>) {\n  if (arr == null) return\n  const l = new Latch()\n  void priorWriteVolumesToCacheLatch.set(l)\n  const updatedAt = Date.now()\n  const vols: CachedVolume[] = arr\n    .filter(ea => !isTrue(ea.fromCache))\n    .map(ea => ({\n      ...ea,\n      ...(isDocker() ? {} : { fromHost: cleanHostname() }),\n      updatedAt,\n      os\n    }))\n\n  // Figure out what to write once, then write the volumes into both dirs:\n\n  const name2vol = new Map<string, CachedVolume>()\n  for (const vol of vols) {\n    // we need to include both the mountpoint and the volsha: some volumes\n    // won't have UUIDs.\n    for (const key of compactBlanks([\n      volsha(vol.uuid),\n      volsha(vol.mountpoint)\n    ])) {\n      name2vol.set(key, vol)\n    }\n  }\n  const dirs = volumeCacheDirs() // may be empty!\n  for (const dir of dirs) {\n    await withLock_(\n      {\n        file: dir,\n        timeoutMs: ShortCommandTimeoutMs\n      },\n      async () => {\n        for (const [name, vol] of name2vol.entries()) {\n          const f = dir.join(name + \".json\")\n          try {\n            await f.writeJson_(vol)\n          } catch (error) {\n            logger().warn(\n              \"writeVolumesToCache(): failed to write volumes cache\",\n              {\n                error,\n                output: f.nativePath,\n                vol\n              }\n            )\n            await f.unlink()\n          }\n        }\n      }\n    )\n  }\n  logger().debug(\"writeVolumesToCache(): complete.\", {\n    dirs,\n    vol_mountpoints: vols.map(ea => ea.mountpoint)\n  })\n\n  void l.resolve()\n}\n\nexport const cachedVolumes = lazy<Promise<CachedVolume[]>>(async () => {\n  const arr = compact(await loadCachedVolumes())\n  const m = toA(await mountpoints())\n  const withCurrentMountpoints = arr.filter(ea => m.includes(ea.mountpoint))\n  const result = isNotEmpty(withCurrentMountpoints)\n    ? withCurrentMountpoints\n    : arr.filter(ea => os === ea?.os) // Ideally we're only include from current host\n  return logger().tap({\n    msg: \"cachedVolumes()\",\n    level: \"trace\",\n    result: result.filter(ea => !isTrue(ea.ignorable)),\n    meta: {\n      currentMountpoints: m,\n      withCurrentMountpoints: withCurrentMountpoints.map(ea => ea.mountpoint)\n    }\n  })\n}, minuteMs)\n\n// NOT CACHED\nexport async function priorVolumesIfMountpointsMatch() {\n  const prior = await cachedVolumes()\n  // workers should just use priorVolumes():\n  if (isWorkerService() && isNotEmpty(prior)) return prior\n  const m = toA(await mountpoints())\n  const staleAt =\n    Date.now() -\n    clamp(minuteMs, dayMs, Settings.volumeMetadataTtlMs.valueOrDefault)\n  const priorIsStale =\n    Settings.volumeMetadataTtlMs.valueOrDefault === 0\n      ? false\n      : prior.some(ea => !gt(ea.updatedAt, staleAt))\n  const priorIsMissingMountpoints = !eqlPrimitiveUnordered(\n    m,\n    prior.map(ea => ea.mountpoint)\n  )\n  logger().debug(\"priorVolumesIfMountpointsMatch()\", {\n    priorIsStale,\n    priorIsMissingMountpoints\n  })\n  return !priorIsStale && !priorIsMissingMountpoints ? prior : undefined\n}\n\nexport const volumes = lazyFsAsync(\"volumes\", _volumes)\n\nasync function _volumes() {\n  try {\n    const prior = await thenOrTimeout(\n      priorVolumesIfMountpointsMatch(),\n      commandTimeoutMs()\n    )\n    if (prior != null) {\n      logger().debug(\"volumes(): returning prior-cached volumes\")\n      return prior\n    }\n\n    const result = await thenOrTimeoutError(volumesImpl(), commandTimeoutMs())\n    if (isNotEmpty(result)) {\n      return result\n    }\n  } catch (cause) {\n    onError(toWrappedError(\"volumes() failed\", { cause }))\n  }\n  logger().debug(\"fallback: returning priorVolumes()\")\n  return cachedVolumes()\n}\n\n// only exposed so the shim can be set:\nexport const volumesImpl = shim0({ name: \"fs.volumes\", impl: _volumesImpl })\n\n// for emitVolumesChanged():\nlet priorMountpoints: string[]\n\nasync function _volumesImpl(): PromiseMaybe<Volume[]> {\n  // FOR TESTING:\n  if (isTest) {\n    const hangMs = toInt(env().PS_VOLUMES_HANG_MS)\n    if (gt0(hangMs)) {\n      logger().warn(\"PS_VOLUMES_HANG_MS: delay for \" + hangMs)\n      await delay(hangMs, false)\n    }\n\n    const fail = getDevEnvFlag(\"PS_FAIL_VOLUMES\")\n    if (fail) {\n      logger().throw(\"PS_FAIL_VOLUMES\")\n      return\n    }\n  }\n\n  const rawDfVols = await thenOrTimeout(\n    isWin ? dfWin() : dfPosix(),\n    mountpointsTtlMs(),\n    () => onError(\"Timed out getting local volume metadata\")\n  )\n  if (rawDfVols == null) {\n    logger().warn(\"df failed\")\n    return\n  }\n\n  const dfVols = Settings.validateMountpoints.valueOrDefault\n    ? compact(\n        await mapAsync({\n          name: \"nonRpcVolumes: filter unhealthy volumes\",\n          arr: rawDfVols,\n          timeoutMs: commandTimeoutMs(),\n          f: async vol => {\n            try {\n              // Exclude volumes whose mountpoint doesn't exist (like unhealthy gio\n              // mountpoints):\n              const isDir = await isReadableDirectory(vol.mountpoint)\n              if (isDir) {\n                return vol\n              } else {\n                logger().info(\n                  \"validateMountpoints(): \" +\n                    vol.mountpoint +\n                    \" is not a directory\"\n                )\n              }\n            } catch (err) {\n              logger().info(\n                \"validateMountpoints(): failed to stat \" + vol.mountpoint,\n                err\n              )\n            }\n            return\n          }\n        })\n      )\n    : rawDfVols\n\n  // We only need to fetch remote volume information if there are remote volumes\n  // that are missing remoteHost:\n  if (dfVols.some(ea => ea.remote === true && blank((ea as any)?.remoteHost))) {\n    await thenOrTimeout(\n      isWin ? addRemoteVolumeInfoWin(dfVols) : addRemoteVolumeInfoPosix(dfVols),\n      10 * secondMs // < windows NET USE is flaky\n    ).catch(error => {\n      onError(\"Failed to get remote volume info\", { error })\n    })\n  }\n  const vols: Volume[] =\n    (isWin\n      ? dfVols\n      : isMac\n      ? await addLocalVolumeInfoMac(dfVols)\n      : await addLocalVolumeInfoLinux(dfVols)) ?? dfVols\n\n  for (const vol of vols) {\n    vol.updatedAt ??= Date.now()\n    // force boolean:\n    vol.remote = isTrue(vol.remote)\n    // undefine any blank labels:\n    if (blank(vol.label)) delete vol.label\n    // Fix hostnames:\n    mapNotBlank(\n      vol.remoteHost,\n      // remote DNS hosts cannot be case sensitive\n      ea => (vol.remoteHost = ea.toLowerCase().normalize().trim())\n    )\n  }\n\n  await addVolumeUUIDs(vols)\n\n  const sorted = sortBy(vols, ea => ea.mountpoint)\n\n  logger().debug(\"_volumes(): final result\", { sorted })\n\n  if (priorMountpoints != null && !eql(priorMountpoints, sorted)) {\n    later(() => ee().emit(\"volumesChanged\"))\n  }\n\n  sorted.forEach(cacheVolume)\n\n  await writeVolumesToCache(sorted)\n\n  return Object.freeze(sorted) as Volume[]\n}\n\nexport const rootPath = lazy(() =>\n  isWin\n    ? opt(getEnv(\"SystemDrive\")) // < looks like \"C:\", not \"C:\\\"\n        .filter(notBlank)\n        .orElse(() => \"C:\")\n        .map(ea => ensureSuffix(ea, \"\\\\\"))\n        .get()!\n    : \"/\"\n)\n\nexport function rootVolume(): PromiseMaybe<Volume> {\n  return bestVolumeForPath(rootPath())\n}\n\nexport function bestMountpoint(\n  nativePath: Maybe<string>,\n  mounts: Maybe<string[]>\n): Maybe<string> {\n  return blank(nativePath) || isEmpty(mounts)\n    ? undefined\n    : greatestBy(\n        mounts.filter(mount =>\n          containedByNativePath({\n            ancestor: mount,\n            descendant: nativePath,\n            acceptSelf: true\n          })\n        ),\n        mount =>\n          commonPrefixLength(\n            nativePath.split(_path.sep),\n            mount.split(_path.sep)\n          )\n      )\n}\n\nexport async function bestVolumeForPath(\n  file: Maybe<string | SimpleFile>,\n  vols?: Maybe<Volume[]>\n): PromiseMaybe<Volume> {\n  const np = map(file, toNativePath_)\n  if (blank(np)) return\n  const nativePath = await actualPath(np)\n\n  for (const vp of [\n    { name: \"args\", vols },\n    { name: \"cachedVolumes()\", vols: cachedVolumes },\n    { name: \"volumes()\", vols: volumes },\n    { name: \"allPriorVolumes()\", vols: loadCachedVolumes }\n  ]) {\n    const arr = await tol(vp.vols)\n    if (isEmpty(arr)) continue\n    const mp = bestMountpointForDir(\n      nativePath,\n      arr.map(ea => ea.mountpoint)\n    )\n    if (mp == null) continue\n    const result = arr.find(ea => ea.mountpoint === mp)\n    if (result != null) {\n      logger().debug(\"bestVolumeForPath()\", {\n        nativePath,\n        result: result.mountpoint,\n        src: vp.name\n      })\n      return result\n    }\n  }\n  return logger().tap({\n    msg: \"bestVolume(): no volumes were applicable(!!)\",\n    result: undefined,\n    meta: {\n      nativePath\n    }\n  })\n}\n\nexport async function bestVolumeForVolsha(volumeSha: string) {\n  for (const vp of [\n    { name: \"allPriorVolumes()\", vols: loadCachedVolumes },\n    { name: \"volumes()\", vols: volumes }\n  ]) {\n    const match = toA(await vp.vols()).find(ea => volsha(ea.uuid) === volumeSha)\n    logger().debug(\"bestVolumeForVolsha(): \" + vp.name, { match })\n    if (match != null) return match\n  }\n  return\n}\n\nexport async function remoteVolumeFor(\n  remoteHost: string,\n  remoteShare: string\n): PromiseMaybe<Volume> {\n  return thenMap(volumes(), vols =>\n    bestRemoteVolume(remoteHost, remoteShare, vols)\n  )\n}\n\n/**\n * Find the first volume in `vols` that matches (case-insensitively) the given\n * `remoteHost` and `remoteShare`.\n */\nexport async function bestRemoteVolume(\n  remoteHost: string,\n  remoteShare: string,\n  vols: Volume[]\n): PromiseMaybe<Volume> {\n  // Share names may be mostly unique, and they aren't messed with, so filter by that first:\n  const withCorrectShare = vols.filter(vol =>\n    equalsIgnoreCase(remoteShare, vol.remoteShare)\n  )\n  if (isEmpty(withCorrectShare)) return\n\n  const withExactHostname = withCorrectShare.find(\n    vol =>\n      isTrue(vol.remote) &&\n      notBlank(vol.remoteHost) &&\n      equalsIgnoreCase(remoteHost, vol.remoteHost)\n  )\n  if (withExactHostname != null) return withExactHostname\n\n  const friendlyRemoteHost = await friendlyname(remoteHost)\n  return asyncFind(withCorrectShare, async vol =>\n    equalsIgnoreCase(friendlyRemoteHost, await friendlyname(vol.remoteHost!))\n  )\n}\n\nexport async function findVolumeForVolsha(\n  volumeSha: string\n): PromiseMaybe<Volume> {\n  if (blank(volumeSha)) {\n    return undefined\n  }\n  return (\n    volsha2vol.get(volumeSha) ??\n    (await loadCachedVolumes())?.find(ea => volsha(ea.uuid) === volumeSha) ??\n    (await volumes())?.find(ea => volsha(ea.uuid) === volumeSha)\n  )\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { notBlankOr, toNotBlank } from \"../../fe/Blank\"\nimport { Maybe, PromiseMaybe } from \"../../fe/MaybeTypes\"\nimport { mkLogger } from \"../Logger\"\nimport { version } from \"../Version\"\nimport { PosixFile } from \"../fs/PosixFile\"\nimport { safeUUID } from \"../math/UUID\"\nimport { Settings } from \"../settings/Settings\"\n\nconst logger = lazy(() => mkLogger(\"volumes.WriteVolumeUUID\"))\n\nexport function volumeUuidSubpath() {\n  return toNotBlank(Settings.volumeUuidFilePaths.values[0]) ?? \".uuid\"\n}\n\nexport async function writeVolumeUuid({\n  mountpoint,\n  uuid\n}: {\n  mountpoint: string\n  uuid?: Maybe<string>\n}): PromiseMaybe<string> {\n  const f = PosixFile.for(mountpoint).join(volumeUuidSubpath())\n  uuid = notBlankOr(uuid, safeUUID)\n  if (await f.parent().isReadWritable()) {\n    try {\n      // Try to persist the UUID for later (or if the volume is remotely mounted)\n      await f.writeText_(\n        uuid,\n        \"\",\n        \"# This volume UUID was written by PhotoStructure v\" + version,\n        \"# See https://photostructure.com/faq/what-is-a-volume/ for details.\"\n      )\n      logger().info(\"writeVolumeUuid(): Saved new UUID for \" + mountpoint, {\n        uuid\n      })\n      return uuid\n    } catch (error) {\n      // Only return the UUID if we can persist it successfully.\n      logger().warn(\n        \"writeVolumeUuid(): Failed to save new UUID for \" + mountpoint,\n        { error }\n      )\n    }\n  } else {\n    logger().warn(\n      `writeVolumeUuid(): cannot write to ${f}, directory is not read/write`\n    )\n  }\n  return\n}\n","import { strEnum, StrEnumKeys } from \"../../fe/StrEnum\"\n\nexport const HelmetPlugins = strEnum(\n  \"all\",\n  \"contentSecurityPolicy\",\n  \"crossOriginEmbedderPolicy\",\n  \"crossOriginOpenerPolicy\",\n  \"crossOriginResourcePolicy\",\n  \"dnsPrefetchControl\",\n  \"expectCt\",\n  \"frameguard\",\n  \"hidePoweredBy\",\n  \"hsts\",\n  \"ieNoOpen\",\n  \"noSniff\",\n  \"originAgentCluster\",\n  \"permittedCrossDomainPolicies\",\n  \"referrerPolicy\",\n  \"xssFilter\"\n)\n\nexport type HelmetPlugin = StrEnumKeys<typeof HelmetPlugins>\n","import { join } from \"path\"\nimport { lazy } from \"../../core/Lazy\"\nimport { Maybe } from \"../../fe/MaybeTypes\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { stripDiacritics, stripEmoji } from \"../String\"\nimport { splitCompactLines } from \"../fs/CRLF\"\nimport { ProjectPath } from \"../fs/ProjectPath\"\nimport { zcat } from \"../fs/zcat\"\nimport { unl33t } from \"./Leet\"\n\nexport const CussNativePath = lazy(() =>\n  join(ProjectPath.Data(), \"cuss.txt.br\")\n)\n\nexport const loadCuss = lazy(async () => {\n  const words = splitCompactLines(await zcat(CussNativePath()))\n  cussTrie.set(asTrie(words))\n})\n\nconst cussTrie = lazy<ReturnType<typeof asTrie>>(() => ({\n  trie: new MultiMap<string, string>(),\n  small: []\n}))\n\n// uuid spec passes fastest with 3:\nconst TriePrefixLength = 3\n\nfunction asTrie(words: string[]): {\n  trie: MultiMap<string, string>\n  small: string[]\n} {\n  const trie = new MultiMap<string, string>()\n  const small: string[] = []\n  for (const ea of words) {\n    if (ea.length < TriePrefixLength) {\n      small.push(ea)\n    } else {\n      trie.add(ea.slice(0, TriePrefixLength), ea)\n    }\n  }\n  // console.log(\n  //   \"asTrie(): \" +\n  //     words.length +\n  //     \" words, \" +\n  //     trie.store.size +\n  //     \" prefixes, \" +\n  //     small.length +\n  //     \" too small\"\n  // )\n  return { trie, small }\n}\n\nexport function getCuss(s: string, naughtyWords?: string[]): Maybe<string> {\n  const lc = stripEmoji(stripDiacritics(s.toLowerCase().normalize()))\n  const { small, trie } =\n    naughtyWords == null ? cussTrie() : asTrie(naughtyWords)\n  for (const w of [lc.replace(/[^a-z]/gi, \"\"), ...unl33t(lc)]) {\n    const smol = small.find(ea => w.includes(ea))\n    if (smol != null) return smol\n    for (let i = 0; i < w.length - (TriePrefixLength - 1); i++) {\n      const arr = trie.get(w.slice(i, TriePrefixLength))\n      if (arr != null) {\n        const sub = w.slice(i)\n        const bad = arr.find(ea => sub.startsWith(ea))\n        if (bad != null) {\n          return bad\n        }\n      }\n    }\n  }\n  return\n}\n\nexport function isCussy(s: string) {\n  return getCuss(s) != null\n}\n\nexport function decuss(f: () => string): string {\n  let retries = 10\n  let s = \"\"\n  do {\n    s = f()\n  } while (retries-- > 0 && isCussy(s.replace(/[^a-z]/gi, \"\")))\n\n  return s\n}\n","import { lazy } from \"../../core/Lazy\"\nimport { blank } from \"../../fe/Blank\"\nimport { flatten } from \"../../fe/Flatten\"\nimport { MultiMap } from \"../../fe/MultiMap\"\nimport { toA } from \"../../fe/toA\"\n\nexport function l33t(s: string): string {\n  let result = \"\"\n  const m = a2l()\n  for (const ea of s) {\n    result += m.get(ea)?.[0] ?? ea\n  }\n  return result\n}\n\nconst l2a = lazy(() => {\n  const m = new MultiMap<string, string>()\n  for (const { l, a } of [\n    // { l: \"!\", a: [\"i\"] },\n    // { l: \"(\", a: [\"c\"] },\n    // { l: \"@\", a: [\"a\"] },\n    // { l: \"&\", a: [\"g\"] },\n    // { l: \"+\", a: [\"t\"] },\n    // { l: \"|\", a: [\"i\", \"l\"] },\n    // { l: \"$\", a: [\"s\"] },\n    { l: \"0\", a: [\"o\"] },\n    { l: \"1\", a: [\"i\", \"l\"] },\n    { l: \"2\", a: [\"z\"] },\n    { l: \"3\", a: [\"e\"] },\n    { l: \"4\", a: [\"a\"] },\n    { l: \"5\", a: [\"s\"] },\n    { l: \"6\", a: [\"b\"] },\n    { l: \"7\", a: [\"t\"] },\n    { l: \"8\", a: [\"b\"] },\n    { l: \"9\", a: [\"g\", \"q\"] }\n  ]) {\n    m.add(l, ...a)\n  }\n  return m\n})\n\nconst a2l = lazy(() => {\n  const m = l2a().inverse()\n  for (const ea of m.values()) {\n    ea.sort()\n  }\n  return m\n})\n\nexport function unl33t(s: string): string[] {\n  if (blank(s)) return [\"\"]\n  const origPrefix = s.substring(0, 1)\n  const prefixes = [origPrefix, ...toA(l2a().get(origPrefix))]\n  const suffixes = unl33t(s.substring(1))\n  return flatten(suffixes.map(suff => prefixes.map(pref => pref + suff)))\n}\n","import os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { gt0 } from \"../../fe/Number\"\nimport { intFromFileSync } from \"../fs/ReadFile\"\nimport { isDocker } from \"../platform/isDocker\"\n\n// cpu() can take 500ms!\nexport const cpuInfo = lazy(() => os.cpus())\n\nexport const cpuCount = lazy(() => {\n  if (isDocker()) {\n    // Are we in a pod?\n    // See https://www.reddit.com/r/PhotoStructure/comments/sn68f9/initial_scan_not_adding_everything/hw4bqmj/\n    const quota = intFromFileSync(\"/sys/fs/cgroup/cpu/cpu.cfs_quota_us\")\n    const period =\n      quota != null\n        ? intFromFileSync(\"/sys/fs/cgroup/cpu/cpu.cfs_period_us\")\n        : undefined\n    if (gt0(quota) && gt0(period)) {\n      return quota / period\n    }\n\n    const shares = intFromFileSync(\"/sys/fs/cgroup/cpu/cpu.shares\")\n    if (gt0(shares)) {\n      return (cpuInfo().length * shares) / 1024\n    }\n  }\n  return cpuInfo().length\n})\n","import os from \"os\"\nimport { lazy } from \"../../core/Lazy\"\nimport { gt0 } from \"../../fe/Number\"\nimport { fmtBytes } from \"../../fe/Units\"\nimport { mkLogger } from \"../Logger\"\nimport { intFromFileSync } from \"../fs/ReadFile\"\nimport { isDocker } from \"../platform/isDocker\"\n\nconst logger = lazy(() => mkLogger(\"work.FreeMem\"))\n\n// lazy for tests:\n\nexport const estimatedFreeMem = lazy(() => {\n  const freemem = os.freemem()\n  const totalmem = os.totalmem()\n  // By using both free and total memory, we don't ignore\n  // current system load, but aren't borked if all memory is used currently (by\n  // filesystem cache, presumably)\n  const result = (freemem * 2 + totalmem) / 3\n  if (isDocker()) {\n    // See\n    // https://www.reddit.com/r/PhotoStructure/comments/sn68f9/initial_scan_not_adding_everything/hw4bqmj/\n\n    const mem = intFromFileSync(\"/sys/fs/cgroup/memory/memory.limit_in_bytes\")\n    // k8s may return 9223372036854771712 if memory isn't limited (which means use the system memory...)\n    if (gt0(mem))\n      return logger().tap({\n        msg: \"estimatedFreeMem() (docker mode)\",\n        result: Math.min(mem, result),\n        meta: { freemem, totalmem }\n      })\n  }\n  return logger().tap({\n    msg: \"estimatedFreeMem() \",\n    result,\n    meta: {\n      result: fmtBytes(result),\n      freemem: fmtBytes(freemem),\n      totalmem: fmtBytes(totalmem)\n    }\n  })\n})\n","import { ee } from \"../event/EventEmitter\"\n\nlet paused = false\n\nexport function isPaused(): boolean {\n  return paused\n}\n\nexport function pause(newPausedValue = true): void {\n  if (newPausedValue === false) {\n    resume()\n  } else {\n    // no infinite loops\n    if (!paused) {\n      paused = true\n      ee().emit(\"pause\")\n    }\n  }\n}\n\nexport function resume(): void {\n  // no infinite loops\n  if (paused) {\n    paused = false\n    ee().emit(\"clearCache\")\n    ee().emit(\"resume\")\n  }\n}\n\n// See Service.setupEventHandlers!\n","import { lazy } from \"../../core/Lazy\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { clamp, gt0, sigFigs, toGt0 } from \"../../fe/Number\"\nimport { MB } from \"../../fe/Units\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { ee } from \"../event/EventEmitter\"\nimport { LogLevels } from \"../log/LogLevel\"\nimport { lerp2d } from \"../math/Lerp\"\nimport { Settings } from \"../settings/Settings\"\nimport { cpuCount } from \"./CpuInfo\"\nimport { estimatedFreeMem } from \"./FreeMem\"\nimport { timeoutRate } from \"./WorkTimeout\"\n\nconst logger = lazy(() => mkLogger(\"work.MaxCpus\"))\n\nlater(() => {\n  if (isTest) {\n    ee().on(\"clearCache\", () =>\n      // we actually set() some of these in some specs:\n      clearMaxWorkCaches()\n    )\n  }\n  ee().on(\"settingsChanged\", clearMaxWorkCaches)\n  Settings.cpuLoadPercent.watchLater(clearMaxWorkCaches)\n  Settings.maxConcurrentImports.watchLater(clearMaxWorkCaches)\n})\n\nexport function clearMaxWorkCaches() {\n  estimatedFreeMem.unset()\n  maxCpus.unset()\n  maxConcurrentImports.unset()\n  timeoutRate.prior()?.clear()\n  sharpThreadsPerProcess.unset()\n  cpuCount.unset()\n}\n\nconst maxProcsForMem = lazy(() => {\n  // they may bloat, but they'll recycle if they get too big.\n  const worstCaseMemPerProc = Settings.maxMemoryMb.valueOrDefault * MB\n  // We don't want to over-subscribe system memory, but we need to run at\n  // least one:\n  return logger().tap({\n    msg: \"maxProcsForMem\",\n    result: Math.max(1, Math.floor(estimatedFreeMem() / worstCaseMemPerProc)),\n    meta: {\n      estFreeMemMb: Math.round(estimatedFreeMem() / MB),\n      worstCaseMemPerProcMb: Math.round(worstCaseMemPerProc / MB)\n    }\n  })\n}, minuteMs)\n\nexport function timeoutPenalization() {\n  const timeoutsPerMinute = Math.round(\n    timeoutRate.prior()?.eventsPerMinute ?? 0\n  )\n  const timeoutThrottleCoeff = Settings.timeoutThrottleCoeff.valueOrDefault\n\n  const result =\n    timeoutsPerMinute === 0 || timeoutThrottleCoeff === 0\n      ? 1 // < timeouts are disabled\n      : sigFigs(timeoutThrottleCoeff / timeoutsPerMinute, 2)\n\n  return logger().tap({\n    msg: \"timeoutPenalization()\",\n    level: result > 1 ? LogLevels.warn : LogLevels.debug,\n    result,\n    meta: {\n      timeoutsPerMinute,\n      timeoutThrottleCoeff\n    }\n  })\n}\n\nexport function targetCpuLoadPct() {\n  return (toGt0(Settings.cpuLoadPercent.valueOrDefault) ?? 1) / 100\n}\n\nexport function singleThreadMode() {\n  return (\n    Math.round(targetCpuLoadPct() * cpuCount()) <= 1 ||\n    Settings.cpuLoadPercent.valueOrDefault <= 1 ||\n    maxCpus() === 1\n  )\n}\n\n// We don't need a timeout TTL here: if we get a timeout, that will get set. See\n// WorkTimeout.ts\nexport const maxCpus = lazy(_maxCpus)\n\nfunction _maxCpus() {\n  const cpuPortion = Math.max(1, Math.floor(targetCpuLoadPct() * cpuCount()))\n\n  // maxCpus must be at least 1, and not more than min(cpuPortion, maxProcsForMem)\n  let result = cpuPortion\n\n  const timeoutsPerSecond = timeoutRate.prior()?.eventsPerMinute ?? 0\n\n  // Make the lazy estimation that most work takes about a second:\n  const penalization = timeoutPenalization()\n\n  if (penalization !== 1) {\n    // we don't need to go below this setting\n    const resultBeforePenalization = result\n    result = result * penalization\n    logger().warn(\"Recent timeouts! Throttling down.\", {\n      penalization,\n      resultBeforePenalization,\n      resultAfterPenalization: result\n    })\n  }\n\n  // We don't want to over-subscribe system memory, but we need to run at\n  // least one:\n  result = clamp(1, Math.min(cpuPortion, maxProcsForMem()), Math.ceil(result))\n\n  return logger().tap({\n    msg: \"maxCpus()\",\n    level: LogLevels.info,\n    result,\n    meta: {\n      cpuLoadPct: targetCpuLoadPct(),\n      cpuCount: cpuCount(),\n      cpuPortion,\n      penalization,\n      timeoutsPerSecond,\n      maxProcsForMem: maxProcsForMem()\n    }\n  })\n}\n\nexport const maxConcurrentImports = lazy(_maxConcurrentImports)\n\nfunction _maxConcurrentImports() {\n  if (gt0(Settings.maxConcurrentImports.valueOrDefault)) {\n    return clamp(1, maxCpus(), Settings.maxConcurrentImports.valueOrDefault)\n  }\n  return maxCpus()\n}\n\nexport const sharpThreadsPerProcess = lazy(() => {\n  const i = Settings.sharpThreadsPerProcess.valueOrDefault\n  return i > 0\n    ? i\n    : clamp(\n        1,\n        Math.min(maxCpus(), Settings.sharpThreadsPerProcess.max),\n        // bigger second x scales down sharp threads\n        Math.floor(lerp2d(maxCpus(), { x: 1, y: 1 }, { x: 6, y: 2 }))\n      )\n})\n","import { Rate } from \"batch-cluster\"\nimport { setInterval } from \"timers\"\nimport { lazy } from \"../../core/Lazy\"\nimport { minuteMs } from \"../../fe/Date\"\nimport { later } from \"../../fe/Delay\"\nimport { mkLogger } from \"../Logger\"\nimport { isTest } from \"../NodeEnv\"\nimport { ShortCommandTimeoutMs } from \"../ShortCommandTimeoutMs\"\nimport { ee } from \"../event/EventEmitter\"\nimport { rateStats } from \"../math/Rate\"\nimport { maxConcurrentImports, maxCpus } from \"./MaxCpus\"\n\nconst logger = lazy(() => mkLogger(\"work.WorkTimeout\"))\n\nexport const timeoutRate = lazy(\n  () => new Rate(5 * minuteMs, isTest ? 100 : ShortCommandTimeoutMs)\n)\n\nconst refreshEveryMinute = lazy(() =>\n  // Make sure if we recover, we throttle back up:\n  // (this was an EndableInterval, but that caused a deploop (!?))\n  setInterval(refresh, minuteMs).unref()\n)\n\nfunction refresh() {\n  // we need to update these every minute if we've had any (soft or hard)\n  // timeouts.\n\n  // We want .refresh(), not just .unset(), so .watchLater() listeners gets\n  // invoked:\n  maxCpus.refresh()\n  maxConcurrentImports.refresh()\n  refreshEveryMinute()\n}\n\nexport function onTimeout() {\n  const r = timeoutRate()\n  r.onEvent()\n  logger().warn(\"onTimeout()\", rateStats(r))\n  refresh()\n}\n\nlater(() => {\n  ee().on(\"clearCache\", () => {\n    maxCpus.unset()\n    maxConcurrentImports.unset()\n    timeoutRate.unset()\n  })\n})\n","import { sortBy } from \"./ArraySort\"\nimport { notBlankish } from \"./Blank\"\nimport { eql } from \"./Eql\"\nimport { stringify } from \"./JSON\"\nimport { List } from \"./List\"\nimport { getOrSet } from \"./Map\"\nimport { Defined } from \"./Maybe\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport {\n  Comparable,\n  Primitivable,\n  Primitivables,\n  Primitive,\n  isPrimitive,\n  isPrimitiveArray,\n  lt\n} from \"./Primitive\"\nimport { randomInt } from \"./Random\"\nimport { MaybeReadonlyArray } from \"./Readonly\"\nimport { MaybeNullSyncOrAsync } from \"./SyncOrAsync\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { isFunction } from \"./isFunction\"\nimport { toA } from \"./toA\"\nimport { toS } from \"./toS\"\n\n// Added isNotEmpty so I can make the arr is not null assertion:\nexport function isNotEmpty<L extends List<any>>(arr: MaybeNull<L>): arr is L {\n  return arr != null && toA(arr).length > 0\n}\n\nexport function toNotEmpty<L extends List<any>>(arr: MaybeNull<L>): Maybe<L> {\n  return isNotEmpty(arr) ? arr : undefined\n}\n\nexport function notEmptyOr<L extends List<any>>(\n  arr: Maybe<L>,\n  defaultValue: ThunkOrT<L>\n): L {\n  return isNotEmpty(arr) ? arr : tot(defaultValue)\n}\n\nexport function isEmpty(arr: MaybeNull<List<any>>): arr is undefined {\n  return arr == null || toA(arr).length === 0\n}\n\nexport function mapArray<T, U>(\n  arr: MaybeNull<T[]>,\n  f: (t: T[]) => U\n): Maybe<U> {\n  return Array.isArray(arr) ? f(arr) : undefined\n}\n\nexport function mapNotEmpty<L extends List<any>, R>(\n  arr: Maybe<L>,\n  f: (ea: L) => R\n): Maybe<R> {\n  return isNotEmpty(arr) ? f(arr) : undefined\n}\n\nexport function mapNotEmptyOr<L extends List<any>, R>(\n  arr: Maybe<L>,\n  f: (ea: L) => R,\n  defaultValue: ThunkOrT<R>\n): R {\n  return isNotEmpty(arr) ? f(arr) : tot(defaultValue)\n}\n\nexport function toPrimitive(\n  a: Primitive | Primitive[] | Primitivable | Primitivables\n): Primitive | Primitive[] {\n  return isPrimitive(a) || isPrimitiveArray(a) ? a : a.valueOf()\n}\n\n// only deals with primitive arrays. use isEqlArray() instead.\nfunction eqlArray<T extends Primitive>(a: T[], b: T[]): boolean {\n  return (\n    a != null &&\n    b != null &&\n    a.length === b.length &&\n    a.every((ea, idx) => ea === b[idx])\n  )\n}\n\n/**\n * @return true if `prefix` == `haystack.slice(0, prefix.length)`.\n */\nexport function startsWith<T extends Primitive>(\n  haystack: T[],\n  prefix: T[]\n): boolean {\n  return eqlArray(haystack.slice(0, prefix.length), prefix)\n}\n\n/**\n * Retain all items from `arr` where the `keepIfTrue` returns `true`.\n * @return true if `arr` was changed.\n */\nexport function filterInPlace<T>(\n  arr: T[],\n  keepIfTrue: (item: T, index: number, ea: T[]) => boolean\n): T[] {\n  for (let i = 0; i < arr.length; ) {\n    if (keepIfTrue(arr[i], i, arr)) {\n      i++\n    } else {\n      arr.splice(i, 1)\n    }\n  }\n  return arr\n}\n\n/**\n * Retain all items from `arr` where the `keepIfTrue` returns `true`.\n * @return true if `arr` was changed.\n */\nexport async function filterInPlaceAsync<T>(\n  arr: T[],\n  keepIfTrue: (item: T, index: number, ea: T[]) => MaybeNullSyncOrAsync<boolean>\n): Promise<T[]> {\n  for (let i = 0; i < arr.length; ) {\n    if (true === (await keepIfTrue(arr[i], i, arr))) {\n      i++\n    } else {\n      arr.splice(i, 1)\n    }\n  }\n  return arr\n}\n\nexport function move<T>(arr: T[], fromIndex: number, toIndex: number): T[] {\n  if (\n    fromIndex === toIndex ||\n    fromIndex < 0 ||\n    toIndex < 0 ||\n    fromIndex >= arr.length ||\n    toIndex >= arr.length\n  ) {\n    return arr\n  }\n  const ea = arr[fromIndex]\n  arr.splice(fromIndex, 1)\n  arr.splice(toIndex, 0, ea)\n  return arr\n}\n\n// ES2016 polyfill that also supports Iterable\nexport function includes(\n  haystack: MaybeNull<any[] | Iterable<any>>,\n  needle: any\n): boolean {\n  if (haystack == null) return false\n  for (const ea of haystack) {\n    if (needle.valueOf() === ea.valueOf()) return true\n  }\n  return false\n}\n\nexport function indexOf<T>(\n  iter: Maybe<Iterable<T>>,\n  f: (t: T, index: number) => boolean\n): Maybe<number> {\n  if (iter == null) return\n  let index = 0\n  for (const ea of iter) {\n    if (f(ea, index)) return index\n    index++\n  }\n  return\n}\n\nexport function indexOfPrimitive<T>(\n  iter: Maybe<Iterable<T>>,\n  t: T\n): Maybe<number> {\n  if (iter == null) return\n  let index = 0\n  for (const ea of iter) {\n    if (ea === t) return index\n    index++\n  }\n  return\n}\n\nexport function includesAny(\n  haystack?: Primitive[],\n  needles?: Primitive[]\n): boolean {\n  return (\n    isNotEmpty(haystack) &&\n    isNotEmpty(needles) &&\n    haystack.some(ea => needles.includes(ea))\n  )\n}\n\n/**\n * @returns true iff all `needles` are found in `haystack`\n */\nexport function includesAll(\n  haystack?: Primitive[],\n  needles?: Primitive[]\n): boolean {\n  if (isEmpty(haystack) || isEmpty(needles)) return false\n  for (const needle of needles) {\n    if (!haystack.includes(needle)) return false\n  }\n  return true\n}\n\nexport function eqlPrimitiveUnordered(a: Primitive[], b: Primitive[]): boolean {\n  if (a == null || b == null || a.length !== b.length) return false\n  const a1 = sortBy(a, toPrimitive)\n  const b1 = sortBy(b, toPrimitive)\n  return a1.every((ea, idx) => ea === b1[idx])\n}\n\nexport function pushUniq<T>(arr: T[], ...items: T[]): T[] {\n  for (const item of items) {\n    if (item != null && !arr.some(ea => eql(ea, item))) {\n      arr.push(item)\n    }\n  }\n  return arr\n}\n\nexport function pushUniqBy<T>(\n  arr: T[],\n  items: T[],\n  valueOf: (t: T) => Comparable\n): T[] {\n  const vArr = arr.map(valueOf)\n  for (const item of items) {\n    const v = valueOf(item)\n    if (!vArr.includes(v)) {\n      arr.push(item)\n      vArr.push(v)\n    }\n  }\n  return arr\n}\n\nexport function insertAt<T>(arr: T[], index: number, ...items: T[]): T[] {\n  arr.splice(index, 0, ...items)\n  return arr\n}\n\n/**\n * Insert `item` into `arr` only if `item` is not in `arr` (according to `cmp`).\n *\n * Assumes `arr` is ascending-sorted.\n */\nexport function insertUniq<T>(\n  arr: T[],\n  item: T,\n  cmp_: (a: T, b: T) => number\n): T[] {\n  // verify the array is already in proper sort-order\n  for (let i = 0; i < arr.length - 1; i++) {\n    if (cmp_(arr[i], arr[i + 1]) > 0) {\n      throw new Error(\"badly sorted array: \" + arr)\n    }\n  }\n  for (let i = 0; i < arr.length; i++) {\n    const ea = arr[i]\n    const c = cmp_(ea, item)\n    if (c === 0) return arr\n    // if item is greater than ea, insert right before ea\n    if (c > 0) {\n      arr.splice(i, 0, item)\n      return arr\n    }\n  }\n  arr.push(item)\n  return arr\n}\n\n// Can't call this delete, as that's a javascript keyword\nexport function remove<T>(arr: T[], ...element: T[]): boolean {\n  const before = arr.length\n  filterInPlace(arr, ea => element.every(ea2 => !eql(ea, ea2)))\n  return before !== arr.length\n}\n\nexport function removeSame<T>(arr: T[], ...element: T[]): boolean {\n  const before = arr.length\n  filterInPlace(arr, ea => element.every(ea2 => ea !== ea2))\n  return before !== arr.length\n}\n\nexport function compact<T>(iter: MaybeNull<Iterable<T>>): Defined<T>[] {\n  // SITS: don't remove the toA: some callers may not give a proper iterable!\n  return iter == null ? [] : (filterInPlace(toA(iter), ea => ea != null) as any)\n}\n\nexport function compactBlanks<T>(iter: MaybeNull<Iterable<T>>): string[] {\n  // trim() to fix https://gitlab.com/mceachen/photostructure/issues/58\n  return iter == null\n    ? []\n    : toA(iter)\n        .map(ea => toS(ea).trim())\n        .filter(ea => ea.length > 0)\n}\n\nexport function compactBlankish<T>(iter: MaybeNull<Iterable<T>>): Defined<T>[] {\n  return iter == null ? [] : [...iter].filter(notBlankish)\n}\n\nexport function uniq<T>(arr: Maybe<Iterable<Maybe<T>>>): Defined<T>[] {\n  // PERF: if `arr` is empty or only 1 or 2 elements, maybe we don't have to\n  // call uniqBy:\n  if (arr == null) return []\n  const c = compact(arr)\n  if (c.length <= 1) return c\n  if (c.length < 10) {\n    const f = c[0]\n    if (c.every(ea => ea === f)) {\n      return [f]\n    }\n  }\n  return uniqBy(c, ea => (isPrimitive(ea) ? ea : stringify(ea)))\n}\n\nexport function uniqFirst<T>(arr: Maybe<Iterable<Maybe<T>>>): NonNullable<T>[] {\n  if (arr == null) return []\n  const result: NonNullable<T>[] = []\n  for (const ea of arr) {\n    if (ea != null && !eql(result[result.length - 1], ea)) {\n      result.push(ea as any)\n    }\n  }\n  return result\n}\n\nexport function uniqSubstrings(arr: Maybe<string>[]): string[] {\n  if (arr == null) return []\n  const strings = compact(arr)\n  if (arr.length === 0) return []\n  const result: string[] = []\n  for (const str of sortBy(strings, ea => [-ea.length, ea.toLowerCase()])) {\n    if (!result.some(ea => ea.includes(str))) {\n      result.push(str)\n    }\n  }\n  return sortBy(result, ea => strings.indexOf(ea))\n}\n\n/**\n * First-one-in-wins\n */\nexport function uniqBy<T, V extends Primitive>(\n  arr: Iterable<Maybe<T>>,\n  f: (t: T) => Maybe<V> = ea => stringify(ea) as V\n): T[] {\n  const m = new Map<V, T>()\n  for (const ea of arr) {\n    if (ea != null) {\n      const v = f(ea)\n      if (v != null) {\n        getOrSet(m, v, () => ea)\n      }\n    }\n  }\n  return [...m.values()]\n}\n\n/**\n * Last-one-in-wins\n */\nexport function uniqByLast<T, V extends Primitive>(\n  arr: Iterable<Maybe<T>>,\n  f: (t: T) => Maybe<V> = ea => stringify(ea) as V\n): T[] {\n  const m = new Map<V, T>()\n  for (const ea of arr) {\n    if (ea != null) {\n      const key = f(ea)\n      if (key != null) {\n        m.set(key, ea)\n      }\n    }\n  }\n  return [...m.values()]\n}\n\n/**\n * First-one-in-wins\n */\nexport function uniqBy2<T>(\n  arr: Maybe<T>[],\n  equals: (a: T, b: T) => boolean\n): T[] {\n  const result: T[] = []\n  for (const a of arr) {\n    if (a != null && result.every(b => !equals(a, b))) {\n      result.push(a)\n    }\n  }\n  return result\n}\n\nexport function clear<T>(arr: T[]): T[] {\n  arr.length = 0\n  return arr\n}\n\n/**\n * Equivalent to filtering all items in an array to a new array and calling\n * length. This method avoids creating the intermediate array.\n *\n * @return the number of elements in `arr` that `predicate` returns `true`.\n */\nexport function count<T>(\n  arr: T[],\n  predicate: (t: T, idx: number) => boolean\n): number {\n  return arr.reduce((acc, ea, idx) => acc + (predicate(ea, idx) ? 1 : 0), 0)\n}\n\n/**\n * Equivalent to mapping all items in an array to a new number array and calling\n * Vector.sum(). This method avoids creating the intermediate array.\n *\n * @return the sum of elements of `f`-transmuted numbers from `arr`.\n */\nexport function sum<T>(\n  arr: T[],\n  f: (t: T, currentIndex: number) => number\n): number {\n  return arr.reduce((acc, ea, idx) => acc + f(ea, idx), 0)\n}\n\nexport function firstMatch(\n  re: RegExp,\n  arr: Maybe<string>[]\n): Maybe<RegExpExecArray> {\n  for (const s of compact(arr)) {\n    const m = re.exec(s)\n    if (m != null) return m\n  }\n  return\n}\n\nexport function commonPrefixLength<T extends Primitive>(\n  a: Maybe<T[] | string>,\n  b: Maybe<T[] | string>\n): number {\n  if (a == null || b == null) return 0\n  if (a === b) return a.length\n  if (typeof a === \"string\") a = [...a] as T[]\n  if (typeof b === \"string\") b = [...b] as T[]\n  if (eqlArray(a, b)) return a.length\n  let result = 0\n  while (a[result] === b[result]) result++\n  return result\n}\n\n/**\n * Make random perturbations to `array` to minimize the given expense function\n */\nexport function anneal<T>({\n  array,\n  expense,\n  allowedDelta\n}: {\n  array: T[]\n  expense: (arr: T[], fromIndex: number, toIndex: number) => Comparable\n  allowedDelta: number\n}): T[] {\n  const delta = Math.round(allowedDelta)\n  if (delta < 2) return array\n  for (let mid = 0; mid < array.length - 1; mid++) {\n    const newPos = randomInt(\n      Math.max(0, mid - delta),\n      Math.min(array.length, mid + delta),\n      [mid]\n    )\n    if (newPos == null) continue\n    // the range is either [mid - 1, newPos + 1] or [newPos - 1, mid + 1]\n    const i = Math.max(0, Math.min(newPos, mid) - 1)\n    const j = Math.min(array.length, Math.max(newPos, mid) + 1)\n    const currentExpense = expense(array, i, j)\n    move(array, mid, newPos)\n    const newExpense = expense(array, i, j)\n    // undo the move if newExpense isn't better:\n    if (lt(currentExpense, newExpense)) {\n      move(array, newPos, mid)\n    }\n  }\n  return array\n}\n\n/**\n * @param from inclusive\n * @param to exclusive\n * @param f\n */\nexport function range<T = number>(\n  from: number,\n  to: number,\n  f: (i: number) => T = ea => ea as any\n): T[] {\n  return stepRange(from, to, 1, f)\n}\n\n/**\n * @param to return an array up to but not including `to`\n * @see https://docs.python.org/2/library/functions.html#range\n */\nexport function stepRange<T = number>(\n  from: number,\n  to: number,\n  step: number = 1,\n  f: (i: number) => T = ea => ea as any\n): T[] {\n  const r: T[] = []\n  if (from < to) {\n    for (let i = from; i < to; i += step) {\n      r.push(f(i))\n    }\n  } else {\n    for (let i = from; i > to; i -= step) {\n      r.push(f(i))\n    }\n  }\n  return r\n}\n\nexport const primitiveValueOfOrElse = (a: any) => {\n  if (isPrimitive(a)) {\n    return a\n  }\n  // [].valueOf() is worthless, so use json\n  if (Array.isArray(a)) {\n    return stringify(a)\n  }\n  if (isFunction(a.valueOf)) {\n    return a.valueOf()\n  } else {\n    throw new Error(\"Cannot get primitive value for \" + JSON.stringify(a))\n  }\n}\n\n/**\n * `minuend - subtrahend`.\n *\n * @template T must have a .valueOf() implementation\n * @param {T[]} minuend (haystack)\n * @param {T[]} subtrahend (needles)\n * @returns {T[]} values in `minuend` that, according to `.valueOf()`, are\n * not in `subtrahend`. Neither arg is mutated.\n */\nexport function diff<T>(\n  minuend: MaybeReadonlyArray<T>,\n  subtrahend: T[],\n  valueOf: (t: T) => Primitive = primitiveValueOfOrElse\n): T[] {\n  const s = new Set(subtrahend.map(valueOf))\n  return minuend.filter(ea => !s.has(valueOf(ea)))\n}\n\nexport function last<T>(arr: Maybe<T[]>): Maybe<T> {\n  return arr != null ? arr[arr.length - 1] : undefined\n}\n\nexport function commaList(arr: string[], finalJoin = \"or\"): string {\n  if (arr.length <= 1) return arr.join(\"\")\n  if (arr.length === 2) return arr.join(\" \" + finalJoin + \" \")\n  return (\n    arr.slice(0, -1).join(\", \") + \", \" + finalJoin + \" \" + arr[arr.length - 1]\n  )\n}\n\nexport function arrToIterator<T>(arr: T[]): IterableIterator<T> {\n  return arr[Symbol.iterator]()\n}\n\nexport function arrayEndsWith<T extends Comparable>(\n  arr: T[],\n  suffix: T[]\n): boolean {\n  if (arr.length < suffix.length) return false\n  for (let i = 0; i < suffix.length; i++) {\n    // PERF: avoids the slice (and subsequent GC)\n    if (arr[arr.length - suffix.length + i] !== suffix[i]) return false\n  }\n  return true\n}\n","export function copyArrayTo<T>(source: T[], destination: T[]): T[] {\n  for (let i = 0; i < source.length; i++) {\n    destination[i] = source[i]\n  }\n  destination.length = source.length\n  return destination\n}\n","import { compact, toPrimitive } from \"./Array\"\nimport { copyArrayTo } from \"./ArrayCopy\"\nimport { isIterable } from \"./Iterable\"\nimport { stringify } from \"./JSON\"\nimport { getOrSet } from \"./Map\"\nimport { Defined, map } from \"./Maybe\"\nimport { Maybe } from \"./MaybeTypes\"\nimport {\n  Comparable,\n  Primitivable,\n  Primitivables,\n  Primitive,\n  cmp\n} from \"./Primitive\"\nimport { toA } from \"./toA\"\n\nexport function sort<\n  T extends Primitive | Primitive[] | Primitivable | Primitivables\n>(arr: Maybe<T>[] | ReadonlyArray<Maybe<T>>): Defined<T>[] {\n  return sortByInPlace(compact(arr), toPrimitive)\n}\n\nexport function sortByInPlace<T>(arr: T[], f: (t: T) => Comparable): T[] {\n  return copyArrayTo(sortBy(arr, f), arr)\n}\n\nexport function sortUniqBy<T>(arr: T[], f: (t: T) => Comparable): T[] {\n  const m = new Map<string, T>()\n  for (const ea of arr) {\n    getOrSet(m, stringify(f(ea)), () => ea)\n  }\n  return sortBy(m.values(), f)\n}\n\nexport function sortUniq<T extends Comparable>(arr: T[]): T[] {\n  return sortUniqBy(arr, ea => ea)\n}\n\nexport function sortUniqByInPlace<T>(arr: T[], f: (t: T) => Comparable): T[] {\n  return copyArrayTo(sortUniqBy(arr, f), arr)\n}\n\nexport function isSorted(arr: Primitivable[]): boolean {\n  return arr.every((ea, idx) => idx === 0 || ea > arr[idx - 1])\n}\n\nexport function sortedBy<T>(arr: T[], f: (t: T) => Primitive): boolean {\n  return arr.every((ea, idx) => idx === 0 || f(ea) > f(arr[idx - 1]))\n}\n/**\n * Returns a copy of arr, stable sorted by the given constraint. Note that false\n * < true, and that `f` may return an array for sort priorities, or undefined if\n * the item should be skipped from the returned result.\n *\n * Note: localeSort() thinks lower case should come before upper case (!!)\n */\n\nexport function sortBy<T>(\n  arr: Iterable<Maybe<T>> | Maybe<T>[],\n  f: (t: T, index: number) => Maybe<Comparable | Comparable[]>\n): T[] {\n  return (toA(arr).filter(ea => ea != null) as T[])\n    .map((item, idx) => ({\n      item,\n      cmp: map(f(item, idx), ea => [ea, idx])\n    }))\n    .filter(ea => ea.cmp != null)\n    .sort((a, b) => cmp(a.cmp!, b.cmp!))\n    .map(ea => ea.item)\n}\n\nexport function deepSortBy<T, V extends Primitive | Primitive[]>(\n  arr: Iterable<T> | T[],\n  f: (t: T) => Maybe<V>\n): T[] {\n  return sortBy(arr, f).map(ea =>\n    isIterable(ea) ? deepSortBy(ea, f) : ea\n  ) as any // SITS typing\n}\n\nexport function pushSorted<T>(\n  arr: T[],\n  item: T,\n  f: (t: T) => Comparable | Comparable[]\n): T[] {\n  const idx = arr.findIndex(ea => f(item) < f(ea))\n  if (idx === -1) {\n    arr.push(item)\n  } else {\n    arr.splice(idx, 0, item)\n  }\n  return arr\n}\n","import { isFunction } from \"./isFunction\"\n\nexport type AsPromiseable<T> =\n  | T\n  | Promise<T>\n  | (() => T | Promise<T>)\n  | Promise<() => T | Promise<T>>\n\nexport async function asPromise<T>(o: AsPromiseable<T>): Promise<T> {\n  const a = await o\n  return isFunction(a) ? a() : a\n}\n","import { delay } from \"./Delay\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { gt0 } from \"./Number\"\nimport { SyncOrAsync } from \"./SyncOrAsync\"\nimport { thenOrTimeoutError } from \"./ThenOrTimeout\"\nimport { toErr } from \"./toErr\"\n\nexport async function retryOnReject<T>(\n  f: () => SyncOrAsync<T>,\n  opts: {\n    maxRetries: number\n    timeoutMs?: number\n    retryDelay?: number\n    onRetryWaitUntil?: (retryCount: number) => any\n    errorIsRetriable?: (error: Error) => Maybe<boolean>\n  }\n): Promise<T> {\n  const g = gt0(opts.timeoutMs)\n    ? () => thenOrTimeoutError(f(), opts.timeoutMs!)\n    : f\n\n  if (opts.maxRetries <= 0) {\n    return g()\n  }\n  const onRetryWaitUntil =\n    opts.onRetryWaitUntil ??\n    ((retry: number) =>\n      delay(Math.max(250, (opts.retryDelay ?? 250) * (retry ?? 1))))\n\n  let retryCount = 0\n  const h: () => Promise<T> = async () => {\n    try {\n      return await g()\n    } catch (err) {\n      const error = toErr(err)!\n      if (\n        false === opts.errorIsRetriable?.(error) ||\n        retryCount > opts.maxRetries\n      ) {\n        throw error\n      } else {\n        retryCount++\n        await onRetryWaitUntil(retryCount)\n        return h()\n      }\n    }\n  }\n  return h()\n}\n","import { Maybe } from \"./MaybeTypes\"\n\n/**\n * @see https://github.com/tc39/proposal-relative-indexing-method#polyfill\n */\nexport function at<T>(arr: Maybe<T[]>, i: number) {\n  if (arr == null) return\n  // ToInteger() abstract op\n  i = Math.trunc(i) || 0\n  // Allow negative indexing from the end\n  if (i < 0) i += arr.length\n  // OOB access is guaranteed to return undefined\n  if (i < 0 || i >= arr.length) return undefined\n  // Otherwise, this is just normal property access\n  return arr[i]\n}\n","import { Defined, orElse } from \"./Maybe\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { toS } from \"./toS\"\n\n/**\n * @return true if o is nullish, an empty string, or only whitespace.\n */\nexport function blank(o: any): o is undefined {\n  // PERF: unrolled from Opt\n  return o == null || o === \"\"\n    ? true\n    : typeof o === \"string\"\n    ? o.trim() === \"\"\n    : false\n}\n\nexport function notBlank<T>(s: T): s is Defined<T> {\n  return !blank(s)\n}\n\nexport function notBlankToS(s: Maybe<any>) {\n  return notBlank(s) && s !== \"undefined\" ? toS(s).trim() : undefined\n}\n\n/** aka \"trimToUndefined\" */\nexport function toNotBlank(o: any): Maybe<string> {\n  if (o == null) return\n  const s = toS(o)\n  return s.length === 0 || s.trim().length === 0 ? undefined : s\n}\n\n/**\n * Equivalent to `Opt(s).flatMap(toS).filter(notBlank).getOrElse(() => orElse)`\n */\nexport function notBlankOr(s: any, ifBlank: ThunkOrT<string>): string {\n  if (s == null) return tot(ifBlank)\n  const str = toS(s).trim()\n  return str.length > 0 ? str : tot(ifBlank)\n}\n\nexport function notBlankAnd(s: any, f: (ea: string) => boolean): boolean {\n  return !blank(s) ? f(s) : false\n}\n\nexport function mapNotBlank<T>(arg: any, f: (s: string) => T): Maybe<T> {\n  if (arg === false || arg == null || arg === \"\") {\n    return undefined\n  }\n  const s = toS(arg)\n  return notBlank(s) ? f(s!) : undefined\n}\n\nexport function mapNotBlankOr<T>(\n  arg: any,\n  f: (s: string) => T,\n  defaultValue: T | (() => T)\n): T {\n  return orElse(mapNotBlank(arg, f), defaultValue)\n}\n\nexport function firstNotBlank(...arr: MaybeNull<string>[]): Maybe<string> {\n  // PERF: unrolled\n  for (const ea of arr) {\n    if (typeof ea === \"string\" && ea.trim().length > 0) return ea\n  }\n  return\n}\n\nconst BlankishRE = /^\\s*(?:null|undefined)?\\s*$/i\n\nexport function blankish(s: any): s is undefined {\n  return s == null || BlankishRE.exec(toS(s)) != null\n}\n\nexport function notBlankish<T>(s: T): s is Defined<T> {\n  return !blankish(s)\n}\n","import { Maybe } from \"../fe/MaybeTypes\"\n\nexport function isBoolean(object: any): object is boolean {\n  return typeof object === \"boolean\"\n}\n\n/**\n * (Fairly) strict coercion to true.\n *\n * @return false unless `o` is `true` or `1` (or stringifies to \"true\" or \"1\")\n */\nexport function isTrue(o: any): boolean {\n  if (typeof o === \"boolean\") {\n    return o\n  } else if (o == null) {\n    return false\n  } else if (o === 1) {\n    return true\n  } else {\n    const s = String(o).toLowerCase().trim()\n    return [\"true\", \"1\"].includes(s)\n  }\n}\n\n/**\n * (Fairly) strict coercion to boolean. If parsing fails, returns undefined.\n */\nexport function toBoolean(o: any): Maybe<boolean> {\n  return isTrue(o) ? true : isFalse(o) ? false : undefined\n}\n\nexport function boolToInt(o: any) {\n  return isTrue(o) ? 1 : 0\n}\n\n/**\n * (Fairly) strict coercion to false.\n *\n * @return false unless `o` is `false` or `0` (or stringifies to \"false\" or\n * \"0\")\n */\nexport function isFalse(o: any, ...synonyms: string[]): boolean {\n  if (typeof o === \"boolean\") return !o\n  if (o == null) return false\n  if (o === 0) return true\n  const s = String(o).toLowerCase()\n  return [\"false\", \"0\", ...synonyms].map(ea => ea.toLowerCase()).includes(s)\n}\n\nexport function isDisabled(o: any): boolean {\n  return isFalse(o, \"no\", \"disable\", \"disabled\")\n}\n\nexport function or(arr: any[]): boolean {\n  return arr.some(ea => isTrue(ea))\n}\n\nexport function and(arr: any[]): boolean {\n  return arr.every(ea => isTrue(ea))\n}\n\n/**\n * @return true if `arr` has at least one `true` and no `false` entries\n */\nexport function maybeAnd(arr: Maybe<boolean>[]): Maybe<boolean> {\n  let result: Maybe<boolean>\n  for (const ea of arr) {\n    if (ea === false) return false\n    if (ea === true) result = true\n  }\n  return result\n}\n\nexport function mapBoolean<T>(obj: any, f: (b: boolean) => T): Maybe<T> {\n  return isTrue(obj) ? f(true) : isFalse(obj) ? f(false) : undefined\n}\n\nexport function mapTrue<T>(b: any, f: () => T): Maybe<T> {\n  return isTrue(b) ? f() : undefined\n}\n","import { stringify } from \"./JSON\"\n\nexport function clone<T>(obj: T): T {\n  return obj == null ? obj : JSON.parse(stringify(obj))\n}\n\nexport function shallowClone<T>(obj: T): T {\n  return Array.isArray(obj)\n    ? [...obj]\n    : typeof obj === \"object\"\n    ? { ...obj }\n    : (obj as any)\n}\n","import { isEmpty } from \"./Array\"\nimport { blank } from \"./Blank\"\nimport { lazy } from \"./Lazy\"\nimport { map, mapOr } from \"./Maybe\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { isNumber, toFixedStr } from \"./Number\"\nimport { pad2, pad3 } from \"./Pad\"\nimport { ensurePrefix } from \"./String\"\nimport { plur } from \"./Units\"\n\nexport const secondMs = 1000\nexport const minuteMs = 60 * secondMs\nexport const hourMs = 60 * minuteMs\nexport const dayMs = 24 * hourMs\nexport const weekMs = 7 * dayMs\n/** TRY TO AVOID USING THIS (it's 32 * dayMs) */\nexport const monthMs = 32 * dayMs\nexport const yearMs = 365.25 * dayMs\n\nconst shortDateTimeFormat = lazy(\n  () =>\n    new Intl.DateTimeFormat(undefined, {\n      // weekday: \"short\",\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n      hour: \"numeric\",\n      minute: \"numeric\",\n      second: \"numeric\"\n    })\n)\nconst shortDateFormat = lazy(\n  () =>\n    new Intl.DateTimeFormat(undefined, {\n      day: \"numeric\",\n      year: \"numeric\",\n      month: \"short\"\n    })\n)\n\nexport function toDate(d: Date | number): Date {\n  return d instanceof Date ? d : new Date(d)\n}\n\nexport function fmtDateShort(d: Date | number) {\n  if (d == null) return\n  return d instanceof Date &&\n    d.getHours() === 0 &&\n    d.getMinutes() === 0 &&\n    d.getSeconds() === 0\n    ? shortDateFormat().format(d)\n    : shortDateTimeFormat().format(d)\n}\n\n/**\n * split an HMS string into a (possibly empty) prefix of zeroes and the remaining suffix.\n */\nexport function splitHMS(hms: string): string[] {\n  return mapOr(\n    /^[0:]{1,4}/.exec(hms),\n    m => [m[0], hms.slice(m[0].length)],\n    () => [\"\", hms]\n  )\n}\n\nexport function isDate(obj: any): obj is Date {\n  return obj instanceof Date\n}\n\nexport function thisYear() {\n  return new Date().getFullYear()\n}\n\n/**\n * @return Date `deltaMs` in the past\n */\nexport function ago(deltaMs: number, from?: Date): Date {\n  return new Date((from?.getTime() ?? Date.now()) - deltaMs)\n}\n\n/**\n * @return Date `deltaMs` in the future\n */\nexport function hence(deltaMs: number, from?: Date): Date {\n  return ago(-deltaMs, from)\n}\n\nexport function unixtime(d?: Date | number): number {\n  const ms = isDate(d) ? d.getTime() : isNumber(d) ? d : Date.now()\n  return Math.floor(ms / secondMs)\n}\n\n/**\n * Appropriate for filenames: yMMddHHmmss\n */\nexport function fmtYMDHMS(arg: Date | number): string {\n  const d = toDate(arg)\n  return (\n    d.getFullYear() +\n    pad2(d.getMonth() + 1) +\n    pad2(d.getDate()) +\n    pad2(d.getHours()) +\n    pad2(d.getMinutes()) +\n    pad2(d.getSeconds())\n  )\n}\n\n/**\n * Format millis duration in HH:MM:SS.sss\n */\nexport function fmtHMS(\n  ms: number,\n  opts: { includeMs: boolean } = { includeMs: true }\n): string {\n  const h = Math.floor(ms / hourMs)\n  ms -= h * hourMs\n  const m = Math.floor(ms / minuteMs)\n  ms -= m * minuteMs\n  const s = Math.floor(ms / secondMs)\n  const millis = Math.floor(ms - s * secondMs)\n  return (\n    pad2(h) +\n    \":\" +\n    pad2(m) +\n    \":\" +\n    pad2(s) +\n    (opts.includeMs ? \".\" + pad3(millis) : \"\")\n  )\n}\n\nconst Units = [\n  { ms: yearMs, s: \"Y\" },\n  { ms: weekMs, s: \"W\" },\n  { ms: dayMs, s: \"D\" },\n  { ms: hourMs, s: \"H\" },\n  { ms: minuteMs, s: \"M\" }\n]\n\nexport function fmtIsoDuration(ms: number): string {\n  if (ms === 0) return \"PT0S\"\n  const dateParts: string[] = []\n  const timeParts: string[] = []\n  for (const unit of Units.slice(Units.findIndex(ea => ea.ms <= ms!))) {\n    const i = Math.floor(ms / unit.ms)\n    ms -= i * unit.ms\n    if (i > 0) (unit.ms >= dayMs ? dateParts : timeParts).push(i + unit.s)\n  }\n  if (ms > 0) {\n    timeParts.push(toFixedStr(ms / secondMs, 3) + \"S\")\n  }\n  return (\n    \"P\" +\n    dateParts.join(\"\") +\n    (isEmpty(timeParts) ? \"\" : \"T\" + timeParts.join(\"\"))\n  )\n}\n\n/**\n * ISO-formatted datestamp: y-MM-dd\n */\nexport function fmtIsoDate(ts: Date | number): string {\n  const d = isDate(ts) ? ts : new Date(ts)\n  return (\n    d.getFullYear() + \"-\" + pad2(d.getMonth() + 1) + \"-\" + pad2(d.getDate())\n  )\n}\n\nexport function localToDate(local: Maybe<number>): Maybe<Date> {\n  if (local == null || local < 0) return\n  let i = local\n  const pop2 = () => {\n    const result = i % 100\n    i = Math.floor(i / 100)\n    return result\n  }\n  const millisecond = 10 * pop2()\n  const second = pop2()\n  const minute = pop2()\n  const hour = pop2()\n  const day = pop2()\n  const month = pop2()\n  const year = i\n  return new Date(year, month - 1, day, hour, minute, second, millisecond)\n}\n\nexport function fmtLocalToShort(cs: number): Maybe<string> {\n  return map(localToDate(cs), fmtDateShort)\n}\n\nexport function nextMidnightTs() {\n  return new Date().setHours(24, 0, 0, 0)\n}\n\nexport function msUntilMidnight() {\n  // .setHours() returns getTime() (!?!)\n  return nextMidnightTs() - Date.now()\n}\n\nexport function fmtAgo(ts: number, suffix = \"ago\"): string {\n  return fmtElapsedMs(Date.now() - ts, suffix)\n}\n\nexport function fmtElapsedMs(ms: number, suffix = \"ago\"): string {\n  if (ms < 1000) return \"just now\"\n  suffix = blank(suffix) ? \"\" : ensurePrefix(suffix, \" \")\n  if (ms < minuteMs) return plur(Math.floor(ms / secondMs), \"second\") + suffix\n  if (ms < hourMs) return plur(Math.floor(ms / minuteMs), \"minute\") + suffix\n  if (ms < dayMs) return plur(Math.floor(ms / hourMs), \"hour\") + suffix\n  if (ms < weekMs) return plur(Math.floor(ms / dayMs), \"day\") + suffix\n  if (ms < yearMs) return plur(Math.floor(ms / weekMs), \"week\") + suffix\n  return plur(Math.floor(ms / yearMs), \"year\") + suffix\n}\n","export function dateToJson(d: Date) {\n  return {\n    _ctor: Date.name,\n    iso: d.toISOString()\n  }\n}\n","/* globals Symbol: false, Uint8Array: false, WeakMap: false */\n/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nimport { isBoolean } from \"./Boolean\"\n\nconst type_detect = require(\"type-detect\")\n\nexport interface MemoizeMap extends WeakMap<object, WeakMap<object, boolean>> {}\n\nexport interface DeepEqlOptions<T1 = unknown, T2 = unknown> {\n  /**\n   * Override default algorithm, determining custom equality.\n   */\n  comparator?: (\n    leftHandOperand: T1,\n    rightHandOperand: T2,\n    keyname?: string | symbol\n  ) => boolean | null\n\n  /**\n   * Provide a custom memoization object which will cache the results of\n   * complex objects for a speed boost.\n   *\n   * By passing `false` you can disable memoization, but this will cause circular\n   * references to blow the stack.\n   */\n  memoize?: MemoizeMap | false\n}\n\n/*!\n * Check to see if the MemoizeMap has recorded a result of the two operands\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @returns {Boolean|null} result\n */\nfunction memoizeCompare(\n  leftHandOperand: any,\n  rightHandOperand: any,\n  memoizeMap?: MemoizeMap\n): boolean | null {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (\n    memoizeMap == null ||\n    isPrimitive(leftHandOperand) ||\n    isPrimitive(rightHandOperand)\n  ) {\n    return null\n  }\n  const result = memoizeMap.get(leftHandOperand)?.get(rightHandOperand)\n  if (typeof result === \"boolean\") {\n    return result\n  }\n  return null\n}\n\n/*!\n * Set the result of the equality into the MemoizeMap\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {MemoizeMap} memoizeMap\n * @param {Boolean} result\n */\nfunction memoizeSet(\n  leftHandOperand: any,\n  rightHandOperand: any,\n  memoizeMap: MemoizeMap | undefined,\n  result: boolean\n) {\n  // Technically, WeakMap keys can *only* be objects, not primitives.\n  if (\n    memoizeMap == null ||\n    isPrimitive(leftHandOperand) ||\n    isPrimitive(rightHandOperand)\n  ) {\n    return\n  }\n  let leftHandMap = memoizeMap.get(leftHandOperand)\n  if (leftHandMap != null) {\n    leftHandMap.set(rightHandOperand, result)\n  } else {\n    leftHandMap = new WeakMap()\n    leftHandMap.set(rightHandOperand, result)\n    memoizeMap.set(leftHandOperand, leftHandMap)\n  }\n}\n\n/**\n * Assert deeply nested sameValue equality between two objects of any type.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm,\n * determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization\n    object which will cache the results of complex objects for a speed boost.\n    By passing `false` you can disable memoization, but this will cause\n    circular references to blow the stack.\n * @return {Boolean} equal match\n */\nexport function deepEql<T1 = unknown, T2 = unknown>(\n  leftHandOperand: T1,\n  rightHandOperand: T2,\n  options?: DeepEqlOptions<T1, T2> | undefined\n): boolean {\n  options ??= {}\n  if (false !== options.memoize) {\n    options.memoize ??= new WeakMap()\n  }\n  return _deepEqual(leftHandOperand, rightHandOperand, options)\n}\n\nfunction _deepEqual<T1 = unknown, T2 = unknown>(\n  leftHandOperand: T1,\n  rightHandOperand: T2,\n  options?: DeepEqlOptions<T1, T2> | undefined,\n  key?: string | symbol\n): boolean {\n  // If we have a comparator, we can't assume anything; so bail to its check first.\n  if (options?.comparator != null) {\n    return extensiveDeepEqual(leftHandOperand, rightHandOperand, options, key)\n  }\n\n  const simpleResult = simpleEqual(leftHandOperand, rightHandOperand)\n  if (simpleResult !== null) {\n    return simpleResult\n  }\n\n  // Deeper comparisons are pushed through to a larger function\n  return extensiveDeepEqual(leftHandOperand, rightHandOperand, options)\n}\n\n/**\n * Many comparisons can be canceled out early via simple equality or primitive checks.\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @return {Boolean|null} equal match\n */\nfunction simpleEqual(leftHandOperand: any, rightHandOperand: any) {\n  // Equal references (except for Numbers) can be returned early\n  if (leftHandOperand === rightHandOperand) {\n    // Handle +-0 cases\n    return leftHandOperand !== 0 || 1 / leftHandOperand === 1 / rightHandOperand\n  }\n\n  // handle NaN cases\n  if (\n    leftHandOperand !== leftHandOperand && // eslint-disable-line no-self-compare\n    rightHandOperand !== rightHandOperand // eslint-disable-line no-self-compare\n  ) {\n    return true\n  }\n\n  // Anything that is not an 'object', i.e. symbols, functions, booleans, numbers,\n  // strings, and undefined, can be compared by reference.\n  if (isPrimitive(leftHandOperand) || isPrimitive(rightHandOperand)) {\n    // Easy out b/c it would have passed the first equality check\n    return false\n  }\n  return null\n}\n\n/*!\n * The main logic of the `deepEqual` function.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (optional) Additional options\n * @param {Array} [options.comparator] (optional) Override default algorithm, determining custom equality.\n * @param {Array} [options.memoize] (optional) Provide a custom memoization object which will cache the results of\n    complex objects for a speed boost. By passing `false` you can disable memoization, but this will cause circular\n    references to blow the stack.\n * @return {Boolean} equal match\n*/\nfunction extensiveDeepEqual<T1 = unknown, T2 = unknown>(\n  leftHandOperand: T1,\n  rightHandOperand: T2,\n  options: DeepEqlOptions<T1, T2> | undefined,\n  key?: string | symbol\n): boolean {\n  options ??= {}\n  const memoize: MemoizeMap | undefined =\n    options.memoize === false\n      ? undefined\n      : (options.memoize ??= new WeakMap() as any)\n  const comparator = options?.comparator\n\n  // Check if a memoized result exists.\n  const memoizeResultLeft = memoizeCompare(\n    leftHandOperand,\n    rightHandOperand,\n    memoize\n  )\n  if (memoizeResultLeft !== null) {\n    return memoizeResultLeft\n  }\n  const memoizeResultRight = memoizeCompare(\n    rightHandOperand,\n    leftHandOperand,\n    memoize\n  )\n  if (memoizeResultRight !== null) {\n    return memoizeResultRight\n  }\n\n  // If a comparator is present, use it.\n  if (comparator) {\n    const comparatorResult = comparator(leftHandOperand, rightHandOperand, key)\n    // Comparators may return null, in which case we want to go back to default behavior.\n    if (comparatorResult === false || comparatorResult === true) {\n      memoizeSet(leftHandOperand, rightHandOperand, memoize, comparatorResult)\n      return comparatorResult\n    }\n    // To allow comparators to override *any* behavior, we ran them first. Since it didn't decide\n    // what to do, we need to make sure to return the basic tests first before we move on.\n    const simpleResult = simpleEqual(leftHandOperand, rightHandOperand)\n    if (simpleResult !== null) {\n      // Don't memoize this, it takes longer to set/retrieve than to just compare.\n      return simpleResult\n    }\n  }\n\n  const leftHandType = type_detect(leftHandOperand)\n  if (leftHandType !== type_detect(rightHandOperand)) {\n    memoizeSet(leftHandOperand, rightHandOperand, memoize, false)\n    return false\n  }\n\n  // Temporarily set the operands in the memoize object to prevent blowing the stack\n  memoizeSet(leftHandOperand, rightHandOperand, memoize, true)\n\n  const result = extensiveDeepEqualByType(\n    leftHandOperand,\n    rightHandOperand,\n    leftHandType,\n    options as any\n  )\n  memoizeSet(leftHandOperand, rightHandOperand, memoize, result)\n  return result\n}\n\nfunction extensiveDeepEqualByType(\n  leftHandOperand: any,\n  rightHandOperand: any,\n  leftHandType: string,\n  options?: DeepEqlOptions | undefined\n) {\n  switch (leftHandType) {\n    case \"String\":\n    case \"Number\":\n    case \"Boolean\":\n    case \"Date\":\n      // If these types are their instance types (e.g. `new Number`) then re-deepEqual against their values\n      return _deepEqual(leftHandOperand.valueOf(), rightHandOperand.valueOf())\n    case \"Promise\":\n    case \"Symbol\":\n    case \"function\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return leftHandOperand === rightHandOperand\n    case \"Error\":\n      return keysEqual(\n        leftHandOperand,\n        rightHandOperand,\n        [\"name\", \"message\", \"code\"],\n        options\n      )\n    case \"Arguments\":\n    case \"Int8Array\":\n    case \"Uint8Array\":\n    case \"Uint8ClampedArray\":\n    case \"Int16Array\":\n    case \"Uint16Array\":\n    case \"Int32Array\":\n    case \"Uint32Array\":\n    case \"Float32Array\":\n    case \"Float64Array\":\n    case \"Array\":\n      return iterableEqual(leftHandOperand, rightHandOperand, options)\n    case \"RegExp\":\n      return regexpEqual(leftHandOperand, rightHandOperand)\n    case \"Generator\":\n      return generatorEqual(leftHandOperand, rightHandOperand, options)\n    case \"DataView\":\n      return iterableEqual(\n        new Uint8Array(leftHandOperand.buffer),\n        new Uint8Array(rightHandOperand.buffer),\n        options\n      )\n    case \"ArrayBuffer\":\n      return iterableEqual(\n        new Uint8Array(leftHandOperand),\n        new Uint8Array(rightHandOperand),\n        options\n      )\n    case \"Set\":\n      return entriesEqual(leftHandOperand, rightHandOperand, options)\n    case \"Map\":\n      return entriesEqual(leftHandOperand, rightHandOperand, options)\n    case \"Temporal.PlainDate\":\n    case \"Temporal.PlainTime\":\n    case \"Temporal.PlainDateTime\":\n    case \"Temporal.Instant\":\n    case \"Temporal.ZonedDateTime\":\n    case \"Temporal.PlainYearMonth\":\n    case \"Temporal.PlainMonthDay\":\n      return leftHandOperand.equals(rightHandOperand)\n    case \"Temporal.Duration\":\n      return (\n        leftHandOperand.total(\"nanoseconds\") ===\n        rightHandOperand.total(\"nanoseconds\")\n      )\n    case \"Temporal.TimeZone\":\n    case \"Temporal.Calendar\":\n      return leftHandOperand.toString() === rightHandOperand.toString()\n    default:\n      return objectEqual(leftHandOperand, rightHandOperand, options)\n  }\n}\n\n/*!\n * Compare two Regular Expressions for equality.\n *\n * @param {RegExp} leftHandOperand\n * @param {RegExp} rightHandOperand\n * @return {Boolean} result\n */\n\nfunction regexpEqual(leftHandOperand: RegExp, rightHandOperand: RegExp) {\n  return leftHandOperand.toString() === rightHandOperand.toString()\n}\n\n/*!\n * Compare two Sets/Maps for equality. Faster than other equality functions.\n *\n * @param {Set} leftHandOperand\n * @param {Set} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction entriesEqual(\n  leftHandOperand: Set<any> | Map<any, any>,\n  rightHandOperand: Set<any> | Map<any, any>,\n  options?: DeepEqlOptions | undefined\n): boolean {\n  // IE11 doesn't support Set#entries or Set#@@iterator, so we need manually populate using Set#forEach\n  if (leftHandOperand.size !== rightHandOperand.size) {\n    return false\n  }\n  if (leftHandOperand.size === 0) {\n    return true\n  }\n  const leftHandItems: any[] = []\n  const rightHandItems: any[] = []\n  leftHandOperand.forEach(function gatherEntries(key, value) {\n    leftHandItems.push([key, value])\n  })\n  rightHandOperand.forEach(function gatherEntries(key, value) {\n    rightHandItems.push([key, value])\n  })\n  return iterableEqual(leftHandItems.sort(), rightHandItems.sort(), options)\n}\n\n/*!\n * Simple equality for flat iterable objects such as Arrays, TypedArrays or Node.js buffers.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction iterableEqual(\n  leftHandOperand: ArrayLike<any>,\n  rightHandOperand: ArrayLike<any>,\n  options?: DeepEqlOptions | undefined\n): boolean {\n  const length = leftHandOperand.length\n  if (length !== rightHandOperand.length) {\n    return false\n  }\n  if (length === 0) {\n    return true\n  }\n  let index = -1\n  while (++index < length) {\n    if (\n      _deepEqual(leftHandOperand[index], rightHandOperand[index], options) ===\n      false\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/*!\n * Simple equality for generator objects such as those returned by generator functions.\n *\n * @param {Iterable} leftHandOperand\n * @param {Iterable} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\n\nfunction generatorEqual(\n  leftHandOperand: Iterator<any>,\n  rightHandOperand: Iterator<any>,\n  options?: DeepEqlOptions | undefined\n): boolean {\n  return iterableEqual(\n    getGeneratorEntries(leftHandOperand),\n    getGeneratorEntries(rightHandOperand),\n    options\n  )\n}\n\n/*!\n * Determine if the given object has an @@iterator function.\n *\n * @param {Object} target\n * @return {Boolean} `true` if the object has an @@iterator function.\n */\nfunction hasIteratorFunction(target: any): boolean {\n  return (\n    typeof Symbol !== \"undefined\" &&\n    typeof target === \"object\" &&\n    typeof Symbol.iterator !== \"undefined\" &&\n    typeof target[Symbol.iterator] === \"function\"\n  )\n}\n\n/*!\n * Gets all iterator entries from the given Object. If the Object has no @@iterator function, returns an empty array.\n * This will consume the iterator - which could have side effects depending on the @@iterator implementation.\n *\n * @param {Object} target\n * @returns {Array} an array of entries from the @@iterator function\n */\nfunction getIteratorEntries(target: any): any[] {\n  if (hasIteratorFunction(target)) {\n    try {\n      return getGeneratorEntries(target[Symbol.iterator]())\n    } catch (iteratorError) {\n      return []\n    }\n  }\n  return []\n}\n\n/*!\n * Gets all entries from a Generator. This will consume the generator - which could have side effects.\n *\n * @param {Generator} target\n * @returns {Array} an array of entries from the Generator.\n */\nfunction getGeneratorEntries(generator: Iterator<any>): any[] {\n  let generatorResult = generator.next()\n  const accumulator = [generatorResult.value]\n  while (generatorResult.done === false) {\n    generatorResult = generator.next()\n    accumulator.push(generatorResult.value)\n  }\n  return accumulator\n}\n\n/*!\n * Gets all own and inherited enumerable keys from a target.\n *\n * @param {Object} target\n * @returns {Array} an array of own and inherited enumerable keys from the target.\n */\nfunction getEnumerableKeys(target: any): string[] {\n  const keys = []\n  for (const key in target) {\n    if (target[key] !== undefined) keys.push(key)\n  }\n  return keys\n}\n\nfunction getEnumerableSymbols(target: any): symbol[] {\n  const keys = []\n  const allKeys = Object.getOwnPropertySymbols(target)\n  for (let i = 0; i < allKeys.length; i += 1) {\n    const key = allKeys[i]\n    if (Object.getOwnPropertyDescriptor(target, key)?.enumerable === true) {\n      keys.push(key)\n    }\n  }\n  return keys\n}\n\n/*!\n * Determines if two objects have matching values, given a set of keys. Defers to deepEqual for the equality check of\n * each key. If any value of the given key is not equal, the function will return false (early).\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Array} keys An array of keys to compare the values of leftHandOperand and rightHandOperand against\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction keysEqual(\n  leftHandOperand: any,\n  rightHandOperand: any,\n  keys: (string | symbol)[],\n  options?: DeepEqlOptions | undefined\n): boolean {\n  const length = keys.length\n  if (length === 0) {\n    return true\n  }\n  for (let i = 0; i < length; i += 1) {\n    const key = keys[i]\n    const lhs = leftHandOperand[key]\n    const rhs = rightHandOperand[key]\n    if (typeof lhs === \"function\" && typeof rhs === \"function\") {\n      if (lhs.toString() !== rhs.toString()) {\n        return false\n      }\n    } else {\n      const eql = _deepEqual(lhs, rhs, options, key)\n      if (eql === false) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/*!\n * Recursively check the equality of two Objects. Once basic sameness has been\n * established it will defer to `deepEqual` for each enumerable key in the\n * object.\n *\n * @param {Mixed} leftHandOperand\n * @param {Mixed} rightHandOperand\n * @param {Object} [options] (Optional)\n * @return {Boolean} result\n */\nfunction objectEqual(\n  leftHandOperand: Record<string | symbol, any>,\n  rightHandOperand: Record<string | symbol, any>,\n  options?: DeepEqlOptions | undefined\n): boolean {\n  if (typeof leftHandOperand.eql === \"function\") {\n    const result = leftHandOperand.eql(rightHandOperand)\n    if (isBoolean(result)) return result\n  }\n\n  if (typeof rightHandOperand.eql === \"function\") {\n    const result = rightHandOperand.eql(leftHandOperand)\n    if (isBoolean(result)) return result\n  }\n\n  if (typeof leftHandOperand.toJSON === \"function\") {\n    return objectEqual(leftHandOperand.toJSON(), rightHandOperand, options)\n  }\n\n  if (typeof rightHandOperand.toJSON === \"function\") {\n    return objectEqual(leftHandOperand, rightHandOperand.toJSON(), options)\n  }\n\n  if (\n    typeof leftHandOperand === \"object\" &&\n    typeof rightHandOperand === \"object\" &&\n    typeof leftHandOperand.constructor === \"function\" &&\n    typeof rightHandOperand.constructor === \"function\"\n  ) {\n    if (\n      false ===\n      objectEqual(\n        leftHandOperand.constructor,\n        rightHandOperand.constructor,\n        options\n      )\n    ) {\n      return false\n    }\n  }\n\n  const leftHandKeys = [\n    ...getEnumerableKeys(leftHandOperand),\n    ...getEnumerableSymbols(leftHandOperand)\n  ]\n  const rightHandKeys = [\n    ...getEnumerableKeys(rightHandOperand),\n    ...getEnumerableSymbols(rightHandOperand)\n  ]\n\n  if (leftHandKeys.length && leftHandKeys.length === rightHandKeys.length) {\n    if (\n      iterableEqual(\n        mapSymbols(leftHandKeys).sort(),\n        mapSymbols(rightHandKeys).sort()\n      ) === false\n    ) {\n      return false\n    }\n    return keysEqual(leftHandOperand, rightHandOperand, leftHandKeys, options)\n  }\n\n  const leftHandEntries = getIteratorEntries(leftHandOperand)\n  const rightHandEntries = getIteratorEntries(rightHandOperand)\n  if (\n    leftHandEntries.length &&\n    leftHandEntries.length === rightHandEntries.length\n  ) {\n    leftHandEntries.sort()\n    rightHandEntries.sort()\n    return iterableEqual(leftHandEntries, rightHandEntries, options)\n  }\n\n  if (\n    leftHandKeys.length === 0 &&\n    leftHandEntries.length === 0 &&\n    rightHandKeys.length === 0 &&\n    rightHandEntries.length === 0\n  ) {\n    return true\n  }\n\n  return false\n}\n\n/*!\n * Returns true if the argument is a primitive.\n *\n * This intentionally returns true for all objects that can be compared by reference,\n * including functions and symbols.\n *\n * @param {Mixed} value\n * @return {Boolean} result\n */\nfunction isPrimitive(value: any) {\n  return value === null || typeof value !== \"object\"\n}\n\nfunction mapSymbols(arr: any) {\n  return arr.map(function mapSymbol(entry: any) {\n    if (typeof entry === \"symbol\") {\n      return entry.toString()\n    }\n\n    return entry\n  })\n}\n","import { secondMs } from \"./Date\"\nimport { isBrowser, isNode } from \"./NodeOrBrowser\"\nimport { gt0 } from \"./Number\"\nimport { maybeCall } from \"./Object\"\n\nexport function delayUntil(date: Date | number) {\n  const t = gt0(date) ? date : date.getTime()\n  const delayMs = t - Date.now()\n  if (delayMs < 0) {\n    if (delayMs > -500) {\n      // meh close enough\n      return\n    } else {\n      throw new Error(\n        \"Mr. Fusion not found, cannot time travel back \" + -delayMs + \"ms\"\n      )\n    }\n  }\n  return delay(delayMs).then(() => delayMs)\n}\n\nexport function delay(millis: number, unref: boolean = true) {\n  // On windows at least, setTimeout() only ensures N-1 millis have passed.\n  return new Promise<void>(resolve => {\n    if (millis <= 0) {\n      resolve()\n    } else {\n      // ceil(+0.5) to make sure we wait enough time:\n\n      // SITS: any casting shenanigans to make this work on the frontend and\n      // backend:\n      const t: any = setTimeout(() => resolve(), Math.ceil(millis + 0.5))\n      if (millis > secondMs && unref && isNode) {\n        // if the millis is trivial, don't bother to unref\n        t.unref() // < only node has unref!\n      }\n    }\n  })\n}\n\nexport function later(f: () => any, delayMs: number = 1) {\n  const ms = Math.max(1, Math.ceil(delayMs))\n  const t = isNode && ms <= 1 ? setImmediate(f) : setTimeout(f, ms)\n  return isBrowser || delayMs <= secondMs ? t : maybeCall(t, \"unref\") ?? t\n}\n","import { deepEql } from \"./DeepEql\"\nimport { isFunction } from \"./isFunction\"\n\nexport function eql(a: any, b: any): boolean {\n  return deepEql(a, b, { comparator })\n}\n\n// export function isEqlSimple(a: any, b: any): boolean | undefined {\n//   // same pointer or primitive value is eql\n//   if (a === b) return true\n\n//   // undefined != null\n//   if (a == null || b == null) return false\n\n//   // a and b must be the same type\n//   if (typeof a !== typeof b) return false\n\n//   // typeof's match, so if either is a string, both are\n//   if (isString(a)) {\n//     return eqlStrings(a, b)\n//   }\n\n//   if (isPrimitive(a)) {\n//     return a === b\n//   }\n\n//   return undefined\n// }\n\n// const DefaultMaxDepth = 10\n\n// export function eql2(a: any, b: any, maxDepth = DefaultMaxDepth): boolean {\n//   if (maxDepth < 0) return true\n\n//   const simpleEql = isEqlSimple(a, b)\n//   if (simpleEql != null) return simpleEql\n\n//   // typeof [] === 'object' (!!!!), so don't test for isObject before isArray!\n//   if (Array.isArray(a) || Array.isArray(b)) {\n//     return isEqlArray(a, b, maxDepth - 1) ?? false\n//   }\n\n//   if (isFunction(a) && isFunction(b)) {\n//     // toString() returns the function implementation\n//     return a.toString() === b.toString()\n//   }\n\n//   if (typeof a === \"object\" && typeof b === \"object\") {\n//     return isEqlObject(a, b, maxDepth - 1)\n//   }\n//   return false\n// // }\n\n// export function isEqlArray(\n//   a: any,\n//   b: any,\n//   maxDepth = DefaultMaxDepth\n// ): boolean | undefined {\n//   if (!Array.isArray(a) || !Array.isArray(b)) return undefined\n//   if (a.length !== b.length) return false\n//   for (let i = 0; i < a.length; i++) {\n//     if (!eql(a[i], b[i], maxDepth - 1)) return false\n//   }\n//   return true\n// }\n\nexport function dateComparator(a: any, b: any): undefined | boolean {\n  if (a instanceof Date && b instanceof Date) {\n    return a.getTime() === b.getTime()\n  }\n  return undefined\n}\n\nexport function functionComparator(a: any, b: any): undefined | boolean {\n  return isFunction(a) && isFunction(b)\n    ? a.toString() === b.toString()\n    : undefined\n}\n\nexport type Comparator = (a: any, b: any) => undefined | boolean\n\nconst objComparators: Comparator[] = [dateComparator, functionComparator]\nconst fieldComparators = new Map<string | symbol, Comparator>()\n\nexport function pushObjComparator(c: Comparator) {\n  objComparators.push(c)\n}\n\nexport function unshiftObjComparator(c: Comparator) {\n  objComparators.unshift(c)\n}\n\nexport function setFieldComparator(fieldName: string | symbol, c: Comparator) {\n  fieldComparators.set(fieldName, c)\n}\n\nfunction comparator(a: any, b: any, key?: string | symbol): boolean | null {\n  if (a == null || b == null) return a === b // null should not eql undefined\n  if (key != null) {\n    const c = fieldComparators.get(key)\n    if (c != null) return c(a, b) ?? null\n  }\n  for (const ea of objComparators) {\n    const r = ea(a, b)\n    if (r != null) return r\n  }\n  return null\n}\n\n// export function fieldEql(\n//   fieldName: string,\n//   a: any,\n//   b: any,\n//   maxDepth = DefaultMaxDepth\n// ): boolean {\n//   return maxDepth < 0\n//     ? true\n//     : fieldComparators?.get(fieldName)?.(a, b) ?? eql(a, b, maxDepth - 1)\n// }\n\n// export function isEqlObject(\n//   a: Record<string, unknown>,\n//   b: Record<string, unknown>,\n//   maxDepth = DefaultMaxDepth\n// ): boolean {\n//   if (maxDepth < 0 || typeof a !== \"object\" || typeof b !== \"object\")\n//     return false\n//   if (a === b) return true\n\n//   for (const c of objComparators) {\n//     const result = c(a, b)\n//     if (result != null) return result\n//   }\n\n//   if (isFunction(a.eql)) {\n//     const r = a.eql(b)\n//     if (isBoolean(r)) return r\n//   }\n\n//   if (isFunction(b.eql)) {\n//     const r = b.eql(a)\n//     if (isBoolean(r)) return r\n//   }\n\n//   const aObj = isFunction(a.toJSON) ? a.toJSON() : a\n//   const bObj = isFunction(b.toJSON) ? b.toJSON() : b\n\n//   const e = isEqlSimple(aObj, bObj)\n//   if (e != null) return e\n\n//   // the order of keys\n//   const aKeys = sort(keysWithDefinedValues(aObj))\n//   const bKeys = sort(keysWithDefinedValues(bObj))\n\n//   if (true !== isEqlArray(aKeys, bKeys, maxDepth)) return false\n\n//   for (const key of aKeys) {\n//     if (fieldEql(key, aObj[key], bObj[key], maxDepth - 1) === false) {\n//       return false\n//     }\n//   }\n//   return true\n// }\n","import { compact, compactBlankish, isEmpty, uniq } from \"./Array\"\nimport { blank, notBlank, toNotBlank } from \"./Blank\"\nimport { flatten } from \"./Flatten\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { toInt } from \"./Number\"\nimport { assignFields, compactValues, omit } from \"./Object\"\nimport { toS } from \"./toS\"\n\n// the space after the colon prevents URLs from being split:\nexport const ErrorDelimiter = \": \"\n\nexport const IgnoredErrorNames = [\"Error\", \"String\", \"Object\", \"WrappedError\"]\n\n/**\n * @return the `.name` or class name of the Error, or undefined if not\n * informative (like \"Error\" or \"WrappedError\")\n */\nexport function errorName(\n  err: Maybe<Error | { name?: string }>\n): Maybe<string> {\n  return err == null\n    ? undefined\n    : [err?.name, err?.constructor?.name]\n        .find(ea => ea != null && !IgnoredErrorNames.includes(ea))\n        ?.toString()\n}\n\nexport function errorCode(err: any): Maybe<string> {\n  return err == null ? undefined : toNotBlank(err?.code) // like \"EBUSY\"\n}\n\nexport function errorErrno(err: any): Maybe<number> {\n  return err == null ? undefined : toInt(err?.errno)\n}\n\n// We should skip over the stack frames that are created from creating frames:\nconst FramesToIgnoreRE = /shortStack|errorToVerbose/\n\nexport function shortStack(stack?: string, maxLines = 9): string[] {\n  try {\n    if (blank(stack)) {\n      const err = new Error()\n      // captureStackTrace may not be a function on some browsers\n      Error.captureStackTrace?.(err)\n      stack = err.stack\n    }\n\n    const result = toS(stack)\n      .split(\"\\n\")\n      .filter(\n        ea =>\n          !blank(ea) &&\n          ea.trim().startsWith(\"at \") &&\n          FramesToIgnoreRE.exec(ea) == null\n      )\n      .slice(0, maxLines)\n      .map(ea => ea.replace(/^\\s*at /i, \"\"))\n\n    return isEmpty(result) ? [\"(missing stack)\"] : result\n  } catch (err) {\n    return [\"Failed to captured stacktrace: \" + err]\n  }\n}\n\nexport function asError(reason?: any): Error {\n  if (blank(reason)) {\n    throw new Error(\"undefined error\")\n  } else if (reason instanceof Error) {\n    return reason\n  } else if (Array.isArray(reason)) {\n    const first = reason[0]\n    if (first instanceof Error) {\n      if (reason.length > 1) {\n        ;(first as any).errors = reason.slice(1)\n      }\n      return first\n    } else {\n      return new Error(\n        reason\n          .map(ea => toS(ea))\n          .filter(notBlank)\n          .join(\", \")\n      )\n    }\n  } else {\n    // Errors render as \"Error: something bad happened\". If you create a new\n    // Error from that string, you'll get an Error that toString's to \"Error:\n    // Error: something bad happened\", so strip the name of the error and give\n    // it to the return value:\n    const s = errorToS(reason).replace(/^Error: /i, \"\")\n    return new Error(s)\n  }\n}\n\nexport function errorToJson(error: Error) {\n  return compactValues({\n    _ctor: Error.name,\n    message: error.message ?? String(error),\n    stack: error.stack,\n    name: errorName(error),\n    code: errorCode(error),\n    errno: errorErrno(error),\n    ...omit(error as any, \"name\", \"message\", \"code\", \"errno\")\n  })!\n}\n\nexport function errorFromJson(obj: any) {\n  return assignFields(new Error(), omit(obj, \"_ctor\"))\n}\n\n// core has a fancier version of this:\nexport function errorToArr(...errors: any[]): string[] {\n  const arr = []\n  for (const ea of errors) {\n    if (ea == null) continue\n    if (ea instanceof Error) {\n      arr.push(errorName(ea), errorCode(ea), ea?.message)\n    } else {\n      arr.push(toS(ea))\n    }\n  }\n  return uniq(\n    compactBlankish(flatten(compact(arr).map(ea => ea.split(ErrorDelimiter))))\n  )\n}\n\n// core has a fancier version of this:\nexport function errorToS(...errors: any[]): string {\n  return errorToArr(...errors).join(ErrorDelimiter)\n}\n","import { MaybeNull } from \"./MaybeTypes\"\nimport { toA } from \"./toA\"\n\n/**\n * Compacts and flattens ONE LEVEL\n */\nexport function flatten<T>(\n  arr: (MaybeNull<T> | MaybeNull<T>[])[],\n  result: T[] = []\n): T[] {\n  for (const ea1 of toA(arr)) {\n    if (ea1 != null) {\n      for (const ea2 of toA(ea1)) {\n        if (ea2 != null) result.push(ea2)\n      }\n    }\n  }\n  return result\n}\n","import { compact, isEmpty } from \"./Array\"\nimport { dayMs, hourMs, minuteMs, secondMs, weekMs, yearMs } from \"./Date\"\nimport { mapOr } from \"./Maybe\"\nimport { gte0, isNumber } from \"./Number\"\nimport { plur } from \"./Units\"\n\nconst Units = [\n  { ms: yearMs, s: \"year\", p: \"years\" },\n  { ms: yearMs / 12, s: \"month\", p: \"months\" }, // oof, but this is fuzzy\n  { ms: weekMs, s: \"week\", p: \"weeks\" },\n  { ms: dayMs, s: \"day\", p: \"days\" },\n  { ms: hourMs, s: \"hour\", p: \"hours\" },\n  { ms: minuteMs, s: \"minute\", p: \"minutes\" },\n  { ms: secondMs, s: \"second\", p: \"seconds\" }\n]\n\n/**\n * CAUTION: this is for human consumption, not robots: we render rough\n * \"months\"!\n */\nexport function fmtDuration(\n  ms: number,\n  units: number = 2,\n  suffix?: { singular: string; plural: string }\n): string {\n  if (!gte0(ms)) {\n    return !isNumber(ms) ? \"\" : \"-\" + fmtDuration(Math.abs(ms), units)\n  }\n  const largestUnitIndex = Units.findIndex(ea => ea.ms <= ms)\n  if (largestUnitIndex === -1) return \"\"\n  let remaining =\n    ms +\n    // hack for rounding:\n    mapOr(\n      Units[largestUnitIndex + Math.max(2, units) - 1],\n      ea => Math.round(ea.ms * 0.4),\n      0\n    )\n  const result = compact(\n    Units.slice(largestUnitIndex, largestUnitIndex + units).map(unit => {\n      if (unit.ms > remaining) {\n        return\n      } else {\n        const i = Math.floor(remaining / unit.ms)\n        remaining -= i * unit.ms\n        return { i, s: plur(i, unit.s, unit.p) }\n      }\n    })\n  )\n  if (isEmpty(result)) return \"\"\n  return (\n    result.map(ea => ea.s).join(\", \") +\n    mapOr(\n      suffix,\n      ea => \" \" + (result[result.length - 1].i !== 1 ? ea.singular : ea.plural),\n      \"\"\n    )\n  )\n}\n","import { compactBlanks, uniq } from \"./Array\"\n\nexport function fmtList(arr: string[], joinWord: string): string {\n  arr = uniq(compactBlanks(arr))\n  return arr == null || arr.length === 0\n    ? \"\"\n    : arr.length === 1\n    ? arr.join(\"\")\n    : arr.slice(0, -1).join(\", \") +\n      \" \" +\n      joinWord.trim() +\n      \" \" +\n      arr[arr.length - 1]\n}\n\nexport function orList(arr: string[]): string {\n  return fmtList(arr, \"or\")\n}\n\nexport function andList(arr: string[]): string {\n  return fmtList(arr, \"and\")\n}\n","import { strEnum, StrEnumKeys } from \"./StrEnum\"\n\n/**\n * @see https://en.wikipedia.org/wiki/Graphics_display_resolution\n */\nexport const FitSizes = strEnum(\n  \"uhd8k\",\n  \"uhd5k\",\n  \"uhd4k\",\n  \"qhd\",\n  \"fhd\",\n  \"hd\",\n  \"wvga\",\n  \"qvga\",\n  \"qqvga\"\n)\nexport type FitSize = StrEnumKeys<typeof FitSizes>\nexport const FitSizeValues = FitSizes.values\n\nexport const SqSizes = strEnum(\"s480\", \"s240\", \"s120\", \"s60\")\nexport type SqSize = StrEnumKeys<typeof SqSizes>\n\nexport const SqWidths = [60, 120, 240, 480]\n\nexport type ImageSizeName = FitSize | SqSize\n","import { gt0, gte0, lt0 } from \"./Number\"\n\n/**\n * @return true if obj is both Iterable *and not a string* (because srsly wth)\n */\nexport function isIterable(obj: any): obj is Iterable<any> {\n  return (\n    obj != null &&\n    typeof obj !== \"string\" &&\n    typeof obj[Symbol.iterator] === \"function\"\n  )\n}\n\n// export function max<T>(i: Iterable<T>, f: (t: T) => Comparable): Maybe<T> {\n//   let result = undefined\n//   let m = undefined\n//   for (const ea of i) {\n//     const r = f(ea)\n//     if (m == null || m < r) {\n//       m = r\n//       result = ea\n//     }\n//   }\n//   return result\n// }\n\nexport function sliceIterable<T>(\n  iterable: Iterable<T>,\n  start: number,\n  end?: number\n): T[] {\n  // If start is negative, we have to iterate the whole thing anyway, so\n  // delegate to Array.slice():\n  if (lt0(start)) {\n    return [...iterable].slice(start, end)\n  }\n\n  const iter = iterable[Symbol.iterator]()\n  if (gt0(start)) {\n    for (let i = 0; i < start; i++) {\n      iter.next()\n    }\n  }\n  const result: T[] = []\n\n  // if end is null, run until .done:\n  for (let i = start; gte0(end) ? i < end : true; i++) {\n    const next = iter.next()\n    // This is pretty lame of the iterator interface, IMHO. Don't return an\n    // object with a value if it doesn't have a value!\n    if (next.value != null || next.done !== true) {\n      result.push(next.value)\n    }\n    if (next.done === true) {\n      break\n    }\n  }\n  // don't splice! This may change the underlying iterable!\n  if (lt0(end)) {\n    return result.slice(0, end)\n  }\n  return result\n}\n\nexport function countIterable(i: Iterable<any>): number {\n  // Avoids GC from creating an array\n  let c = 0\n  const iter = i[Symbol.iterator]()\n  while (true !== iter.next().done) c++\n  return c\n}\n","import { dateToJson } from \"./DateToJson\"\nimport { errorFromJson, errorToJson } from \"./Error\"\nimport { denull } from \"./Maybe\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { isFunction } from \"./isFunction\"\n\nexport type Json =\n  | string\n  | number\n  | boolean\n  | null\n  | undefined\n  | { [property: string]: Json }\n  | Json[]\n\nexport type DatedJson =\n  | string\n  | number\n  | boolean\n  | null\n  | undefined\n  | Date\n  | { [property: string]: DatedJson }\n  | DatedJson[]\n\n/**\n * Work-alike to JSON.stringify, except that circular dependencies are replaced\n * with a string reference.\n */\nexport function stringify(\n  ea: any,\n  replacer?: (this: any, key: string, value: any) => any,\n  space?: string | number\n): string {\n  return JSON.stringify(decycle(ea), replacer, denull(space))\n}\n\nexport function stringifyPretty(ea: any, indent = 2) {\n  return stringify(ea, undefined, indent)\n}\n\nexport interface JsonReviver {\n  name: string\n  fromJSON(ea: any): any\n}\n\nconst Revivers = new Map<string, JsonReviver>()\n\nexport function addJsonRevivers(...arr: JsonReviver[]) {\n  for (const ea of arr) {\n    Revivers.set(ea.name, ea)\n  }\n}\n\naddJsonRevivers(\n  {\n    name: Error.name,\n    fromJSON: errorFromJson\n  },\n  {\n    name: Date.name,\n    fromJSON: ea => new Date(ea.iso)\n  }\n)\n\nexport function parseJSON_<T>(s: string): T {\n  return retrocycle(JSON.parse(s, reviver)) as any\n}\n\nexport function parseJSON<T = any>(s: MaybeNull<string | Buffer>): Maybe<T> {\n  try {\n    const s2 = s?.toString().trim()\n    if (s2 != null && s2.length > 0) {\n      return parseJSON_(s2)\n    }\n  } catch {\n    //\n  }\n  return\n}\n\nfunction reviver(_key: string, value: any) {\n  // PERF: map inlined\n  const r = Revivers.get(value?._ctor)\n  return r == null ? value : r.fromJSON(value)\n}\n\nfunction toJSON(obj: any) {\n  return (\n    // We have to avoid Date.toJSON(): it just returns a string\n    (obj instanceof Date ? dateToJson(obj) : undefined) ??\n    obj?.toJSON?.() ??\n    (obj instanceof Error ? errorToJson(obj) : obj)\n  )\n}\n\n// https://github.com/douglascrockford/JSON-js/blob/master/cycle.js\n\n/**\n * Make a deep copy of an object or array, assuring that there is at most\n * one instance of each object or array in the resulting structure. The\n * duplicate references (which might be forming cycles) are replaced with\n * an object of the form\n *      {\"$ref\": PATH}\n * where the PATH is a JSONPath string that locates the first occurrence.\n * So,\n *      var a = [];\n *      a[0] = a;\n *      return JSON.stringify(JSON.decycle(a));\n * produces the string '[{\"$ref\":\"$\"}]'.\n * If a replacer function is provided, then it will be called for each value.\n * A replacer function receives a value and returns a replacement value.\n * JSONPath is used to locate the unique object. $ indicates the top level of\n * the object or array. [NUMBER] or [STRING] indicates a child element or\n * property.\n */\nfunction decycle(object: any) {\n  const objects: any[] = [] // Keep a reference to each unique object or array\n  const paths: string[] = [] // Keep the path to each unique object or array\n\n  return (function derez(value, path): any {\n    // The derez recurses through the object, producing the deep copy.\n\n    if (isFunction(value)) return undefined\n\n    let i: number // The loop counter\n    let name: string // Property name\n    let nu: any // The new object or array\n\n    let _value = toJSON(value)\n\n    // typeof null === 'object', so go on if this value is really an object but not\n    // one of the weird builtin objects.\n\n    if (typeof _value === \"object\" && _value != null) {\n      // Remove all fields that shouldn't be serialized:\n      for (const k in _value) {\n        if (k.startsWith(\"__\")) {\n          if (value === _value) {\n            _value = { ..._value }\n          }\n          delete _value[k]\n        }\n      }\n\n      // If the value is an object or array, look to see if we have already\n      // encountered it. If so, return a $ref/path object. This is a hard way,\n      // linear search that will get slower as the number of unique objects grows.\n\n      for (i = 0; i < objects.length; i += 1) {\n        if (objects[i] === _value) {\n          return { $ref: paths[i] }\n        }\n      }\n\n      // Otherwise, accumulate the unique value and its path.\n\n      objects.push(_value)\n      paths.push(path)\n\n      // If it is an array, replicate the array.\n\n      if (Array.isArray(_value)) {\n        nu = []\n\n        for (i = 0; i < _value.length; i += 1) {\n          nu[i] = derez(_value[i], path + \"[\" + i + \"]\")\n        }\n      } else {\n        // If it is an object, replicate the object.\n\n        nu = {}\n\n        for (name in _value) {\n          if (Object.prototype.hasOwnProperty.call(_value, name)) {\n            nu[name] = derez(\n              _value[name],\n              path + \"[\" + JSON.stringify(name) + \"]\"\n            )\n          }\n        }\n      }\n\n      return nu\n    }\n\n    return _value\n  })(object, \"$\")\n}\n\n/**\n  * Restore an object that was reduced by decycle. Members whose values are\n  * objects of the form\n  *      {$ref: PATH}\n  * are replaced with references to the value found by the PATH. This will\n  * restore cycles. `value` will be mutated.\n\n  * The eval function is used to locate the values described by a PATH. The\n  * root object is kept in a $ variable. A regular expression is used to\n  * assure that the PATH is extremely well formed. The regexp contains nested\n  * * quantifiers. That has been known to have extremely bad performance\n  * problems on some browsers for very long strings. A PATH is expected to be\n  * reasonably short. A PATH is allowed to belong to a very restricted subset of\n  * Goessner's JSONPath.\n\n  * So,\n  *      const s = '[{\"$ref\":\"$\"}]';\n  *      return JSON.retrocycle(JSON.parse(s));\n  * produces an array containing a single element which is the array itself.\n*/\nfunction retrocycle($: any) {\n  const px =\n    /^\\$(?:\\[(?:\\d+|\\\"(?:[^\\\\\\\"\\u0000-\\u001f]|\\\\([\\\\\\\"\\/bfnrt]|u[0-9a-zA-Z]{4}))*\\\")\\])*$/\n\n  ;(function rez(value) {\n    // The rez function walks recursively through the object looking for $ref\n    // properties. When it finds one that has a value that is a path, then it\n    // replaces the $ref object with a reference to the value that is found by\n    // the path.\n\n    let i, item, name, path\n\n    if (value != null && typeof value === \"object\") {\n      if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n        for (i = 0; i < value.length; i += 1) {\n          item = value[i]\n\n          if (item != null && typeof item === \"object\") {\n            path = item.$ref\n\n            if (typeof path === \"string\" && px.test(path)) {\n              value[i] = eval(path)\n            } else {\n              rez(item)\n            }\n          }\n        }\n      } else {\n        for (name in value) {\n          if (typeof value[name] === \"object\") {\n            item = value[name]\n\n            if (item != null) {\n              path = item.$ref\n\n              if (typeof path === \"string\" && px.test(path)) {\n                value[name] = eval(path)\n              } else {\n                rez(item)\n              }\n            }\n          }\n        }\n      }\n    }\n  })($)\n\n  return $\n}\n","import { PromiseState } from \"./PromiseState\"\n\n// This is used by logging, so it can't have any dependencies.\n\n/**\n * Simple one-count concurrent barrier\n */\nexport class Latch implements Promise<void> {\n  // required by lib.es2015:\n  readonly [Symbol.toStringTag] = \"Latch\"\n  // Expose `promise` so we can have a honest-to-goodness Promise\n  readonly promise: Promise<void>\n  private _state: PromiseState = \"pending\"\n  error?: Error\n  private _resolve!: () => void\n  private _reject!: (err?: Error) => void\n\n  constructor(readonly id?: any) {\n    this.promise = new Promise<void>((resolve, reject) => {\n      this._resolve = resolve\n      this._reject = reject\n    })\n  }\n\n  // This is used by LogMeta for logging:\n  toLogJSON() {\n    return {\n      _ctor: \"Latch\",\n      id: this.id,\n      state: this.state()\n    }\n  }\n\n  resolve(): Latch {\n    if (this.isPending()) {\n      this._resolve()\n      this._state = \"resolved\"\n    }\n    return this\n  }\n\n  reject(error?: Error): Latch {\n    if (this.isPending()) {\n      this._reject(error)\n      this._state = \"rejected\"\n      this.error = error\n    }\n    return this\n  }\n\n  observe(p: Promise<any>): this {\n    p.then(\n      () => this.resolve(),\n      err => this.reject(err)\n    )\n    return this\n  }\n\n  observeQuietly(p: Promise<any>): this {\n    p.then(\n      () => this.resolve(),\n      () => this.resolve()\n    )\n    return this\n  }\n\n  isPending(): boolean {\n    return this._state === \"pending\"\n  }\n\n  isSettled() {\n    return !this.isPending()\n  }\n\n  isResolved() {\n    return this._state === \"resolved\"\n  }\n\n  isRejected() {\n    return this._state === \"rejected\"\n  }\n\n  state(): PromiseState {\n    return this._state\n  }\n\n  then<T1, T2>(\n    onfulfilled?: ((v: void) => T1 | PromiseLike<T1>) | undefined | null,\n    onrejected?: ((reason: any) => T2 | PromiseLike<T2>) | undefined | null\n  ): Promise<T1 | T2> {\n    return this.promise.then(onfulfilled, onrejected)\n  }\n\n  catch<TResult = never>(\n    onrejected?:\n      | ((reason: any) => TResult | PromiseLike<TResult>)\n      | undefined\n      | null\n  ): Promise<void | TResult> {\n    return this.promise.catch(onrejected)\n  }\n\n  finally(onfinally?: (() => void) | undefined | null): Promise<void> & this {\n    void this.promise.finally(onfinally)\n    return this\n  }\n}\n","import { isEmpty } from \"./Array\"\nimport { ChangeListener } from \"./ChangeListener\"\nimport { eql } from \"./Eql\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { gt0 } from \"./Number\"\nimport { setUnrefTimeout } from \"./UnrefTimeout\"\nimport { UnwrapPromiseLike } from \"./UnwrapPromiseLike\"\n\n// USED BY LOG: DON'T DEPEND ON ANYTHING (much)\n\nexport interface MemoizedLazy<T> {\n  /**\n   * Force the prior value to be `t`\n   */\n  set(t: T): void\n  /**\n   * clears the prior value\n   * @return the prior value\n   */\n  clear(): Maybe<T>\n  /**\n   * Clears the prior value but doesn't return it (so we don't have to\n   * explicitly ignore unawaited promises)\n   */\n  unset(): void\n  /**\n   * Forces the underlying thunk or later to be applied\n   */\n  refresh(): T\n  /**\n   * @return the milliseconds a prior result may be returned by `apply`, or\n   * undefined if no TTL is set\n   */\n  ttl(): Maybe<number>\n  /**\n   * @param ttl undefined to remove TTL expirations\n   */\n  setTTL(ttl: number | undefined): void\n  /**\n   * Immediately calls the listener with current value, and calls the listener\n   * if the result changes.\n   */\n  watch(watcher: ChangeListener<T>): void\n  /**\n   * Calls the listener if the result changes later. The underlying thunk is\n   * not applied now (like with {@link MemoizedThunk.watch}).\n   */\n  watchLater(watcher: ChangeListener<T>): void\n  lastSetAgoMs(): Maybe<number>\n  /**\n   * Was this applied and not cleared or unset?\n   */\n  hasPrior(): boolean\n  /**\n   * @return the previously-memoized value, if it isn't stale (according to\n   * `ttl()`)\n   */\n  prior(): Maybe<T>\n\n  /**\n   * Has a result not been calculated, or was calculated more than `ttl()` ms\n   * ago?\n   */\n  isStale(): boolean\n\n  toString(): string\n}\n\nexport interface MemoizedThunk<T> extends MemoizedLazy<T> {\n  (): T\n}\n\nexport type UnwrapLazy<T> = T extends MemoizedThunk<infer U> ? U : T\nexport type UnwrapLazyAsync<T> = T extends MemoizedThunk<infer U>\n  ? UnwrapPromiseLike<U>\n  : T\n\n// HEY, FUTURE ME: yeah, I know you think something here should call\n// ee().on(\"clearCache\",), but DON'T DO IT, MAN. lazy is used by lots of\n// instances that we want to be garbage collected, and that would create a huge\n// memory leak.\n\n/**\n * @param ttlMs if 0 or null, the result of `thunk` will be cached forever.\n */\nexport function lazy<T>(thunk: () => T, ttlMs?: number): MemoizedThunk<T> {\n  let lastSetTs: number | undefined\n  let result: T | undefined\n  const watchers: ChangeListener<T>[] = []\n\n  // HEY FUTURE ME: We're using named functions here, instead of fat arrows,\n  // so they show up properly in stacktraces.\n\n  function Lazy() {\n    if (Lazy.isStale()) {\n      // NO PROMISE AWAITING HERE. Otherwise N calls would go through while we\n      // wait for the promise to resolve.\n      Lazy.setResult(thunk())\n    }\n    return result!\n  }\n  // REMEMBER: function `.name` is not allowed to be overridden!\n\n  async function onSetResult(priorP: Maybe<T>, currentP: T) {\n    if (isEmpty(watchers)) return\n    // prior and current could be a promise!\n\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const _prior = await priorP\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const current = await currentP\n    if (!eql(_prior, current)) {\n      for (const ea of watchers) ea(current)\n    }\n    // We're interpreting undefined as unset, and `null` as a valid set value.\n    if (ttlMs != null && ttlMs > 0 && current !== undefined) {\n      // help the garbage collector:\n      setUnrefTimeout(() => Lazy.vacuum(), ttlMs)\n    }\n  }\n\n  Lazy.vacuum = function vacuum() {\n    if (Lazy.isStale()) Lazy.unset()\n  }\n\n  Lazy.setResult = function setResult(t: T) {\n    lastSetTs = Date.now()\n    void onSetResult(result, t)\n    return (result = t)\n  }\n\n  Lazy.isStale = function isStale() {\n    return lastSetTs == null || (gt0(ttlMs) && lastSetTs + ttlMs < Date.now())\n  }\n\n  Lazy.set = function set(t: T) {\n    Lazy.setResult(t)\n  }\n\n  Lazy.unset = function unset() {\n    Lazy.setResult(undefined as any)\n    lastSetTs = undefined\n  }\n\n  Lazy.clear = function clear() {\n    const _prior = result\n    Lazy.unset()\n    return _prior\n  }\n\n  Lazy.prior = function prior() {\n    Lazy.vacuum()\n    return result\n  }\n\n  Lazy.refresh = function refresh() {\n    return Lazy.setResult(thunk())\n  }\n\n  Lazy.ttl = function ttl() {\n    return ttlMs\n  }\n\n  Lazy.setTTL = function setTTL(ttl: number | undefined) {\n    ttlMs = gt0(ttl) ? ttl : undefined\n  }\n\n  Lazy.watchLater = function watchLater(watcher: ChangeListener<T>) {\n    watchers.push(watcher)\n  }\n\n  Lazy.watch = function watch(watcher: ChangeListener<T>) {\n    watcher(Lazy())\n    Lazy.watchLater(watcher)\n  }\n\n  Lazy.toString = function toString() {\n    return \"[Lazy]\"\n  }\n\n  Lazy.toJSON = function toJSON() {\n    // We don't support JSON encode/decode:\n    return undefined\n  }\n\n  Lazy.lastSetAgoMs = function lastSetAgoMs() {\n    return lastSetTs == null ? undefined : Date.now() - lastSetTs\n  }\n\n  Lazy.hasPrior = function hasPrior() {\n    return lastSetTs != null\n  }\n\n  return Lazy\n}\n","export function getOrSet<K, V>(\n  m: Map<K, V> | WeakMap<any, V>,\n  k: K,\n  valueThunk: () => V\n): V {\n  if (k == null) throw new Error(\"null key\")\n  if (m.has(k)) {\n    return m.get(k)!\n  } else {\n    const v = valueThunk()\n    if (v != null) m.set(k, v)\n    return v\n  }\n}\n\nexport function deleteIf<K, V>(\n  m: Map<K, V>,\n  predicate: (key: K, value: V) => boolean\n) {\n  for (const [k, v] of m.entries()) {\n    if (predicate(k, v)) {\n      m.delete(k)\n    }\n  }\n}\n","import { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { toS } from \"./toS\"\n\nexport function map<T, U>(obj: MaybeNull<T>, f: (t: T) => U): Maybe<U> {\n  // isNaN({a:1}) === true\n  return obj == null ? undefined : f(obj)\n}\n\nexport function mapTry<T, U>(f: () => MaybeNull<T>, g: (t: T) => U): Maybe<U> {\n  try {\n    return map(f(), g)\n  } catch {\n    return\n  }\n}\n\nexport function map2<T1, T2, U>(\n  t1: MaybeNull<T1>,\n  t2: MaybeNull<T2>,\n  f: (ea1: T1, ea2: T2) => U\n): Maybe<U> {\n  return t1 == null || t2 == null ? undefined : f(t1, t2)\n}\n\nexport function map3<T1, T2, T3, U>(\n  t1: MaybeNull<T1>,\n  t2: MaybeNull<T2>,\n  t3: MaybeNull<T3>,\n  f: (ea1: T1, ea2: T2, ea3: T3) => U\n): Maybe<U> {\n  return t1 == null || t2 == null || t3 == null ? undefined : f(t1, t2, t3)\n}\n\nexport function orElse<T>(obj: MaybeNull<T>, defaultValue: ThunkOrT<T>): T {\n  return obj != null ? obj : tot(defaultValue)\n}\n\nexport function mapOr<T, U>(\n  obj: MaybeNull<T>,\n  f: (t: T) => U,\n  defaultValue: ThunkOrT<U>\n): U {\n  return obj != null ? f(obj) : tot(defaultValue)\n}\n\nexport function map2Or<T1, T2, U>(\n  t1: MaybeNull<T1>,\n  t2: MaybeNull<T2>,\n  f: (ea1: T1, ea2: T2) => U,\n  defaultValue: () => U\n): U {\n  return orElse(map2(t1, t2, f), defaultValue)\n}\n\n// https://www.typescriptlang.org/docs/handbook/advanced-types.html#predefined-conditional-types\n\nexport type Diff<T, U> = T extends U ? never : T\n\nexport type Unpick<T, U> = { [P in keyof T]: P extends U ? never : T[P] }\n\nexport type Defined<T> = Diff<T, null | undefined | void>\n\n/**\n * @return true iff all `objects` are not `null` or `undefined`\n */\nexport function defined<T>(object: T): object is Defined<T> {\n  return object != null\n}\n\n/**\n * Like `map`, but calls `f` if `obj` is not `undefined`.\n *\n * To clarify, if `obj` is `null`, `f` will be called with `null`.\n */\nexport function ifDefined<T, U>(obj: T | undefined, f: (t: T) => U): Maybe<U> {\n  return obj === undefined ? undefined : f(obj)\n}\n\nexport function allDefined<T>(arr: T[]): arr is Defined<T>[] {\n  return arr != null && arr.every(defined)\n}\n\nexport function firstDefined<T>(...objects: MaybeNull<T>[]): Maybe<T> {\n  return objects.find(defined)\n}\n\nexport function denull<T>(t: T | undefined | null): T | undefined {\n  return t == null || toS(t) === \"null\" ? undefined : t\n}\n\nexport function nulled<T>(t: T | undefined | null): T | null {\n  return t == null ? null : t\n}\n","import {\n  filterInPlace,\n  isEmpty,\n  isNotEmpty,\n  pushUniq,\n  sum,\n  uniq\n} from \"./Array\"\nimport { sortBy } from \"./ArraySort\"\nimport { eql } from \"./Eql\"\nimport { stringify } from \"./JSON\"\nimport { getOrSet } from \"./Map\"\nimport { map } from \"./Maybe\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { Primitive } from \"./Primitive\"\nimport { isString } from \"./String\"\nimport { toA } from \"./toA\"\n\n/**\n * Multi-valued Map.\n */\nexport class MultiMap<K, V> {\n  readonly store: Map<K, V[]>\n\n  constructor(store = new Map<K, V[]>()) {\n    this.store = store\n  }\n\n  get(key: K): V[] | undefined {\n    return this.store.get(key)\n  }\n\n  has(key: K): boolean {\n    return this.store.has(key)\n  }\n\n  includes(key: K, value: V): boolean {\n    return this.store.get(key)?.includes(value) === true\n  }\n\n  /**\n   * @return the number of unique keys in this store\n   */\n  keyCount(): number {\n    return this.store.size\n  }\n\n  /**\n   * @return the number of values in this store\n   */\n  valueCount(): number {\n    return sum(\n      [...this.store.values()].map(ea => ea.length),\n      ea => ea\n    )\n  }\n\n  add(key: K, ...values: V[]): V[] {\n    const store = getOrSet(this.store, key, () => [])\n    store.push(...values)\n    return store\n  }\n\n  addUniq(key: K, ...values: V[]): V[] {\n    return pushUniq(\n      getOrSet(this.store, key, () => []),\n      ...values\n    )\n  }\n\n  set(key: K, values: V[]) {\n    this.store.set(key, values)\n  }\n\n  delete(key: K, value?: V): boolean {\n    if (value == null) {\n      return this.store.delete(key)\n    } else {\n      const arr = this.store.get(key)\n      if (arr == null) {\n        return false\n      } else {\n        const result = arr.filter(ea => !eql(ea, value))\n        if (result.length === 0) {\n          this.store.delete(key)\n        } else {\n          this.store.set(key, result)\n        }\n        return arr.length !== result.length\n      }\n    }\n  }\n\n  clear(): this {\n    this.store.clear()\n    return this\n  }\n\n  keys(): IterableIterator<K> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<K> {\n      for (const [k, v] of self.store.entries()) {\n        if (v.length > 0) {\n          yield k\n        }\n      }\n    }\n    return iter()\n  }\n\n  values(): IterableIterator<V[]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<V[]> {\n      for (const [, v] of self.store.entries()) {\n        if (v.length > 0) {\n          yield v\n        }\n      }\n    }\n    return iter()\n  }\n\n  vacuum(f: (key: K, values: V[]) => Maybe<V[]> = (_k, v) => uniq(v)) {\n    for (const k of this.keys()) {\n      const prior = this.store.get(k)\n      const arr = prior == null ? [] : f(k, prior)\n      if (isEmpty(arr)) {\n        this.store.delete(k)\n      } else {\n        this.store.set(k, arr)\n      }\n    }\n  }\n\n  flatValues(): IterableIterator<V> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<V> {\n      for (const [, arr] of self.store.entries()) {\n        if (arr.length > 0) {\n          for (const ea of arr) {\n            yield ea\n          }\n        }\n      }\n    }\n    return iter()\n  }\n\n  entriesArray(): [K, V[]][] {\n    return [...this.store.entries()].filter(([, v]) => isNotEmpty(v))\n  }\n\n  entries(): IterableIterator<[K, V[]]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[K, V[]]> {\n      for (const [k, v] of self.store.entries()) {\n        if (v.length > 0) {\n          yield [k, v]\n        }\n      }\n    }\n    return iter()\n  }\n\n  tuples(): IterableIterator<[K, V]> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this\n    function* iter(): IterableIterator<[K, V]> {\n      for (const [k, v] of self.store.entries()) {\n        for (const ea of toA(v)) {\n          if (ea != null) yield [k, ea]\n        }\n      }\n    }\n    return iter()\n  }\n\n  filterInPlace(predicate: (key: K, value: V) => boolean): boolean {\n    let changed = false\n    for (const [k, arr] of this.store.entries()) {\n      const len = arr.length\n      filterInPlace(arr, v => predicate(k, v))\n      changed = changed || len !== arr.length\n      if (arr.length === 0) {\n        this.store.delete(k)\n      }\n    }\n    return changed\n  }\n\n  inverse(): MultiMap<V, K> {\n    const m = new MultiMap<V, K>()\n    for (const [k, v] of this.store.entries()) {\n      for (const ea of v) {\n        m.add(ea, k)\n      }\n    }\n    return m\n  }\n\n  findKeyByTuple(predicate: (key: K, value: V) => boolean): Maybe<K> {\n    for (const [k, v] of this.tuples()) {\n      if (predicate(k, v)) return k\n    }\n    return\n  }\n\n  filterKeysByTuple(predicate: (key: K, value: V) => boolean): K[] {\n    const result: K[] = []\n    for (const [k, arr] of this.entries()) {\n      if (arr.some(v => predicate(k, v))) result.push(k)\n    }\n    return result\n  }\n\n  toJSON(): Record<string, V[]> {\n    const result: Record<string, V[]> = {}\n    for (const [k, v] of this.entries()) {\n      result[isString(k) ? k : stringify(k)] = v\n    }\n    return result\n  }\n}\n\n/**\n * Groups the given enumeration\n * @return a copy of arr, sorted by the given constraint\n */\nexport function groupBy<K extends Primitive, V>(\n  arr: V[],\n  f: (t: V) => Maybe<K>\n): MultiMap<K, V> {\n  const m = new MultiMap<K, V>()\n  arr.forEach(ea => map(f(ea), k => m.add(k, ea)))\n  return m\n}\n\nexport function groupByValues<K extends Primitive, V>(\n  arr: V[],\n  f: (t: V) => Maybe<K>\n): V[][] {\n  const g = groupBy(arr, f)\n  return sortBy(toA(g.values()), ea => f(ea[0]))\n}\n","const g = globalThis as any\n\nexport const isBrowser =\n  typeof g?.window === \"object\" && typeof g?.document === \"object\"\n\nexport const isNode = typeof g?.process?.versions?.node === \"string\"\n","import { sort } from \"./ArraySort\"\nimport { blank } from \"./Blank\"\nimport { orElse } from \"./Maybe\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { toS } from \"./toS\"\n\nexport function isNumber(o: any): o is number {\n  return typeof o === \"number\" && !isNaN(o) && isFinite(o)\n}\n\nexport function isInvalidNumber(o: any): o is number {\n  return typeof o === \"number\" && (isNaN(o) || !isFinite(o))\n}\n\n// thinking about adding toNumber? Please use toInt or toFloat instead.\n\nconst numeralRE = /^\\d+$/\nexport function isDigits(o: any): boolean {\n  return toS(o).match(numeralRE) != null\n}\n\nconst nonNumericRE = /[^-\\.0-9\\s]/\n\nexport function isNumeric(o: any): boolean {\n  return toS(o).match(nonNumericRE) == null && toFloat(o) != null\n}\n\nexport function isBigInt(o: any): o is bigint {\n  return typeof o === \"bigint\"\n}\n\nexport function mapFinite<T>(i: Maybe<number>, f: (ea: number) => T): Maybe<T> {\n  return isNumber(i) ? f(i) : undefined\n}\n\nconst mapPredicate =\n  (f: (lhs: number, rhs: number) => boolean) =>\n  (lhs: MaybeNull<number>, rhs: MaybeNull<number>) =>\n    isNumber(lhs) && isNumber(rhs) && f(lhs, rhs)\n\nexport const lt = mapPredicate((i, j) => i < j)\nexport const lte = mapPredicate((i, j) => i <= j)\nexport const gt = mapPredicate((i, j) => i > j)\nexport const gte = mapPredicate((i, j) => i >= j)\n\nexport function finiteOrElse<T>(i: Maybe<number>, defaultValue: T): number | T {\n  return isNumber(i) ? i : defaultValue\n}\n\nexport function diff(i: Maybe<number>, j: Maybe<number>): Maybe<number> {\n  return isNumber(i) && isNumber(j) ? i - j : undefined\n}\n\nexport function absdiff(i: Maybe<number>, j: Maybe<number>): Maybe<number> {\n  return isNumber(i) && isNumber(j) ? Math.abs(i - j) : undefined\n}\n\nexport function safeDivide(numerator: number, denominator: number): number {\n  return numerator / (denominator === 0 ? 1e-8 : denominator)\n}\n\n/**\n * @return true iff a is within ((1-minCoeff)*b)±b\n */\nexport function approximates(\n  a: MaybeNull<number>,\n  b: MaybeNull<number>,\n  minCoeff: number = 0.95\n): boolean {\n  if (!isNumber(a) || !isNumber(b)) return false\n  if (a === b) return true\n  if (minCoeff >= 1) return false // it doesn't match!\n  const delta = (b === 0 ? 1e-5 : b) * (1 - minCoeff)\n  return within(b - delta, b + delta, a)\n}\n\n/**\n * @param min inclusive\n * @param max inclusive\n */\nexport function within(min: number, max: number, n: any): n is number {\n  if (n == null || !isNumber(n)) return false\n  ;[min, max] = sort([min, max])\n  return lte(min, n) && gte(max, n)\n}\n\nexport function max_(...arr: Maybe<number>[]): number {\n  let max: Maybe<number>\n  for (const ea of arr) {\n    if (isNumber(ea) && (max == null || max < ea)) max = ea\n  }\n  if (max == null) throw new Error(\"no numbers given to max()\")\n  else return max\n}\n\n/**\n * @return true iff expected is within ±delta of actual\n */\nexport function closeTo(\n  expected: MaybeNull<number>,\n  actual: MaybeNull<number>,\n  delta: number\n): boolean {\n  return isNumber(expected) && isNumber(actual)\n    ? // if the delta is _less than or equal to_, pass.\n      Math.abs(expected - actual) <= delta\n    : false\n}\n\nexport function trunc(n: Maybe<number>): Maybe<number> {\n  if (!isNumber(n)) return undefined\n  const i = Math.trunc(n)\n  return i === 0 ? Math.abs(i) : i\n}\n\nexport interface ToNumber {\n  toNumber(): number\n}\n\nexport function isToNumber(v: any): v is ToNumber {\n  return typeof v?.toNumber === \"function\"\n}\n\nfunction toNumber(\n  value: MaybeNull<number | bigint | string | ToNumber>,\n  opts: {\n    defaultValue: Maybe<number>\n    nton: (n: number) => number\n    ston: (s: string) => Maybe<number>\n  }\n): Maybe<number> {\n  if (blank(value)) return opts.defaultValue\n  if (isNumber(value)) return opts.nton(value)\n  if (isBigInt(value)) {\n    // CAREFUL! Old Safari will keel over due to lack of BigInt support: it's\n    // OK here, because the value typeof is \"bigint\", which would only be true\n    // where BigInt *is* supported.\n    if (\n      value > BigInt(Number.MAX_SAFE_INTEGER) ||\n      value < BigInt(Number.MIN_SAFE_INTEGER)\n    ) {\n      throw new Error(\"precision loss for \" + value)\n    }\n    return opts.nton(Number(value))\n  }\n  if (isToNumber(value)) return opts.nton(value.toNumber())\n  try {\n    const i = opts.ston(toS(value).trim())\n    return isNumber(i) ? opts.nton(i) : opts.defaultValue\n  } catch {\n    return opts.defaultValue\n  }\n}\n\nexport function toInt(\n  value: MaybeNull<number | bigint | string | ToNumber>,\n  opts?: { defaultValue?: number }\n): Maybe<number> {\n  return toNumber(value, {\n    defaultValue: undefined,\n    nton: i => trunc(i)!,\n    ston: parseInt,\n    ...opts\n  })\n}\n\nexport function toFloat(\n  value: MaybeNull<number | string>,\n  opts?: { defaultValue?: number }\n): Maybe<number> {\n  return toNumber(value, {\n    defaultValue: undefined,\n    nton: i => i,\n    ston: parseFloat,\n    ...opts\n  })\n}\n\n/**\n * @return `Math.trunc(n)` if n is a positive integer, else undefined\n */\nexport function toGt0(n: any): Maybe<number> {\n  const i = toInt(n)\n  return i != null && i > 0 ? i : undefined\n}\n\nexport function toGt0f(n: any): Maybe<number> {\n  const i = toFloat(n)\n  return i != null && i > 0 ? i : undefined\n}\n\nexport function lt0(n: any): n is number {\n  return isNumber(n) && n < 0\n}\n\nexport function gt0(n: any): n is number {\n  return isNumber(n) && n > 0\n}\n\nexport function firstGt0(...arr: any[]): Maybe<number> {\n  for (const ea of arr) {\n    if (gt0(ea)) return ea\n    const i = toInt(ea)\n    if (gt0(i)) return i\n  }\n  return\n}\n\nexport function gtOrElse(\n  n: Maybe<number>,\n  mustBeGreaterThan: number\n): Maybe<number> {\n  return isNumber(n) && isNumber(mustBeGreaterThan) && n > mustBeGreaterThan\n    ? n\n    : undefined\n}\n\nexport function lte0(n: any): n is number {\n  return isNumber(n) && n <= 0\n}\n\nexport function gte0(n: any): n is number {\n  return isNumber(n) && n >= 0\n}\n\nexport function toGte0(n: any): Maybe<number> {\n  return gte0(n) ? n : undefined\n}\n\nexport function mapInt<T>(o: any, f: (i: number) => T): Maybe<T> {\n  // PERF: UNROLLED FROM opt()\n  const i = toInt(o)\n  return i == null ? undefined : f(i)\n}\n\nexport function mapFloat<T>(o: any, f: (i: number) => T): Maybe<T> {\n  // PERF: UNROLLED FROM opt()\n  const i = toFloat(o)\n  return i == null ? undefined : f(i)\n}\n\n/**\n * @return a stringified `value` iff `value` is a positive integer\n */\nexport function id(value: Maybe<number | string>): Maybe<string> {\n  const i = toInt(value)\n  return gt0(i) ? String(i) : undefined\n}\n\nexport function mapIntOr<T>(o: any, f: (i: number) => T, orElseF: () => T): T {\n  return orElse(mapInt(o, f), orElseF)\n}\n\nexport function mapNumeric<T>(o: any, f: (i: number) => T): Maybe<T> {\n  return isNumber(o) ? f(o) : undefined\n}\n\nexport function map2Numeric<T>(\n  i: any,\n  j: any,\n  f: (ea1: number, ea2: number) => T\n): Maybe<T> {\n  return mapNumeric(i, ea1 => mapNumeric(j, ea2 => f(ea1, ea2)))\n}\n\nexport function mapNumericOr<T>(\n  o: any,\n  f: (i: number) => T,\n  defaultValue: T\n): T {\n  return isNumber(o) ? f(o) : defaultValue\n}\n\nexport function numericOr(o: any, defaultValue: ThunkOrT<number>): number {\n  return isNumber(o) ? o : tot(defaultValue)\n}\n\nexport function round(i: number): number {\n  // Workaround for bug in javascript (Math.round(-1.5) === -1 (!!)):\n  return !isNumber(i) ? 0 : i < 0 ? -Math.round(-i) : Math.round(i)\n}\n\n/**\n * @see Number#toFixed\n */\nexport function toFixed(i: Maybe<number>, decimals: number): Maybe<number> {\n  try {\n    return mapNumeric(i, ea => round(ea * 10 ** decimals) / 10 ** decimals)\n  } catch (err) {\n    return\n  }\n}\n\n/**\n * Just like Number.toFixed, without extraneous padded zeroes\n *\n * @see Number#toFixed\n */\nexport function toFixedStr(i: number, fractionDigits: number) {\n  // this is NOT a general-purpose zero-stripper-RegExp!\n  return i.toFixed(fractionDigits).replace(/(\\.0*$)|(?<=\\d+\\.\\d+)0+$/, \"\")\n}\n\n/**\n * @see Number#toPrecision\n */\nexport function toPrecision(i: number, decimalPlaces: number): number {\n  if (i == null) return 0\n  // pow should be 1 for decimalPlaces = 0\n  const pow = Math.pow(10, decimalPlaces)\n  return round(i * pow) / pow\n}\n\nexport function toPrecisionMaybe(\n  i: Maybe<number>,\n  decimalPlaces: number\n): Maybe<number> {\n  return mapFinite(i, ea => toPrecision(ea, decimalPlaces))\n}\n\nexport function sigFigs(i: number, digits: number): number {\n  if (i === 0 || digits === 0) {\n    return 0\n  }\n  const exp = digits - round(Math.ceil(Math.log10(Math.abs(i))))\n  const pow = Math.pow(10, Math.abs(exp))\n  // Prevent 120.000000001:\n  return exp < 0 ? round(i / pow) * pow : round(i * pow) / pow\n}\n\nexport function base2Ceil(i: number): number {\n  return Math.pow(2, Math.ceil(Math.log2(i)))\n}\n\nexport function base10Ceil(i: number): number {\n  return Math.pow(10, Math.ceil(Math.log10(i)))\n}\n\nexport function clamp(min: number, max: number, value: number): number {\n  if (min > max || !isNumber(min) || !isNumber(max))\n    throw new Error(`invalid clamp(${min}, ${max}, ${value})`)\n  if (!isNumber(value)) return (min + max) / 2\n  return value < min ? min : value > max ? max : value\n}\n\n/**\n * Accumulate the result of `f`, called `count` times. `f` receives a\n * zero-indexed argument.\n */\nexport function times<T>(count: number, f: (i: number) => T): T[] {\n  if (!gt0(count)) return []\n  const c = Math.round(count)\n  if (c <= 0) return []\n  return [...Array(c)].map((_, i) => f(i))\n}\n\nexport function pct(numerator: Maybe<number>, denominator: number): number {\n  return clamp(\n    0,\n    100,\n    gt0(denominator)\n      ? round((100 * (gt0(numerator) ? numerator : 0)) / denominator)\n      : 0\n  )\n}\n\nexport function fmtPct(i: Maybe<number>): Maybe<string> {\n  const rnd = Math.round(i ?? -1)\n  return within(0, 100, rnd) ? rnd + \"%\" : undefined\n}\n\nconst _factorials: number[] = [1, 1]\n\n/**\n * @return the factorial of `n`\n */\nexport function factorial(n: number): number {\n  if (!gte0(n) || Math.round(n) !== n)\n    throw new Error(`factorial(${n}): must be non-negative integer`)\n  // Number.MAX_VALUE < 171!\n  if (n > 170) return Infinity\n\n  // TODO: replace with ??= when fe is upgraded to TS 3.7+\n  return _factorials[n] != null\n    ? _factorials[n]\n    : (_factorials[n] = factorial(n - 1) * n)\n}\n\n/**\n * @return the number of ways to choose `r` items from `n` items\n */\nexport function choose(n: number, r: number) {\n  return factorial(n) / (factorial(r) * factorial(n - r))\n}\n","import { compact, isEmpty, uniq } from \"./Array\"\nimport { sort } from \"./ArraySort\"\nimport { blank, notBlank } from \"./Blank\"\nimport { isFunction } from \"./isFunction\"\nimport { Defined, defined, map, Unpick } from \"./Maybe\"\nimport {\n  DefinedValued,\n  Maybe,\n  MaybeNull,\n  MaybeValued,\n  ReqValued\n} from \"./MaybeTypes\"\nimport { MultiMap } from \"./MultiMap\"\nimport { isPrimitive } from \"./Primitive\"\nimport { toS } from \"./toS\"\n\nexport type Valued<T> = Record<string, T>\n\nexport type KeyOf<T> = string & keyof T\n// export type KeyOf<T> = Extract<keyof T, string>\n\nexport type StringValued = Valued<Maybe<string>>\nexport type StrBoolValued = Valued<Maybe<string | boolean>>\nexport type NativeValued = Valued<Maybe<string | boolean | number>>\n\nexport type Obj = Record<string, any>\n\nexport function isObject(o: any): o is object {\n  return o != null && typeof o === \"object\"\n}\n\nexport function tap<T>(o: T, block?: (t: T) => void): T {\n  if (block != null) {\n    block(o)\n  } else {\n    if (typeof o === \"string\") {\n      console.log(o)\n    } else {\n      console.dir(o, { depth: null })\n    }\n  }\n  return o\n}\n\nexport function keys<T extends Obj>(obj: Maybe<T>): KeyOf<T>[] {\n  // `typeof null === \"object\"` because js wants to F*CK YOU UP\n  if (obj == null || typeof obj !== \"object\") return []\n  return Object.keys(obj).filter(\n    k =>\n      typeof k === \"string\" &&\n      (obj[\"propertyIsEnumerable\"] == null ||\n        obj[\"propertyIsEnumerable\"](k) === true)\n  )\n}\n\nexport function keysWithDefinedValues<T extends Obj>(\n  obj: Maybe<T>\n): KeyOf<T>[] {\n  return obj == null ? [] : keys(obj).filter(k => obj[k] !== undefined)\n}\n\n/**\n * @return true iff o is null, undefined, or only has keys associated to an\n * `undefined` value\n */\nexport function isEmptyObj(o: any): o is undefined {\n  if (typeof o !== \"object\") return true\n  for (const k in o) {\n    if (o[k] !== undefined) return false\n  }\n  return true\n}\n\nexport function notEmptyObj(o: any): o is Obj {\n  return !isEmptyObj(o)\n}\n\nexport function mapCompactObj<T>(o: Maybe<Obj>, f: (_o: Obj) => T): Maybe<T> {\n  const c = compactValues(o)\n  return notEmptyObj(c) ? f(c) : undefined\n}\n\nexport function values<T extends Obj>(o: T): T[KeyOf<T>][] {\n  return keys(o).map(k => o[k]) as any\n}\n\n// polyfill for Object.entries. Does no nullish-value compaction!\nexport function entries<T extends Obj>(obj: T): [KeyOf<T>, T[KeyOf<T>]][] {\n  return obj == null\n    ? []\n    : Object.entries?.(obj) ?? keys(obj ?? {}).map(ea => [ea, obj[ea]])\n}\n\nexport function fromEntries(\n  arr: MaybeNull<Iterable<Maybe<[Maybe<string>, any]>>>,\n  obj?: any\n): any {\n  if (arr == null) return obj\n  // don't use Object.create(null), json stringify will break!\n  for (const ea of arr) {\n    if (ea != null && Array.isArray(ea)) {\n      const [k, v] = ea\n      // allow NULL fields:\n      if (k != null && v !== undefined) {\n        if (typeof obj !== \"object\") obj = {}\n        obj[k] = v\n      }\n    }\n  }\n  return obj\n}\n\nexport function assignFields<T>(\n  dest: T,\n  src: Maybe<Partial<T>>,\n  opts?: { omitKeys?: string[]; assignNullish?: boolean }\n): T {\n  if (src == null) {\n    return dest\n  }\n  for (const [k, v] of entries(src)) {\n    if (opts?.omitKeys?.includes(k) === true) continue\n    if (v != null || true === opts?.assignNullish) (dest as any)[k] = v\n  }\n  return dest\n}\n\n/**\n * Only overwrite fields from src that are undefined in dest.\n */\nexport function assignUndefinedFields<T>(\n  dest: T,\n  src: Maybe<Pick<T, any>>,\n  ...srcKeys: KeyOf<T>[]\n): T {\n  if (src == null) {\n    return dest\n  }\n  for (const ea of srcKeys) {\n    const v = src[ea]\n    if (v !== undefined && dest[ea] === undefined) dest[ea] = v\n  }\n  return dest\n}\n\n/**\n * Assigns all keys from src to dest, even if they are null or undefined.\n */\nexport function assignAllFields<T>(dest: T, src: Maybe<Pick<T, any>>): T {\n  for (const [k, v] of entries(src ?? {})) {\n    ;(dest as any)[k] = v\n  }\n  return dest\n}\n\nexport function definedValues<T extends Obj>(\n  t: Maybe<T>\n): Maybe<DefinedValued<Partial<T>>> {\n  if (t == null) return undefined\n  const arr = entries(t)\n  if (arr.every(([, v]) => v !== undefined)) return t\n  const pairs = arr.filter(([, v]) => v !== undefined)\n  return isEmpty(pairs) ? undefined : fromEntries(pairs)\n}\n\nexport function compactValues<T extends Obj>(\n  t: Maybe<T>\n): Maybe<ReqValued<Partial<T>>> {\n  if (t == null) return undefined\n  const arr = entries(t)\n  if (arr.every(([, v]) => v != null)) return t\n  const pairs = arr.filter(([, v]) => v != null)\n  return isEmpty(pairs) ? undefined : fromEntries(pairs)\n}\n\nexport function compactValuesDeep(o: any): any {\n  if (o == null) return\n  if (isPrimitive(o)) return o\n  if (Array.isArray(o)) {\n    return compact(o.map(compactValuesDeep))\n  } else {\n    const arr = compact(\n      entries(o).map(([k, v]) => map(compactValuesDeep(v), ea => [k, ea]))\n    )\n    return arr.length === 0 ? undefined : fromEntries(arr as any)\n  }\n}\n\nexport function compactBlankValues<T extends Obj>(\n  t: Maybe<T>\n): Maybe<ReqValued<Partial<T>>> {\n  if (t == null) return undefined\n  const pairs = entries(t).filter(([k, v]) => k != null && notBlank(v))\n  return isEmpty(pairs) ? undefined : fromEntries(pairs)\n}\n\nexport function mapFields(\n  o: Obj,\n  f: (key: string, value: any) => Maybe<[string, any]>,\n  obj = {}\n): Obj {\n  // DON'T DELETE THIS SORT! This makes model upserts have the same prepared\n  // statements:\n\n  const arr = compact(sort(keys(o)).map(k => f(k, o[k])))\n  return fromEntries(\n    arr.filter(([k, v]) => k != null && v !== undefined), // < allow NULL values!\n    obj\n  )\n}\n\nexport function pick<T, K extends keyof T>(\n  obj: T,\n  ...keyNames: K[]\n): Pick<T, K> {\n  if (obj == null) return obj\n  const result = {} as any\n  for (const key of keyNames) {\n    const v = obj[key]\n    if (v !== undefined) result[key] = obj[key]\n  }\n  return result\n}\n\nexport function pickCompact<T, K extends keyof T>(\n  obj: T,\n  ...keyNames: K[]\n): Maybe<Pick<T, K>> {\n  if (obj == null) return\n  const result = {} as any\n  for (const key of keyNames) {\n    const v = obj[key]\n    if (v !== undefined) result[key] = obj[key]\n  }\n  return result\n}\n\n/**\n * @param keynames can be \"key.child.grandchild\" format to pick deep objects.\n */\nexport function pickDeep<T, K extends keyof T>(\n  obj: T,\n  ...keyNames: (K | string)[]\n): Pick<T, K> {\n  if (obj == null) return obj\n  if (Array.isArray(obj)) return obj.map(ea => pickDeep(ea, ...keyNames)) as any\n  const flat: string[] = []\n  const mm = new MultiMap<string, string>()\n  for (const key of keyNames.map(toS)) {\n    const indexOf = key.indexOf(\".\")\n    if (indexOf === -1) {\n      flat.push(key)\n    } else {\n      mm.add(key.slice(0, indexOf) as any, key.slice(indexOf + 1))\n    }\n  }\n  const result = {} as any\n  for (const key of flat) {\n    const v = obj[key as K]\n    // allow NULL values:\n    if (v !== undefined) {\n      result[key as K] = v\n    }\n  }\n  const deepKeysByLocalField = [...mm.entries()]\n  for (const [key, arr] of deepKeysByLocalField) {\n    const v = obj[key as K]\n    if (v != null) {\n      const ea = pickDeep(v as any, ...(arr as any))\n      // allow NULL values:\n      if (ea !== undefined) {\n        result[key] = ea\n      }\n    }\n  }\n  return result\n}\n\nexport function pickNonBlank<T, K extends keyof T>(\n  obj: T,\n  ...keyNames: K[]\n): Pick<T, K> {\n  if (obj == null) return obj\n  const result = {} as any\n  for (const key of keyNames) {\n    const v = obj[key as K]\n    if (notBlank(v)) {\n      result[key as K] = v\n    }\n  }\n  return result\n}\n\n/**\n * @return the first value in `obj` associated to `keyNames` that `predicate` returns true.\n */\nexport function pickFirst<T, K extends keyof T>(\n  obj: T,\n  keyNames: K[],\n  predicate: (v: T[K]) => boolean = defined\n): Maybe<T[K]> {\n  if (obj == null) return\n  for (const key of keyNames) {\n    if (predicate(obj[key])) return obj[key]\n  }\n  return\n}\n\nexport function omit<T extends Record<string, any>, S extends keyof T>(\n  t: Maybe<T>,\n  ...keysToOmit: S[]\n): Unpick<T, S> {\n  if (t == null || keysToOmit.every(ea => blank(t[ea]))) {\n    return t as any\n  }\n  const pairs = entries(t).filter(([k]) => !keysToOmit.includes(k as any))\n  return isEmpty(pairs) ? undefined : fromEntries(pairs)\n}\n\nexport function isReqValued<T>(t: MaybeValued<T>): t is ReqValued<T> {\n  return values(t as any).every(ea => ea != null)\n}\n\nexport function allKeysDefined<T, K extends keyof T>(\n  obj: Maybe<T>,\n  ...keyNames: K[]\n): obj is Defined<T> {\n  return obj != null && keyNames.every(k => obj[k] != null)\n}\n\n/**\n * @return t if it `isReqValued()`, otherwise undefined\n */\nexport function toReqValued<T>(t: MaybeValued<T>): Maybe<ReqValued<T>> {\n  return isReqValued(t) ? t : undefined\n}\n\nexport function reqValuedOrElse<T>(t: MaybeValued<T>): Maybe<ReqValued<T>> {\n  return isReqValued(t) ? t : undefined\n}\n\nexport function mapReqValued<T, U>(\n  t: MaybeValued<T>,\n  f: (ea: ReqValued<T>) => U\n): Maybe<U> {\n  return isReqValued(t) ? f(t) : undefined\n}\n\nexport function onlyReqValued<T>(arr: MaybeValued<T>[]): ReqValued<T>[] {\n  return arr.filter(isReqValued)\n}\n\nexport function filter<T extends Obj, K extends string & keyof T>(\n  obj: T,\n  predicate: (k: K, value: T[K]) => boolean\n): Partial<T> {\n  if (obj == null) return obj\n  return fromEntries(\n    entries(obj).filter(([k, v]) => predicate(k as K, v as T[K]))\n  )\n}\n\n/**\n * As opposed to .keys() which only returns fields directly associated to the\n * given Obj, `allKeys` returns all direct *and inherited* properties (if\n * `obj` is a class instance, for example)\n */\nexport function allKeys(obj: any): string[] {\n  const methods: string[] = keys(obj)\n  while (null != (obj = Reflect.getPrototypeOf(obj))) {\n    methods.push(\n      ...(Reflect.ownKeys(obj).filter(\n        key => typeof key === \"string\"\n      ) as string[])\n    )\n  }\n  return uniq(methods)\n}\n\nexport function maybeCall(o: any, method: string, ...args: any[]) {\n  const f = o?.[method]\n  return isFunction(f) ? f.bind(o)(...args) : undefined\n}\n\nexport function firstValueCaseInsensitive(o: any, key: string): any {\n  if (blank(key)) return\n  if (o[key] != null) return o[key]\n  const lckey = key.toLowerCase().normalize()\n  for (const k of keys(o)) {\n    if (lckey === k.toLowerCase().normalize() && o[k] != null) return o[k]\n  }\n  return\n}\n\n/**\n * Recursively reduce single-value objects to only their value, and retain\n * multi-value objects.\n */\nexport function flattenObject(o: any): any {\n  if (Array.isArray(o)) return o.map(flattenObject)\n  if (typeof o !== \"object\") return o\n  const f = mapFields(o, (key, value) => [key, flattenObject(value)])\n  const v = values(f)\n  return v.length === 1 ? v[0] : f\n}\n","import { Maybe, MaybeNull } from \"./MaybeTypes\"\n\n// Scala got a Some things right.\n// HUR HUR I AM HILLLARIOUS\n\n// \"Opt\" instead of \"Option\" due to Option being an html entity already\n\nexport type MaybeOpt<T> = Opt<T> | MaybeNull<T>\n\n/**\n * @see http://www.scala-lang.org/api/current/scala/Option.html\n */\nexport interface Opt<A> {\n  /**\n   * @return true if the option is an instance of Some, false otherwise\n   */\n  isDefined: boolean\n  /**\n   * @return true if the option is None, false otherwise\n   */\n  isEmpty: boolean\n  /**\n   * @return the option's value.\n   */\n  get(): Maybe<A>\n  /**\n   * @return true if this option is nonempty and the predicate `p` returns true\n   * when applied to this Option's value.\n   */\n  exists(p: (a: A) => boolean): boolean\n  /**\n   * @return a `Some` containing the result of applying `f` to this `Option`'s value\n   * if this `Option` is nonempty.\n   */\n  map<B>(f: (a: A) => B): Opt<B>\n  /**\n   * @return the result of applying `f` to this `Option`'s value if this\n   * `Option` is nonempty. By supporting `undefined` or `B`, we make caller's\n   * lives a little easier--we'll wrap the result in an `Option` for you.\n   */\n  flatMap<B>(f: (a: A) => MaybeOpt<B>): Opt<B>\n  /**\n   * @return this `Option` if it is both nonempty\n   * and applying the predicate `p` to this `Option`'s value returns true.\n   */\n  filter(p: (a: A) => boolean): Opt<A>\n  /**\n   * Apply the given procedure `f` to the `Option`'s value\n   * if this `Option` is nonempty.\n   * @return this (for fluent or chaining calls)\n   */\n  forEach(f: (a: A) => void): Opt<A>\n  /**\n   * @return this `Option`'s value if this `Option` is nonempty,\n   * otherwise return the result of evaluating `f`.\n   */\n  getOrElse(f: () => A): A\n  /**\n   * @return this `Option`'s value if this `Option` is nonempty,\n   * otherwise return the result of evaluating `f`.\n   */\n  orElse(f: () => MaybeOpt<A>): Opt<A>\n\n  /**\n   * @param f will only be invoked if both `this` and `b` are defined\n   */\n  zip1<B, T>(b: MaybeOpt<B>, f: (_a: A, _b: B) => MaybeOpt<T>): Opt<T>\n\n  zip2<B, C, T>(\n    b: MaybeOpt<B>,\n    c: MaybeOpt<C>,\n    f: (_a: A, _b: B, _c: C) => MaybeOpt<T>\n  ): Opt<T>\n\n  zip3<B, C, D, T>(\n    b: MaybeOpt<B>,\n    c: MaybeOpt<C>,\n    d: MaybeOpt<D>,\n    f: (_a: A, _b: B, _c: C, _d: D) => MaybeOpt<T>\n  ): Opt<T>\n}\n\nnamespace NoneImpl {\n  export const isDefined = false\n  export const isEmpty = true\n  export const get = () => undefined\n  export const exists = () => false\n  const noop = () => NoneImpl\n  export const map = noop\n  export const flatMap = noop\n  export const filter = noop\n  export const forEach = noop\n  export const getOrElse = <A>(f: () => A): A => f()\n  export const orElse = <A>(f: () => MaybeOpt<A>): Opt<A> => opt(f())\n  export const zip1 = noop\n  export const zip2 = noop\n  export const zip3 = noop\n}\n\nexport const None: Opt<any> = NoneImpl\n\nexport class Some<A> implements Opt<A> {\n  readonly isDefined = true\n  readonly isEmpty = false\n\n  constructor(private readonly a: A) {}\n\n  get(): A {\n    return this.a\n  }\n\n  exists(f: (a: A) => boolean): boolean {\n    return f(this.a)\n  }\n\n  map<B>(f: (a: A) => B): Opt<B> {\n    return new Some(f(this.a))\n  }\n\n  flatMap<B>(f: (a: A) => Opt<B> | MaybeNull<B>): Opt<B> {\n    const b = f(this.a)\n    return isOpt(b) ? b : opt(b)\n  }\n\n  filter(f: (a: A) => boolean): Opt<A> {\n    return opt(f(this.a) ? this.a : undefined)\n  }\n\n  forEach(f: (a: A) => void): this {\n    f(this.a)\n    return this\n  }\n\n  getOrElse(): A {\n    return this.a\n  }\n\n  orElse(): Opt<A> {\n    return this\n  }\n\n  zip1<B, T>(b: MaybeOpt<B>, f: (_a: A, _b: B) => MaybeOpt<T>): Opt<T> {\n    return opt(b).flatMap(eb => f(this.a, eb))\n  }\n\n  zip2<B, C, T>(\n    b: Opt<B>,\n    c: Opt<C>,\n    f: (_a: A, _b: B, _c: C) => MaybeOpt<T>\n  ): Opt<T> {\n    return opt(b).flatMap(eb => opt(c).flatMap(ec => f(this.a, eb, ec)))\n  }\n\n  zip3<B, C, D, T>(\n    b: MaybeOpt<B>,\n    c: MaybeOpt<C>,\n    d: MaybeOpt<D>,\n    f: (_a: A, _b: B, _c: C, _d: D) => MaybeOpt<T>\n  ): Opt<T> {\n    return opt(b).flatMap(eb =>\n      opt(c).flatMap(ec => opt(d).flatMap(ed => f(this.a, eb, ec, ed)))\n    )\n  }\n}\n\nexport function isOpt<A>(a: MaybeOpt<A>): a is Opt<A> {\n  return a instanceof Some || a === None\n}\n\n/**\n * @see http://www.scala-lang.org/api/current/scala/Option.html\n */\nexport function opt<A>(a: MaybeOpt<A>): Opt<A> {\n  return isOpt(a) ? a : a != null ? new Some(a) : None\n}\n","import { gte, isNumber, lt, round } from \"./Number\"\nimport { StringValued } from \"./Object\"\nimport { toS } from \"./toS\"\n\nconst pads: StringValued = {}\n\nexport function padding(char: string, length: number): string {\n  if (length < 1) return \"\"\n  if (!gte(pads[char]?.length, length)) {\n    let s = pads[char] ?? char\n    while (s.length < length) {\n      s += char\n    }\n    pads[char] = s\n  }\n  return pads[char]!.substring(0, length)\n}\n\n// first added for irony, then used nonironically:\nexport function leftPad(s: any, minLength: number, padChar: string): string {\n  if (padChar.length === 0) throw new Error(\"leftPad() given empty pad\")\n  if (lt(s, 0)) {\n    return \"-\" + leftPad(String(Math.abs(s)), minLength - 1, padChar)\n  }\n  const str = toS(s)\n  return padding(padChar, minLength - str.length) + str\n}\n\n/**\n * Left-zero-pad\n */\nexport function padNumeric(i: any, minLength: number): string {\n  return leftPad(isNumber(i) ? round(i) : \"0\", minLength, \"0\")\n}\n\nexport function pad2(s: any): string {\n  return padNumeric(s, 2)\n}\n\nexport function pad3(s: any): string {\n  return padNumeric(s, 3)\n}\n\nexport function pad4(s: any): string {\n  return padNumeric(s, 4)\n}\n","import { blank } from \"./Blank\"\n\nconst irregular = new Map([\n  [\"child\", \"children\"],\n  [\"photo\", \"photos\"],\n  [\"video\", \"videos\"]\n])\nconst es = /(s|ss|sh|ch|x|z)$/\nconst consonant_y = /[^aeiou]y$/\nconst vowel_y = /[aeiou]y$/\nconst is = /is$/\n\nexport function pluralize(singular: string) {\n  if (blank(singular)) return singular\n\n  const irr = irregular.get(singular)\n  if (irr != null) return irr\n\n  // https://www.grammarly.com/blog/plural-nouns/\n  if (singular.match(es) != null) {\n    return singular + \"es\"\n  }\n  if (singular.match(consonant_y) != null) {\n    return singular.replace(/y$/i, \"ies\")\n  }\n  if (singular.match(vowel_y) != null) {\n    return singular + \"s\"\n  }\n  if (singular.endsWith(\"o\")) {\n    return singular + \"es\"\n  }\n  if (singular.match(is) != null) {\n    return singular.replace(is, \"es\")\n  }\n\n  return singular + \"s\"\n}\n","import { isEmpty } from \"./Array\"\nimport { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { toS } from \"./toS\"\n\nexport type Primitive = number | string | boolean\nconst primitiveTypes = [\"number\", \"string\", \"boolean\"]\n\nexport interface PrimitiveValued {\n  [key: string]: Primitive\n}\n\nexport interface Primitivable {\n  valueOf(): Primitive\n}\n\nexport interface Primitivables {\n  valueOf(): Primitive[]\n}\n\n// HEY FUTURE ME, looking for something like DeepComparable? See the `Json` type in src/fe/JSON.ts\n\nexport type Comparable = Primitive | Date | Comparable[]\n\nexport function isPrimitive(obj: any): obj is Primitive {\n  return primitiveTypes.indexOf(typeof obj) !== -1\n}\n\nexport function mapPrimitive<T>(a: any, f: (t: Primitive) => T): Maybe<T> {\n  return isPrimitive(a) ? f(a) : undefined\n}\n\nexport function mapPrimitiveOr<T>(\n  a: any,\n  f: (t: Primitive) => T,\n  defaultValue: () => T\n): Maybe<T> {\n  return isPrimitive(a) ? f(a) : defaultValue()\n}\n\nexport function isPrimitiveArray(obj: any): obj is Primitive[] {\n  return Array.isArray(obj) && (obj as any[]).every(isPrimitive)\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof\nconst TypeLevel = [\n  \"boolean\",\n  \"number\",\n  \"bigint\",\n  \"symbol\",\n  \"string\",\n  \"object\",\n  \"function\"\n] // typeof array is \"object\"\n\n/**\n * For string values, if both entry starts with this\n * value, the sort order is reversed.\n *\n * This is a ~~hack~~ workaround for the fact that numeric values are trivial\n * to reverse sort order, but string values are not.\n */\nexport const CmpReverseFlag = \"⤹\" // could be anything, as long as it's low-ascii and uncommon.\n\n/**\n * (null || undefined) < false < true < numbers < strings < arrays\n * @return 1 if a > b, -1 if a < b, 0 if a == b.\n */\nexport function cmp<T extends Maybe<Comparable> | Maybe<Comparable>[]>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): number {\n  // undefined == undefined:\n  if (a == null && b == null) return 0\n\n  // undefined should be < defined. We can't use typeof here because typeof null\n  // is \"object\" and typeof undefined = \"undefined\".\n  if (a == null) return -1\n  if (b == null) return 1\n\n  const aType = typeof a\n  const bType = typeof b\n\n  if (\n    (aType === \"string\" || aType === \"symbol\") &&\n    (bType === \"string\" || bType === \"symbol\")\n  ) {\n    // in German, ä sorts before z, in Swedish, ä sorts after z\n    const a_str = toS(a)\n    const b_str = toS(b)\n    const result = a_str.localeCompare(b_str)\n    return a_str[0] === CmpReverseFlag && b_str[0] === CmpReverseFlag\n      ? -result\n      : result\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return cmpArr(a, b)\n  }\n  if (aType !== bType) {\n    return TypeLevel.indexOf(aType) - TypeLevel.indexOf(bType)\n  } else {\n    return a > b ? 1 : a < b ? -1 : 0\n  }\n}\n\nexport function lt<T extends Comparable>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): boolean {\n  return cmp(a, b) < 0\n}\n\nexport function lte<T extends Comparable>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): boolean {\n  return cmp(a, b) <= 0\n}\n\nexport function gte<T extends Comparable>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): boolean {\n  return cmp(a, b) >= 0\n}\n\nexport function gt<T extends Comparable>(\n  a: MaybeNull<T>,\n  b: MaybeNull<T>\n): boolean {\n  return cmp(a, b) > 0\n}\n\n/**\n * @return 1 if a > b, -1 if a < b, 0 if a == b.\n */\nexport function cmpArr<T extends Comparable | Comparable[]>(\n  a: T[],\n  b: T[],\n  shorterArrayIsLessThan = true\n): number {\n  if (isEmpty(a) && isEmpty(b)) return 0\n  const len = Math.min(a.length, b.length)\n  for (let i = 0; i < len; i++) {\n    const c = cmp(a[i], b[i])\n    if (c !== 0) {\n      return c\n    }\n  }\n  return cmp(a.length, b.length) * (shorterArrayIsLessThan ? 1 : -1)\n}\n","import { Defined } from \"./Maybe\"\nimport { Maybe } from \"./MaybeTypes\"\nimport {\n  MaybeNullSyncOrAsync,\n  MaybeSyncOrAsync,\n  SyncOrAsync\n} from \"./SyncOrAsync\"\nimport { toA } from \"./toA\"\n\n// Looking for UnwrapPromiseLike? See fe/UnwrapPromiseLike.ts\n\n/**\n * Safe calls for Optional promises:\n */\nexport async function thenMap<T1, T2>(\n  objP: MaybeNullSyncOrAsync<T1>,\n  f: (t: T1) => MaybeSyncOrAsync<T2>\n): Promise<Maybe<T2>> {\n  const obj = await objP\n  return obj == null ? undefined : f(obj)\n}\n\n/**\n * Serialized promise gathering and compaction\n * @see ../core/async/Promise#tuples\n */\nexport async function thenCollect<T1, T2>(\n  arr: MaybeSyncOrAsync<MaybeSyncOrAsync<T1>[]>,\n  f: (t: T1) => MaybeSyncOrAsync<T2>\n): Promise<Defined<T2>[]> {\n  const result: Defined<T2>[] = []\n  for (const eaP of toA(await arr)) {\n    if (eaP != null) {\n      const ea = await eaP\n      if (ea != null) {\n        const r = await f(ea)\n        if (r != null) result.push(r as any)\n      }\n    }\n  }\n  return result\n}\n\nexport async function thenTap<T>(\n  p: SyncOrAsync<T>,\n  f: (t: T) => any = console.dir.bind(console)\n): Promise<T> {\n  const result = await p\n  // We await f so if it raises errors, thenTap will propagate the error:\n  await f(result)\n  return result\n}\n\nexport function isPromiseLike(o: any): o is PromiseLike<any> {\n  return o != null && typeof o === \"object\" && typeof o[\"then\"] === \"function\"\n}\n\nexport function isPromise(o: any): o is Promise<any> {\n  return (\n    isPromiseLike(o) &&\n    typeof (o as any)[\"catch\"] === \"function\" &&\n    typeof (o as any)[\"finally\"] === \"function\"\n  )\n}\n\n/**\n * Only run `ifTrue` if `predicate` is true after `p` finishes.\n */\nexport async function thenIf<T, U>({\n  p,\n  predicate,\n  ifTrue\n}: {\n  p: Promise<T>\n  predicate: (t: T) => boolean\n  ifTrue: (t: T) => SyncOrAsync<U>\n}): Promise<Maybe<U>> {\n  const t = await p\n  return predicate(t) ? ifTrue(t) : undefined\n}\n","import { strEnum, StrEnumKeys } from \"./StrEnum\"\n\n/**\n * \"settled\" means either resolved or rejected.\n *\n * \"fulfilled\" is an alias for \"resolved.\" We use \"resolved\" as that matches\n * the Promise API terminology.\n *\n * @see\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n */\nexport const PromiseStates = strEnum(\"pending\", \"resolved\", \"rejected\")\nexport type PromiseState = StrEnumKeys<typeof PromiseStates>\n","import { isEmpty, sum } from \"./Array\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { gt0 } from \"./Number\"\n\nfunction rndInt(min: number, max: number): number {\n  // CAUTION: using Math.round() will give you a non-uniform distribution!\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/random\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\n/**\n * @param min (inclusive)\n * @param max (exclusive)\n * @return a random integer between min (included) and max (excluded),\n * excluding the values in `excluded`.\n */\nexport function randomInt(\n  min: number,\n  max: number,\n  excluded?: number[]\n): number {\n  return randomInts(min, max, 1, excluded)[0]\n}\n\n/**\n * @param min (inclusive)\n * @param max (exclusive)\n * @return a set of `size` random integers between min (included) and max\n * (excluded), excluding the values in `excluded`.\n */\nexport function randomInts(\n  min: number,\n  max: number,\n  size: number,\n  excluded?: number[]\n): number[] {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n\n  if (max < min) {\n    throw new Error(`randomInts(): invalid range: ${min} > ${max}`)\n  }\n  const range = max - min\n  const excludeSet = new Set(excluded ?? [])\n\n  if (max === min && range === 0 && excludeSet.size === 0 && size === 1) {\n    return [min]\n  }\n\n  const slotsRemaining = range - excludeSet.size\n\n  if (size > slotsRemaining) {\n    throw new Error(\n      `randomInts(): cannot satisfy request: ${JSON.stringify({\n        max,\n        min,\n        range,\n        size,\n        slotsRemaining\n      })}`\n    )\n  }\n  // const luckThreshold = 0.6 // found with minSearch()\n  // if ((slotsRemaining - size) / range < luckThreshold) {\n\n  // HEY FUTURE ME: turns out that either implementation is fine, even for\n  // large ranges and large excluded sets, but the retained implementation\n  // uses less memory allocation, so it wins.\n\n  // const result = []\n  // const eligible = []\n  // for (let i = min; i < max; i++) {\n  //   if (!excludeSet.has(i)) {\n  //     eligible.push(i)\n  //   }\n  // }\n  // for (let i = 0; i < size; i++) {\n  //   const idx = rndInt(0, eligible.length)\n  //   result.push(eligible.splice(idx, 1)[0])\n  // }\n  // return result\n  // } else {\n  const result = new Set<number>()\n  while (result.size < size) {\n    const candidate = rndInt(min, max)\n    if (!excludeSet.has(candidate)) {\n      result.add(candidate)\n    }\n  }\n  return [...result]\n  // }\n}\n\nexport function randomBoolean(trueRatio = 0.5): boolean {\n  return Math.random() <= trueRatio\n}\n\n/**\n * @return a random float between `min` and `max`\n */\nexport function randomFloat(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nexport const NumericChars = \"0123456789\"\nexport const LowercaseChars = \"abcdefghijkmnopqrstuvwxyz\"\n// No upper case to support case-insensitive filesystems. Exported for tests.\n// We could have used GeoRadix.numerals, but that's a possible circular dep.\nexport const RandomChars = NumericChars + LowercaseChars\n\n/**\n * @return a random string matching /[a-z0-9]{count}/\n */\nexport function randomChars(\n  count: number,\n  chars: string = RandomChars\n): string {\n  let result = \"\"\n  for (let i = 0; i < count; i++) {\n    result += randomChar(chars)\n  }\n  return result\n}\n\nexport function randomChar(chars: string = RandomChars): string {\n  return chars[randomInt(0, chars.length)]\n}\n\nexport function pickRandom<T>(arr: T[]): Maybe<T> {\n  return arr[randomInt(0, arr.length)]\n}\n\n/**\n * Fisher-yates shuffle on shallow clone of `arr`\n */\nexport function shuffle<T>(arr: T[]): T[] {\n  const r = [...arr]\n  for (let i = r.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1))\n    if (i !== j) [r[i], r[j]] = [r[j], r[i]]\n  }\n  return r\n}\n\nexport function sample<T>(arr: T[], size: number): T[] {\n  const result: T[] = []\n  for (const idx of randomInts(0, arr.length, size)) {\n    result.push(arr[idx])\n  }\n  return result\n}\n\nexport function pickWeightedRandom<T extends { priority?: number }>(\n  arr: T[]\n): Maybe<T> {\n  if (isEmpty(arr)) return\n  const nonZeroes = arr.filter(ea => gt0(ea.priority))\n  const totalPriority = sum(nonZeroes, ea => ea.priority!)\n  let rand = randomFloat(0, totalPriority)\n  return nonZeroes.find(ea => {\n    rand -= ea.priority!\n    return rand <= 0\n  })\n}\n","import { strEnum, StrEnumKeys } from \"./StrEnum\"\n\nexport const ServiceNames = strEnum(\n  \"main\",\n  \"desktop\",\n  \"web\",\n  \"sync\",\n  \"info\",\n  \"test\",\n  \"logcat\",\n  \"logtail\",\n  \"list\",\n  \"billing\",\n  \"worker\",\n  \"test-worker\"\n)\n\nexport type ServiceName = StrEnumKeys<typeof ServiceNames>\n","export function splitFirst(\n  s: string,\n  pattern: string\n): [string, string] | [string] {\n  const indexOf = s.indexOf(pattern)\n  return indexOf === -1\n    ? [s]\n    : [s.slice(0, indexOf), s.slice(indexOf + pattern.length)]\n}\n","import { Maybe, MaybeNull } from \"./MaybeTypes\"\nimport { fromEntries } from \"./Object\"\nimport { ThunkOrT, tot } from \"./Thunk\"\n\n// See https://basarat.gitbooks.io/typescript/content/docs/types/literal-types.html\n\nexport type StrEnumType<T extends string> = {\n  [K in T]: K\n}\n\nexport type StrEnumHelpers<T extends string> = {\n  values: T[]\n  length: number\n  /** synonym for includes */\n  has(s: MaybeNull<string>): s is T\n  includes(s: MaybeNull<string>): s is T\n  getCI(s: MaybeNull<string>): Maybe<T>\n  omit<O extends T>(...t: O[]): Exclude<T, O>[]\n  indexOf(s: MaybeNull<string>): Maybe<number>\n  ordinal(s: MaybeNull<string>): number\n  validOrElse<R>(s: MaybeNull<string>, defaultValue: ThunkOrT<R>): T | R\n  mapValid<R>(s: MaybeNull<string>, f: (t: T) => R): Maybe<R>\n  cmp(a: MaybeNull<string>, b: MaybeNull<string>): Maybe<number>\n}\n\nexport type StrEnum<T extends string> = StrEnumType<T> & StrEnumHelpers<T>\n\nexport type StrEnumKeys<Type> = Type extends StrEnum<infer X> ? X : never\n\nexport function strEnum<T extends string>(...o: T[]): StrEnum<T> {\n  const values = Object.freeze(o) as T[]\n  const valueToIndex = fromEntries(values.map((ea, idx) => [ea, idx]))\n\n  const dict: StrEnumType<T> = {} as any\n  for (const ea of values) {\n    dict[ea] = ea\n  }\n\n  // toLowerCase() is safe because we know all strEnum values are latin ASCII:\n  const getCI = (s: MaybeNull<string>) => {\n    if (s == null) return // < remember that some strEnum values are \"\"\n    s = s.toLowerCase()\n    return values.find(ea => ea.toLowerCase() === s)\n  }\n\n  const indexOf = (s: MaybeNull<string>) =>\n    s != null ? valueToIndex[s] : undefined\n\n  const ordinal = (s: MaybeNull<string>) => indexOf(s) ?? values.length\n\n  const includes = (s: MaybeNull<string>): s is T => indexOf(s) != null\n\n  const omit = (...t: T[]) => values.filter(ea => !t.includes(ea)) as any\n\n  const validOrElse = <R>(s: MaybeNull<string>, defaultValue: ThunkOrT<R>) =>\n    includes(s) ? s : tot(defaultValue)\n\n  const mapValid = <R>(s: MaybeNull<string>, f: (t: T) => R) =>\n    includes(s) ? f(s as T) : undefined\n\n  const cmp = (a: MaybeNull<string>, b: MaybeNull<string>) => {\n    const a_ = indexOf(a)\n    const b_ = indexOf(b)\n    return a_ == null || b_ == null ? undefined : a_ > b_ ? 1 : a_ < b_ ? -1 : 0\n  }\n\n  return {\n    ...dict,\n    values,\n    length: values.length,\n    has: includes, // alias for includes\n    includes,\n    getCI,\n    omit,\n    indexOf,\n    ordinal,\n    validOrElse,\n    mapValid,\n    cmp\n  }\n}\n\n/* \n\nExample usage:\n\nexport const Directions = strEnum(\"North\", \"South\", \"East\", \"West\")\nexport type Direction = StrEnumKeys<typeof Directions>\n\n*/\n","import { at } from \"./At\"\nimport { flatten } from \"./Flatten\"\nimport { countIterable, sliceIterable } from \"./Iterable\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { clamp, round } from \"./Number\"\nimport { Segmenter } from \"./Segmenter\"\nimport { toA } from \"./toA\"\nimport { toS } from \"./toS\"\n\nexport function isString(obj: any): obj is string {\n  return typeof obj === \"string\"\n}\n\n// safe for frontend (which doesn't have a Buffer)\nexport function isBuffer(obj: any): obj is Buffer {\n  return obj?.constructor?.name === \"Buffer\"\n}\n\n/**\n * @return true iff `s` only uses characters in the basic multilingual plane\n * @see https://en.wikipedia.org/wiki/Plane_(Unicode)#Basic_Multilingual_Plane\n */\nexport function isBMP(s: string): boolean {\n  for (let i = s.length - 1; i >= 0; i--) {\n    if (s.charCodeAt(i) !== s.codePointAt(i)) {\n      return false\n    }\n  }\n  return true\n}\n\nexport function charAt(s: string, i: number): Maybe<string> {\n  if (isBMP(s)) {\n    i = Math.trunc(i) || 0\n    if (i < 0) i += s.length\n    if (i < 0 || i >= s.length) return undefined\n    return s[i]\n  } else {\n    return at([...toS(s)], i)\n  }\n}\n\nexport function strlen(s: string) {\n  const g = graphemeSegmenter()\n  if (g != null) return countIterable(g.segment(s))\n\n  // Crap, we have to do it the hard (buggy) way\n  if (isBMP(s)) return s.length\n  return [...s].length\n}\n\n// can't use lazy here--circular dependency.\nlet _graphemeSegmenter: Segmenter | null | undefined\n\nfunction graphemeSegmenter(): Segmenter | null {\n  // only try once:\n  if (_graphemeSegmenter === undefined) {\n    try {\n      _graphemeSegmenter = new (Intl as any).Segmenter(undefined, {\n        granularity: \"grapheme\"\n      })\n    } catch {\n      // dang, no grapheme support in this environment\n      _graphemeSegmenter = null\n    }\n  }\n  return _graphemeSegmenter ?? null // < SITS, TS should have figured it out\n}\n\n/**\n * Returns a substring of the given string. Emoji and astral symbol friendly.\n *\n * @param from The starting position of the desired substring. The index of the\n * first character in the string is zero.\n * @param end The end index of the specified portion of the string. This is\n * exclusive of the element at the index 'end'. Negative values count from the\n * end index (like Array#slice). If end is undefined, then the returned value\n * extends to the end of the string.\n * @see https://mathiasbynens.be/notes/javascript-unicode\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length\n * @see https://blog.jonnew.com/posts/poo-dot-length-equals-two\n */\nexport function strslice(s: string, from: number, end?: number) {\n  if (isBMP(s)) {\n    // allow negative indexing from the end\n    if (from < 0) from += s.length\n    return s.slice(from, end)\n  } else {\n    const g = graphemeSegmenter()\n    if (g != null) {\n      const arr = sliceIterable(g.segment(s), from, end)\n      return arr.map((ea: any) => ea.segment).join(\"\")\n    }\n    // Sadness, no grapheme support. This doesn't work for compound emoji!\n    return [...toS(s)].slice(from, end).join(\"\")\n  }\n}\n\n/**\n * Gets a substring beginning at the specified location and having the specified length.\n * @param from The starting position of the desired substring. The index of the first character in the string is zero.\n * @param length The number of characters to include in the returned substring.\n */\nexport function substr(str: string, from: number, length?: number): string {\n  return isBMP(str)\n    ? str.slice(from, length == null ? undefined : from + length)\n    : strslice(str, from, length == null ? undefined : from + length)\n}\n\nexport function charArr(s: string): string[] {\n  const g = graphemeSegmenter()\n  return g == null\n    ? // unicode-friendly way of splitting a string into chars (ish):\n      [...toS(s)]\n    : [...g.segment(s)].map((ea: any) => ea.segment)\n}\n\nexport function trimRight(s: string): string {\n  return toS(s).replace(/\\s+$/, \"\")\n}\n\nexport function stripPrefix(s: string, prefix: string): string {\n  const str = toS(s)\n  const pfx = toS(prefix)\n  return pfx.length > 0 && str.startsWith(pfx) ? str.slice(pfx.length) : str\n}\n\nexport function stripPrefixes(s: string, prefixes: string[]): string {\n  if (s == null) return \"\"\n  const str = toS(s)\n  for (const pfx of prefixes) {\n    if (pfx != null && pfx.length > 0 && str.startsWith(pfx))\n      return stripPrefixes(str.slice(pfx.length), prefixes)\n  }\n  return str\n}\n\nexport function stripSuffix(s: string, suffix: string): string {\n  if (suffix == null) return s\n  const str = toS(s)\n  const sfx = toS(suffix)\n  return sfx.length > 0 && str.endsWith(sfx) ? str.slice(0, -sfx.length) : str\n}\n\nexport function stripPrefixSuffix(\n  s: string,\n  { prefix, suffix }: { prefix: string; suffix: string }\n): string {\n  return stripSuffix(stripPrefix(s, prefix), suffix)\n}\n\nexport function ensurePrefix(s: string, prefix: string): string {\n  if (prefix == null || prefix === \"\") return s\n  s = toS(s)\n  prefix = toS(prefix)\n  return s.startsWith(prefix) ? s : prefix + s\n}\n\nexport function ensureSuffix(s: string, suffix: string): string {\n  if (suffix == null || suffix === \"\") return s\n  s = toS(s)\n  suffix = toS(suffix)\n  return s.endsWith(suffix) ? s : s + suffix\n}\n\nexport function ensurePrefixSuffix(\n  s: string,\n  { prefix, suffix }: { prefix: string; suffix: string }\n): string {\n  return ensureSuffix(ensurePrefix(s, prefix), suffix)\n}\n\nexport function ellipsize(a: any, maxLen = 80, trailingChars = 0): string {\n  if (a == null) {\n    return \"\"\n  }\n  maxLen = Math.max(1, round(maxLen))\n  trailingChars = clamp(0, maxLen - 1, round(trailingChars))\n  const arr = charArr(a)\n  // ensure valid trailingChars\n  return arr.length <= maxLen\n    ? arr.join(\"\")\n    : arr.slice(0, maxLen - 1 - trailingChars).join(\"\") +\n        \"…\" +\n        (trailingChars > 0 ? arr.slice(-trailingChars).join(\"\") : \"\")\n}\n\nexport function newlineRe() {\n  return /\\r?\\n/gm // this can't be a const as it has state\n}\n\nexport function trimLastNewline(s: string): string {\n  return toS(s).replace(/\\r?\\n$/, \"\")\n}\n\n/**\n * Returns the nearest occurrence of a substring to the left of a given position in the string.\n * @param haystack The string to search against.\n * @param needle The substring to search for.\n * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\n */\nexport function leftIndexOf(\n  haystack: string,\n  needle: string,\n  position?: number\n) {\n  if (position == null) position = haystack.length\n  for (let i = position; i >= 0; i--) {\n    if (strslice(haystack, i).startsWith(needle)) return i\n  }\n  return -1\n}\n\nexport function wrap(\n  s: string | string[],\n  opts?: { maxLineLen?: number; prefix?: string }\n): string[] {\n  const maxLineLen = opts?.maxLineLen ?? 80\n  const prefix = opts?.prefix ?? \"\"\n\n  if (Array.isArray(s) || s.includes(\"\\n\")) {\n    const lines = flatten(toA(s).map(ea => toS(ea).split(newlineRe())))\n    return flatten(lines.map(ea => wrap(ea, opts)))\n  }\n  s = ensurePrefix(toS(s), prefix).trim()\n  if (s.length <= maxLineLen) {\n    return [s]\n  }\n  const leftSliceAt = leftIndexOf(s, \" \", maxLineLen)\n\n  if (leftSliceAt > prefix.length) {\n    return [\n      strslice(s, 0, leftSliceAt),\n      ...wrap(strslice(s, leftSliceAt + 1), opts)\n    ]\n  } else {\n    const rightSliceAt = s.indexOf(\" \", prefix.length + 1)\n    if (rightSliceAt > 0 && rightSliceAt < s.length - 1) {\n      return [\n        strslice(s, 0, rightSliceAt),\n        ...wrap(strslice(s, rightSliceAt + 1), opts)\n      ]\n    } else {\n      return [s]\n    }\n  }\n}\n\nexport function eqlStrings(a: string, b: string): boolean {\n  return a == null || b == null\n    ? false\n    : a === b || a.normalize() === b.normalize()\n}\n\nexport function replaceAll(\n  s: string,\n  searchValue: string | RegExp,\n  replaceValue: string\n): string {\n  if (searchValue === \"\") return s\n  return s.split(searchValue).join(replaceValue)\n}\n\nexport function compressWhitespace(...s: string[]): string {\n  return s.join(\" \").replace(/\\s+/g, \" \").trim()\n}\n\n/**\n * @return s.split(sep).at(-1)\n */\nexport function splitLast(s: string, sep: string): string {\n  s = toS(s)\n  const idx = s.lastIndexOf(sep)\n  return idx === -1 ? s : s.slice(idx + sep.length)\n}\n","import { fmtHMS } from \"./Date\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { maybeCall } from \"./Object\"\nimport { SyncOrAsync } from \"./SyncOrAsync\"\nimport { ThunkOrT, tot } from \"./Thunk\"\nimport { TimeoutError } from \"./TimeoutError\"\n\nexport const Timeout = Symbol(\"timeout\")\n\nexport function toNotTimeout<T>(p: T | typeof Timeout): Maybe<T> {\n  return p === Timeout ? undefined : p\n}\n\nexport async function thenOrTimeout<T>(\n  p: SyncOrAsync<T>,\n  timeoutMs: number,\n  unref = true\n): Promise<T | typeof Timeout> {\n  timeoutMs = Math.round(timeoutMs ?? 0)\n  return timeoutMs <= 0\n    ? p\n    : new Promise<T | typeof Timeout>(async (resolve, reject) => {\n        let pending = true\n        const t = setTimeout(() => {\n          if (pending) {\n            pending = false\n            resolve(Timeout)\n          }\n        }, timeoutMs)\n        try {\n          if (unref) maybeCall(t, \"unref\") // timeouts don't have an unref method on fe.\n          const result = await p\n          if (pending) {\n            pending = false\n            resolve(result)\n          }\n        } catch (err) {\n          if (pending) {\n            pending = false\n            reject(err)\n          }\n        } finally {\n          clearTimeout(t)\n        }\n      })\n}\n\nexport async function thenOrTimeoutAt<T>(\n  p: SyncOrAsync<T>,\n  timeoutAtTs: number,\n  unref = true\n): Promise<T | typeof Timeout> {\n  const timeoutMs = timeoutAtTs - Date.now()\n  return timeoutMs <= 0 ? Timeout : thenOrTimeout(p, timeoutMs, unref)\n}\n\nexport async function thenOrOnTimeout<T, U>(\n  p: SyncOrAsync<T>,\n  timeoutMs: number,\n  onTimeout: () => SyncOrAsync<U>\n): Promise<T | U> {\n  return new Promise<T | U>(async (resolve, reject) => {\n    let pending = true\n    try {\n      const t = setTimeout(async () => {\n        if (pending) {\n          pending = false\n          try {\n            resolve(await onTimeout())\n          } catch (err) {\n            reject(err)\n          }\n        }\n      }, timeoutMs)\n      maybeCall(t, \"unref\") // timeouts don't have an unref method on fe.\n      const result = await p\n      if (pending) {\n        pending = false\n        clearTimeout(t)\n        resolve(result)\n      }\n    } catch (err) {\n      if (pending) {\n        pending = false\n        reject(err)\n      }\n    }\n  })\n}\n\n/**\n * @param timeoutMs disable timeouts if <= 0\n */\nexport async function thenOrTimeoutError<T>(\n  p: SyncOrAsync<T>,\n  timeoutMs: number,\n  unref = true\n): Promise<T> {\n  const result = await thenOrTimeout(p, timeoutMs, unref)\n  if (result === Timeout) {\n    throw new TimeoutError(\"timeout (\" + fmtHMS(timeoutMs) + \")\")\n  } else {\n    return result as T\n  }\n}\n\nexport async function thenOrTimeoutAtError<T>(\n  p: SyncOrAsync<T>,\n  timeoutAtTs: number,\n  unref = true\n): Promise<T> {\n  const timeoutMs = timeoutAtTs - Date.now()\n  if (timeoutMs <= 0) {\n    throw new TimeoutError(\"timeout (\" + fmtHMS(timeoutMs) + \")\")\n  }\n  return thenOrTimeoutError(p, timeoutMs, unref)\n}\n\nexport async function thenOrTimeoutAs<T>({\n  f,\n  timeoutMs,\n  as,\n  unref = true\n}: {\n  f: SyncOrAsync<T>\n  timeoutMs: number\n  as: ThunkOrT<T>\n  unref?: boolean\n}): Promise<T> {\n  const result = await thenOrTimeout(f, timeoutMs, unref)\n  return result === Timeout ? tot(as) : result\n}\n","import { isFunction } from \"./isFunction\"\n\nexport interface Thunk<T> {\n  (): T\n}\n\nexport interface ThunkOrLater<T> {\n  (): T | Promise<T>\n}\n\nexport type ThunkOrT<T> = T | Thunk<T>\n\n/**\n * Convert a ThunkOrT into a T.\n *\n * Caution: Don't have T be a function type!\n */\nexport function tot<T>(t: ThunkOrT<T>): T {\n  return isFunction(t) ? t() : t\n}\n\n/**\n * Thunk Or Later\n */\nexport async function tol<T>(t: T | ThunkOrLater<T>): Promise<T> {\n  return isFunction(t) ? t() : t\n}\n\nexport interface ThunkMaybe<T> {\n  (): T | undefined\n}\n\nexport function firstDefinedThunk<T>(\n  iter: Iterable<ThunkMaybe<T>>\n): T | undefined {\n  for (const f of iter) {\n    const result = f()\n    if (result != null) return result\n  }\n  return\n}\n\nexport function firstDefinedSuccess<T>(\n  iter: Iterable<ThunkMaybe<T>>\n): T | undefined {\n  for (const f of iter) {\n    try {\n      const result = f()\n      if (result != null) return result\n    } catch {\n      //\n    }\n  }\n  return\n}\n\nexport const NoOp = () => undefined\n","export class TimeoutError extends Error {}\n","// Note that \"pslib\" is not a schema that is registered by IANA, but it doesn't\n// collide with anything there, so we should be fine. See\n// https://www.iana.org/assignments/uri-schemes/uri-schemes.xhtml\n\n// Node URL parsing uses \"protocol\" instead of \"scheme\", and protocol is always\n// suffixed with a colon.\n\n/**\n * URI scheme used for asset files found in the PhotoStructure Library directory\n * hierarchy\n */\nexport const PS_LIBRARY_SCHEME = \"pslib\"\nexport const PS_LIBRARY_PROTOCOL = PS_LIBRARY_SCHEME + \":\"\n\n/**\n * URI scheme used for asset files found on a local disk volume\n */\nexport const PS_LOCAL_FILE_SCHEME = \"psfile\"\nexport const PS_LOCAL_FILE_PROTOCOL = PS_LOCAL_FILE_SCHEME + \":\"\n\n/**\n * URI scheme used for asset files found on a network filesystem\n */\nexport const PS_NETWORK_FILESYSTEM_SCHEME = \"psnet\"\nexport const PS_NETWORK_FILESYSTEM_PROTOCOL = PS_NETWORK_FILESYSTEM_SCHEME + \":\"\n\n/**\n * URI scheme only used for tests to reference exemplar photos and videos\n */\n\nexport const PS_EXAMPLES_SCHEME = \"examples\"\n","import { compact } from \"./Array\"\nimport { blank } from \"./Blank\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { Valued } from \"./Object\"\nimport { toS } from \"./toS\"\n\nexport function isURLSearchParams(o: any): o is URLSearchParams {\n  return o?.constructor?.name === \"URLSearchParams\"\n}\n\nexport type URLSearchParamable =\n  | string[][]\n  | Valued<string | (string | null)[]>\n  | string\n  | URLSearchParams\n\nexport function toURLSearchParams(\n  o: Maybe<URLSearchParamable>\n): Maybe<URLSearchParams> {\n  return o == null\n    ? undefined\n    : isURLSearchParams(o)\n    ? o\n    : new URLSearchParams(o as any)\n}\n\nexport function mergeURLSearchParams(\n  ...params: Maybe<URLSearchParamable>[]\n): Maybe<URLSearchParams> {\n  const arr = compact(params.map(toURLSearchParams))\n  const result = arr.shift()\n  if (result == null) return\n  for (const ea of arr) {\n    for (const [k, v] of ea.entries()) {\n      result.set(k, v)\n    }\n  }\n  return result\n}\n\n/**\n * fullPath is /path?query#anchor of https://host.com/path/?query#anchor\n */\nexport function assembleFullPath(\n  path: string,\n  ...queries: Maybe<URLSearchParamable>[]\n): string {\n  const q = toS(mergeURLSearchParams(...queries))\n  return path + (blank(q) ? \"\" : \"?\" + q)\n}\n\nexport function addQueryToFullpath(\n  fullPath: string,\n  ...queries: Maybe<URLSearchParamable>[]\n) {\n  const q = toS(mergeURLSearchParams(...queries))\n  return blank(q)\n    ? fullPath\n    : fullPath + (fullPath.includes(\"?\") ? \"&\" : \"?\") + q\n}\n","import { blank, mapNotBlank } from \"./Blank\"\nimport { lazy } from \"./Lazy\"\nimport { Maybe } from \"./MaybeTypes\"\nimport { isNumber, round, sigFigs, toInt } from \"./Number\"\nimport { pluralize } from \"./Pluralize\"\nimport { StrEnumKeys, strEnum } from \"./StrEnum\"\nimport { replaceAll } from \"./String\"\n\n// these instances are expensive to create, and can be reused for a given\n// locale.\nconst numberFormat = lazy(() => new Intl.NumberFormat())\n\nexport const thousandsSep = lazy(() =>\n  replaceAll(numberFormat().format(1111), \"1\", \"\").charAt(0)\n)\n\nexport const decimalSep = lazy(() =>\n  replaceAll(numberFormat().format(1.1), \"1\", \"\").charAt(0)\n)\n\nexport function bytesToMB(...bytes: Maybe<number>[]) {\n  let sum = 0\n  for (const ea of bytes) {\n    if (isNumber(ea)) sum += ea / MB\n  }\n  return round(sum)\n}\n\nexport function fmt(i: number): string {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\n  return numberFormat().format(i)\n}\n\n/**\n * Like `Number.toInt`, but accepts `fmt`ed strings by stripping thousands\n * separators before parsing.\n */\nexport function fmtToInt(s: Maybe<string>): Maybe<number> {\n  return mapNotBlank(s, ea => toInt(replaceAll(ea, thousandsSep(), \"\")))\n}\n\n// See https://en.wikipedia.org/wiki/Mebibyte\nexport const KB = 1000\nexport const MB = KB * 1000\nexport const GB = MB * 1000\nexport const TB = GB * 1000\n\nexport const KiB = 1024\nexport const MiB = KiB * 1024\nexport const GiB = MiB * 1024\nexport const TiB = GiB * 1024\n\nconst byteUnits = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\nconst mebiUnits = [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n\nexport function fmtMB(megabytes: number, sigfigs = 3): string {\n  return fmtBytes(megabytes * MB, sigfigs)\n}\n\nexport function fmtBytes(bytes: number, sigfigs = 3): string {\n  if (bytes === 0) return \"0\"\n  if (!isNumber(bytes)) return \"-\"\n  const l = Math.floor(Math.log10(bytes))\n  const mag = Math.floor(l / 3)\n  const val = Math.pow(10, mag * 3)\n  const name = byteUnits[mag]\n  return sigFigs(bytes / val, sigfigs) + \" \" + name\n}\n\nexport function fmtMebi(bytes: number, sigfigs = 3): string {\n  if (bytes === 0) return \"0\"\n  const l = Math.floor(Math.log2(bytes))\n  const mag = Math.floor(l / 10)\n  const val = Math.pow(2, mag * 10)\n  const name = mebiUnits[mag]\n  return sigFigs(bytes / val, sigfigs) + \" \" + name\n}\n\nexport const MP = 1e6\n\nexport function megapixels(pixels: number): number {\n  return sigFigs(pixels / MP, 2)\n}\n\nexport const SizeDescriptions = strEnum(\n  \"tiny\",\n  \"small\",\n  \"medium\",\n  \"large\",\n  \"original\"\n)\nexport type SizeDescription = StrEnumKeys<typeof SizeDescriptions>\n\nexport function pixels2size(pixels: number): SizeDescription {\n  return pixels < 320 * 240 // qvga\n    ? \"tiny\"\n    : pixels < 720 * 480 // wvga\n    ? \"small\"\n    : pixels < 1920 * 1080 // fhd\n    ? \"medium\"\n    : \"large\"\n}\n\nexport function plur(\n  i: Maybe<number>,\n  singular: Maybe<string>,\n  plural?: string\n) {\n  if (i == null) return \"\"\n  if (blank(singular)) return fmt(i)\n  return (\n    fmt(i) + \" \" + (i === 1 ? singular : (plural ?? pluralize(singular)).trim())\n  )\n}\n\nexport interface Metric {\n  count: string\n  desc: string\n}\n\nexport function plurMetric(i: number, singular: string, plural?: string) {\n  plural ??= pluralize(singular)\n  return { count: fmt(i), desc: i === 1 ? singular : plural }\n}\n","import { maybeCall } from \"./Object\"\n\nexport function setUnrefTimeout(callback: (args: void) => void, ms?: number) {\n  const t = setTimeout(callback, ms)\n  return maybeCall(t, \"unref\") ?? t\n}\n","export function isError(obj: any): obj is Error {\n  return obj != null && obj instanceof Error\n}\n","// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(obj: any): obj is Function {\n  return typeof obj === \"function\"\n}\n","import { isIterable } from \"./Iterable\"\nimport { isString } from \"./String\"\n\nexport type Arrayish<T> = ArrayLike<T> | Iterable<T> | Set<T>\n\nexport type OneOrMore<T> = T | Arrayish<T>\n\nexport function toA<T>(arr: undefined | null | Arrayish<T> | T): T[] {\n  return Array.isArray(arr) // < strings are not arrays\n    ? (arr as T[])\n    : arr == null\n    ? []\n    : isString(arr) // < don't rely on isIterable rejecting Strings\n    ? [arr as T]\n    : isIterable(arr)\n    ? Array.from(arr)\n    : [arr as T]\n}\n","import { compact } from \"./Array\"\nimport { isError } from \"./isError\"\nimport { toA } from \"./toA\"\nimport { toS } from \"./toS\"\n\nexport function toErr(obj: any): Error | undefined {\n  return obj == null ? undefined : isError(obj) ? obj : new Error(toS(obj))\n}\n\nexport function toErrs(...objs: any[]): Error[] {\n  return compact(toA(objs).map(toErr))\n}\n","import { stringify } from \"./JSON\"\n\n/**\n * Similar to `String(a)`, but `undefined` and `null` render as \"\", arrays are\n * comma-separated with no square bracket prefix/suffix\n */\nexport function toS(a?: any | any[]): string {\n  return toStr(a, \",\")\n}\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst DefaultToString = {}.toString\n\n// types: \"undefined\" \"object\" \"boolean\" \"number\" \"bigint\" \"string\" \"symbol\" \"function\" \"object\"\nexport function toStr(a: any | any[], joinChar = \",\"): string {\n  if (a == null) {\n    return \"\"\n  } else {\n    switch (typeof a) {\n      case \"string\":\n        return a\n      case \"boolean\":\n      case \"number\":\n      case \"bigint\":\n      case \"symbol\":\n        return String(a)\n      default: // \"function\" or \"object\"\n        if (Array.isArray(a)) {\n          return a.map(ea => toStr(ea, joinChar)).join(joinChar)\n        } else if (a.toString !== DefaultToString) {\n          return a.toString()\n        } else {\n          return stringify(a)\n        }\n    }\n  }\n}\n","module.exports = require(\"@iarna/toml\");","module.exports = require(\"@parcel/watcher\");","module.exports = require(\"batch-cluster\");","module.exports = require(\"commander\");","module.exports = require(\"events\");","module.exports = require(\"fs-extra\");","module.exports = require(\"he\");","module.exports = require(\"luxon\");","module.exports = require(\"plist\");","module.exports = require(\"process\");","module.exports = require(\"punycode\");","module.exports = require(\"sharp\");","module.exports = require(\"type-detect\");","module.exports = require(\"util\");","module.exports = require(\"utimes\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"net\");","module.exports = require(\"node:os\");","module.exports = require(\"node:path/posix\");","module.exports = require(\"node:process\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"stream/promises\");","module.exports = require(\"timers\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import \"../core/logcat\"\n"],"names":["SimpleAppName","SimpleShortAppName","SimpleAppNameLC","toLowerCase","AppName","lazy","isProd","nodeEnv","AppNameVersion","version","allDefined","arr","defined","every","intersection","a","b","valueOf","primitiveValueOfOrElse","s","Set","map","filter","ea","has","_uniqCount","sortedArr","length","t","lastElem","lastIndexOf","count","slice","zip","arrarr","len","Math","max","times","i","leastIndex","leastIndexBy","greatestIndex","greatestIndexBy","estIndex","lt","gt","leastBy","isEmpty","undefined","cmp","estIndexCtx","index","value","result","v","batches","batchsize","stepRange","round","async","everyAsync","f","Promise","all","diff","remove","minuend","subtrahend","some","eb","eql","objects","notBlank","toA","r","err","thunks","isNotEmpty","predicate","fromIndex","arrs","Array","isArray","elem","push","element","moved","sortBy","stringifySorted","x","y","idx","findIndex","splice","stringify","copyArrayTo","uniqBy","accept","reject","indexOf","sort","compact","Map","reduce","prev","curr","concat","min","n","Error","arr_length","results","j","ctx","batchSize","batchArr","lastPass","tap","prior","find","ea2","ea3","outer","resultArr","pred","maxDelta","before","after","mm","set","mapOr","get","entries","minLength","pad","unshift","BatchClusterObserver","EndableWrapper","constructor","name","rank","EndableRanks","service","super","this","end","commandTimeoutMs","ShortCommandTimeoutMs","bce","on","bp","pid","logger","info","renice","catch","onError","addPid","ppid","cmd","maxAgeMs","options","maxProcAgeMillis","minuteMs","Date","TimeoutError","error","lastStartError","task","errorToS","match","onTimeout","lastTaskError","command","FatalErrorFlag","lastInternalError","stdout","stderr","proc","streamFlushMillis","secondMs","warn","new","stout","toS","child_pid","cp","gt0","Pids","instance","onKill","reason","ended","ending","isIgnorableError","maxProcs","loggerName","maxIdleMsPerProcess","isWin","maxTasksPerProcess","Settings","valueOrDefault","spawnTimeoutMillis","minDelayBetweenSpawnMillis","minDelayBetweenSpawnMs","streamFlushMs","cleanupChildProcs","mkLogger","BoundedList","maxLength","_length","_firstIndex","store","mapIndex","trunc","at","last","l","clamp","clear","Symbol","iterator","self","iter","items","item","pop","reverse","shift","shiftOrFirst","callbackfn","forEach","initialValue","acc","floor","from","to","swap","start","ByteOrderMarks","bom","encoding","debom","bufferStartsWith","subarray","toString","prefix","Buffer","isBuffer","CaseInsensitiveMap","initialContents","normalizer","DefaultNormalizer","k","key","lookup","delete","size","values","keys","toStringTag","pick","obj","synonyms","m","MultiMap","vacuum","o","uniq","add","getFirst","lookupNearest","minDiceCoeff","exact","best","bestCoeff","coeff","diceCoeff","newBest","lc","colorEnabled","noColor","withAsciiEscape","off","msg","reset","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","lightGrey","darkGrey","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","white","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgLightGrey","bgDarkGrey","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhite","CountingSet","incr","countSum","sum","keyAvg","avg","Average","isNumber","toJSON","toRecord","entriesByCountDesc","mapNumericOr","abs","top","topKeys","averageCounts","sortedByKey","addAll","join","valuesToA","fill","DefaultSensitiveEnvRegexPattern","EditionName","isElectron","updateChannel","listener","ts","now","elapsed","log","elapsedMs","input","lowerCaseKeys","blank","line","splitCompactLines","re","exec","groups","val","str","replace","examples","PosixFile","for","examplesNativePath_","exampleParentDir","ancestors","__dirname","childrenSync","joinNativePath","Function","bind","_self","Object","FifoCache","maxSize","clearEveryMs","setsSinceLastSpill","expireListeners","clearInterval","setUnrefInterval","spill","priorCache","currentCache","el","create","inspect","custom","visit","union","v2","visitor","deleteIf","orElse","getOrSet","valueThunk","_event","__uid","__start","opts","cache","mergeStats","stats","cacheHitsSync","cacheHitsAsync","cacheMisses","rejections","timeouts","get_","Deferred","isRejected","isPending","promise","getOrSetAsync","later","d","observe","timeoutMs","setTimeout","then","FifoSet","delegate","next","IndexedHeader","h","text","isString","greedyLeft","toEntry","row","substring","leftIdx","rightIdx","trim","headers","table","warnIfMissingHeaders","Fixed","skippedHeaders","rows","splitLines","headerRow","maxLen","max_","blankColumns","range","extractHeaders","fromEntries","firstBlankColumn","fromIdx","toIdx","RegExp","escapeRegExp","priorLastIndex","skippedOver","debug","m_index","matched","lastIndex","left","indexOfNonSpace","right","lastIndexOfNonSpace","priorRightBoundary","leftmost","lastHeader","halted","halt","HashBits","parseJSON","thunk","ttlMs","LazyClass","ExtensibleFunction","watchers","_call","isStale","onSetResult","priorP","currentP","_prior","current","setUnrefTimeout","unset","lastSetTs","refresh","ttl","setTTL","watchLater","watcher","watch","lastSetAgoMs","hasPrior","ROLazy","_","DefaultLocale","extractLocale","e","env","LC_ALL","LC_MESSAGES","LANG","LANGUAGE","toLocale","locale","lastValue","envLocale","lazyAsync","desc","lc2locale","localeWin","isMac","localeMac","localePosix","regex","equalsIgnoreCase","g","lang","country","thenMap","PowerShell","executeJson","Name","stdout_","parseEnvTokens","logStartup","serviceName","StartTs","argv","arch","platform","os","osFullName","isPacked","versions","settings","logLevel","httpPort","libraryDir","psenv","rootLoggers","ConsoleLogger","consoleLogger","context","ContextualLogger","compactMap","iterable","retainIfTrue","callCount","toBoolean","process","PS_LOG_COLOR","isTrue","NO_COLOR","includes","TERM","MaybeTestArgRe","_nodeEnv","NODE_ENV","isDev","isTest","SINGLE_SPEC_TESTS","mapGte0","mapInt","mapGt0","toInt","within","flatten","toFloat","defaultValue","mapNumeric","numstartRe","extractFloat","String","substr","extractInt","prepHammBigInts","leftPad","hammRatioBinaryString","matching","split","map2Numeric","columns","col","s1","s2","charAt","bitsPerValue","BigInt","bitsPerCell","total","sqrt","Try","toErr","primitiveEntries","isPrimitive","isDate","mapEntries","fieldNames","field","fieldName","first","errIfMissing","propertyIsEnumerable","defaults","sources","assign","dest","src","keysToRetain","maxKeys","keyCount","valpath","ciFieldPath","nextDot","fieldRemains","ciField","sortedKeys","sortIgnoreCase","deepDelete","keysToDelete","caseInsensitiveKeyName","osNameDefault","release","osArch","osNameLinux","osNameMac","osNameWin","osName","isDocker","OsReleaseFiles","osReleaseTokens","isLinux","filename","readFileSync","pretty_name","map2Or","version_id","MacCodenames","WinReleaseToVersions","versionToCodename","ver","codenames","major","minor","majorMinor","macProductVersion","execSync","productVersion","mapNotBlankOr","macCodename","codename","startsWith","CPUs","uniqCount","cpuInfo","c","model","isPreAlphaVersion","isAlphaVersion","isBetaVersion","isStableVersion","channel","baseVersion","versionMajor","versionMinor","versionPatch","versionMajorMinor","pids","pidExists","untilTrue","intervalMs","AllowableStartSlopMs","matchesPidfileInfo","entry","entryStartTime","getTime","fileStartTime","startTime","killPidWinTaskkill","force","args","execFile","killPid","rewritePidfileOnForce","execute","identity","killPidWin","kill","killPidWithNode","pidsDir","recentPids","vacuumOldWip","rateLimited","minCallDelayMs","minMtime","old","childFiles","isJsonExt","isHiddenBasename","base","mtimeMs","unlink","killOldProcs","everything","pidfiles","killed","endPromises","pidEntries","pidInfos","pidfile","json","readJson","pidEntry","timeoutAt","everythingBefore","toISOString","allSettled","opt","parseNativePath","getOrElse","writeJson_","children","ext","priorInfo","ago","configDir","dir","BaseFile","ProcCleaner","timers","predb","PriorityClasses","strEnum","PriorityClassToPosix","freeze","Normal","BelowNormal","Low","Idle","PriorityClassToNode","AboveNormal","constants","priority","PRIORITY_ABOVE_NORMAL","PRIORITY_NORMAL","PRIORITY_BELOW_NORMAL","PRIORITY_LOW","isFinite","isProcEntry","pe","existingPids","collectBatchedAsync","pidInfoWin","pidInfoPosix","meta","win2pe","Id","pwshJsonDate","StartTime","ProcessName","procs","psWinWmic","executeJsonToA","PsWinCmd","PsWinSelectObj","psWin","psStdout2ProcEntry","stdoutOpts","psPosix","alive","pidToS","maxBuffer","ignoreExitCode","ignoreStderr","processIdClause","stdoutResult_","wmic","onlyReqValued","parseFixed","ProcessId","wmiDate","CreationDate","CommandLine","title","PID","STARTED","COMMAND","nullOnBusy","priorResult","nextArgs","running","delayNextRunUntil","ceil","doneLatches","isRateLimited","afterRunDelay","delay","resolve","cause","WrappedError","postRun","run","donePromise","Latch","status","needToDelay","minNextDelayMs","setMinCallDelayMs","ms","RegExpEscaped","source","global","flags","ignoreCase","multiline","RegExpOptional","concatRegexp","ee","reniced","niceableCmds","basename","ffmpegPath","vlcPath","ensureSuffix","compactBlanks","nodeReniceWorks","TTLSet","priorityClass","priorityPosixToClass","processPriority","setPriority","permissionDenied","errno","code","pc","reniceWin","nice","renicePosix","isMainService","MainServices","isWebService","ServiceNames","web","isWorkerService","worker","isSyncService","sync","isTestService","test","isTestNotWorker","isStatsDbService","processName","main","desktop","DbServices","list","billing","StatsDbServices","isDbJanitorService","asSet","onAdd","console","setupLogger","impl","shim","time","setShim","hasShim","toKey","emit","cacheDelete","findValueIndex","low","high","mid","midV","found","shiftLte","deleteCount","retainLastN","optionalParams","quiet","stdoutEnded","crlf","streamEnded","envValue","stdoutWrite","ready","writeTTY","stream","write","FailStr","isFatalError","isHealthCheckError","ReadyStr","JSON","addToEnv","migrationFile","migration","StdoutWrite","shutdownSync","restartSync","forceRestartSync","rebuildLibrary","shutdown","splitFirst","ellipsize","ensurePrefix","stripPrefix","stripSuffix","wrap","he","padChar","padding","strslice","haystack","needle","fromPosition","countChars","maxSplits","sliceTimes","matchedIndex","captured","uncaptured","unmatched","startsWithIgnoreCase","suffix","sfx","maxPre","maxPost","charsOmitted","toLocaleLowerCase","toLocaleUpperCase","CapRE","compareIgnoreCase","localeCompare","sensitivity","normalize","as","bs","uniqBy2","nn","hn","nl","hl","patterns","greatestBy","Smart2Dumb","dumbquote","smart","dumb","quoted","splitKeep","splitUp","flatZip","nonSeparators","separators","NonRetriableErrorFlag","pos","sortNaturalBy","escape","cb","lines","rev","parseInt","fromCharCode","CommentRE","sep","replacement","dedupeRe","trimRe","delim","snake2camel","toUpperCase","stringShaToBuffer","msbits","createHash","update","digest","shortStringSha","radix","Radix58","encodeBuffer","GeoRadix","lcs","Array2D","z","ret","hamming","_hamming","an","bn","A","B","firstThunk","aGrams","bigrams","bGrams","nonUniqIntersection","uniqIntersections","diffWithoutCommonPrefix","cpc","commonPrefixLength","longestNumericString","digits","lnsDiff","a1","b1","notAlphaNumRe","radixDiff","stripDiacritics","RadixAlphaNum","decode","positionalDiff","aChar","charCodeAt","bChar","pref","ham","dice","lns","minLen","TTLMap","deleteAll","getOrMaybeSet","lastSetOrGetTs","valuesByRecency","scheduleExpirationTimers","addIfMissing","onMissing","ctime","expired","TestLibraryDirPrefix","lastTime","UidRadix","uidForTs","encode","uidSuffix","randomChars","uidRe","tsFromUid","uid","username","gte0","userid","userids","geteuid","getuid","userInfo","groupids","getegid","getgid","gid","groupid","usernameFromEnv","getEnv","usernameFromUserInfo","toNotBlank","userNameFromWhoami","userNameFromWindowsAccessToken","isRootUser","versionPrerelease","gitSha","gitDate","wmi","year","mon","day","hour","sec","micros","offset","UTC","WinDateRe","flatMap","dayMs","AbortError","lastTimeout","clearTimeout","setTimeoutMs","toAsyncIterable","race","startedAt","PromiseStates","pending","id","payload","serialId","toLogJSON","_ctor","state","omit","settledAt","observeQuietly","p","isPromise","resolution","maybeResolve","maybeReject","unref","stateStr","isResolved","isSettled","resolved","rejected","settledMs","asError","finally","onfulfilled","onrejected","firstback","endablesByRank","vacuumEndables","DefaultTimeoutMs","endable","validOrElse","_ending","endTimeoutMs","getDevEnvFlag","firstGt0","trace","thenOrTimeoutError","filterInPlace","entriesArray","endEndables","isSingleSpecTests","EndableInterval","callback","onEnd","onEnds","setIntervalMs","initialDelayMs","hasTimer","hasTimeout","timingOpts","maybeScheduleInterval","setInterval","awaitSettled","addEndable","awaitEnd","exit","LogLevels","toWrappedError","message","fatal","stderrWrite","onFatalHandlers","exitOnStdStream","streamName","eventName","settledCount","setResult","priorD","resultD","resultIdAtStart","onChange","FifoCacheAsync","aKey","fn","runLaterIfBusy","undefinedIfBusy","runAgain","postrun","setImmediate","isRunning","thenCompact","thenCollectSerial","thenCollectParallel","maxConcurrent","promises","array","maxCpus","PermissivePromises","Promises","func","enqueueAll","tol","batchInput","objP","withinMs","isFalse","DefaultTryAllTimeoutMs","thenOrTimeout","err_","finally_","caught","isFunction","defaultIfNull","objP1","objP2","o1","o2","ifUndefined","predicatePromise","promiseThunks","unsorted","normalizeName","PromiseTimer","errors","post","expectedTime","p98","slowTimer","tot","entriesBySumDesc","namePrefix","merged","agg","merge","mkElapsed","Elapsed","weightedAvg","weightedSampleAvg","errorCounts","callCounts","weightedAvgs","compactValues","mapFinite","report","sumSec","sigFigs","pushTime","pt","mapCompactObj","mapNotEmpty","maxConcurrency","EventEmitter","lastWorkTs","settleMsAvg","lastPushedNames","awaitAll","lastPushMsAgo","freeSlots","unsettledCount","runningNames","pendingNames","totalWorkCount","enqueue","laterPop","laters","serial","promiseOrLater","maybePopPendingWork","maxJobsToStart","isIdle","jobsToStart","runningSerialIds","blockedBySerialId","isTaskRunning","taskName","maybeRun","runningCount","hasPending","isFull","deferreds","pendingWithName","payloadsWithName","pendingPromises","awaitAllByName","_name","timeoutStacks","onSuccess","asPromise","_resolved","timedOut","timeoutHandler","_soft","soft","until","acceptable","timeoutResult","sentSoftTimeout","delayCount","delayMs","SettingsKeys","sensitiveEnvRE","sensitiveEnvRegExp","sanitizedEnv","allSettings","RequiredPosixEnv","RequiredWindowsEnv","requiredEnv","caseInsensitiveEnv","isPosix","pathWithDefaults","childProcEnvSettings","forWorker","PS_IS_CHILD_PROCESS","PS_IS_DOCKER","ELECTRON_RUN_AS_NODE","persistedSettings","hasValue","addToEnvMaybe","maybeOpts","childEnv","overrides","forceCLocale","detached","shell","childEnvLogged","childProcLocale","transientSettings","deleteFromEnv","isLogged","ps","nonPs","partition","getSettingByNameOrKey","cp2log","endProcess","closeStreams","killResult","childGotSigterm","waitForPidExit","newProc","niceable","ReniceAfterMs","AddPidAfterMs","spawnOptions","disconnect","stdoutChunks","stderrChonks","exitCode","endStream","stdin","data","stderrEnded","isIgnorableFunc","causes","spawn","level","trimLastNewline","WatchedChild","childFactory","onStdout","ignoreStopErrors","startTs","_stopped","startRate","Rate","mutex","ignorable","lastError","dataSep","maxErrorsPerMinute","fatalErrorRatePerMinute","endableRank","exitCommand","restartOnExit","denull","stopped","notRunning","stop","isErrorRateExceeded","eventsPerMinute","startRatePerMin","maxErrorsPerMin","restart","msSinceLastEvent","minTimeBetweenServiceRestartsMs","writable","errorsPerMinute","msSinceLastStart","isRecentMs","probationMs","currentPid","onRestart","onEvent","sout","onDataChunked","serr","onStderr","signal","stableBasename","stripCopySuffixFromName","aggressive","nativePath","pf","sibling","isSelfOrDescendantOf","path_posix","posixPathFrom","origDir","originalsDir","anc","findAncestor","baseWithGrandparent","additionalDescription","plugins","setServiceName","verifyUidGid","parse","addFooter","program","description","cliWrap","CliDesc","arguments","beforeParse","option","joinLines","DescriptionFooter","isMainElectron","afterParse","logcat","logtail","maxLineLen","ColorArgs","isEnvTrue","logColor","color","getFullYear","whyMismatched","envKey","actual","toGt0","whyUidGidMismatched","why","closeTo","maxMsDelta","isObject","aTime","bTime","timeMs","deltaMs","Duration","fromMillis","toFormat","hourMs","iso","dt","DateTime","fromISO","zone","isValid","toMillis","dou","fromObject","invalidExplanation","DefaultDateTimeFormats","decCache","decodeDuration","parseDuration","encCache","fmtFullDuration","isDigits","captures","units","type","yearMs","weekMs","parseUnit","lt0","Units","unit","AutoVacuumModes","CheckpointTypes","RepairModes","pathToDbDir","dataDir","schema","Schemas","SqliteExt","SqliteBase","SynchronousModes","tmpCacheDirs","preexistingDir","dirs","tmpDir","cacheDirs","XDG_CACHE_HOME","DefaultDockerLibraryDir","homeDir","cacheSubDir","filterDirs","defaultCacheDir","firstDir","addSettingsListener","setSettingsDefaults","cacheDir","resetCacheDir","refreshEnvValue","broadcastChange","cacheDir_","mkdirpSync_","mkNoMedia_","path","envConfigDir","dockerConfigDirs","desktopConfigDir","desktopConfigDirs","isReadWriteableDirectorySync","XDG_DATA_HOME","XDG_CONFIG_HOME","fromEnv","mkdirpSync","paths","isDirectorySync","homedir","child","toPathnames","libraryDataDir","libraryPreviewsDir","containedByNativePath","descendant","ancestor","acceptSelf","libraryDirOverride","resolveMaybe","previewsDir","README","libraryDirPosixFile","forMaybe","libraryDataDirPosixFile","mkdirRW_","neverIndex","mkdirp_","assertReadWriteExecutable","touch","setupLibraryDataDir_","NoLibraryErrorFlag","readmeFile","writeTextfile_","libraryOriginalsDirPosixFile","setupLibraryOriginalsDir_","libraryPreviewsDirPosixFile","setupLibraryPreviewsDir_","librarySyncReportsDir","syncReportsDir","setupLibrarySyncReportsDir_","setupLibraryDbDir_","models","imageCacheDir_","defaultLogDirs","defaultLogDir_","logDir","readTomlFileSync","systemSettingsFile","ld","picturesDirWindows","picturesDir","defaultPicturesDir","XDG_PICTURES_DIR","PS_ENV_KEYS","delimiter","SensitiveEnvRE","file","tokens","DevEnvFlags","DevEnvKeys","IgnorableEnvKeys","EnvKeys","onEnvChange","SensitiveEnvRegexPattern","camel2snake","firstNotBlank","PS_SENSITIVE_ENV_REGEX_PATTERN","sensitiveEnvRegexPattern","CaseInsensitiveValued","splitErrorMessage","errs","messages","getErrorDescriptions","isError","errorName","errorCode","stripAnsiEsc","ErrorDelimiter","uniqSubstrings","normalizeErrorMessages","IgnoredErrorNames","joinErrorMessages","trimmed","trailingChars","sortErrorFlags","extractErrorFlags","stripErrorFlags","errorRate","fatalErrorRate","internalErrorRate","lastInternalErrors","MissingError","maxMsgLen","maxStackLines","shortStack","stack","ErrorCodes","errorErrno","err2desc","UNKNOWN","OK","EOF","EADDRINFO","EACCES","EAGAIN","EADDRINUSE","EADDRNOTAVAIL","EAFNOSUPPORT","EALREADY","EBADF","EBUSY","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDESTADDRREQ","EFAULT","EHOSTUNREACH","EINTR","EINVAL","EISCONN","EMFILE","EMSGSIZE","ENETDOWN","ENETUNREACH","ENFILE","ENOBUFS","ENOMEM","ENOTDIR","EISDIR","ENONET","ENOTCONN","ENOTSOCK","ENOTSUP","ENOENT","ENOSYS","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ETIMEDOUT","ECHARSET","EAIFAMNOSUPPORT","EAISERVICE","EAISOCKTYPE","ESHUTDOWN","EEXIST","ESRCH","ENAMETOOLONG","EPERM","ELOOP","EXDEV","ENOTEMPTY","ENOSPC","EIO","EROFS","ENODEV","ESPIPE","ECANCELED","ErrorFlags","IgnorableErrorFlag","PleaseSendErrorFlag","HealthCheckErrorFlag","DoNotSendErrorFlag","RetriableErrorFlag","HealthCheckWarningFlag","InternalErrorFlag","DbSetupErrorFlag","NonFatalErrorFlag","ErrorFlagsRE","FatalErrorPatterns","FatalErrorRe","InternalErrorRe","isPleaseSendError","notIgnorablePatterns","ignorablePatterns","BusyErrorRe","isSqliteBusyError","isSqliteDisconnectedError","isSqliteConstraintError","isNonRetriableError","retriable","doNotSendPatterns","doNotSend","internalError","isEmptyObj","isInternalError","event","isFatalErrorAllowed","postProbation","lowErrorRate","acceptsFatalErrors","isServiceThatAcceptsFatalErrors","fatalErrorRatePerMin","errorRatePerMin","fatalErrorRatePerMinuteSetting","mkMessage","mkCtx","toErrs","codes","splitUniq","syscall","maybeAnd","isRetriableError","isDoNotSendError","dedupeNeedle","captureStackTrace","fromJSON","broadcastEvent_","SharedState","broadcastExit","target","eventsToRetain","omniListeners","priorEvents","once","addOmniListener","watchEvent","removeOmniListener","emitDebounced","listeners","removeAllListeners","mkEE","setMaxListeners","CapturingEventEmitter","syncing","EventNames","updateReadyToInstall","clearCache","clearDbCache","clearToolCache","_msg","_err","_ctx","_error","nonFatal","fileChanged","_nativePath","invalidFile","mountpointsChanged","reloadLicenses","pause","resume","_isSyncing","progress","_p","updateProgress","settingsChanged","showAbout","taskResult","_result","timing","_elapsedMs","vacuuming","_isVacuuming","volumesChanged","TaskNames","checkOperations","repairAsset","_arg","repairAssetFile","runTagMaintenance","syncDir","isUID","EventNameToLevel","TaskNameToLevel","isStateFile","isWip","isSharedStateFileOrDir","isPsLockFileOrDir","isFreshEvent","evt","fresh","isStoredEvent","EventTimeoutMs","dedupeStoredEvents","sorted","uniqByLast","isBoolean","paused","events","tasks","eventEmitter","processors","taskProcessors","handledEventUids","sharedStateTaskTimeoutMs","handledTaskUids","setup","read","DirWatcher","save","oneAtATime","currentState","jsonFile","sharedStatePollMs","files","clearThisAndParent","siblings","isMtimeRecent","toNativePath_","bytes","readFileMaybe","updated","unfilteredTasks","taskExpireTs","taskTimeoutMs","sortUniqBy","isStoredTask","sendEvents","withFsLock","isPaused","isSyncing","maybeSave","broadcast","canHandleTaskLocally","submitTask_","endsWith","syncingPids","syncingPid","setIsSyncing","isTaskResult","withLock_","noopIfContested","apply","processor","sharedStateDir","root","visitDescendants","rmdir","getUid","getGids","getgroups","isStatRWX","stat","access","w","isStatRX","processUid","processGid","gids","isRoot","isUser","isGroup","mode","foundNearest","statMaybe","isDirectory","actualPath_","actualPathCache","FileCache","pathIsRoot","actualDir","readdir_","dirname","readdirSync","hasChildren","childNames","object","isSimpleFile","dirent","bflog","directoryEntry","de","parsed","posixPath","native2posix","withFastestAccess","msArr","shaMs","forPosix","posixPathOrFile","forDirectoryEntry","nativePathOrFile","fromPath","forChildDirent","DirectoryEntry","fromSimpleDirent","forSiblingDirent","pathnames","that","thatNativePath","isUNC","baseWithParent","parent","ellipsizePath","baseWithParentNoExt","StatDirent","directoryEntrySync","statSync","childDirectoryEntries","dirents","_directoryEntryChild","resolve_","children_","filterInPlaceAsync","isFile","childDirectories","trapSync","childFilesSync","withFileTypes","actualChildNames","includesAll","hasNoChildren","descendants","someDescendant","depth","descendantsSync","thisDe","visitDescendantsSync","ancestorWithChildren","siblingDirectoryEntries","selfAndSiblings","firstExistingSelfOrAncestor","exists","splitNativePath","pathsForDateParsing","pathnamesWithoutDrive","bname","pathDepth","isAncestorOf","maybeDescendant","isDescendantOf","maybeAncestor","parentsAndSelf","parents","selfAndParents","actualPath","withPrefix","withNameSuffix","withSuffix","siblingOf","possibleSibling","isAbsolute","joinYMD","map3","getMonth","getDate","month","pad2","pathElements","trap","methodName","errLogLevel","trapOr","timeSync","stat_","thenDefined","existsSync","notExists","thenNot","isDeleted","maxDepth","parentIsDeleted","mtime","mtimeSec","unixtime","lastModifiedUtc","toUTCString","statTimes","maxStatMs","maxStatDate","minStatMs","minStatDate","size_","isExecutable","isReadable","isNotReadable","isReadWritable","isNotReadWritable","isReadWriteExecutable","isReadWriteExecutableSync","isReadWriteExecutable_","isReadWriteDirectory","userDesc","maybeReadWriteDirectory","bytesConsideredEmpty","isNonEmpty","minSizeBytes","isEmptyFile","gte","isNonEmptyFile","modifiedGTE","thisMtime","modifiedCloseTo","thisMtimeMs","isRecent","agoMs","modifiedGT","thenMapOr","isNotDirectory","nearestDir","isFileSync","isDefined","_fse","recursive","maxRetries","retryDelay","rmdirSync","mkdirp","sha_","fileSha_","sha","fileShaMeta_","autoInvalidate","readJson_","readFile","readJsonSync","readFileSync_","readFile_","readTextFile_","bufferToString","readTextFile","zReadFile_","zCopyToBuffer_","zcat","readLines","writeText_","txt","writeTextSync_","writeFile_","writeJson","writeFile","replacer","spaces","matchesContent","touch_","ensureFile","utimes","rm","unlink_","unlinkSync","rmrf","rmrf_","retryOnReject","errorIsRetriable","gunzip","createGunzip","gzip","createGzip","compressBrotli","createBrotliCompress","ensureFile_","ensureFileSync_","ensureFileSync","ensureNewNativePath","ensureNewNativePath_","ensureNew_","ensureNewSync_","ensureNewNativePathSync_","chmod_","chmod","chmodSync","zreadline","createReadStream","pipe","LineReader","siblingWithSameContents","childWithSameContents","targetSize","withSameName","sameSize","isNameHidden","targetSha","firstMatchingLine","close","newlineRe","contemporary","maxDiffMs","thenMap2Or","arr1","arr2","watchUntil","persistent","_useFsWatch","interval","sibs","closest","transform","pipeline","autoClose","createWriteStream","attrTTL","projectRoot","ProjectPath","Root","execPath","Newline","CACHEDIR_TAG","CACHEDIR_TAG_CONTENT","isCachedirTagFile","header","readFilePart_","position","buffer","dirPath","DefaultMacOSPaths","DefaultPosixPaths","DefaultDockerPaths","DefaultWinPaths","SYSTEMROOT","DefaultPaths","path2stat","sub","subscribe","filterAsync","WipPrefix","statEql","subscription","unsubscribe","isSimpleDirent","Stats","for_","fse","parentAndBase","parentBasename","readdir","visitDescendantFiles","filterDescendantFiles","rmdir_","DefaultEnsureNewOptions","emptyIsNew","maxVersions","requireNumber","startIndex","arg","isEmptyFileSync","isCacheableFile","InstanceCacheMaxSize","ShortExtRe","normalizeExt","Dirent","JpegExts","isExt","exts","SidecarFiletypes","SidecarExts","extAliases","regexCache","LastNumberRe","PsLockExt","FsLock","newUid","TokenRadix","pidFromLockfile","lockfile","pidFromBasename","postdb","tryAcquire_","lockdir","fsLockFileBasename","startRefreshTimer_","fsLockDir","staleMs","randomFloat","acquired","selfAndSiblingNames_","siblingNames","iAmLast_","iAmOnly_","lockfileRefreshMs","stopRefreshTimer","acquire_","releaseOnFailure","dirty","skipFsLock","survivors","names","staleAt","childMtimeMs","fmtDuration","internalErrors","throw","ownerPid","lockfiles","success","basenameIsPsLockFileOrDir","ensurePrefixSuffix","DefaultWatchedStatFields","WatchMgr","path2watcher","id2watchers","vacuumEnded","registeredPaths","watchedPaths","oldPaths","unwatchedPaths","np","maybeWatch","watchersForPath","or","fsw","registerWatcher","debouncedCheck","FsWatcher","maxPollIntervalMs","applyOnChangeAtSetupIfExists","debounce","check","watchDebounceMs","partialStatPrior","statNow","applyOnChangeIfTargetMissing","partialStatNow","changed","isDir","newMaxPollIntervalMs","debounceMs","forcedCheck","statTimeoutMs","Timeout","CopiesRe","Copies2Re","_stripCopySuffixFromName","initialName","ymdIsoRE","parsePosixPath","strippedName","strip","stripped","burstRe","coverRe","dscPrefixRe","out","actualExt","expectedExt","matcherForExtOrCompressedExt","extMatchers","fileStats_","shimmedFileSha_","uncachedFileSha_","streamSha_","transforms","hashAlgorithm","hash","shim1","randomBytes","pwshQuote","sf","Mode","isHiddenWin","isHiddenMac","DevMounts","MacSystemVolumes","MacPrivate","MacOsInstall","MacNotDmg","isPhotoStructureDmg","mountpoint","whyIgnorableMountpoint","isExcludedMountpoint","Transform","objectMode","autoDestroy","_transform","chunk","_encoding","done","_flush","nomediaRe","NoMedia","variants","NoMediaNames","isNoMediaName","noMediaDirsCache","hasNoMedia","Halt","cached","readdirCached","someIsNoMedia","_dirHasNoMediaChild","_readdirHasNoMediaChild","dirHasNoMediaChild","isCachedirTagDirectory","someSelfOrAncestor","driveRe","drive","upcaseDriveLetters","posix2native","fileish","pathlike1","pathlike2","CompressedExtRE","spliceCapture","splitLast","filePaths","lhs","rhs","basename_","isReadableDirectory","srcNativePath","destNativePath","move","overwrite","mountpoints","MinBinarySize","KiB","isRXFile","minSize","fallbackPathDirectories","systemRoot","pathDirectories","PATH","tool","alternativePath","fsutil","nslookupWin","pingWin","arpWin","contextFilter","sortFiles","_idx","NoOp","pflog","uriObject_","nativePath2uri","uri_","fileuri","URI","normalizedPathUri_","etag","isMountpoint","existingSidecars","unlock","forUri","uri","uri2nativePath","bestMountpoint","isDeletedUri","_uri","notBlankOr","toURI","isRootPath","pathBase","expectedBase","uriBase","schemeDiscount","scheme","PS_LIBRARY_SCHEME","PS_LOCAL_FILE_SCHEME","PS_NETWORK_FILESYSTEM_SCHEME","httpHeaders","ETag","hide","hide_","mkNoMedia","hasNoMediaRecursive","isHidden","isSidecar","isSidecarExt","existingExifSidecars","sidecar","defaultSidecarExt","defaultSidecar","jsonSidecars","sidecareStats","thisOrSidecareMaxMtimeMs","ss","writeStream_","readable","onProgress","ByteCounter","destroy","applyIfEmpty_","fn_","returnUndefinedIfNotEmpty","skipWip","retries","initiallyNotEmpty","applyWip_","wip","wipIsRecent","WipTimeoutMs","unwipBase","unwip_","mv_","copyFile_","destFileOrDir","onlyNativeFileCopy","maybeVerifySameOrThrow_","verifyFileCopies","zCopyFile_","zpipe_","copyTimeoutMs","MinIoRate","destOrDestDir","destOrDir","renameYMDHMS_","fmtYMDHMS","destDir","subdir","renameWithNameSuffix_","nameSuffix","saveIfNewOrDelete","move_","equalsUri_","uriIsEquivalent","obs","copyDest","copyFile","COPYFILE_FICLONE","MiB","PullProgressObserver","op","approximates","expectedSize","actualSize","btimeMs","birthtimeMs","wipDest","reference","hostname","posix","pathTo","execDir","projectDirs","cwd","uniqInPlace","npx","Bin","Data","ICC","Migrations","Public","Tools","Views","isInDMG","projectPathRoot","fs","fd","bufLen","alloc","open","ReadableBuffer","Readable","ReadDirCacheName","readdirCacheDir","clearReaddirCaches","path2cache","clearCachedReaddir","readdirUncached_","quickResult","fsCacheSlowMs","readdirSizeCacheThresh","slowDirs","toNotTimeout","thenOrTimeoutAt","_readdir_","readdirCacheMs","winDriveRE","firstSelfOrAncestor","statToType","statFieldToComparable","whyStatNotEql","aType","bType","aVal","bVal","delta","isEmptyStats","minFileSize","throwIfNoEntry","nativePathExistsSync","onData","Chunker","filterBlanks","incompleteChunk","onChunk","destroyed","writableEnded","writableFinished","PassthroughStream","Duplex","_write","maybeCall","closable","remoteFamily","remoteAddress","remotePort","toMs","rStat","atimeMs","retainFileBirthtimes","atime","btime","WritableToBuffer","Writable","deferred","_buf","writeFileSync_","writeFileSync","zcat_","outputStream","createBrotliDecompress","readJsonGz_","outputJsonGz_","HealthCheckIds","CropStrategies","ImageCacheName","watchCacheDir","cachedImageFile_","shortFsStringSha","ciSafePath","splitEvery","imgCacheSubdir","tag","SharpFailOns","procColors","colorProcessName","_inspectOptions","logLevels","inspectOptions","showHidden","colors","customInspect","maxArrayLength","logContextLimit","breakLength","defaultProcessName","formatMeta","prepMeta","formatLogEntry","le","contextColor","logFilter","highlight","format","enabled","pushLogEntries","flush","loggers","addContext","addParameterContext","param","throwIfAborted","aborted","msTolevel","tapThunk","tapAsync","errorLevel","errorMsg","LogWriter","DefaultLogFormatter","PlaintextLogFormatter","defaultFrom","_service","_pid","extractFrom","pidStr","logEntry","level2syslog","host","timestamp","short_message","full_message","errorToVerbose","mkConsoleLogger","nul","logBroadcaster","server","portStr","logServer","port","parseLogServerSetting","LogBroadcaster","socket","logFormatter","GelfLogFormatter","LogFilterImpl","logServerLevel","createConnection","DefaultLogFlushMs","date","fmtIsoDate","sortByInPlace","SimpleLogFilter","minLogLevel","silent","defaultLevelIndex","levelIndex","LogLevelRe","defaultLogLevel","setting","contexts","contextOverride","li","co","TraceLevelIndex","LogLevel2SyslogLevel","errorMs","PromisePlaceholder","levels","limit","meth","isPromiseLike","mapNullEntries","omittedKeys","errorHandler","SortedSet","logEntrySorter","fileStream","isExtOrCompressedExt","hasErrors","complete","peek","chunkToLogEntry","LowWatermark","DefaultLogEntryWriter","consoleLog","LogTail","rootNativePath","writer","filenameMutexes","file2pos","lastReadFiles","readSystemSettings","logdir","scan","ignorableFilename","setLogTailEnabled","flushTimeout","scanTimeout","popExpiredLogEntries","watchDir","ifLog","watchListener","consoleError","firstTime","nowish","currentLogDir","datedLogDir","currentSize","priorSize","readLogEntries","_logTailEnabled","logEntries","flushEveryMs","pendingWrites","_linesSinceRotate","_nextForcedRotateTs","nextMidnightTs","_startIndex","logOpts","maxLinesPerFile","errorLogger","writeRecentLogEntries","recentLogEntries","clearRecentLogEntries","shouldRotate","_logfile","toFlush","remainingCapacity","logCompression","gzip_","paddedLogLevels","rightPad","isLogEntry","buf","SentLogLevels","recentLogEntriesByLevel","bl","setupLogFormatter","fl","currentFileLogger","logStdout","tailLogs","setColorEnabled","watchSettings","currentIsColored","ColoredLogFormatter","settingIsColored","recentMs","consolelog","fileOrDir","Recent","recent","CLI","mapAsync","matcher","maxStat","lf","help","readers","LogReader","oldestLogEntries","reader","vec","pushAll","maxSamples","clone","samples","_n","_min","_max","_m","_s","_samples","_weightedTotalAvg","with","priorM","sigfigs","empty","mean","sd","stdDev","p16","p29","p38","p84","p99","variance","sampleMode","sampleModes","sampleVariance","sampleStdDev","sampleAvg","sampleSlope","slope","weightedTotalAvg","sigmasFromMean","mapGte0f","mu","sigma","splitBits","pow","map2","ea1","absdiff","dims","clampValue","randomValue","randomInt","zipMin","bitDepth","zipMax","clamped","bit","dimIndex","unzip","dIdx","isBitSet","BitShiftMax","disableBitshifting","bitsSetBig","setBits","lerp","v0","v1","nearest2","p0","p1","dx","zero","encodeDigits","Radix","numerals","decodePreparser","digitsToNumerals","num","negate","encodeBigInt","bi","Number","decodeBigInt","MAX_SAFE_INTEGER","ch","log2","randomUid","chars","splitEveryN","sepChar","tokenEql","normalizeToken","Hex","Base64","AlphaRadix","NumericRadix","eventCount","eventsPerSecond","uuid","decuss","UUIDRegExp","modes","topN","cs","sumf","Mean","l2norm","dot","strength","normMin","normMax","xMin","xRange","normRange","x_mean","y_mean","denom","carryForward","vectors","finiteOrElse","_hostname","octetRE","ipv4Re","friendlyname","memoizeAsync","ipOrName","nslookup","loopbackRE","isLoopback","octets","nameOrIp","resolve4","firstNonBlank","aAddrs","bAddrs","ping","ipAddrFromPing","__filename","_platform","inspectFlag","NODE_INSPECT","isCI","isWinPortable","PORTABLE_EXECUTABLE_DIR","isLinux_x64","isArm","isLinux_arm","isLinuxAppImage","APPIMAGE","APPDIR","isLinuxSnap","SNAP_USER_DATA","platformName","containsRpiModel","cpuinfoPath","isRaspberryPi","procDeviceModel","fmtPct","pct","DefaultThrottleMs","recentProgress","recentDone","isProgressEvt","onProgressEvt","throttleMs","onInterval","completed","emitProgressEvt","Done","ConvertToCompressedJson","clearMockResults","ensureInstance","bco","mockResults","BatchCluster","processFactory","powerShellArgs","versionCommand","powerShellCulture","pass","fail","powerShellProcs","taskTimeoutMillis","setMaxProcs","pwsh","versionPojo","Major","Minor","Build","spawnedProcCount","pushMockJsonResult","pushMockResult","parser","passed","thenElapsed","enqueueTask","Task","fixed","which","Source","AggregateTypes","AssetFileSortCriteria","BooleanSetting","Setting","toEnv","notBlankToS","BoundedFloatSetting","parseFloat","addToJSON","BoundedIntegerSetting","ColorDistanceFunctions","DominantColorKmeansRunsDefault","DominantColorPixelsDefault","DurationSetting","encodeDuration","userValue","humanValue","fileValue","OptionalDurationSetting","FloatSetting","IntegerSetting","getSettingValue","disableAllFilters","disableIgnorableFilters","respectFileExtensions","requireMakeModel","rejectRatingsLessThan","minImageDimension","minVideoDimension","minVideoDurationSec","maxVideoDurationSec","minAssetFileSizeBytes","maxAssetFileSizeBytes","validateJpegImages","validateRawImages","validateVideos","setStrictDeduping","strictDeduping","useImageHashes","minExposureSettingsCoeffPct","minImageCoeffPct","imageHashFuzzyDateDelta","imageHashDifferentMimetypesDelta","imageHashGreyscaleDelta","allowFilesystemSleep","imported","setQuickSyncMode","quickSyncMode","scanMyPictures","newPath","priorValues","scanPaths","assetSubdirectoryDatestampFormat","assetPathnameFormat","newValue","syncIntervalHours","syncNewIntervalMs","syncChangedIntervalMs","dbBackupIntervalMinutes","dbBackupIntervalMs","enableSiblingInference","siblingInference","TagInferenceSettingValues","never","quickSyncSettings","transcodeVideos","previewMinimized","previewProgressive","previewSharpen","argonDefaults","argon2TimeCost","argon2MemoryCostMB","argon2Parallelism","argonQuick","quick","tmpValueIfUnset","tmpValue","argon","dominantColorPixels","dominantColorKmeansRuns","dominantColorDeltaE","cie76","ciede2000","OptionalFileSetting","OptionalStringSetting","OptionalFloatSetting","OptionalIntegerSetting","SettingCategories","LibraryCategories","Auth","Color","Db","Deduping","Events","Filters","HealthChecks","Parsing","Previews","Reporting","Sidecars","Subscriptions","Sync","Tagging","Video","Volumes","Web","SystemCategories","_envValue","readFromEnv","optsOverrides","getState","user","_userValue","_fileValue","tmp","_tmpValue","dump","isUnset","setState","normalizeValue","shallowClone","maybeBroadcastChange","valueOrThrow","civ","setFromEnv","environment","setValueIfDefined","unWatch","mutateFunc","_names","_setName","aliases","_key","envFromName","_keys","envAliases","altKeys","category","categoryType","transient","advanced","envValueOrDefault","resetDefaultValue","exampleValue","overrideValue","toEnvValue","cie","toCommentedLines","deprecated","WrapComments","maybeAddList","pluralize","orList","toEnvLine","toTomlLines","wrapTomlToLines","prepend","exposeNetworkWithoutAuth","DefaultMaxEmbeddedBuffer","Paths","copyAssetsToLibrary","StringSetting","scanAllDrives","StringArraySetting","argvScanPaths","pidFile","Cache","imageCacheMs","Logging","logWebRequests","logWebDir","logSql","useFsWatch","Filesystem","excludedFilesystemTypes","DefaultExcludedFilesystemTypes","excludedRootDirectories","DefaultExcludedLinuxRoots","excludedMountpointPaths","DefaultExcludedLinuxMountpointPaths","excludedMountpointBasenames","validateMountpoints","mountpointsTtlMs","remoteFilesystemTypes","volumeUuidFilePaths","readVolumeUuidFiles","writeVolumeUuidFiles","writeVolumeUuidMountpointBlocklist","volumeMetadataTtlMs","Networking","localhost","trustProxy","Security","cspReportOnly","upgradeInsecureRequests","cspDirective","disabledHelmetMiddleware","StringEnumsSetting","HelmetPlugins","shortProcessNames","Processes","BatchClusterOptions","minDelayBetweenRetriesMs","exiftoolProcsPerChild","syncExitTimeoutMs","minDiskFreeGb","cpuLoadPercent","timeoutThrottleCoeff","maxConcurrentImports","maxConcurrentImportsWhenRemote","sharpThreadsPerProcess","StringEnumSetting","maxMemoryMb","enableArchive","enableDelete","enableEmptyTrash","enableRemove","enableRemoveAssets","forceLocalDbReplica","dbRetries","dbBackupRetentionCount","dbAutoVacuumMode","INCREMENTAL","dbWalCheckpointType","TRUNCATE","dbWalAutoCheckpoint","dbInvalidFKThreshold","dbSynchronousMode","NORMAL","dbRepairMode","maxBusyDbMs","dbBusyTimeoutMs","dbPageSizeBytes","dbCacheSizeMb","dbBatchSelectSize","dbBatchUpsertSize","dbForceRecover","dbBackupRemoteOnSuspend","trySoftDeletes","skipHealthCheckIds","ffmpegHwaccel","ffmpegThreads","ffmpegAvcTranscodeArgs","transcodeMaxResolution","transcodeBitrateQVGA","transcodeBitrateUHD","doNotTranscodeMimeTypes","doNotTranscodeVideoCodecs","doNotTranscodeAudioCodecs","enableSIMD","enableVipsCache","showFileInFolderUsesThunar","showFileInFolderUsesFileUri","showFileInFolderCommand","dcraw_emuPath","heifConvertPath","toolPaths","Desktops","UpgradeChannels","updateOnLaunch","updateCheckMinutes","autoHideMenuBar","hideOnLaunch","pauseSyncOnBattery","email","reportErrors","maxErrorsPerDay","minStreamCorrPct","lazyLoadExtraVh","hiddenHomeTags","placeholderThumbs","fastForwardEmptyTags","syncReportMaxRows","scanLibraryFirst","scanLibraryLast","progressRetentionDays","progressStaleDays","copyToLibraryMimeTypes","writeSourceTagToLibraryCopies","startPaused","retryEnqueued","forceRebuildLibrary","dropWorkQueues","forceSync","forceRebuildPreviews","noModelUpdates","exitWhenDone","overwriteOriginal","maxDuplicatePathElements","noAssetFileUpdates","noAssetUpdates","resyncAssetOnVisit","cpuCount","excludeNoMediaAssetsOnRebuild","matchSidecarsCaseInsensitively","matchSidecarsFuzzily","defaultSidecarType","writeMetadataToSidecarsIfImage","sidecarTagBlocklist","writeMetadataToSidecarsIfVideo","writeMetadataToSidecarsIfSidecarExists","assetAggregation","allowFuzzyDateImageHashMatches","minMatchesWithoutImageHashes","maxContemporaryAdoptionAssets","datesBeforeAreEstimated","minColorCoeffPct","greyscaleColorThreshold","gpsErrorMeters","minCapturedAtPrecisionDifferentMimetypes","minCapturedAtPrecisionStat","fuzzyDatePrecisionCoeff","dominantColorMergeThreshold","dominantColorGreyThreshold","previewQuality","dcrawEmuArgs","iccProfileMappings","squareThumbStrategy","attention","videoFrameAtSec","previewResolutions","FitSizes","embeddedPreviews","embeddedThumbnails","maxEmbeddedBuffer","fmtBytes","skipPreviews","variantSortCriteria","variantSortCriteriaPower","includePreviewTags","includedPreviewTags","DefaultIncludedPreviewTags","excludeGlobsAdd","excludeGlobsOmit","globsCaseInsensitive","keywordBlocklist","KB","GB","imageFailOn","truncated","validationErrorBlocklist","validationErrorAllowlist","capturedAtTags","DefaultCapturedAtTagsConst","capturedAtTagsFallback","ProblematicCapturedAtTags","badDates","defaultVideosToUTC","defaultCopyright","likeRating","lensMakes","DefaultLensMakes","extraDateTimeFormats","fuzzyDateParsing","fuzzyYearParsing","twoDigitCutoffYear","minValidYear","useStatToInferDates","usePathsToInferDates","useLibraryDirsToInferDates","auto","siblingInferenceBasenameCoeff","writeInferredTagsToLibraryCopies","recountAllTags","tagCamera","tagLens","tagFullLensModel","tagYMD","DateTagFormats","ym","tagDateFromStat","tagKeywordsFromPath","tagKeywordsFromMetadata","keywordTags","keywordReparenting","KeywordReparentingStrategies","rootTagAlbumsAliases","rootTagKeywordsAliases","rootTagWhoAliases","keywordDelimiters","keywordPathSeparators","tagFileType","tagJsonFaces","tagFaceRegions","whoTags","tagNamesFormatter","NameTagFormats","tagNamesDefaultFamily","tagNamesCapitalizedAsFamily","tagNamesOrder","NameTagOrders","tagNamesSurnamePrefixes","tagNamesSurnames","tagNamesGiven","tagNamesFamilySurrounds","tagNamesGivenSurrounds","tagNamesLexical","excludedRootTags","tagDisplayNameFS","tagDisplayNameFSRoot","tagDisplayNameFSRootWithHostname","tagDisplayNameFSLabels","tagAlbumFilenames","tagAlbumTitle","tagAlbumTitleHierarchies","tagAlbumDescription","tagAlbumDate","tagAlbumsExcluded","omitAncestorTags","subscriptionTimeoutMs","pickPlanOnWelcome","coupon","autoRefreshLicense","license","sensitive","withDefaultPaths","settingsSorter","SuggestedDirsEnvKey","persistedSystemSettings","persistedLibrarySettings","SettingsByNameOrKey","ciSettings","DefaultSharedStateDir","defaultLibraryDir","defaultOriginalsDir","librarySettingsFile","SettingsToml","settingsFile","_readSettings","savedLibraryDir","readTomlFile_","systemSettingsVersion","readSettingsVersion","librarySettingsVersion","onSettingsChange","libraryHasSettings","_libraryHasSettings","lsf","readSettings","readLibrarySettings","writeSystemSettings_","writeLibrarySettings_","VersionRE","writeToml_","wrapComments","versionForSettings","priorCat","cat","capitalize","trimRight","_writeToml_","nonDefaults","settingsToObj","importFileSettings_","warnings","st","tomlMap","toNotEmpty","handleMetaSettings","handleDeprecatedSettings","UnclearableSettings","clearSettings","extra","extraLines","valueToS","_join","splitStringArray","compactBlankish","_split","toValidValue","toValidValues","getCI","dv","parseStringEnum","parseTomlBuffer","mapNotBlank","stringifyToml","kvToToml","stripCounts","trimLeftPadding","stripDSC","IgnoredCapturedAtTags","ExtTypes","BrowserFiletypes","SharpImageFiletypes","unfiltered","_sharp","mimetype","fileSuffix","sharpImageFiletypes","HeifFiletypes","RawImageFiletypes","VideoFiletypes","AllFiletypes","AssetFiletypes","ExifFiletypes","Ext2mime","mime","ExtAliases","getExtAliases","AllFileExts","AssetFileExts","OldBrowserMimetypes","CurrentBrowserMimetypes","ext2types","Sharp","HEIF","RawImage","Sidecar","AssetFile","Exif","SupportedByOldBrowser","SupportedByCurrentBrowser","extTypes","isExtType","extType","ext1","ext2","strEql","isSidecarOf","isJson","srcName","sidecarName","mkExtsRegExp","fuzzy","srcEa","stripExt","sidecarEa","commonIdx","commonPrefixIgnoreCase","suffixOK","AllowedUncommonSuffixRe","aSuffixOK","bSuffixOK","isJsonFuzzyMatch","inHiddenPhotoStructureDir","sortByAsync","nativePath2uris","vol","bestVolumeForPath","nativePath2pslib","nativePath2psfile","nativePath2psnet","nativePath2uriVariants","uriEncodingVariants","u","isUri","fsPath","psfile2nativePath","psnet2nativePath","pslib2nativePath","volume","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","thing","authority","fragment","query","schemeOrData","_strict","toURLSearchParams","_schemeFix","_referenceResolution","_validateUri","uriToFsPath","change","Uri","percentDecode","fixedPath","components","joinPath","pathFragment","win32","findLast","skipEncoding","_asFormatted","_pathSepMarker","_formatted","_fsPath","res","$mid","_sep","external","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","q","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","toUnicode","uriPrefixes","uriEqlSync","au","bu","joinMountpoint","fullPath","volPath","volsha","notMySep","mountpointMatchesPlatform","volshaVolume","bestVolumeForVolsha","PSLIB_ROOT_URI","libDir","relativePath","orig","lib","remote","remoteHost","remoteShare","_path","share","vols","volumes","isEquivalentHost","memoize","DefaultExcludedLinuxMountpointNames","localMountpoints","lazyFsAsync","dfPosixRaw","localsOnly","acceptPosixVolume","notAssetMountpoint","mightBeAssetMountpoint","excludedFS","filesystem","isExcludedFilesystem","excludedMP","excludedDir","isReadableDirectorySync","excluded","locals","isGioSupported","gioVolumes","dfVol","gioVol","assignMissingPrimitives","kibToBytes","parseDfVolumes","output","parseDfVolume","used","available","volumeInfoWin","ok","DriveLetterRE","cleanDriveLetter","driveLetter","normalizeDriveLetter","getPsDriveCommand","parseGetPsDriveRow","Free","Used","compactBlankValues","label","Description","DisplayRoot","parseRemoteName","getVolumeCommand","uuidRE","toDefinedAndNotEql","parseGetVolumeRow","DriveLetter","FileSystemLabel","notOkStatus","HealthStatus","OperationalStatus","Size","SizeRemaining","FileSystem","UniqueId","driveLetters","mountpointsWin","psDrivesJson","psDriveVols","getVolumesJson","getVolumesVols","unhealthy","healthyMountpoints","isBillingService","GioCommand","GioMountMonitorArgs","fuseDirs","thenFlatten","readProcMounts","gvfsFuseDirectories","mapAsyncSerial","remoteInfo","getRemoteInfo","setupVolumeTTL","URL","displayName","pathname","lsblk","localVolumes_lsblk_","blkid","localVolumes_blkid_","df","VersionRe","lsblkVersion","lsblkOutput","cols","fsused","fsavail","DEVNAME","PARTLABEL","LABEL","PARTUUID","UUID","mnt2uuidMac","uuids","diskDevices","diskRE","stdouts","dev","AllDisksAndPartitions","APFSVolumes","MountPoint","OSInternal","DeviceIdentifier","VolumeName","VolumeUUID","unsetMountpoints","mountpoints_","setMountpointsTTL","onMountpointsChanged","localMountpointSetup","diskUtilActivity","maybeWatchProcMounts","gioMountMonitor","isFindmntSupported","findmntPoll","priorMountpoints","mountpointsPosix","includesIgnoreCase","mkBasicWatchedChild","gioVols","ProcMounts","defaultFilesystemTypePredicate","fsType","defaultMountpointPredicate","procMounts","filesystemTypePredicate","mountpointPredicate","readLines_","mp","allNotBlank","unoctal","fsOK","mpOK","mountpointsWinPwsh","mountpointsWinFsutil","driveletterRe","LinuxDevMapperRE","LinuxVarSnapRE","LinuxRunUserGVFSRE","LinuxDockerRE","whyExcludedMountpoint","smbRe","parseRemote","smb","nfs","nfsRe","netInfos","netInfoWin","toMap","netInfo","netuseCmd","UNC_RE","driveLetterRE","remoteName","url","_netInfoWinWmic","RemoteName","LocalName","Status","NetInfoCmd","ConnectionState","volumeUuidNotExpected","toVolumeUUID","clean","stripComments","readUuidFile_","readVolumeUUID","subpath","volUuidFile","savedUUID","writeVolumeUuid","withBoundedConcurrency","thenOrOnTimeout","addVolumeUUID","mount2vol","mount2volsha","volsha2vol","replaceIfNewer","updatedAt","cacheVolume","volumeCacheDirs","mountpointToVolsha","loadCachedVolumes","deleteFileCache","cachedVolumes","fromCache","sortByCaseInsensitive","readCachedVolumes","writeVolumesToCache","priorWriteVolumesToCacheLatch","fromHost","cleanHostname","name2vol","vol_mountpoints","priorVolumesIfMountpointsMatch","priorIsStale","priorIsMissingMountpoints","eqlPrimitiveUnordered","vp","bestMountpointForDir","bestRemoteVolume","withCorrectShare","withExactHostname","friendlyRemoteHost","asyncFind","canWriteVolumesToCache","withCurrentMountpoints","currentMountpoints","volumesImpl","shim0","hangMs","PS_VOLUMES_HANG_MS","rawDfVols","dfWin","dfPosix","dfVols","addRemoteVolumeInfoWin","addRemoteVolumeInfoPosix","addLocalVolumeInfoMac","addLocalVolumeInfoLinux","addVolumeUUIDs","rootPath","mounts","mount","volumeSha","volumeUuidSubpath","safeUUID","CussNativePath","loadCuss","words","cussTrie","asTrie","trie","small","TriePrefixLength","getCuss","naughtyWords","stripEmoji","unl33t","smol","bad","isCussy","a2l","l2a","origPrefix","prefixes","suffixes","suff","cpus","quota","intFromFileSync","period","shares","estimatedFreeMem","freemem","totalmem","mem","newPausedValue","clearMaxWorkCaches","timeoutRate","maxProcsForMem","worstCaseMemPerProc","MB","estFreeMemMb","worstCaseMemPerProcMb","timeoutPenalization","timeoutsPerMinute","targetCpuLoadPct","cpuPortion","timeoutsPerSecond","penalization","resultBeforePenalization","resultAfterPenalization","cpuLoadPct","lerp2d","refreshEveryMinute","rateStats","toPrimitive","isPrimitiveArray","eqlArray","keepIfTrue","toIndex","step","needles","vArr","cmp_","notBlankish","strings","equals","expense","allowedDelta","newPos","currentExpense","newExpense","finalJoin","destination","deepSortBy","isIterable","onRetryWaitUntil","retry","retryCount","ifBlank","BlankishRE","blankish","monthMs","shortDateTimeFormat","Intl","DateTimeFormat","minute","second","shortDateFormat","toDate","fmtDateShort","getHours","getMinutes","getSeconds","hms","includeMs","millis","pad3","localToDate","local","pop2","millisecond","setHours","fmtElapsedMs","plur","dateParts","timeParts","toFixedStr","type_detect","memoizeCompare","leftHandOperand","rightHandOperand","memoizeMap","memoizeSet","leftHandMap","WeakMap","_deepEqual","comparator","extensiveDeepEqual","simpleResult","simpleEqual","memoizeResultLeft","memoizeResultRight","comparatorResult","leftHandType","keysEqual","iterableEqual","regexpEqual","getGeneratorEntries","generatorEqual","Uint8Array","leftHandItems","rightHandItems","entriesEqual","objectEqual","extensiveDeepEqualByType","getIteratorEntries","hasIteratorFunction","iteratorError","generator","generatorResult","accumulator","getEnumerableKeys","getEnumerableSymbols","allKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","enumerable","leftHandKeys","rightHandKeys","mapSymbols","leftHandEntries","rightHandEntries","isNode","isBrowser","dateComparator","functionComparator","deepEql","objComparators","fieldComparators","FramesToIgnoreRE","errorToArr","maxLines","assignFields","largestUnitIndex","remaining","singular","plural","fmtList","joinWord","FitSizeValues","SqSizes","SqWidths","space","decycle","stringifyPretty","indent","Revivers","addJsonRevivers","parseJSON_","retrocycle","reviver","dateToJson","errorToJson","derez","nu","_value","$ref","prototype","hasOwnProperty","call","$","px","rez","eval","errorFromJson","_state","_resolve","_reject","onfinally","Lazy","t1","t2","t3","valueCount","addUniq","pushUniq","_k","flatValues","tuples","findKeyByTuple","filterKeysByTuple","groupBy","globalThis","window","document","node","isNaN","numeralRE","nonNumericRE","isBigInt","mapPredicate","lte","isToNumber","toNumber","nton","MIN_SAFE_INTEGER","ston","toPrecision","decimalPlaces","numerator","denominator","minCoeff","expected","mustBeGreaterThan","orElseF","decimals","fractionDigits","toFixed","exp","log10","rnd","_factorials","factorial","Infinity","notEmptyObj","pairs","mapFields","isReqValued","block","omitKeys","assignNullish","srcKeys","compactValuesDeep","keyNames","pickDeep","flat","deepKeysByLocalField","keysToOmit","methods","Reflect","getPrototypeOf","ownKeys","method","lckey","flattenObject","NoneImpl","noop","zip1","zip2","zip3","None","Some","isOpt","ec","ed","pads","char","padNumeric","irregular","es","consonant_y","vowel_y","is","irr","primitiveTypes","TypeLevel","a_str","b_str","CmpReverseFlag","cmpArr","shorterArrayIsLessThan","eaP","ifTrue","rndInt","random","randomInts","excludeSet","slotsRemaining","candidate","randomChar","RandomChars","trueRatio","NumericChars","LowercaseChars","nonZeroes","rand","pattern","valueToIndex","dict","ordinal","mapValid","a_","b_","isBMP","codePointAt","_graphemeSegmenter","graphemeSegmenter","Segmenter","granularity","sliceIterable","segment","charArr","pfx","leftIndexOf","countIterable","stripPrefixes","leftSliceAt","rightSliceAt","searchValue","replaceValue","fmtHMS","timeoutAtTs","PS_LIBRARY_PROTOCOL","PS_LOCAL_FILE_PROTOCOL","PS_NETWORK_FILESYSTEM_PROTOCOL","PS_EXAMPLES_SCHEME","isURLSearchParams","URLSearchParams","mergeURLSearchParams","params","queries","numberFormat","NumberFormat","fmt","thousandsSep","replaceAll","decimalSep","TB","GiB","TiB","byteUnits","mebiUnits","mag","megabytes","MP","pixels","SizeDescriptions","objs","toStr","DefaultToString","joinChar","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}